#lang rosette

(require rosette/lib/synthax)
(require rosette/lib/angelic)
(require racket/pretty)
(require hydride)
(require errortrace)


(define (get-halide-result env)
  (define reg_0 (halide:create-buffer (vector-ref env 0) 'int32))
  (define reg_1 (halide:create-buffer (vector-ref env 1) 'int8))
  (define reg_2 (halide:create-buffer (vector-ref env 2) 'int8))

  (define halide-expr 
 (vec-tile_matmul
  ;;; (int-imm (bv 16 32) #t)
  ;;; (int-imm (bv 64 32) #t)
  ;;; (int-imm (bv 16 32) #t)
  16
  64
  64
  reg_0
  reg_1
  reg_2)
)

  (halide:assemble-bitvector (halide:interpret halide-expr) (halide:vec-len halide-expr))
  
  )


(define v1 (?? (bitvector 8192)))
(define v2 (?? (bitvector 8192)))
(define v3 (?? (bitvector 8192)))

;; comment these lines below for testing verification
(set! v1 (bv #x904ba4869d16b1a567067f388d9092d779789196c18afffdc0fff33b1b08e3855401355c815393d5551b953753f97ff9fa554975e8f5663c8bedf1d1b197d300f8d76020e528106094de812dd4fa41934b6f7257ea6380009cc440078000ffee18207d7f042c553ecb93cf576293d878c2d17a19fa40ff47f92e17ce2727c41d904ba4869d16b1a567067f388d9092d779789196c18afffdc0fff33b1b08e3855401355c815393d5551b953753f97ff9fa554975e8f5663c8bedf1d1b197d300f8d76020e528106094de812dd4fa41934b6f7257ea6380009cc440078000ffee18207d7f042c553ecb93cf576293d878c2d17a19fa40ff47f92e17ce2727c41d904ba4869d16b1a567067f388d9092d779789196c18afffdc0fff33b1b08e3855401355c815393d5551b953753f97ff9fa554975e8f5663c8bedf1d1b197d300f8d76020e528106094de812dd4fa41934b6f7257ea6380009cc440078000ffee18207d7f042c553ecb93cf576293d878c2d17a19fa40ff47f92e17ce2727c41d904ba4869d16b1a567067f388d9092d779789196c18afffdc0fff33b1b08e3855401355c815393d5551b953753f97ff9fa554975e8f5663c8bedf1d1b197d300f8d76020e528106094de812dd4fa41934b6f7257ea6380009cc440078000ffee18207d7f042c553ecb93cf576293d878c2d17a19fa40ff47f92e17ce2727c41d904ba4869d16b1a567067f388d9092d779789196c18afffdc0fff33b1b08e3855401355c815393d5551b953753f97ff9fa554975e8f5663c8bedf1d1b197d300f8d76020e528106094de812dd4fa41934b6f7257ea6380009cc440078000ffee18207d7f042c553ecb93cf576293d878c2d17a19fa40ff47f92e17ce2727c41d904ba4869d16b1a567067f388d9092d779789196c18afffdc0fff33b1b08e3855401355c815393d5551b953753f97ff9fa554975e8f5663c8bedf1d1b197d300f8d76020e528106094de812dd4fa41934b6f7257ea6380009cc440078000ffee18207d7f042c553ecb93cf576293d878c2d17a19fa40ff47f92e17ce2727c41d904ba4869d16b1a567067f388d9092d779789196c18afffdc0fff33b1b08e3855401355c815393d5551b953753f97ff9fa554975e8f5663c8bedf1d1b197d300f8d76020e528106094de812dd4fa41934b6f7257ea6380009cc440078000ffee18207d7f042c553ecb93cf576293d878c2d17a19fa40ff47f92e17ce2727c41d904ba4869d16b1a567067f388d9092d779789196c18afffdc0fff33b1b08e3855401355c815393d5551b953753f97ff9fa554975e8f5663c8bedf1d1b197d300f8d76020e528106094de812dd4fa41934b6f7257ea6380009cc440078000ffee18207d7f042c553ecb93cf576293d878c2d17a19fa40ff47f92e17ce2727c41d 8192))
(set! v2 (bv #x904ba4869d16b1a567067f388d9092d779789196c18afffdc0fff33b1b08e3855401355c815393d5551b953753f97ff9fa554975e8f5663c8bedf1d1b197d300f8d76020e528106094de812dd4fa41934b6f7257ea6380009cc440078000ffee18207d7f042c553ecb93cf576293d878c2d17a19fa40ff47f92e17ce2727c41d904ba4869d16b1a567067f388d9092d779789196c18afffdc0fff33b1b08e3855401355c815393d5551b953753f97ff9fa554975e8f5663c8bedf1d1b197d300f8d76020e528106094de812dd4fa41934b6f7257ea6380009cc440078000ffee18207d7f042c553ecb93cf576293d878c2d17a19fa40ff47f92e17ce2727c41d904ba4869d16b1a567067f388d9092d779789196c18afffdc0fff33b1b08e3855401355c815393d5551b953753f97ff9fa554975e8f5663c8bedf1d1b197d300f8d76020e528106094de812dd4fa41934b6f7257ea6380009cc440078000ffee18207d7f042c553ecb93cf576293d878c2d17a19fa40ff47f92e17ce2727c41d904ba4869d16b1a567067f388d9092d779789196c18afffdc0fff33b1b08e3855401355c815393d5551b953753f97ff9fa554975e8f5663c8bedf1d1b197d300f8d76020e528106094de812dd4fa41934b6f7257ea6380009cc440078000ffee18207d7f042c553ecb93cf576293d878c2d17a19fa40ff47f92e17ce2727c41d904ba4869d16b1a567067f388d9092d779789196c18afffdc0fff33b1b08e3855401355c815393d5551b953753f97ff9fa554975e8f5663c8bedf1d1b197d300f8d76020e528106094de812dd4fa41934b6f7257ea6380009cc440078000ffee18207d7f042c553ecb93cf576293d878c2d17a19fa40ff47f92e17ce2727c41d904ba4869d16b1a567067f388d9092d779789196c18afffdc0fff33b1b08e3855401355c815393d5551b953753f97ff9fa554975e8f5663c8bedf1d1b197d300f8d76020e528106094de812dd4fa41934b6f7257ea6380009cc440078000ffee18207d7f042c553ecb93cf576293d878c2d17a19fa40ff47f92e17ce2727c41d904ba4869d16b1a567067f388d9092d779789196c18afffdc0fff33b1b08e3855401355c815393d5551b953753f97ff9fa554975e8f5663c8bedf1d1b197d300f8d76020e528106094de812dd4fa41934b6f7257ea6380009cc440078000ffee18207d7f042c553ecb93cf576293d878c2d17a19fa40ff47f92e17ce2727c41d904ba4869d16b1a567067f388d9092d779789196c18afffdc0fff33b1b08e3855401355c815393d5551b953753f97ff9fa554975e8f5663c8bedf1d1b197d300f8d76020e528106094de812dd4fa41934b6f7257ea6380009cc440078000ffee18207d7f042c553ecb93cf576293d878c2d17a19fa40ff47f92e17ce2727c41d 8192))
(set! v3 (bv #x904ba4869d16b1a567067f388d9092d779789196c18afffdc0fff33b1b08e3855401355c815393d5551b953753f97ff9fa554975e8f5663c8bedf1d1b197d300f8d76020e528106094de812dd4fa41934b6f7257ea6380009cc440078000ffee18207d7f042c553ecb93cf576293d878c2d17a19fa40ff47f92e17ce2727c41d904ba4869d16b1a567067f388d9092d779789196c18afffdc0fff33b1b08e3855401355c815393d5551b953753f97ff9fa554975e8f5663c8bedf1d1b197d300f8d76020e528106094de812dd4fa41934b6f7257ea6380009cc440078000ffee18207d7f042c553ecb93cf576293d878c2d17a19fa40ff47f92e17ce2727c41d904ba4869d16b1a567067f388d9092d779789196c18afffdc0fff33b1b08e3855401355c815393d5551b953753f97ff9fa554975e8f5663c8bedf1d1b197d300f8d76020e528106094de812dd4fa41934b6f7257ea6380009cc440078000ffee18207d7f042c553ecb93cf576293d878c2d17a19fa40ff47f92e17ce2727c41d904ba4869d16b1a567067f388d9092d779789196c18afffdc0fff33b1b08e3855401355c815393d5551b953753f97ff9fa554975e8f5663c8bedf1d1b197d300f8d76020e528106094de812dd4fa41934b6f7257ea6380009cc440078000ffee18207d7f042c553ecb93cf576293d878c2d17a19fa40ff47f92e17ce2727c41d904ba4869d16b1a567067f388d9092d779789196c18afffdc0fff33b1b08e3855401355c815393d5551b953753f97ff9fa554975e8f5663c8bedf1d1b197d300f8d76020e528106094de812dd4fa41934b6f7257ea6380009cc440078000ffee18207d7f042c553ecb93cf576293d878c2d17a19fa40ff47f92e17ce2727c41d904ba4869d16b1a567067f388d9092d779789196c18afffdc0fff33b1b08e3855401355c815393d5551b953753f97ff9fa554975e8f5663c8bedf1d1b197d300f8d76020e528106094de812dd4fa41934b6f7257ea6380009cc440078000ffee18207d7f042c553ecb93cf576293d878c2d17a19fa40ff47f92e17ce2727c41d904ba4869d16b1a567067f388d9092d779789196c18afffdc0fff33b1b08e3855401355c815393d5551b953753f97ff9fa554975e8f5663c8bedf1d1b197d300f8d76020e528106094de812dd4fa41934b6f7257ea6380009cc440078000ffee18207d7f042c553ecb93cf576293d878c2d17a19fa40ff47f92e17ce2727c41d904ba4869d16b1a567067f388d9092d779789196c18afffdc0fff33b1b08e3855401355c815393d5551b953753f97ff9fa554975e8f5663c8bedf1d1b197d300f8d76020e528106094de812dd4fa41934b6f7257ea6380009cc440078000ffee18207d7f042c553ecb93cf576293d878c2d17a19fa40ff47f92e17ce2727c41d 8192))
(define env (vector v1 v2 v3))


(printf "V1: \n")
(print-mat v1 16 64 8)


(printf "V2: \n")
(print-mat v2 16 64 8)
(printf "V3: \n")
(print-mat v3 16 16 32)



(define halide-result (get-halide-result env))
(printf "\nHalide Result:\t~a\n" halide-result)
(print-mat halide-result 16 16 32)
;;; (define hydride-result (get-hydride-result env))
;;; (printf "\nHydride Result:\t~a\n" hydride-result)
;;; (print-mat hydride-result 1 64 16)

;;; (printf "\nEqual? ~a\n" (equal? halide-result hydride-result))

;;; (cond
;;;   [(not (equal? halide-result hydride-result))
;;;    (for/list ([i (range 64)])
;;;              (define low (* i 16))
;;;              (define high (+ low 15))

;;;              (define halide-i (extract high low halide-result))
;;;              (define hydride-i (extract high low hydride-result))

;;;              (printf "Element ~a equal?:\t ~a\n" i (equal? halide-i hydride-i))

;;;              (cond 
;;;                [(not (equal? halide-i hydride-i))
;;;                 (printf "   Halide: ~a , Hydride: ~a\n" halide-i hydride-i)
;;;                 (printf "   Halide: ~a , Hydride: ~a\n" (bitvector->integer halide-i) (bitvector->integer hydride-i))
                
;;;                 ]
;;;                )

             
             
;;;              )
   
;;;    ]
;;;   )

;;; (define cex
;;;   (verify
;;;     (assert (equal? halide-result hydride-result))
;;;     )
  
;;;   )

;;; (println cex)
;;; (cond 
;;;   [(unsat? cex) (exit)]
  
;;;   )

;;; (printf "(set! v1 ~a)\n" (evaluate v1 cex))
;;; (printf "(set! v2 ~a)\n" (evaluate v2 cex))