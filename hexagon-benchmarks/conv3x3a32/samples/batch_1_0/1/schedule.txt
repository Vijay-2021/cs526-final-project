// --- BEGIN machine-generated schedule
Func output = get_pipeline().get_func(5);
Func input_bounded = get_pipeline().get_func(3);
Func repeat_edge = get_pipeline().get_func(2);
Func lambda_0 = get_pipeline().get_func(1);
Var _0(repeat_edge.get_schedule().dims()[0].var), _0i("_0i"), _1(repeat_edge.get_schedule().dims()[1].var), x(output.get_schedule().dims()[0].var), xi("xi"), y(output.get_schedule().dims()[1].var), yi("yi"), yii("yii");
output
    .split(y, y, yi, 32, TailStrategy::ShiftInwards)
    .split(yi, yi, yii, 16, TailStrategy::ShiftInwards)
    .split(x, x, xi, 64, TailStrategy::ShiftInwards)
    .vectorize(xi)
    .compute_root()
    .reorder(xi, x, yii, yi, y)
    .parallel(y);
repeat_edge
    .store_in(MemoryType::Stack)
    .split(_0, _0, _0i, 64, TailStrategy::ShiftInwards)
    .vectorize(_0i)
    .compute_at(output, yi)
    .reorder(_0i, _0, _1);
// --- END machine-generated schedule
