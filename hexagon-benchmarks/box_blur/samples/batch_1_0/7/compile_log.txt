Registering autoscheduler...
Dropout seed = 107
Node: blur_y
  Symbolic region required: 
    blur_y.x.min, blur_y.x.max
    blur_y.y.min, blur_y.y.max
  Region computed: 
    blur_y.x.min, blur_y.x.max
    blur_y.y.min, blur_y.y.max
  Stage 0:
    x blur_y.x.min blur_y.x.max
    y blur_y.y.min blur_y.y.max
    Featurization for type UInt16
     Op histogram:
      Constant:   1
      Cast:       0
      Variable:   0
      Param:      0
      Add:        2
      Sub:        0
      Mod:        0
      Mul:        0
      Div:        1
      Min:        0
      Max:        0
      EQ:         0
      NE:         0
      LT:         0
      LE:         0
      And:        0
      Or:         0
      Not:        0
      Select:     0
      ImageCall:  0
      FuncCall:   3
      SelfCall:   0
      ExternCall: 0
      Let:        0
     Memory access patterns. Columns are calls to other Funcs, self-calls, input image access, and stores
      Pointwise:      3 0 0 1
      Transpose:      3 0 0 1
      Broadcast:      3 0 0 1
      Slice:          3 0 0 1
    Featurization for type UInt32
     Op histogram:
      Constant:   2
      Cast:       0
      Variable:   8
      Param:      0
      Add:        2
      Sub:        0
      Mod:        0
      Mul:        0
      Div:        0
      Min:        0
      Max:        0
      EQ:         0
      NE:         0
      LT:         0
      LE:         0
      And:        0
      Or:         0
      Not:        0
      Select:     0
      ImageCall:  0
      FuncCall:   0
      SelfCall:   0
      ExternCall: 0
      Let:        0
     Memory access patterns. Columns are calls to other Funcs, self-calls, input image access, and stores
      Pointwise:      0 0 0 0
      Transpose:      0 0 0 0
      Broadcast:      0 0 0 0
      Slice:          0 0 0 0
  pointwise: 0 boundary condition: 0 wrapper: 0 input: 0 output: 1
Node: blur_x
  Symbolic region required: 
    blur_x.x.min, blur_x.x.max
    blur_x.y.min, blur_x.y.max
  Region computed: 
    blur_x.x.min, blur_x.x.max
    blur_x.y.min, blur_x.y.max
  Stage 0:
    x blur_x.x.min blur_x.x.max
    y blur_x.y.min blur_x.y.max
    Featurization for type UInt16
     Op histogram:
      Constant:   1
      Cast:       0
      Variable:   0
      Param:      0
      Add:        2
      Sub:        0
      Mod:        0
      Mul:        0
      Div:        1
      Min:        0
      Max:        0
      EQ:         0
      NE:         0
      LT:         0
      LE:         0
      And:        0
      Or:         0
      Not:        0
      Select:     0
      ImageCall:  0
      FuncCall:   3
      SelfCall:   0
      ExternCall: 0
      Let:        0
     Memory access patterns. Columns are calls to other Funcs, self-calls, input image access, and stores
      Pointwise:      3 0 0 1
      Transpose:      3 0 0 1
      Broadcast:      3 0 0 1
      Slice:          3 0 0 1
    Featurization for type UInt32
     Op histogram:
      Constant:   2
      Cast:       0
      Variable:   8
      Param:      0
      Add:        2
      Sub:        0
      Mod:        0
      Mul:        0
      Div:        0
      Min:        0
      Max:        0
      EQ:         0
      NE:         0
      LT:         0
      LE:         0
      And:        0
      Or:         0
      Not:        0
      Select:     0
      ImageCall:  0
      FuncCall:   0
      SelfCall:   0
      ExternCall: 0
      Let:        0
     Memory access patterns. Columns are calls to other Funcs, self-calls, input image access, and stores
      Pointwise:      0 0 0 0
      Transpose:      0 0 0 0
      Broadcast:      0 0 0 0
      Slice:          0 0 0 0
  pointwise: 0 boundary condition: 0 wrapper: 0 input: 0 output: 0
Node: repeat_edge
  Symbolic region required: 
    repeat_edge._0.min, repeat_edge._0.max
    repeat_edge._1.min, repeat_edge._1.max
  Region computed: 
    repeat_edge._0.min, repeat_edge._0.max
    repeat_edge._1.min, repeat_edge._1.max
  Stage 0:
    _0 repeat_edge._0.min repeat_edge._0.max
    _1 repeat_edge._1.min repeat_edge._1.max
    Featurization for type UInt16
     Op histogram:
      Constant:   0
      Cast:       0
      Variable:   0
      Param:      0
      Add:        0
      Sub:        0
      Mod:        0
      Mul:        0
      Div:        0
      Min:        0
      Max:        0
      EQ:         0
      NE:         0
      LT:         0
      LE:         0
      And:        0
      Or:         0
      Not:        0
      Select:     0
      ImageCall:  0
      FuncCall:   1
      SelfCall:   0
      ExternCall: 0
      Let:        0
     Memory access patterns. Columns are calls to other Funcs, self-calls, input image access, and stores
      Pointwise:      0 0 0 1
      Transpose:      0 0 0 1
      Broadcast:      0 0 0 1
      Slice:          0 0 0 1
    Featurization for type UInt32
     Op histogram:
      Constant:   2
      Cast:       0
      Variable:   4
      Param:      6
      Add:        4
      Sub:        0
      Mod:        0
      Mul:        0
      Div:        0
      Min:        2
      Max:        2
      EQ:         0
      NE:         0
      LT:         0
      LE:         0
      And:        0
      Or:         0
      Not:        0
      Select:     0
      ImageCall:  0
      FuncCall:   0
      SelfCall:   0
      ExternCall: 2
      Let:        0
     Memory access patterns. Columns are calls to other Funcs, self-calls, input image access, and stores
      Pointwise:      0 0 0 0
      Transpose:      0 0 0 0
      Broadcast:      0 0 0 0
      Slice:          0 0 0 0
  pointwise: 0 boundary condition: 1 wrapper: 0 input: 0 output: 0
Node: lambda_0
  Symbolic region required: 
    lambda_0._0.min, lambda_0._0.max
    lambda_0._1.min, lambda_0._1.max
  Region computed: 
    lambda_0._0.min, lambda_0._0.max
    lambda_0._1.min, lambda_0._1.max
  Stage 0:
    _0 lambda_0._0.min lambda_0._0.max
    _1 lambda_0._1.min lambda_0._1.max
    Featurization for type UInt16
     Op histogram:
      Constant:   0
      Cast:       0
      Variable:   0
      Param:      0
      Add:        0
      Sub:        0
      Mod:        0
      Mul:        0
      Div:        0
      Min:        0
      Max:        0
      EQ:         0
      NE:         0
      LT:         0
      LE:         0
      And:        0
      Or:         0
      Not:        0
      Select:     0
      ImageCall:  0
      FuncCall:   1
      SelfCall:   0
      ExternCall: 0
      Let:        0
     Memory access patterns. Columns are calls to other Funcs, self-calls, input image access, and stores
      Pointwise:      1 0 0 1
      Transpose:      1 0 0 1
      Broadcast:      1 0 0 1
      Slice:          1 0 0 1
    Featurization for type UInt32
     Op histogram:
      Constant:   0
      Cast:       0
      Variable:   4
      Param:      0
      Add:        0
      Sub:        0
      Mod:        0
      Mul:        0
      Div:        0
      Min:        0
      Max:        0
      EQ:         0
      NE:         0
      LT:         0
      LE:         0
      And:        0
      Or:         0
      Not:        0
      Select:     0
      ImageCall:  0
      FuncCall:   0
      SelfCall:   0
      ExternCall: 0
      Let:        0
     Memory access patterns. Columns are calls to other Funcs, self-calls, input image access, and stores
      Pointwise:      0 0 0 0
      Transpose:      0 0 0 0
      Broadcast:      0 0 0 0
      Slice:          0 0 0 0
  pointwise: 1 boundary condition: 0 wrapper: 1 input: 0 output: 0
Node: input_im
  Symbolic region required: 
    input_im._0.min, input_im._0.max
    input_im._1.min, input_im._1.max
  Region computed: 
    input_im._0.min, input_im._0.max
    input_im._1.min, input_im._1.max
  Stage 0:
    _0 input_im._0.min input_im._0.max
    _1 input_im._1.min input_im._1.max
    Featurization for type UInt16
     Op histogram:
      Constant:   0
      Cast:       0
      Variable:   0
      Param:      0
      Add:        0
      Sub:        0
      Mod:        0
      Mul:        0
      Div:        0
      Min:        0
      Max:        0
      EQ:         0
      NE:         0
      LT:         0
      LE:         0
      And:        0
      Or:         0
      Not:        0
      Select:     0
      ImageCall:  1
      FuncCall:   0
      SelfCall:   0
      ExternCall: 0
      Let:        0
     Memory access patterns. Columns are calls to other Funcs, self-calls, input image access, and stores
      Pointwise:      0 0 1 1
      Transpose:      0 0 1 1
      Broadcast:      0 0 1 1
      Slice:          0 0 1 1
    Featurization for type UInt32
     Op histogram:
      Constant:   0
      Cast:       0
      Variable:   4
      Param:      0
      Add:        0
      Sub:        0
      Mod:        0
      Mul:        0
      Div:        0
      Min:        0
      Max:        0
      EQ:         0
      NE:         0
      LT:         0
      LE:         0
      And:        0
      Or:         0
      Not:        0
      Select:     0
      ImageCall:  0
      FuncCall:   0
      SelfCall:   0
      ExternCall: 0
      Let:        0
     Memory access patterns. Columns are calls to other Funcs, self-calls, input image access, and stores
      Pointwise:      0 0 0 0
      Transpose:      0 0 0 0
      Broadcast:      0 0 0 0
      Slice:          0 0 0 0
  pointwise: 1 boundary condition: 0 wrapper: 1 input: 1 output: 0
Edge: blur_x -> blur_y
  Footprint: 
    Min 0: blur_y.x.min
    Max 0: blur_y.x.max
    Min 1: blur_y.y.min
    Max 1: (blur_y.y.max + 2)
  Load Jacobians:
  3 x
    [ 1   0  ]
    [ 0   1  ]

Edge: repeat_edge -> blur_x
  Footprint: 
    Min 0: blur_x.x.min
    Max 0: (blur_x.x.max + 2)
    Min 1: blur_x.y.min
    Max 1: blur_x.y.max
  Load Jacobians:
  3 x
    [ 1   0  ]
    [ 0   1  ]

Edge: lambda_0 -> repeat_edge
  Footprint: 
    Min 0: max(min(repeat_edge._0.min, 6407), 0)
    Max 0: max(min(repeat_edge._0.max, 6407), 0)
    Min 1: max(min(repeat_edge._1.min, 4801), 0)
    Max 1: max(min(repeat_edge._1.max, 4801), 0)
  Load Jacobians:
    [ _   0  ]
    [ 0   _  ]

Edge: input_im -> lambda_0
  Footprint: 
    Min 0: lambda_0._0.min
    Max 0: lambda_0._0.max
    Min 1: lambda_0._1.min
    Max 1: lambda_0._1.max
  Load Jacobians:
    [ 1   0  ]
    [ 0   1  ]


Pass 0 result:
State with cost 6.814825:

realize: blur_y
blur_y 1 64 (0, 0) t p
 blur_y 1 2c (0, 0) t
  realize: repeat_edge
  blur_y 1 10c (0, 0)
   repeat_edge 201 6c (0, 0) t
    repeat_edge 32vc 1c (0, 0) *
     inlined: lambda_0 1
   blur_y 101 1c (0, 0) t
    realize: blur_x
    blur_x 2c 6c (0, 0) t
     blur_x 32vc 1c (0, 0) *
    blur_y 2c 4c (0, 0) t
     blur_y 32vc 1c (0, 0) *
Best cost: 6.814825
AutoSchedule.cpp:3157 ... AutoSchedule.cpp:3217 : 23.343001 ms
Cost evaluated this many times: 396
** Optimal schedule:
Schedule features for blur_y
    num_realizations:                      1.000000
    num_productions:                       1.000000
    points_computed_per_realization:       30771216.000000
    points_computed_per_production:        33095680.000000
    points_computed_total:                 30771216.000000
    points_computed_minimum:               30771216.000000
    innermost_loop_extent:                 8.000000
    innermost_pure_loop_extent:            8.000000
    unrolled_loop_extent:                  8.000000
    inner_parallelism:                     64.000000
    outer_parallelism:                     1.000000
    bytes_at_realization:                  61542432.000000
    bytes_at_production:                   61542432.000000
    bytes_at_root:                         61542432.000000
    innermost_bytes_at_realization:        12816.000000
    innermost_bytes_at_production:         12816.000000
    innermost_bytes_at_root:               12816.000000
    inlined_calls:                         0.000000
    unique_bytes_read_per_realization:     768.000000
    unique_lines_read_per_realization:     6.000000
    allocation_bytes_read_per_realization: 768.000000
    working_set:                           77688.000000
    vector_size:                           32.000000
    native_vector_size:                    32.000000
    num_vectors:                           960400.000000
    num_scalars:                           38416.000000
    scalar_loads_per_vector:               0.000000
    vector_loads_per_vector:               3.000000
    scalar_loads_per_scalar:               3.000000
    bytes_at_task:                         961200.000000
    innermost_bytes_at_task:               12816.000000
    unique_bytes_read_per_vector:          192.000000
    unique_lines_read_per_vector:          3.000000
    unique_bytes_read_per_task:            999648.000000
    unique_lines_read_per_task:            78.000000
    working_set_at_task:                   77688.000000
    working_set_at_production:             61620120.000000
    working_set_at_realization:            61620120.000000
    working_set_at_root:                   61620120.000000
Schedule features for blur_x
    num_realizations:                      129280.000000
    num_productions:                       129280.000000
    points_computed_per_realization:       384.000000
    points_computed_per_production:        384.000000
    points_computed_total:                 49643520.000000
    points_computed_minimum:               30784032.000000
    innermost_loop_extent:                 12.000000
    innermost_pure_loop_extent:            12.000000
    unrolled_loop_extent:                  12.000000
    inner_parallelism:                     1.000000
    outer_parallelism:                     64.000000
    bytes_at_realization:                  768.000000
    bytes_at_production:                   768.000000
    bytes_at_root:                         61568064.000000
    innermost_bytes_at_realization:        128.000000
    innermost_bytes_at_production:         128.000000
    innermost_bytes_at_root:               12816.000000
    inlined_calls:                         0.000000
    unique_bytes_read_per_realization:     792.000000
    unique_lines_read_per_realization:     6.000000
    allocation_bytes_read_per_realization: 76920.000000
    working_set:                           0.000000
    vector_size:                           32.000000
    native_vector_size:                    32.000000
    num_vectors:                           1551360.000000
    num_scalars:                           0.000000
    scalar_loads_per_vector:               0.000000
    vector_loads_per_vector:               3.000000
    scalar_loads_per_scalar:               3.000000
    bytes_at_task:                         768.000000
    innermost_bytes_at_task:               128.000000
    unique_bytes_read_per_vector:          68.000000
    unique_lines_read_per_vector:          1.000000
    unique_bytes_read_per_task:            0.000000
    unique_lines_read_per_task:            0.000000
    working_set_at_task:                   77688.000000
    working_set_at_production:             768.000000
    working_set_at_realization:            768.000000
    working_set_at_root:                   61620120.000000
Schedule features for repeat_edge
    num_realizations:                      128.000000
    num_productions:                       1280.000000
    points_computed_per_realization:       256400.000000
    points_computed_per_production:        38592.000000
    points_computed_total:                 32819200.000000
    points_computed_minimum:               30793640.000000
    innermost_loop_extent:                 1206.000000
    innermost_pure_loop_extent:            1206.000000
    unrolled_loop_extent:                  1.000000
    inner_parallelism:                     1.000000
    outer_parallelism:                     64.000000
    bytes_at_realization:                  512800.000000
    bytes_at_production:                   76920.000000
    bytes_at_root:                         61587280.000000
    innermost_bytes_at_realization:        12820.000000
    innermost_bytes_at_production:         12820.000000
    innermost_bytes_at_root:               12820.000000
    inlined_calls:                         0.000000
    unique_bytes_read_per_realization:     512640.000000
    unique_lines_read_per_realization:     40.000000
    allocation_bytes_read_per_realization: 61542432.000000
    working_set:                           0.000000
    vector_size:                           32.000000
    native_vector_size:                    32.000000
    num_vectors:                           1024000.000000
    num_scalars:                           51200.000000
    scalar_loads_per_vector:               32.000000
    vector_loads_per_vector:               0.000000
    scalar_loads_per_scalar:               1.000000
    bytes_at_task:                         512800.000000
    innermost_bytes_at_task:               12820.000000
    unique_bytes_read_per_vector:          64.000000
    unique_lines_read_per_vector:          1.000000
    unique_bytes_read_per_task:            0.000000
    unique_lines_read_per_task:            0.000000
    working_set_at_task:                   77688.000000
    working_set_at_production:             768.000000
    working_set_at_realization:            77688.000000
    working_set_at_root:                   61620120.000000
Schedule features for lambda_0
    num_realizations:                      0.000000
    num_productions:                       0.000000
    points_computed_per_realization:       0.000000
    points_computed_per_production:        0.000000
    points_computed_total:                 0.000000
    points_computed_minimum:               30771216.000000
    innermost_loop_extent:                 0.000000
    innermost_pure_loop_extent:            1206.000000
    unrolled_loop_extent:                  0.000000
    inner_parallelism:                     1.000000
    outer_parallelism:                     64.000000
    bytes_at_realization:                  0.000000
    bytes_at_production:                   0.000000
    bytes_at_root:                         61542432.000000
    innermost_bytes_at_realization:        0.000000
    innermost_bytes_at_production:         0.000000
    innermost_bytes_at_root:               12816.000000
    inlined_calls:                         49397760.000000
    unique_bytes_read_per_realization:     0.000000
    unique_lines_read_per_realization:     0.000000
    allocation_bytes_read_per_realization: 0.000000
    working_set:                           0.000000
    vector_size:                           32.000000
    native_vector_size:                    32.000000
    num_vectors:                           1024000.000000
    num_scalars:                           51200.000000
    scalar_loads_per_vector:               0.000000
    vector_loads_per_vector:               0.000000
    scalar_loads_per_scalar:               0.000000
    bytes_at_task:                         0.000000
    innermost_bytes_at_task:               0.000000
    unique_bytes_read_per_vector:          0.000000
    unique_lines_read_per_vector:          0.000000
    unique_bytes_read_per_task:            0.000000
    unique_lines_read_per_task:            0.000000
    working_set_at_task:                   0.000000
    working_set_at_production:             0.000000
    working_set_at_realization:            0.000000
    working_set_at_root:                   61620120.000000
State with cost 0.000000:

realize: blur_y
blur_y 1 64 (0, 0) t p
 blur_y 1 2c (0, 0) t
  realize: repeat_edge
  blur_y 1 10c (0, 0)
   repeat_edge 201 6c (0, 0) t
    repeat_edge 32vc 1c (0, 0) *
     inlined: lambda_0 1
   blur_y 101 1c (0, 0) t
    realize: blur_x
    blur_x 2c 6c (0, 0) t
     blur_x 32vc 1c (0, 0) *
    blur_y 2c 4c (0, 0) t
     blur_y 32vc 1c (0, 0) *
Func blur_y = get_pipeline().get_func(4);
Func blur_x = get_pipeline().get_func(3);
Func repeat_edge = get_pipeline().get_func(2);
Func lambda_0 = get_pipeline().get_func(1);
Var _0(repeat_edge.get_schedule().dims()[0].var), _0i("_0i"), _1(repeat_edge.get_schedule().dims()[1].var), x(blur_y.get_schedule().dims()[0].var), xi("xi"), xii("xii"), y(blur_y.get_schedule().dims()[1].var), yi("yi"), yii("yii"), yiii("yiii");
blur_y
    .split(y, y, yi, 76, TailStrategy::ShiftInwards)
    .split(yi, yi, yii, 38, TailStrategy::ShiftInwards)
    .split(yii, yii, yiii, 4, TailStrategy::ShiftInwards)
    .split(x, x, xi, 64, TailStrategy::ShiftInwards)
    .split(xi, xi, xii, 32, TailStrategy::ShiftInwards)
    .unroll(xi)
    .unroll(yiii)
    .vectorize(xii)
    .compute_root()
    .reorder(xii, xi, yiii, x, yii, yi, y)
    .parallel(y);
blur_x
    .store_in(MemoryType::Stack)
    .split(x, x, xi, 32, TailStrategy::RoundUp)
    .unroll(x)
    .unroll(y)
    .vectorize(xi)
    .compute_at(blur_y, x)
    .reorder(xi, x, y);
repeat_edge
    .split(_0, _0, _0i, 32, TailStrategy::ShiftInwards)
    .vectorize(_0i)
    .compute_at(blur_y, yii)
    .store_at(blur_y, yi)
    .reorder(_0i, _0, _1);
Writing schedule to /home/sb54/Hydride/hexagon-benchmarks/halide_standalone_autoscheduler/apps/autoscheduler/samples/batch_1_0/7/schedule.txt...
