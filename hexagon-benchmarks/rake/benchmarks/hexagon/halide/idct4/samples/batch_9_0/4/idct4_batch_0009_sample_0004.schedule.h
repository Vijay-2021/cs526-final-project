#ifndef idct4_batch_0009_sample_0004_SCHEDULE_H
#define idct4_batch_0009_sample_0004_SCHEDULE_H

// MACHINE GENERATED -- DO NOT EDIT
// This schedule was automatically generated by Adams2019
// for target=x86-64-linux-avx-avx2-avx512-avx512_sapphirerapids-avx512_skylake-disable_llvm_loop_opt-f16c-fma-sse41  // NOLINT
// with machine_params=10,16777216,40

#include "Halide.h"


inline void apply_schedule_idct4_batch_0009_sample_0004(
    ::Halide::Pipeline pipeline,
    ::Halide::Target target
) {
    using ::Halide::Func;
    using ::Halide::MemoryType;
    using ::Halide::RVar;
    using ::Halide::TailStrategy;
    using ::Halide::Var;
    Func output = pipeline.get_func(2);
    Func src = pipeline.get_func(1);
    Var x(output.get_schedule().dims()[0].var);
    Var xi("xi");
    Var y(output.get_schedule().dims()[1].var);
    output
        .split(x, x, xi, 32, TailStrategy::GuardWithIf)
        .vectorize(xi)
        .compute_root()
        .reorder({xi, x, y})
        .parallel(y);
    src
        .split(x, x, xi, 32, TailStrategy::GuardWithIf)
        .vectorize(xi)
        .compute_root()
        .reorder({xi, x, y})
        .parallel(y);

}

#endif  // idct4_batch_0009_sample_0004_SCHEDULE_H
