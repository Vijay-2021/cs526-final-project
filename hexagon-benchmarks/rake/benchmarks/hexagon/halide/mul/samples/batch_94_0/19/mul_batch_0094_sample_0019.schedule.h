#ifndef mul_batch_0094_sample_0019_SCHEDULE_H
#define mul_batch_0094_sample_0019_SCHEDULE_H

// MACHINE GENERATED -- DO NOT EDIT
// This schedule was automatically generated by Adams2019
// for target=x86-64-linux-avx-avx2-disable_llvm_loop_opt-f16c-fma-sse41  // NOLINT
// with machine_params=32,24000000,40

#include "Halide.h"


inline void apply_schedule_mul_batch_0094_sample_0019(
    ::Halide::Pipeline pipeline,
    ::Halide::Target target
) {
    using ::Halide::Func;
    using ::Halide::MemoryType;
    using ::Halide::RVar;
    using ::Halide::TailStrategy;
    using ::Halide::Var;
    Func output = pipeline.get_func(2);
    Var x(output.get_schedule().dims()[0].var);
    Var xi("xi");
    Var xii("xii");
    Var y(output.get_schedule().dims()[1].var);
    Var yi("yi");
    output
        .split(x, x, xi, 960, TailStrategy::ShiftInwards)
        .split(y, y, yi, 68, TailStrategy::ShiftInwards)
        .split(xi, xi, xii, 32, TailStrategy::ShiftInwards)
        .vectorize(xii)
        .compute_root()
        .reorder({xii, xi, yi, x, y})
        .fuse(x, y, x)
        .parallel(x);

}

#endif  // mul_batch_0094_sample_0019_SCHEDULE_H
