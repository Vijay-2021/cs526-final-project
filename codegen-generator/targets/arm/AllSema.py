from ARMTypes import *
from ARMAST import *
AllSema = {   'vaba_s16': ARMSema(intrin='vaba_s16', inst='SABA', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('absdiff', '26')], ('bits', Var('esize', '25')), '27'), Update(Var('result', '28'), IfElse(Var('accumulate', '32'), ArrayIndex(Var('V', '29'), [Var('d', '30')], '31'), Call('Zeros', [], '34'), '35')), For(Var('e', '78'), Number(0), BinaryExpr('-', Var('elements', '36'), Number(1), '37'), [Update(Var('element1', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand1', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), Update(Var('element2', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand2', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('absdiff', '56'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60')], '61'), [SliceRange(BinaryExpr('-', Var('esize', '62'), Number(1), '63'), Number(0), '64')], '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result2', '67'), Var('e', '68'), Var('esize', '69')], '70'), BinaryExpr('+', ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), Var('absdiff', '76'), '77'))], 1, '79'), Update(ArrayIndex(Var('V', '80'), [Var('d', '81')], '82'), Var('result2', '83'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SABA Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': False, 'accumulate': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_diff'),
    'vaba_s32': ARMSema(intrin='vaba_s32', inst='SABA', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('absdiff', '26')], ('bits', Var('esize', '25')), '27'), Update(Var('result', '28'), IfElse(Var('accumulate', '32'), ArrayIndex(Var('V', '29'), [Var('d', '30')], '31'), Call('Zeros', [], '34'), '35')), For(Var('e', '78'), Number(0), BinaryExpr('-', Var('elements', '36'), Number(1), '37'), [Update(Var('element1', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand1', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), Update(Var('element2', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand2', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('absdiff', '56'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60')], '61'), [SliceRange(BinaryExpr('-', Var('esize', '62'), Number(1), '63'), Number(0), '64')], '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result2', '67'), Var('e', '68'), Var('esize', '69')], '70'), BinaryExpr('+', ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), Var('absdiff', '76'), '77'))], 1, '79'), Update(ArrayIndex(Var('V', '80'), [Var('d', '81')], '82'), Var('result2', '83'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SABA Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': False, 'accumulate': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_diff'),
    'vaba_s8': ARMSema(intrin='vaba_s8', inst='SABA', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('absdiff', '26')], ('bits', Var('esize', '25')), '27'), Update(Var('result', '28'), IfElse(Var('accumulate', '32'), ArrayIndex(Var('V', '29'), [Var('d', '30')], '31'), Call('Zeros', [], '34'), '35')), For(Var('e', '78'), Number(0), BinaryExpr('-', Var('elements', '36'), Number(1), '37'), [Update(Var('element1', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand1', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), Update(Var('element2', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand2', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('absdiff', '56'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60')], '61'), [SliceRange(BinaryExpr('-', Var('esize', '62'), Number(1), '63'), Number(0), '64')], '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result2', '67'), Var('e', '68'), Var('esize', '69')], '70'), BinaryExpr('+', ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), Var('absdiff', '76'), '77'))], 1, '79'), Update(ArrayIndex(Var('V', '80'), [Var('d', '81')], '82'), Var('result2', '83'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SABA Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': False, 'accumulate': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_diff'),
    'vaba_u16': ARMSema(intrin='vaba_u16', inst='UABA', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('absdiff', '26')], ('bits', Var('esize', '25')), '27'), Update(Var('result', '28'), IfElse(Var('accumulate', '32'), ArrayIndex(Var('V', '29'), [Var('d', '30')], '31'), Call('Zeros', [], '34'), '35')), For(Var('e', '78'), Number(0), BinaryExpr('-', Var('elements', '36'), Number(1), '37'), [Update(Var('element1', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand1', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), Update(Var('element2', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand2', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('absdiff', '56'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60')], '61'), [SliceRange(BinaryExpr('-', Var('esize', '62'), Number(1), '63'), Number(0), '64')], '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result2', '67'), Var('e', '68'), Var('esize', '69')], '70'), BinaryExpr('+', ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), Var('absdiff', '76'), '77'))], 1, '79'), Update(ArrayIndex(Var('V', '80'), [Var('d', '81')], '82'), Var('result2', '83'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='UABA Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': True, 'accumulate': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_diff'),
    'vaba_u32': ARMSema(intrin='vaba_u32', inst='UABA', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('absdiff', '26')], ('bits', Var('esize', '25')), '27'), Update(Var('result', '28'), IfElse(Var('accumulate', '32'), ArrayIndex(Var('V', '29'), [Var('d', '30')], '31'), Call('Zeros', [], '34'), '35')), For(Var('e', '78'), Number(0), BinaryExpr('-', Var('elements', '36'), Number(1), '37'), [Update(Var('element1', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand1', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), Update(Var('element2', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand2', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('absdiff', '56'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60')], '61'), [SliceRange(BinaryExpr('-', Var('esize', '62'), Number(1), '63'), Number(0), '64')], '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result2', '67'), Var('e', '68'), Var('esize', '69')], '70'), BinaryExpr('+', ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), Var('absdiff', '76'), '77'))], 1, '79'), Update(ArrayIndex(Var('V', '80'), [Var('d', '81')], '82'), Var('result2', '83'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='UABA Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': True, 'accumulate': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_diff'),
    'vaba_u8': ARMSema(intrin='vaba_u8', inst='UABA', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('absdiff', '26')], ('bits', Var('esize', '25')), '27'), Update(Var('result', '28'), IfElse(Var('accumulate', '32'), ArrayIndex(Var('V', '29'), [Var('d', '30')], '31'), Call('Zeros', [], '34'), '35')), For(Var('e', '78'), Number(0), BinaryExpr('-', Var('elements', '36'), Number(1), '37'), [Update(Var('element1', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand1', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), Update(Var('element2', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand2', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('absdiff', '56'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60')], '61'), [SliceRange(BinaryExpr('-', Var('esize', '62'), Number(1), '63'), Number(0), '64')], '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result2', '67'), Var('e', '68'), Var('esize', '69')], '70'), BinaryExpr('+', ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), Var('absdiff', '76'), '77'))], 1, '79'), Update(ArrayIndex(Var('V', '80'), [Var('d', '81')], '82'), Var('result2', '83'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='UABA Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': True, 'accumulate': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_diff'),
    'vabal_high_s16': ARMSema(intrin='vabal_high_s16', inst='SABAL2', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('result2', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '21'), '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('absdiff', '31')], ('bits', BinaryExpr('*', Number(2), Var('esize', '29'), '30')), '32'), Update(Var('result', '33'), IfElse(Var('accumulate', '37'), ArrayIndex(Var('V', '34'), [Var('d', '35')], '36'), Call('Zeros', [], '39'), '40')), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('absdiff', '61'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '63'), Var('element2', '64'), '65')], '66'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '67'), '68'), Number(1), '69'), Number(0), '70')], '71')), Update(ArrayIndex(Var('Elem', '72'), [Var('result2', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('result', '79'), Var('e', '80'), BinaryExpr('*', Number(2), Var('esize', '81'), '82')], '83'), Var('absdiff', '84'), '85'))], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result2', '91'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SABAL2 Vd.4S,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'accumulate': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_diff'),
    'vabal_high_s32': ARMSema(intrin='vabal_high_s32', inst='SABAL2', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('result2', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '21'), '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('absdiff', '31')], ('bits', BinaryExpr('*', Number(2), Var('esize', '29'), '30')), '32'), Update(Var('result', '33'), IfElse(Var('accumulate', '37'), ArrayIndex(Var('V', '34'), [Var('d', '35')], '36'), Call('Zeros', [], '39'), '40')), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('absdiff', '61'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '63'), Var('element2', '64'), '65')], '66'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '67'), '68'), Number(1), '69'), Number(0), '70')], '71')), Update(ArrayIndex(Var('Elem', '72'), [Var('result2', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('result', '79'), Var('e', '80'), BinaryExpr('*', Number(2), Var('esize', '81'), '82')], '83'), Var('absdiff', '84'), '85'))], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result2', '91'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SABAL2 Vd.2D,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'accumulate': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_diff'),
    'vabal_high_s8': ARMSema(intrin='vabal_high_s8', inst='SABAL2', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('result2', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '21'), '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('absdiff', '31')], ('bits', BinaryExpr('*', Number(2), Var('esize', '29'), '30')), '32'), Update(Var('result', '33'), IfElse(Var('accumulate', '37'), ArrayIndex(Var('V', '34'), [Var('d', '35')], '36'), Call('Zeros', [], '39'), '40')), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('absdiff', '61'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '63'), Var('element2', '64'), '65')], '66'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '67'), '68'), Number(1), '69'), Number(0), '70')], '71')), Update(ArrayIndex(Var('Elem', '72'), [Var('result2', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('result', '79'), Var('e', '80'), BinaryExpr('*', Number(2), Var('esize', '81'), '82')], '83'), Var('absdiff', '84'), '85'))], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result2', '91'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SABAL2 Vd.8H,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'accumulate': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_diff'),
    'vabal_high_u16': ARMSema(intrin='vabal_high_u16', inst='UABAL2', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('result2', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '21'), '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('absdiff', '31')], ('bits', BinaryExpr('*', Number(2), Var('esize', '29'), '30')), '32'), Update(Var('result', '33'), IfElse(Var('accumulate', '37'), ArrayIndex(Var('V', '34'), [Var('d', '35')], '36'), Call('Zeros', [], '39'), '40')), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('absdiff', '61'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '63'), Var('element2', '64'), '65')], '66'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '67'), '68'), Number(1), '69'), Number(0), '70')], '71')), Update(ArrayIndex(Var('Elem', '72'), [Var('result2', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('result', '79'), Var('e', '80'), BinaryExpr('*', Number(2), Var('esize', '81'), '82')], '83'), Var('absdiff', '84'), '85'))], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result2', '91'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UABAL2 Vd.4S,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'accumulate': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_diff'),
    'vabal_high_u32': ARMSema(intrin='vabal_high_u32', inst='UABAL2', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('result2', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '21'), '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('absdiff', '31')], ('bits', BinaryExpr('*', Number(2), Var('esize', '29'), '30')), '32'), Update(Var('result', '33'), IfElse(Var('accumulate', '37'), ArrayIndex(Var('V', '34'), [Var('d', '35')], '36'), Call('Zeros', [], '39'), '40')), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('absdiff', '61'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '63'), Var('element2', '64'), '65')], '66'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '67'), '68'), Number(1), '69'), Number(0), '70')], '71')), Update(ArrayIndex(Var('Elem', '72'), [Var('result2', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('result', '79'), Var('e', '80'), BinaryExpr('*', Number(2), Var('esize', '81'), '82')], '83'), Var('absdiff', '84'), '85'))], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result2', '91'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UABAL2 Vd.2D,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'accumulate': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_diff'),
    'vabal_high_u8': ARMSema(intrin='vabal_high_u8', inst='UABAL2', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('result2', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '21'), '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('absdiff', '31')], ('bits', BinaryExpr('*', Number(2), Var('esize', '29'), '30')), '32'), Update(Var('result', '33'), IfElse(Var('accumulate', '37'), ArrayIndex(Var('V', '34'), [Var('d', '35')], '36'), Call('Zeros', [], '39'), '40')), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('absdiff', '61'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '63'), Var('element2', '64'), '65')], '66'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '67'), '68'), Number(1), '69'), Number(0), '70')], '71')), Update(ArrayIndex(Var('Elem', '72'), [Var('result2', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('result', '79'), Var('e', '80'), BinaryExpr('*', Number(2), Var('esize', '81'), '82')], '83'), Var('absdiff', '84'), '85'))], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result2', '91'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UABAL2 Vd.8H,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'accumulate': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_diff'),
    'vabal_s16': ARMSema(intrin='vabal_s16', inst='SABAL', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('result2', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '21'), '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('absdiff', '31')], ('bits', BinaryExpr('*', Number(2), Var('esize', '29'), '30')), '32'), Update(Var('result', '33'), IfElse(Var('accumulate', '37'), ArrayIndex(Var('V', '34'), [Var('d', '35')], '36'), Call('Zeros', [], '39'), '40')), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('absdiff', '61'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '63'), Var('element2', '64'), '65')], '66'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '67'), '68'), Number(1), '69'), Number(0), '70')], '71')), Update(ArrayIndex(Var('Elem', '72'), [Var('result2', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('result', '79'), Var('e', '80'), BinaryExpr('*', Number(2), Var('esize', '81'), '82')], '83'), Var('absdiff', '84'), '85'))], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result2', '91'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SABAL Vd.4S,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'accumulate': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_diff'),
    'vabal_s32': ARMSema(intrin='vabal_s32', inst='SABAL', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('result2', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '21'), '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('absdiff', '31')], ('bits', BinaryExpr('*', Number(2), Var('esize', '29'), '30')), '32'), Update(Var('result', '33'), IfElse(Var('accumulate', '37'), ArrayIndex(Var('V', '34'), [Var('d', '35')], '36'), Call('Zeros', [], '39'), '40')), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('absdiff', '61'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '63'), Var('element2', '64'), '65')], '66'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '67'), '68'), Number(1), '69'), Number(0), '70')], '71')), Update(ArrayIndex(Var('Elem', '72'), [Var('result2', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('result', '79'), Var('e', '80'), BinaryExpr('*', Number(2), Var('esize', '81'), '82')], '83'), Var('absdiff', '84'), '85'))], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result2', '91'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SABAL Vd.2D,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'accumulate': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_diff'),
    'vabal_s8': ARMSema(intrin='vabal_s8', inst='SABAL', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('result2', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '21'), '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('absdiff', '31')], ('bits', BinaryExpr('*', Number(2), Var('esize', '29'), '30')), '32'), Update(Var('result', '33'), IfElse(Var('accumulate', '37'), ArrayIndex(Var('V', '34'), [Var('d', '35')], '36'), Call('Zeros', [], '39'), '40')), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('absdiff', '61'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '63'), Var('element2', '64'), '65')], '66'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '67'), '68'), Number(1), '69'), Number(0), '70')], '71')), Update(ArrayIndex(Var('Elem', '72'), [Var('result2', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('result', '79'), Var('e', '80'), BinaryExpr('*', Number(2), Var('esize', '81'), '82')], '83'), Var('absdiff', '84'), '85'))], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result2', '91'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SABAL Vd.8H,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'accumulate': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_diff'),
    'vabal_u16': ARMSema(intrin='vabal_u16', inst='UABAL', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('result2', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '21'), '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('absdiff', '31')], ('bits', BinaryExpr('*', Number(2), Var('esize', '29'), '30')), '32'), Update(Var('result', '33'), IfElse(Var('accumulate', '37'), ArrayIndex(Var('V', '34'), [Var('d', '35')], '36'), Call('Zeros', [], '39'), '40')), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('absdiff', '61'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '63'), Var('element2', '64'), '65')], '66'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '67'), '68'), Number(1), '69'), Number(0), '70')], '71')), Update(ArrayIndex(Var('Elem', '72'), [Var('result2', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('result', '79'), Var('e', '80'), BinaryExpr('*', Number(2), Var('esize', '81'), '82')], '83'), Var('absdiff', '84'), '85'))], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result2', '91'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UABAL Vd.4S,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'accumulate': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_diff'),
    'vabal_u32': ARMSema(intrin='vabal_u32', inst='UABAL', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('result2', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '21'), '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('absdiff', '31')], ('bits', BinaryExpr('*', Number(2), Var('esize', '29'), '30')), '32'), Update(Var('result', '33'), IfElse(Var('accumulate', '37'), ArrayIndex(Var('V', '34'), [Var('d', '35')], '36'), Call('Zeros', [], '39'), '40')), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('absdiff', '61'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '63'), Var('element2', '64'), '65')], '66'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '67'), '68'), Number(1), '69'), Number(0), '70')], '71')), Update(ArrayIndex(Var('Elem', '72'), [Var('result2', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('result', '79'), Var('e', '80'), BinaryExpr('*', Number(2), Var('esize', '81'), '82')], '83'), Var('absdiff', '84'), '85'))], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result2', '91'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UABAL Vd.2D,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'accumulate': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_diff'),
    'vabal_u8': ARMSema(intrin='vabal_u8', inst='UABAL', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('result2', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '21'), '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('absdiff', '31')], ('bits', BinaryExpr('*', Number(2), Var('esize', '29'), '30')), '32'), Update(Var('result', '33'), IfElse(Var('accumulate', '37'), ArrayIndex(Var('V', '34'), [Var('d', '35')], '36'), Call('Zeros', [], '39'), '40')), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('absdiff', '61'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '63'), Var('element2', '64'), '65')], '66'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '67'), '68'), Number(1), '69'), Number(0), '70')], '71')), Update(ArrayIndex(Var('Elem', '72'), [Var('result2', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('result', '79'), Var('e', '80'), BinaryExpr('*', Number(2), Var('esize', '81'), '82')], '83'), Var('absdiff', '84'), '85'))], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result2', '91'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UABAL Vd.8H,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'accumulate': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_diff'),
    'vabaq_s16': ARMSema(intrin='vabaq_s16', inst='SABA', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('absdiff', '26')], ('bits', Var('esize', '25')), '27'), Update(Var('result', '28'), IfElse(Var('accumulate', '32'), ArrayIndex(Var('V', '29'), [Var('d', '30')], '31'), Call('Zeros', [], '34'), '35')), For(Var('e', '78'), Number(0), BinaryExpr('-', Var('elements', '36'), Number(1), '37'), [Update(Var('element1', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand1', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), Update(Var('element2', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand2', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('absdiff', '56'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60')], '61'), [SliceRange(BinaryExpr('-', Var('esize', '62'), Number(1), '63'), Number(0), '64')], '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result2', '67'), Var('e', '68'), Var('esize', '69')], '70'), BinaryExpr('+', ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), Var('absdiff', '76'), '77'))], 1, '79'), Update(ArrayIndex(Var('V', '80'), [Var('d', '81')], '82'), Var('result2', '83'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SABA Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': False, 'accumulate': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_diff'),
    'vabaq_s32': ARMSema(intrin='vabaq_s32', inst='SABA', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('absdiff', '26')], ('bits', Var('esize', '25')), '27'), Update(Var('result', '28'), IfElse(Var('accumulate', '32'), ArrayIndex(Var('V', '29'), [Var('d', '30')], '31'), Call('Zeros', [], '34'), '35')), For(Var('e', '78'), Number(0), BinaryExpr('-', Var('elements', '36'), Number(1), '37'), [Update(Var('element1', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand1', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), Update(Var('element2', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand2', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('absdiff', '56'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60')], '61'), [SliceRange(BinaryExpr('-', Var('esize', '62'), Number(1), '63'), Number(0), '64')], '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result2', '67'), Var('e', '68'), Var('esize', '69')], '70'), BinaryExpr('+', ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), Var('absdiff', '76'), '77'))], 1, '79'), Update(ArrayIndex(Var('V', '80'), [Var('d', '81')], '82'), Var('result2', '83'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SABA Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': False, 'accumulate': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_diff'),
    'vabaq_s8': ARMSema(intrin='vabaq_s8', inst='SABA', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('absdiff', '26')], ('bits', Var('esize', '25')), '27'), Update(Var('result', '28'), IfElse(Var('accumulate', '32'), ArrayIndex(Var('V', '29'), [Var('d', '30')], '31'), Call('Zeros', [], '34'), '35')), For(Var('e', '78'), Number(0), BinaryExpr('-', Var('elements', '36'), Number(1), '37'), [Update(Var('element1', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand1', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), Update(Var('element2', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand2', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('absdiff', '56'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60')], '61'), [SliceRange(BinaryExpr('-', Var('esize', '62'), Number(1), '63'), Number(0), '64')], '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result2', '67'), Var('e', '68'), Var('esize', '69')], '70'), BinaryExpr('+', ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), Var('absdiff', '76'), '77'))], 1, '79'), Update(ArrayIndex(Var('V', '80'), [Var('d', '81')], '82'), Var('result2', '83'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SABA Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': False, 'accumulate': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_diff'),
    'vabaq_u16': ARMSema(intrin='vabaq_u16', inst='UABA', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('absdiff', '26')], ('bits', Var('esize', '25')), '27'), Update(Var('result', '28'), IfElse(Var('accumulate', '32'), ArrayIndex(Var('V', '29'), [Var('d', '30')], '31'), Call('Zeros', [], '34'), '35')), For(Var('e', '78'), Number(0), BinaryExpr('-', Var('elements', '36'), Number(1), '37'), [Update(Var('element1', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand1', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), Update(Var('element2', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand2', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('absdiff', '56'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60')], '61'), [SliceRange(BinaryExpr('-', Var('esize', '62'), Number(1), '63'), Number(0), '64')], '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result2', '67'), Var('e', '68'), Var('esize', '69')], '70'), BinaryExpr('+', ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), Var('absdiff', '76'), '77'))], 1, '79'), Update(ArrayIndex(Var('V', '80'), [Var('d', '81')], '82'), Var('result2', '83'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UABA Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': True, 'accumulate': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_diff'),
    'vabaq_u32': ARMSema(intrin='vabaq_u32', inst='UABA', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('absdiff', '26')], ('bits', Var('esize', '25')), '27'), Update(Var('result', '28'), IfElse(Var('accumulate', '32'), ArrayIndex(Var('V', '29'), [Var('d', '30')], '31'), Call('Zeros', [], '34'), '35')), For(Var('e', '78'), Number(0), BinaryExpr('-', Var('elements', '36'), Number(1), '37'), [Update(Var('element1', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand1', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), Update(Var('element2', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand2', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('absdiff', '56'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60')], '61'), [SliceRange(BinaryExpr('-', Var('esize', '62'), Number(1), '63'), Number(0), '64')], '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result2', '67'), Var('e', '68'), Var('esize', '69')], '70'), BinaryExpr('+', ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), Var('absdiff', '76'), '77'))], 1, '79'), Update(ArrayIndex(Var('V', '80'), [Var('d', '81')], '82'), Var('result2', '83'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UABA Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': True, 'accumulate': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_diff'),
    'vabaq_u8': ARMSema(intrin='vabaq_u8', inst='UABA', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('absdiff', '26')], ('bits', Var('esize', '25')), '27'), Update(Var('result', '28'), IfElse(Var('accumulate', '32'), ArrayIndex(Var('V', '29'), [Var('d', '30')], '31'), Call('Zeros', [], '34'), '35')), For(Var('e', '78'), Number(0), BinaryExpr('-', Var('elements', '36'), Number(1), '37'), [Update(Var('element1', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand1', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), Update(Var('element2', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand2', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('absdiff', '56'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60')], '61'), [SliceRange(BinaryExpr('-', Var('esize', '62'), Number(1), '63'), Number(0), '64')], '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result2', '67'), Var('e', '68'), Var('esize', '69')], '70'), BinaryExpr('+', ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), Var('absdiff', '76'), '77'))], 1, '79'), Update(ArrayIndex(Var('V', '80'), [Var('d', '81')], '82'), Var('result2', '83'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='UABA Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': True, 'accumulate': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_diff'),
    'vabd_s16': ARMSema(intrin='vabd_s16', inst='SABD', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('absdiff', '26')], ('bits', Var('esize', '25')), '27'), Update(Var('result', '28'), IfElse(Var('accumulate', '32'), ArrayIndex(Var('V', '29'), [Var('d', '30')], '31'), Call('Zeros', [], '34'), '35')), For(Var('e', '78'), Number(0), BinaryExpr('-', Var('elements', '36'), Number(1), '37'), [Update(Var('element1', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand1', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), Update(Var('element2', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand2', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('absdiff', '56'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60')], '61'), [SliceRange(BinaryExpr('-', Var('esize', '62'), Number(1), '63'), Number(0), '64')], '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result2', '67'), Var('e', '68'), Var('esize', '69')], '70'), BinaryExpr('+', ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), Var('absdiff', '76'), '77'))], 1, '79'), Update(ArrayIndex(Var('V', '80'), [Var('d', '81')], '82'), Var('result2', '83'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SABD Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': False, 'accumulate': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_diff'),
    'vabd_s32': ARMSema(intrin='vabd_s32', inst='SABD', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('absdiff', '26')], ('bits', Var('esize', '25')), '27'), Update(Var('result', '28'), IfElse(Var('accumulate', '32'), ArrayIndex(Var('V', '29'), [Var('d', '30')], '31'), Call('Zeros', [], '34'), '35')), For(Var('e', '78'), Number(0), BinaryExpr('-', Var('elements', '36'), Number(1), '37'), [Update(Var('element1', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand1', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), Update(Var('element2', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand2', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('absdiff', '56'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60')], '61'), [SliceRange(BinaryExpr('-', Var('esize', '62'), Number(1), '63'), Number(0), '64')], '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result2', '67'), Var('e', '68'), Var('esize', '69')], '70'), BinaryExpr('+', ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), Var('absdiff', '76'), '77'))], 1, '79'), Update(ArrayIndex(Var('V', '80'), [Var('d', '81')], '82'), Var('result2', '83'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SABD Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': False, 'accumulate': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_diff'),
    'vabd_s8': ARMSema(intrin='vabd_s8', inst='SABD', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('absdiff', '26')], ('bits', Var('esize', '25')), '27'), Update(Var('result', '28'), IfElse(Var('accumulate', '32'), ArrayIndex(Var('V', '29'), [Var('d', '30')], '31'), Call('Zeros', [], '34'), '35')), For(Var('e', '78'), Number(0), BinaryExpr('-', Var('elements', '36'), Number(1), '37'), [Update(Var('element1', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand1', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), Update(Var('element2', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand2', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('absdiff', '56'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60')], '61'), [SliceRange(BinaryExpr('-', Var('esize', '62'), Number(1), '63'), Number(0), '64')], '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result2', '67'), Var('e', '68'), Var('esize', '69')], '70'), BinaryExpr('+', ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), Var('absdiff', '76'), '77'))], 1, '79'), Update(ArrayIndex(Var('V', '80'), [Var('d', '81')], '82'), Var('result2', '83'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SABD Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': False, 'accumulate': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_diff'),
    'vabd_u16': ARMSema(intrin='vabd_u16', inst='UABD', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('absdiff', '26')], ('bits', Var('esize', '25')), '27'), Update(Var('result', '28'), IfElse(Var('accumulate', '32'), ArrayIndex(Var('V', '29'), [Var('d', '30')], '31'), Call('Zeros', [], '34'), '35')), For(Var('e', '78'), Number(0), BinaryExpr('-', Var('elements', '36'), Number(1), '37'), [Update(Var('element1', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand1', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), Update(Var('element2', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand2', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('absdiff', '56'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60')], '61'), [SliceRange(BinaryExpr('-', Var('esize', '62'), Number(1), '63'), Number(0), '64')], '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result2', '67'), Var('e', '68'), Var('esize', '69')], '70'), BinaryExpr('+', ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), Var('absdiff', '76'), '77'))], 1, '79'), Update(ArrayIndex(Var('V', '80'), [Var('d', '81')], '82'), Var('result2', '83'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='UABD Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': True, 'accumulate': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_diff'),
    'vabd_u32': ARMSema(intrin='vabd_u32', inst='UABD', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('absdiff', '26')], ('bits', Var('esize', '25')), '27'), Update(Var('result', '28'), IfElse(Var('accumulate', '32'), ArrayIndex(Var('V', '29'), [Var('d', '30')], '31'), Call('Zeros', [], '34'), '35')), For(Var('e', '78'), Number(0), BinaryExpr('-', Var('elements', '36'), Number(1), '37'), [Update(Var('element1', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand1', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), Update(Var('element2', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand2', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('absdiff', '56'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60')], '61'), [SliceRange(BinaryExpr('-', Var('esize', '62'), Number(1), '63'), Number(0), '64')], '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result2', '67'), Var('e', '68'), Var('esize', '69')], '70'), BinaryExpr('+', ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), Var('absdiff', '76'), '77'))], 1, '79'), Update(ArrayIndex(Var('V', '80'), [Var('d', '81')], '82'), Var('result2', '83'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='UABD Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': True, 'accumulate': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_diff'),
    'vabd_u8': ARMSema(intrin='vabd_u8', inst='UABD', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('absdiff', '26')], ('bits', Var('esize', '25')), '27'), Update(Var('result', '28'), IfElse(Var('accumulate', '32'), ArrayIndex(Var('V', '29'), [Var('d', '30')], '31'), Call('Zeros', [], '34'), '35')), For(Var('e', '78'), Number(0), BinaryExpr('-', Var('elements', '36'), Number(1), '37'), [Update(Var('element1', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand1', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), Update(Var('element2', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand2', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('absdiff', '56'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60')], '61'), [SliceRange(BinaryExpr('-', Var('esize', '62'), Number(1), '63'), Number(0), '64')], '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result2', '67'), Var('e', '68'), Var('esize', '69')], '70'), BinaryExpr('+', ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), Var('absdiff', '76'), '77'))], 1, '79'), Update(ArrayIndex(Var('V', '80'), [Var('d', '81')], '82'), Var('result2', '83'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='UABD Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': True, 'accumulate': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_diff'),
    'vabdl_high_s16': ARMSema(intrin='vabdl_high_s16', inst='SABDL2', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('result2', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '21'), '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('absdiff', '31')], ('bits', BinaryExpr('*', Number(2), Var('esize', '29'), '30')), '32'), Update(Var('result', '33'), IfElse(Var('accumulate', '37'), ArrayIndex(Var('V', '34'), [Var('d', '35')], '36'), Call('Zeros', [], '39'), '40')), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('absdiff', '61'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '63'), Var('element2', '64'), '65')], '66'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '67'), '68'), Number(1), '69'), Number(0), '70')], '71')), Update(ArrayIndex(Var('Elem', '72'), [Var('result2', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('result', '79'), Var('e', '80'), BinaryExpr('*', Number(2), Var('esize', '81'), '82')], '83'), Var('absdiff', '84'), '85'))], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result2', '91'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SABDL2 Vd.4S,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'accumulate': False, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_diff'),
    'vabdl_high_s32': ARMSema(intrin='vabdl_high_s32', inst='SABDL2', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('result2', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '21'), '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('absdiff', '31')], ('bits', BinaryExpr('*', Number(2), Var('esize', '29'), '30')), '32'), Update(Var('result', '33'), IfElse(Var('accumulate', '37'), ArrayIndex(Var('V', '34'), [Var('d', '35')], '36'), Call('Zeros', [], '39'), '40')), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('absdiff', '61'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '63'), Var('element2', '64'), '65')], '66'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '67'), '68'), Number(1), '69'), Number(0), '70')], '71')), Update(ArrayIndex(Var('Elem', '72'), [Var('result2', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('result', '79'), Var('e', '80'), BinaryExpr('*', Number(2), Var('esize', '81'), '82')], '83'), Var('absdiff', '84'), '85'))], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result2', '91'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SABDL2 Vd.2D,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'accumulate': False, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_diff'),
    'vabdl_high_s8': ARMSema(intrin='vabdl_high_s8', inst='SABDL2', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('result2', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '21'), '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('absdiff', '31')], ('bits', BinaryExpr('*', Number(2), Var('esize', '29'), '30')), '32'), Update(Var('result', '33'), IfElse(Var('accumulate', '37'), ArrayIndex(Var('V', '34'), [Var('d', '35')], '36'), Call('Zeros', [], '39'), '40')), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('absdiff', '61'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '63'), Var('element2', '64'), '65')], '66'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '67'), '68'), Number(1), '69'), Number(0), '70')], '71')), Update(ArrayIndex(Var('Elem', '72'), [Var('result2', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('result', '79'), Var('e', '80'), BinaryExpr('*', Number(2), Var('esize', '81'), '82')], '83'), Var('absdiff', '84'), '85'))], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result2', '91'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SABDL2 Vd.8H,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'accumulate': False, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_diff'),
    'vabdl_high_u16': ARMSema(intrin='vabdl_high_u16', inst='UABDL2', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('result2', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '21'), '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('absdiff', '31')], ('bits', BinaryExpr('*', Number(2), Var('esize', '29'), '30')), '32'), Update(Var('result', '33'), IfElse(Var('accumulate', '37'), ArrayIndex(Var('V', '34'), [Var('d', '35')], '36'), Call('Zeros', [], '39'), '40')), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('absdiff', '61'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '63'), Var('element2', '64'), '65')], '66'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '67'), '68'), Number(1), '69'), Number(0), '70')], '71')), Update(ArrayIndex(Var('Elem', '72'), [Var('result2', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('result', '79'), Var('e', '80'), BinaryExpr('*', Number(2), Var('esize', '81'), '82')], '83'), Var('absdiff', '84'), '85'))], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result2', '91'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UABDL2 Vd.4S,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'accumulate': False, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_diff'),
    'vabdl_high_u32': ARMSema(intrin='vabdl_high_u32', inst='UABDL2', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('result2', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '21'), '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('absdiff', '31')], ('bits', BinaryExpr('*', Number(2), Var('esize', '29'), '30')), '32'), Update(Var('result', '33'), IfElse(Var('accumulate', '37'), ArrayIndex(Var('V', '34'), [Var('d', '35')], '36'), Call('Zeros', [], '39'), '40')), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('absdiff', '61'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '63'), Var('element2', '64'), '65')], '66'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '67'), '68'), Number(1), '69'), Number(0), '70')], '71')), Update(ArrayIndex(Var('Elem', '72'), [Var('result2', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('result', '79'), Var('e', '80'), BinaryExpr('*', Number(2), Var('esize', '81'), '82')], '83'), Var('absdiff', '84'), '85'))], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result2', '91'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UABDL2 Vd.2D,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'accumulate': False, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_diff'),
    'vabdl_high_u8': ARMSema(intrin='vabdl_high_u8', inst='UABDL2', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('result2', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '21'), '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('absdiff', '31')], ('bits', BinaryExpr('*', Number(2), Var('esize', '29'), '30')), '32'), Update(Var('result', '33'), IfElse(Var('accumulate', '37'), ArrayIndex(Var('V', '34'), [Var('d', '35')], '36'), Call('Zeros', [], '39'), '40')), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('absdiff', '61'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '63'), Var('element2', '64'), '65')], '66'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '67'), '68'), Number(1), '69'), Number(0), '70')], '71')), Update(ArrayIndex(Var('Elem', '72'), [Var('result2', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('result', '79'), Var('e', '80'), BinaryExpr('*', Number(2), Var('esize', '81'), '82')], '83'), Var('absdiff', '84'), '85'))], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result2', '91'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UABDL2 Vd.8H,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'accumulate': False, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_diff'),
    'vabdl_s16': ARMSema(intrin='vabdl_s16', inst='SABDL', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('result2', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '21'), '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('absdiff', '31')], ('bits', BinaryExpr('*', Number(2), Var('esize', '29'), '30')), '32'), Update(Var('result', '33'), IfElse(Var('accumulate', '37'), ArrayIndex(Var('V', '34'), [Var('d', '35')], '36'), Call('Zeros', [], '39'), '40')), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('absdiff', '61'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '63'), Var('element2', '64'), '65')], '66'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '67'), '68'), Number(1), '69'), Number(0), '70')], '71')), Update(ArrayIndex(Var('Elem', '72'), [Var('result2', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('result', '79'), Var('e', '80'), BinaryExpr('*', Number(2), Var('esize', '81'), '82')], '83'), Var('absdiff', '84'), '85'))], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result2', '91'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SABDL Vd.4S,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'accumulate': False, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_diff'),
    'vabdl_s32': ARMSema(intrin='vabdl_s32', inst='SABDL', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('result2', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '21'), '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('absdiff', '31')], ('bits', BinaryExpr('*', Number(2), Var('esize', '29'), '30')), '32'), Update(Var('result', '33'), IfElse(Var('accumulate', '37'), ArrayIndex(Var('V', '34'), [Var('d', '35')], '36'), Call('Zeros', [], '39'), '40')), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('absdiff', '61'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '63'), Var('element2', '64'), '65')], '66'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '67'), '68'), Number(1), '69'), Number(0), '70')], '71')), Update(ArrayIndex(Var('Elem', '72'), [Var('result2', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('result', '79'), Var('e', '80'), BinaryExpr('*', Number(2), Var('esize', '81'), '82')], '83'), Var('absdiff', '84'), '85'))], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result2', '91'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SABDL Vd.2D,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'accumulate': False, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_diff'),
    'vabdl_s8': ARMSema(intrin='vabdl_s8', inst='SABDL', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('result2', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '21'), '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('absdiff', '31')], ('bits', BinaryExpr('*', Number(2), Var('esize', '29'), '30')), '32'), Update(Var('result', '33'), IfElse(Var('accumulate', '37'), ArrayIndex(Var('V', '34'), [Var('d', '35')], '36'), Call('Zeros', [], '39'), '40')), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('absdiff', '61'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '63'), Var('element2', '64'), '65')], '66'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '67'), '68'), Number(1), '69'), Number(0), '70')], '71')), Update(ArrayIndex(Var('Elem', '72'), [Var('result2', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('result', '79'), Var('e', '80'), BinaryExpr('*', Number(2), Var('esize', '81'), '82')], '83'), Var('absdiff', '84'), '85'))], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result2', '91'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SABDL Vd.8H,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'accumulate': False, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_diff'),
    'vabdl_u16': ARMSema(intrin='vabdl_u16', inst='UABDL', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('result2', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '21'), '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('absdiff', '31')], ('bits', BinaryExpr('*', Number(2), Var('esize', '29'), '30')), '32'), Update(Var('result', '33'), IfElse(Var('accumulate', '37'), ArrayIndex(Var('V', '34'), [Var('d', '35')], '36'), Call('Zeros', [], '39'), '40')), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('absdiff', '61'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '63'), Var('element2', '64'), '65')], '66'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '67'), '68'), Number(1), '69'), Number(0), '70')], '71')), Update(ArrayIndex(Var('Elem', '72'), [Var('result2', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('result', '79'), Var('e', '80'), BinaryExpr('*', Number(2), Var('esize', '81'), '82')], '83'), Var('absdiff', '84'), '85'))], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result2', '91'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UABDL Vd.4S,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'accumulate': False, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_diff'),
    'vabdl_u32': ARMSema(intrin='vabdl_u32', inst='UABDL', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('result2', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '21'), '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('absdiff', '31')], ('bits', BinaryExpr('*', Number(2), Var('esize', '29'), '30')), '32'), Update(Var('result', '33'), IfElse(Var('accumulate', '37'), ArrayIndex(Var('V', '34'), [Var('d', '35')], '36'), Call('Zeros', [], '39'), '40')), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('absdiff', '61'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '63'), Var('element2', '64'), '65')], '66'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '67'), '68'), Number(1), '69'), Number(0), '70')], '71')), Update(ArrayIndex(Var('Elem', '72'), [Var('result2', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('result', '79'), Var('e', '80'), BinaryExpr('*', Number(2), Var('esize', '81'), '82')], '83'), Var('absdiff', '84'), '85'))], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result2', '91'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UABDL Vd.2D,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'accumulate': False, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_diff'),
    'vabdl_u8': ARMSema(intrin='vabdl_u8', inst='UABDL', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('result2', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '21'), '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('absdiff', '31')], ('bits', BinaryExpr('*', Number(2), Var('esize', '29'), '30')), '32'), Update(Var('result', '33'), IfElse(Var('accumulate', '37'), ArrayIndex(Var('V', '34'), [Var('d', '35')], '36'), Call('Zeros', [], '39'), '40')), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('absdiff', '61'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '63'), Var('element2', '64'), '65')], '66'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '67'), '68'), Number(1), '69'), Number(0), '70')], '71')), Update(ArrayIndex(Var('Elem', '72'), [Var('result2', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('result', '79'), Var('e', '80'), BinaryExpr('*', Number(2), Var('esize', '81'), '82')], '83'), Var('absdiff', '84'), '85'))], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result2', '91'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UABDL Vd.8H,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'accumulate': False, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_diff'),
    'vabdq_s16': ARMSema(intrin='vabdq_s16', inst='SABD', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('absdiff', '26')], ('bits', Var('esize', '25')), '27'), Update(Var('result', '28'), IfElse(Var('accumulate', '32'), ArrayIndex(Var('V', '29'), [Var('d', '30')], '31'), Call('Zeros', [], '34'), '35')), For(Var('e', '78'), Number(0), BinaryExpr('-', Var('elements', '36'), Number(1), '37'), [Update(Var('element1', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand1', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), Update(Var('element2', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand2', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('absdiff', '56'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60')], '61'), [SliceRange(BinaryExpr('-', Var('esize', '62'), Number(1), '63'), Number(0), '64')], '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result2', '67'), Var('e', '68'), Var('esize', '69')], '70'), BinaryExpr('+', ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), Var('absdiff', '76'), '77'))], 1, '79'), Update(ArrayIndex(Var('V', '80'), [Var('d', '81')], '82'), Var('result2', '83'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SABD Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': False, 'accumulate': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_diff'),
    'vabdq_s32': ARMSema(intrin='vabdq_s32', inst='SABD', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('absdiff', '26')], ('bits', Var('esize', '25')), '27'), Update(Var('result', '28'), IfElse(Var('accumulate', '32'), ArrayIndex(Var('V', '29'), [Var('d', '30')], '31'), Call('Zeros', [], '34'), '35')), For(Var('e', '78'), Number(0), BinaryExpr('-', Var('elements', '36'), Number(1), '37'), [Update(Var('element1', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand1', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), Update(Var('element2', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand2', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('absdiff', '56'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60')], '61'), [SliceRange(BinaryExpr('-', Var('esize', '62'), Number(1), '63'), Number(0), '64')], '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result2', '67'), Var('e', '68'), Var('esize', '69')], '70'), BinaryExpr('+', ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), Var('absdiff', '76'), '77'))], 1, '79'), Update(ArrayIndex(Var('V', '80'), [Var('d', '81')], '82'), Var('result2', '83'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SABD Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': False, 'accumulate': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_diff'),
    'vabdq_s8': ARMSema(intrin='vabdq_s8', inst='SABD', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('absdiff', '26')], ('bits', Var('esize', '25')), '27'), Update(Var('result', '28'), IfElse(Var('accumulate', '32'), ArrayIndex(Var('V', '29'), [Var('d', '30')], '31'), Call('Zeros', [], '34'), '35')), For(Var('e', '78'), Number(0), BinaryExpr('-', Var('elements', '36'), Number(1), '37'), [Update(Var('element1', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand1', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), Update(Var('element2', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand2', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('absdiff', '56'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60')], '61'), [SliceRange(BinaryExpr('-', Var('esize', '62'), Number(1), '63'), Number(0), '64')], '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result2', '67'), Var('e', '68'), Var('esize', '69')], '70'), BinaryExpr('+', ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), Var('absdiff', '76'), '77'))], 1, '79'), Update(ArrayIndex(Var('V', '80'), [Var('d', '81')], '82'), Var('result2', '83'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SABD Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': False, 'accumulate': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_diff'),
    'vabdq_u16': ARMSema(intrin='vabdq_u16', inst='UABD', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('absdiff', '26')], ('bits', Var('esize', '25')), '27'), Update(Var('result', '28'), IfElse(Var('accumulate', '32'), ArrayIndex(Var('V', '29'), [Var('d', '30')], '31'), Call('Zeros', [], '34'), '35')), For(Var('e', '78'), Number(0), BinaryExpr('-', Var('elements', '36'), Number(1), '37'), [Update(Var('element1', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand1', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), Update(Var('element2', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand2', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('absdiff', '56'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60')], '61'), [SliceRange(BinaryExpr('-', Var('esize', '62'), Number(1), '63'), Number(0), '64')], '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result2', '67'), Var('e', '68'), Var('esize', '69')], '70'), BinaryExpr('+', ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), Var('absdiff', '76'), '77'))], 1, '79'), Update(ArrayIndex(Var('V', '80'), [Var('d', '81')], '82'), Var('result2', '83'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UABD Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': True, 'accumulate': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_diff'),
    'vabdq_u32': ARMSema(intrin='vabdq_u32', inst='UABD', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('absdiff', '26')], ('bits', Var('esize', '25')), '27'), Update(Var('result', '28'), IfElse(Var('accumulate', '32'), ArrayIndex(Var('V', '29'), [Var('d', '30')], '31'), Call('Zeros', [], '34'), '35')), For(Var('e', '78'), Number(0), BinaryExpr('-', Var('elements', '36'), Number(1), '37'), [Update(Var('element1', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand1', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), Update(Var('element2', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand2', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('absdiff', '56'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60')], '61'), [SliceRange(BinaryExpr('-', Var('esize', '62'), Number(1), '63'), Number(0), '64')], '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result2', '67'), Var('e', '68'), Var('esize', '69')], '70'), BinaryExpr('+', ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), Var('absdiff', '76'), '77'))], 1, '79'), Update(ArrayIndex(Var('V', '80'), [Var('d', '81')], '82'), Var('result2', '83'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UABD Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': True, 'accumulate': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_diff'),
    'vabdq_u8': ARMSema(intrin='vabdq_u8', inst='UABD', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('absdiff', '26')], ('bits', Var('esize', '25')), '27'), Update(Var('result', '28'), IfElse(Var('accumulate', '32'), ArrayIndex(Var('V', '29'), [Var('d', '30')], '31'), Call('Zeros', [], '34'), '35')), For(Var('e', '78'), Number(0), BinaryExpr('-', Var('elements', '36'), Number(1), '37'), [Update(Var('element1', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand1', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), Update(Var('element2', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand2', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('absdiff', '56'), ArrayIndex(Call('Abs', [BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60')], '61'), [SliceRange(BinaryExpr('-', Var('esize', '62'), Number(1), '63'), Number(0), '64')], '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result2', '67'), Var('e', '68'), Var('esize', '69')], '70'), BinaryExpr('+', ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), Var('absdiff', '76'), '77'))], 1, '79'), Update(ArrayIndex(Var('V', '80'), [Var('d', '81')], '82'), Var('result2', '83'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='UABD Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': True, 'accumulate': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_diff'),
    'vabs_s16': ARMSema(intrin='vabs_s16', inst='ABS', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), For(Var('e', '42'), Number(0), BinaryExpr('-', Var('elements', '13'), Number(1), '14'), [Update(Var('element', '15'), Call('SInt', [ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')], '22')), IfElse(Var('neg', '23'), [Update(Var('element', '24'), UnaryExpr('-', Var('element', '25'), '26'))], [Update(Var('element', '27'), Call('Abs', [Var('element', '29')], '30'))], '31'), Update(ArrayIndex(Var('Elem', '32'), [Var('result', '33'), Var('e', '34'), Var('esize', '35')], '36'), ArrayIndex(Var('element', '37'), [SliceRange(BinaryExpr('-', Var('esize', '38'), Number(1), '39'), Number(0), '40')], '41'))], 1, '43'), Update(ArrayIndex(Var('V', '44'), [Var('d', '45')], '46'), Var('result', '47'))], rettype='int16x4_t', ret_is_signed=True, inst_form='ABS Vd.4H,Vn.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'neg': False}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_int_simd'),
    'vabs_s32': ARMSema(intrin='vabs_s32', inst='ABS', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), For(Var('e', '42'), Number(0), BinaryExpr('-', Var('elements', '13'), Number(1), '14'), [Update(Var('element', '15'), Call('SInt', [ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')], '22')), IfElse(Var('neg', '23'), [Update(Var('element', '24'), UnaryExpr('-', Var('element', '25'), '26'))], [Update(Var('element', '27'), Call('Abs', [Var('element', '29')], '30'))], '31'), Update(ArrayIndex(Var('Elem', '32'), [Var('result', '33'), Var('e', '34'), Var('esize', '35')], '36'), ArrayIndex(Var('element', '37'), [SliceRange(BinaryExpr('-', Var('esize', '38'), Number(1), '39'), Number(0), '40')], '41'))], 1, '43'), Update(ArrayIndex(Var('V', '44'), [Var('d', '45')], '46'), Var('result', '47'))], rettype='int32x2_t', ret_is_signed=True, inst_form='ABS Vd.2S,Vn.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'neg': False}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_int_simd'),
    'vabs_s64': ARMSema(intrin='vabs_s64', inst='ABS', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), For(Var('e', '42'), Number(0), BinaryExpr('-', Var('elements', '13'), Number(1), '14'), [Update(Var('element', '15'), Call('SInt', [ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')], '22')), IfElse(Var('neg', '23'), [Update(Var('element', '24'), UnaryExpr('-', Var('element', '25'), '26'))], [Update(Var('element', '27'), Call('Abs', [Var('element', '29')], '30'))], '31'), Update(ArrayIndex(Var('Elem', '32'), [Var('result', '33'), Var('e', '34'), Var('esize', '35')], '36'), ArrayIndex(Var('element', '37'), [SliceRange(BinaryExpr('-', Var('esize', '38'), Number(1), '39'), Number(0), '40')], '41'))], 1, '43'), Update(ArrayIndex(Var('V', '44'), [Var('d', '45')], '46'), Var('result', '47'))], rettype='int64x1_t', ret_is_signed=True, inst_form='ABS Dd,Dn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'neg': False}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_int_sisd'),
    'vabs_s8': ARMSema(intrin='vabs_s8', inst='ABS', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), For(Var('e', '42'), Number(0), BinaryExpr('-', Var('elements', '13'), Number(1), '14'), [Update(Var('element', '15'), Call('SInt', [ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')], '22')), IfElse(Var('neg', '23'), [Update(Var('element', '24'), UnaryExpr('-', Var('element', '25'), '26'))], [Update(Var('element', '27'), Call('Abs', [Var('element', '29')], '30'))], '31'), Update(ArrayIndex(Var('Elem', '32'), [Var('result', '33'), Var('e', '34'), Var('esize', '35')], '36'), ArrayIndex(Var('element', '37'), [SliceRange(BinaryExpr('-', Var('esize', '38'), Number(1), '39'), Number(0), '40')], '41'))], 1, '43'), Update(ArrayIndex(Var('V', '44'), [Var('d', '45')], '46'), Var('result', '47'))], rettype='int8x8_t', ret_is_signed=True, inst_form='ABS Vd.8B,Vn.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'neg': False}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_int_simd'),
    'vabsd_s64': ARMSema(intrin='vabsd_s64', inst='ABS', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), For(Var('e', '42'), Number(0), BinaryExpr('-', Var('elements', '13'), Number(1), '14'), [Update(Var('element', '15'), Call('SInt', [ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')], '22')), IfElse(Var('neg', '23'), [Update(Var('element', '24'), UnaryExpr('-', Var('element', '25'), '26'))], [Update(Var('element', '27'), Call('Abs', [Var('element', '29')], '30'))], '31'), Update(ArrayIndex(Var('Elem', '32'), [Var('result', '33'), Var('e', '34'), Var('esize', '35')], '36'), ArrayIndex(Var('element', '37'), [SliceRange(BinaryExpr('-', Var('esize', '38'), Number(1), '39'), Number(0), '40')], '41'))], 1, '43'), Update(ArrayIndex(Var('V', '44'), [Var('d', '45')], '46'), Var('result', '47'))], rettype='int64_t', ret_is_signed=True, inst_form='ABS Dd,Dn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'neg': False}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_int_sisd'),
    'vabsq_s16': ARMSema(intrin='vabsq_s16', inst='ABS', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), For(Var('e', '42'), Number(0), BinaryExpr('-', Var('elements', '13'), Number(1), '14'), [Update(Var('element', '15'), Call('SInt', [ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')], '22')), IfElse(Var('neg', '23'), [Update(Var('element', '24'), UnaryExpr('-', Var('element', '25'), '26'))], [Update(Var('element', '27'), Call('Abs', [Var('element', '29')], '30'))], '31'), Update(ArrayIndex(Var('Elem', '32'), [Var('result', '33'), Var('e', '34'), Var('esize', '35')], '36'), ArrayIndex(Var('element', '37'), [SliceRange(BinaryExpr('-', Var('esize', '38'), Number(1), '39'), Number(0), '40')], '41'))], 1, '43'), Update(ArrayIndex(Var('V', '44'), [Var('d', '45')], '46'), Var('result', '47'))], rettype='int16x8_t', ret_is_signed=True, inst_form='ABS Vd.8H,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'neg': False}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_int_simd'),
    'vabsq_s32': ARMSema(intrin='vabsq_s32', inst='ABS', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), For(Var('e', '42'), Number(0), BinaryExpr('-', Var('elements', '13'), Number(1), '14'), [Update(Var('element', '15'), Call('SInt', [ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')], '22')), IfElse(Var('neg', '23'), [Update(Var('element', '24'), UnaryExpr('-', Var('element', '25'), '26'))], [Update(Var('element', '27'), Call('Abs', [Var('element', '29')], '30'))], '31'), Update(ArrayIndex(Var('Elem', '32'), [Var('result', '33'), Var('e', '34'), Var('esize', '35')], '36'), ArrayIndex(Var('element', '37'), [SliceRange(BinaryExpr('-', Var('esize', '38'), Number(1), '39'), Number(0), '40')], '41'))], 1, '43'), Update(ArrayIndex(Var('V', '44'), [Var('d', '45')], '46'), Var('result', '47'))], rettype='int32x4_t', ret_is_signed=True, inst_form='ABS Vd.4S,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'neg': False}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_int_simd'),
    'vabsq_s64': ARMSema(intrin='vabsq_s64', inst='ABS', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), For(Var('e', '42'), Number(0), BinaryExpr('-', Var('elements', '13'), Number(1), '14'), [Update(Var('element', '15'), Call('SInt', [ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')], '22')), IfElse(Var('neg', '23'), [Update(Var('element', '24'), UnaryExpr('-', Var('element', '25'), '26'))], [Update(Var('element', '27'), Call('Abs', [Var('element', '29')], '30'))], '31'), Update(ArrayIndex(Var('Elem', '32'), [Var('result', '33'), Var('e', '34'), Var('esize', '35')], '36'), ArrayIndex(Var('element', '37'), [SliceRange(BinaryExpr('-', Var('esize', '38'), Number(1), '39'), Number(0), '40')], '41'))], 1, '43'), Update(ArrayIndex(Var('V', '44'), [Var('d', '45')], '46'), Var('result', '47'))], rettype='int64x2_t', ret_is_signed=True, inst_form='ABS Vd.2D,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'neg': False}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_int_simd'),
    'vabsq_s8': ARMSema(intrin='vabsq_s8', inst='ABS', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), For(Var('e', '42'), Number(0), BinaryExpr('-', Var('elements', '13'), Number(1), '14'), [Update(Var('element', '15'), Call('SInt', [ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')], '22')), IfElse(Var('neg', '23'), [Update(Var('element', '24'), UnaryExpr('-', Var('element', '25'), '26'))], [Update(Var('element', '27'), Call('Abs', [Var('element', '29')], '30'))], '31'), Update(ArrayIndex(Var('Elem', '32'), [Var('result', '33'), Var('e', '34'), Var('esize', '35')], '36'), ArrayIndex(Var('element', '37'), [SliceRange(BinaryExpr('-', Var('esize', '38'), Number(1), '39'), Number(0), '40')], '41'))], 1, '43'), Update(ArrayIndex(Var('V', '44'), [Var('d', '45')], '46'), Var('result', '47'))], rettype='int8x16_t', ret_is_signed=True, inst_form='ABS Vd.16B,Vn.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'neg': False}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_int_simd'),
    'vadd_s16': ARMSema(intrin='vadd_s16', inst='ADD', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='int16x4_t', ret_is_signed=True, inst_form='ADD Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vadd_s32': ARMSema(intrin='vadd_s32', inst='ADD', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='int32x2_t', ret_is_signed=True, inst_form='ADD Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vadd_s64': ARMSema(intrin='vadd_s64', inst='ADD', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='int64x1_t', ret_is_signed=True, inst_form='ADD Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_sisd'),
    'vadd_s8': ARMSema(intrin='vadd_s8', inst='ADD', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='int8x8_t', ret_is_signed=True, inst_form='ADD Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vadd_u16': ARMSema(intrin='vadd_u16', inst='ADD', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='ADD Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vadd_u32': ARMSema(intrin='vadd_u32', inst='ADD', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='ADD Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vadd_u64': ARMSema(intrin='vadd_u64', inst='ADD', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='ADD Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_sisd'),
    'vadd_u8': ARMSema(intrin='vadd_u8', inst='ADD', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='ADD Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vaddd_s64': ARMSema(intrin='vaddd_s64', inst='ADD', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='int64_t', ret_is_signed=True, inst_form='ADD Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_sisd'),
    'vaddd_u64': ARMSema(intrin='vaddd_u64', inst='ADD', params=[Parameter(name='a', type='uint64_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='uint64_t', ret_is_signed=False, inst_form='ADD Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_sisd'),
    'vaddhn_high_s16': ARMSema(intrin='vaddhn_high_s16', inst='ADDHN2', params=[Parameter(name='r', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='int8x16_t', ret_is_signed=True, inst_form='ADDHN2 Vd.16B,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'sub_op': False, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vaddhn_high_s32': ARMSema(intrin='vaddhn_high_s32', inst='ADDHN2', params=[Parameter(name='r', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='int16x8_t', ret_is_signed=True, inst_form='ADDHN2 Vd.8H,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'sub_op': False, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vaddhn_high_s64': ARMSema(intrin='vaddhn_high_s64', inst='ADDHN2', params=[Parameter(name='r', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='int32x4_t', ret_is_signed=True, inst_form='ADDHN2 Vd.4S,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'sub_op': False, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vaddhn_high_u16': ARMSema(intrin='vaddhn_high_u16', inst='ADDHN2', params=[Parameter(name='r', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='ADDHN2 Vd.16B,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'sub_op': False, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vaddhn_high_u32': ARMSema(intrin='vaddhn_high_u32', inst='ADDHN2', params=[Parameter(name='r', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='ADDHN2 Vd.8H,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'sub_op': False, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vaddhn_high_u64': ARMSema(intrin='vaddhn_high_u64', inst='ADDHN2', params=[Parameter(name='r', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='ADDHN2 Vd.4S,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'sub_op': False, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vaddhn_s16': ARMSema(intrin='vaddhn_s16', inst='ADDHN', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='int8x8_t', ret_is_signed=True, inst_form='ADDHN Vd.8B,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'sub_op': False, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vaddhn_s32': ARMSema(intrin='vaddhn_s32', inst='ADDHN', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='int16x4_t', ret_is_signed=True, inst_form='ADDHN Vd.4H,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'sub_op': False, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vaddhn_s64': ARMSema(intrin='vaddhn_s64', inst='ADDHN', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='int32x2_t', ret_is_signed=True, inst_form='ADDHN Vd.2S,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'sub_op': False, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vaddhn_u16': ARMSema(intrin='vaddhn_u16', inst='ADDHN', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='ADDHN Vd.8B,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'sub_op': False, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vaddhn_u32': ARMSema(intrin='vaddhn_u32', inst='ADDHN', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='ADDHN Vd.4H,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'sub_op': False, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vaddhn_u64': ARMSema(intrin='vaddhn_u64', inst='ADDHN', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='ADDHN Vd.2S,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'sub_op': False, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vaddl_high_s16': ARMSema(intrin='vaddl_high_s16', inst='SADDL2', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '69'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), Var('esize', '34')], '35'), Var('unsigned', '36')], '37')), Update(Var('element2', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand2', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), IfElse(Var('sub_op', '47'), [Update(Var('sum', '48'), BinaryExpr('-', Var('element1', '49'), Var('element2', '50'), '51'))], [Update(Var('sum', '52'), BinaryExpr('+', Var('element1', '53'), Var('element2', '54'), '55'))], '56'), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), ArrayIndex(Var('sum', '63'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '64'), '65'), Number(1), '66'), Number(0), '67')], '68'))], 1, '70'), Update(ArrayIndex(Var('V', '71'), [Var('d', '72')], '73'), Var('result', '74'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SADDL2 Vd.4S,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'sub_op': False, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_long'),
    'vaddl_high_s32': ARMSema(intrin='vaddl_high_s32', inst='SADDL2', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '69'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), Var('esize', '34')], '35'), Var('unsigned', '36')], '37')), Update(Var('element2', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand2', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), IfElse(Var('sub_op', '47'), [Update(Var('sum', '48'), BinaryExpr('-', Var('element1', '49'), Var('element2', '50'), '51'))], [Update(Var('sum', '52'), BinaryExpr('+', Var('element1', '53'), Var('element2', '54'), '55'))], '56'), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), ArrayIndex(Var('sum', '63'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '64'), '65'), Number(1), '66'), Number(0), '67')], '68'))], 1, '70'), Update(ArrayIndex(Var('V', '71'), [Var('d', '72')], '73'), Var('result', '74'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SADDL2 Vd.2D,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'sub_op': False, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_long'),
    'vaddl_high_s8': ARMSema(intrin='vaddl_high_s8', inst='SADDL2', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '69'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), Var('esize', '34')], '35'), Var('unsigned', '36')], '37')), Update(Var('element2', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand2', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), IfElse(Var('sub_op', '47'), [Update(Var('sum', '48'), BinaryExpr('-', Var('element1', '49'), Var('element2', '50'), '51'))], [Update(Var('sum', '52'), BinaryExpr('+', Var('element1', '53'), Var('element2', '54'), '55'))], '56'), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), ArrayIndex(Var('sum', '63'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '64'), '65'), Number(1), '66'), Number(0), '67')], '68'))], 1, '70'), Update(ArrayIndex(Var('V', '71'), [Var('d', '72')], '73'), Var('result', '74'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SADDL2 Vd.8H,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'sub_op': False, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_long'),
    'vaddl_high_u16': ARMSema(intrin='vaddl_high_u16', inst='UADDL2', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '69'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), Var('esize', '34')], '35'), Var('unsigned', '36')], '37')), Update(Var('element2', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand2', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), IfElse(Var('sub_op', '47'), [Update(Var('sum', '48'), BinaryExpr('-', Var('element1', '49'), Var('element2', '50'), '51'))], [Update(Var('sum', '52'), BinaryExpr('+', Var('element1', '53'), Var('element2', '54'), '55'))], '56'), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), ArrayIndex(Var('sum', '63'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '64'), '65'), Number(1), '66'), Number(0), '67')], '68'))], 1, '70'), Update(ArrayIndex(Var('V', '71'), [Var('d', '72')], '73'), Var('result', '74'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UADDL2 Vd.4S,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'sub_op': False, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_long'),
    'vaddl_high_u32': ARMSema(intrin='vaddl_high_u32', inst='UADDL2', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '69'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), Var('esize', '34')], '35'), Var('unsigned', '36')], '37')), Update(Var('element2', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand2', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), IfElse(Var('sub_op', '47'), [Update(Var('sum', '48'), BinaryExpr('-', Var('element1', '49'), Var('element2', '50'), '51'))], [Update(Var('sum', '52'), BinaryExpr('+', Var('element1', '53'), Var('element2', '54'), '55'))], '56'), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), ArrayIndex(Var('sum', '63'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '64'), '65'), Number(1), '66'), Number(0), '67')], '68'))], 1, '70'), Update(ArrayIndex(Var('V', '71'), [Var('d', '72')], '73'), Var('result', '74'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UADDL2 Vd.2D,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'sub_op': False, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_long'),
    'vaddl_high_u8': ARMSema(intrin='vaddl_high_u8', inst='UADDL2', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '69'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), Var('esize', '34')], '35'), Var('unsigned', '36')], '37')), Update(Var('element2', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand2', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), IfElse(Var('sub_op', '47'), [Update(Var('sum', '48'), BinaryExpr('-', Var('element1', '49'), Var('element2', '50'), '51'))], [Update(Var('sum', '52'), BinaryExpr('+', Var('element1', '53'), Var('element2', '54'), '55'))], '56'), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), ArrayIndex(Var('sum', '63'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '64'), '65'), Number(1), '66'), Number(0), '67')], '68'))], 1, '70'), Update(ArrayIndex(Var('V', '71'), [Var('d', '72')], '73'), Var('result', '74'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UADDL2 Vd.8H,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'sub_op': False, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_long'),
    'vaddl_s16': ARMSema(intrin='vaddl_s16', inst='SADDL', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '69'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), Var('esize', '34')], '35'), Var('unsigned', '36')], '37')), Update(Var('element2', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand2', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), IfElse(Var('sub_op', '47'), [Update(Var('sum', '48'), BinaryExpr('-', Var('element1', '49'), Var('element2', '50'), '51'))], [Update(Var('sum', '52'), BinaryExpr('+', Var('element1', '53'), Var('element2', '54'), '55'))], '56'), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), ArrayIndex(Var('sum', '63'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '64'), '65'), Number(1), '66'), Number(0), '67')], '68'))], 1, '70'), Update(ArrayIndex(Var('V', '71'), [Var('d', '72')], '73'), Var('result', '74'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SADDL Vd.4S,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'sub_op': False, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_long'),
    'vaddl_s32': ARMSema(intrin='vaddl_s32', inst='SADDL', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '69'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), Var('esize', '34')], '35'), Var('unsigned', '36')], '37')), Update(Var('element2', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand2', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), IfElse(Var('sub_op', '47'), [Update(Var('sum', '48'), BinaryExpr('-', Var('element1', '49'), Var('element2', '50'), '51'))], [Update(Var('sum', '52'), BinaryExpr('+', Var('element1', '53'), Var('element2', '54'), '55'))], '56'), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), ArrayIndex(Var('sum', '63'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '64'), '65'), Number(1), '66'), Number(0), '67')], '68'))], 1, '70'), Update(ArrayIndex(Var('V', '71'), [Var('d', '72')], '73'), Var('result', '74'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SADDL Vd.2D,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'sub_op': False, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_long'),
    'vaddl_s8': ARMSema(intrin='vaddl_s8', inst='SADDL', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '69'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), Var('esize', '34')], '35'), Var('unsigned', '36')], '37')), Update(Var('element2', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand2', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), IfElse(Var('sub_op', '47'), [Update(Var('sum', '48'), BinaryExpr('-', Var('element1', '49'), Var('element2', '50'), '51'))], [Update(Var('sum', '52'), BinaryExpr('+', Var('element1', '53'), Var('element2', '54'), '55'))], '56'), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), ArrayIndex(Var('sum', '63'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '64'), '65'), Number(1), '66'), Number(0), '67')], '68'))], 1, '70'), Update(ArrayIndex(Var('V', '71'), [Var('d', '72')], '73'), Var('result', '74'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SADDL Vd.8H,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'sub_op': False, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_long'),
    'vaddl_u16': ARMSema(intrin='vaddl_u16', inst='UADDL', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '69'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), Var('esize', '34')], '35'), Var('unsigned', '36')], '37')), Update(Var('element2', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand2', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), IfElse(Var('sub_op', '47'), [Update(Var('sum', '48'), BinaryExpr('-', Var('element1', '49'), Var('element2', '50'), '51'))], [Update(Var('sum', '52'), BinaryExpr('+', Var('element1', '53'), Var('element2', '54'), '55'))], '56'), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), ArrayIndex(Var('sum', '63'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '64'), '65'), Number(1), '66'), Number(0), '67')], '68'))], 1, '70'), Update(ArrayIndex(Var('V', '71'), [Var('d', '72')], '73'), Var('result', '74'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UADDL Vd.4S,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'sub_op': False, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_long'),
    'vaddl_u32': ARMSema(intrin='vaddl_u32', inst='UADDL', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '69'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), Var('esize', '34')], '35'), Var('unsigned', '36')], '37')), Update(Var('element2', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand2', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), IfElse(Var('sub_op', '47'), [Update(Var('sum', '48'), BinaryExpr('-', Var('element1', '49'), Var('element2', '50'), '51'))], [Update(Var('sum', '52'), BinaryExpr('+', Var('element1', '53'), Var('element2', '54'), '55'))], '56'), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), ArrayIndex(Var('sum', '63'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '64'), '65'), Number(1), '66'), Number(0), '67')], '68'))], 1, '70'), Update(ArrayIndex(Var('V', '71'), [Var('d', '72')], '73'), Var('result', '74'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UADDL Vd.2D,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'sub_op': False, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_long'),
    'vaddl_u8': ARMSema(intrin='vaddl_u8', inst='UADDL', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '69'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), Var('esize', '34')], '35'), Var('unsigned', '36')], '37')), Update(Var('element2', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand2', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), IfElse(Var('sub_op', '47'), [Update(Var('sum', '48'), BinaryExpr('-', Var('element1', '49'), Var('element2', '50'), '51'))], [Update(Var('sum', '52'), BinaryExpr('+', Var('element1', '53'), Var('element2', '54'), '55'))], '56'), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), ArrayIndex(Var('sum', '63'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '64'), '65'), Number(1), '66'), Number(0), '67')], '68'))], 1, '70'), Update(ArrayIndex(Var('V', '71'), [Var('d', '72')], '73'), Var('result', '74'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UADDL Vd.8H,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'sub_op': False, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_long'),
    'vaddq_s16': ARMSema(intrin='vaddq_s16', inst='ADD', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='int16x8_t', ret_is_signed=True, inst_form='ADD Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vaddq_s32': ARMSema(intrin='vaddq_s32', inst='ADD', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='int32x4_t', ret_is_signed=True, inst_form='ADD Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vaddq_s64': ARMSema(intrin='vaddq_s64', inst='ADD', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='int64x2_t', ret_is_signed=True, inst_form='ADD Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vaddq_s8': ARMSema(intrin='vaddq_s8', inst='ADD', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='int8x16_t', ret_is_signed=True, inst_form='ADD Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vaddq_u16': ARMSema(intrin='vaddq_u16', inst='ADD', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='ADD Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vaddq_u32': ARMSema(intrin='vaddq_u32', inst='ADD', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='ADD Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vaddq_u64': ARMSema(intrin='vaddq_u64', inst='ADD', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='ADD Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vaddq_u8': ARMSema(intrin='vaddq_u8', inst='ADD', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='ADD Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vaddv_s16': ARMSema(intrin='vaddv_s16', inst='ADDV', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), Update(ArrayIndex(Var('V', '8'), [Var('d', '9')], '10'), Call('Reduce', [Var('op', '12'), Var('operand', '13'), Var('esize', '14')], '15'))], rettype='int16_t', ret_is_signed=True, inst_form='ADDV Hd,Vn.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'op': 5}, belongs_to='aarch64_vector_reduce_add_simd'),
    'vaddv_s32': ARMSema(intrin='vaddv_s32', inst='ADDP', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), Update(ArrayIndex(Var('V', '8'), [Var('d', '9')], '10'), Call('Reduce', [Var('op', '12'), Var('operand', '13'), Var('esize', '14')], '15'))], rettype='int32_t', ret_is_signed=True, inst_form='ADDP  Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'op': 5}, belongs_to='aarch64_vector_reduce_add_simd'),
    'vaddv_s8': ARMSema(intrin='vaddv_s8', inst='ADDV', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), Update(ArrayIndex(Var('V', '8'), [Var('d', '9')], '10'), Call('Reduce', [Var('op', '12'), Var('operand', '13'), Var('esize', '14')], '15'))], rettype='int8_t', ret_is_signed=True, inst_form='ADDV Bd,Vn.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'op': 5}, belongs_to='aarch64_vector_reduce_add_simd'),
    'vaddv_u16': ARMSema(intrin='vaddv_u16', inst='ADDV', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), Update(ArrayIndex(Var('V', '8'), [Var('d', '9')], '10'), Call('Reduce', [Var('op', '12'), Var('operand', '13'), Var('esize', '14')], '15'))], rettype='uint16_t', ret_is_signed=False, inst_form='ADDV Hd,Vn.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'op': 5}, belongs_to='aarch64_vector_reduce_add_simd'),
    'vaddv_u32': ARMSema(intrin='vaddv_u32', inst='ADDP', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), Update(ArrayIndex(Var('V', '8'), [Var('d', '9')], '10'), Call('Reduce', [Var('op', '12'), Var('operand', '13'), Var('esize', '14')], '15'))], rettype='uint32_t', ret_is_signed=False, inst_form='ADDP  Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'op': 5}, belongs_to='aarch64_vector_reduce_add_simd'),
    'vaddv_u8': ARMSema(intrin='vaddv_u8', inst='ADDV', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), Update(ArrayIndex(Var('V', '8'), [Var('d', '9')], '10'), Call('Reduce', [Var('op', '12'), Var('operand', '13'), Var('esize', '14')], '15'))], rettype='uint8_t', ret_is_signed=False, inst_form='ADDV Bd,Vn.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'op': 5}, belongs_to='aarch64_vector_reduce_add_simd'),
    'vaddvq_s16': ARMSema(intrin='vaddvq_s16', inst='ADDV', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), Update(ArrayIndex(Var('V', '8'), [Var('d', '9')], '10'), Call('Reduce', [Var('op', '12'), Var('operand', '13'), Var('esize', '14')], '15'))], rettype='int16_t', ret_is_signed=True, inst_form='ADDV Hd,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'op': 5}, belongs_to='aarch64_vector_reduce_add_simd'),
    'vaddvq_s32': ARMSema(intrin='vaddvq_s32', inst='ADDV', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), Update(ArrayIndex(Var('V', '8'), [Var('d', '9')], '10'), Call('Reduce', [Var('op', '12'), Var('operand', '13'), Var('esize', '14')], '15'))], rettype='int32_t', ret_is_signed=True, inst_form='ADDV Sd,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'op': 5}, belongs_to='aarch64_vector_reduce_add_simd'),
    'vaddvq_s64': ARMSema(intrin='vaddvq_s64', inst='ADDP', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), Update(ArrayIndex(Var('V', '8'), [Var('d', '9')], '10'), Call('Reduce', [Var('op', '12'), Var('operand', '13'), Var('esize', '14')], '15'))], rettype='int64_t', ret_is_signed=True, inst_form='ADDP Dd,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'op': 5}, belongs_to='aarch64_vector_reduce_add_sisd'),
    'vaddvq_s8': ARMSema(intrin='vaddvq_s8', inst='ADDV', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), Update(ArrayIndex(Var('V', '8'), [Var('d', '9')], '10'), Call('Reduce', [Var('op', '12'), Var('operand', '13'), Var('esize', '14')], '15'))], rettype='int8_t', ret_is_signed=True, inst_form='ADDV Bd,Vn.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'op': 5}, belongs_to='aarch64_vector_reduce_add_simd'),
    'vaddvq_u16': ARMSema(intrin='vaddvq_u16', inst='ADDV', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), Update(ArrayIndex(Var('V', '8'), [Var('d', '9')], '10'), Call('Reduce', [Var('op', '12'), Var('operand', '13'), Var('esize', '14')], '15'))], rettype='uint16_t', ret_is_signed=False, inst_form='ADDV Hd,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'op': 5}, belongs_to='aarch64_vector_reduce_add_simd'),
    'vaddvq_u32': ARMSema(intrin='vaddvq_u32', inst='ADDV', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), Update(ArrayIndex(Var('V', '8'), [Var('d', '9')], '10'), Call('Reduce', [Var('op', '12'), Var('operand', '13'), Var('esize', '14')], '15'))], rettype='uint32_t', ret_is_signed=False, inst_form='ADDV Sd,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'op': 5}, belongs_to='aarch64_vector_reduce_add_simd'),
    'vaddvq_u64': ARMSema(intrin='vaddvq_u64', inst='ADDP', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), Update(ArrayIndex(Var('V', '8'), [Var('d', '9')], '10'), Call('Reduce', [Var('op', '12'), Var('operand', '13'), Var('esize', '14')], '15'))], rettype='uint64_t', ret_is_signed=False, inst_form='ADDP Dd,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'op': 5}, belongs_to='aarch64_vector_reduce_add_sisd'),
    'vaddvq_u8': ARMSema(intrin='vaddvq_u8', inst='ADDV', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), Update(ArrayIndex(Var('V', '8'), [Var('d', '9')], '10'), Call('Reduce', [Var('op', '12'), Var('operand', '13'), Var('esize', '14')], '15'))], rettype='uint8_t', ret_is_signed=False, inst_form='ADDV Bd,Vn.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'op': 5}, belongs_to='aarch64_vector_reduce_add_simd'),
    'vaddw_high_s16': ARMSema(intrin='vaddw_high_s16', inst='SADDW2', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), BinaryExpr('*', Number(2), Var('esize', '34'), '35')], '36'), Var('unsigned', '37')], '38')), Update(Var('element2', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand2', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), IfElse(Var('sub_op', '48'), [Update(Var('sum', '49'), BinaryExpr('-', Var('element1', '50'), Var('element2', '51'), '52'))], [Update(Var('sum', '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], '57'), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), ArrayIndex(Var('sum', '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SADDW2 Vd.4S,Vn.4S,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'sub_op': False, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_wide'),
    'vaddw_high_s32': ARMSema(intrin='vaddw_high_s32', inst='SADDW2', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), BinaryExpr('*', Number(2), Var('esize', '34'), '35')], '36'), Var('unsigned', '37')], '38')), Update(Var('element2', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand2', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), IfElse(Var('sub_op', '48'), [Update(Var('sum', '49'), BinaryExpr('-', Var('element1', '50'), Var('element2', '51'), '52'))], [Update(Var('sum', '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], '57'), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), ArrayIndex(Var('sum', '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SADDW2 Vd.2D,Vn.2D,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'sub_op': False, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_wide'),
    'vaddw_high_s8': ARMSema(intrin='vaddw_high_s8', inst='SADDW2', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), BinaryExpr('*', Number(2), Var('esize', '34'), '35')], '36'), Var('unsigned', '37')], '38')), Update(Var('element2', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand2', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), IfElse(Var('sub_op', '48'), [Update(Var('sum', '49'), BinaryExpr('-', Var('element1', '50'), Var('element2', '51'), '52'))], [Update(Var('sum', '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], '57'), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), ArrayIndex(Var('sum', '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SADDW2 Vd.8H,Vn.8H,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'sub_op': False, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_wide'),
    'vaddw_high_u16': ARMSema(intrin='vaddw_high_u16', inst='UADDW2', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), BinaryExpr('*', Number(2), Var('esize', '34'), '35')], '36'), Var('unsigned', '37')], '38')), Update(Var('element2', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand2', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), IfElse(Var('sub_op', '48'), [Update(Var('sum', '49'), BinaryExpr('-', Var('element1', '50'), Var('element2', '51'), '52'))], [Update(Var('sum', '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], '57'), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), ArrayIndex(Var('sum', '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UADDW2 Vd.4S,Vn.4S,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'sub_op': False, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_wide'),
    'vaddw_high_u32': ARMSema(intrin='vaddw_high_u32', inst='UADDW2', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), BinaryExpr('*', Number(2), Var('esize', '34'), '35')], '36'), Var('unsigned', '37')], '38')), Update(Var('element2', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand2', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), IfElse(Var('sub_op', '48'), [Update(Var('sum', '49'), BinaryExpr('-', Var('element1', '50'), Var('element2', '51'), '52'))], [Update(Var('sum', '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], '57'), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), ArrayIndex(Var('sum', '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UADDW2 Vd.2D,Vn.2D,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'sub_op': False, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_wide'),
    'vaddw_high_u8': ARMSema(intrin='vaddw_high_u8', inst='UADDW2', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), BinaryExpr('*', Number(2), Var('esize', '34'), '35')], '36'), Var('unsigned', '37')], '38')), Update(Var('element2', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand2', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), IfElse(Var('sub_op', '48'), [Update(Var('sum', '49'), BinaryExpr('-', Var('element1', '50'), Var('element2', '51'), '52'))], [Update(Var('sum', '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], '57'), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), ArrayIndex(Var('sum', '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UADDW2 Vd.8H,Vn.8H,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'sub_op': False, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_wide'),
    'vaddw_s16': ARMSema(intrin='vaddw_s16', inst='SADDW', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), BinaryExpr('*', Number(2), Var('esize', '34'), '35')], '36'), Var('unsigned', '37')], '38')), Update(Var('element2', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand2', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), IfElse(Var('sub_op', '48'), [Update(Var('sum', '49'), BinaryExpr('-', Var('element1', '50'), Var('element2', '51'), '52'))], [Update(Var('sum', '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], '57'), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), ArrayIndex(Var('sum', '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SADDW Vd.4S,Vn.4S,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'sub_op': False, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_wide'),
    'vaddw_s32': ARMSema(intrin='vaddw_s32', inst='SADDW', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), BinaryExpr('*', Number(2), Var('esize', '34'), '35')], '36'), Var('unsigned', '37')], '38')), Update(Var('element2', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand2', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), IfElse(Var('sub_op', '48'), [Update(Var('sum', '49'), BinaryExpr('-', Var('element1', '50'), Var('element2', '51'), '52'))], [Update(Var('sum', '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], '57'), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), ArrayIndex(Var('sum', '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SADDW Vd.2D,Vn.2D,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'sub_op': False, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_wide'),
    'vaddw_s8': ARMSema(intrin='vaddw_s8', inst='SADDW', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), BinaryExpr('*', Number(2), Var('esize', '34'), '35')], '36'), Var('unsigned', '37')], '38')), Update(Var('element2', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand2', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), IfElse(Var('sub_op', '48'), [Update(Var('sum', '49'), BinaryExpr('-', Var('element1', '50'), Var('element2', '51'), '52'))], [Update(Var('sum', '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], '57'), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), ArrayIndex(Var('sum', '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SADDW Vd.8H,Vn.8H,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'sub_op': False, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_wide'),
    'vaddw_u16': ARMSema(intrin='vaddw_u16', inst='UADDW', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), BinaryExpr('*', Number(2), Var('esize', '34'), '35')], '36'), Var('unsigned', '37')], '38')), Update(Var('element2', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand2', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), IfElse(Var('sub_op', '48'), [Update(Var('sum', '49'), BinaryExpr('-', Var('element1', '50'), Var('element2', '51'), '52'))], [Update(Var('sum', '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], '57'), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), ArrayIndex(Var('sum', '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UADDW Vd.4S,Vn.4S,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'sub_op': False, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_wide'),
    'vaddw_u32': ARMSema(intrin='vaddw_u32', inst='UADDW', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), BinaryExpr('*', Number(2), Var('esize', '34'), '35')], '36'), Var('unsigned', '37')], '38')), Update(Var('element2', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand2', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), IfElse(Var('sub_op', '48'), [Update(Var('sum', '49'), BinaryExpr('-', Var('element1', '50'), Var('element2', '51'), '52'))], [Update(Var('sum', '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], '57'), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), ArrayIndex(Var('sum', '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UADDW Vd.2D,Vn.2D,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'sub_op': False, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_wide'),
    'vaddw_u8': ARMSema(intrin='vaddw_u8', inst='UADDW', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), BinaryExpr('*', Number(2), Var('esize', '34'), '35')], '36'), Var('unsigned', '37')], '38')), Update(Var('element2', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand2', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), IfElse(Var('sub_op', '48'), [Update(Var('sum', '49'), BinaryExpr('-', Var('element1', '50'), Var('element2', '51'), '52'))], [Update(Var('sum', '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], '57'), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), ArrayIndex(Var('sum', '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UADDW Vd.8H,Vn.8H,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'sub_op': False, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_wide'),
    'vand_s16': ARMSema(intrin='vand_s16', inst='AND', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int16x4_t', ret_is_signed=True, inst_form='AND Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': False, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vand_s32': ARMSema(intrin='vand_s32', inst='AND', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int32x2_t', ret_is_signed=True, inst_form='AND Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': False, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vand_s64': ARMSema(intrin='vand_s64', inst='AND', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int64x1_t', ret_is_signed=True, inst_form='AND Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': False, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vand_s8': ARMSema(intrin='vand_s8', inst='AND', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int8x8_t', ret_is_signed=True, inst_form='AND Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': False, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vand_u16': ARMSema(intrin='vand_u16', inst='AND', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='AND Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': False, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vand_u32': ARMSema(intrin='vand_u32', inst='AND', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='AND Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': False, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vand_u64': ARMSema(intrin='vand_u64', inst='AND', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='AND Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': False, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vand_u8': ARMSema(intrin='vand_u8', inst='AND', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='AND Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': False, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vandq_s16': ARMSema(intrin='vandq_s16', inst='AND', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int16x8_t', ret_is_signed=True, inst_form='AND Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': False, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vandq_s32': ARMSema(intrin='vandq_s32', inst='AND', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int32x4_t', ret_is_signed=True, inst_form='AND Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': False, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vandq_s64': ARMSema(intrin='vandq_s64', inst='AND', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int64x2_t', ret_is_signed=True, inst_form='AND Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': False, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vandq_s8': ARMSema(intrin='vandq_s8', inst='AND', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int8x16_t', ret_is_signed=True, inst_form='AND Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': False, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vandq_u16': ARMSema(intrin='vandq_u16', inst='AND', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='AND Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': False, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vandq_u32': ARMSema(intrin='vandq_u32', inst='AND', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='AND Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': False, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vandq_u64': ARMSema(intrin='vandq_u64', inst='AND', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='AND Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': False, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vandq_u8': ARMSema(intrin='vandq_u8', inst='AND', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='AND Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': False, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vbic_s16': ARMSema(intrin='vbic_s16', inst='BIC', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int16x4_t', ret_is_signed=True, inst_form='BIC Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': True, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vbic_s32': ARMSema(intrin='vbic_s32', inst='BIC', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int32x2_t', ret_is_signed=True, inst_form='BIC Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': True, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vbic_s64': ARMSema(intrin='vbic_s64', inst='BIC', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int64x1_t', ret_is_signed=True, inst_form='BIC Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': True, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vbic_s8': ARMSema(intrin='vbic_s8', inst='BIC', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int8x8_t', ret_is_signed=True, inst_form='BIC Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': True, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vbic_u16': ARMSema(intrin='vbic_u16', inst='BIC', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='BIC Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': True, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vbic_u32': ARMSema(intrin='vbic_u32', inst='BIC', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='BIC Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': True, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vbic_u64': ARMSema(intrin='vbic_u64', inst='BIC', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='BIC Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': True, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vbic_u8': ARMSema(intrin='vbic_u8', inst='BIC', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='BIC Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': True, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vbicq_s16': ARMSema(intrin='vbicq_s16', inst='BIC', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int16x8_t', ret_is_signed=True, inst_form='BIC Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': True, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vbicq_s32': ARMSema(intrin='vbicq_s32', inst='BIC', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int32x4_t', ret_is_signed=True, inst_form='BIC Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': True, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vbicq_s64': ARMSema(intrin='vbicq_s64', inst='BIC', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int64x2_t', ret_is_signed=True, inst_form='BIC Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': True, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vbicq_s8': ARMSema(intrin='vbicq_s8', inst='BIC', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int8x16_t', ret_is_signed=True, inst_form='BIC Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': True, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vbicq_u16': ARMSema(intrin='vbicq_u16', inst='BIC', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='BIC Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': True, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vbicq_u32': ARMSema(intrin='vbicq_u32', inst='BIC', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='BIC Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': True, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vbicq_u64': ARMSema(intrin='vbicq_u64', inst='BIC', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='BIC Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': True, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vbicq_u8': ARMSema(intrin='vbicq_u8', inst='BIC', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='BIC Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': True, 'op': 0}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vbsl_s16': ARMSema(intrin='vbsl_s16', inst='BSL', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='int16x4_t', ret_is_signed=True, inst_form='BSL Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'vbsl_s32': ARMSema(intrin='vbsl_s32', inst='BSL', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='int32x2_t', ret_is_signed=True, inst_form='BSL Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'vbsl_s64': ARMSema(intrin='vbsl_s64', inst='BSL', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='int64x1_t', ret_is_signed=True, inst_form='BSL Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'vbsl_s8': ARMSema(intrin='vbsl_s8', inst='BSL', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='int8x8_t', ret_is_signed=True, inst_form='BSL Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'vbsl_u16': ARMSema(intrin='vbsl_u16', inst='BSL', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='BSL Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'vbsl_u32': ARMSema(intrin='vbsl_u32', inst='BSL', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='BSL Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'vbsl_u64': ARMSema(intrin='vbsl_u64', inst='BSL', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='BSL Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'vbsl_u8': ARMSema(intrin='vbsl_u8', inst='BSL', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='BSL Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'vbslq_s16': ARMSema(intrin='vbslq_s16', inst='BSL', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='int16x8_t', ret_is_signed=True, inst_form='BSL Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'vbslq_s32': ARMSema(intrin='vbslq_s32', inst='BSL', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='int32x4_t', ret_is_signed=True, inst_form='BSL Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'vbslq_s64': ARMSema(intrin='vbslq_s64', inst='BSL', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='int64x2_t', ret_is_signed=True, inst_form='BSL Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'vbslq_s8': ARMSema(intrin='vbslq_s8', inst='BSL', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='int8x16_t', ret_is_signed=True, inst_form='BSL Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'vbslq_u16': ARMSema(intrin='vbslq_u16', inst='BSL', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='BSL Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'vbslq_u32': ARMSema(intrin='vbslq_u32', inst='BSL', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='BSL Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'vbslq_u64': ARMSema(intrin='vbslq_u64', inst='BSL', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='BSL Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'vbslq_u8': ARMSema(intrin='vbslq_u8', inst='BSL', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='BSL Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'vceq_s16': ARMSema(intrin='vceq_s16', inst='CMEQ', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='CMEQ Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'and_test': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vceq_s32': ARMSema(intrin='vceq_s32', inst='CMEQ', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='CMEQ Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'and_test': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vceq_s64': ARMSema(intrin='vceq_s64', inst='CMEQ', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='CMEQ Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'and_test': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_sisd'),
    'vceq_s8': ARMSema(intrin='vceq_s8', inst='CMEQ', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='CMEQ Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'and_test': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vceq_u16': ARMSema(intrin='vceq_u16', inst='CMEQ', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='CMEQ Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'and_test': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vceq_u32': ARMSema(intrin='vceq_u32', inst='CMEQ', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='CMEQ Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'and_test': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vceq_u64': ARMSema(intrin='vceq_u64', inst='CMEQ', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='CMEQ Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'and_test': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_sisd'),
    'vceq_u8': ARMSema(intrin='vceq_u8', inst='CMEQ', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='CMEQ Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'and_test': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vceqd_s64': ARMSema(intrin='vceqd_s64', inst='CMEQ', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64_t', ret_is_signed=False, inst_form='CMEQ Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'and_test': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_sisd'),
    'vceqd_u64': ARMSema(intrin='vceqd_u64', inst='CMEQ', params=[Parameter(name='a', type='uint64_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64_t', ret_is_signed=False, inst_form='CMEQ Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'and_test': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_sisd'),
    'vceqq_s16': ARMSema(intrin='vceqq_s16', inst='CMEQ', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='CMEQ Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'and_test': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vceqq_s32': ARMSema(intrin='vceqq_s32', inst='CMEQ', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='CMEQ Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'and_test': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vceqq_s64': ARMSema(intrin='vceqq_s64', inst='CMEQ', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='CMEQ Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'and_test': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vceqq_s8': ARMSema(intrin='vceqq_s8', inst='CMEQ', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='CMEQ Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'and_test': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vceqq_u16': ARMSema(intrin='vceqq_u16', inst='CMEQ', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='CMEQ Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'and_test': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vceqq_u32': ARMSema(intrin='vceqq_u32', inst='CMEQ', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='CMEQ Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'and_test': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vceqq_u64': ARMSema(intrin='vceqq_u64', inst='CMEQ', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='CMEQ Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'and_test': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vceqq_u8': ARMSema(intrin='vceqq_u8', inst='CMEQ', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='CMEQ Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'and_test': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vceqz_s16': ARMSema(intrin='vceqz_s16', inst='CMEQ', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='CMEQ Vd.4H,Vn.4H,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'comparison': 2}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vceqz_s32': ARMSema(intrin='vceqz_s32', inst='CMEQ', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='CMEQ Vd.2S,Vn.2S,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'comparison': 2}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vceqz_s64': ARMSema(intrin='vceqz_s64', inst='CMEQ', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='CMEQ Dd,Dn,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'comparison': 2}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_sisd'),
    'vceqz_s8': ARMSema(intrin='vceqz_s8', inst='CMEQ', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='CMEQ Vd.8B,Vn.8B,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'comparison': 2}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vceqz_u16': ARMSema(intrin='vceqz_u16', inst='CMEQ', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='CMEQ Vd.4H,Vn.4H,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'comparison': 2}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vceqz_u32': ARMSema(intrin='vceqz_u32', inst='CMEQ', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='CMEQ Vd.2S,Vn.2S,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'comparison': 2}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vceqz_u64': ARMSema(intrin='vceqz_u64', inst='CMEQ', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='CMEQ Dd,Dn,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'comparison': 2}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_sisd'),
    'vceqz_u8': ARMSema(intrin='vceqz_u8', inst='CMEQ', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='CMEQ Vd.8B,Vn.8B,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'comparison': 2}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vceqzd_s64': ARMSema(intrin='vceqzd_s64', inst='CMEQ', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint64_t', ret_is_signed=False, inst_form='CMEQ Dd,Dn,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'comparison': 2}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_sisd'),
    'vceqzd_u64': ARMSema(intrin='vceqzd_u64', inst='CMEQ', params=[Parameter(name='a', type='uint64_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint64_t', ret_is_signed=False, inst_form='CMEQ Dd,Dn,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'comparison': 2}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_sisd'),
    'vceqzq_s16': ARMSema(intrin='vceqzq_s16', inst='CMEQ', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='CMEQ Vd.8H,Vn.8H,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'comparison': 2}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vceqzq_s32': ARMSema(intrin='vceqzq_s32', inst='CMEQ', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='CMEQ Vd.4S,Vn.4S,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'comparison': 2}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vceqzq_s64': ARMSema(intrin='vceqzq_s64', inst='CMEQ', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='CMEQ Vd.2D,Vn.2D,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'comparison': 2}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vceqzq_s8': ARMSema(intrin='vceqzq_s8', inst='CMEQ', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='CMEQ Vd.16B,Vn.16B,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'comparison': 2}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vceqzq_u16': ARMSema(intrin='vceqzq_u16', inst='CMEQ', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='CMEQ Vd.8H,Vn.8H,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'comparison': 2}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vceqzq_u32': ARMSema(intrin='vceqzq_u32', inst='CMEQ', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='CMEQ Vd.4S,Vn.4S,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'comparison': 2}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vceqzq_u64': ARMSema(intrin='vceqzq_u64', inst='CMEQ', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='CMEQ Vd.2D,Vn.2D,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'comparison': 2}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vceqzq_u8': ARMSema(intrin='vceqzq_u8', inst='CMEQ', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='CMEQ Vd.16B,Vn.16B,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'comparison': 2}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vcge_s16': ARMSema(intrin='vcge_s16', inst='CMGE', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='CMGE Vd.4H,Vm.4H,Vn.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': False, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcge_s32': ARMSema(intrin='vcge_s32', inst='CMGE', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='CMGE Vd.2S,Vm.2S,Vn.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': False, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcge_s64': ARMSema(intrin='vcge_s64', inst='CMGE', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='CMGE Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_sisd'),
    'vcge_s8': ARMSema(intrin='vcge_s8', inst='CMGE', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='CMGE Vd.8B,Vm.8B,Vn.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': False, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcge_u16': ARMSema(intrin='vcge_u16', inst='CMHS', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='CMHS Vd.4H,Vm.4H,Vn.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': True, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcge_u32': ARMSema(intrin='vcge_u32', inst='CMHS', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='CMHS Vd.2S,Vm.2S,Vn.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': True, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcge_u64': ARMSema(intrin='vcge_u64', inst='CMHS', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='CMHS Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_sisd'),
    'vcge_u8': ARMSema(intrin='vcge_u8', inst='CMHS', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='CMHS Vd.8B,Vm.8B,Vn.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': True, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcged_s64': ARMSema(intrin='vcged_s64', inst='CMGE', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64_t', ret_is_signed=False, inst_form='CMGE Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_sisd'),
    'vcged_u64': ARMSema(intrin='vcged_u64', inst='CMHS', params=[Parameter(name='a', type='uint64_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64_t', ret_is_signed=False, inst_form='CMHS Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_sisd'),
    'vcgeq_s16': ARMSema(intrin='vcgeq_s16', inst='CMGE', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='CMGE Vd.8H,Vm.8H,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': False, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcgeq_s32': ARMSema(intrin='vcgeq_s32', inst='CMGE', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='CMGE Vd.4S,Vm.4S,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': False, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcgeq_s64': ARMSema(intrin='vcgeq_s64', inst='CMGE', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='CMGE Vd.2D,Vm.2D,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': False, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcgeq_s8': ARMSema(intrin='vcgeq_s8', inst='CMGE', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='CMGE Vd.16B,Vm.16B,Vn.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': False, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcgeq_u16': ARMSema(intrin='vcgeq_u16', inst='CMHS', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='CMHS Vd.8H,Vm.8H,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': True, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcgeq_u32': ARMSema(intrin='vcgeq_u32', inst='CMHS', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='CMHS Vd.4S,Vm.4S,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': True, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcgeq_u64': ARMSema(intrin='vcgeq_u64', inst='CMHS', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='CMHS Vd.2D,Vm.2D,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': True, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcgeq_u8': ARMSema(intrin='vcgeq_u8', inst='CMHS', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='CMHS Vd.16B,Vm.16B,Vn.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': True, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcgez_s16': ARMSema(intrin='vcgez_s16', inst='CMGE', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='CMGE Vd.4H,Vn.4H,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'comparison': 1}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vcgez_s32': ARMSema(intrin='vcgez_s32', inst='CMGE', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='CMGE Vd.2S,Vn.2S,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'comparison': 1}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vcgez_s64': ARMSema(intrin='vcgez_s64', inst='CMGE', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='CMGE Dd,Dn,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'comparison': 1}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_sisd'),
    'vcgez_s8': ARMSema(intrin='vcgez_s8', inst='CMGE', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='CMGE Vd.8B,Vn.8B,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'comparison': 1}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vcgezd_s64': ARMSema(intrin='vcgezd_s64', inst='CMGE', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint64_t', ret_is_signed=False, inst_form='CMGE Dd,Dn,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'comparison': 1}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_sisd'),
    'vcgezq_s16': ARMSema(intrin='vcgezq_s16', inst='CMGE', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='CMGE Vd.8H,Vn.8H,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'comparison': 1}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vcgezq_s32': ARMSema(intrin='vcgezq_s32', inst='CMGE', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='CMGE Vd.4S,Vn.4S,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'comparison': 1}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vcgezq_s64': ARMSema(intrin='vcgezq_s64', inst='CMGE', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='CMGE Vd.2D,Vn.2D,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'comparison': 1}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vcgezq_s8': ARMSema(intrin='vcgezq_s8', inst='CMGE', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='CMGE Vd.16B,Vn.16B,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'comparison': 1}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vcgt_s16': ARMSema(intrin='vcgt_s16', inst='CMGT', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='CMGT Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': False, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcgt_s32': ARMSema(intrin='vcgt_s32', inst='CMGT', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='CMGT Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': False, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcgt_s64': ARMSema(intrin='vcgt_s64', inst='CMGT', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='CMGT Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_sisd'),
    'vcgt_s8': ARMSema(intrin='vcgt_s8', inst='CMGT', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='CMGT Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': False, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcgt_u16': ARMSema(intrin='vcgt_u16', inst='CMHI', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='CMHI Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': True, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcgt_u32': ARMSema(intrin='vcgt_u32', inst='CMHI', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='CMHI Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': True, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcgt_u64': ARMSema(intrin='vcgt_u64', inst='CMHI', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='CMHI Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_sisd'),
    'vcgt_u8': ARMSema(intrin='vcgt_u8', inst='CMHI', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='CMHI Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': True, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcgtd_s64': ARMSema(intrin='vcgtd_s64', inst='CMGT', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64_t', ret_is_signed=False, inst_form='CMGT Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_sisd'),
    'vcgtd_u64': ARMSema(intrin='vcgtd_u64', inst='CMHI', params=[Parameter(name='a', type='uint64_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64_t', ret_is_signed=False, inst_form='CMHI Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_sisd'),
    'vcgtq_s16': ARMSema(intrin='vcgtq_s16', inst='CMGT', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='CMGT Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': False, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcgtq_s32': ARMSema(intrin='vcgtq_s32', inst='CMGT', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='CMGT Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': False, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcgtq_s64': ARMSema(intrin='vcgtq_s64', inst='CMGT', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='CMGT Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': False, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcgtq_s8': ARMSema(intrin='vcgtq_s8', inst='CMGT', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='CMGT Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': False, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcgtq_u16': ARMSema(intrin='vcgtq_u16', inst='CMHI', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='CMHI Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': True, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcgtq_u32': ARMSema(intrin='vcgtq_u32', inst='CMHI', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='CMHI Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': True, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcgtq_u64': ARMSema(intrin='vcgtq_u64', inst='CMHI', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='CMHI Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': True, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcgtq_u8': ARMSema(intrin='vcgtq_u8', inst='CMHI', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='CMHI Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': True, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcgtz_s16': ARMSema(intrin='vcgtz_s16', inst='CMGT', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='CMGT Vd.4H,Vn.4H,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'comparison': 0}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vcgtz_s32': ARMSema(intrin='vcgtz_s32', inst='CMGT', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='CMGT Vd.2S,Vn.2S,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'comparison': 0}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vcgtz_s64': ARMSema(intrin='vcgtz_s64', inst='CMGT', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='CMGT Dd,Dn,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'comparison': 0}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_sisd'),
    'vcgtz_s8': ARMSema(intrin='vcgtz_s8', inst='CMGT', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='CMGT Vd.8B,Vn.8B,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'comparison': 0}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vcgtzd_s64': ARMSema(intrin='vcgtzd_s64', inst='CMGT', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint64_t', ret_is_signed=False, inst_form='CMGT Dd,Dn,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'comparison': 0}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_sisd'),
    'vcgtzq_s16': ARMSema(intrin='vcgtzq_s16', inst='CMGT', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='CMGT Vd.8H,Vn.8H,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'comparison': 0}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vcgtzq_s32': ARMSema(intrin='vcgtzq_s32', inst='CMGT', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='CMGT Vd.4S,Vn.4S,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'comparison': 0}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vcgtzq_s64': ARMSema(intrin='vcgtzq_s64', inst='CMGT', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='CMGT Vd.2D,Vn.2D,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'comparison': 0}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vcgtzq_s8': ARMSema(intrin='vcgtzq_s8', inst='CMGT', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='CMGT Vd.16B,Vn.16B,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'comparison': 0}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vcle_s16': ARMSema(intrin='vcle_s16', inst='CMGE', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='CMGE Vd.4H,Vm.4H,Vn.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': False, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcle_s32': ARMSema(intrin='vcle_s32', inst='CMGE', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='CMGE Vd.2S,Vm.2S,Vn.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': False, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcle_s64': ARMSema(intrin='vcle_s64', inst='CMGE', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='CMGE Dd,Dm,Dn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_sisd'),
    'vcle_s8': ARMSema(intrin='vcle_s8', inst='CMGE', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='CMGE Vd.8B,Vm.8B,Vn.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': False, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcle_u16': ARMSema(intrin='vcle_u16', inst='CMHS', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='CMHS Vd.4H,Vm.4H,Vn.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': True, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcle_u32': ARMSema(intrin='vcle_u32', inst='CMHS', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='CMHS Vd.2S,Vm.2S,Vn.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': True, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcle_u64': ARMSema(intrin='vcle_u64', inst='CMHS', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='CMHS Dd,Dm,Dn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_sisd'),
    'vcle_u8': ARMSema(intrin='vcle_u8', inst='CMHS', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='CMHS Vd.8B,Vm.8B,Vn.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': True, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcled_s64': ARMSema(intrin='vcled_s64', inst='CMGE', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64_t', ret_is_signed=False, inst_form='CMGE Dd,Dm,Dn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_sisd'),
    'vcled_u64': ARMSema(intrin='vcled_u64', inst='CMHS', params=[Parameter(name='a', type='uint64_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64_t', ret_is_signed=False, inst_form='CMHS Dd,Dm,Dn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_sisd'),
    'vcleq_s16': ARMSema(intrin='vcleq_s16', inst='CMGE', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='CMGE Vd.8H,Vm.8H,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': False, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcleq_s32': ARMSema(intrin='vcleq_s32', inst='CMGE', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='CMGE Vd.4S,Vm.4S,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': False, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcleq_s64': ARMSema(intrin='vcleq_s64', inst='CMGE', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='CMGE Vd.2D,Vm.2D,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': False, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcleq_s8': ARMSema(intrin='vcleq_s8', inst='CMGE', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='CMGE Vd.16B,Vm.16B,Vn.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': False, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcleq_u16': ARMSema(intrin='vcleq_u16', inst='CMHS', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='CMHS Vd.8H,Vm.8H,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': True, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcleq_u32': ARMSema(intrin='vcleq_u32', inst='CMHS', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='CMHS Vd.4S,Vm.4S,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': True, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcleq_u64': ARMSema(intrin='vcleq_u64', inst='CMHS', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='CMHS Vd.2D,Vm.2D,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': True, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcleq_u8': ARMSema(intrin='vcleq_u8', inst='CMHS', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='CMHS Vd.16B,Vm.16B,Vn.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': True, 'cmp_eq': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vclez_s16': ARMSema(intrin='vclez_s16', inst='CMLE', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='CMLE Vd.4H,Vn.4H,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'comparison': 3}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vclez_s32': ARMSema(intrin='vclez_s32', inst='CMLE', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='CMLE Vd.2S,Vn.2S,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'comparison': 3}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vclez_s64': ARMSema(intrin='vclez_s64', inst='CMLE', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='CMLE Dd,Dn,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'comparison': 3}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_sisd'),
    'vclez_s8': ARMSema(intrin='vclez_s8', inst='CMLE', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='CMLE Vd.8B,Vn.8B,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'comparison': 3}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vclezd_s64': ARMSema(intrin='vclezd_s64', inst='CMLE', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint64_t', ret_is_signed=False, inst_form='CMLE Dd,Dn,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'comparison': 3}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_sisd'),
    'vclezq_s16': ARMSema(intrin='vclezq_s16', inst='CMLE', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='CMLE Vd.8H,Vn.8H,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'comparison': 3}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vclezq_s32': ARMSema(intrin='vclezq_s32', inst='CMLE', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='CMLE Vd.4S,Vn.4S,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'comparison': 3}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vclezq_s64': ARMSema(intrin='vclezq_s64', inst='CMLE', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='CMLE Vd.2D,Vn.2D,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'comparison': 3}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vclezq_s8': ARMSema(intrin='vclezq_s8', inst='CMLE', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='CMLE Vd.16B,Vn.16B,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'comparison': 3}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_bulk_simd'),
    'vclt_s16': ARMSema(intrin='vclt_s16', inst='CMGT', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='CMGT Vd.4H,Vm.4H,Vn.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': False, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vclt_s32': ARMSema(intrin='vclt_s32', inst='CMGT', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='CMGT Vd.2S,Vm.2S,Vn.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': False, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vclt_s64': ARMSema(intrin='vclt_s64', inst='CMGT', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='CMGT Dd,Dm,Dn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_sisd'),
    'vclt_s8': ARMSema(intrin='vclt_s8', inst='CMGT', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='CMGT Vd.8B,Vm.8B,Vn.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': False, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vclt_u16': ARMSema(intrin='vclt_u16', inst='CMHI', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='CMHI Vd.4H,Vm.4H,Vn.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': True, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vclt_u32': ARMSema(intrin='vclt_u32', inst='CMHI', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='CMHI Vd.2S,Vm.2S,Vn.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': True, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vclt_u64': ARMSema(intrin='vclt_u64', inst='CMHI', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='CMHI Dd,Dm,Dn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_sisd'),
    'vclt_u8': ARMSema(intrin='vclt_u8', inst='CMHI', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='CMHI Vd.8B,Vm.8B,Vn.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': True, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcltd_s64': ARMSema(intrin='vcltd_s64', inst='CMGT', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64_t', ret_is_signed=False, inst_form='CMGT Dd,Dm,Dn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_sisd'),
    'vcltd_u64': ARMSema(intrin='vcltd_u64', inst='CMHI', params=[Parameter(name='a', type='uint64_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64_t', ret_is_signed=False, inst_form='CMHI Dd,Dm,Dn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_sisd'),
    'vcltq_s16': ARMSema(intrin='vcltq_s16', inst='CMGT', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='CMGT Vd.8H,Vm.8H,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': False, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcltq_s32': ARMSema(intrin='vcltq_s32', inst='CMGT', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='CMGT Vd.4S,Vm.4S,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': False, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcltq_s64': ARMSema(intrin='vcltq_s64', inst='CMGT', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='CMGT Vd.2D,Vm.2D,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': False, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcltq_s8': ARMSema(intrin='vcltq_s8', inst='CMGT', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='CMGT Vd.16B,Vm.16B,Vn.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': False, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcltq_u16': ARMSema(intrin='vcltq_u16', inst='CMHI', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='CMHI Vd.8H,Vm.8H,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': True, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcltq_u32': ARMSema(intrin='vcltq_u32', inst='CMHI', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='CMHI Vd.4S,Vm.4S,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': True, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcltq_u64': ARMSema(intrin='vcltq_u64', inst='CMHI', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='CMHI Vd.2D,Vm.2D,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': True, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcltq_u8': ARMSema(intrin='vcltq_u8', inst='CMHI', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('test_passed', '22')], ('boolean', Number(1)), '23'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('test_passed', '44'), IfElse(Var('cmp_eq', '48'), BinaryExpr('>=', Var('element1', '45'), Var('element2', '46'), '47'), BinaryExpr('>', Var('element1', '49'), Var('element2', '50'), '51'), '52')), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='CMHI Vd.16B,Vm.16B,Vn.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'b', 'm': 'a'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': True, 'cmp_eq': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_int_simd'),
    'vcltz_s16': ARMSema(intrin='vcltz_s16', inst='CMLT', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='CMLT Vd.4H,Vn.4H,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'comparison': 4}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_lessthan_simd'),
    'vcltz_s32': ARMSema(intrin='vcltz_s32', inst='CMLT', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='CMLT Vd.2S,Vn.2S,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'comparison': 4}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_lessthan_simd'),
    'vcltz_s64': ARMSema(intrin='vcltz_s64', inst='CMLT', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='CMLT Dd,Dn,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'comparison': 4}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_lessthan_sisd'),
    'vcltz_s8': ARMSema(intrin='vcltz_s8', inst='CMLT', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='CMLT Vd.8B,Vn.8B,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'comparison': 4}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_lessthan_simd'),
    'vcltzd_s64': ARMSema(intrin='vcltzd_s64', inst='CMLT', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint64_t', ret_is_signed=False, inst_form='CMLT Dd,Dn,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'comparison': 4}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_lessthan_sisd'),
    'vcltzq_s16': ARMSema(intrin='vcltzq_s16', inst='CMLT', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='CMLT Vd.8H,Vn.8H,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'comparison': 4}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_lessthan_simd'),
    'vcltzq_s32': ARMSema(intrin='vcltzq_s32', inst='CMLT', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='CMLT Vd.4S,Vn.4S,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'comparison': 4}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_lessthan_simd'),
    'vcltzq_s64': ARMSema(intrin='vcltzq_s64', inst='CMLT', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='CMLT Vd.2D,Vn.2D,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'comparison': 4}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_lessthan_simd'),
    'vcltzq_s8': ARMSema(intrin='vcltzq_s8', inst='CMLT', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('test_passed', '13')], ('boolean', Number(1)), '14'), For(Var('e', '58'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), Match(Var('comparison', '25'), [Case(Number(0), [Update(Var('test_passed', '26'), BinaryExpr('>', Var('element', '27'), Number(0), '28'))], '29'), Case(Number(1), [Update(Var('test_passed', '30'), BinaryExpr('>=', Var('element', '31'), Number(0), '32'))], '33'), Case(Number(2), [Update(Var('test_passed', '34'), BinaryExpr('==', Var('element', '35'), Number(0), '36'))], '37'), Case(Number(3), [Update(Var('test_passed', '38'), BinaryExpr('<=', Var('element', '39'), Number(0), '40'))], '41'), Case(Number(4), [Update(Var('test_passed', '42'), BinaryExpr('<', Var('element', '43'), Number(0), '44'))], '45')], '46'), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), IfElse(Var('test_passed', '54'), Call('Ones', [], '53'), Call('Zeros', [], '56'), '57'))], 1, '59'), Update(ArrayIndex(Var('V', '60'), [Var('d', '61')], '62'), Var('result', '63'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='CMLT Vd.16B,Vn.16B,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'comparison': 4}, belongs_to='aarch64_vector_arithmetic_unary_cmp_int_lessthan_simd'),
    'vdot_s32': ARMSema(intrin='vdot_s32', inst='SDOT', params=[Parameter(name='r', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), Update(Var('result', '21'), ArrayIndex(Var('V', '22'), [Var('d', '23')], '24')), For(Var('e', '283'), Number(0), BinaryExpr('-', Var('elements', '25'), Number(1), '26'), [VarsDecl([Var('res', '27'), Var('zero', '28'), Var('res0', '29'), Var('res1', '30'), Var('res2', '31'), Var('res3', '32')], ('integer', Number(64)), '33'), VarsDecl([Var('element10', '34'), Var('element20', '35'), Var('element11', '36'), Var('element21', '37'), Var('element12', '38'), Var('element22', '39'), Var('element13', '40'), Var('element23', '41')], ('integer', Number(64)), '42'), IfElse(Var('signed', '43'), [Update(Var('element10', '44'), Call('SInt', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '48'), '49'), Number(0), '50'), BinaryExpr('DIV', Var('esize', '51'), Number(4), '52')], '53')], '54')), Update(Var('element20', '55'), Call('SInt', [ArrayIndex(Var('Elem', '57'), [Var('operand2', '58'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '59'), '60'), Number(0), '61'), BinaryExpr('DIV', Var('esize', '62'), Number(4), '63')], '64')], '65')), Update(Var('res0', '66'), BinaryExpr('*', Var('element10', '67'), Var('element20', '68'), '69')), Update(Var('element11', '70'), Call('SInt', [ArrayIndex(Var('Elem', '72'), [Var('operand1', '73'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '74'), '75'), Number(1), '76'), BinaryExpr('DIV', Var('esize', '77'), Number(4), '78')], '79')], '80')), Update(Var('element21', '81'), Call('SInt', [ArrayIndex(Var('Elem', '83'), [Var('operand2', '84'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '85'), '86'), Number(1), '87'), BinaryExpr('DIV', Var('esize', '88'), Number(4), '89')], '90')], '91')), Update(Var('res1', '92'), BinaryExpr('*', Var('element11', '93'), Var('element21', '94'), '95')), Update(Var('element12', '96'), Call('SInt', [ArrayIndex(Var('Elem', '98'), [Var('operand1', '99'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '100'), '101'), Number(2), '102'), BinaryExpr('DIV', Var('esize', '103'), Number(4), '104')], '105')], '106')), Update(Var('element22', '107'), Call('SInt', [ArrayIndex(Var('Elem', '109'), [Var('operand2', '110'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '111'), '112'), Number(2), '113'), BinaryExpr('DIV', Var('esize', '114'), Number(4), '115')], '116')], '117')), Update(Var('res2', '118'), BinaryExpr('*', Var('element12', '119'), Var('element22', '120'), '121')), Update(Var('element13', '122'), Call('SInt', [ArrayIndex(Var('Elem', '124'), [Var('operand1', '125'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '126'), '127'), Number(3), '128'), BinaryExpr('DIV', Var('esize', '129'), Number(4), '130')], '131')], '132')), Update(Var('element23', '133'), Call('SInt', [ArrayIndex(Var('Elem', '135'), [Var('operand2', '136'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '137'), '138'), Number(3), '139'), BinaryExpr('DIV', Var('esize', '140'), Number(4), '141')], '142')], '143')), Update(Var('res3', '144'), BinaryExpr('*', Var('element13', '145'), Var('element23', '146'), '147')), Update(Var('zero', '148'), Call('SInt', [ArrayIndex(Var('Elem', '150'), [Var('result', '151'), Var('e', '152'), Var('esize', '153')], '154')], '155'))], [Update(Var('element10', '156'), Call('UInt', [ArrayIndex(Var('Elem', '158'), [Var('operand1', '159'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '160'), '161'), Number(0), '162'), BinaryExpr('DIV', Var('esize', '163'), Number(4), '164')], '165')], '166')), Update(Var('element20', '167'), Call('UInt', [ArrayIndex(Var('Elem', '169'), [Var('operand2', '170'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '171'), '172'), Number(0), '173'), BinaryExpr('DIV', Var('esize', '174'), Number(4), '175')], '176')], '177')), Update(Var('res0', '178'), BinaryExpr('*', Var('element10', '179'), Var('element20', '180'), '181')), Update(Var('element11', '182'), Call('UInt', [ArrayIndex(Var('Elem', '184'), [Var('operand1', '185'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '186'), '187'), Number(1), '188'), BinaryExpr('DIV', Var('esize', '189'), Number(4), '190')], '191')], '192')), Update(Var('element21', '193'), Call('UInt', [ArrayIndex(Var('Elem', '195'), [Var('operand2', '196'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '197'), '198'), Number(1), '199'), BinaryExpr('DIV', Var('esize', '200'), Number(4), '201')], '202')], '203')), Update(Var('res1', '204'), BinaryExpr('*', Var('element11', '205'), Var('element21', '206'), '207')), Update(Var('element12', '208'), Call('UInt', [ArrayIndex(Var('Elem', '210'), [Var('operand1', '211'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '212'), '213'), Number(2), '214'), BinaryExpr('DIV', Var('esize', '215'), Number(4), '216')], '217')], '218')), Update(Var('element22', '219'), Call('UInt', [ArrayIndex(Var('Elem', '221'), [Var('operand2', '222'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '223'), '224'), Number(2), '225'), BinaryExpr('DIV', Var('esize', '226'), Number(4), '227')], '228')], '229')), Update(Var('res2', '230'), BinaryExpr('*', Var('element12', '231'), Var('element22', '232'), '233')), Update(Var('element13', '234'), Call('UInt', [ArrayIndex(Var('Elem', '236'), [Var('operand1', '237'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '238'), '239'), Number(3), '240'), BinaryExpr('DIV', Var('esize', '241'), Number(4), '242')], '243')], '244')), Update(Var('element23', '245'), Call('UInt', [ArrayIndex(Var('Elem', '247'), [Var('operand2', '248'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '249'), '250'), Number(3), '251'), BinaryExpr('DIV', Var('esize', '252'), Number(4), '253')], '254')], '255')), Update(Var('res3', '256'), BinaryExpr('*', Var('element13', '257'), Var('element23', '258'), '259')), Update(Var('zero', '260'), Call('UInt', [ArrayIndex(Var('Elem', '262'), [Var('result', '263'), Var('e', '264'), Var('esize', '265')], '266')], '267'))], '268'), Update(ArrayIndex(Var('Elem', '269'), [Var('result2', '270'), Var('e', '271'), Var('esize', '272')], '273'), BinaryExpr('+', BinaryExpr('+', BinaryExpr('+', BinaryExpr('+', Var('zero', '274'), Var('res0', '275'), '276'), Var('res1', '277'), '278'), Var('res2', '279'), '280'), Var('res3', '281'), '282'))], 1, '284'), Update(ArrayIndex(Var('V', '285'), [Var('d', '286')], '287'), Var('result2', '288'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SDOT Vd.2S,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'signed': True, 'esize': 32, 'datasize': 64, 'elements': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_dotp'),
    'vdot_u32': ARMSema(intrin='vdot_u32', inst='UDOT', params=[Parameter(name='r', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), Update(Var('result', '21'), ArrayIndex(Var('V', '22'), [Var('d', '23')], '24')), For(Var('e', '283'), Number(0), BinaryExpr('-', Var('elements', '25'), Number(1), '26'), [VarsDecl([Var('res', '27'), Var('zero', '28'), Var('res0', '29'), Var('res1', '30'), Var('res2', '31'), Var('res3', '32')], ('integer', Number(64)), '33'), VarsDecl([Var('element10', '34'), Var('element20', '35'), Var('element11', '36'), Var('element21', '37'), Var('element12', '38'), Var('element22', '39'), Var('element13', '40'), Var('element23', '41')], ('integer', Number(64)), '42'), IfElse(Var('signed', '43'), [Update(Var('element10', '44'), Call('SInt', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '48'), '49'), Number(0), '50'), BinaryExpr('DIV', Var('esize', '51'), Number(4), '52')], '53')], '54')), Update(Var('element20', '55'), Call('SInt', [ArrayIndex(Var('Elem', '57'), [Var('operand2', '58'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '59'), '60'), Number(0), '61'), BinaryExpr('DIV', Var('esize', '62'), Number(4), '63')], '64')], '65')), Update(Var('res0', '66'), BinaryExpr('*', Var('element10', '67'), Var('element20', '68'), '69')), Update(Var('element11', '70'), Call('SInt', [ArrayIndex(Var('Elem', '72'), [Var('operand1', '73'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '74'), '75'), Number(1), '76'), BinaryExpr('DIV', Var('esize', '77'), Number(4), '78')], '79')], '80')), Update(Var('element21', '81'), Call('SInt', [ArrayIndex(Var('Elem', '83'), [Var('operand2', '84'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '85'), '86'), Number(1), '87'), BinaryExpr('DIV', Var('esize', '88'), Number(4), '89')], '90')], '91')), Update(Var('res1', '92'), BinaryExpr('*', Var('element11', '93'), Var('element21', '94'), '95')), Update(Var('element12', '96'), Call('SInt', [ArrayIndex(Var('Elem', '98'), [Var('operand1', '99'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '100'), '101'), Number(2), '102'), BinaryExpr('DIV', Var('esize', '103'), Number(4), '104')], '105')], '106')), Update(Var('element22', '107'), Call('SInt', [ArrayIndex(Var('Elem', '109'), [Var('operand2', '110'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '111'), '112'), Number(2), '113'), BinaryExpr('DIV', Var('esize', '114'), Number(4), '115')], '116')], '117')), Update(Var('res2', '118'), BinaryExpr('*', Var('element12', '119'), Var('element22', '120'), '121')), Update(Var('element13', '122'), Call('SInt', [ArrayIndex(Var('Elem', '124'), [Var('operand1', '125'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '126'), '127'), Number(3), '128'), BinaryExpr('DIV', Var('esize', '129'), Number(4), '130')], '131')], '132')), Update(Var('element23', '133'), Call('SInt', [ArrayIndex(Var('Elem', '135'), [Var('operand2', '136'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '137'), '138'), Number(3), '139'), BinaryExpr('DIV', Var('esize', '140'), Number(4), '141')], '142')], '143')), Update(Var('res3', '144'), BinaryExpr('*', Var('element13', '145'), Var('element23', '146'), '147')), Update(Var('zero', '148'), Call('SInt', [ArrayIndex(Var('Elem', '150'), [Var('result', '151'), Var('e', '152'), Var('esize', '153')], '154')], '155'))], [Update(Var('element10', '156'), Call('UInt', [ArrayIndex(Var('Elem', '158'), [Var('operand1', '159'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '160'), '161'), Number(0), '162'), BinaryExpr('DIV', Var('esize', '163'), Number(4), '164')], '165')], '166')), Update(Var('element20', '167'), Call('UInt', [ArrayIndex(Var('Elem', '169'), [Var('operand2', '170'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '171'), '172'), Number(0), '173'), BinaryExpr('DIV', Var('esize', '174'), Number(4), '175')], '176')], '177')), Update(Var('res0', '178'), BinaryExpr('*', Var('element10', '179'), Var('element20', '180'), '181')), Update(Var('element11', '182'), Call('UInt', [ArrayIndex(Var('Elem', '184'), [Var('operand1', '185'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '186'), '187'), Number(1), '188'), BinaryExpr('DIV', Var('esize', '189'), Number(4), '190')], '191')], '192')), Update(Var('element21', '193'), Call('UInt', [ArrayIndex(Var('Elem', '195'), [Var('operand2', '196'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '197'), '198'), Number(1), '199'), BinaryExpr('DIV', Var('esize', '200'), Number(4), '201')], '202')], '203')), Update(Var('res1', '204'), BinaryExpr('*', Var('element11', '205'), Var('element21', '206'), '207')), Update(Var('element12', '208'), Call('UInt', [ArrayIndex(Var('Elem', '210'), [Var('operand1', '211'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '212'), '213'), Number(2), '214'), BinaryExpr('DIV', Var('esize', '215'), Number(4), '216')], '217')], '218')), Update(Var('element22', '219'), Call('UInt', [ArrayIndex(Var('Elem', '221'), [Var('operand2', '222'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '223'), '224'), Number(2), '225'), BinaryExpr('DIV', Var('esize', '226'), Number(4), '227')], '228')], '229')), Update(Var('res2', '230'), BinaryExpr('*', Var('element12', '231'), Var('element22', '232'), '233')), Update(Var('element13', '234'), Call('UInt', [ArrayIndex(Var('Elem', '236'), [Var('operand1', '237'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '238'), '239'), Number(3), '240'), BinaryExpr('DIV', Var('esize', '241'), Number(4), '242')], '243')], '244')), Update(Var('element23', '245'), Call('UInt', [ArrayIndex(Var('Elem', '247'), [Var('operand2', '248'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '249'), '250'), Number(3), '251'), BinaryExpr('DIV', Var('esize', '252'), Number(4), '253')], '254')], '255')), Update(Var('res3', '256'), BinaryExpr('*', Var('element13', '257'), Var('element23', '258'), '259')), Update(Var('zero', '260'), Call('UInt', [ArrayIndex(Var('Elem', '262'), [Var('result', '263'), Var('e', '264'), Var('esize', '265')], '266')], '267'))], '268'), Update(ArrayIndex(Var('Elem', '269'), [Var('result2', '270'), Var('e', '271'), Var('esize', '272')], '273'), BinaryExpr('+', BinaryExpr('+', BinaryExpr('+', BinaryExpr('+', Var('zero', '274'), Var('res0', '275'), '276'), Var('res1', '277'), '278'), Var('res2', '279'), '280'), Var('res3', '281'), '282'))], 1, '284'), Update(ArrayIndex(Var('V', '285'), [Var('d', '286')], '287'), Var('result2', '288'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='UDOT Vd.2S,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'signed': False, 'esize': 32, 'datasize': 64, 'elements': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_dotp'),
    'vdotq_s32': ARMSema(intrin='vdotq_s32', inst='SDOT', params=[Parameter(name='r', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), Update(Var('result', '21'), ArrayIndex(Var('V', '22'), [Var('d', '23')], '24')), For(Var('e', '283'), Number(0), BinaryExpr('-', Var('elements', '25'), Number(1), '26'), [VarsDecl([Var('res', '27'), Var('zero', '28'), Var('res0', '29'), Var('res1', '30'), Var('res2', '31'), Var('res3', '32')], ('integer', Number(64)), '33'), VarsDecl([Var('element10', '34'), Var('element20', '35'), Var('element11', '36'), Var('element21', '37'), Var('element12', '38'), Var('element22', '39'), Var('element13', '40'), Var('element23', '41')], ('integer', Number(64)), '42'), IfElse(Var('signed', '43'), [Update(Var('element10', '44'), Call('SInt', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '48'), '49'), Number(0), '50'), BinaryExpr('DIV', Var('esize', '51'), Number(4), '52')], '53')], '54')), Update(Var('element20', '55'), Call('SInt', [ArrayIndex(Var('Elem', '57'), [Var('operand2', '58'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '59'), '60'), Number(0), '61'), BinaryExpr('DIV', Var('esize', '62'), Number(4), '63')], '64')], '65')), Update(Var('res0', '66'), BinaryExpr('*', Var('element10', '67'), Var('element20', '68'), '69')), Update(Var('element11', '70'), Call('SInt', [ArrayIndex(Var('Elem', '72'), [Var('operand1', '73'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '74'), '75'), Number(1), '76'), BinaryExpr('DIV', Var('esize', '77'), Number(4), '78')], '79')], '80')), Update(Var('element21', '81'), Call('SInt', [ArrayIndex(Var('Elem', '83'), [Var('operand2', '84'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '85'), '86'), Number(1), '87'), BinaryExpr('DIV', Var('esize', '88'), Number(4), '89')], '90')], '91')), Update(Var('res1', '92'), BinaryExpr('*', Var('element11', '93'), Var('element21', '94'), '95')), Update(Var('element12', '96'), Call('SInt', [ArrayIndex(Var('Elem', '98'), [Var('operand1', '99'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '100'), '101'), Number(2), '102'), BinaryExpr('DIV', Var('esize', '103'), Number(4), '104')], '105')], '106')), Update(Var('element22', '107'), Call('SInt', [ArrayIndex(Var('Elem', '109'), [Var('operand2', '110'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '111'), '112'), Number(2), '113'), BinaryExpr('DIV', Var('esize', '114'), Number(4), '115')], '116')], '117')), Update(Var('res2', '118'), BinaryExpr('*', Var('element12', '119'), Var('element22', '120'), '121')), Update(Var('element13', '122'), Call('SInt', [ArrayIndex(Var('Elem', '124'), [Var('operand1', '125'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '126'), '127'), Number(3), '128'), BinaryExpr('DIV', Var('esize', '129'), Number(4), '130')], '131')], '132')), Update(Var('element23', '133'), Call('SInt', [ArrayIndex(Var('Elem', '135'), [Var('operand2', '136'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '137'), '138'), Number(3), '139'), BinaryExpr('DIV', Var('esize', '140'), Number(4), '141')], '142')], '143')), Update(Var('res3', '144'), BinaryExpr('*', Var('element13', '145'), Var('element23', '146'), '147')), Update(Var('zero', '148'), Call('SInt', [ArrayIndex(Var('Elem', '150'), [Var('result', '151'), Var('e', '152'), Var('esize', '153')], '154')], '155'))], [Update(Var('element10', '156'), Call('UInt', [ArrayIndex(Var('Elem', '158'), [Var('operand1', '159'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '160'), '161'), Number(0), '162'), BinaryExpr('DIV', Var('esize', '163'), Number(4), '164')], '165')], '166')), Update(Var('element20', '167'), Call('UInt', [ArrayIndex(Var('Elem', '169'), [Var('operand2', '170'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '171'), '172'), Number(0), '173'), BinaryExpr('DIV', Var('esize', '174'), Number(4), '175')], '176')], '177')), Update(Var('res0', '178'), BinaryExpr('*', Var('element10', '179'), Var('element20', '180'), '181')), Update(Var('element11', '182'), Call('UInt', [ArrayIndex(Var('Elem', '184'), [Var('operand1', '185'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '186'), '187'), Number(1), '188'), BinaryExpr('DIV', Var('esize', '189'), Number(4), '190')], '191')], '192')), Update(Var('element21', '193'), Call('UInt', [ArrayIndex(Var('Elem', '195'), [Var('operand2', '196'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '197'), '198'), Number(1), '199'), BinaryExpr('DIV', Var('esize', '200'), Number(4), '201')], '202')], '203')), Update(Var('res1', '204'), BinaryExpr('*', Var('element11', '205'), Var('element21', '206'), '207')), Update(Var('element12', '208'), Call('UInt', [ArrayIndex(Var('Elem', '210'), [Var('operand1', '211'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '212'), '213'), Number(2), '214'), BinaryExpr('DIV', Var('esize', '215'), Number(4), '216')], '217')], '218')), Update(Var('element22', '219'), Call('UInt', [ArrayIndex(Var('Elem', '221'), [Var('operand2', '222'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '223'), '224'), Number(2), '225'), BinaryExpr('DIV', Var('esize', '226'), Number(4), '227')], '228')], '229')), Update(Var('res2', '230'), BinaryExpr('*', Var('element12', '231'), Var('element22', '232'), '233')), Update(Var('element13', '234'), Call('UInt', [ArrayIndex(Var('Elem', '236'), [Var('operand1', '237'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '238'), '239'), Number(3), '240'), BinaryExpr('DIV', Var('esize', '241'), Number(4), '242')], '243')], '244')), Update(Var('element23', '245'), Call('UInt', [ArrayIndex(Var('Elem', '247'), [Var('operand2', '248'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '249'), '250'), Number(3), '251'), BinaryExpr('DIV', Var('esize', '252'), Number(4), '253')], '254')], '255')), Update(Var('res3', '256'), BinaryExpr('*', Var('element13', '257'), Var('element23', '258'), '259')), Update(Var('zero', '260'), Call('UInt', [ArrayIndex(Var('Elem', '262'), [Var('result', '263'), Var('e', '264'), Var('esize', '265')], '266')], '267'))], '268'), Update(ArrayIndex(Var('Elem', '269'), [Var('result2', '270'), Var('e', '271'), Var('esize', '272')], '273'), BinaryExpr('+', BinaryExpr('+', BinaryExpr('+', BinaryExpr('+', Var('zero', '274'), Var('res0', '275'), '276'), Var('res1', '277'), '278'), Var('res2', '279'), '280'), Var('res3', '281'), '282'))], 1, '284'), Update(ArrayIndex(Var('V', '285'), [Var('d', '286')], '287'), Var('result2', '288'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SDOT Vd.4S,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'signed': True, 'esize': 32, 'datasize': 128, 'elements': 4}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_dotp'),
    'vdotq_u32': ARMSema(intrin='vdotq_u32', inst='UDOT', params=[Parameter(name='r', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('result2', '19')], ('bits', Var('datasize', '18')), '20'), Update(Var('result', '21'), ArrayIndex(Var('V', '22'), [Var('d', '23')], '24')), For(Var('e', '283'), Number(0), BinaryExpr('-', Var('elements', '25'), Number(1), '26'), [VarsDecl([Var('res', '27'), Var('zero', '28'), Var('res0', '29'), Var('res1', '30'), Var('res2', '31'), Var('res3', '32')], ('integer', Number(64)), '33'), VarsDecl([Var('element10', '34'), Var('element20', '35'), Var('element11', '36'), Var('element21', '37'), Var('element12', '38'), Var('element22', '39'), Var('element13', '40'), Var('element23', '41')], ('integer', Number(64)), '42'), IfElse(Var('signed', '43'), [Update(Var('element10', '44'), Call('SInt', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '48'), '49'), Number(0), '50'), BinaryExpr('DIV', Var('esize', '51'), Number(4), '52')], '53')], '54')), Update(Var('element20', '55'), Call('SInt', [ArrayIndex(Var('Elem', '57'), [Var('operand2', '58'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '59'), '60'), Number(0), '61'), BinaryExpr('DIV', Var('esize', '62'), Number(4), '63')], '64')], '65')), Update(Var('res0', '66'), BinaryExpr('*', Var('element10', '67'), Var('element20', '68'), '69')), Update(Var('element11', '70'), Call('SInt', [ArrayIndex(Var('Elem', '72'), [Var('operand1', '73'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '74'), '75'), Number(1), '76'), BinaryExpr('DIV', Var('esize', '77'), Number(4), '78')], '79')], '80')), Update(Var('element21', '81'), Call('SInt', [ArrayIndex(Var('Elem', '83'), [Var('operand2', '84'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '85'), '86'), Number(1), '87'), BinaryExpr('DIV', Var('esize', '88'), Number(4), '89')], '90')], '91')), Update(Var('res1', '92'), BinaryExpr('*', Var('element11', '93'), Var('element21', '94'), '95')), Update(Var('element12', '96'), Call('SInt', [ArrayIndex(Var('Elem', '98'), [Var('operand1', '99'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '100'), '101'), Number(2), '102'), BinaryExpr('DIV', Var('esize', '103'), Number(4), '104')], '105')], '106')), Update(Var('element22', '107'), Call('SInt', [ArrayIndex(Var('Elem', '109'), [Var('operand2', '110'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '111'), '112'), Number(2), '113'), BinaryExpr('DIV', Var('esize', '114'), Number(4), '115')], '116')], '117')), Update(Var('res2', '118'), BinaryExpr('*', Var('element12', '119'), Var('element22', '120'), '121')), Update(Var('element13', '122'), Call('SInt', [ArrayIndex(Var('Elem', '124'), [Var('operand1', '125'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '126'), '127'), Number(3), '128'), BinaryExpr('DIV', Var('esize', '129'), Number(4), '130')], '131')], '132')), Update(Var('element23', '133'), Call('SInt', [ArrayIndex(Var('Elem', '135'), [Var('operand2', '136'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '137'), '138'), Number(3), '139'), BinaryExpr('DIV', Var('esize', '140'), Number(4), '141')], '142')], '143')), Update(Var('res3', '144'), BinaryExpr('*', Var('element13', '145'), Var('element23', '146'), '147')), Update(Var('zero', '148'), Call('SInt', [ArrayIndex(Var('Elem', '150'), [Var('result', '151'), Var('e', '152'), Var('esize', '153')], '154')], '155'))], [Update(Var('element10', '156'), Call('UInt', [ArrayIndex(Var('Elem', '158'), [Var('operand1', '159'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '160'), '161'), Number(0), '162'), BinaryExpr('DIV', Var('esize', '163'), Number(4), '164')], '165')], '166')), Update(Var('element20', '167'), Call('UInt', [ArrayIndex(Var('Elem', '169'), [Var('operand2', '170'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '171'), '172'), Number(0), '173'), BinaryExpr('DIV', Var('esize', '174'), Number(4), '175')], '176')], '177')), Update(Var('res0', '178'), BinaryExpr('*', Var('element10', '179'), Var('element20', '180'), '181')), Update(Var('element11', '182'), Call('UInt', [ArrayIndex(Var('Elem', '184'), [Var('operand1', '185'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '186'), '187'), Number(1), '188'), BinaryExpr('DIV', Var('esize', '189'), Number(4), '190')], '191')], '192')), Update(Var('element21', '193'), Call('UInt', [ArrayIndex(Var('Elem', '195'), [Var('operand2', '196'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '197'), '198'), Number(1), '199'), BinaryExpr('DIV', Var('esize', '200'), Number(4), '201')], '202')], '203')), Update(Var('res1', '204'), BinaryExpr('*', Var('element11', '205'), Var('element21', '206'), '207')), Update(Var('element12', '208'), Call('UInt', [ArrayIndex(Var('Elem', '210'), [Var('operand1', '211'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '212'), '213'), Number(2), '214'), BinaryExpr('DIV', Var('esize', '215'), Number(4), '216')], '217')], '218')), Update(Var('element22', '219'), Call('UInt', [ArrayIndex(Var('Elem', '221'), [Var('operand2', '222'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '223'), '224'), Number(2), '225'), BinaryExpr('DIV', Var('esize', '226'), Number(4), '227')], '228')], '229')), Update(Var('res2', '230'), BinaryExpr('*', Var('element12', '231'), Var('element22', '232'), '233')), Update(Var('element13', '234'), Call('UInt', [ArrayIndex(Var('Elem', '236'), [Var('operand1', '237'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '238'), '239'), Number(3), '240'), BinaryExpr('DIV', Var('esize', '241'), Number(4), '242')], '243')], '244')), Update(Var('element23', '245'), Call('UInt', [ArrayIndex(Var('Elem', '247'), [Var('operand2', '248'), BinaryExpr('+', BinaryExpr('*', Number(4), Var('e', '249'), '250'), Number(3), '251'), BinaryExpr('DIV', Var('esize', '252'), Number(4), '253')], '254')], '255')), Update(Var('res3', '256'), BinaryExpr('*', Var('element13', '257'), Var('element23', '258'), '259')), Update(Var('zero', '260'), Call('UInt', [ArrayIndex(Var('Elem', '262'), [Var('result', '263'), Var('e', '264'), Var('esize', '265')], '266')], '267'))], '268'), Update(ArrayIndex(Var('Elem', '269'), [Var('result2', '270'), Var('e', '271'), Var('esize', '272')], '273'), BinaryExpr('+', BinaryExpr('+', BinaryExpr('+', BinaryExpr('+', Var('zero', '274'), Var('res0', '275'), '276'), Var('res1', '277'), '278'), Var('res2', '279'), '280'), Var('res3', '281'), '282'))], 1, '284'), Update(ArrayIndex(Var('V', '285'), [Var('d', '286')], '287'), Var('result2', '288'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UDOT Vd.4S,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'signed': False, 'esize': 32, 'datasize': 128, 'elements': 4}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_dotp'),
    'vdup_n_s16': ARMSema(intrin='vdup_n_s16', inst='DUP', params=[Parameter(name='value', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='int16x4_t', ret_is_signed=True, inst_form='DUP Vd.4H,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 1, 'esize': 16, 'datasize': 64, 'elements': 4}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vdup_n_s32': ARMSema(intrin='vdup_n_s32', inst='DUP', params=[Parameter(name='value', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='int32x2_t', ret_is_signed=True, inst_form='DUP Vd.2S,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 2, 'esize': 32, 'datasize': 64, 'elements': 2}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vdup_n_s8': ARMSema(intrin='vdup_n_s8', inst='DUP', params=[Parameter(name='value', type='int8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='int8x8_t', ret_is_signed=True, inst_form='DUP Vd.8B,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 0, 'esize': 8, 'datasize': 64, 'elements': 8}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vdup_n_u16': ARMSema(intrin='vdup_n_u16', inst='DUP', params=[Parameter(name='value', type='uint16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='DUP Vd.4H,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 1, 'esize': 16, 'datasize': 64, 'elements': 4}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vdup_n_u32': ARMSema(intrin='vdup_n_u32', inst='DUP', params=[Parameter(name='value', type='uint32_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='DUP Vd.2S,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 2, 'esize': 32, 'datasize': 64, 'elements': 2}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vdup_n_u8': ARMSema(intrin='vdup_n_u8', inst='DUP', params=[Parameter(name='value', type='uint8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='DUP Vd.8B,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 0, 'esize': 8, 'datasize': 64, 'elements': 8}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vdupq_n_s16': ARMSema(intrin='vdupq_n_s16', inst='DUP', params=[Parameter(name='value', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='int16x8_t', ret_is_signed=True, inst_form='DUP Vd.8H,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 1, 'esize': 16, 'datasize': 128, 'elements': 8}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vdupq_n_s32': ARMSema(intrin='vdupq_n_s32', inst='DUP', params=[Parameter(name='value', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='int32x4_t', ret_is_signed=True, inst_form='DUP Vd.4S,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 2, 'esize': 32, 'datasize': 128, 'elements': 4}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vdupq_n_s64': ARMSema(intrin='vdupq_n_s64', inst='DUP', params=[Parameter(name='value', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='int64x2_t', ret_is_signed=True, inst_form='DUP Vd.2D,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 3, 'esize': 64, 'datasize': 128, 'elements': 2}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vdupq_n_s8': ARMSema(intrin='vdupq_n_s8', inst='DUP', params=[Parameter(name='value', type='int8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='int8x16_t', ret_is_signed=True, inst_form='DUP Vd.16B,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 0, 'esize': 8, 'datasize': 128, 'elements': 16}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vdupq_n_u16': ARMSema(intrin='vdupq_n_u16', inst='DUP', params=[Parameter(name='value', type='uint16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='DUP Vd.8H,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 1, 'esize': 16, 'datasize': 128, 'elements': 8}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vdupq_n_u32': ARMSema(intrin='vdupq_n_u32', inst='DUP', params=[Parameter(name='value', type='uint32_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='DUP Vd.4S,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 2, 'esize': 32, 'datasize': 128, 'elements': 4}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vdupq_n_u64': ARMSema(intrin='vdupq_n_u64', inst='DUP', params=[Parameter(name='value', type='uint64_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='DUP Vd.2D,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 3, 'esize': 64, 'datasize': 128, 'elements': 2}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vdupq_n_u8': ARMSema(intrin='vdupq_n_u8', inst='DUP', params=[Parameter(name='value', type='uint8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='DUP Vd.16B,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 0, 'esize': 8, 'datasize': 128, 'elements': 16}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'veor_s16': ARMSema(intrin='veor_s16', inst='EOR', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='int16x4_t', ret_is_signed=True, inst_form='EOR Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'op': 3}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'veor_s32': ARMSema(intrin='veor_s32', inst='EOR', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='int32x2_t', ret_is_signed=True, inst_form='EOR Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'op': 3}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'veor_s64': ARMSema(intrin='veor_s64', inst='EOR', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='int64x1_t', ret_is_signed=True, inst_form='EOR Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'op': 3}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'veor_s8': ARMSema(intrin='veor_s8', inst='EOR', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='int8x8_t', ret_is_signed=True, inst_form='EOR Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'op': 3}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'veor_u16': ARMSema(intrin='veor_u16', inst='EOR', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='EOR Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'op': 3}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'veor_u32': ARMSema(intrin='veor_u32', inst='EOR', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='EOR Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'op': 3}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'veor_u64': ARMSema(intrin='veor_u64', inst='EOR', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='EOR Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'op': 3}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'veor_u8': ARMSema(intrin='veor_u8', inst='EOR', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='EOR Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'op': 3}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'veorq_s16': ARMSema(intrin='veorq_s16', inst='EOR', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='int16x8_t', ret_is_signed=True, inst_form='EOR Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'op': 3}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'veorq_s32': ARMSema(intrin='veorq_s32', inst='EOR', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='int32x4_t', ret_is_signed=True, inst_form='EOR Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'op': 3}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'veorq_s64': ARMSema(intrin='veorq_s64', inst='EOR', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='int64x2_t', ret_is_signed=True, inst_form='EOR Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'op': 3}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'veorq_s8': ARMSema(intrin='veorq_s8', inst='EOR', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='int8x16_t', ret_is_signed=True, inst_form='EOR Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'op': 3}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'veorq_u16': ARMSema(intrin='veorq_u16', inst='EOR', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='EOR Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'op': 3}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'veorq_u32': ARMSema(intrin='veorq_u32', inst='EOR', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='EOR Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'op': 3}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'veorq_u64': ARMSema(intrin='veorq_u64', inst='EOR', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='EOR Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'op': 3}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'veorq_u8': ARMSema(intrin='veorq_u8', inst='EOR', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('operand1', '2')], ('bits', Var('datasize', '1')), '3'), VarsDecl([Var('operand2', '5')], ('bits', Var('datasize', '4')), '6'), VarsDecl([Var('operand3', '8')], ('bits', Var('datasize', '7')), '9'), VarDeclInit(VarsDecl([Var('operand4', '14')], ('bits', Var('datasize', '10')), '15'), ArrayIndex(Var('V', '11'), [Var('n', '12')], '13'), '16'), Match(Var('op', '17'), [Case(Number(3), [Update(Var('operand1', '18'), ArrayIndex(Var('V', '19'), [Var('m', '20')], '21')), Update(Var('operand2', '22'), Call('Zeros', [], '24')), Update(Var('operand3', '25'), Call('Ones', [], '27'))], '28'), Case(Number(2), [Update(Var('operand1', '29'), ArrayIndex(Var('V', '30'), [Var('m', '31')], '32')), Update(Var('operand2', '33'), Var('operand1', '34')), Update(Var('operand3', '35'), ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'))], '39'), Case(Number(1), [Update(Var('operand1', '40'), ArrayIndex(Var('V', '41'), [Var('d', '42')], '43')), Update(Var('operand2', '44'), Var('operand1', '45')), Update(Var('operand3', '46'), ArrayIndex(Var('V', '47'), [Var('m', '48')], '49'))], '50'), Case(Number(0), [Update(Var('operand1', '51'), ArrayIndex(Var('V', '52'), [Var('d', '53')], '54')), Update(Var('operand2', '55'), Var('operand1', '56')), Update(Var('operand3', '57'), Call('NOT', [ArrayIndex(Var('V', '59'), [Var('m', '60')], '61')], '62'))], '63')], '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), BinaryExpr('EOR', Var('operand1', '68'), BinaryExpr('AND', BinaryExpr('EOR', Var('operand2', '69'), Var('operand4', '70'), '71'), Var('operand3', '72'), '73'), '74'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='EOR Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'op': 3}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor'),
    'vhadd_s16': ARMSema(intrin='vhadd_s16', inst='SHADD', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('sum', '44'), BinaryExpr('+', Var('element1', '45'), Var('element2', '46'), '47')), Update(ArrayIndex(Var('Elem', '48'), [Var('result', '49'), Var('e', '50'), Var('esize', '51')], '52'), ArrayIndex(Var('sum', '53'), [SliceRange(Var('esize', '54'), Number(1), '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SHADD Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_halving_truncating'),
    'vhadd_s32': ARMSema(intrin='vhadd_s32', inst='SHADD', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('sum', '44'), BinaryExpr('+', Var('element1', '45'), Var('element2', '46'), '47')), Update(ArrayIndex(Var('Elem', '48'), [Var('result', '49'), Var('e', '50'), Var('esize', '51')], '52'), ArrayIndex(Var('sum', '53'), [SliceRange(Var('esize', '54'), Number(1), '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SHADD Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_halving_truncating'),
    'vhadd_s8': ARMSema(intrin='vhadd_s8', inst='SHADD', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('sum', '44'), BinaryExpr('+', Var('element1', '45'), Var('element2', '46'), '47')), Update(ArrayIndex(Var('Elem', '48'), [Var('result', '49'), Var('e', '50'), Var('esize', '51')], '52'), ArrayIndex(Var('sum', '53'), [SliceRange(Var('esize', '54'), Number(1), '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SHADD Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_halving_truncating'),
    'vhadd_u16': ARMSema(intrin='vhadd_u16', inst='UHADD', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('sum', '44'), BinaryExpr('+', Var('element1', '45'), Var('element2', '46'), '47')), Update(ArrayIndex(Var('Elem', '48'), [Var('result', '49'), Var('e', '50'), Var('esize', '51')], '52'), ArrayIndex(Var('sum', '53'), [SliceRange(Var('esize', '54'), Number(1), '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='UHADD Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_halving_truncating'),
    'vhadd_u32': ARMSema(intrin='vhadd_u32', inst='UHADD', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('sum', '44'), BinaryExpr('+', Var('element1', '45'), Var('element2', '46'), '47')), Update(ArrayIndex(Var('Elem', '48'), [Var('result', '49'), Var('e', '50'), Var('esize', '51')], '52'), ArrayIndex(Var('sum', '53'), [SliceRange(Var('esize', '54'), Number(1), '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='UHADD Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_halving_truncating'),
    'vhadd_u8': ARMSema(intrin='vhadd_u8', inst='UHADD', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('sum', '44'), BinaryExpr('+', Var('element1', '45'), Var('element2', '46'), '47')), Update(ArrayIndex(Var('Elem', '48'), [Var('result', '49'), Var('e', '50'), Var('esize', '51')], '52'), ArrayIndex(Var('sum', '53'), [SliceRange(Var('esize', '54'), Number(1), '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='UHADD Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_halving_truncating'),
    'vhaddq_s16': ARMSema(intrin='vhaddq_s16', inst='SHADD', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('sum', '44'), BinaryExpr('+', Var('element1', '45'), Var('element2', '46'), '47')), Update(ArrayIndex(Var('Elem', '48'), [Var('result', '49'), Var('e', '50'), Var('esize', '51')], '52'), ArrayIndex(Var('sum', '53'), [SliceRange(Var('esize', '54'), Number(1), '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SHADD Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_halving_truncating'),
    'vhaddq_s32': ARMSema(intrin='vhaddq_s32', inst='SHADD', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('sum', '44'), BinaryExpr('+', Var('element1', '45'), Var('element2', '46'), '47')), Update(ArrayIndex(Var('Elem', '48'), [Var('result', '49'), Var('e', '50'), Var('esize', '51')], '52'), ArrayIndex(Var('sum', '53'), [SliceRange(Var('esize', '54'), Number(1), '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SHADD Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_halving_truncating'),
    'vhaddq_s8': ARMSema(intrin='vhaddq_s8', inst='SHADD', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('sum', '44'), BinaryExpr('+', Var('element1', '45'), Var('element2', '46'), '47')), Update(ArrayIndex(Var('Elem', '48'), [Var('result', '49'), Var('e', '50'), Var('esize', '51')], '52'), ArrayIndex(Var('sum', '53'), [SliceRange(Var('esize', '54'), Number(1), '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SHADD Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_halving_truncating'),
    'vhaddq_u16': ARMSema(intrin='vhaddq_u16', inst='UHADD', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('sum', '44'), BinaryExpr('+', Var('element1', '45'), Var('element2', '46'), '47')), Update(ArrayIndex(Var('Elem', '48'), [Var('result', '49'), Var('e', '50'), Var('esize', '51')], '52'), ArrayIndex(Var('sum', '53'), [SliceRange(Var('esize', '54'), Number(1), '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UHADD Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_halving_truncating'),
    'vhaddq_u32': ARMSema(intrin='vhaddq_u32', inst='UHADD', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('sum', '44'), BinaryExpr('+', Var('element1', '45'), Var('element2', '46'), '47')), Update(ArrayIndex(Var('Elem', '48'), [Var('result', '49'), Var('e', '50'), Var('esize', '51')], '52'), ArrayIndex(Var('sum', '53'), [SliceRange(Var('esize', '54'), Number(1), '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UHADD Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_halving_truncating'),
    'vhaddq_u8': ARMSema(intrin='vhaddq_u8', inst='UHADD', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('sum', '44'), BinaryExpr('+', Var('element1', '45'), Var('element2', '46'), '47')), Update(ArrayIndex(Var('Elem', '48'), [Var('result', '49'), Var('e', '50'), Var('esize', '51')], '52'), ArrayIndex(Var('sum', '53'), [SliceRange(Var('esize', '54'), Number(1), '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='UHADD Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_halving_truncating'),
    'vhsub_s16': ARMSema(intrin='vhsub_s16', inst='SHSUB', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('diff', '44'), BinaryExpr('-', Var('element1', '45'), Var('element2', '46'), '47')), Update(ArrayIndex(Var('Elem', '48'), [Var('result', '49'), Var('e', '50'), Var('esize', '51')], '52'), ArrayIndex(Var('diff', '53'), [SliceRange(Var('esize', '54'), Number(1), '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SHSUB Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_int'),
    'vhsub_s32': ARMSema(intrin='vhsub_s32', inst='SHSUB', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('diff', '44'), BinaryExpr('-', Var('element1', '45'), Var('element2', '46'), '47')), Update(ArrayIndex(Var('Elem', '48'), [Var('result', '49'), Var('e', '50'), Var('esize', '51')], '52'), ArrayIndex(Var('diff', '53'), [SliceRange(Var('esize', '54'), Number(1), '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SHSUB Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_int'),
    'vhsub_s8': ARMSema(intrin='vhsub_s8', inst='SHSUB', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('diff', '44'), BinaryExpr('-', Var('element1', '45'), Var('element2', '46'), '47')), Update(ArrayIndex(Var('Elem', '48'), [Var('result', '49'), Var('e', '50'), Var('esize', '51')], '52'), ArrayIndex(Var('diff', '53'), [SliceRange(Var('esize', '54'), Number(1), '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SHSUB Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_int'),
    'vhsub_u16': ARMSema(intrin='vhsub_u16', inst='UHSUB', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('diff', '44'), BinaryExpr('-', Var('element1', '45'), Var('element2', '46'), '47')), Update(ArrayIndex(Var('Elem', '48'), [Var('result', '49'), Var('e', '50'), Var('esize', '51')], '52'), ArrayIndex(Var('diff', '53'), [SliceRange(Var('esize', '54'), Number(1), '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='UHSUB Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_int'),
    'vhsub_u32': ARMSema(intrin='vhsub_u32', inst='UHSUB', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('diff', '44'), BinaryExpr('-', Var('element1', '45'), Var('element2', '46'), '47')), Update(ArrayIndex(Var('Elem', '48'), [Var('result', '49'), Var('e', '50'), Var('esize', '51')], '52'), ArrayIndex(Var('diff', '53'), [SliceRange(Var('esize', '54'), Number(1), '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='UHSUB Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_int'),
    'vhsub_u8': ARMSema(intrin='vhsub_u8', inst='UHSUB', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('diff', '44'), BinaryExpr('-', Var('element1', '45'), Var('element2', '46'), '47')), Update(ArrayIndex(Var('Elem', '48'), [Var('result', '49'), Var('e', '50'), Var('esize', '51')], '52'), ArrayIndex(Var('diff', '53'), [SliceRange(Var('esize', '54'), Number(1), '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='UHSUB Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_int'),
    'vhsubq_s16': ARMSema(intrin='vhsubq_s16', inst='SHSUB', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('diff', '44'), BinaryExpr('-', Var('element1', '45'), Var('element2', '46'), '47')), Update(ArrayIndex(Var('Elem', '48'), [Var('result', '49'), Var('e', '50'), Var('esize', '51')], '52'), ArrayIndex(Var('diff', '53'), [SliceRange(Var('esize', '54'), Number(1), '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SHSUB Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_int'),
    'vhsubq_s32': ARMSema(intrin='vhsubq_s32', inst='SHSUB', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('diff', '44'), BinaryExpr('-', Var('element1', '45'), Var('element2', '46'), '47')), Update(ArrayIndex(Var('Elem', '48'), [Var('result', '49'), Var('e', '50'), Var('esize', '51')], '52'), ArrayIndex(Var('diff', '53'), [SliceRange(Var('esize', '54'), Number(1), '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SHSUB Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_int'),
    'vhsubq_s8': ARMSema(intrin='vhsubq_s8', inst='SHSUB', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('diff', '44'), BinaryExpr('-', Var('element1', '45'), Var('element2', '46'), '47')), Update(ArrayIndex(Var('Elem', '48'), [Var('result', '49'), Var('e', '50'), Var('esize', '51')], '52'), ArrayIndex(Var('diff', '53'), [SliceRange(Var('esize', '54'), Number(1), '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SHSUB Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_int'),
    'vhsubq_u16': ARMSema(intrin='vhsubq_u16', inst='UHSUB', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('diff', '44'), BinaryExpr('-', Var('element1', '45'), Var('element2', '46'), '47')), Update(ArrayIndex(Var('Elem', '48'), [Var('result', '49'), Var('e', '50'), Var('esize', '51')], '52'), ArrayIndex(Var('diff', '53'), [SliceRange(Var('esize', '54'), Number(1), '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UHSUB Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_int'),
    'vhsubq_u32': ARMSema(intrin='vhsubq_u32', inst='UHSUB', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('diff', '44'), BinaryExpr('-', Var('element1', '45'), Var('element2', '46'), '47')), Update(ArrayIndex(Var('Elem', '48'), [Var('result', '49'), Var('e', '50'), Var('esize', '51')], '52'), ArrayIndex(Var('diff', '53'), [SliceRange(Var('esize', '54'), Number(1), '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UHSUB Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_int'),
    'vhsubq_u8': ARMSema(intrin='vhsubq_u8', inst='UHSUB', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('diff', '44'), BinaryExpr('-', Var('element1', '45'), Var('element2', '46'), '47')), Update(ArrayIndex(Var('Elem', '48'), [Var('result', '49'), Var('e', '50'), Var('esize', '51')], '52'), ArrayIndex(Var('diff', '53'), [SliceRange(Var('esize', '54'), Number(1), '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='UHSUB Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_int'),
    'vld1_dup_s16': ARMSema(intrin='vld1_dup_s16', inst='LD1R', params=[Parameter(name='ptr', type='int16_t const *', is_signed=True, is_imm=False, is_mask=False)], spec=[If(Call('HaveMTEExt', [], '2'), [], '3'), VarsDecl([Var('address', '4')], ('bits', Number(64)), '5'), VarsDecl([Var('offs', '6')], ('bits', Number(64)), '7'), VarsDecl([Var('rval', '8')], ('bits', Number(128)), '9'), VarsDecl([Var('element', '11')], ('bits', Var('esize', '10')), '12'), VarDeclInit(VarsDecl([Var('ebytes', '15')], ('integer', Number(64)), '16'), BinaryExpr('DIV', Var('esize', '13'), Number(8), '14'), '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), IfElse(Var('replicate', '31'), [For(Var('s', '59'), Number(0), BinaryExpr('-', Var('selem', '32'), Number(1), '33'), [Update(Var('element', '34'), ArrayIndex(Var('Mem', '35'), [BinaryExpr('+', Var('address', '36'), Var('offs', '37'), '38'), Var('ebytes', '39'), Var('AccType_VEC', '40')], '41')), Update(ArrayIndex(Var('V', '42'), [Var('t', '43')], '44'), Call('Replicate', [Var('element', '46'), BinaryExpr('DIV', Var('datasize', '47'), Var('esize', '48'), '49')], '50')), Update(Var('offs', '51'), BinaryExpr('+', Var('offs', '52'), Var('ebytes', '53'), '54')), Update(Var('t', '55'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '56'), Number(1), '57'), Number(32), '58'))], 1, '60')], [For(Var('s', '107'), Number(0), BinaryExpr('-', Var('selem', '61'), Number(1), '62'), [Update(Var('rval', '63'), ArrayIndex(Var('V', '64'), [Var('t', '65')], '66')), IfElse(BinaryExpr('==', Var('memop', '67'), Var('MemOp_LOAD', '68'), '69'), [Update(ArrayIndex(Var('Elem', '70'), [Var('rval', '71'), Var('index', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('Mem', '75'), [BinaryExpr('+', Var('address', '76'), Var('offs', '77'), '78'), Var('ebytes', '79'), Var('AccType_VEC', '80')], '81')), Update(ArrayIndex(Var('V', '82'), [Var('t', '83')], '84'), Var('rval', '85'))], [Update(ArrayIndex(Var('Mem', '86'), [BinaryExpr('+', Var('address', '87'), Var('offs', '88'), '89'), Var('ebytes', '90'), Var('AccType_VEC', '91')], '92'), ArrayIndex(Var('Elem', '93'), [Var('rval', '94'), Var('index', '95'), Var('esize', '96')], '97'))], '98'), Update(Var('offs', '99'), BinaryExpr('+', Var('offs', '100'), Var('ebytes', '101'), '102')), Update(Var('t', '103'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '104'), Number(1), '105'), Number(32), '106'))], 1, '108')], '109'), If(Var('wback', '110'), [If(BinaryExpr('!=', Var('m', '111'), Number(31), '112'), [Update(Var('offs', '113'), ArrayIndex(Var('X', '114'), [Var('m', '115')], '116'))], '117'), IfElse(BinaryExpr('==', Var('n', '118'), Number(31), '119'), [Update(ArrayIndex(Var('SP', '120'), [], '121'), BinaryExpr('+', Var('address', '122'), Var('offs', '123'), '124'))], [Update(ArrayIndex(Var('X', '125'), [Var('n', '126')], '127'), BinaryExpr('+', Var('address', '128'), Var('offs', '129'), '130'))], '131')], '132')], rettype='int16x4_t', ret_is_signed=True, inst_form='LD1R {Vt.4H},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'scale': 1, 'selem': 1, 'replicate': True, 'memop': 0, 'datasize': 64, 'esize': 16}, belongs_to='aarch64_memory_vector_single_no_wb'),
    'vld1_dup_s32': ARMSema(intrin='vld1_dup_s32', inst='LD1R', params=[Parameter(name='ptr', type='int32_t const *', is_signed=True, is_imm=False, is_mask=False)], spec=[If(Call('HaveMTEExt', [], '2'), [], '3'), VarsDecl([Var('address', '4')], ('bits', Number(64)), '5'), VarsDecl([Var('offs', '6')], ('bits', Number(64)), '7'), VarsDecl([Var('rval', '8')], ('bits', Number(128)), '9'), VarsDecl([Var('element', '11')], ('bits', Var('esize', '10')), '12'), VarDeclInit(VarsDecl([Var('ebytes', '15')], ('integer', Number(64)), '16'), BinaryExpr('DIV', Var('esize', '13'), Number(8), '14'), '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), IfElse(Var('replicate', '31'), [For(Var('s', '59'), Number(0), BinaryExpr('-', Var('selem', '32'), Number(1), '33'), [Update(Var('element', '34'), ArrayIndex(Var('Mem', '35'), [BinaryExpr('+', Var('address', '36'), Var('offs', '37'), '38'), Var('ebytes', '39'), Var('AccType_VEC', '40')], '41')), Update(ArrayIndex(Var('V', '42'), [Var('t', '43')], '44'), Call('Replicate', [Var('element', '46'), BinaryExpr('DIV', Var('datasize', '47'), Var('esize', '48'), '49')], '50')), Update(Var('offs', '51'), BinaryExpr('+', Var('offs', '52'), Var('ebytes', '53'), '54')), Update(Var('t', '55'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '56'), Number(1), '57'), Number(32), '58'))], 1, '60')], [For(Var('s', '107'), Number(0), BinaryExpr('-', Var('selem', '61'), Number(1), '62'), [Update(Var('rval', '63'), ArrayIndex(Var('V', '64'), [Var('t', '65')], '66')), IfElse(BinaryExpr('==', Var('memop', '67'), Var('MemOp_LOAD', '68'), '69'), [Update(ArrayIndex(Var('Elem', '70'), [Var('rval', '71'), Var('index', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('Mem', '75'), [BinaryExpr('+', Var('address', '76'), Var('offs', '77'), '78'), Var('ebytes', '79'), Var('AccType_VEC', '80')], '81')), Update(ArrayIndex(Var('V', '82'), [Var('t', '83')], '84'), Var('rval', '85'))], [Update(ArrayIndex(Var('Mem', '86'), [BinaryExpr('+', Var('address', '87'), Var('offs', '88'), '89'), Var('ebytes', '90'), Var('AccType_VEC', '91')], '92'), ArrayIndex(Var('Elem', '93'), [Var('rval', '94'), Var('index', '95'), Var('esize', '96')], '97'))], '98'), Update(Var('offs', '99'), BinaryExpr('+', Var('offs', '100'), Var('ebytes', '101'), '102')), Update(Var('t', '103'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '104'), Number(1), '105'), Number(32), '106'))], 1, '108')], '109'), If(Var('wback', '110'), [If(BinaryExpr('!=', Var('m', '111'), Number(31), '112'), [Update(Var('offs', '113'), ArrayIndex(Var('X', '114'), [Var('m', '115')], '116'))], '117'), IfElse(BinaryExpr('==', Var('n', '118'), Number(31), '119'), [Update(ArrayIndex(Var('SP', '120'), [], '121'), BinaryExpr('+', Var('address', '122'), Var('offs', '123'), '124'))], [Update(ArrayIndex(Var('X', '125'), [Var('n', '126')], '127'), BinaryExpr('+', Var('address', '128'), Var('offs', '129'), '130'))], '131')], '132')], rettype='int32x2_t', ret_is_signed=True, inst_form='LD1R {Vt.2S},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'scale': 2, 'selem': 1, 'replicate': True, 'memop': 0, 'datasize': 64, 'esize': 32}, belongs_to='aarch64_memory_vector_single_no_wb'),
    'vld1_dup_s64': ARMSema(intrin='vld1_dup_s64', inst='LD1', params=[Parameter(name='ptr', type='int64_t const *', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='int64x1_t', ret_is_signed=True, inst_form='LD1 {Vt.1D},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 0, 'datasize': 64, 'esize': 64, 'elements': 1, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vld1_dup_s8': ARMSema(intrin='vld1_dup_s8', inst='LD1R', params=[Parameter(name='ptr', type='int8_t const *', is_signed=True, is_imm=False, is_mask=False)], spec=[If(Call('HaveMTEExt', [], '2'), [], '3'), VarsDecl([Var('address', '4')], ('bits', Number(64)), '5'), VarsDecl([Var('offs', '6')], ('bits', Number(64)), '7'), VarsDecl([Var('rval', '8')], ('bits', Number(128)), '9'), VarsDecl([Var('element', '11')], ('bits', Var('esize', '10')), '12'), VarDeclInit(VarsDecl([Var('ebytes', '15')], ('integer', Number(64)), '16'), BinaryExpr('DIV', Var('esize', '13'), Number(8), '14'), '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), IfElse(Var('replicate', '31'), [For(Var('s', '59'), Number(0), BinaryExpr('-', Var('selem', '32'), Number(1), '33'), [Update(Var('element', '34'), ArrayIndex(Var('Mem', '35'), [BinaryExpr('+', Var('address', '36'), Var('offs', '37'), '38'), Var('ebytes', '39'), Var('AccType_VEC', '40')], '41')), Update(ArrayIndex(Var('V', '42'), [Var('t', '43')], '44'), Call('Replicate', [Var('element', '46'), BinaryExpr('DIV', Var('datasize', '47'), Var('esize', '48'), '49')], '50')), Update(Var('offs', '51'), BinaryExpr('+', Var('offs', '52'), Var('ebytes', '53'), '54')), Update(Var('t', '55'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '56'), Number(1), '57'), Number(32), '58'))], 1, '60')], [For(Var('s', '107'), Number(0), BinaryExpr('-', Var('selem', '61'), Number(1), '62'), [Update(Var('rval', '63'), ArrayIndex(Var('V', '64'), [Var('t', '65')], '66')), IfElse(BinaryExpr('==', Var('memop', '67'), Var('MemOp_LOAD', '68'), '69'), [Update(ArrayIndex(Var('Elem', '70'), [Var('rval', '71'), Var('index', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('Mem', '75'), [BinaryExpr('+', Var('address', '76'), Var('offs', '77'), '78'), Var('ebytes', '79'), Var('AccType_VEC', '80')], '81')), Update(ArrayIndex(Var('V', '82'), [Var('t', '83')], '84'), Var('rval', '85'))], [Update(ArrayIndex(Var('Mem', '86'), [BinaryExpr('+', Var('address', '87'), Var('offs', '88'), '89'), Var('ebytes', '90'), Var('AccType_VEC', '91')], '92'), ArrayIndex(Var('Elem', '93'), [Var('rval', '94'), Var('index', '95'), Var('esize', '96')], '97'))], '98'), Update(Var('offs', '99'), BinaryExpr('+', Var('offs', '100'), Var('ebytes', '101'), '102')), Update(Var('t', '103'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '104'), Number(1), '105'), Number(32), '106'))], 1, '108')], '109'), If(Var('wback', '110'), [If(BinaryExpr('!=', Var('m', '111'), Number(31), '112'), [Update(Var('offs', '113'), ArrayIndex(Var('X', '114'), [Var('m', '115')], '116'))], '117'), IfElse(BinaryExpr('==', Var('n', '118'), Number(31), '119'), [Update(ArrayIndex(Var('SP', '120'), [], '121'), BinaryExpr('+', Var('address', '122'), Var('offs', '123'), '124'))], [Update(ArrayIndex(Var('X', '125'), [Var('n', '126')], '127'), BinaryExpr('+', Var('address', '128'), Var('offs', '129'), '130'))], '131')], '132')], rettype='int8x8_t', ret_is_signed=True, inst_form='LD1R {Vt.8B},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'scale': 0, 'selem': 1, 'replicate': True, 'memop': 0, 'datasize': 64, 'esize': 8}, belongs_to='aarch64_memory_vector_single_no_wb'),
    'vld1_dup_u16': ARMSema(intrin='vld1_dup_u16', inst='LD1R', params=[Parameter(name='ptr', type='uint16_t const *', is_signed=False, is_imm=False, is_mask=False)], spec=[If(Call('HaveMTEExt', [], '2'), [], '3'), VarsDecl([Var('address', '4')], ('bits', Number(64)), '5'), VarsDecl([Var('offs', '6')], ('bits', Number(64)), '7'), VarsDecl([Var('rval', '8')], ('bits', Number(128)), '9'), VarsDecl([Var('element', '11')], ('bits', Var('esize', '10')), '12'), VarDeclInit(VarsDecl([Var('ebytes', '15')], ('integer', Number(64)), '16'), BinaryExpr('DIV', Var('esize', '13'), Number(8), '14'), '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), IfElse(Var('replicate', '31'), [For(Var('s', '59'), Number(0), BinaryExpr('-', Var('selem', '32'), Number(1), '33'), [Update(Var('element', '34'), ArrayIndex(Var('Mem', '35'), [BinaryExpr('+', Var('address', '36'), Var('offs', '37'), '38'), Var('ebytes', '39'), Var('AccType_VEC', '40')], '41')), Update(ArrayIndex(Var('V', '42'), [Var('t', '43')], '44'), Call('Replicate', [Var('element', '46'), BinaryExpr('DIV', Var('datasize', '47'), Var('esize', '48'), '49')], '50')), Update(Var('offs', '51'), BinaryExpr('+', Var('offs', '52'), Var('ebytes', '53'), '54')), Update(Var('t', '55'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '56'), Number(1), '57'), Number(32), '58'))], 1, '60')], [For(Var('s', '107'), Number(0), BinaryExpr('-', Var('selem', '61'), Number(1), '62'), [Update(Var('rval', '63'), ArrayIndex(Var('V', '64'), [Var('t', '65')], '66')), IfElse(BinaryExpr('==', Var('memop', '67'), Var('MemOp_LOAD', '68'), '69'), [Update(ArrayIndex(Var('Elem', '70'), [Var('rval', '71'), Var('index', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('Mem', '75'), [BinaryExpr('+', Var('address', '76'), Var('offs', '77'), '78'), Var('ebytes', '79'), Var('AccType_VEC', '80')], '81')), Update(ArrayIndex(Var('V', '82'), [Var('t', '83')], '84'), Var('rval', '85'))], [Update(ArrayIndex(Var('Mem', '86'), [BinaryExpr('+', Var('address', '87'), Var('offs', '88'), '89'), Var('ebytes', '90'), Var('AccType_VEC', '91')], '92'), ArrayIndex(Var('Elem', '93'), [Var('rval', '94'), Var('index', '95'), Var('esize', '96')], '97'))], '98'), Update(Var('offs', '99'), BinaryExpr('+', Var('offs', '100'), Var('ebytes', '101'), '102')), Update(Var('t', '103'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '104'), Number(1), '105'), Number(32), '106'))], 1, '108')], '109'), If(Var('wback', '110'), [If(BinaryExpr('!=', Var('m', '111'), Number(31), '112'), [Update(Var('offs', '113'), ArrayIndex(Var('X', '114'), [Var('m', '115')], '116'))], '117'), IfElse(BinaryExpr('==', Var('n', '118'), Number(31), '119'), [Update(ArrayIndex(Var('SP', '120'), [], '121'), BinaryExpr('+', Var('address', '122'), Var('offs', '123'), '124'))], [Update(ArrayIndex(Var('X', '125'), [Var('n', '126')], '127'), BinaryExpr('+', Var('address', '128'), Var('offs', '129'), '130'))], '131')], '132')], rettype='uint16x4_t', ret_is_signed=False, inst_form='LD1R {Vt.4H},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'scale': 1, 'selem': 1, 'replicate': True, 'memop': 0, 'datasize': 64, 'esize': 16}, belongs_to='aarch64_memory_vector_single_no_wb'),
    'vld1_dup_u32': ARMSema(intrin='vld1_dup_u32', inst='LD1R', params=[Parameter(name='ptr', type='uint32_t const *', is_signed=False, is_imm=False, is_mask=False)], spec=[If(Call('HaveMTEExt', [], '2'), [], '3'), VarsDecl([Var('address', '4')], ('bits', Number(64)), '5'), VarsDecl([Var('offs', '6')], ('bits', Number(64)), '7'), VarsDecl([Var('rval', '8')], ('bits', Number(128)), '9'), VarsDecl([Var('element', '11')], ('bits', Var('esize', '10')), '12'), VarDeclInit(VarsDecl([Var('ebytes', '15')], ('integer', Number(64)), '16'), BinaryExpr('DIV', Var('esize', '13'), Number(8), '14'), '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), IfElse(Var('replicate', '31'), [For(Var('s', '59'), Number(0), BinaryExpr('-', Var('selem', '32'), Number(1), '33'), [Update(Var('element', '34'), ArrayIndex(Var('Mem', '35'), [BinaryExpr('+', Var('address', '36'), Var('offs', '37'), '38'), Var('ebytes', '39'), Var('AccType_VEC', '40')], '41')), Update(ArrayIndex(Var('V', '42'), [Var('t', '43')], '44'), Call('Replicate', [Var('element', '46'), BinaryExpr('DIV', Var('datasize', '47'), Var('esize', '48'), '49')], '50')), Update(Var('offs', '51'), BinaryExpr('+', Var('offs', '52'), Var('ebytes', '53'), '54')), Update(Var('t', '55'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '56'), Number(1), '57'), Number(32), '58'))], 1, '60')], [For(Var('s', '107'), Number(0), BinaryExpr('-', Var('selem', '61'), Number(1), '62'), [Update(Var('rval', '63'), ArrayIndex(Var('V', '64'), [Var('t', '65')], '66')), IfElse(BinaryExpr('==', Var('memop', '67'), Var('MemOp_LOAD', '68'), '69'), [Update(ArrayIndex(Var('Elem', '70'), [Var('rval', '71'), Var('index', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('Mem', '75'), [BinaryExpr('+', Var('address', '76'), Var('offs', '77'), '78'), Var('ebytes', '79'), Var('AccType_VEC', '80')], '81')), Update(ArrayIndex(Var('V', '82'), [Var('t', '83')], '84'), Var('rval', '85'))], [Update(ArrayIndex(Var('Mem', '86'), [BinaryExpr('+', Var('address', '87'), Var('offs', '88'), '89'), Var('ebytes', '90'), Var('AccType_VEC', '91')], '92'), ArrayIndex(Var('Elem', '93'), [Var('rval', '94'), Var('index', '95'), Var('esize', '96')], '97'))], '98'), Update(Var('offs', '99'), BinaryExpr('+', Var('offs', '100'), Var('ebytes', '101'), '102')), Update(Var('t', '103'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '104'), Number(1), '105'), Number(32), '106'))], 1, '108')], '109'), If(Var('wback', '110'), [If(BinaryExpr('!=', Var('m', '111'), Number(31), '112'), [Update(Var('offs', '113'), ArrayIndex(Var('X', '114'), [Var('m', '115')], '116'))], '117'), IfElse(BinaryExpr('==', Var('n', '118'), Number(31), '119'), [Update(ArrayIndex(Var('SP', '120'), [], '121'), BinaryExpr('+', Var('address', '122'), Var('offs', '123'), '124'))], [Update(ArrayIndex(Var('X', '125'), [Var('n', '126')], '127'), BinaryExpr('+', Var('address', '128'), Var('offs', '129'), '130'))], '131')], '132')], rettype='uint32x2_t', ret_is_signed=False, inst_form='LD1R {Vt.2S},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'scale': 2, 'selem': 1, 'replicate': True, 'memop': 0, 'datasize': 64, 'esize': 32}, belongs_to='aarch64_memory_vector_single_no_wb'),
    'vld1_dup_u64': ARMSema(intrin='vld1_dup_u64', inst='LD1', params=[Parameter(name='ptr', type='uint64_t const *', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='uint64x1_t', ret_is_signed=False, inst_form='LD1 {Vt.1D},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 0, 'datasize': 64, 'esize': 64, 'elements': 1, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vld1_dup_u8': ARMSema(intrin='vld1_dup_u8', inst='LD1R', params=[Parameter(name='ptr', type='uint8_t const *', is_signed=False, is_imm=False, is_mask=False)], spec=[If(Call('HaveMTEExt', [], '2'), [], '3'), VarsDecl([Var('address', '4')], ('bits', Number(64)), '5'), VarsDecl([Var('offs', '6')], ('bits', Number(64)), '7'), VarsDecl([Var('rval', '8')], ('bits', Number(128)), '9'), VarsDecl([Var('element', '11')], ('bits', Var('esize', '10')), '12'), VarDeclInit(VarsDecl([Var('ebytes', '15')], ('integer', Number(64)), '16'), BinaryExpr('DIV', Var('esize', '13'), Number(8), '14'), '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), IfElse(Var('replicate', '31'), [For(Var('s', '59'), Number(0), BinaryExpr('-', Var('selem', '32'), Number(1), '33'), [Update(Var('element', '34'), ArrayIndex(Var('Mem', '35'), [BinaryExpr('+', Var('address', '36'), Var('offs', '37'), '38'), Var('ebytes', '39'), Var('AccType_VEC', '40')], '41')), Update(ArrayIndex(Var('V', '42'), [Var('t', '43')], '44'), Call('Replicate', [Var('element', '46'), BinaryExpr('DIV', Var('datasize', '47'), Var('esize', '48'), '49')], '50')), Update(Var('offs', '51'), BinaryExpr('+', Var('offs', '52'), Var('ebytes', '53'), '54')), Update(Var('t', '55'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '56'), Number(1), '57'), Number(32), '58'))], 1, '60')], [For(Var('s', '107'), Number(0), BinaryExpr('-', Var('selem', '61'), Number(1), '62'), [Update(Var('rval', '63'), ArrayIndex(Var('V', '64'), [Var('t', '65')], '66')), IfElse(BinaryExpr('==', Var('memop', '67'), Var('MemOp_LOAD', '68'), '69'), [Update(ArrayIndex(Var('Elem', '70'), [Var('rval', '71'), Var('index', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('Mem', '75'), [BinaryExpr('+', Var('address', '76'), Var('offs', '77'), '78'), Var('ebytes', '79'), Var('AccType_VEC', '80')], '81')), Update(ArrayIndex(Var('V', '82'), [Var('t', '83')], '84'), Var('rval', '85'))], [Update(ArrayIndex(Var('Mem', '86'), [BinaryExpr('+', Var('address', '87'), Var('offs', '88'), '89'), Var('ebytes', '90'), Var('AccType_VEC', '91')], '92'), ArrayIndex(Var('Elem', '93'), [Var('rval', '94'), Var('index', '95'), Var('esize', '96')], '97'))], '98'), Update(Var('offs', '99'), BinaryExpr('+', Var('offs', '100'), Var('ebytes', '101'), '102')), Update(Var('t', '103'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '104'), Number(1), '105'), Number(32), '106'))], 1, '108')], '109'), If(Var('wback', '110'), [If(BinaryExpr('!=', Var('m', '111'), Number(31), '112'), [Update(Var('offs', '113'), ArrayIndex(Var('X', '114'), [Var('m', '115')], '116'))], '117'), IfElse(BinaryExpr('==', Var('n', '118'), Number(31), '119'), [Update(ArrayIndex(Var('SP', '120'), [], '121'), BinaryExpr('+', Var('address', '122'), Var('offs', '123'), '124'))], [Update(ArrayIndex(Var('X', '125'), [Var('n', '126')], '127'), BinaryExpr('+', Var('address', '128'), Var('offs', '129'), '130'))], '131')], '132')], rettype='uint8x8_t', ret_is_signed=False, inst_form='LD1R {Vt.8B},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'scale': 0, 'selem': 1, 'replicate': True, 'memop': 0, 'datasize': 64, 'esize': 8}, belongs_to='aarch64_memory_vector_single_no_wb'),
    'vld1_s16': ARMSema(intrin='vld1_s16', inst='LD1', params=[Parameter(name='ptr', type='int16_t const *', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='int16x4_t', ret_is_signed=True, inst_form='LD1 {Vt.4H},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 0, 'datasize': 64, 'esize': 16, 'elements': 4, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vld1_s32': ARMSema(intrin='vld1_s32', inst='LD1', params=[Parameter(name='ptr', type='int32_t const *', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='int32x2_t', ret_is_signed=True, inst_form='LD1 {Vt.2S},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 0, 'datasize': 64, 'esize': 32, 'elements': 2, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vld1_s64': ARMSema(intrin='vld1_s64', inst='LD1', params=[Parameter(name='ptr', type='int64_t const *', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='int64x1_t', ret_is_signed=True, inst_form='LD1 {Vt.1D},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 0, 'datasize': 64, 'esize': 64, 'elements': 1, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vld1_s8': ARMSema(intrin='vld1_s8', inst='LD1', params=[Parameter(name='ptr', type='int8_t const *', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='int8x8_t', ret_is_signed=True, inst_form='LD1 {Vt.8B},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 0, 'datasize': 64, 'esize': 8, 'elements': 8, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vld1_u16': ARMSema(intrin='vld1_u16', inst='LD1', params=[Parameter(name='ptr', type='uint16_t const *', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='uint16x4_t', ret_is_signed=False, inst_form='LD1 {Vt.4H},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 0, 'datasize': 64, 'esize': 16, 'elements': 4, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vld1_u32': ARMSema(intrin='vld1_u32', inst='LD1', params=[Parameter(name='ptr', type='uint32_t const *', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='uint32x2_t', ret_is_signed=False, inst_form='LD1 {Vt.2S},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 0, 'datasize': 64, 'esize': 32, 'elements': 2, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vld1_u64': ARMSema(intrin='vld1_u64', inst='LD1', params=[Parameter(name='ptr', type='uint64_t const *', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='uint64x1_t', ret_is_signed=False, inst_form='LD1 {Vt.1D},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 0, 'datasize': 64, 'esize': 64, 'elements': 1, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vld1_u8': ARMSema(intrin='vld1_u8', inst='LD1', params=[Parameter(name='ptr', type='uint8_t const *', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='uint8x8_t', ret_is_signed=False, inst_form='LD1 {Vt.8B},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 0, 'datasize': 64, 'esize': 8, 'elements': 8, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vld1q_dup_s16': ARMSema(intrin='vld1q_dup_s16', inst='LD1R', params=[Parameter(name='ptr', type='int16_t const *', is_signed=True, is_imm=False, is_mask=False)], spec=[If(Call('HaveMTEExt', [], '2'), [], '3'), VarsDecl([Var('address', '4')], ('bits', Number(64)), '5'), VarsDecl([Var('offs', '6')], ('bits', Number(64)), '7'), VarsDecl([Var('rval', '8')], ('bits', Number(128)), '9'), VarsDecl([Var('element', '11')], ('bits', Var('esize', '10')), '12'), VarDeclInit(VarsDecl([Var('ebytes', '15')], ('integer', Number(64)), '16'), BinaryExpr('DIV', Var('esize', '13'), Number(8), '14'), '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), IfElse(Var('replicate', '31'), [For(Var('s', '59'), Number(0), BinaryExpr('-', Var('selem', '32'), Number(1), '33'), [Update(Var('element', '34'), ArrayIndex(Var('Mem', '35'), [BinaryExpr('+', Var('address', '36'), Var('offs', '37'), '38'), Var('ebytes', '39'), Var('AccType_VEC', '40')], '41')), Update(ArrayIndex(Var('V', '42'), [Var('t', '43')], '44'), Call('Replicate', [Var('element', '46'), BinaryExpr('DIV', Var('datasize', '47'), Var('esize', '48'), '49')], '50')), Update(Var('offs', '51'), BinaryExpr('+', Var('offs', '52'), Var('ebytes', '53'), '54')), Update(Var('t', '55'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '56'), Number(1), '57'), Number(32), '58'))], 1, '60')], [For(Var('s', '107'), Number(0), BinaryExpr('-', Var('selem', '61'), Number(1), '62'), [Update(Var('rval', '63'), ArrayIndex(Var('V', '64'), [Var('t', '65')], '66')), IfElse(BinaryExpr('==', Var('memop', '67'), Var('MemOp_LOAD', '68'), '69'), [Update(ArrayIndex(Var('Elem', '70'), [Var('rval', '71'), Var('index', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('Mem', '75'), [BinaryExpr('+', Var('address', '76'), Var('offs', '77'), '78'), Var('ebytes', '79'), Var('AccType_VEC', '80')], '81')), Update(ArrayIndex(Var('V', '82'), [Var('t', '83')], '84'), Var('rval', '85'))], [Update(ArrayIndex(Var('Mem', '86'), [BinaryExpr('+', Var('address', '87'), Var('offs', '88'), '89'), Var('ebytes', '90'), Var('AccType_VEC', '91')], '92'), ArrayIndex(Var('Elem', '93'), [Var('rval', '94'), Var('index', '95'), Var('esize', '96')], '97'))], '98'), Update(Var('offs', '99'), BinaryExpr('+', Var('offs', '100'), Var('ebytes', '101'), '102')), Update(Var('t', '103'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '104'), Number(1), '105'), Number(32), '106'))], 1, '108')], '109'), If(Var('wback', '110'), [If(BinaryExpr('!=', Var('m', '111'), Number(31), '112'), [Update(Var('offs', '113'), ArrayIndex(Var('X', '114'), [Var('m', '115')], '116'))], '117'), IfElse(BinaryExpr('==', Var('n', '118'), Number(31), '119'), [Update(ArrayIndex(Var('SP', '120'), [], '121'), BinaryExpr('+', Var('address', '122'), Var('offs', '123'), '124'))], [Update(ArrayIndex(Var('X', '125'), [Var('n', '126')], '127'), BinaryExpr('+', Var('address', '128'), Var('offs', '129'), '130'))], '131')], '132')], rettype='int16x8_t', ret_is_signed=True, inst_form='LD1R {Vt.8H},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'scale': 1, 'selem': 1, 'replicate': True, 'memop': 0, 'datasize': 128, 'esize': 16}, belongs_to='aarch64_memory_vector_single_no_wb'),
    'vld1q_dup_s32': ARMSema(intrin='vld1q_dup_s32', inst='LD1R', params=[Parameter(name='ptr', type='int32_t const *', is_signed=True, is_imm=False, is_mask=False)], spec=[If(Call('HaveMTEExt', [], '2'), [], '3'), VarsDecl([Var('address', '4')], ('bits', Number(64)), '5'), VarsDecl([Var('offs', '6')], ('bits', Number(64)), '7'), VarsDecl([Var('rval', '8')], ('bits', Number(128)), '9'), VarsDecl([Var('element', '11')], ('bits', Var('esize', '10')), '12'), VarDeclInit(VarsDecl([Var('ebytes', '15')], ('integer', Number(64)), '16'), BinaryExpr('DIV', Var('esize', '13'), Number(8), '14'), '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), IfElse(Var('replicate', '31'), [For(Var('s', '59'), Number(0), BinaryExpr('-', Var('selem', '32'), Number(1), '33'), [Update(Var('element', '34'), ArrayIndex(Var('Mem', '35'), [BinaryExpr('+', Var('address', '36'), Var('offs', '37'), '38'), Var('ebytes', '39'), Var('AccType_VEC', '40')], '41')), Update(ArrayIndex(Var('V', '42'), [Var('t', '43')], '44'), Call('Replicate', [Var('element', '46'), BinaryExpr('DIV', Var('datasize', '47'), Var('esize', '48'), '49')], '50')), Update(Var('offs', '51'), BinaryExpr('+', Var('offs', '52'), Var('ebytes', '53'), '54')), Update(Var('t', '55'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '56'), Number(1), '57'), Number(32), '58'))], 1, '60')], [For(Var('s', '107'), Number(0), BinaryExpr('-', Var('selem', '61'), Number(1), '62'), [Update(Var('rval', '63'), ArrayIndex(Var('V', '64'), [Var('t', '65')], '66')), IfElse(BinaryExpr('==', Var('memop', '67'), Var('MemOp_LOAD', '68'), '69'), [Update(ArrayIndex(Var('Elem', '70'), [Var('rval', '71'), Var('index', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('Mem', '75'), [BinaryExpr('+', Var('address', '76'), Var('offs', '77'), '78'), Var('ebytes', '79'), Var('AccType_VEC', '80')], '81')), Update(ArrayIndex(Var('V', '82'), [Var('t', '83')], '84'), Var('rval', '85'))], [Update(ArrayIndex(Var('Mem', '86'), [BinaryExpr('+', Var('address', '87'), Var('offs', '88'), '89'), Var('ebytes', '90'), Var('AccType_VEC', '91')], '92'), ArrayIndex(Var('Elem', '93'), [Var('rval', '94'), Var('index', '95'), Var('esize', '96')], '97'))], '98'), Update(Var('offs', '99'), BinaryExpr('+', Var('offs', '100'), Var('ebytes', '101'), '102')), Update(Var('t', '103'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '104'), Number(1), '105'), Number(32), '106'))], 1, '108')], '109'), If(Var('wback', '110'), [If(BinaryExpr('!=', Var('m', '111'), Number(31), '112'), [Update(Var('offs', '113'), ArrayIndex(Var('X', '114'), [Var('m', '115')], '116'))], '117'), IfElse(BinaryExpr('==', Var('n', '118'), Number(31), '119'), [Update(ArrayIndex(Var('SP', '120'), [], '121'), BinaryExpr('+', Var('address', '122'), Var('offs', '123'), '124'))], [Update(ArrayIndex(Var('X', '125'), [Var('n', '126')], '127'), BinaryExpr('+', Var('address', '128'), Var('offs', '129'), '130'))], '131')], '132')], rettype='int32x4_t', ret_is_signed=True, inst_form='LD1R {Vt.4S},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'scale': 2, 'selem': 1, 'replicate': True, 'memop': 0, 'datasize': 128, 'esize': 32}, belongs_to='aarch64_memory_vector_single_no_wb'),
    'vld1q_dup_s64': ARMSema(intrin='vld1q_dup_s64', inst='LD1R', params=[Parameter(name='ptr', type='int64_t const *', is_signed=True, is_imm=False, is_mask=False)], spec=[If(Call('HaveMTEExt', [], '2'), [], '3'), VarsDecl([Var('address', '4')], ('bits', Number(64)), '5'), VarsDecl([Var('offs', '6')], ('bits', Number(64)), '7'), VarsDecl([Var('rval', '8')], ('bits', Number(128)), '9'), VarsDecl([Var('element', '11')], ('bits', Var('esize', '10')), '12'), VarDeclInit(VarsDecl([Var('ebytes', '15')], ('integer', Number(64)), '16'), BinaryExpr('DIV', Var('esize', '13'), Number(8), '14'), '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), IfElse(Var('replicate', '31'), [For(Var('s', '59'), Number(0), BinaryExpr('-', Var('selem', '32'), Number(1), '33'), [Update(Var('element', '34'), ArrayIndex(Var('Mem', '35'), [BinaryExpr('+', Var('address', '36'), Var('offs', '37'), '38'), Var('ebytes', '39'), Var('AccType_VEC', '40')], '41')), Update(ArrayIndex(Var('V', '42'), [Var('t', '43')], '44'), Call('Replicate', [Var('element', '46'), BinaryExpr('DIV', Var('datasize', '47'), Var('esize', '48'), '49')], '50')), Update(Var('offs', '51'), BinaryExpr('+', Var('offs', '52'), Var('ebytes', '53'), '54')), Update(Var('t', '55'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '56'), Number(1), '57'), Number(32), '58'))], 1, '60')], [For(Var('s', '107'), Number(0), BinaryExpr('-', Var('selem', '61'), Number(1), '62'), [Update(Var('rval', '63'), ArrayIndex(Var('V', '64'), [Var('t', '65')], '66')), IfElse(BinaryExpr('==', Var('memop', '67'), Var('MemOp_LOAD', '68'), '69'), [Update(ArrayIndex(Var('Elem', '70'), [Var('rval', '71'), Var('index', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('Mem', '75'), [BinaryExpr('+', Var('address', '76'), Var('offs', '77'), '78'), Var('ebytes', '79'), Var('AccType_VEC', '80')], '81')), Update(ArrayIndex(Var('V', '82'), [Var('t', '83')], '84'), Var('rval', '85'))], [Update(ArrayIndex(Var('Mem', '86'), [BinaryExpr('+', Var('address', '87'), Var('offs', '88'), '89'), Var('ebytes', '90'), Var('AccType_VEC', '91')], '92'), ArrayIndex(Var('Elem', '93'), [Var('rval', '94'), Var('index', '95'), Var('esize', '96')], '97'))], '98'), Update(Var('offs', '99'), BinaryExpr('+', Var('offs', '100'), Var('ebytes', '101'), '102')), Update(Var('t', '103'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '104'), Number(1), '105'), Number(32), '106'))], 1, '108')], '109'), If(Var('wback', '110'), [If(BinaryExpr('!=', Var('m', '111'), Number(31), '112'), [Update(Var('offs', '113'), ArrayIndex(Var('X', '114'), [Var('m', '115')], '116'))], '117'), IfElse(BinaryExpr('==', Var('n', '118'), Number(31), '119'), [Update(ArrayIndex(Var('SP', '120'), [], '121'), BinaryExpr('+', Var('address', '122'), Var('offs', '123'), '124'))], [Update(ArrayIndex(Var('X', '125'), [Var('n', '126')], '127'), BinaryExpr('+', Var('address', '128'), Var('offs', '129'), '130'))], '131')], '132')], rettype='int64x2_t', ret_is_signed=True, inst_form='LD1R {Vt.2D},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'scale': 3, 'selem': 1, 'replicate': True, 'memop': 0, 'datasize': 128, 'esize': 64}, belongs_to='aarch64_memory_vector_single_no_wb'),
    'vld1q_dup_s8': ARMSema(intrin='vld1q_dup_s8', inst='LD1R', params=[Parameter(name='ptr', type='int8_t const *', is_signed=True, is_imm=False, is_mask=False)], spec=[If(Call('HaveMTEExt', [], '2'), [], '3'), VarsDecl([Var('address', '4')], ('bits', Number(64)), '5'), VarsDecl([Var('offs', '6')], ('bits', Number(64)), '7'), VarsDecl([Var('rval', '8')], ('bits', Number(128)), '9'), VarsDecl([Var('element', '11')], ('bits', Var('esize', '10')), '12'), VarDeclInit(VarsDecl([Var('ebytes', '15')], ('integer', Number(64)), '16'), BinaryExpr('DIV', Var('esize', '13'), Number(8), '14'), '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), IfElse(Var('replicate', '31'), [For(Var('s', '59'), Number(0), BinaryExpr('-', Var('selem', '32'), Number(1), '33'), [Update(Var('element', '34'), ArrayIndex(Var('Mem', '35'), [BinaryExpr('+', Var('address', '36'), Var('offs', '37'), '38'), Var('ebytes', '39'), Var('AccType_VEC', '40')], '41')), Update(ArrayIndex(Var('V', '42'), [Var('t', '43')], '44'), Call('Replicate', [Var('element', '46'), BinaryExpr('DIV', Var('datasize', '47'), Var('esize', '48'), '49')], '50')), Update(Var('offs', '51'), BinaryExpr('+', Var('offs', '52'), Var('ebytes', '53'), '54')), Update(Var('t', '55'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '56'), Number(1), '57'), Number(32), '58'))], 1, '60')], [For(Var('s', '107'), Number(0), BinaryExpr('-', Var('selem', '61'), Number(1), '62'), [Update(Var('rval', '63'), ArrayIndex(Var('V', '64'), [Var('t', '65')], '66')), IfElse(BinaryExpr('==', Var('memop', '67'), Var('MemOp_LOAD', '68'), '69'), [Update(ArrayIndex(Var('Elem', '70'), [Var('rval', '71'), Var('index', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('Mem', '75'), [BinaryExpr('+', Var('address', '76'), Var('offs', '77'), '78'), Var('ebytes', '79'), Var('AccType_VEC', '80')], '81')), Update(ArrayIndex(Var('V', '82'), [Var('t', '83')], '84'), Var('rval', '85'))], [Update(ArrayIndex(Var('Mem', '86'), [BinaryExpr('+', Var('address', '87'), Var('offs', '88'), '89'), Var('ebytes', '90'), Var('AccType_VEC', '91')], '92'), ArrayIndex(Var('Elem', '93'), [Var('rval', '94'), Var('index', '95'), Var('esize', '96')], '97'))], '98'), Update(Var('offs', '99'), BinaryExpr('+', Var('offs', '100'), Var('ebytes', '101'), '102')), Update(Var('t', '103'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '104'), Number(1), '105'), Number(32), '106'))], 1, '108')], '109'), If(Var('wback', '110'), [If(BinaryExpr('!=', Var('m', '111'), Number(31), '112'), [Update(Var('offs', '113'), ArrayIndex(Var('X', '114'), [Var('m', '115')], '116'))], '117'), IfElse(BinaryExpr('==', Var('n', '118'), Number(31), '119'), [Update(ArrayIndex(Var('SP', '120'), [], '121'), BinaryExpr('+', Var('address', '122'), Var('offs', '123'), '124'))], [Update(ArrayIndex(Var('X', '125'), [Var('n', '126')], '127'), BinaryExpr('+', Var('address', '128'), Var('offs', '129'), '130'))], '131')], '132')], rettype='int8x16_t', ret_is_signed=True, inst_form='LD1R {Vt.16B},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'scale': 0, 'selem': 1, 'replicate': True, 'memop': 0, 'datasize': 128, 'esize': 8}, belongs_to='aarch64_memory_vector_single_no_wb'),
    'vld1q_dup_u16': ARMSema(intrin='vld1q_dup_u16', inst='LD1R', params=[Parameter(name='ptr', type='uint16_t const *', is_signed=False, is_imm=False, is_mask=False)], spec=[If(Call('HaveMTEExt', [], '2'), [], '3'), VarsDecl([Var('address', '4')], ('bits', Number(64)), '5'), VarsDecl([Var('offs', '6')], ('bits', Number(64)), '7'), VarsDecl([Var('rval', '8')], ('bits', Number(128)), '9'), VarsDecl([Var('element', '11')], ('bits', Var('esize', '10')), '12'), VarDeclInit(VarsDecl([Var('ebytes', '15')], ('integer', Number(64)), '16'), BinaryExpr('DIV', Var('esize', '13'), Number(8), '14'), '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), IfElse(Var('replicate', '31'), [For(Var('s', '59'), Number(0), BinaryExpr('-', Var('selem', '32'), Number(1), '33'), [Update(Var('element', '34'), ArrayIndex(Var('Mem', '35'), [BinaryExpr('+', Var('address', '36'), Var('offs', '37'), '38'), Var('ebytes', '39'), Var('AccType_VEC', '40')], '41')), Update(ArrayIndex(Var('V', '42'), [Var('t', '43')], '44'), Call('Replicate', [Var('element', '46'), BinaryExpr('DIV', Var('datasize', '47'), Var('esize', '48'), '49')], '50')), Update(Var('offs', '51'), BinaryExpr('+', Var('offs', '52'), Var('ebytes', '53'), '54')), Update(Var('t', '55'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '56'), Number(1), '57'), Number(32), '58'))], 1, '60')], [For(Var('s', '107'), Number(0), BinaryExpr('-', Var('selem', '61'), Number(1), '62'), [Update(Var('rval', '63'), ArrayIndex(Var('V', '64'), [Var('t', '65')], '66')), IfElse(BinaryExpr('==', Var('memop', '67'), Var('MemOp_LOAD', '68'), '69'), [Update(ArrayIndex(Var('Elem', '70'), [Var('rval', '71'), Var('index', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('Mem', '75'), [BinaryExpr('+', Var('address', '76'), Var('offs', '77'), '78'), Var('ebytes', '79'), Var('AccType_VEC', '80')], '81')), Update(ArrayIndex(Var('V', '82'), [Var('t', '83')], '84'), Var('rval', '85'))], [Update(ArrayIndex(Var('Mem', '86'), [BinaryExpr('+', Var('address', '87'), Var('offs', '88'), '89'), Var('ebytes', '90'), Var('AccType_VEC', '91')], '92'), ArrayIndex(Var('Elem', '93'), [Var('rval', '94'), Var('index', '95'), Var('esize', '96')], '97'))], '98'), Update(Var('offs', '99'), BinaryExpr('+', Var('offs', '100'), Var('ebytes', '101'), '102')), Update(Var('t', '103'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '104'), Number(1), '105'), Number(32), '106'))], 1, '108')], '109'), If(Var('wback', '110'), [If(BinaryExpr('!=', Var('m', '111'), Number(31), '112'), [Update(Var('offs', '113'), ArrayIndex(Var('X', '114'), [Var('m', '115')], '116'))], '117'), IfElse(BinaryExpr('==', Var('n', '118'), Number(31), '119'), [Update(ArrayIndex(Var('SP', '120'), [], '121'), BinaryExpr('+', Var('address', '122'), Var('offs', '123'), '124'))], [Update(ArrayIndex(Var('X', '125'), [Var('n', '126')], '127'), BinaryExpr('+', Var('address', '128'), Var('offs', '129'), '130'))], '131')], '132')], rettype='uint16x8_t', ret_is_signed=False, inst_form='LD1R {Vt.8H},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'scale': 1, 'selem': 1, 'replicate': True, 'memop': 0, 'datasize': 128, 'esize': 16}, belongs_to='aarch64_memory_vector_single_no_wb'),
    'vld1q_dup_u32': ARMSema(intrin='vld1q_dup_u32', inst='LD1R', params=[Parameter(name='ptr', type='uint32_t const *', is_signed=False, is_imm=False, is_mask=False)], spec=[If(Call('HaveMTEExt', [], '2'), [], '3'), VarsDecl([Var('address', '4')], ('bits', Number(64)), '5'), VarsDecl([Var('offs', '6')], ('bits', Number(64)), '7'), VarsDecl([Var('rval', '8')], ('bits', Number(128)), '9'), VarsDecl([Var('element', '11')], ('bits', Var('esize', '10')), '12'), VarDeclInit(VarsDecl([Var('ebytes', '15')], ('integer', Number(64)), '16'), BinaryExpr('DIV', Var('esize', '13'), Number(8), '14'), '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), IfElse(Var('replicate', '31'), [For(Var('s', '59'), Number(0), BinaryExpr('-', Var('selem', '32'), Number(1), '33'), [Update(Var('element', '34'), ArrayIndex(Var('Mem', '35'), [BinaryExpr('+', Var('address', '36'), Var('offs', '37'), '38'), Var('ebytes', '39'), Var('AccType_VEC', '40')], '41')), Update(ArrayIndex(Var('V', '42'), [Var('t', '43')], '44'), Call('Replicate', [Var('element', '46'), BinaryExpr('DIV', Var('datasize', '47'), Var('esize', '48'), '49')], '50')), Update(Var('offs', '51'), BinaryExpr('+', Var('offs', '52'), Var('ebytes', '53'), '54')), Update(Var('t', '55'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '56'), Number(1), '57'), Number(32), '58'))], 1, '60')], [For(Var('s', '107'), Number(0), BinaryExpr('-', Var('selem', '61'), Number(1), '62'), [Update(Var('rval', '63'), ArrayIndex(Var('V', '64'), [Var('t', '65')], '66')), IfElse(BinaryExpr('==', Var('memop', '67'), Var('MemOp_LOAD', '68'), '69'), [Update(ArrayIndex(Var('Elem', '70'), [Var('rval', '71'), Var('index', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('Mem', '75'), [BinaryExpr('+', Var('address', '76'), Var('offs', '77'), '78'), Var('ebytes', '79'), Var('AccType_VEC', '80')], '81')), Update(ArrayIndex(Var('V', '82'), [Var('t', '83')], '84'), Var('rval', '85'))], [Update(ArrayIndex(Var('Mem', '86'), [BinaryExpr('+', Var('address', '87'), Var('offs', '88'), '89'), Var('ebytes', '90'), Var('AccType_VEC', '91')], '92'), ArrayIndex(Var('Elem', '93'), [Var('rval', '94'), Var('index', '95'), Var('esize', '96')], '97'))], '98'), Update(Var('offs', '99'), BinaryExpr('+', Var('offs', '100'), Var('ebytes', '101'), '102')), Update(Var('t', '103'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '104'), Number(1), '105'), Number(32), '106'))], 1, '108')], '109'), If(Var('wback', '110'), [If(BinaryExpr('!=', Var('m', '111'), Number(31), '112'), [Update(Var('offs', '113'), ArrayIndex(Var('X', '114'), [Var('m', '115')], '116'))], '117'), IfElse(BinaryExpr('==', Var('n', '118'), Number(31), '119'), [Update(ArrayIndex(Var('SP', '120'), [], '121'), BinaryExpr('+', Var('address', '122'), Var('offs', '123'), '124'))], [Update(ArrayIndex(Var('X', '125'), [Var('n', '126')], '127'), BinaryExpr('+', Var('address', '128'), Var('offs', '129'), '130'))], '131')], '132')], rettype='uint32x4_t', ret_is_signed=False, inst_form='LD1R {Vt.4S},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'scale': 2, 'selem': 1, 'replicate': True, 'memop': 0, 'datasize': 128, 'esize': 32}, belongs_to='aarch64_memory_vector_single_no_wb'),
    'vld1q_dup_u64': ARMSema(intrin='vld1q_dup_u64', inst='LD1R', params=[Parameter(name='ptr', type='uint64_t const *', is_signed=False, is_imm=False, is_mask=False)], spec=[If(Call('HaveMTEExt', [], '2'), [], '3'), VarsDecl([Var('address', '4')], ('bits', Number(64)), '5'), VarsDecl([Var('offs', '6')], ('bits', Number(64)), '7'), VarsDecl([Var('rval', '8')], ('bits', Number(128)), '9'), VarsDecl([Var('element', '11')], ('bits', Var('esize', '10')), '12'), VarDeclInit(VarsDecl([Var('ebytes', '15')], ('integer', Number(64)), '16'), BinaryExpr('DIV', Var('esize', '13'), Number(8), '14'), '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), IfElse(Var('replicate', '31'), [For(Var('s', '59'), Number(0), BinaryExpr('-', Var('selem', '32'), Number(1), '33'), [Update(Var('element', '34'), ArrayIndex(Var('Mem', '35'), [BinaryExpr('+', Var('address', '36'), Var('offs', '37'), '38'), Var('ebytes', '39'), Var('AccType_VEC', '40')], '41')), Update(ArrayIndex(Var('V', '42'), [Var('t', '43')], '44'), Call('Replicate', [Var('element', '46'), BinaryExpr('DIV', Var('datasize', '47'), Var('esize', '48'), '49')], '50')), Update(Var('offs', '51'), BinaryExpr('+', Var('offs', '52'), Var('ebytes', '53'), '54')), Update(Var('t', '55'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '56'), Number(1), '57'), Number(32), '58'))], 1, '60')], [For(Var('s', '107'), Number(0), BinaryExpr('-', Var('selem', '61'), Number(1), '62'), [Update(Var('rval', '63'), ArrayIndex(Var('V', '64'), [Var('t', '65')], '66')), IfElse(BinaryExpr('==', Var('memop', '67'), Var('MemOp_LOAD', '68'), '69'), [Update(ArrayIndex(Var('Elem', '70'), [Var('rval', '71'), Var('index', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('Mem', '75'), [BinaryExpr('+', Var('address', '76'), Var('offs', '77'), '78'), Var('ebytes', '79'), Var('AccType_VEC', '80')], '81')), Update(ArrayIndex(Var('V', '82'), [Var('t', '83')], '84'), Var('rval', '85'))], [Update(ArrayIndex(Var('Mem', '86'), [BinaryExpr('+', Var('address', '87'), Var('offs', '88'), '89'), Var('ebytes', '90'), Var('AccType_VEC', '91')], '92'), ArrayIndex(Var('Elem', '93'), [Var('rval', '94'), Var('index', '95'), Var('esize', '96')], '97'))], '98'), Update(Var('offs', '99'), BinaryExpr('+', Var('offs', '100'), Var('ebytes', '101'), '102')), Update(Var('t', '103'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '104'), Number(1), '105'), Number(32), '106'))], 1, '108')], '109'), If(Var('wback', '110'), [If(BinaryExpr('!=', Var('m', '111'), Number(31), '112'), [Update(Var('offs', '113'), ArrayIndex(Var('X', '114'), [Var('m', '115')], '116'))], '117'), IfElse(BinaryExpr('==', Var('n', '118'), Number(31), '119'), [Update(ArrayIndex(Var('SP', '120'), [], '121'), BinaryExpr('+', Var('address', '122'), Var('offs', '123'), '124'))], [Update(ArrayIndex(Var('X', '125'), [Var('n', '126')], '127'), BinaryExpr('+', Var('address', '128'), Var('offs', '129'), '130'))], '131')], '132')], rettype='uint64x2_t', ret_is_signed=False, inst_form='LD1R {Vt.2D},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'scale': 3, 'selem': 1, 'replicate': True, 'memop': 0, 'datasize': 128, 'esize': 64}, belongs_to='aarch64_memory_vector_single_no_wb'),
    'vld1q_dup_u8': ARMSema(intrin='vld1q_dup_u8', inst='LD1R', params=[Parameter(name='ptr', type='uint8_t const *', is_signed=False, is_imm=False, is_mask=False)], spec=[If(Call('HaveMTEExt', [], '2'), [], '3'), VarsDecl([Var('address', '4')], ('bits', Number(64)), '5'), VarsDecl([Var('offs', '6')], ('bits', Number(64)), '7'), VarsDecl([Var('rval', '8')], ('bits', Number(128)), '9'), VarsDecl([Var('element', '11')], ('bits', Var('esize', '10')), '12'), VarDeclInit(VarsDecl([Var('ebytes', '15')], ('integer', Number(64)), '16'), BinaryExpr('DIV', Var('esize', '13'), Number(8), '14'), '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), IfElse(Var('replicate', '31'), [For(Var('s', '59'), Number(0), BinaryExpr('-', Var('selem', '32'), Number(1), '33'), [Update(Var('element', '34'), ArrayIndex(Var('Mem', '35'), [BinaryExpr('+', Var('address', '36'), Var('offs', '37'), '38'), Var('ebytes', '39'), Var('AccType_VEC', '40')], '41')), Update(ArrayIndex(Var('V', '42'), [Var('t', '43')], '44'), Call('Replicate', [Var('element', '46'), BinaryExpr('DIV', Var('datasize', '47'), Var('esize', '48'), '49')], '50')), Update(Var('offs', '51'), BinaryExpr('+', Var('offs', '52'), Var('ebytes', '53'), '54')), Update(Var('t', '55'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '56'), Number(1), '57'), Number(32), '58'))], 1, '60')], [For(Var('s', '107'), Number(0), BinaryExpr('-', Var('selem', '61'), Number(1), '62'), [Update(Var('rval', '63'), ArrayIndex(Var('V', '64'), [Var('t', '65')], '66')), IfElse(BinaryExpr('==', Var('memop', '67'), Var('MemOp_LOAD', '68'), '69'), [Update(ArrayIndex(Var('Elem', '70'), [Var('rval', '71'), Var('index', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('Mem', '75'), [BinaryExpr('+', Var('address', '76'), Var('offs', '77'), '78'), Var('ebytes', '79'), Var('AccType_VEC', '80')], '81')), Update(ArrayIndex(Var('V', '82'), [Var('t', '83')], '84'), Var('rval', '85'))], [Update(ArrayIndex(Var('Mem', '86'), [BinaryExpr('+', Var('address', '87'), Var('offs', '88'), '89'), Var('ebytes', '90'), Var('AccType_VEC', '91')], '92'), ArrayIndex(Var('Elem', '93'), [Var('rval', '94'), Var('index', '95'), Var('esize', '96')], '97'))], '98'), Update(Var('offs', '99'), BinaryExpr('+', Var('offs', '100'), Var('ebytes', '101'), '102')), Update(Var('t', '103'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '104'), Number(1), '105'), Number(32), '106'))], 1, '108')], '109'), If(Var('wback', '110'), [If(BinaryExpr('!=', Var('m', '111'), Number(31), '112'), [Update(Var('offs', '113'), ArrayIndex(Var('X', '114'), [Var('m', '115')], '116'))], '117'), IfElse(BinaryExpr('==', Var('n', '118'), Number(31), '119'), [Update(ArrayIndex(Var('SP', '120'), [], '121'), BinaryExpr('+', Var('address', '122'), Var('offs', '123'), '124'))], [Update(ArrayIndex(Var('X', '125'), [Var('n', '126')], '127'), BinaryExpr('+', Var('address', '128'), Var('offs', '129'), '130'))], '131')], '132')], rettype='uint8x16_t', ret_is_signed=False, inst_form='LD1R {Vt.16B},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'scale': 0, 'selem': 1, 'replicate': True, 'memop': 0, 'datasize': 128, 'esize': 8}, belongs_to='aarch64_memory_vector_single_no_wb'),
    'vld1q_s16': ARMSema(intrin='vld1q_s16', inst='LD1', params=[Parameter(name='ptr', type='int16_t const *', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='int16x8_t', ret_is_signed=True, inst_form='LD1 {Vt.8H},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 0, 'datasize': 128, 'esize': 16, 'elements': 8, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vld1q_s32': ARMSema(intrin='vld1q_s32', inst='LD1', params=[Parameter(name='ptr', type='int32_t const *', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='int32x4_t', ret_is_signed=True, inst_form='LD1 {Vt.4S},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 0, 'datasize': 128, 'esize': 32, 'elements': 4, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vld1q_s64': ARMSema(intrin='vld1q_s64', inst='LD1', params=[Parameter(name='ptr', type='int64_t const *', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='int64x2_t', ret_is_signed=True, inst_form='LD1 {Vt.2D},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 0, 'datasize': 128, 'esize': 64, 'elements': 2, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vld1q_s8': ARMSema(intrin='vld1q_s8', inst='LD1', params=[Parameter(name='ptr', type='int8_t const *', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='int8x16_t', ret_is_signed=True, inst_form='LD1 {Vt.16B},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 0, 'datasize': 128, 'esize': 8, 'elements': 16, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vld1q_u16': ARMSema(intrin='vld1q_u16', inst='LD1', params=[Parameter(name='ptr', type='uint16_t const *', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='uint16x8_t', ret_is_signed=False, inst_form='LD1 {Vt.8H},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 0, 'datasize': 128, 'esize': 16, 'elements': 8, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vld1q_u32': ARMSema(intrin='vld1q_u32', inst='LD1', params=[Parameter(name='ptr', type='uint32_t const *', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='uint32x4_t', ret_is_signed=False, inst_form='LD1 {Vt.4S},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 0, 'datasize': 128, 'esize': 32, 'elements': 4, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vld1q_u64': ARMSema(intrin='vld1q_u64', inst='LD1', params=[Parameter(name='ptr', type='uint64_t const *', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='uint64x2_t', ret_is_signed=False, inst_form='LD1 {Vt.2D},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 0, 'datasize': 128, 'esize': 64, 'elements': 2, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vld1q_u8': ARMSema(intrin='vld1q_u8', inst='LD1', params=[Parameter(name='ptr', type='uint8_t const *', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='uint8x16_t', ret_is_signed=False, inst_form='LD1 {Vt.16B},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'t': 'returnVal', 'n': 'ptr'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 0, 'datasize': 128, 'esize': 8, 'elements': 16, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vmax_s16': ARMSema(intrin='vmax_s16', inst='SMAX', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('maxmin', '22')], ('integer', Number(64)), '23'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('maxmin', '44'), IfElse(Var('minimum', '49'), Call('Min', [Var('element1', '46'), Var('element2', '47')], '48'), Call('Max', [Var('element1', '51'), Var('element2', '52')], '53'), '54')), Update(ArrayIndex(Var('Elem', '55'), [Var('result', '56'), Var('e', '57'), Var('esize', '58')], '59'), ArrayIndex(Var('maxmin', '60'), [SliceRange(BinaryExpr('-', Var('esize', '61'), Number(1), '62'), Number(0), '63')], '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SMAX Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': False, 'minimum': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_single'),
    'vmax_s32': ARMSema(intrin='vmax_s32', inst='SMAX', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('maxmin', '22')], ('integer', Number(64)), '23'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('maxmin', '44'), IfElse(Var('minimum', '49'), Call('Min', [Var('element1', '46'), Var('element2', '47')], '48'), Call('Max', [Var('element1', '51'), Var('element2', '52')], '53'), '54')), Update(ArrayIndex(Var('Elem', '55'), [Var('result', '56'), Var('e', '57'), Var('esize', '58')], '59'), ArrayIndex(Var('maxmin', '60'), [SliceRange(BinaryExpr('-', Var('esize', '61'), Number(1), '62'), Number(0), '63')], '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SMAX Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': False, 'minimum': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_single'),
    'vmax_s8': ARMSema(intrin='vmax_s8', inst='SMAX', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('maxmin', '22')], ('integer', Number(64)), '23'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('maxmin', '44'), IfElse(Var('minimum', '49'), Call('Min', [Var('element1', '46'), Var('element2', '47')], '48'), Call('Max', [Var('element1', '51'), Var('element2', '52')], '53'), '54')), Update(ArrayIndex(Var('Elem', '55'), [Var('result', '56'), Var('e', '57'), Var('esize', '58')], '59'), ArrayIndex(Var('maxmin', '60'), [SliceRange(BinaryExpr('-', Var('esize', '61'), Number(1), '62'), Number(0), '63')], '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SMAX Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': False, 'minimum': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_single'),
    'vmax_u16': ARMSema(intrin='vmax_u16', inst='UMAX', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('maxmin', '22')], ('integer', Number(64)), '23'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('maxmin', '44'), IfElse(Var('minimum', '49'), Call('Min', [Var('element1', '46'), Var('element2', '47')], '48'), Call('Max', [Var('element1', '51'), Var('element2', '52')], '53'), '54')), Update(ArrayIndex(Var('Elem', '55'), [Var('result', '56'), Var('e', '57'), Var('esize', '58')], '59'), ArrayIndex(Var('maxmin', '60'), [SliceRange(BinaryExpr('-', Var('esize', '61'), Number(1), '62'), Number(0), '63')], '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='UMAX Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': True, 'minimum': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_single'),
    'vmax_u32': ARMSema(intrin='vmax_u32', inst='UMAX', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('maxmin', '22')], ('integer', Number(64)), '23'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('maxmin', '44'), IfElse(Var('minimum', '49'), Call('Min', [Var('element1', '46'), Var('element2', '47')], '48'), Call('Max', [Var('element1', '51'), Var('element2', '52')], '53'), '54')), Update(ArrayIndex(Var('Elem', '55'), [Var('result', '56'), Var('e', '57'), Var('esize', '58')], '59'), ArrayIndex(Var('maxmin', '60'), [SliceRange(BinaryExpr('-', Var('esize', '61'), Number(1), '62'), Number(0), '63')], '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='UMAX Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': True, 'minimum': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_single'),
    'vmax_u8': ARMSema(intrin='vmax_u8', inst='UMAX', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('maxmin', '22')], ('integer', Number(64)), '23'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('maxmin', '44'), IfElse(Var('minimum', '49'), Call('Min', [Var('element1', '46'), Var('element2', '47')], '48'), Call('Max', [Var('element1', '51'), Var('element2', '52')], '53'), '54')), Update(ArrayIndex(Var('Elem', '55'), [Var('result', '56'), Var('e', '57'), Var('esize', '58')], '59'), ArrayIndex(Var('maxmin', '60'), [SliceRange(BinaryExpr('-', Var('esize', '61'), Number(1), '62'), Number(0), '63')], '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='UMAX Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': True, 'minimum': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_single'),
    'vmaxq_s16': ARMSema(intrin='vmaxq_s16', inst='SMAX', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('maxmin', '22')], ('integer', Number(64)), '23'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('maxmin', '44'), IfElse(Var('minimum', '49'), Call('Min', [Var('element1', '46'), Var('element2', '47')], '48'), Call('Max', [Var('element1', '51'), Var('element2', '52')], '53'), '54')), Update(ArrayIndex(Var('Elem', '55'), [Var('result', '56'), Var('e', '57'), Var('esize', '58')], '59'), ArrayIndex(Var('maxmin', '60'), [SliceRange(BinaryExpr('-', Var('esize', '61'), Number(1), '62'), Number(0), '63')], '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SMAX Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': False, 'minimum': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_single'),
    'vmaxq_s32': ARMSema(intrin='vmaxq_s32', inst='SMAX', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('maxmin', '22')], ('integer', Number(64)), '23'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('maxmin', '44'), IfElse(Var('minimum', '49'), Call('Min', [Var('element1', '46'), Var('element2', '47')], '48'), Call('Max', [Var('element1', '51'), Var('element2', '52')], '53'), '54')), Update(ArrayIndex(Var('Elem', '55'), [Var('result', '56'), Var('e', '57'), Var('esize', '58')], '59'), ArrayIndex(Var('maxmin', '60'), [SliceRange(BinaryExpr('-', Var('esize', '61'), Number(1), '62'), Number(0), '63')], '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SMAX Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': False, 'minimum': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_single'),
    'vmaxq_s8': ARMSema(intrin='vmaxq_s8', inst='SMAX', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('maxmin', '22')], ('integer', Number(64)), '23'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('maxmin', '44'), IfElse(Var('minimum', '49'), Call('Min', [Var('element1', '46'), Var('element2', '47')], '48'), Call('Max', [Var('element1', '51'), Var('element2', '52')], '53'), '54')), Update(ArrayIndex(Var('Elem', '55'), [Var('result', '56'), Var('e', '57'), Var('esize', '58')], '59'), ArrayIndex(Var('maxmin', '60'), [SliceRange(BinaryExpr('-', Var('esize', '61'), Number(1), '62'), Number(0), '63')], '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SMAX Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': False, 'minimum': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_single'),
    'vmaxq_u16': ARMSema(intrin='vmaxq_u16', inst='UMAX', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('maxmin', '22')], ('integer', Number(64)), '23'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('maxmin', '44'), IfElse(Var('minimum', '49'), Call('Min', [Var('element1', '46'), Var('element2', '47')], '48'), Call('Max', [Var('element1', '51'), Var('element2', '52')], '53'), '54')), Update(ArrayIndex(Var('Elem', '55'), [Var('result', '56'), Var('e', '57'), Var('esize', '58')], '59'), ArrayIndex(Var('maxmin', '60'), [SliceRange(BinaryExpr('-', Var('esize', '61'), Number(1), '62'), Number(0), '63')], '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UMAX Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': True, 'minimum': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_single'),
    'vmaxq_u32': ARMSema(intrin='vmaxq_u32', inst='UMAX', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('maxmin', '22')], ('integer', Number(64)), '23'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('maxmin', '44'), IfElse(Var('minimum', '49'), Call('Min', [Var('element1', '46'), Var('element2', '47')], '48'), Call('Max', [Var('element1', '51'), Var('element2', '52')], '53'), '54')), Update(ArrayIndex(Var('Elem', '55'), [Var('result', '56'), Var('e', '57'), Var('esize', '58')], '59'), ArrayIndex(Var('maxmin', '60'), [SliceRange(BinaryExpr('-', Var('esize', '61'), Number(1), '62'), Number(0), '63')], '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UMAX Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': True, 'minimum': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_single'),
    'vmaxq_u8': ARMSema(intrin='vmaxq_u8', inst='UMAX', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('maxmin', '22')], ('integer', Number(64)), '23'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('maxmin', '44'), IfElse(Var('minimum', '49'), Call('Min', [Var('element1', '46'), Var('element2', '47')], '48'), Call('Max', [Var('element1', '51'), Var('element2', '52')], '53'), '54')), Update(ArrayIndex(Var('Elem', '55'), [Var('result', '56'), Var('e', '57'), Var('esize', '58')], '59'), ArrayIndex(Var('maxmin', '60'), [SliceRange(BinaryExpr('-', Var('esize', '61'), Number(1), '62'), Number(0), '63')], '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='UMAX Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': True, 'minimum': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_single'),
    'vmin_s16': ARMSema(intrin='vmin_s16', inst='SMIN', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('maxmin', '22')], ('integer', Number(64)), '23'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('maxmin', '44'), IfElse(Var('minimum', '49'), Call('Min', [Var('element1', '46'), Var('element2', '47')], '48'), Call('Max', [Var('element1', '51'), Var('element2', '52')], '53'), '54')), Update(ArrayIndex(Var('Elem', '55'), [Var('result', '56'), Var('e', '57'), Var('esize', '58')], '59'), ArrayIndex(Var('maxmin', '60'), [SliceRange(BinaryExpr('-', Var('esize', '61'), Number(1), '62'), Number(0), '63')], '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SMIN Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': False, 'minimum': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_single'),
    'vmin_s32': ARMSema(intrin='vmin_s32', inst='SMIN', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('maxmin', '22')], ('integer', Number(64)), '23'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('maxmin', '44'), IfElse(Var('minimum', '49'), Call('Min', [Var('element1', '46'), Var('element2', '47')], '48'), Call('Max', [Var('element1', '51'), Var('element2', '52')], '53'), '54')), Update(ArrayIndex(Var('Elem', '55'), [Var('result', '56'), Var('e', '57'), Var('esize', '58')], '59'), ArrayIndex(Var('maxmin', '60'), [SliceRange(BinaryExpr('-', Var('esize', '61'), Number(1), '62'), Number(0), '63')], '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SMIN Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': False, 'minimum': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_single'),
    'vmin_s8': ARMSema(intrin='vmin_s8', inst='SMIN', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('maxmin', '22')], ('integer', Number(64)), '23'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('maxmin', '44'), IfElse(Var('minimum', '49'), Call('Min', [Var('element1', '46'), Var('element2', '47')], '48'), Call('Max', [Var('element1', '51'), Var('element2', '52')], '53'), '54')), Update(ArrayIndex(Var('Elem', '55'), [Var('result', '56'), Var('e', '57'), Var('esize', '58')], '59'), ArrayIndex(Var('maxmin', '60'), [SliceRange(BinaryExpr('-', Var('esize', '61'), Number(1), '62'), Number(0), '63')], '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SMIN Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': False, 'minimum': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_single'),
    'vmin_u16': ARMSema(intrin='vmin_u16', inst='UMIN', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('maxmin', '22')], ('integer', Number(64)), '23'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('maxmin', '44'), IfElse(Var('minimum', '49'), Call('Min', [Var('element1', '46'), Var('element2', '47')], '48'), Call('Max', [Var('element1', '51'), Var('element2', '52')], '53'), '54')), Update(ArrayIndex(Var('Elem', '55'), [Var('result', '56'), Var('e', '57'), Var('esize', '58')], '59'), ArrayIndex(Var('maxmin', '60'), [SliceRange(BinaryExpr('-', Var('esize', '61'), Number(1), '62'), Number(0), '63')], '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='UMIN Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': True, 'minimum': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_single'),
    'vmin_u32': ARMSema(intrin='vmin_u32', inst='UMIN', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('maxmin', '22')], ('integer', Number(64)), '23'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('maxmin', '44'), IfElse(Var('minimum', '49'), Call('Min', [Var('element1', '46'), Var('element2', '47')], '48'), Call('Max', [Var('element1', '51'), Var('element2', '52')], '53'), '54')), Update(ArrayIndex(Var('Elem', '55'), [Var('result', '56'), Var('e', '57'), Var('esize', '58')], '59'), ArrayIndex(Var('maxmin', '60'), [SliceRange(BinaryExpr('-', Var('esize', '61'), Number(1), '62'), Number(0), '63')], '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='UMIN Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': True, 'minimum': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_single'),
    'vmin_u8': ARMSema(intrin='vmin_u8', inst='UMIN', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('maxmin', '22')], ('integer', Number(64)), '23'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('maxmin', '44'), IfElse(Var('minimum', '49'), Call('Min', [Var('element1', '46'), Var('element2', '47')], '48'), Call('Max', [Var('element1', '51'), Var('element2', '52')], '53'), '54')), Update(ArrayIndex(Var('Elem', '55'), [Var('result', '56'), Var('e', '57'), Var('esize', '58')], '59'), ArrayIndex(Var('maxmin', '60'), [SliceRange(BinaryExpr('-', Var('esize', '61'), Number(1), '62'), Number(0), '63')], '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='UMIN Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': True, 'minimum': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_single'),
    'vminq_s16': ARMSema(intrin='vminq_s16', inst='SMIN', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('maxmin', '22')], ('integer', Number(64)), '23'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('maxmin', '44'), IfElse(Var('minimum', '49'), Call('Min', [Var('element1', '46'), Var('element2', '47')], '48'), Call('Max', [Var('element1', '51'), Var('element2', '52')], '53'), '54')), Update(ArrayIndex(Var('Elem', '55'), [Var('result', '56'), Var('e', '57'), Var('esize', '58')], '59'), ArrayIndex(Var('maxmin', '60'), [SliceRange(BinaryExpr('-', Var('esize', '61'), Number(1), '62'), Number(0), '63')], '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SMIN Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': False, 'minimum': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_single'),
    'vminq_s32': ARMSema(intrin='vminq_s32', inst='SMIN', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('maxmin', '22')], ('integer', Number(64)), '23'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('maxmin', '44'), IfElse(Var('minimum', '49'), Call('Min', [Var('element1', '46'), Var('element2', '47')], '48'), Call('Max', [Var('element1', '51'), Var('element2', '52')], '53'), '54')), Update(ArrayIndex(Var('Elem', '55'), [Var('result', '56'), Var('e', '57'), Var('esize', '58')], '59'), ArrayIndex(Var('maxmin', '60'), [SliceRange(BinaryExpr('-', Var('esize', '61'), Number(1), '62'), Number(0), '63')], '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SMIN Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': False, 'minimum': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_single'),
    'vminq_s8': ARMSema(intrin='vminq_s8', inst='SMIN', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('maxmin', '22')], ('integer', Number(64)), '23'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('maxmin', '44'), IfElse(Var('minimum', '49'), Call('Min', [Var('element1', '46'), Var('element2', '47')], '48'), Call('Max', [Var('element1', '51'), Var('element2', '52')], '53'), '54')), Update(ArrayIndex(Var('Elem', '55'), [Var('result', '56'), Var('e', '57'), Var('esize', '58')], '59'), ArrayIndex(Var('maxmin', '60'), [SliceRange(BinaryExpr('-', Var('esize', '61'), Number(1), '62'), Number(0), '63')], '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SMIN Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': False, 'minimum': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_single'),
    'vminq_u16': ARMSema(intrin='vminq_u16', inst='UMIN', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('maxmin', '22')], ('integer', Number(64)), '23'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('maxmin', '44'), IfElse(Var('minimum', '49'), Call('Min', [Var('element1', '46'), Var('element2', '47')], '48'), Call('Max', [Var('element1', '51'), Var('element2', '52')], '53'), '54')), Update(ArrayIndex(Var('Elem', '55'), [Var('result', '56'), Var('e', '57'), Var('esize', '58')], '59'), ArrayIndex(Var('maxmin', '60'), [SliceRange(BinaryExpr('-', Var('esize', '61'), Number(1), '62'), Number(0), '63')], '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UMIN Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': True, 'minimum': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_single'),
    'vminq_u32': ARMSema(intrin='vminq_u32', inst='UMIN', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('maxmin', '22')], ('integer', Number(64)), '23'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('maxmin', '44'), IfElse(Var('minimum', '49'), Call('Min', [Var('element1', '46'), Var('element2', '47')], '48'), Call('Max', [Var('element1', '51'), Var('element2', '52')], '53'), '54')), Update(ArrayIndex(Var('Elem', '55'), [Var('result', '56'), Var('e', '57'), Var('esize', '58')], '59'), ArrayIndex(Var('maxmin', '60'), [SliceRange(BinaryExpr('-', Var('esize', '61'), Number(1), '62'), Number(0), '63')], '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UMIN Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': True, 'minimum': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_single'),
    'vminq_u8': ARMSema(intrin='vminq_u8', inst='UMIN', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('maxmin', '22')], ('integer', Number(64)), '23'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand1', '29'), Var('e', '30'), Var('esize', '31')], '32'), Var('unsigned', '33')], '34')), Update(Var('element2', '35'), Call('Int', [ArrayIndex(Var('Elem', '37'), [Var('operand2', '38'), Var('e', '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('maxmin', '44'), IfElse(Var('minimum', '49'), Call('Min', [Var('element1', '46'), Var('element2', '47')], '48'), Call('Max', [Var('element1', '51'), Var('element2', '52')], '53'), '54')), Update(ArrayIndex(Var('Elem', '55'), [Var('result', '56'), Var('e', '57'), Var('esize', '58')], '59'), ArrayIndex(Var('maxmin', '60'), [SliceRange(BinaryExpr('-', Var('esize', '61'), Number(1), '62'), Number(0), '63')], '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='UMIN Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': True, 'minimum': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_single'),
    'vmla_n_s16': ARMSema(intrin='vmla_n_s16', inst='MLA', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('product', '30')], ('bits', Var('esize', '29')), '31'), Update(Var('element2', '32'), Call('UInt', [ArrayIndex(Var('Elem', '34'), [Var('operand2', '35'), Var('index', '36'), Var('esize', '37')], '38')], '39')), For(Var('e', '84'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), Call('UInt', [ArrayIndex(Var('Elem', '44'), [Var('operand1', '45'), Var('e', '46'), Var('esize', '47')], '48')], '49')), Update(Var('product', '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', Var('esize', '54'), Number(1), '55'), Number(0), '56')], '57')), IfElse(Var('sub_op', '58'), [Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), BinaryExpr('-', ArrayIndex(Var('Elem', '64'), [Var('operand3', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'), '70'))], [Update(ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), BinaryExpr('+', ArrayIndex(Var('Elem', '76'), [Var('operand3', '77'), Var('e', '78'), Var('esize', '79')], '80'), Var('product', '81'), '82'))], '83')], 1, '85'), Update(ArrayIndex(Var('V', '86'), [Var('d', '87')], '88'), Var('result', '89'))], rettype='int16x4_t', ret_is_signed=True, inst_form='MLA Vd.4H,Vn.4H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'elements': 4, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_int'),
    'vmla_n_s32': ARMSema(intrin='vmla_n_s32', inst='MLA', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('product', '30')], ('bits', Var('esize', '29')), '31'), Update(Var('element2', '32'), Call('UInt', [ArrayIndex(Var('Elem', '34'), [Var('operand2', '35'), Var('index', '36'), Var('esize', '37')], '38')], '39')), For(Var('e', '84'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), Call('UInt', [ArrayIndex(Var('Elem', '44'), [Var('operand1', '45'), Var('e', '46'), Var('esize', '47')], '48')], '49')), Update(Var('product', '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', Var('esize', '54'), Number(1), '55'), Number(0), '56')], '57')), IfElse(Var('sub_op', '58'), [Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), BinaryExpr('-', ArrayIndex(Var('Elem', '64'), [Var('operand3', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'), '70'))], [Update(ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), BinaryExpr('+', ArrayIndex(Var('Elem', '76'), [Var('operand3', '77'), Var('e', '78'), Var('esize', '79')], '80'), Var('product', '81'), '82'))], '83')], 1, '85'), Update(ArrayIndex(Var('V', '86'), [Var('d', '87')], '88'), Var('result', '89'))], rettype='int32x2_t', ret_is_signed=True, inst_form='MLA Vd.2S,Vn.2S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'elements': 2, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_int'),
    'vmla_n_u16': ARMSema(intrin='vmla_n_u16', inst='MLA', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('product', '30')], ('bits', Var('esize', '29')), '31'), Update(Var('element2', '32'), Call('UInt', [ArrayIndex(Var('Elem', '34'), [Var('operand2', '35'), Var('index', '36'), Var('esize', '37')], '38')], '39')), For(Var('e', '84'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), Call('UInt', [ArrayIndex(Var('Elem', '44'), [Var('operand1', '45'), Var('e', '46'), Var('esize', '47')], '48')], '49')), Update(Var('product', '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', Var('esize', '54'), Number(1), '55'), Number(0), '56')], '57')), IfElse(Var('sub_op', '58'), [Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), BinaryExpr('-', ArrayIndex(Var('Elem', '64'), [Var('operand3', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'), '70'))], [Update(ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), BinaryExpr('+', ArrayIndex(Var('Elem', '76'), [Var('operand3', '77'), Var('e', '78'), Var('esize', '79')], '80'), Var('product', '81'), '82'))], '83')], 1, '85'), Update(ArrayIndex(Var('V', '86'), [Var('d', '87')], '88'), Var('result', '89'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='MLA Vd.4H,Vn.4H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'elements': 4, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_int'),
    'vmla_n_u32': ARMSema(intrin='vmla_n_u32', inst='MLA', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint32_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('product', '30')], ('bits', Var('esize', '29')), '31'), Update(Var('element2', '32'), Call('UInt', [ArrayIndex(Var('Elem', '34'), [Var('operand2', '35'), Var('index', '36'), Var('esize', '37')], '38')], '39')), For(Var('e', '84'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), Call('UInt', [ArrayIndex(Var('Elem', '44'), [Var('operand1', '45'), Var('e', '46'), Var('esize', '47')], '48')], '49')), Update(Var('product', '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', Var('esize', '54'), Number(1), '55'), Number(0), '56')], '57')), IfElse(Var('sub_op', '58'), [Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), BinaryExpr('-', ArrayIndex(Var('Elem', '64'), [Var('operand3', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'), '70'))], [Update(ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), BinaryExpr('+', ArrayIndex(Var('Elem', '76'), [Var('operand3', '77'), Var('e', '78'), Var('esize', '79')], '80'), Var('product', '81'), '82'))], '83')], 1, '85'), Update(ArrayIndex(Var('V', '86'), [Var('d', '87')], '88'), Var('result', '89'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='MLA Vd.2S,Vn.2S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'elements': 2, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_int'),
    'vmla_s16': ARMSema(intrin='vmla_s16', inst='MLA', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '26')], ('bits', Var('esize', '25')), '27'), VarsDecl([Var('element2', '29')], ('bits', Var('esize', '28')), '30'), VarsDecl([Var('product', '32')], ('bits', Var('esize', '31')), '33'), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')), Update(Var('element2', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '50')], '51'), Call('UInt', [Var('element2', '53')], '54'), '55'), [SliceRange(BinaryExpr('-', Var('esize', '56'), Number(1), '57'), Number(0), '58')], '59')), IfElse(Var('sub_op', '60'), [Update(ArrayIndex(Var('Elem', '61'), [Var('result', '62'), Var('e', '63'), Var('esize', '64')], '65'), BinaryExpr('-', ArrayIndex(Var('Elem', '66'), [Var('operand3', '67'), Var('e', '68'), Var('esize', '69')], '70'), Var('product', '71'), '72'))], [Update(ArrayIndex(Var('Elem', '73'), [Var('result', '74'), Var('e', '75'), Var('esize', '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('operand3', '79'), Var('e', '80'), Var('esize', '81')], '82'), Var('product', '83'), '84'))], '85')], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result', '91'))], rettype='int16x4_t', ret_is_signed=True, inst_form='MLA Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_accum'),
    'vmla_s32': ARMSema(intrin='vmla_s32', inst='MLA', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '26')], ('bits', Var('esize', '25')), '27'), VarsDecl([Var('element2', '29')], ('bits', Var('esize', '28')), '30'), VarsDecl([Var('product', '32')], ('bits', Var('esize', '31')), '33'), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')), Update(Var('element2', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '50')], '51'), Call('UInt', [Var('element2', '53')], '54'), '55'), [SliceRange(BinaryExpr('-', Var('esize', '56'), Number(1), '57'), Number(0), '58')], '59')), IfElse(Var('sub_op', '60'), [Update(ArrayIndex(Var('Elem', '61'), [Var('result', '62'), Var('e', '63'), Var('esize', '64')], '65'), BinaryExpr('-', ArrayIndex(Var('Elem', '66'), [Var('operand3', '67'), Var('e', '68'), Var('esize', '69')], '70'), Var('product', '71'), '72'))], [Update(ArrayIndex(Var('Elem', '73'), [Var('result', '74'), Var('e', '75'), Var('esize', '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('operand3', '79'), Var('e', '80'), Var('esize', '81')], '82'), Var('product', '83'), '84'))], '85')], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result', '91'))], rettype='int32x2_t', ret_is_signed=True, inst_form='MLA Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_accum'),
    'vmla_s8': ARMSema(intrin='vmla_s8', inst='MLA', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '26')], ('bits', Var('esize', '25')), '27'), VarsDecl([Var('element2', '29')], ('bits', Var('esize', '28')), '30'), VarsDecl([Var('product', '32')], ('bits', Var('esize', '31')), '33'), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')), Update(Var('element2', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '50')], '51'), Call('UInt', [Var('element2', '53')], '54'), '55'), [SliceRange(BinaryExpr('-', Var('esize', '56'), Number(1), '57'), Number(0), '58')], '59')), IfElse(Var('sub_op', '60'), [Update(ArrayIndex(Var('Elem', '61'), [Var('result', '62'), Var('e', '63'), Var('esize', '64')], '65'), BinaryExpr('-', ArrayIndex(Var('Elem', '66'), [Var('operand3', '67'), Var('e', '68'), Var('esize', '69')], '70'), Var('product', '71'), '72'))], [Update(ArrayIndex(Var('Elem', '73'), [Var('result', '74'), Var('e', '75'), Var('esize', '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('operand3', '79'), Var('e', '80'), Var('esize', '81')], '82'), Var('product', '83'), '84'))], '85')], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result', '91'))], rettype='int8x8_t', ret_is_signed=True, inst_form='MLA Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_accum'),
    'vmla_u16': ARMSema(intrin='vmla_u16', inst='MLA', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '26')], ('bits', Var('esize', '25')), '27'), VarsDecl([Var('element2', '29')], ('bits', Var('esize', '28')), '30'), VarsDecl([Var('product', '32')], ('bits', Var('esize', '31')), '33'), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')), Update(Var('element2', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '50')], '51'), Call('UInt', [Var('element2', '53')], '54'), '55'), [SliceRange(BinaryExpr('-', Var('esize', '56'), Number(1), '57'), Number(0), '58')], '59')), IfElse(Var('sub_op', '60'), [Update(ArrayIndex(Var('Elem', '61'), [Var('result', '62'), Var('e', '63'), Var('esize', '64')], '65'), BinaryExpr('-', ArrayIndex(Var('Elem', '66'), [Var('operand3', '67'), Var('e', '68'), Var('esize', '69')], '70'), Var('product', '71'), '72'))], [Update(ArrayIndex(Var('Elem', '73'), [Var('result', '74'), Var('e', '75'), Var('esize', '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('operand3', '79'), Var('e', '80'), Var('esize', '81')], '82'), Var('product', '83'), '84'))], '85')], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result', '91'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='MLA Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_accum'),
    'vmla_u32': ARMSema(intrin='vmla_u32', inst='MLA', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '26')], ('bits', Var('esize', '25')), '27'), VarsDecl([Var('element2', '29')], ('bits', Var('esize', '28')), '30'), VarsDecl([Var('product', '32')], ('bits', Var('esize', '31')), '33'), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')), Update(Var('element2', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '50')], '51'), Call('UInt', [Var('element2', '53')], '54'), '55'), [SliceRange(BinaryExpr('-', Var('esize', '56'), Number(1), '57'), Number(0), '58')], '59')), IfElse(Var('sub_op', '60'), [Update(ArrayIndex(Var('Elem', '61'), [Var('result', '62'), Var('e', '63'), Var('esize', '64')], '65'), BinaryExpr('-', ArrayIndex(Var('Elem', '66'), [Var('operand3', '67'), Var('e', '68'), Var('esize', '69')], '70'), Var('product', '71'), '72'))], [Update(ArrayIndex(Var('Elem', '73'), [Var('result', '74'), Var('e', '75'), Var('esize', '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('operand3', '79'), Var('e', '80'), Var('esize', '81')], '82'), Var('product', '83'), '84'))], '85')], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result', '91'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='MLA Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_accum'),
    'vmla_u8': ARMSema(intrin='vmla_u8', inst='MLA', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '26')], ('bits', Var('esize', '25')), '27'), VarsDecl([Var('element2', '29')], ('bits', Var('esize', '28')), '30'), VarsDecl([Var('product', '32')], ('bits', Var('esize', '31')), '33'), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')), Update(Var('element2', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '50')], '51'), Call('UInt', [Var('element2', '53')], '54'), '55'), [SliceRange(BinaryExpr('-', Var('esize', '56'), Number(1), '57'), Number(0), '58')], '59')), IfElse(Var('sub_op', '60'), [Update(ArrayIndex(Var('Elem', '61'), [Var('result', '62'), Var('e', '63'), Var('esize', '64')], '65'), BinaryExpr('-', ArrayIndex(Var('Elem', '66'), [Var('operand3', '67'), Var('e', '68'), Var('esize', '69')], '70'), Var('product', '71'), '72'))], [Update(ArrayIndex(Var('Elem', '73'), [Var('result', '74'), Var('e', '75'), Var('esize', '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('operand3', '79'), Var('e', '80'), Var('esize', '81')], '82'), Var('product', '83'), '84'))], '85')], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result', '91'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='MLA Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_accum'),
    'vmlal_high_n_s16': ARMSema(intrin='vmlal_high_n_s16', inst='SMLAL2', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarDeclInit(VarsDecl([Var('operand3', '21')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '22'), ArrayIndex(Var('V', '18'), [Var('d', '19')], '20'), '23'), VarsDecl([Var('result', '26')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '24'), '25')), '27'), VarsDecl([Var('element1', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('element2', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('product', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('index', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), For(Var('e', '95'), Number(0), BinaryExpr('-', Var('elements', '45'), Number(1), '46'), [Update(Var('element1', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand1', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('product', '56'), ArrayIndex(BinaryExpr('*', Var('element1', '57'), Var('element2', '58'), '59'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '60'), '61'), Number(1), '62'), Number(0), '63')], '64')), IfElse(Var('sub_op', '65'), [Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), BinaryExpr('*', Number(2), Var('esize', '69'), '70')], '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(ArrayIndex(Var('Elem', '80'), [Var('result', '81'), Var('e', '82'), BinaryExpr('*', Number(2), Var('esize', '83'), '84')], '85'), BinaryExpr('+', ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91'), Var('product', '92'), '93'))], '94')], 1, '96'), Update(ArrayIndex(Var('V', '97'), [Var('d', '98')], '99'), Var('result', '100'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SMLAL2 Vd.4S,Vn.8H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'unsigned': False, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_long'),
    'vmlal_high_n_s32': ARMSema(intrin='vmlal_high_n_s32', inst='SMLAL2', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarDeclInit(VarsDecl([Var('operand3', '21')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '22'), ArrayIndex(Var('V', '18'), [Var('d', '19')], '20'), '23'), VarsDecl([Var('result', '26')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '24'), '25')), '27'), VarsDecl([Var('element1', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('element2', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('product', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('index', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), For(Var('e', '95'), Number(0), BinaryExpr('-', Var('elements', '45'), Number(1), '46'), [Update(Var('element1', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand1', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('product', '56'), ArrayIndex(BinaryExpr('*', Var('element1', '57'), Var('element2', '58'), '59'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '60'), '61'), Number(1), '62'), Number(0), '63')], '64')), IfElse(Var('sub_op', '65'), [Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), BinaryExpr('*', Number(2), Var('esize', '69'), '70')], '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(ArrayIndex(Var('Elem', '80'), [Var('result', '81'), Var('e', '82'), BinaryExpr('*', Number(2), Var('esize', '83'), '84')], '85'), BinaryExpr('+', ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91'), Var('product', '92'), '93'))], '94')], 1, '96'), Update(ArrayIndex(Var('V', '97'), [Var('d', '98')], '99'), Var('result', '100'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SMLAL2 Vd.2D,Vn.4S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'unsigned': False, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_long'),
    'vmlal_high_n_u16': ARMSema(intrin='vmlal_high_n_u16', inst='UMLAL2', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarDeclInit(VarsDecl([Var('operand3', '21')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '22'), ArrayIndex(Var('V', '18'), [Var('d', '19')], '20'), '23'), VarsDecl([Var('result', '26')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '24'), '25')), '27'), VarsDecl([Var('element1', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('element2', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('product', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('index', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), For(Var('e', '95'), Number(0), BinaryExpr('-', Var('elements', '45'), Number(1), '46'), [Update(Var('element1', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand1', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('product', '56'), ArrayIndex(BinaryExpr('*', Var('element1', '57'), Var('element2', '58'), '59'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '60'), '61'), Number(1), '62'), Number(0), '63')], '64')), IfElse(Var('sub_op', '65'), [Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), BinaryExpr('*', Number(2), Var('esize', '69'), '70')], '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(ArrayIndex(Var('Elem', '80'), [Var('result', '81'), Var('e', '82'), BinaryExpr('*', Number(2), Var('esize', '83'), '84')], '85'), BinaryExpr('+', ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91'), Var('product', '92'), '93'))], '94')], 1, '96'), Update(ArrayIndex(Var('V', '97'), [Var('d', '98')], '99'), Var('result', '100'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UMLAL2 Vd.4S,Vn.8H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'unsigned': True, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_long'),
    'vmlal_high_n_u32': ARMSema(intrin='vmlal_high_n_u32', inst='UMLAL2', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint32_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarDeclInit(VarsDecl([Var('operand3', '21')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '22'), ArrayIndex(Var('V', '18'), [Var('d', '19')], '20'), '23'), VarsDecl([Var('result', '26')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '24'), '25')), '27'), VarsDecl([Var('element1', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('element2', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('product', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('index', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), For(Var('e', '95'), Number(0), BinaryExpr('-', Var('elements', '45'), Number(1), '46'), [Update(Var('element1', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand1', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('product', '56'), ArrayIndex(BinaryExpr('*', Var('element1', '57'), Var('element2', '58'), '59'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '60'), '61'), Number(1), '62'), Number(0), '63')], '64')), IfElse(Var('sub_op', '65'), [Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), BinaryExpr('*', Number(2), Var('esize', '69'), '70')], '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(ArrayIndex(Var('Elem', '80'), [Var('result', '81'), Var('e', '82'), BinaryExpr('*', Number(2), Var('esize', '83'), '84')], '85'), BinaryExpr('+', ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91'), Var('product', '92'), '93'))], '94')], 1, '96'), Update(ArrayIndex(Var('V', '97'), [Var('d', '98')], '99'), Var('result', '100'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UMLAL2 Vd.2D,Vn.4S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'unsigned': True, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_long'),
    'vmlal_high_s16': ARMSema(intrin='vmlal_high_s16', inst='SMLAL2', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '39')], ('bits', BinaryExpr('*', Number(2), Var('esize', '37'), '38')), '40'), For(Var('e', '97'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('product', '61'), ArrayIndex(BinaryExpr('*', Var('element1', '62'), Var('element2', '63'), '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(Var('accum', '80'), BinaryExpr('+', ArrayIndex(Var('Elem', '81'), [Var('operand3', '82'), Var('e', '83'), BinaryExpr('*', Number(2), Var('esize', '84'), '85')], '86'), Var('product', '87'), '88'))], '89'), Update(ArrayIndex(Var('Elem', '90'), [Var('result', '91'), Var('e', '92'), BinaryExpr('*', Number(2), Var('esize', '93'), '94')], '95'), Var('accum', '96'))], 1, '98'), Update(ArrayIndex(Var('V', '99'), [Var('d', '100')], '101'), Var('result', '102'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SMLAL2 Vd.4S,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'sub_op': False, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_accum'),
    'vmlal_high_s32': ARMSema(intrin='vmlal_high_s32', inst='SMLAL2', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '39')], ('bits', BinaryExpr('*', Number(2), Var('esize', '37'), '38')), '40'), For(Var('e', '97'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('product', '61'), ArrayIndex(BinaryExpr('*', Var('element1', '62'), Var('element2', '63'), '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(Var('accum', '80'), BinaryExpr('+', ArrayIndex(Var('Elem', '81'), [Var('operand3', '82'), Var('e', '83'), BinaryExpr('*', Number(2), Var('esize', '84'), '85')], '86'), Var('product', '87'), '88'))], '89'), Update(ArrayIndex(Var('Elem', '90'), [Var('result', '91'), Var('e', '92'), BinaryExpr('*', Number(2), Var('esize', '93'), '94')], '95'), Var('accum', '96'))], 1, '98'), Update(ArrayIndex(Var('V', '99'), [Var('d', '100')], '101'), Var('result', '102'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SMLAL2 Vd.2D,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'sub_op': False, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_accum'),
    'vmlal_high_s8': ARMSema(intrin='vmlal_high_s8', inst='SMLAL2', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '39')], ('bits', BinaryExpr('*', Number(2), Var('esize', '37'), '38')), '40'), For(Var('e', '97'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('product', '61'), ArrayIndex(BinaryExpr('*', Var('element1', '62'), Var('element2', '63'), '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(Var('accum', '80'), BinaryExpr('+', ArrayIndex(Var('Elem', '81'), [Var('operand3', '82'), Var('e', '83'), BinaryExpr('*', Number(2), Var('esize', '84'), '85')], '86'), Var('product', '87'), '88'))], '89'), Update(ArrayIndex(Var('Elem', '90'), [Var('result', '91'), Var('e', '92'), BinaryExpr('*', Number(2), Var('esize', '93'), '94')], '95'), Var('accum', '96'))], 1, '98'), Update(ArrayIndex(Var('V', '99'), [Var('d', '100')], '101'), Var('result', '102'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SMLAL2 Vd.8H,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'sub_op': False, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_accum'),
    'vmlal_high_u16': ARMSema(intrin='vmlal_high_u16', inst='UMLAL2', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '39')], ('bits', BinaryExpr('*', Number(2), Var('esize', '37'), '38')), '40'), For(Var('e', '97'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('product', '61'), ArrayIndex(BinaryExpr('*', Var('element1', '62'), Var('element2', '63'), '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(Var('accum', '80'), BinaryExpr('+', ArrayIndex(Var('Elem', '81'), [Var('operand3', '82'), Var('e', '83'), BinaryExpr('*', Number(2), Var('esize', '84'), '85')], '86'), Var('product', '87'), '88'))], '89'), Update(ArrayIndex(Var('Elem', '90'), [Var('result', '91'), Var('e', '92'), BinaryExpr('*', Number(2), Var('esize', '93'), '94')], '95'), Var('accum', '96'))], 1, '98'), Update(ArrayIndex(Var('V', '99'), [Var('d', '100')], '101'), Var('result', '102'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UMLAL2 Vd.4S,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'sub_op': False, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_accum'),
    'vmlal_high_u32': ARMSema(intrin='vmlal_high_u32', inst='UMLAL2', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '39')], ('bits', BinaryExpr('*', Number(2), Var('esize', '37'), '38')), '40'), For(Var('e', '97'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('product', '61'), ArrayIndex(BinaryExpr('*', Var('element1', '62'), Var('element2', '63'), '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(Var('accum', '80'), BinaryExpr('+', ArrayIndex(Var('Elem', '81'), [Var('operand3', '82'), Var('e', '83'), BinaryExpr('*', Number(2), Var('esize', '84'), '85')], '86'), Var('product', '87'), '88'))], '89'), Update(ArrayIndex(Var('Elem', '90'), [Var('result', '91'), Var('e', '92'), BinaryExpr('*', Number(2), Var('esize', '93'), '94')], '95'), Var('accum', '96'))], 1, '98'), Update(ArrayIndex(Var('V', '99'), [Var('d', '100')], '101'), Var('result', '102'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UMLAL2 Vd.2D,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'sub_op': False, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_accum'),
    'vmlal_high_u8': ARMSema(intrin='vmlal_high_u8', inst='UMLAL2', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '39')], ('bits', BinaryExpr('*', Number(2), Var('esize', '37'), '38')), '40'), For(Var('e', '97'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('product', '61'), ArrayIndex(BinaryExpr('*', Var('element1', '62'), Var('element2', '63'), '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(Var('accum', '80'), BinaryExpr('+', ArrayIndex(Var('Elem', '81'), [Var('operand3', '82'), Var('e', '83'), BinaryExpr('*', Number(2), Var('esize', '84'), '85')], '86'), Var('product', '87'), '88'))], '89'), Update(ArrayIndex(Var('Elem', '90'), [Var('result', '91'), Var('e', '92'), BinaryExpr('*', Number(2), Var('esize', '93'), '94')], '95'), Var('accum', '96'))], 1, '98'), Update(ArrayIndex(Var('V', '99'), [Var('d', '100')], '101'), Var('result', '102'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UMLAL2 Vd.8H,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'sub_op': False, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_accum'),
    'vmlal_n_s16': ARMSema(intrin='vmlal_n_s16', inst='SMLAL', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarDeclInit(VarsDecl([Var('operand3', '21')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '22'), ArrayIndex(Var('V', '18'), [Var('d', '19')], '20'), '23'), VarsDecl([Var('result', '26')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '24'), '25')), '27'), VarsDecl([Var('element1', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('element2', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('product', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('index', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), For(Var('e', '95'), Number(0), BinaryExpr('-', Var('elements', '45'), Number(1), '46'), [Update(Var('element1', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand1', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('product', '56'), ArrayIndex(BinaryExpr('*', Var('element1', '57'), Var('element2', '58'), '59'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '60'), '61'), Number(1), '62'), Number(0), '63')], '64')), IfElse(Var('sub_op', '65'), [Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), BinaryExpr('*', Number(2), Var('esize', '69'), '70')], '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(ArrayIndex(Var('Elem', '80'), [Var('result', '81'), Var('e', '82'), BinaryExpr('*', Number(2), Var('esize', '83'), '84')], '85'), BinaryExpr('+', ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91'), Var('product', '92'), '93'))], '94')], 1, '96'), Update(ArrayIndex(Var('V', '97'), [Var('d', '98')], '99'), Var('result', '100'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SMLAL Vd.4S,Vn.4H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'unsigned': False, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_long'),
    'vmlal_n_s32': ARMSema(intrin='vmlal_n_s32', inst='SMLAL', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarDeclInit(VarsDecl([Var('operand3', '21')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '22'), ArrayIndex(Var('V', '18'), [Var('d', '19')], '20'), '23'), VarsDecl([Var('result', '26')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '24'), '25')), '27'), VarsDecl([Var('element1', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('element2', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('product', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('index', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), For(Var('e', '95'), Number(0), BinaryExpr('-', Var('elements', '45'), Number(1), '46'), [Update(Var('element1', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand1', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('product', '56'), ArrayIndex(BinaryExpr('*', Var('element1', '57'), Var('element2', '58'), '59'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '60'), '61'), Number(1), '62'), Number(0), '63')], '64')), IfElse(Var('sub_op', '65'), [Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), BinaryExpr('*', Number(2), Var('esize', '69'), '70')], '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(ArrayIndex(Var('Elem', '80'), [Var('result', '81'), Var('e', '82'), BinaryExpr('*', Number(2), Var('esize', '83'), '84')], '85'), BinaryExpr('+', ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91'), Var('product', '92'), '93'))], '94')], 1, '96'), Update(ArrayIndex(Var('V', '97'), [Var('d', '98')], '99'), Var('result', '100'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SMLAL Vd.2D,Vn.2S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'unsigned': False, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_long'),
    'vmlal_n_u16': ARMSema(intrin='vmlal_n_u16', inst='UMLAL', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarDeclInit(VarsDecl([Var('operand3', '21')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '22'), ArrayIndex(Var('V', '18'), [Var('d', '19')], '20'), '23'), VarsDecl([Var('result', '26')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '24'), '25')), '27'), VarsDecl([Var('element1', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('element2', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('product', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('index', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), For(Var('e', '95'), Number(0), BinaryExpr('-', Var('elements', '45'), Number(1), '46'), [Update(Var('element1', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand1', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('product', '56'), ArrayIndex(BinaryExpr('*', Var('element1', '57'), Var('element2', '58'), '59'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '60'), '61'), Number(1), '62'), Number(0), '63')], '64')), IfElse(Var('sub_op', '65'), [Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), BinaryExpr('*', Number(2), Var('esize', '69'), '70')], '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(ArrayIndex(Var('Elem', '80'), [Var('result', '81'), Var('e', '82'), BinaryExpr('*', Number(2), Var('esize', '83'), '84')], '85'), BinaryExpr('+', ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91'), Var('product', '92'), '93'))], '94')], 1, '96'), Update(ArrayIndex(Var('V', '97'), [Var('d', '98')], '99'), Var('result', '100'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UMLAL Vd.4S,Vn.4H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'unsigned': True, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_long'),
    'vmlal_n_u32': ARMSema(intrin='vmlal_n_u32', inst='UMLAL', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint32_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarDeclInit(VarsDecl([Var('operand3', '21')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '22'), ArrayIndex(Var('V', '18'), [Var('d', '19')], '20'), '23'), VarsDecl([Var('result', '26')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '24'), '25')), '27'), VarsDecl([Var('element1', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('element2', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('product', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('index', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), For(Var('e', '95'), Number(0), BinaryExpr('-', Var('elements', '45'), Number(1), '46'), [Update(Var('element1', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand1', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('product', '56'), ArrayIndex(BinaryExpr('*', Var('element1', '57'), Var('element2', '58'), '59'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '60'), '61'), Number(1), '62'), Number(0), '63')], '64')), IfElse(Var('sub_op', '65'), [Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), BinaryExpr('*', Number(2), Var('esize', '69'), '70')], '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(ArrayIndex(Var('Elem', '80'), [Var('result', '81'), Var('e', '82'), BinaryExpr('*', Number(2), Var('esize', '83'), '84')], '85'), BinaryExpr('+', ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91'), Var('product', '92'), '93'))], '94')], 1, '96'), Update(ArrayIndex(Var('V', '97'), [Var('d', '98')], '99'), Var('result', '100'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UMLAL Vd.2D,Vn.2S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'unsigned': True, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_long'),
    'vmlal_s16': ARMSema(intrin='vmlal_s16', inst='SMLAL', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '39')], ('bits', BinaryExpr('*', Number(2), Var('esize', '37'), '38')), '40'), For(Var('e', '97'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('product', '61'), ArrayIndex(BinaryExpr('*', Var('element1', '62'), Var('element2', '63'), '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(Var('accum', '80'), BinaryExpr('+', ArrayIndex(Var('Elem', '81'), [Var('operand3', '82'), Var('e', '83'), BinaryExpr('*', Number(2), Var('esize', '84'), '85')], '86'), Var('product', '87'), '88'))], '89'), Update(ArrayIndex(Var('Elem', '90'), [Var('result', '91'), Var('e', '92'), BinaryExpr('*', Number(2), Var('esize', '93'), '94')], '95'), Var('accum', '96'))], 1, '98'), Update(ArrayIndex(Var('V', '99'), [Var('d', '100')], '101'), Var('result', '102'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SMLAL Vd.4S,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'sub_op': False, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_accum'),
    'vmlal_s32': ARMSema(intrin='vmlal_s32', inst='SMLAL', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '39')], ('bits', BinaryExpr('*', Number(2), Var('esize', '37'), '38')), '40'), For(Var('e', '97'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('product', '61'), ArrayIndex(BinaryExpr('*', Var('element1', '62'), Var('element2', '63'), '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(Var('accum', '80'), BinaryExpr('+', ArrayIndex(Var('Elem', '81'), [Var('operand3', '82'), Var('e', '83'), BinaryExpr('*', Number(2), Var('esize', '84'), '85')], '86'), Var('product', '87'), '88'))], '89'), Update(ArrayIndex(Var('Elem', '90'), [Var('result', '91'), Var('e', '92'), BinaryExpr('*', Number(2), Var('esize', '93'), '94')], '95'), Var('accum', '96'))], 1, '98'), Update(ArrayIndex(Var('V', '99'), [Var('d', '100')], '101'), Var('result', '102'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SMLAL Vd.2D,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'sub_op': False, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_accum'),
    'vmlal_s8': ARMSema(intrin='vmlal_s8', inst='SMLAL', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '39')], ('bits', BinaryExpr('*', Number(2), Var('esize', '37'), '38')), '40'), For(Var('e', '97'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('product', '61'), ArrayIndex(BinaryExpr('*', Var('element1', '62'), Var('element2', '63'), '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(Var('accum', '80'), BinaryExpr('+', ArrayIndex(Var('Elem', '81'), [Var('operand3', '82'), Var('e', '83'), BinaryExpr('*', Number(2), Var('esize', '84'), '85')], '86'), Var('product', '87'), '88'))], '89'), Update(ArrayIndex(Var('Elem', '90'), [Var('result', '91'), Var('e', '92'), BinaryExpr('*', Number(2), Var('esize', '93'), '94')], '95'), Var('accum', '96'))], 1, '98'), Update(ArrayIndex(Var('V', '99'), [Var('d', '100')], '101'), Var('result', '102'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SMLAL Vd.8H,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'sub_op': False, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_accum'),
    'vmlal_u16': ARMSema(intrin='vmlal_u16', inst='UMLAL', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '39')], ('bits', BinaryExpr('*', Number(2), Var('esize', '37'), '38')), '40'), For(Var('e', '97'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('product', '61'), ArrayIndex(BinaryExpr('*', Var('element1', '62'), Var('element2', '63'), '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(Var('accum', '80'), BinaryExpr('+', ArrayIndex(Var('Elem', '81'), [Var('operand3', '82'), Var('e', '83'), BinaryExpr('*', Number(2), Var('esize', '84'), '85')], '86'), Var('product', '87'), '88'))], '89'), Update(ArrayIndex(Var('Elem', '90'), [Var('result', '91'), Var('e', '92'), BinaryExpr('*', Number(2), Var('esize', '93'), '94')], '95'), Var('accum', '96'))], 1, '98'), Update(ArrayIndex(Var('V', '99'), [Var('d', '100')], '101'), Var('result', '102'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UMLAL Vd.4S,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'sub_op': False, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_accum'),
    'vmlal_u32': ARMSema(intrin='vmlal_u32', inst='UMLAL', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '39')], ('bits', BinaryExpr('*', Number(2), Var('esize', '37'), '38')), '40'), For(Var('e', '97'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('product', '61'), ArrayIndex(BinaryExpr('*', Var('element1', '62'), Var('element2', '63'), '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(Var('accum', '80'), BinaryExpr('+', ArrayIndex(Var('Elem', '81'), [Var('operand3', '82'), Var('e', '83'), BinaryExpr('*', Number(2), Var('esize', '84'), '85')], '86'), Var('product', '87'), '88'))], '89'), Update(ArrayIndex(Var('Elem', '90'), [Var('result', '91'), Var('e', '92'), BinaryExpr('*', Number(2), Var('esize', '93'), '94')], '95'), Var('accum', '96'))], 1, '98'), Update(ArrayIndex(Var('V', '99'), [Var('d', '100')], '101'), Var('result', '102'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UMLAL Vd.2D,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'sub_op': False, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_accum'),
    'vmlal_u8': ARMSema(intrin='vmlal_u8', inst='UMLAL', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '39')], ('bits', BinaryExpr('*', Number(2), Var('esize', '37'), '38')), '40'), For(Var('e', '97'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('product', '61'), ArrayIndex(BinaryExpr('*', Var('element1', '62'), Var('element2', '63'), '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(Var('accum', '80'), BinaryExpr('+', ArrayIndex(Var('Elem', '81'), [Var('operand3', '82'), Var('e', '83'), BinaryExpr('*', Number(2), Var('esize', '84'), '85')], '86'), Var('product', '87'), '88'))], '89'), Update(ArrayIndex(Var('Elem', '90'), [Var('result', '91'), Var('e', '92'), BinaryExpr('*', Number(2), Var('esize', '93'), '94')], '95'), Var('accum', '96'))], 1, '98'), Update(ArrayIndex(Var('V', '99'), [Var('d', '100')], '101'), Var('result', '102'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UMLAL Vd.8H,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'sub_op': False, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_accum'),
    'vmlaq_n_s16': ARMSema(intrin='vmlaq_n_s16', inst='MLA', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('product', '30')], ('bits', Var('esize', '29')), '31'), Update(Var('element2', '32'), Call('UInt', [ArrayIndex(Var('Elem', '34'), [Var('operand2', '35'), Var('index', '36'), Var('esize', '37')], '38')], '39')), For(Var('e', '84'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), Call('UInt', [ArrayIndex(Var('Elem', '44'), [Var('operand1', '45'), Var('e', '46'), Var('esize', '47')], '48')], '49')), Update(Var('product', '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', Var('esize', '54'), Number(1), '55'), Number(0), '56')], '57')), IfElse(Var('sub_op', '58'), [Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), BinaryExpr('-', ArrayIndex(Var('Elem', '64'), [Var('operand3', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'), '70'))], [Update(ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), BinaryExpr('+', ArrayIndex(Var('Elem', '76'), [Var('operand3', '77'), Var('e', '78'), Var('esize', '79')], '80'), Var('product', '81'), '82'))], '83')], 1, '85'), Update(ArrayIndex(Var('V', '86'), [Var('d', '87')], '88'), Var('result', '89'))], rettype='int16x8_t', ret_is_signed=True, inst_form='MLA Vd.8H,Vn.8H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 128, 'elements': 8, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_int'),
    'vmlaq_n_s32': ARMSema(intrin='vmlaq_n_s32', inst='MLA', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('product', '30')], ('bits', Var('esize', '29')), '31'), Update(Var('element2', '32'), Call('UInt', [ArrayIndex(Var('Elem', '34'), [Var('operand2', '35'), Var('index', '36'), Var('esize', '37')], '38')], '39')), For(Var('e', '84'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), Call('UInt', [ArrayIndex(Var('Elem', '44'), [Var('operand1', '45'), Var('e', '46'), Var('esize', '47')], '48')], '49')), Update(Var('product', '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', Var('esize', '54'), Number(1), '55'), Number(0), '56')], '57')), IfElse(Var('sub_op', '58'), [Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), BinaryExpr('-', ArrayIndex(Var('Elem', '64'), [Var('operand3', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'), '70'))], [Update(ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), BinaryExpr('+', ArrayIndex(Var('Elem', '76'), [Var('operand3', '77'), Var('e', '78'), Var('esize', '79')], '80'), Var('product', '81'), '82'))], '83')], 1, '85'), Update(ArrayIndex(Var('V', '86'), [Var('d', '87')], '88'), Var('result', '89'))], rettype='int32x4_t', ret_is_signed=True, inst_form='MLA Vd.4S,Vn.4S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 128, 'elements': 4, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_int'),
    'vmlaq_n_u16': ARMSema(intrin='vmlaq_n_u16', inst='MLA', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('product', '30')], ('bits', Var('esize', '29')), '31'), Update(Var('element2', '32'), Call('UInt', [ArrayIndex(Var('Elem', '34'), [Var('operand2', '35'), Var('index', '36'), Var('esize', '37')], '38')], '39')), For(Var('e', '84'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), Call('UInt', [ArrayIndex(Var('Elem', '44'), [Var('operand1', '45'), Var('e', '46'), Var('esize', '47')], '48')], '49')), Update(Var('product', '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', Var('esize', '54'), Number(1), '55'), Number(0), '56')], '57')), IfElse(Var('sub_op', '58'), [Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), BinaryExpr('-', ArrayIndex(Var('Elem', '64'), [Var('operand3', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'), '70'))], [Update(ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), BinaryExpr('+', ArrayIndex(Var('Elem', '76'), [Var('operand3', '77'), Var('e', '78'), Var('esize', '79')], '80'), Var('product', '81'), '82'))], '83')], 1, '85'), Update(ArrayIndex(Var('V', '86'), [Var('d', '87')], '88'), Var('result', '89'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='MLA Vd.8H,Vn.8H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 128, 'elements': 8, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_int'),
    'vmlaq_n_u32': ARMSema(intrin='vmlaq_n_u32', inst='MLA', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint32_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('product', '30')], ('bits', Var('esize', '29')), '31'), Update(Var('element2', '32'), Call('UInt', [ArrayIndex(Var('Elem', '34'), [Var('operand2', '35'), Var('index', '36'), Var('esize', '37')], '38')], '39')), For(Var('e', '84'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), Call('UInt', [ArrayIndex(Var('Elem', '44'), [Var('operand1', '45'), Var('e', '46'), Var('esize', '47')], '48')], '49')), Update(Var('product', '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', Var('esize', '54'), Number(1), '55'), Number(0), '56')], '57')), IfElse(Var('sub_op', '58'), [Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), BinaryExpr('-', ArrayIndex(Var('Elem', '64'), [Var('operand3', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'), '70'))], [Update(ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), BinaryExpr('+', ArrayIndex(Var('Elem', '76'), [Var('operand3', '77'), Var('e', '78'), Var('esize', '79')], '80'), Var('product', '81'), '82'))], '83')], 1, '85'), Update(ArrayIndex(Var('V', '86'), [Var('d', '87')], '88'), Var('result', '89'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='MLA Vd.4S,Vn.4S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 128, 'elements': 4, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_int'),
    'vmlaq_s16': ARMSema(intrin='vmlaq_s16', inst='MLA', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '26')], ('bits', Var('esize', '25')), '27'), VarsDecl([Var('element2', '29')], ('bits', Var('esize', '28')), '30'), VarsDecl([Var('product', '32')], ('bits', Var('esize', '31')), '33'), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')), Update(Var('element2', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '50')], '51'), Call('UInt', [Var('element2', '53')], '54'), '55'), [SliceRange(BinaryExpr('-', Var('esize', '56'), Number(1), '57'), Number(0), '58')], '59')), IfElse(Var('sub_op', '60'), [Update(ArrayIndex(Var('Elem', '61'), [Var('result', '62'), Var('e', '63'), Var('esize', '64')], '65'), BinaryExpr('-', ArrayIndex(Var('Elem', '66'), [Var('operand3', '67'), Var('e', '68'), Var('esize', '69')], '70'), Var('product', '71'), '72'))], [Update(ArrayIndex(Var('Elem', '73'), [Var('result', '74'), Var('e', '75'), Var('esize', '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('operand3', '79'), Var('e', '80'), Var('esize', '81')], '82'), Var('product', '83'), '84'))], '85')], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result', '91'))], rettype='int16x8_t', ret_is_signed=True, inst_form='MLA Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_accum'),
    'vmlaq_s32': ARMSema(intrin='vmlaq_s32', inst='MLA', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '26')], ('bits', Var('esize', '25')), '27'), VarsDecl([Var('element2', '29')], ('bits', Var('esize', '28')), '30'), VarsDecl([Var('product', '32')], ('bits', Var('esize', '31')), '33'), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')), Update(Var('element2', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '50')], '51'), Call('UInt', [Var('element2', '53')], '54'), '55'), [SliceRange(BinaryExpr('-', Var('esize', '56'), Number(1), '57'), Number(0), '58')], '59')), IfElse(Var('sub_op', '60'), [Update(ArrayIndex(Var('Elem', '61'), [Var('result', '62'), Var('e', '63'), Var('esize', '64')], '65'), BinaryExpr('-', ArrayIndex(Var('Elem', '66'), [Var('operand3', '67'), Var('e', '68'), Var('esize', '69')], '70'), Var('product', '71'), '72'))], [Update(ArrayIndex(Var('Elem', '73'), [Var('result', '74'), Var('e', '75'), Var('esize', '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('operand3', '79'), Var('e', '80'), Var('esize', '81')], '82'), Var('product', '83'), '84'))], '85')], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result', '91'))], rettype='int32x4_t', ret_is_signed=True, inst_form='MLA Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_accum'),
    'vmlaq_s8': ARMSema(intrin='vmlaq_s8', inst='MLA', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '26')], ('bits', Var('esize', '25')), '27'), VarsDecl([Var('element2', '29')], ('bits', Var('esize', '28')), '30'), VarsDecl([Var('product', '32')], ('bits', Var('esize', '31')), '33'), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')), Update(Var('element2', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '50')], '51'), Call('UInt', [Var('element2', '53')], '54'), '55'), [SliceRange(BinaryExpr('-', Var('esize', '56'), Number(1), '57'), Number(0), '58')], '59')), IfElse(Var('sub_op', '60'), [Update(ArrayIndex(Var('Elem', '61'), [Var('result', '62'), Var('e', '63'), Var('esize', '64')], '65'), BinaryExpr('-', ArrayIndex(Var('Elem', '66'), [Var('operand3', '67'), Var('e', '68'), Var('esize', '69')], '70'), Var('product', '71'), '72'))], [Update(ArrayIndex(Var('Elem', '73'), [Var('result', '74'), Var('e', '75'), Var('esize', '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('operand3', '79'), Var('e', '80'), Var('esize', '81')], '82'), Var('product', '83'), '84'))], '85')], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result', '91'))], rettype='int8x16_t', ret_is_signed=True, inst_form='MLA Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_accum'),
    'vmlaq_u16': ARMSema(intrin='vmlaq_u16', inst='MLA', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '26')], ('bits', Var('esize', '25')), '27'), VarsDecl([Var('element2', '29')], ('bits', Var('esize', '28')), '30'), VarsDecl([Var('product', '32')], ('bits', Var('esize', '31')), '33'), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')), Update(Var('element2', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '50')], '51'), Call('UInt', [Var('element2', '53')], '54'), '55'), [SliceRange(BinaryExpr('-', Var('esize', '56'), Number(1), '57'), Number(0), '58')], '59')), IfElse(Var('sub_op', '60'), [Update(ArrayIndex(Var('Elem', '61'), [Var('result', '62'), Var('e', '63'), Var('esize', '64')], '65'), BinaryExpr('-', ArrayIndex(Var('Elem', '66'), [Var('operand3', '67'), Var('e', '68'), Var('esize', '69')], '70'), Var('product', '71'), '72'))], [Update(ArrayIndex(Var('Elem', '73'), [Var('result', '74'), Var('e', '75'), Var('esize', '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('operand3', '79'), Var('e', '80'), Var('esize', '81')], '82'), Var('product', '83'), '84'))], '85')], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result', '91'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='MLA Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_accum'),
    'vmlaq_u32': ARMSema(intrin='vmlaq_u32', inst='MLA', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '26')], ('bits', Var('esize', '25')), '27'), VarsDecl([Var('element2', '29')], ('bits', Var('esize', '28')), '30'), VarsDecl([Var('product', '32')], ('bits', Var('esize', '31')), '33'), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')), Update(Var('element2', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '50')], '51'), Call('UInt', [Var('element2', '53')], '54'), '55'), [SliceRange(BinaryExpr('-', Var('esize', '56'), Number(1), '57'), Number(0), '58')], '59')), IfElse(Var('sub_op', '60'), [Update(ArrayIndex(Var('Elem', '61'), [Var('result', '62'), Var('e', '63'), Var('esize', '64')], '65'), BinaryExpr('-', ArrayIndex(Var('Elem', '66'), [Var('operand3', '67'), Var('e', '68'), Var('esize', '69')], '70'), Var('product', '71'), '72'))], [Update(ArrayIndex(Var('Elem', '73'), [Var('result', '74'), Var('e', '75'), Var('esize', '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('operand3', '79'), Var('e', '80'), Var('esize', '81')], '82'), Var('product', '83'), '84'))], '85')], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result', '91'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='MLA Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_accum'),
    'vmlaq_u8': ARMSema(intrin='vmlaq_u8', inst='MLA', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '26')], ('bits', Var('esize', '25')), '27'), VarsDecl([Var('element2', '29')], ('bits', Var('esize', '28')), '30'), VarsDecl([Var('product', '32')], ('bits', Var('esize', '31')), '33'), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')), Update(Var('element2', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '50')], '51'), Call('UInt', [Var('element2', '53')], '54'), '55'), [SliceRange(BinaryExpr('-', Var('esize', '56'), Number(1), '57'), Number(0), '58')], '59')), IfElse(Var('sub_op', '60'), [Update(ArrayIndex(Var('Elem', '61'), [Var('result', '62'), Var('e', '63'), Var('esize', '64')], '65'), BinaryExpr('-', ArrayIndex(Var('Elem', '66'), [Var('operand3', '67'), Var('e', '68'), Var('esize', '69')], '70'), Var('product', '71'), '72'))], [Update(ArrayIndex(Var('Elem', '73'), [Var('result', '74'), Var('e', '75'), Var('esize', '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('operand3', '79'), Var('e', '80'), Var('esize', '81')], '82'), Var('product', '83'), '84'))], '85')], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result', '91'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='MLA Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_accum'),
    'vmls_n_s16': ARMSema(intrin='vmls_n_s16', inst='MLS', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('product', '30')], ('bits', Var('esize', '29')), '31'), Update(Var('element2', '32'), Call('UInt', [ArrayIndex(Var('Elem', '34'), [Var('operand2', '35'), Var('index', '36'), Var('esize', '37')], '38')], '39')), For(Var('e', '84'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), Call('UInt', [ArrayIndex(Var('Elem', '44'), [Var('operand1', '45'), Var('e', '46'), Var('esize', '47')], '48')], '49')), Update(Var('product', '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', Var('esize', '54'), Number(1), '55'), Number(0), '56')], '57')), IfElse(Var('sub_op', '58'), [Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), BinaryExpr('-', ArrayIndex(Var('Elem', '64'), [Var('operand3', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'), '70'))], [Update(ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), BinaryExpr('+', ArrayIndex(Var('Elem', '76'), [Var('operand3', '77'), Var('e', '78'), Var('esize', '79')], '80'), Var('product', '81'), '82'))], '83')], 1, '85'), Update(ArrayIndex(Var('V', '86'), [Var('d', '87')], '88'), Var('result', '89'))], rettype='int16x4_t', ret_is_signed=True, inst_form='MLS Vd.4H,Vn.4H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'elements': 4, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_int'),
    'vmls_n_s32': ARMSema(intrin='vmls_n_s32', inst='MLS', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('product', '30')], ('bits', Var('esize', '29')), '31'), Update(Var('element2', '32'), Call('UInt', [ArrayIndex(Var('Elem', '34'), [Var('operand2', '35'), Var('index', '36'), Var('esize', '37')], '38')], '39')), For(Var('e', '84'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), Call('UInt', [ArrayIndex(Var('Elem', '44'), [Var('operand1', '45'), Var('e', '46'), Var('esize', '47')], '48')], '49')), Update(Var('product', '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', Var('esize', '54'), Number(1), '55'), Number(0), '56')], '57')), IfElse(Var('sub_op', '58'), [Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), BinaryExpr('-', ArrayIndex(Var('Elem', '64'), [Var('operand3', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'), '70'))], [Update(ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), BinaryExpr('+', ArrayIndex(Var('Elem', '76'), [Var('operand3', '77'), Var('e', '78'), Var('esize', '79')], '80'), Var('product', '81'), '82'))], '83')], 1, '85'), Update(ArrayIndex(Var('V', '86'), [Var('d', '87')], '88'), Var('result', '89'))], rettype='int32x2_t', ret_is_signed=True, inst_form='MLS Vd.2S,Vn.2S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'elements': 2, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_int'),
    'vmls_n_u16': ARMSema(intrin='vmls_n_u16', inst='MLS', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('product', '30')], ('bits', Var('esize', '29')), '31'), Update(Var('element2', '32'), Call('UInt', [ArrayIndex(Var('Elem', '34'), [Var('operand2', '35'), Var('index', '36'), Var('esize', '37')], '38')], '39')), For(Var('e', '84'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), Call('UInt', [ArrayIndex(Var('Elem', '44'), [Var('operand1', '45'), Var('e', '46'), Var('esize', '47')], '48')], '49')), Update(Var('product', '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', Var('esize', '54'), Number(1), '55'), Number(0), '56')], '57')), IfElse(Var('sub_op', '58'), [Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), BinaryExpr('-', ArrayIndex(Var('Elem', '64'), [Var('operand3', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'), '70'))], [Update(ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), BinaryExpr('+', ArrayIndex(Var('Elem', '76'), [Var('operand3', '77'), Var('e', '78'), Var('esize', '79')], '80'), Var('product', '81'), '82'))], '83')], 1, '85'), Update(ArrayIndex(Var('V', '86'), [Var('d', '87')], '88'), Var('result', '89'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='MLS Vd.4H,Vn.4H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'elements': 4, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_int'),
    'vmls_n_u32': ARMSema(intrin='vmls_n_u32', inst='MLS', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint32_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('product', '30')], ('bits', Var('esize', '29')), '31'), Update(Var('element2', '32'), Call('UInt', [ArrayIndex(Var('Elem', '34'), [Var('operand2', '35'), Var('index', '36'), Var('esize', '37')], '38')], '39')), For(Var('e', '84'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), Call('UInt', [ArrayIndex(Var('Elem', '44'), [Var('operand1', '45'), Var('e', '46'), Var('esize', '47')], '48')], '49')), Update(Var('product', '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', Var('esize', '54'), Number(1), '55'), Number(0), '56')], '57')), IfElse(Var('sub_op', '58'), [Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), BinaryExpr('-', ArrayIndex(Var('Elem', '64'), [Var('operand3', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'), '70'))], [Update(ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), BinaryExpr('+', ArrayIndex(Var('Elem', '76'), [Var('operand3', '77'), Var('e', '78'), Var('esize', '79')], '80'), Var('product', '81'), '82'))], '83')], 1, '85'), Update(ArrayIndex(Var('V', '86'), [Var('d', '87')], '88'), Var('result', '89'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='MLS Vd.2S,Vn.2S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'elements': 2, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_int'),
    'vmls_s16': ARMSema(intrin='vmls_s16', inst='MLS', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '26')], ('bits', Var('esize', '25')), '27'), VarsDecl([Var('element2', '29')], ('bits', Var('esize', '28')), '30'), VarsDecl([Var('product', '32')], ('bits', Var('esize', '31')), '33'), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')), Update(Var('element2', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '50')], '51'), Call('UInt', [Var('element2', '53')], '54'), '55'), [SliceRange(BinaryExpr('-', Var('esize', '56'), Number(1), '57'), Number(0), '58')], '59')), IfElse(Var('sub_op', '60'), [Update(ArrayIndex(Var('Elem', '61'), [Var('result', '62'), Var('e', '63'), Var('esize', '64')], '65'), BinaryExpr('-', ArrayIndex(Var('Elem', '66'), [Var('operand3', '67'), Var('e', '68'), Var('esize', '69')], '70'), Var('product', '71'), '72'))], [Update(ArrayIndex(Var('Elem', '73'), [Var('result', '74'), Var('e', '75'), Var('esize', '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('operand3', '79'), Var('e', '80'), Var('esize', '81')], '82'), Var('product', '83'), '84'))], '85')], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result', '91'))], rettype='int16x4_t', ret_is_signed=True, inst_form='MLS Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_accum'),
    'vmls_s32': ARMSema(intrin='vmls_s32', inst='MLS', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '26')], ('bits', Var('esize', '25')), '27'), VarsDecl([Var('element2', '29')], ('bits', Var('esize', '28')), '30'), VarsDecl([Var('product', '32')], ('bits', Var('esize', '31')), '33'), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')), Update(Var('element2', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '50')], '51'), Call('UInt', [Var('element2', '53')], '54'), '55'), [SliceRange(BinaryExpr('-', Var('esize', '56'), Number(1), '57'), Number(0), '58')], '59')), IfElse(Var('sub_op', '60'), [Update(ArrayIndex(Var('Elem', '61'), [Var('result', '62'), Var('e', '63'), Var('esize', '64')], '65'), BinaryExpr('-', ArrayIndex(Var('Elem', '66'), [Var('operand3', '67'), Var('e', '68'), Var('esize', '69')], '70'), Var('product', '71'), '72'))], [Update(ArrayIndex(Var('Elem', '73'), [Var('result', '74'), Var('e', '75'), Var('esize', '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('operand3', '79'), Var('e', '80'), Var('esize', '81')], '82'), Var('product', '83'), '84'))], '85')], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result', '91'))], rettype='int32x2_t', ret_is_signed=True, inst_form='MLS Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_accum'),
    'vmls_s8': ARMSema(intrin='vmls_s8', inst='MLS', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '26')], ('bits', Var('esize', '25')), '27'), VarsDecl([Var('element2', '29')], ('bits', Var('esize', '28')), '30'), VarsDecl([Var('product', '32')], ('bits', Var('esize', '31')), '33'), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')), Update(Var('element2', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '50')], '51'), Call('UInt', [Var('element2', '53')], '54'), '55'), [SliceRange(BinaryExpr('-', Var('esize', '56'), Number(1), '57'), Number(0), '58')], '59')), IfElse(Var('sub_op', '60'), [Update(ArrayIndex(Var('Elem', '61'), [Var('result', '62'), Var('e', '63'), Var('esize', '64')], '65'), BinaryExpr('-', ArrayIndex(Var('Elem', '66'), [Var('operand3', '67'), Var('e', '68'), Var('esize', '69')], '70'), Var('product', '71'), '72'))], [Update(ArrayIndex(Var('Elem', '73'), [Var('result', '74'), Var('e', '75'), Var('esize', '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('operand3', '79'), Var('e', '80'), Var('esize', '81')], '82'), Var('product', '83'), '84'))], '85')], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result', '91'))], rettype='int8x8_t', ret_is_signed=True, inst_form='MLS Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_accum'),
    'vmls_u16': ARMSema(intrin='vmls_u16', inst='MLS', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '26')], ('bits', Var('esize', '25')), '27'), VarsDecl([Var('element2', '29')], ('bits', Var('esize', '28')), '30'), VarsDecl([Var('product', '32')], ('bits', Var('esize', '31')), '33'), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')), Update(Var('element2', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '50')], '51'), Call('UInt', [Var('element2', '53')], '54'), '55'), [SliceRange(BinaryExpr('-', Var('esize', '56'), Number(1), '57'), Number(0), '58')], '59')), IfElse(Var('sub_op', '60'), [Update(ArrayIndex(Var('Elem', '61'), [Var('result', '62'), Var('e', '63'), Var('esize', '64')], '65'), BinaryExpr('-', ArrayIndex(Var('Elem', '66'), [Var('operand3', '67'), Var('e', '68'), Var('esize', '69')], '70'), Var('product', '71'), '72'))], [Update(ArrayIndex(Var('Elem', '73'), [Var('result', '74'), Var('e', '75'), Var('esize', '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('operand3', '79'), Var('e', '80'), Var('esize', '81')], '82'), Var('product', '83'), '84'))], '85')], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result', '91'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='MLS Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_accum'),
    'vmls_u32': ARMSema(intrin='vmls_u32', inst='MLS', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '26')], ('bits', Var('esize', '25')), '27'), VarsDecl([Var('element2', '29')], ('bits', Var('esize', '28')), '30'), VarsDecl([Var('product', '32')], ('bits', Var('esize', '31')), '33'), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')), Update(Var('element2', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '50')], '51'), Call('UInt', [Var('element2', '53')], '54'), '55'), [SliceRange(BinaryExpr('-', Var('esize', '56'), Number(1), '57'), Number(0), '58')], '59')), IfElse(Var('sub_op', '60'), [Update(ArrayIndex(Var('Elem', '61'), [Var('result', '62'), Var('e', '63'), Var('esize', '64')], '65'), BinaryExpr('-', ArrayIndex(Var('Elem', '66'), [Var('operand3', '67'), Var('e', '68'), Var('esize', '69')], '70'), Var('product', '71'), '72'))], [Update(ArrayIndex(Var('Elem', '73'), [Var('result', '74'), Var('e', '75'), Var('esize', '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('operand3', '79'), Var('e', '80'), Var('esize', '81')], '82'), Var('product', '83'), '84'))], '85')], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result', '91'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='MLS Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_accum'),
    'vmls_u8': ARMSema(intrin='vmls_u8', inst='MLS', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '26')], ('bits', Var('esize', '25')), '27'), VarsDecl([Var('element2', '29')], ('bits', Var('esize', '28')), '30'), VarsDecl([Var('product', '32')], ('bits', Var('esize', '31')), '33'), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')), Update(Var('element2', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '50')], '51'), Call('UInt', [Var('element2', '53')], '54'), '55'), [SliceRange(BinaryExpr('-', Var('esize', '56'), Number(1), '57'), Number(0), '58')], '59')), IfElse(Var('sub_op', '60'), [Update(ArrayIndex(Var('Elem', '61'), [Var('result', '62'), Var('e', '63'), Var('esize', '64')], '65'), BinaryExpr('-', ArrayIndex(Var('Elem', '66'), [Var('operand3', '67'), Var('e', '68'), Var('esize', '69')], '70'), Var('product', '71'), '72'))], [Update(ArrayIndex(Var('Elem', '73'), [Var('result', '74'), Var('e', '75'), Var('esize', '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('operand3', '79'), Var('e', '80'), Var('esize', '81')], '82'), Var('product', '83'), '84'))], '85')], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result', '91'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='MLS Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_accum'),
    'vmlsl_high_n_s16': ARMSema(intrin='vmlsl_high_n_s16', inst='SMLSL2', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarDeclInit(VarsDecl([Var('operand3', '21')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '22'), ArrayIndex(Var('V', '18'), [Var('d', '19')], '20'), '23'), VarsDecl([Var('result', '26')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '24'), '25')), '27'), VarsDecl([Var('element1', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('element2', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('product', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('index', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), For(Var('e', '95'), Number(0), BinaryExpr('-', Var('elements', '45'), Number(1), '46'), [Update(Var('element1', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand1', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('product', '56'), ArrayIndex(BinaryExpr('*', Var('element1', '57'), Var('element2', '58'), '59'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '60'), '61'), Number(1), '62'), Number(0), '63')], '64')), IfElse(Var('sub_op', '65'), [Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), BinaryExpr('*', Number(2), Var('esize', '69'), '70')], '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(ArrayIndex(Var('Elem', '80'), [Var('result', '81'), Var('e', '82'), BinaryExpr('*', Number(2), Var('esize', '83'), '84')], '85'), BinaryExpr('+', ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91'), Var('product', '92'), '93'))], '94')], 1, '96'), Update(ArrayIndex(Var('V', '97'), [Var('d', '98')], '99'), Var('result', '100'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SMLSL2 Vd.4S,Vn.8H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'unsigned': False, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_long'),
    'vmlsl_high_n_s32': ARMSema(intrin='vmlsl_high_n_s32', inst='SMLSL2', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarDeclInit(VarsDecl([Var('operand3', '21')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '22'), ArrayIndex(Var('V', '18'), [Var('d', '19')], '20'), '23'), VarsDecl([Var('result', '26')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '24'), '25')), '27'), VarsDecl([Var('element1', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('element2', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('product', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('index', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), For(Var('e', '95'), Number(0), BinaryExpr('-', Var('elements', '45'), Number(1), '46'), [Update(Var('element1', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand1', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('product', '56'), ArrayIndex(BinaryExpr('*', Var('element1', '57'), Var('element2', '58'), '59'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '60'), '61'), Number(1), '62'), Number(0), '63')], '64')), IfElse(Var('sub_op', '65'), [Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), BinaryExpr('*', Number(2), Var('esize', '69'), '70')], '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(ArrayIndex(Var('Elem', '80'), [Var('result', '81'), Var('e', '82'), BinaryExpr('*', Number(2), Var('esize', '83'), '84')], '85'), BinaryExpr('+', ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91'), Var('product', '92'), '93'))], '94')], 1, '96'), Update(ArrayIndex(Var('V', '97'), [Var('d', '98')], '99'), Var('result', '100'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SMLSL2 Vd.2D,Vn.4S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'unsigned': False, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_long'),
    'vmlsl_high_n_u16': ARMSema(intrin='vmlsl_high_n_u16', inst='UMLSL2', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarDeclInit(VarsDecl([Var('operand3', '21')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '22'), ArrayIndex(Var('V', '18'), [Var('d', '19')], '20'), '23'), VarsDecl([Var('result', '26')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '24'), '25')), '27'), VarsDecl([Var('element1', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('element2', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('product', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('index', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), For(Var('e', '95'), Number(0), BinaryExpr('-', Var('elements', '45'), Number(1), '46'), [Update(Var('element1', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand1', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('product', '56'), ArrayIndex(BinaryExpr('*', Var('element1', '57'), Var('element2', '58'), '59'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '60'), '61'), Number(1), '62'), Number(0), '63')], '64')), IfElse(Var('sub_op', '65'), [Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), BinaryExpr('*', Number(2), Var('esize', '69'), '70')], '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(ArrayIndex(Var('Elem', '80'), [Var('result', '81'), Var('e', '82'), BinaryExpr('*', Number(2), Var('esize', '83'), '84')], '85'), BinaryExpr('+', ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91'), Var('product', '92'), '93'))], '94')], 1, '96'), Update(ArrayIndex(Var('V', '97'), [Var('d', '98')], '99'), Var('result', '100'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UMLSL2 Vd.4S,Vn.8H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'unsigned': True, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_long'),
    'vmlsl_high_n_u32': ARMSema(intrin='vmlsl_high_n_u32', inst='UMLSL2', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint32_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarDeclInit(VarsDecl([Var('operand3', '21')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '22'), ArrayIndex(Var('V', '18'), [Var('d', '19')], '20'), '23'), VarsDecl([Var('result', '26')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '24'), '25')), '27'), VarsDecl([Var('element1', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('element2', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('product', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('index', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), For(Var('e', '95'), Number(0), BinaryExpr('-', Var('elements', '45'), Number(1), '46'), [Update(Var('element1', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand1', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('product', '56'), ArrayIndex(BinaryExpr('*', Var('element1', '57'), Var('element2', '58'), '59'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '60'), '61'), Number(1), '62'), Number(0), '63')], '64')), IfElse(Var('sub_op', '65'), [Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), BinaryExpr('*', Number(2), Var('esize', '69'), '70')], '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(ArrayIndex(Var('Elem', '80'), [Var('result', '81'), Var('e', '82'), BinaryExpr('*', Number(2), Var('esize', '83'), '84')], '85'), BinaryExpr('+', ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91'), Var('product', '92'), '93'))], '94')], 1, '96'), Update(ArrayIndex(Var('V', '97'), [Var('d', '98')], '99'), Var('result', '100'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UMLSL2 Vd.2D,Vn.4S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'unsigned': True, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_long'),
    'vmlsl_high_s16': ARMSema(intrin='vmlsl_high_s16', inst='SMLSL2', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '39')], ('bits', BinaryExpr('*', Number(2), Var('esize', '37'), '38')), '40'), For(Var('e', '97'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('product', '61'), ArrayIndex(BinaryExpr('*', Var('element1', '62'), Var('element2', '63'), '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(Var('accum', '80'), BinaryExpr('+', ArrayIndex(Var('Elem', '81'), [Var('operand3', '82'), Var('e', '83'), BinaryExpr('*', Number(2), Var('esize', '84'), '85')], '86'), Var('product', '87'), '88'))], '89'), Update(ArrayIndex(Var('Elem', '90'), [Var('result', '91'), Var('e', '92'), BinaryExpr('*', Number(2), Var('esize', '93'), '94')], '95'), Var('accum', '96'))], 1, '98'), Update(ArrayIndex(Var('V', '99'), [Var('d', '100')], '101'), Var('result', '102'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SMLSL2 Vd.4S,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'sub_op': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_accum'),
    'vmlsl_high_s32': ARMSema(intrin='vmlsl_high_s32', inst='SMLSL2', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '39')], ('bits', BinaryExpr('*', Number(2), Var('esize', '37'), '38')), '40'), For(Var('e', '97'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('product', '61'), ArrayIndex(BinaryExpr('*', Var('element1', '62'), Var('element2', '63'), '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(Var('accum', '80'), BinaryExpr('+', ArrayIndex(Var('Elem', '81'), [Var('operand3', '82'), Var('e', '83'), BinaryExpr('*', Number(2), Var('esize', '84'), '85')], '86'), Var('product', '87'), '88'))], '89'), Update(ArrayIndex(Var('Elem', '90'), [Var('result', '91'), Var('e', '92'), BinaryExpr('*', Number(2), Var('esize', '93'), '94')], '95'), Var('accum', '96'))], 1, '98'), Update(ArrayIndex(Var('V', '99'), [Var('d', '100')], '101'), Var('result', '102'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SMLSL2 Vd.2D,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'sub_op': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_accum'),
    'vmlsl_high_s8': ARMSema(intrin='vmlsl_high_s8', inst='SMLSL2', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '39')], ('bits', BinaryExpr('*', Number(2), Var('esize', '37'), '38')), '40'), For(Var('e', '97'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('product', '61'), ArrayIndex(BinaryExpr('*', Var('element1', '62'), Var('element2', '63'), '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(Var('accum', '80'), BinaryExpr('+', ArrayIndex(Var('Elem', '81'), [Var('operand3', '82'), Var('e', '83'), BinaryExpr('*', Number(2), Var('esize', '84'), '85')], '86'), Var('product', '87'), '88'))], '89'), Update(ArrayIndex(Var('Elem', '90'), [Var('result', '91'), Var('e', '92'), BinaryExpr('*', Number(2), Var('esize', '93'), '94')], '95'), Var('accum', '96'))], 1, '98'), Update(ArrayIndex(Var('V', '99'), [Var('d', '100')], '101'), Var('result', '102'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SMLSL2 Vd.8H,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'sub_op': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_accum'),
    'vmlsl_high_u16': ARMSema(intrin='vmlsl_high_u16', inst='UMLSL2', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '39')], ('bits', BinaryExpr('*', Number(2), Var('esize', '37'), '38')), '40'), For(Var('e', '97'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('product', '61'), ArrayIndex(BinaryExpr('*', Var('element1', '62'), Var('element2', '63'), '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(Var('accum', '80'), BinaryExpr('+', ArrayIndex(Var('Elem', '81'), [Var('operand3', '82'), Var('e', '83'), BinaryExpr('*', Number(2), Var('esize', '84'), '85')], '86'), Var('product', '87'), '88'))], '89'), Update(ArrayIndex(Var('Elem', '90'), [Var('result', '91'), Var('e', '92'), BinaryExpr('*', Number(2), Var('esize', '93'), '94')], '95'), Var('accum', '96'))], 1, '98'), Update(ArrayIndex(Var('V', '99'), [Var('d', '100')], '101'), Var('result', '102'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UMLSL2 Vd.4S,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'sub_op': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_accum'),
    'vmlsl_high_u32': ARMSema(intrin='vmlsl_high_u32', inst='UMLSL2', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '39')], ('bits', BinaryExpr('*', Number(2), Var('esize', '37'), '38')), '40'), For(Var('e', '97'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('product', '61'), ArrayIndex(BinaryExpr('*', Var('element1', '62'), Var('element2', '63'), '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(Var('accum', '80'), BinaryExpr('+', ArrayIndex(Var('Elem', '81'), [Var('operand3', '82'), Var('e', '83'), BinaryExpr('*', Number(2), Var('esize', '84'), '85')], '86'), Var('product', '87'), '88'))], '89'), Update(ArrayIndex(Var('Elem', '90'), [Var('result', '91'), Var('e', '92'), BinaryExpr('*', Number(2), Var('esize', '93'), '94')], '95'), Var('accum', '96'))], 1, '98'), Update(ArrayIndex(Var('V', '99'), [Var('d', '100')], '101'), Var('result', '102'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UMLSL2 Vd.2D,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'sub_op': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_accum'),
    'vmlsl_high_u8': ARMSema(intrin='vmlsl_high_u8', inst='UMLSL2', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '39')], ('bits', BinaryExpr('*', Number(2), Var('esize', '37'), '38')), '40'), For(Var('e', '97'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('product', '61'), ArrayIndex(BinaryExpr('*', Var('element1', '62'), Var('element2', '63'), '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(Var('accum', '80'), BinaryExpr('+', ArrayIndex(Var('Elem', '81'), [Var('operand3', '82'), Var('e', '83'), BinaryExpr('*', Number(2), Var('esize', '84'), '85')], '86'), Var('product', '87'), '88'))], '89'), Update(ArrayIndex(Var('Elem', '90'), [Var('result', '91'), Var('e', '92'), BinaryExpr('*', Number(2), Var('esize', '93'), '94')], '95'), Var('accum', '96'))], 1, '98'), Update(ArrayIndex(Var('V', '99'), [Var('d', '100')], '101'), Var('result', '102'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UMLSL2 Vd.8H,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'sub_op': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_accum'),
    'vmlsl_n_s16': ARMSema(intrin='vmlsl_n_s16', inst='SMLSL', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarDeclInit(VarsDecl([Var('operand3', '21')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '22'), ArrayIndex(Var('V', '18'), [Var('d', '19')], '20'), '23'), VarsDecl([Var('result', '26')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '24'), '25')), '27'), VarsDecl([Var('element1', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('element2', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('product', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('index', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), For(Var('e', '95'), Number(0), BinaryExpr('-', Var('elements', '45'), Number(1), '46'), [Update(Var('element1', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand1', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('product', '56'), ArrayIndex(BinaryExpr('*', Var('element1', '57'), Var('element2', '58'), '59'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '60'), '61'), Number(1), '62'), Number(0), '63')], '64')), IfElse(Var('sub_op', '65'), [Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), BinaryExpr('*', Number(2), Var('esize', '69'), '70')], '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(ArrayIndex(Var('Elem', '80'), [Var('result', '81'), Var('e', '82'), BinaryExpr('*', Number(2), Var('esize', '83'), '84')], '85'), BinaryExpr('+', ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91'), Var('product', '92'), '93'))], '94')], 1, '96'), Update(ArrayIndex(Var('V', '97'), [Var('d', '98')], '99'), Var('result', '100'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SMLSL Vd.4S,Vn.4H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'unsigned': False, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_long'),
    'vmlsl_n_s32': ARMSema(intrin='vmlsl_n_s32', inst='SMLSL', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarDeclInit(VarsDecl([Var('operand3', '21')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '22'), ArrayIndex(Var('V', '18'), [Var('d', '19')], '20'), '23'), VarsDecl([Var('result', '26')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '24'), '25')), '27'), VarsDecl([Var('element1', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('element2', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('product', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('index', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), For(Var('e', '95'), Number(0), BinaryExpr('-', Var('elements', '45'), Number(1), '46'), [Update(Var('element1', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand1', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('product', '56'), ArrayIndex(BinaryExpr('*', Var('element1', '57'), Var('element2', '58'), '59'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '60'), '61'), Number(1), '62'), Number(0), '63')], '64')), IfElse(Var('sub_op', '65'), [Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), BinaryExpr('*', Number(2), Var('esize', '69'), '70')], '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(ArrayIndex(Var('Elem', '80'), [Var('result', '81'), Var('e', '82'), BinaryExpr('*', Number(2), Var('esize', '83'), '84')], '85'), BinaryExpr('+', ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91'), Var('product', '92'), '93'))], '94')], 1, '96'), Update(ArrayIndex(Var('V', '97'), [Var('d', '98')], '99'), Var('result', '100'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SMLSL Vd.2D,Vn.2S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'unsigned': False, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_long'),
    'vmlsl_n_u16': ARMSema(intrin='vmlsl_n_u16', inst='UMLSL', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarDeclInit(VarsDecl([Var('operand3', '21')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '22'), ArrayIndex(Var('V', '18'), [Var('d', '19')], '20'), '23'), VarsDecl([Var('result', '26')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '24'), '25')), '27'), VarsDecl([Var('element1', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('element2', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('product', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('index', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), For(Var('e', '95'), Number(0), BinaryExpr('-', Var('elements', '45'), Number(1), '46'), [Update(Var('element1', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand1', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('product', '56'), ArrayIndex(BinaryExpr('*', Var('element1', '57'), Var('element2', '58'), '59'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '60'), '61'), Number(1), '62'), Number(0), '63')], '64')), IfElse(Var('sub_op', '65'), [Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), BinaryExpr('*', Number(2), Var('esize', '69'), '70')], '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(ArrayIndex(Var('Elem', '80'), [Var('result', '81'), Var('e', '82'), BinaryExpr('*', Number(2), Var('esize', '83'), '84')], '85'), BinaryExpr('+', ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91'), Var('product', '92'), '93'))], '94')], 1, '96'), Update(ArrayIndex(Var('V', '97'), [Var('d', '98')], '99'), Var('result', '100'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UMLSL Vd.4S,Vn.4H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'unsigned': True, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_long'),
    'vmlsl_n_u32': ARMSema(intrin='vmlsl_n_u32', inst='UMLSL', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint32_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarDeclInit(VarsDecl([Var('operand3', '21')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '22'), ArrayIndex(Var('V', '18'), [Var('d', '19')], '20'), '23'), VarsDecl([Var('result', '26')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '24'), '25')), '27'), VarsDecl([Var('element1', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('element2', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('product', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('index', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), For(Var('e', '95'), Number(0), BinaryExpr('-', Var('elements', '45'), Number(1), '46'), [Update(Var('element1', '47'), Call('Int', [ArrayIndex(Var('Elem', '49'), [Var('operand1', '50'), Var('e', '51'), Var('esize', '52')], '53'), Var('unsigned', '54')], '55')), Update(Var('product', '56'), ArrayIndex(BinaryExpr('*', Var('element1', '57'), Var('element2', '58'), '59'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '60'), '61'), Number(1), '62'), Number(0), '63')], '64')), IfElse(Var('sub_op', '65'), [Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), BinaryExpr('*', Number(2), Var('esize', '69'), '70')], '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(ArrayIndex(Var('Elem', '80'), [Var('result', '81'), Var('e', '82'), BinaryExpr('*', Number(2), Var('esize', '83'), '84')], '85'), BinaryExpr('+', ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91'), Var('product', '92'), '93'))], '94')], 1, '96'), Update(ArrayIndex(Var('V', '97'), [Var('d', '98')], '99'), Var('result', '100'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UMLSL Vd.2D,Vn.2S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'unsigned': True, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_long'),
    'vmlsl_s16': ARMSema(intrin='vmlsl_s16', inst='SMLSL', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '39')], ('bits', BinaryExpr('*', Number(2), Var('esize', '37'), '38')), '40'), For(Var('e', '97'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('product', '61'), ArrayIndex(BinaryExpr('*', Var('element1', '62'), Var('element2', '63'), '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(Var('accum', '80'), BinaryExpr('+', ArrayIndex(Var('Elem', '81'), [Var('operand3', '82'), Var('e', '83'), BinaryExpr('*', Number(2), Var('esize', '84'), '85')], '86'), Var('product', '87'), '88'))], '89'), Update(ArrayIndex(Var('Elem', '90'), [Var('result', '91'), Var('e', '92'), BinaryExpr('*', Number(2), Var('esize', '93'), '94')], '95'), Var('accum', '96'))], 1, '98'), Update(ArrayIndex(Var('V', '99'), [Var('d', '100')], '101'), Var('result', '102'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SMLSL Vd.4S,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'sub_op': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_accum'),
    'vmlsl_s32': ARMSema(intrin='vmlsl_s32', inst='SMLSL', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '39')], ('bits', BinaryExpr('*', Number(2), Var('esize', '37'), '38')), '40'), For(Var('e', '97'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('product', '61'), ArrayIndex(BinaryExpr('*', Var('element1', '62'), Var('element2', '63'), '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(Var('accum', '80'), BinaryExpr('+', ArrayIndex(Var('Elem', '81'), [Var('operand3', '82'), Var('e', '83'), BinaryExpr('*', Number(2), Var('esize', '84'), '85')], '86'), Var('product', '87'), '88'))], '89'), Update(ArrayIndex(Var('Elem', '90'), [Var('result', '91'), Var('e', '92'), BinaryExpr('*', Number(2), Var('esize', '93'), '94')], '95'), Var('accum', '96'))], 1, '98'), Update(ArrayIndex(Var('V', '99'), [Var('d', '100')], '101'), Var('result', '102'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SMLSL Vd.2D,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'sub_op': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_accum'),
    'vmlsl_s8': ARMSema(intrin='vmlsl_s8', inst='SMLSL', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '39')], ('bits', BinaryExpr('*', Number(2), Var('esize', '37'), '38')), '40'), For(Var('e', '97'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('product', '61'), ArrayIndex(BinaryExpr('*', Var('element1', '62'), Var('element2', '63'), '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(Var('accum', '80'), BinaryExpr('+', ArrayIndex(Var('Elem', '81'), [Var('operand3', '82'), Var('e', '83'), BinaryExpr('*', Number(2), Var('esize', '84'), '85')], '86'), Var('product', '87'), '88'))], '89'), Update(ArrayIndex(Var('Elem', '90'), [Var('result', '91'), Var('e', '92'), BinaryExpr('*', Number(2), Var('esize', '93'), '94')], '95'), Var('accum', '96'))], 1, '98'), Update(ArrayIndex(Var('V', '99'), [Var('d', '100')], '101'), Var('result', '102'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SMLSL Vd.8H,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'sub_op': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_accum'),
    'vmlsl_u16': ARMSema(intrin='vmlsl_u16', inst='UMLSL', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '39')], ('bits', BinaryExpr('*', Number(2), Var('esize', '37'), '38')), '40'), For(Var('e', '97'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('product', '61'), ArrayIndex(BinaryExpr('*', Var('element1', '62'), Var('element2', '63'), '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(Var('accum', '80'), BinaryExpr('+', ArrayIndex(Var('Elem', '81'), [Var('operand3', '82'), Var('e', '83'), BinaryExpr('*', Number(2), Var('esize', '84'), '85')], '86'), Var('product', '87'), '88'))], '89'), Update(ArrayIndex(Var('Elem', '90'), [Var('result', '91'), Var('e', '92'), BinaryExpr('*', Number(2), Var('esize', '93'), '94')], '95'), Var('accum', '96'))], 1, '98'), Update(ArrayIndex(Var('V', '99'), [Var('d', '100')], '101'), Var('result', '102'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UMLSL Vd.4S,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'sub_op': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_accum'),
    'vmlsl_u32': ARMSema(intrin='vmlsl_u32', inst='UMLSL', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '39')], ('bits', BinaryExpr('*', Number(2), Var('esize', '37'), '38')), '40'), For(Var('e', '97'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('product', '61'), ArrayIndex(BinaryExpr('*', Var('element1', '62'), Var('element2', '63'), '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(Var('accum', '80'), BinaryExpr('+', ArrayIndex(Var('Elem', '81'), [Var('operand3', '82'), Var('e', '83'), BinaryExpr('*', Number(2), Var('esize', '84'), '85')], '86'), Var('product', '87'), '88'))], '89'), Update(ArrayIndex(Var('Elem', '90'), [Var('result', '91'), Var('e', '92'), BinaryExpr('*', Number(2), Var('esize', '93'), '94')], '95'), Var('accum', '96'))], 1, '98'), Update(ArrayIndex(Var('V', '99'), [Var('d', '100')], '101'), Var('result', '102'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UMLSL Vd.2D,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'sub_op': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_accum'),
    'vmlsl_u8': ARMSema(intrin='vmlsl_u8', inst='UMLSL', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '39')], ('bits', BinaryExpr('*', Number(2), Var('esize', '37'), '38')), '40'), For(Var('e', '97'), Number(0), BinaryExpr('-', Var('elements', '41'), Number(1), '42'), [Update(Var('element1', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand1', '46'), Var('e', '47'), Var('esize', '48')], '49'), Var('unsigned', '50')], '51')), Update(Var('element2', '52'), Call('Int', [ArrayIndex(Var('Elem', '54'), [Var('operand2', '55'), Var('e', '56'), Var('esize', '57')], '58'), Var('unsigned', '59')], '60')), Update(Var('product', '61'), ArrayIndex(BinaryExpr('*', Var('element1', '62'), Var('element2', '63'), '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77'), Var('product', '78'), '79'))], [Update(Var('accum', '80'), BinaryExpr('+', ArrayIndex(Var('Elem', '81'), [Var('operand3', '82'), Var('e', '83'), BinaryExpr('*', Number(2), Var('esize', '84'), '85')], '86'), Var('product', '87'), '88'))], '89'), Update(ArrayIndex(Var('Elem', '90'), [Var('result', '91'), Var('e', '92'), BinaryExpr('*', Number(2), Var('esize', '93'), '94')], '95'), Var('accum', '96'))], 1, '98'), Update(ArrayIndex(Var('V', '99'), [Var('d', '100')], '101'), Var('result', '102'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UMLSL Vd.8H,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'sub_op': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_accum'),
    'vmlsq_n_s16': ARMSema(intrin='vmlsq_n_s16', inst='MLS', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('product', '30')], ('bits', Var('esize', '29')), '31'), Update(Var('element2', '32'), Call('UInt', [ArrayIndex(Var('Elem', '34'), [Var('operand2', '35'), Var('index', '36'), Var('esize', '37')], '38')], '39')), For(Var('e', '84'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), Call('UInt', [ArrayIndex(Var('Elem', '44'), [Var('operand1', '45'), Var('e', '46'), Var('esize', '47')], '48')], '49')), Update(Var('product', '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', Var('esize', '54'), Number(1), '55'), Number(0), '56')], '57')), IfElse(Var('sub_op', '58'), [Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), BinaryExpr('-', ArrayIndex(Var('Elem', '64'), [Var('operand3', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'), '70'))], [Update(ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), BinaryExpr('+', ArrayIndex(Var('Elem', '76'), [Var('operand3', '77'), Var('e', '78'), Var('esize', '79')], '80'), Var('product', '81'), '82'))], '83')], 1, '85'), Update(ArrayIndex(Var('V', '86'), [Var('d', '87')], '88'), Var('result', '89'))], rettype='int16x8_t', ret_is_signed=True, inst_form='MLS Vd.8H,Vn.8H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 128, 'elements': 8, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_int'),
    'vmlsq_n_s32': ARMSema(intrin='vmlsq_n_s32', inst='MLS', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('product', '30')], ('bits', Var('esize', '29')), '31'), Update(Var('element2', '32'), Call('UInt', [ArrayIndex(Var('Elem', '34'), [Var('operand2', '35'), Var('index', '36'), Var('esize', '37')], '38')], '39')), For(Var('e', '84'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), Call('UInt', [ArrayIndex(Var('Elem', '44'), [Var('operand1', '45'), Var('e', '46'), Var('esize', '47')], '48')], '49')), Update(Var('product', '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', Var('esize', '54'), Number(1), '55'), Number(0), '56')], '57')), IfElse(Var('sub_op', '58'), [Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), BinaryExpr('-', ArrayIndex(Var('Elem', '64'), [Var('operand3', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'), '70'))], [Update(ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), BinaryExpr('+', ArrayIndex(Var('Elem', '76'), [Var('operand3', '77'), Var('e', '78'), Var('esize', '79')], '80'), Var('product', '81'), '82'))], '83')], 1, '85'), Update(ArrayIndex(Var('V', '86'), [Var('d', '87')], '88'), Var('result', '89'))], rettype='int32x4_t', ret_is_signed=True, inst_form='MLS Vd.4S,Vn.4S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 128, 'elements': 4, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_int'),
    'vmlsq_n_u16': ARMSema(intrin='vmlsq_n_u16', inst='MLS', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('product', '30')], ('bits', Var('esize', '29')), '31'), Update(Var('element2', '32'), Call('UInt', [ArrayIndex(Var('Elem', '34'), [Var('operand2', '35'), Var('index', '36'), Var('esize', '37')], '38')], '39')), For(Var('e', '84'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), Call('UInt', [ArrayIndex(Var('Elem', '44'), [Var('operand1', '45'), Var('e', '46'), Var('esize', '47')], '48')], '49')), Update(Var('product', '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', Var('esize', '54'), Number(1), '55'), Number(0), '56')], '57')), IfElse(Var('sub_op', '58'), [Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), BinaryExpr('-', ArrayIndex(Var('Elem', '64'), [Var('operand3', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'), '70'))], [Update(ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), BinaryExpr('+', ArrayIndex(Var('Elem', '76'), [Var('operand3', '77'), Var('e', '78'), Var('esize', '79')], '80'), Var('product', '81'), '82'))], '83')], 1, '85'), Update(ArrayIndex(Var('V', '86'), [Var('d', '87')], '88'), Var('result', '89'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='MLS Vd.8H,Vn.8H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 128, 'elements': 8, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_int'),
    'vmlsq_n_u32': ARMSema(intrin='vmlsq_n_u32', inst='MLS', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint32_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '25')], ('integer', Number(64)), '26'), VarsDecl([Var('element2', '27')], ('integer', Number(64)), '28'), VarsDecl([Var('product', '30')], ('bits', Var('esize', '29')), '31'), Update(Var('element2', '32'), Call('UInt', [ArrayIndex(Var('Elem', '34'), [Var('operand2', '35'), Var('index', '36'), Var('esize', '37')], '38')], '39')), For(Var('e', '84'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), Call('UInt', [ArrayIndex(Var('Elem', '44'), [Var('operand1', '45'), Var('e', '46'), Var('esize', '47')], '48')], '49')), Update(Var('product', '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', Var('esize', '54'), Number(1), '55'), Number(0), '56')], '57')), IfElse(Var('sub_op', '58'), [Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), BinaryExpr('-', ArrayIndex(Var('Elem', '64'), [Var('operand3', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'), '70'))], [Update(ArrayIndex(Var('Elem', '71'), [Var('result', '72'), Var('e', '73'), Var('esize', '74')], '75'), BinaryExpr('+', ArrayIndex(Var('Elem', '76'), [Var('operand3', '77'), Var('e', '78'), Var('esize', '79')], '80'), Var('product', '81'), '82'))], '83')], 1, '85'), Update(ArrayIndex(Var('V', '86'), [Var('d', '87')], '88'), Var('result', '89'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='MLS Vd.4S,Vn.4S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 128, 'elements': 4, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_int'),
    'vmlsq_s16': ARMSema(intrin='vmlsq_s16', inst='MLS', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '26')], ('bits', Var('esize', '25')), '27'), VarsDecl([Var('element2', '29')], ('bits', Var('esize', '28')), '30'), VarsDecl([Var('product', '32')], ('bits', Var('esize', '31')), '33'), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')), Update(Var('element2', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '50')], '51'), Call('UInt', [Var('element2', '53')], '54'), '55'), [SliceRange(BinaryExpr('-', Var('esize', '56'), Number(1), '57'), Number(0), '58')], '59')), IfElse(Var('sub_op', '60'), [Update(ArrayIndex(Var('Elem', '61'), [Var('result', '62'), Var('e', '63'), Var('esize', '64')], '65'), BinaryExpr('-', ArrayIndex(Var('Elem', '66'), [Var('operand3', '67'), Var('e', '68'), Var('esize', '69')], '70'), Var('product', '71'), '72'))], [Update(ArrayIndex(Var('Elem', '73'), [Var('result', '74'), Var('e', '75'), Var('esize', '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('operand3', '79'), Var('e', '80'), Var('esize', '81')], '82'), Var('product', '83'), '84'))], '85')], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result', '91'))], rettype='int16x8_t', ret_is_signed=True, inst_form='MLS Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_accum'),
    'vmlsq_s32': ARMSema(intrin='vmlsq_s32', inst='MLS', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '26')], ('bits', Var('esize', '25')), '27'), VarsDecl([Var('element2', '29')], ('bits', Var('esize', '28')), '30'), VarsDecl([Var('product', '32')], ('bits', Var('esize', '31')), '33'), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')), Update(Var('element2', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '50')], '51'), Call('UInt', [Var('element2', '53')], '54'), '55'), [SliceRange(BinaryExpr('-', Var('esize', '56'), Number(1), '57'), Number(0), '58')], '59')), IfElse(Var('sub_op', '60'), [Update(ArrayIndex(Var('Elem', '61'), [Var('result', '62'), Var('e', '63'), Var('esize', '64')], '65'), BinaryExpr('-', ArrayIndex(Var('Elem', '66'), [Var('operand3', '67'), Var('e', '68'), Var('esize', '69')], '70'), Var('product', '71'), '72'))], [Update(ArrayIndex(Var('Elem', '73'), [Var('result', '74'), Var('e', '75'), Var('esize', '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('operand3', '79'), Var('e', '80'), Var('esize', '81')], '82'), Var('product', '83'), '84'))], '85')], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result', '91'))], rettype='int32x4_t', ret_is_signed=True, inst_form='MLS Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_accum'),
    'vmlsq_s8': ARMSema(intrin='vmlsq_s8', inst='MLS', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '26')], ('bits', Var('esize', '25')), '27'), VarsDecl([Var('element2', '29')], ('bits', Var('esize', '28')), '30'), VarsDecl([Var('product', '32')], ('bits', Var('esize', '31')), '33'), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')), Update(Var('element2', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '50')], '51'), Call('UInt', [Var('element2', '53')], '54'), '55'), [SliceRange(BinaryExpr('-', Var('esize', '56'), Number(1), '57'), Number(0), '58')], '59')), IfElse(Var('sub_op', '60'), [Update(ArrayIndex(Var('Elem', '61'), [Var('result', '62'), Var('e', '63'), Var('esize', '64')], '65'), BinaryExpr('-', ArrayIndex(Var('Elem', '66'), [Var('operand3', '67'), Var('e', '68'), Var('esize', '69')], '70'), Var('product', '71'), '72'))], [Update(ArrayIndex(Var('Elem', '73'), [Var('result', '74'), Var('e', '75'), Var('esize', '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('operand3', '79'), Var('e', '80'), Var('esize', '81')], '82'), Var('product', '83'), '84'))], '85')], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result', '91'))], rettype='int8x16_t', ret_is_signed=True, inst_form='MLS Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_accum'),
    'vmlsq_u16': ARMSema(intrin='vmlsq_u16', inst='MLS', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '26')], ('bits', Var('esize', '25')), '27'), VarsDecl([Var('element2', '29')], ('bits', Var('esize', '28')), '30'), VarsDecl([Var('product', '32')], ('bits', Var('esize', '31')), '33'), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')), Update(Var('element2', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '50')], '51'), Call('UInt', [Var('element2', '53')], '54'), '55'), [SliceRange(BinaryExpr('-', Var('esize', '56'), Number(1), '57'), Number(0), '58')], '59')), IfElse(Var('sub_op', '60'), [Update(ArrayIndex(Var('Elem', '61'), [Var('result', '62'), Var('e', '63'), Var('esize', '64')], '65'), BinaryExpr('-', ArrayIndex(Var('Elem', '66'), [Var('operand3', '67'), Var('e', '68'), Var('esize', '69')], '70'), Var('product', '71'), '72'))], [Update(ArrayIndex(Var('Elem', '73'), [Var('result', '74'), Var('e', '75'), Var('esize', '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('operand3', '79'), Var('e', '80'), Var('esize', '81')], '82'), Var('product', '83'), '84'))], '85')], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result', '91'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='MLS Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_accum'),
    'vmlsq_u32': ARMSema(intrin='vmlsq_u32', inst='MLS', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '26')], ('bits', Var('esize', '25')), '27'), VarsDecl([Var('element2', '29')], ('bits', Var('esize', '28')), '30'), VarsDecl([Var('product', '32')], ('bits', Var('esize', '31')), '33'), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')), Update(Var('element2', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '50')], '51'), Call('UInt', [Var('element2', '53')], '54'), '55'), [SliceRange(BinaryExpr('-', Var('esize', '56'), Number(1), '57'), Number(0), '58')], '59')), IfElse(Var('sub_op', '60'), [Update(ArrayIndex(Var('Elem', '61'), [Var('result', '62'), Var('e', '63'), Var('esize', '64')], '65'), BinaryExpr('-', ArrayIndex(Var('Elem', '66'), [Var('operand3', '67'), Var('e', '68'), Var('esize', '69')], '70'), Var('product', '71'), '72'))], [Update(ArrayIndex(Var('Elem', '73'), [Var('result', '74'), Var('e', '75'), Var('esize', '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('operand3', '79'), Var('e', '80'), Var('esize', '81')], '82'), Var('product', '83'), '84'))], '85')], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result', '91'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='MLS Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_accum'),
    'vmlsq_u8': ARMSema(intrin='vmlsq_u8', inst='MLS', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='c', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarDeclInit(VarsDecl([Var('operand3', '19')], ('bits', Var('datasize', '15')), '20'), ArrayIndex(Var('V', '16'), [Var('d', '17')], '18'), '21'), VarsDecl([Var('result', '23')], ('bits', Var('datasize', '22')), '24'), VarsDecl([Var('element1', '26')], ('bits', Var('esize', '25')), '27'), VarsDecl([Var('element2', '29')], ('bits', Var('esize', '28')), '30'), VarsDecl([Var('product', '32')], ('bits', Var('esize', '31')), '33'), For(Var('e', '86'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')), Update(Var('element2', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '50')], '51'), Call('UInt', [Var('element2', '53')], '54'), '55'), [SliceRange(BinaryExpr('-', Var('esize', '56'), Number(1), '57'), Number(0), '58')], '59')), IfElse(Var('sub_op', '60'), [Update(ArrayIndex(Var('Elem', '61'), [Var('result', '62'), Var('e', '63'), Var('esize', '64')], '65'), BinaryExpr('-', ArrayIndex(Var('Elem', '66'), [Var('operand3', '67'), Var('e', '68'), Var('esize', '69')], '70'), Var('product', '71'), '72'))], [Update(ArrayIndex(Var('Elem', '73'), [Var('result', '74'), Var('e', '75'), Var('esize', '76')], '77'), BinaryExpr('+', ArrayIndex(Var('Elem', '78'), [Var('operand3', '79'), Var('e', '80'), Var('esize', '81')], '82'), Var('product', '83'), '84'))], '85')], 1, '87'), Update(ArrayIndex(Var('V', '88'), [Var('d', '89')], '90'), Var('result', '91'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='MLS Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_accum'),
    'vmov_n_s16': ARMSema(intrin='vmov_n_s16', inst='DUP', params=[Parameter(name='value', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='int16x4_t', ret_is_signed=True, inst_form='DUP Vd.4H,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 1, 'esize': 16, 'datasize': 64, 'elements': 4}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vmov_n_s32': ARMSema(intrin='vmov_n_s32', inst='DUP', params=[Parameter(name='value', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='int32x2_t', ret_is_signed=True, inst_form='DUP Vd.2S,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 2, 'esize': 32, 'datasize': 64, 'elements': 2}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vmov_n_s8': ARMSema(intrin='vmov_n_s8', inst='DUP', params=[Parameter(name='value', type='int8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='int8x8_t', ret_is_signed=True, inst_form='DUP Vd.8B,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 0, 'esize': 8, 'datasize': 64, 'elements': 8}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vmov_n_u16': ARMSema(intrin='vmov_n_u16', inst='DUP', params=[Parameter(name='value', type='uint16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='DUP Vd.4H,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 1, 'esize': 16, 'datasize': 64, 'elements': 4}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vmov_n_u32': ARMSema(intrin='vmov_n_u32', inst='DUP', params=[Parameter(name='value', type='uint32_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='DUP Vd.2S,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 2, 'esize': 32, 'datasize': 64, 'elements': 2}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vmov_n_u8': ARMSema(intrin='vmov_n_u8', inst='DUP', params=[Parameter(name='value', type='uint8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='DUP Vd.8B,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 0, 'esize': 8, 'datasize': 64, 'elements': 8}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vmovl_high_s16': ARMSema(intrin='vmovl_high_s16', inst='SSHLL2', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarsDecl([Var('result', '11')], ('bits', BinaryExpr('*', Var('datasize', '9'), Number(2), '10')), '12'), VarsDecl([Var('element', '13')], ('integer', Number(64)), '14'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), ArrayIndex(Var('element', '34'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '35'), '36'), Number(1), '37'), Number(0), '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('V', '42'), [Var('d', '43')], '44'), Var('result', '45'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SSHLL2 Vd.4S,Vn.8H,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'shift': 0, 'unsigned': False}, belongs_to='aarch64_vector_shift_left_long'),
    'vmovl_high_s32': ARMSema(intrin='vmovl_high_s32', inst='SSHLL2', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarsDecl([Var('result', '11')], ('bits', BinaryExpr('*', Var('datasize', '9'), Number(2), '10')), '12'), VarsDecl([Var('element', '13')], ('integer', Number(64)), '14'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), ArrayIndex(Var('element', '34'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '35'), '36'), Number(1), '37'), Number(0), '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('V', '42'), [Var('d', '43')], '44'), Var('result', '45'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SSHLL2 Vd.2D,Vn.4S,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'shift': 0, 'unsigned': False}, belongs_to='aarch64_vector_shift_left_long'),
    'vmovl_high_s8': ARMSema(intrin='vmovl_high_s8', inst='SSHLL2', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarsDecl([Var('result', '11')], ('bits', BinaryExpr('*', Var('datasize', '9'), Number(2), '10')), '12'), VarsDecl([Var('element', '13')], ('integer', Number(64)), '14'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), ArrayIndex(Var('element', '34'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '35'), '36'), Number(1), '37'), Number(0), '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('V', '42'), [Var('d', '43')], '44'), Var('result', '45'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SSHLL2 Vd.8H,Vn.16B,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'shift': 0, 'unsigned': False}, belongs_to='aarch64_vector_shift_left_long'),
    'vmovl_high_u16': ARMSema(intrin='vmovl_high_u16', inst='USHLL2', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarsDecl([Var('result', '11')], ('bits', BinaryExpr('*', Var('datasize', '9'), Number(2), '10')), '12'), VarsDecl([Var('element', '13')], ('integer', Number(64)), '14'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), ArrayIndex(Var('element', '34'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '35'), '36'), Number(1), '37'), Number(0), '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('V', '42'), [Var('d', '43')], '44'), Var('result', '45'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='USHLL2 Vd.4S,Vn.8H,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'shift': 0, 'unsigned': True}, belongs_to='aarch64_vector_shift_left_long'),
    'vmovl_high_u32': ARMSema(intrin='vmovl_high_u32', inst='USHLL2', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarsDecl([Var('result', '11')], ('bits', BinaryExpr('*', Var('datasize', '9'), Number(2), '10')), '12'), VarsDecl([Var('element', '13')], ('integer', Number(64)), '14'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), ArrayIndex(Var('element', '34'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '35'), '36'), Number(1), '37'), Number(0), '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('V', '42'), [Var('d', '43')], '44'), Var('result', '45'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='USHLL2 Vd.2D,Vn.4S,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'shift': 0, 'unsigned': True}, belongs_to='aarch64_vector_shift_left_long'),
    'vmovl_high_u8': ARMSema(intrin='vmovl_high_u8', inst='USHLL2', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarsDecl([Var('result', '11')], ('bits', BinaryExpr('*', Var('datasize', '9'), Number(2), '10')), '12'), VarsDecl([Var('element', '13')], ('integer', Number(64)), '14'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), ArrayIndex(Var('element', '34'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '35'), '36'), Number(1), '37'), Number(0), '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('V', '42'), [Var('d', '43')], '44'), Var('result', '45'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='USHLL2 Vd.8H,Vn.16B,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'shift': 0, 'unsigned': True}, belongs_to='aarch64_vector_shift_left_long'),
    'vmovl_s16': ARMSema(intrin='vmovl_s16', inst='SSHLL', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarsDecl([Var('result', '11')], ('bits', BinaryExpr('*', Var('datasize', '9'), Number(2), '10')), '12'), VarsDecl([Var('element', '13')], ('integer', Number(64)), '14'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), ArrayIndex(Var('element', '34'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '35'), '36'), Number(1), '37'), Number(0), '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('V', '42'), [Var('d', '43')], '44'), Var('result', '45'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SSHLL Vd.4S,Vn.4H,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'shift': 0, 'unsigned': False}, belongs_to='aarch64_vector_shift_left_long'),
    'vmovl_s32': ARMSema(intrin='vmovl_s32', inst='SSHLL', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarsDecl([Var('result', '11')], ('bits', BinaryExpr('*', Var('datasize', '9'), Number(2), '10')), '12'), VarsDecl([Var('element', '13')], ('integer', Number(64)), '14'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), ArrayIndex(Var('element', '34'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '35'), '36'), Number(1), '37'), Number(0), '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('V', '42'), [Var('d', '43')], '44'), Var('result', '45'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SSHLL Vd.2D,Vn.2S,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'shift': 0, 'unsigned': False}, belongs_to='aarch64_vector_shift_left_long'),
    'vmovl_s8': ARMSema(intrin='vmovl_s8', inst='SSHLL', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarsDecl([Var('result', '11')], ('bits', BinaryExpr('*', Var('datasize', '9'), Number(2), '10')), '12'), VarsDecl([Var('element', '13')], ('integer', Number(64)), '14'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), ArrayIndex(Var('element', '34'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '35'), '36'), Number(1), '37'), Number(0), '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('V', '42'), [Var('d', '43')], '44'), Var('result', '45'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SSHLL Vd.8H,Vn.8B,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'shift': 0, 'unsigned': False}, belongs_to='aarch64_vector_shift_left_long'),
    'vmovl_u16': ARMSema(intrin='vmovl_u16', inst='USHLL', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarsDecl([Var('result', '11')], ('bits', BinaryExpr('*', Var('datasize', '9'), Number(2), '10')), '12'), VarsDecl([Var('element', '13')], ('integer', Number(64)), '14'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), ArrayIndex(Var('element', '34'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '35'), '36'), Number(1), '37'), Number(0), '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('V', '42'), [Var('d', '43')], '44'), Var('result', '45'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='USHLL Vd.4S,Vn.4H,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'shift': 0, 'unsigned': True}, belongs_to='aarch64_vector_shift_left_long'),
    'vmovl_u32': ARMSema(intrin='vmovl_u32', inst='USHLL', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarsDecl([Var('result', '11')], ('bits', BinaryExpr('*', Var('datasize', '9'), Number(2), '10')), '12'), VarsDecl([Var('element', '13')], ('integer', Number(64)), '14'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), ArrayIndex(Var('element', '34'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '35'), '36'), Number(1), '37'), Number(0), '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('V', '42'), [Var('d', '43')], '44'), Var('result', '45'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='USHLL Vd.2D,Vn.2S,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'shift': 0, 'unsigned': True}, belongs_to='aarch64_vector_shift_left_long'),
    'vmovl_u8': ARMSema(intrin='vmovl_u8', inst='USHLL', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarsDecl([Var('result', '11')], ('bits', BinaryExpr('*', Var('datasize', '9'), Number(2), '10')), '12'), VarsDecl([Var('element', '13')], ('integer', Number(64)), '14'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), ArrayIndex(Var('element', '34'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '35'), '36'), Number(1), '37'), Number(0), '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('V', '42'), [Var('d', '43')], '44'), Var('result', '45'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='USHLL Vd.8H,Vn.8B,#0', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'shift': 0, 'unsigned': True}, belongs_to='aarch64_vector_shift_left_long'),
    'vmovn_high_s16': ARMSema(intrin='vmovn_high_s16', inst='XTN2', params=[Parameter(name='r', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), For(Var('e', '35'), Number(0), BinaryExpr('-', Var('elements', '16'), Number(1), '17'), [Update(Var('element', '18'), ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), BinaryExpr('*', Number(2), Var('esize', '22'), '23')], '24')), Update(ArrayIndex(Var('Elem', '25'), [Var('result', '26'), Var('e', '27'), Var('esize', '28')], '29'), ArrayIndex(Var('element', '30'), [SliceRange(BinaryExpr('-', Var('esize', '31'), Number(1), '32'), Number(0), '33')], '34'))], 1, '36'), Update(ArrayIndex(Var('Vpart', '37'), [Var('d', '38'), Var('part', '39')], '40'), Var('result', '41'))], rettype='int8x16_t', ret_is_signed=True, inst_form='XTN2 Vd.16B,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8}, belongs_to='aarch64_vector_arithmetic_unary_extract_nosat'),
    'vmovn_high_s32': ARMSema(intrin='vmovn_high_s32', inst='XTN2', params=[Parameter(name='r', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), For(Var('e', '35'), Number(0), BinaryExpr('-', Var('elements', '16'), Number(1), '17'), [Update(Var('element', '18'), ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), BinaryExpr('*', Number(2), Var('esize', '22'), '23')], '24')), Update(ArrayIndex(Var('Elem', '25'), [Var('result', '26'), Var('e', '27'), Var('esize', '28')], '29'), ArrayIndex(Var('element', '30'), [SliceRange(BinaryExpr('-', Var('esize', '31'), Number(1), '32'), Number(0), '33')], '34'))], 1, '36'), Update(ArrayIndex(Var('Vpart', '37'), [Var('d', '38'), Var('part', '39')], '40'), Var('result', '41'))], rettype='int16x8_t', ret_is_signed=True, inst_form='XTN2 Vd.8H,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4}, belongs_to='aarch64_vector_arithmetic_unary_extract_nosat'),
    'vmovn_high_s64': ARMSema(intrin='vmovn_high_s64', inst='XTN2', params=[Parameter(name='r', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), For(Var('e', '35'), Number(0), BinaryExpr('-', Var('elements', '16'), Number(1), '17'), [Update(Var('element', '18'), ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), BinaryExpr('*', Number(2), Var('esize', '22'), '23')], '24')), Update(ArrayIndex(Var('Elem', '25'), [Var('result', '26'), Var('e', '27'), Var('esize', '28')], '29'), ArrayIndex(Var('element', '30'), [SliceRange(BinaryExpr('-', Var('esize', '31'), Number(1), '32'), Number(0), '33')], '34'))], 1, '36'), Update(ArrayIndex(Var('Vpart', '37'), [Var('d', '38'), Var('part', '39')], '40'), Var('result', '41'))], rettype='int32x4_t', ret_is_signed=True, inst_form='XTN2 Vd.4S,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2}, belongs_to='aarch64_vector_arithmetic_unary_extract_nosat'),
    'vmovn_high_u16': ARMSema(intrin='vmovn_high_u16', inst='XTN2', params=[Parameter(name='r', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), For(Var('e', '35'), Number(0), BinaryExpr('-', Var('elements', '16'), Number(1), '17'), [Update(Var('element', '18'), ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), BinaryExpr('*', Number(2), Var('esize', '22'), '23')], '24')), Update(ArrayIndex(Var('Elem', '25'), [Var('result', '26'), Var('e', '27'), Var('esize', '28')], '29'), ArrayIndex(Var('element', '30'), [SliceRange(BinaryExpr('-', Var('esize', '31'), Number(1), '32'), Number(0), '33')], '34'))], 1, '36'), Update(ArrayIndex(Var('Vpart', '37'), [Var('d', '38'), Var('part', '39')], '40'), Var('result', '41'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='XTN2 Vd.16B,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8}, belongs_to='aarch64_vector_arithmetic_unary_extract_nosat'),
    'vmovn_high_u32': ARMSema(intrin='vmovn_high_u32', inst='XTN2', params=[Parameter(name='r', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), For(Var('e', '35'), Number(0), BinaryExpr('-', Var('elements', '16'), Number(1), '17'), [Update(Var('element', '18'), ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), BinaryExpr('*', Number(2), Var('esize', '22'), '23')], '24')), Update(ArrayIndex(Var('Elem', '25'), [Var('result', '26'), Var('e', '27'), Var('esize', '28')], '29'), ArrayIndex(Var('element', '30'), [SliceRange(BinaryExpr('-', Var('esize', '31'), Number(1), '32'), Number(0), '33')], '34'))], 1, '36'), Update(ArrayIndex(Var('Vpart', '37'), [Var('d', '38'), Var('part', '39')], '40'), Var('result', '41'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='XTN2 Vd.8H,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4}, belongs_to='aarch64_vector_arithmetic_unary_extract_nosat'),
    'vmovn_high_u64': ARMSema(intrin='vmovn_high_u64', inst='XTN2', params=[Parameter(name='r', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), For(Var('e', '35'), Number(0), BinaryExpr('-', Var('elements', '16'), Number(1), '17'), [Update(Var('element', '18'), ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), BinaryExpr('*', Number(2), Var('esize', '22'), '23')], '24')), Update(ArrayIndex(Var('Elem', '25'), [Var('result', '26'), Var('e', '27'), Var('esize', '28')], '29'), ArrayIndex(Var('element', '30'), [SliceRange(BinaryExpr('-', Var('esize', '31'), Number(1), '32'), Number(0), '33')], '34'))], 1, '36'), Update(ArrayIndex(Var('Vpart', '37'), [Var('d', '38'), Var('part', '39')], '40'), Var('result', '41'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='XTN2 Vd.4S,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2}, belongs_to='aarch64_vector_arithmetic_unary_extract_nosat'),
    'vmovn_s16': ARMSema(intrin='vmovn_s16', inst='XTN', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), For(Var('e', '35'), Number(0), BinaryExpr('-', Var('elements', '16'), Number(1), '17'), [Update(Var('element', '18'), ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), BinaryExpr('*', Number(2), Var('esize', '22'), '23')], '24')), Update(ArrayIndex(Var('Elem', '25'), [Var('result', '26'), Var('e', '27'), Var('esize', '28')], '29'), ArrayIndex(Var('element', '30'), [SliceRange(BinaryExpr('-', Var('esize', '31'), Number(1), '32'), Number(0), '33')], '34'))], 1, '36'), Update(ArrayIndex(Var('Vpart', '37'), [Var('d', '38'), Var('part', '39')], '40'), Var('result', '41'))], rettype='int8x8_t', ret_is_signed=True, inst_form='XTN Vd.8B,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8}, belongs_to='aarch64_vector_arithmetic_unary_extract_nosat'),
    'vmovn_s32': ARMSema(intrin='vmovn_s32', inst='XTN', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), For(Var('e', '35'), Number(0), BinaryExpr('-', Var('elements', '16'), Number(1), '17'), [Update(Var('element', '18'), ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), BinaryExpr('*', Number(2), Var('esize', '22'), '23')], '24')), Update(ArrayIndex(Var('Elem', '25'), [Var('result', '26'), Var('e', '27'), Var('esize', '28')], '29'), ArrayIndex(Var('element', '30'), [SliceRange(BinaryExpr('-', Var('esize', '31'), Number(1), '32'), Number(0), '33')], '34'))], 1, '36'), Update(ArrayIndex(Var('Vpart', '37'), [Var('d', '38'), Var('part', '39')], '40'), Var('result', '41'))], rettype='int16x4_t', ret_is_signed=True, inst_form='XTN Vd.4H,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4}, belongs_to='aarch64_vector_arithmetic_unary_extract_nosat'),
    'vmovn_s64': ARMSema(intrin='vmovn_s64', inst='XTN', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), For(Var('e', '35'), Number(0), BinaryExpr('-', Var('elements', '16'), Number(1), '17'), [Update(Var('element', '18'), ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), BinaryExpr('*', Number(2), Var('esize', '22'), '23')], '24')), Update(ArrayIndex(Var('Elem', '25'), [Var('result', '26'), Var('e', '27'), Var('esize', '28')], '29'), ArrayIndex(Var('element', '30'), [SliceRange(BinaryExpr('-', Var('esize', '31'), Number(1), '32'), Number(0), '33')], '34'))], 1, '36'), Update(ArrayIndex(Var('Vpart', '37'), [Var('d', '38'), Var('part', '39')], '40'), Var('result', '41'))], rettype='int32x2_t', ret_is_signed=True, inst_form='XTN Vd.2S,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2}, belongs_to='aarch64_vector_arithmetic_unary_extract_nosat'),
    'vmovn_u16': ARMSema(intrin='vmovn_u16', inst='XTN', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), For(Var('e', '35'), Number(0), BinaryExpr('-', Var('elements', '16'), Number(1), '17'), [Update(Var('element', '18'), ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), BinaryExpr('*', Number(2), Var('esize', '22'), '23')], '24')), Update(ArrayIndex(Var('Elem', '25'), [Var('result', '26'), Var('e', '27'), Var('esize', '28')], '29'), ArrayIndex(Var('element', '30'), [SliceRange(BinaryExpr('-', Var('esize', '31'), Number(1), '32'), Number(0), '33')], '34'))], 1, '36'), Update(ArrayIndex(Var('Vpart', '37'), [Var('d', '38'), Var('part', '39')], '40'), Var('result', '41'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='XTN Vd.8B,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8}, belongs_to='aarch64_vector_arithmetic_unary_extract_nosat'),
    'vmovn_u32': ARMSema(intrin='vmovn_u32', inst='XTN', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), For(Var('e', '35'), Number(0), BinaryExpr('-', Var('elements', '16'), Number(1), '17'), [Update(Var('element', '18'), ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), BinaryExpr('*', Number(2), Var('esize', '22'), '23')], '24')), Update(ArrayIndex(Var('Elem', '25'), [Var('result', '26'), Var('e', '27'), Var('esize', '28')], '29'), ArrayIndex(Var('element', '30'), [SliceRange(BinaryExpr('-', Var('esize', '31'), Number(1), '32'), Number(0), '33')], '34'))], 1, '36'), Update(ArrayIndex(Var('Vpart', '37'), [Var('d', '38'), Var('part', '39')], '40'), Var('result', '41'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='XTN Vd.4H,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4}, belongs_to='aarch64_vector_arithmetic_unary_extract_nosat'),
    'vmovn_u64': ARMSema(intrin='vmovn_u64', inst='XTN', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), For(Var('e', '35'), Number(0), BinaryExpr('-', Var('elements', '16'), Number(1), '17'), [Update(Var('element', '18'), ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), BinaryExpr('*', Number(2), Var('esize', '22'), '23')], '24')), Update(ArrayIndex(Var('Elem', '25'), [Var('result', '26'), Var('e', '27'), Var('esize', '28')], '29'), ArrayIndex(Var('element', '30'), [SliceRange(BinaryExpr('-', Var('esize', '31'), Number(1), '32'), Number(0), '33')], '34'))], 1, '36'), Update(ArrayIndex(Var('Vpart', '37'), [Var('d', '38'), Var('part', '39')], '40'), Var('result', '41'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='XTN Vd.2S,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2}, belongs_to='aarch64_vector_arithmetic_unary_extract_nosat'),
    'vmovq_n_s16': ARMSema(intrin='vmovq_n_s16', inst='DUP', params=[Parameter(name='value', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='int16x8_t', ret_is_signed=True, inst_form='DUP Vd.8H,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 1, 'esize': 16, 'datasize': 128, 'elements': 8}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vmovq_n_s32': ARMSema(intrin='vmovq_n_s32', inst='DUP', params=[Parameter(name='value', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='int32x4_t', ret_is_signed=True, inst_form='DUP Vd.4S,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 2, 'esize': 32, 'datasize': 128, 'elements': 4}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vmovq_n_s64': ARMSema(intrin='vmovq_n_s64', inst='DUP', params=[Parameter(name='value', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='int64x2_t', ret_is_signed=True, inst_form='DUP Vd.2D,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 3, 'esize': 64, 'datasize': 128, 'elements': 2}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vmovq_n_s8': ARMSema(intrin='vmovq_n_s8', inst='DUP', params=[Parameter(name='value', type='int8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='int8x16_t', ret_is_signed=True, inst_form='DUP Vd.16B,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 0, 'esize': 8, 'datasize': 128, 'elements': 16}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vmovq_n_u16': ARMSema(intrin='vmovq_n_u16', inst='DUP', params=[Parameter(name='value', type='uint16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='DUP Vd.8H,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 1, 'esize': 16, 'datasize': 128, 'elements': 8}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vmovq_n_u32': ARMSema(intrin='vmovq_n_u32', inst='DUP', params=[Parameter(name='value', type='uint32_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='DUP Vd.4S,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 2, 'esize': 32, 'datasize': 128, 'elements': 4}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vmovq_n_u64': ARMSema(intrin='vmovq_n_u64', inst='DUP', params=[Parameter(name='value', type='uint64_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='DUP Vd.2D,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 3, 'esize': 64, 'datasize': 128, 'elements': 2}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vmovq_n_u8': ARMSema(intrin='vmovq_n_u8', inst='DUP', params=[Parameter(name='value', type='uint8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('element', '5')], ('bits', Var('esize', '1')), '6'), ArrayIndex(Var('X', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), For(Var('e', '19'), Number(0), BinaryExpr('-', Var('elements', '11'), Number(1), '12'), [Update(ArrayIndex(Var('Elem', '13'), [Var('result', '14'), Var('e', '15'), Var('esize', '16')], '17'), Var('element', '18'))], 1, '20'), Update(ArrayIndex(Var('V', '21'), [Var('d', '22')], '23'), Var('result', '24'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='DUP Vd.16B,rn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'value'}, resolving={'size': 0, 'esize': 8, 'datasize': 128, 'elements': 16}, belongs_to='aarch64_vector_transfer_integer_dup'),
    'vmul_n_s16': ARMSema(intrin='vmul_n_s16', inst='MUL', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('product', '23')], ('bits', Var('esize', '22')), '24'), Update(Var('element2', '25'), Call('UInt', [ArrayIndex(Var('Elem', '27'), [Var('operand2', '28'), Var('index', '29'), Var('esize', '30')], '31')], '32')), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('element1', '35'), Call('UInt', [ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')], '42')), Update(Var('product', '43'), ArrayIndex(BinaryExpr('*', Var('element1', '44'), Var('element2', '45'), '46'), [SliceRange(BinaryExpr('-', Var('esize', '47'), Number(1), '48'), Number(0), '49')], '50')), Update(ArrayIndex(Var('Elem', '51'), [Var('result', '52'), Var('e', '53'), Var('esize', '54')], '55'), Var('product', '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int16x4_t', ret_is_signed=True, inst_form='MUL Vd.4H,Vn.4H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'elements': 4}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_int'),
    'vmul_n_s32': ARMSema(intrin='vmul_n_s32', inst='MUL', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('product', '23')], ('bits', Var('esize', '22')), '24'), Update(Var('element2', '25'), Call('UInt', [ArrayIndex(Var('Elem', '27'), [Var('operand2', '28'), Var('index', '29'), Var('esize', '30')], '31')], '32')), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('element1', '35'), Call('UInt', [ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')], '42')), Update(Var('product', '43'), ArrayIndex(BinaryExpr('*', Var('element1', '44'), Var('element2', '45'), '46'), [SliceRange(BinaryExpr('-', Var('esize', '47'), Number(1), '48'), Number(0), '49')], '50')), Update(ArrayIndex(Var('Elem', '51'), [Var('result', '52'), Var('e', '53'), Var('esize', '54')], '55'), Var('product', '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int32x2_t', ret_is_signed=True, inst_form='MUL Vd.2S,Vn.2S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'elements': 2}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_int'),
    'vmul_n_u16': ARMSema(intrin='vmul_n_u16', inst='MUL', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('product', '23')], ('bits', Var('esize', '22')), '24'), Update(Var('element2', '25'), Call('UInt', [ArrayIndex(Var('Elem', '27'), [Var('operand2', '28'), Var('index', '29'), Var('esize', '30')], '31')], '32')), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('element1', '35'), Call('UInt', [ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')], '42')), Update(Var('product', '43'), ArrayIndex(BinaryExpr('*', Var('element1', '44'), Var('element2', '45'), '46'), [SliceRange(BinaryExpr('-', Var('esize', '47'), Number(1), '48'), Number(0), '49')], '50')), Update(ArrayIndex(Var('Elem', '51'), [Var('result', '52'), Var('e', '53'), Var('esize', '54')], '55'), Var('product', '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='MUL Vd.4H,Vn.4H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'elements': 4}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_int'),
    'vmul_n_u32': ARMSema(intrin='vmul_n_u32', inst='MUL', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('product', '23')], ('bits', Var('esize', '22')), '24'), Update(Var('element2', '25'), Call('UInt', [ArrayIndex(Var('Elem', '27'), [Var('operand2', '28'), Var('index', '29'), Var('esize', '30')], '31')], '32')), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('element1', '35'), Call('UInt', [ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')], '42')), Update(Var('product', '43'), ArrayIndex(BinaryExpr('*', Var('element1', '44'), Var('element2', '45'), '46'), [SliceRange(BinaryExpr('-', Var('esize', '47'), Number(1), '48'), Number(0), '49')], '50')), Update(ArrayIndex(Var('Elem', '51'), [Var('result', '52'), Var('e', '53'), Var('esize', '54')], '55'), Var('product', '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='MUL Vd.2S,Vn.2S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'elements': 2}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_int'),
    'vmul_s16': ARMSema(intrin='vmul_s16', inst='MUL', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('product', '25')], ('bits', Var('esize', '24')), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34')), Update(Var('element2', '35'), ArrayIndex(Var('Elem', '36'), [Var('operand2', '37'), Var('e', '38'), Var('esize', '39')], '40')), IfElse(Var('poly', '41'), [Update(Var('product', '42'), ArrayIndex(Call('PolynomialMult', [Var('element1', '44'), Var('element2', '45')], '46'), [SliceRange(BinaryExpr('-', Var('esize', '47'), Number(1), '48'), Number(0), '49')], '50'))], [Update(Var('product', '51'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '53')], '54'), Call('UInt', [Var('element2', '56')], '57'), '58'), [SliceRange(BinaryExpr('-', Var('esize', '59'), Number(1), '60'), Number(0), '61')], '62'))], '63'), Update(ArrayIndex(Var('Elem', '64'), [Var('result', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int16x4_t', ret_is_signed=True, inst_form='MUL Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'poly': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_product'),
    'vmul_s32': ARMSema(intrin='vmul_s32', inst='MUL', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('product', '25')], ('bits', Var('esize', '24')), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34')), Update(Var('element2', '35'), ArrayIndex(Var('Elem', '36'), [Var('operand2', '37'), Var('e', '38'), Var('esize', '39')], '40')), IfElse(Var('poly', '41'), [Update(Var('product', '42'), ArrayIndex(Call('PolynomialMult', [Var('element1', '44'), Var('element2', '45')], '46'), [SliceRange(BinaryExpr('-', Var('esize', '47'), Number(1), '48'), Number(0), '49')], '50'))], [Update(Var('product', '51'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '53')], '54'), Call('UInt', [Var('element2', '56')], '57'), '58'), [SliceRange(BinaryExpr('-', Var('esize', '59'), Number(1), '60'), Number(0), '61')], '62'))], '63'), Update(ArrayIndex(Var('Elem', '64'), [Var('result', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int32x2_t', ret_is_signed=True, inst_form='MUL Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'poly': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_product'),
    'vmul_s8': ARMSema(intrin='vmul_s8', inst='MUL', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('product', '25')], ('bits', Var('esize', '24')), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34')), Update(Var('element2', '35'), ArrayIndex(Var('Elem', '36'), [Var('operand2', '37'), Var('e', '38'), Var('esize', '39')], '40')), IfElse(Var('poly', '41'), [Update(Var('product', '42'), ArrayIndex(Call('PolynomialMult', [Var('element1', '44'), Var('element2', '45')], '46'), [SliceRange(BinaryExpr('-', Var('esize', '47'), Number(1), '48'), Number(0), '49')], '50'))], [Update(Var('product', '51'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '53')], '54'), Call('UInt', [Var('element2', '56')], '57'), '58'), [SliceRange(BinaryExpr('-', Var('esize', '59'), Number(1), '60'), Number(0), '61')], '62'))], '63'), Update(ArrayIndex(Var('Elem', '64'), [Var('result', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int8x8_t', ret_is_signed=True, inst_form='MUL Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'poly': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_product'),
    'vmul_u16': ARMSema(intrin='vmul_u16', inst='MUL', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('product', '25')], ('bits', Var('esize', '24')), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34')), Update(Var('element2', '35'), ArrayIndex(Var('Elem', '36'), [Var('operand2', '37'), Var('e', '38'), Var('esize', '39')], '40')), IfElse(Var('poly', '41'), [Update(Var('product', '42'), ArrayIndex(Call('PolynomialMult', [Var('element1', '44'), Var('element2', '45')], '46'), [SliceRange(BinaryExpr('-', Var('esize', '47'), Number(1), '48'), Number(0), '49')], '50'))], [Update(Var('product', '51'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '53')], '54'), Call('UInt', [Var('element2', '56')], '57'), '58'), [SliceRange(BinaryExpr('-', Var('esize', '59'), Number(1), '60'), Number(0), '61')], '62'))], '63'), Update(ArrayIndex(Var('Elem', '64'), [Var('result', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='MUL Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'poly': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_product'),
    'vmul_u32': ARMSema(intrin='vmul_u32', inst='MUL', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('product', '25')], ('bits', Var('esize', '24')), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34')), Update(Var('element2', '35'), ArrayIndex(Var('Elem', '36'), [Var('operand2', '37'), Var('e', '38'), Var('esize', '39')], '40')), IfElse(Var('poly', '41'), [Update(Var('product', '42'), ArrayIndex(Call('PolynomialMult', [Var('element1', '44'), Var('element2', '45')], '46'), [SliceRange(BinaryExpr('-', Var('esize', '47'), Number(1), '48'), Number(0), '49')], '50'))], [Update(Var('product', '51'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '53')], '54'), Call('UInt', [Var('element2', '56')], '57'), '58'), [SliceRange(BinaryExpr('-', Var('esize', '59'), Number(1), '60'), Number(0), '61')], '62'))], '63'), Update(ArrayIndex(Var('Elem', '64'), [Var('result', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='MUL Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'poly': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_product'),
    'vmul_u8': ARMSema(intrin='vmul_u8', inst='MUL', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('product', '25')], ('bits', Var('esize', '24')), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34')), Update(Var('element2', '35'), ArrayIndex(Var('Elem', '36'), [Var('operand2', '37'), Var('e', '38'), Var('esize', '39')], '40')), IfElse(Var('poly', '41'), [Update(Var('product', '42'), ArrayIndex(Call('PolynomialMult', [Var('element1', '44'), Var('element2', '45')], '46'), [SliceRange(BinaryExpr('-', Var('esize', '47'), Number(1), '48'), Number(0), '49')], '50'))], [Update(Var('product', '51'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '53')], '54'), Call('UInt', [Var('element2', '56')], '57'), '58'), [SliceRange(BinaryExpr('-', Var('esize', '59'), Number(1), '60'), Number(0), '61')], '62'))], '63'), Update(ArrayIndex(Var('Elem', '64'), [Var('result', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='MUL Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'poly': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_product'),
    'vmull_high_n_s16': ARMSema(intrin='vmull_high_n_s16', inst='SMULL2', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarsDecl([Var('result', '18')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '19'), VarsDecl([Var('element1', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('element2', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('product', '26')], ('bits', BinaryExpr('*', Number(2), Var('esize', '24'), '25')), '27'), Update(Var('element2', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand2', '31'), Var('index', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '37'), Number(1), '38'), [Update(Var('element1', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand1', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Var('element1', '49'), Var('element2', '50'), '51'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '52'), '53'), Number(1), '54'), Number(0), '55')], '56')), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), Var('product', '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SMULL2 Vd.4S,Vn.8H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_long'),
    'vmull_high_n_s32': ARMSema(intrin='vmull_high_n_s32', inst='SMULL2', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarsDecl([Var('result', '18')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '19'), VarsDecl([Var('element1', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('element2', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('product', '26')], ('bits', BinaryExpr('*', Number(2), Var('esize', '24'), '25')), '27'), Update(Var('element2', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand2', '31'), Var('index', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '37'), Number(1), '38'), [Update(Var('element1', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand1', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Var('element1', '49'), Var('element2', '50'), '51'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '52'), '53'), Number(1), '54'), Number(0), '55')], '56')), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), Var('product', '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SMULL2 Vd.2D,Vn.4S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_long'),
    'vmull_high_n_u16': ARMSema(intrin='vmull_high_n_u16', inst='UMULL2', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarsDecl([Var('result', '18')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '19'), VarsDecl([Var('element1', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('element2', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('product', '26')], ('bits', BinaryExpr('*', Number(2), Var('esize', '24'), '25')), '27'), Update(Var('element2', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand2', '31'), Var('index', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '37'), Number(1), '38'), [Update(Var('element1', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand1', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Var('element1', '49'), Var('element2', '50'), '51'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '52'), '53'), Number(1), '54'), Number(0), '55')], '56')), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), Var('product', '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UMULL2 Vd.4S,Vn.8H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_long'),
    'vmull_high_n_u32': ARMSema(intrin='vmull_high_n_u32', inst='UMULL2', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarsDecl([Var('result', '18')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '19'), VarsDecl([Var('element1', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('element2', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('product', '26')], ('bits', BinaryExpr('*', Number(2), Var('esize', '24'), '25')), '27'), Update(Var('element2', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand2', '31'), Var('index', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '37'), Number(1), '38'), [Update(Var('element1', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand1', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Var('element1', '49'), Var('element2', '50'), '51'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '52'), '53'), Number(1), '54'), Number(0), '55')], '56')), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), Var('product', '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UMULL2 Vd.2D,Vn.4S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_long'),
    'vmull_high_s16': ARMSema(intrin='vmull_high_s16', inst='SMULL2', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), For(Var('e', '59'), Number(0), BinaryExpr('-', Var('elements', '25'), Number(1), '26'), [Update(Var('element1', '27'), Call('Int', [ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33'), Var('unsigned', '34')], '35')), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), BinaryExpr('*', Number(2), Var('esize', '48'), '49')], '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '54'), '55'), Number(1), '56'), Number(0), '57')], '58'))], 1, '60'), Update(ArrayIndex(Var('V', '61'), [Var('d', '62')], '63'), Var('result', '64'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SMULL2 Vd.4S,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_product'),
    'vmull_high_s32': ARMSema(intrin='vmull_high_s32', inst='SMULL2', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), For(Var('e', '59'), Number(0), BinaryExpr('-', Var('elements', '25'), Number(1), '26'), [Update(Var('element1', '27'), Call('Int', [ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33'), Var('unsigned', '34')], '35')), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), BinaryExpr('*', Number(2), Var('esize', '48'), '49')], '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '54'), '55'), Number(1), '56'), Number(0), '57')], '58'))], 1, '60'), Update(ArrayIndex(Var('V', '61'), [Var('d', '62')], '63'), Var('result', '64'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SMULL2 Vd.2D,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_product'),
    'vmull_high_s8': ARMSema(intrin='vmull_high_s8', inst='SMULL2', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), For(Var('e', '59'), Number(0), BinaryExpr('-', Var('elements', '25'), Number(1), '26'), [Update(Var('element1', '27'), Call('Int', [ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33'), Var('unsigned', '34')], '35')), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), BinaryExpr('*', Number(2), Var('esize', '48'), '49')], '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '54'), '55'), Number(1), '56'), Number(0), '57')], '58'))], 1, '60'), Update(ArrayIndex(Var('V', '61'), [Var('d', '62')], '63'), Var('result', '64'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SMULL2 Vd.8H,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_product'),
    'vmull_high_u16': ARMSema(intrin='vmull_high_u16', inst='UMULL2', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), For(Var('e', '59'), Number(0), BinaryExpr('-', Var('elements', '25'), Number(1), '26'), [Update(Var('element1', '27'), Call('Int', [ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33'), Var('unsigned', '34')], '35')), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), BinaryExpr('*', Number(2), Var('esize', '48'), '49')], '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '54'), '55'), Number(1), '56'), Number(0), '57')], '58'))], 1, '60'), Update(ArrayIndex(Var('V', '61'), [Var('d', '62')], '63'), Var('result', '64'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UMULL2 Vd.4S,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_product'),
    'vmull_high_u32': ARMSema(intrin='vmull_high_u32', inst='UMULL2', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), For(Var('e', '59'), Number(0), BinaryExpr('-', Var('elements', '25'), Number(1), '26'), [Update(Var('element1', '27'), Call('Int', [ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33'), Var('unsigned', '34')], '35')), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), BinaryExpr('*', Number(2), Var('esize', '48'), '49')], '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '54'), '55'), Number(1), '56'), Number(0), '57')], '58'))], 1, '60'), Update(ArrayIndex(Var('V', '61'), [Var('d', '62')], '63'), Var('result', '64'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UMULL2 Vd.2D,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_product'),
    'vmull_high_u8': ARMSema(intrin='vmull_high_u8', inst='UMULL2', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), For(Var('e', '59'), Number(0), BinaryExpr('-', Var('elements', '25'), Number(1), '26'), [Update(Var('element1', '27'), Call('Int', [ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33'), Var('unsigned', '34')], '35')), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), BinaryExpr('*', Number(2), Var('esize', '48'), '49')], '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '54'), '55'), Number(1), '56'), Number(0), '57')], '58'))], 1, '60'), Update(ArrayIndex(Var('V', '61'), [Var('d', '62')], '63'), Var('result', '64'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UMULL2 Vd.8H,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_product'),
    'vmull_n_s16': ARMSema(intrin='vmull_n_s16', inst='SMULL', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarsDecl([Var('result', '18')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '19'), VarsDecl([Var('element1', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('element2', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('product', '26')], ('bits', BinaryExpr('*', Number(2), Var('esize', '24'), '25')), '27'), Update(Var('element2', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand2', '31'), Var('index', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '37'), Number(1), '38'), [Update(Var('element1', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand1', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Var('element1', '49'), Var('element2', '50'), '51'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '52'), '53'), Number(1), '54'), Number(0), '55')], '56')), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), Var('product', '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SMULL Vd.4S,Vn.4H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_long'),
    'vmull_n_s32': ARMSema(intrin='vmull_n_s32', inst='SMULL', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarsDecl([Var('result', '18')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '19'), VarsDecl([Var('element1', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('element2', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('product', '26')], ('bits', BinaryExpr('*', Number(2), Var('esize', '24'), '25')), '27'), Update(Var('element2', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand2', '31'), Var('index', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '37'), Number(1), '38'), [Update(Var('element1', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand1', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Var('element1', '49'), Var('element2', '50'), '51'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '52'), '53'), Number(1), '54'), Number(0), '55')], '56')), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), Var('product', '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SMULL Vd.2D,Vn.2S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_long'),
    'vmull_n_u16': ARMSema(intrin='vmull_n_u16', inst='UMULL', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarsDecl([Var('result', '18')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '19'), VarsDecl([Var('element1', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('element2', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('product', '26')], ('bits', BinaryExpr('*', Number(2), Var('esize', '24'), '25')), '27'), Update(Var('element2', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand2', '31'), Var('index', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '37'), Number(1), '38'), [Update(Var('element1', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand1', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Var('element1', '49'), Var('element2', '50'), '51'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '52'), '53'), Number(1), '54'), Number(0), '55')], '56')), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), Var('product', '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UMULL Vd.4S,Vn.4H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_long'),
    'vmull_n_u32': ARMSema(intrin='vmull_n_u32', inst='UMULL', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarsDecl([Var('result', '18')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '19'), VarsDecl([Var('element1', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('element2', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('product', '26')], ('bits', BinaryExpr('*', Number(2), Var('esize', '24'), '25')), '27'), Update(Var('element2', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand2', '31'), Var('index', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '37'), Number(1), '38'), [Update(Var('element1', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand1', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), Update(Var('product', '48'), ArrayIndex(BinaryExpr('*', Var('element1', '49'), Var('element2', '50'), '51'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '52'), '53'), Number(1), '54'), Number(0), '55')], '56')), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), Var('product', '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UMULL Vd.2D,Vn.2S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_long'),
    'vmull_s16': ARMSema(intrin='vmull_s16', inst='SMULL', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), For(Var('e', '59'), Number(0), BinaryExpr('-', Var('elements', '25'), Number(1), '26'), [Update(Var('element1', '27'), Call('Int', [ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33'), Var('unsigned', '34')], '35')), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), BinaryExpr('*', Number(2), Var('esize', '48'), '49')], '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '54'), '55'), Number(1), '56'), Number(0), '57')], '58'))], 1, '60'), Update(ArrayIndex(Var('V', '61'), [Var('d', '62')], '63'), Var('result', '64'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SMULL Vd.4S,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_product'),
    'vmull_s32': ARMSema(intrin='vmull_s32', inst='SMULL', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), For(Var('e', '59'), Number(0), BinaryExpr('-', Var('elements', '25'), Number(1), '26'), [Update(Var('element1', '27'), Call('Int', [ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33'), Var('unsigned', '34')], '35')), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), BinaryExpr('*', Number(2), Var('esize', '48'), '49')], '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '54'), '55'), Number(1), '56'), Number(0), '57')], '58'))], 1, '60'), Update(ArrayIndex(Var('V', '61'), [Var('d', '62')], '63'), Var('result', '64'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SMULL Vd.2D,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_product'),
    'vmull_s8': ARMSema(intrin='vmull_s8', inst='SMULL', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), For(Var('e', '59'), Number(0), BinaryExpr('-', Var('elements', '25'), Number(1), '26'), [Update(Var('element1', '27'), Call('Int', [ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33'), Var('unsigned', '34')], '35')), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), BinaryExpr('*', Number(2), Var('esize', '48'), '49')], '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '54'), '55'), Number(1), '56'), Number(0), '57')], '58'))], 1, '60'), Update(ArrayIndex(Var('V', '61'), [Var('d', '62')], '63'), Var('result', '64'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SMULL Vd.8H,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_product'),
    'vmull_u16': ARMSema(intrin='vmull_u16', inst='UMULL', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), For(Var('e', '59'), Number(0), BinaryExpr('-', Var('elements', '25'), Number(1), '26'), [Update(Var('element1', '27'), Call('Int', [ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33'), Var('unsigned', '34')], '35')), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), BinaryExpr('*', Number(2), Var('esize', '48'), '49')], '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '54'), '55'), Number(1), '56'), Number(0), '57')], '58'))], 1, '60'), Update(ArrayIndex(Var('V', '61'), [Var('d', '62')], '63'), Var('result', '64'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UMULL Vd.4S,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_product'),
    'vmull_u32': ARMSema(intrin='vmull_u32', inst='UMULL', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), For(Var('e', '59'), Number(0), BinaryExpr('-', Var('elements', '25'), Number(1), '26'), [Update(Var('element1', '27'), Call('Int', [ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33'), Var('unsigned', '34')], '35')), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), BinaryExpr('*', Number(2), Var('esize', '48'), '49')], '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '54'), '55'), Number(1), '56'), Number(0), '57')], '58'))], 1, '60'), Update(ArrayIndex(Var('V', '61'), [Var('d', '62')], '63'), Var('result', '64'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UMULL Vd.2D,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_product'),
    'vmull_u8': ARMSema(intrin='vmull_u8', inst='UMULL', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), For(Var('e', '59'), Number(0), BinaryExpr('-', Var('elements', '25'), Number(1), '26'), [Update(Var('element1', '27'), Call('Int', [ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33'), Var('unsigned', '34')], '35')), Update(Var('element2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), BinaryExpr('*', Number(2), Var('esize', '48'), '49')], '50'), ArrayIndex(BinaryExpr('*', Var('element1', '51'), Var('element2', '52'), '53'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '54'), '55'), Number(1), '56'), Number(0), '57')], '58'))], 1, '60'), Update(ArrayIndex(Var('V', '61'), [Var('d', '62')], '63'), Var('result', '64'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UMULL Vd.8H,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_product'),
    'vmulq_n_s16': ARMSema(intrin='vmulq_n_s16', inst='MUL', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('product', '23')], ('bits', Var('esize', '22')), '24'), Update(Var('element2', '25'), Call('UInt', [ArrayIndex(Var('Elem', '27'), [Var('operand2', '28'), Var('index', '29'), Var('esize', '30')], '31')], '32')), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('element1', '35'), Call('UInt', [ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')], '42')), Update(Var('product', '43'), ArrayIndex(BinaryExpr('*', Var('element1', '44'), Var('element2', '45'), '46'), [SliceRange(BinaryExpr('-', Var('esize', '47'), Number(1), '48'), Number(0), '49')], '50')), Update(ArrayIndex(Var('Elem', '51'), [Var('result', '52'), Var('e', '53'), Var('esize', '54')], '55'), Var('product', '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int16x8_t', ret_is_signed=True, inst_form='MUL Vd.8H,Vn.8H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 128, 'elements': 8}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_int'),
    'vmulq_n_s32': ARMSema(intrin='vmulq_n_s32', inst='MUL', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('product', '23')], ('bits', Var('esize', '22')), '24'), Update(Var('element2', '25'), Call('UInt', [ArrayIndex(Var('Elem', '27'), [Var('operand2', '28'), Var('index', '29'), Var('esize', '30')], '31')], '32')), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('element1', '35'), Call('UInt', [ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')], '42')), Update(Var('product', '43'), ArrayIndex(BinaryExpr('*', Var('element1', '44'), Var('element2', '45'), '46'), [SliceRange(BinaryExpr('-', Var('esize', '47'), Number(1), '48'), Number(0), '49')], '50')), Update(ArrayIndex(Var('Elem', '51'), [Var('result', '52'), Var('e', '53'), Var('esize', '54')], '55'), Var('product', '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int32x4_t', ret_is_signed=True, inst_form='MUL Vd.4S,Vn.4S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 128, 'elements': 4}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_int'),
    'vmulq_n_u16': ARMSema(intrin='vmulq_n_u16', inst='MUL', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('product', '23')], ('bits', Var('esize', '22')), '24'), Update(Var('element2', '25'), Call('UInt', [ArrayIndex(Var('Elem', '27'), [Var('operand2', '28'), Var('index', '29'), Var('esize', '30')], '31')], '32')), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('element1', '35'), Call('UInt', [ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')], '42')), Update(Var('product', '43'), ArrayIndex(BinaryExpr('*', Var('element1', '44'), Var('element2', '45'), '46'), [SliceRange(BinaryExpr('-', Var('esize', '47'), Number(1), '48'), Number(0), '49')], '50')), Update(ArrayIndex(Var('Elem', '51'), [Var('result', '52'), Var('e', '53'), Var('esize', '54')], '55'), Var('product', '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='MUL Vd.8H,Vn.8H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 128, 'elements': 8}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_int'),
    'vmulq_n_u32': ARMSema(intrin='vmulq_n_u32', inst='MUL', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('product', '23')], ('bits', Var('esize', '22')), '24'), Update(Var('element2', '25'), Call('UInt', [ArrayIndex(Var('Elem', '27'), [Var('operand2', '28'), Var('index', '29'), Var('esize', '30')], '31')], '32')), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('element1', '35'), Call('UInt', [ArrayIndex(Var('Elem', '37'), [Var('operand1', '38'), Var('e', '39'), Var('esize', '40')], '41')], '42')), Update(Var('product', '43'), ArrayIndex(BinaryExpr('*', Var('element1', '44'), Var('element2', '45'), '46'), [SliceRange(BinaryExpr('-', Var('esize', '47'), Number(1), '48'), Number(0), '49')], '50')), Update(ArrayIndex(Var('Elem', '51'), [Var('result', '52'), Var('e', '53'), Var('esize', '54')], '55'), Var('product', '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='MUL Vd.4S,Vn.4S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 128, 'elements': 4}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_int'),
    'vmulq_s16': ARMSema(intrin='vmulq_s16', inst='MUL', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('product', '25')], ('bits', Var('esize', '24')), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34')), Update(Var('element2', '35'), ArrayIndex(Var('Elem', '36'), [Var('operand2', '37'), Var('e', '38'), Var('esize', '39')], '40')), IfElse(Var('poly', '41'), [Update(Var('product', '42'), ArrayIndex(Call('PolynomialMult', [Var('element1', '44'), Var('element2', '45')], '46'), [SliceRange(BinaryExpr('-', Var('esize', '47'), Number(1), '48'), Number(0), '49')], '50'))], [Update(Var('product', '51'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '53')], '54'), Call('UInt', [Var('element2', '56')], '57'), '58'), [SliceRange(BinaryExpr('-', Var('esize', '59'), Number(1), '60'), Number(0), '61')], '62'))], '63'), Update(ArrayIndex(Var('Elem', '64'), [Var('result', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int16x8_t', ret_is_signed=True, inst_form='MUL Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'poly': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_product'),
    'vmulq_s32': ARMSema(intrin='vmulq_s32', inst='MUL', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('product', '25')], ('bits', Var('esize', '24')), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34')), Update(Var('element2', '35'), ArrayIndex(Var('Elem', '36'), [Var('operand2', '37'), Var('e', '38'), Var('esize', '39')], '40')), IfElse(Var('poly', '41'), [Update(Var('product', '42'), ArrayIndex(Call('PolynomialMult', [Var('element1', '44'), Var('element2', '45')], '46'), [SliceRange(BinaryExpr('-', Var('esize', '47'), Number(1), '48'), Number(0), '49')], '50'))], [Update(Var('product', '51'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '53')], '54'), Call('UInt', [Var('element2', '56')], '57'), '58'), [SliceRange(BinaryExpr('-', Var('esize', '59'), Number(1), '60'), Number(0), '61')], '62'))], '63'), Update(ArrayIndex(Var('Elem', '64'), [Var('result', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int32x4_t', ret_is_signed=True, inst_form='MUL Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'poly': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_product'),
    'vmulq_s8': ARMSema(intrin='vmulq_s8', inst='MUL', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('product', '25')], ('bits', Var('esize', '24')), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34')), Update(Var('element2', '35'), ArrayIndex(Var('Elem', '36'), [Var('operand2', '37'), Var('e', '38'), Var('esize', '39')], '40')), IfElse(Var('poly', '41'), [Update(Var('product', '42'), ArrayIndex(Call('PolynomialMult', [Var('element1', '44'), Var('element2', '45')], '46'), [SliceRange(BinaryExpr('-', Var('esize', '47'), Number(1), '48'), Number(0), '49')], '50'))], [Update(Var('product', '51'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '53')], '54'), Call('UInt', [Var('element2', '56')], '57'), '58'), [SliceRange(BinaryExpr('-', Var('esize', '59'), Number(1), '60'), Number(0), '61')], '62'))], '63'), Update(ArrayIndex(Var('Elem', '64'), [Var('result', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int8x16_t', ret_is_signed=True, inst_form='MUL Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'poly': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_product'),
    'vmulq_u16': ARMSema(intrin='vmulq_u16', inst='MUL', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('product', '25')], ('bits', Var('esize', '24')), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34')), Update(Var('element2', '35'), ArrayIndex(Var('Elem', '36'), [Var('operand2', '37'), Var('e', '38'), Var('esize', '39')], '40')), IfElse(Var('poly', '41'), [Update(Var('product', '42'), ArrayIndex(Call('PolynomialMult', [Var('element1', '44'), Var('element2', '45')], '46'), [SliceRange(BinaryExpr('-', Var('esize', '47'), Number(1), '48'), Number(0), '49')], '50'))], [Update(Var('product', '51'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '53')], '54'), Call('UInt', [Var('element2', '56')], '57'), '58'), [SliceRange(BinaryExpr('-', Var('esize', '59'), Number(1), '60'), Number(0), '61')], '62'))], '63'), Update(ArrayIndex(Var('Elem', '64'), [Var('result', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='MUL Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'poly': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_product'),
    'vmulq_u32': ARMSema(intrin='vmulq_u32', inst='MUL', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('product', '25')], ('bits', Var('esize', '24')), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34')), Update(Var('element2', '35'), ArrayIndex(Var('Elem', '36'), [Var('operand2', '37'), Var('e', '38'), Var('esize', '39')], '40')), IfElse(Var('poly', '41'), [Update(Var('product', '42'), ArrayIndex(Call('PolynomialMult', [Var('element1', '44'), Var('element2', '45')], '46'), [SliceRange(BinaryExpr('-', Var('esize', '47'), Number(1), '48'), Number(0), '49')], '50'))], [Update(Var('product', '51'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '53')], '54'), Call('UInt', [Var('element2', '56')], '57'), '58'), [SliceRange(BinaryExpr('-', Var('esize', '59'), Number(1), '60'), Number(0), '61')], '62'))], '63'), Update(ArrayIndex(Var('Elem', '64'), [Var('result', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='MUL Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'poly': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_product'),
    'vmulq_u8': ARMSema(intrin='vmulq_u8', inst='MUL', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('product', '25')], ('bits', Var('esize', '24')), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34')), Update(Var('element2', '35'), ArrayIndex(Var('Elem', '36'), [Var('operand2', '37'), Var('e', '38'), Var('esize', '39')], '40')), IfElse(Var('poly', '41'), [Update(Var('product', '42'), ArrayIndex(Call('PolynomialMult', [Var('element1', '44'), Var('element2', '45')], '46'), [SliceRange(BinaryExpr('-', Var('esize', '47'), Number(1), '48'), Number(0), '49')], '50'))], [Update(Var('product', '51'), ArrayIndex(BinaryExpr('*', Call('UInt', [Var('element1', '53')], '54'), Call('UInt', [Var('element2', '56')], '57'), '58'), [SliceRange(BinaryExpr('-', Var('esize', '59'), Number(1), '60'), Number(0), '61')], '62'))], '63'), Update(ArrayIndex(Var('Elem', '64'), [Var('result', '65'), Var('e', '66'), Var('esize', '67')], '68'), Var('product', '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='MUL Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'poly': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_product'),
    'vmvn_s16': ARMSema(intrin='vmvn_s16', inst='MVN', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '12')], ('bits', Var('esize', '11')), '13'), For(Var('e', '30'), Number(0), BinaryExpr('-', Var('elements', '14'), Number(1), '15'), [Update(Var('element', '16'), ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')), Update(ArrayIndex(Var('Elem', '22'), [Var('result', '23'), Var('e', '24'), Var('esize', '25')], '26'), Call('NOT', [Var('element', '28')], '29'))], 1, '31'), Update(ArrayIndex(Var('V', '32'), [Var('d', '33')], '34'), Var('result', '35'))], rettype='int16x4_t', ret_is_signed=True, inst_form='MVN Vd.8B,Vn.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8}, belongs_to='aarch64_vector_arithmetic_unary_not'),
    'vmvn_s32': ARMSema(intrin='vmvn_s32', inst='MVN', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '12')], ('bits', Var('esize', '11')), '13'), For(Var('e', '30'), Number(0), BinaryExpr('-', Var('elements', '14'), Number(1), '15'), [Update(Var('element', '16'), ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')), Update(ArrayIndex(Var('Elem', '22'), [Var('result', '23'), Var('e', '24'), Var('esize', '25')], '26'), Call('NOT', [Var('element', '28')], '29'))], 1, '31'), Update(ArrayIndex(Var('V', '32'), [Var('d', '33')], '34'), Var('result', '35'))], rettype='int32x2_t', ret_is_signed=True, inst_form='MVN Vd.8B,Vn.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8}, belongs_to='aarch64_vector_arithmetic_unary_not'),
    'vmvn_s8': ARMSema(intrin='vmvn_s8', inst='MVN', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '12')], ('bits', Var('esize', '11')), '13'), For(Var('e', '30'), Number(0), BinaryExpr('-', Var('elements', '14'), Number(1), '15'), [Update(Var('element', '16'), ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')), Update(ArrayIndex(Var('Elem', '22'), [Var('result', '23'), Var('e', '24'), Var('esize', '25')], '26'), Call('NOT', [Var('element', '28')], '29'))], 1, '31'), Update(ArrayIndex(Var('V', '32'), [Var('d', '33')], '34'), Var('result', '35'))], rettype='int8x8_t', ret_is_signed=True, inst_form='MVN Vd.8B,Vn.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8}, belongs_to='aarch64_vector_arithmetic_unary_not'),
    'vmvn_u16': ARMSema(intrin='vmvn_u16', inst='MVN', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '12')], ('bits', Var('esize', '11')), '13'), For(Var('e', '30'), Number(0), BinaryExpr('-', Var('elements', '14'), Number(1), '15'), [Update(Var('element', '16'), ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')), Update(ArrayIndex(Var('Elem', '22'), [Var('result', '23'), Var('e', '24'), Var('esize', '25')], '26'), Call('NOT', [Var('element', '28')], '29'))], 1, '31'), Update(ArrayIndex(Var('V', '32'), [Var('d', '33')], '34'), Var('result', '35'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='MVN Vd.8B,Vn.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8}, belongs_to='aarch64_vector_arithmetic_unary_not'),
    'vmvn_u32': ARMSema(intrin='vmvn_u32', inst='MVN', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '12')], ('bits', Var('esize', '11')), '13'), For(Var('e', '30'), Number(0), BinaryExpr('-', Var('elements', '14'), Number(1), '15'), [Update(Var('element', '16'), ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')), Update(ArrayIndex(Var('Elem', '22'), [Var('result', '23'), Var('e', '24'), Var('esize', '25')], '26'), Call('NOT', [Var('element', '28')], '29'))], 1, '31'), Update(ArrayIndex(Var('V', '32'), [Var('d', '33')], '34'), Var('result', '35'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='MVN Vd.8B,Vn.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8}, belongs_to='aarch64_vector_arithmetic_unary_not'),
    'vmvn_u8': ARMSema(intrin='vmvn_u8', inst='MVN', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '12')], ('bits', Var('esize', '11')), '13'), For(Var('e', '30'), Number(0), BinaryExpr('-', Var('elements', '14'), Number(1), '15'), [Update(Var('element', '16'), ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')), Update(ArrayIndex(Var('Elem', '22'), [Var('result', '23'), Var('e', '24'), Var('esize', '25')], '26'), Call('NOT', [Var('element', '28')], '29'))], 1, '31'), Update(ArrayIndex(Var('V', '32'), [Var('d', '33')], '34'), Var('result', '35'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='MVN Vd.8B,Vn.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8}, belongs_to='aarch64_vector_arithmetic_unary_not'),
    'vmvnq_s16': ARMSema(intrin='vmvnq_s16', inst='MVN', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '12')], ('bits', Var('esize', '11')), '13'), For(Var('e', '30'), Number(0), BinaryExpr('-', Var('elements', '14'), Number(1), '15'), [Update(Var('element', '16'), ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')), Update(ArrayIndex(Var('Elem', '22'), [Var('result', '23'), Var('e', '24'), Var('esize', '25')], '26'), Call('NOT', [Var('element', '28')], '29'))], 1, '31'), Update(ArrayIndex(Var('V', '32'), [Var('d', '33')], '34'), Var('result', '35'))], rettype='int16x8_t', ret_is_signed=True, inst_form='MVN Vd.16B,Vn.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16}, belongs_to='aarch64_vector_arithmetic_unary_not'),
    'vmvnq_s32': ARMSema(intrin='vmvnq_s32', inst='MVN', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '12')], ('bits', Var('esize', '11')), '13'), For(Var('e', '30'), Number(0), BinaryExpr('-', Var('elements', '14'), Number(1), '15'), [Update(Var('element', '16'), ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')), Update(ArrayIndex(Var('Elem', '22'), [Var('result', '23'), Var('e', '24'), Var('esize', '25')], '26'), Call('NOT', [Var('element', '28')], '29'))], 1, '31'), Update(ArrayIndex(Var('V', '32'), [Var('d', '33')], '34'), Var('result', '35'))], rettype='int32x4_t', ret_is_signed=True, inst_form='MVN Vd.16B,Vn.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16}, belongs_to='aarch64_vector_arithmetic_unary_not'),
    'vmvnq_s8': ARMSema(intrin='vmvnq_s8', inst='MVN', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '12')], ('bits', Var('esize', '11')), '13'), For(Var('e', '30'), Number(0), BinaryExpr('-', Var('elements', '14'), Number(1), '15'), [Update(Var('element', '16'), ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')), Update(ArrayIndex(Var('Elem', '22'), [Var('result', '23'), Var('e', '24'), Var('esize', '25')], '26'), Call('NOT', [Var('element', '28')], '29'))], 1, '31'), Update(ArrayIndex(Var('V', '32'), [Var('d', '33')], '34'), Var('result', '35'))], rettype='int8x16_t', ret_is_signed=True, inst_form='MVN Vd.16B,Vn.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16}, belongs_to='aarch64_vector_arithmetic_unary_not'),
    'vmvnq_u16': ARMSema(intrin='vmvnq_u16', inst='MVN', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '12')], ('bits', Var('esize', '11')), '13'), For(Var('e', '30'), Number(0), BinaryExpr('-', Var('elements', '14'), Number(1), '15'), [Update(Var('element', '16'), ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')), Update(ArrayIndex(Var('Elem', '22'), [Var('result', '23'), Var('e', '24'), Var('esize', '25')], '26'), Call('NOT', [Var('element', '28')], '29'))], 1, '31'), Update(ArrayIndex(Var('V', '32'), [Var('d', '33')], '34'), Var('result', '35'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='MVN Vd.16B,Vn.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16}, belongs_to='aarch64_vector_arithmetic_unary_not'),
    'vmvnq_u32': ARMSema(intrin='vmvnq_u32', inst='MVN', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '12')], ('bits', Var('esize', '11')), '13'), For(Var('e', '30'), Number(0), BinaryExpr('-', Var('elements', '14'), Number(1), '15'), [Update(Var('element', '16'), ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')), Update(ArrayIndex(Var('Elem', '22'), [Var('result', '23'), Var('e', '24'), Var('esize', '25')], '26'), Call('NOT', [Var('element', '28')], '29'))], 1, '31'), Update(ArrayIndex(Var('V', '32'), [Var('d', '33')], '34'), Var('result', '35'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='MVN Vd.16B,Vn.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16}, belongs_to='aarch64_vector_arithmetic_unary_not'),
    'vmvnq_u8': ARMSema(intrin='vmvnq_u8', inst='MVN', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '12')], ('bits', Var('esize', '11')), '13'), For(Var('e', '30'), Number(0), BinaryExpr('-', Var('elements', '14'), Number(1), '15'), [Update(Var('element', '16'), ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')), Update(ArrayIndex(Var('Elem', '22'), [Var('result', '23'), Var('e', '24'), Var('esize', '25')], '26'), Call('NOT', [Var('element', '28')], '29'))], 1, '31'), Update(ArrayIndex(Var('V', '32'), [Var('d', '33')], '34'), Var('result', '35'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='MVN Vd.16B,Vn.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16}, belongs_to='aarch64_vector_arithmetic_unary_not'),
    'vneg_s16': ARMSema(intrin='vneg_s16', inst='NEG', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), For(Var('e', '42'), Number(0), BinaryExpr('-', Var('elements', '13'), Number(1), '14'), [Update(Var('element', '15'), Call('SInt', [ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')], '22')), IfElse(Var('neg', '23'), [Update(Var('element', '24'), UnaryExpr('-', Var('element', '25'), '26'))], [Update(Var('element', '27'), Call('Abs', [Var('element', '29')], '30'))], '31'), Update(ArrayIndex(Var('Elem', '32'), [Var('result', '33'), Var('e', '34'), Var('esize', '35')], '36'), ArrayIndex(Var('element', '37'), [SliceRange(BinaryExpr('-', Var('esize', '38'), Number(1), '39'), Number(0), '40')], '41'))], 1, '43'), Update(ArrayIndex(Var('V', '44'), [Var('d', '45')], '46'), Var('result', '47'))], rettype='int16x4_t', ret_is_signed=True, inst_form='NEG Vd.4H,Vn.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'neg': True}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_int_simd'),
    'vneg_s32': ARMSema(intrin='vneg_s32', inst='NEG', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), For(Var('e', '42'), Number(0), BinaryExpr('-', Var('elements', '13'), Number(1), '14'), [Update(Var('element', '15'), Call('SInt', [ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')], '22')), IfElse(Var('neg', '23'), [Update(Var('element', '24'), UnaryExpr('-', Var('element', '25'), '26'))], [Update(Var('element', '27'), Call('Abs', [Var('element', '29')], '30'))], '31'), Update(ArrayIndex(Var('Elem', '32'), [Var('result', '33'), Var('e', '34'), Var('esize', '35')], '36'), ArrayIndex(Var('element', '37'), [SliceRange(BinaryExpr('-', Var('esize', '38'), Number(1), '39'), Number(0), '40')], '41'))], 1, '43'), Update(ArrayIndex(Var('V', '44'), [Var('d', '45')], '46'), Var('result', '47'))], rettype='int32x2_t', ret_is_signed=True, inst_form='NEG Vd.2S,Vn.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'neg': True}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_int_simd'),
    'vneg_s64': ARMSema(intrin='vneg_s64', inst='NEG', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), For(Var('e', '42'), Number(0), BinaryExpr('-', Var('elements', '13'), Number(1), '14'), [Update(Var('element', '15'), Call('SInt', [ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')], '22')), IfElse(Var('neg', '23'), [Update(Var('element', '24'), UnaryExpr('-', Var('element', '25'), '26'))], [Update(Var('element', '27'), Call('Abs', [Var('element', '29')], '30'))], '31'), Update(ArrayIndex(Var('Elem', '32'), [Var('result', '33'), Var('e', '34'), Var('esize', '35')], '36'), ArrayIndex(Var('element', '37'), [SliceRange(BinaryExpr('-', Var('esize', '38'), Number(1), '39'), Number(0), '40')], '41'))], 1, '43'), Update(ArrayIndex(Var('V', '44'), [Var('d', '45')], '46'), Var('result', '47'))], rettype='int64x1_t', ret_is_signed=True, inst_form='NEG Dd,Dn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'neg': True}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_int_sisd'),
    'vneg_s8': ARMSema(intrin='vneg_s8', inst='NEG', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), For(Var('e', '42'), Number(0), BinaryExpr('-', Var('elements', '13'), Number(1), '14'), [Update(Var('element', '15'), Call('SInt', [ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')], '22')), IfElse(Var('neg', '23'), [Update(Var('element', '24'), UnaryExpr('-', Var('element', '25'), '26'))], [Update(Var('element', '27'), Call('Abs', [Var('element', '29')], '30'))], '31'), Update(ArrayIndex(Var('Elem', '32'), [Var('result', '33'), Var('e', '34'), Var('esize', '35')], '36'), ArrayIndex(Var('element', '37'), [SliceRange(BinaryExpr('-', Var('esize', '38'), Number(1), '39'), Number(0), '40')], '41'))], 1, '43'), Update(ArrayIndex(Var('V', '44'), [Var('d', '45')], '46'), Var('result', '47'))], rettype='int8x8_t', ret_is_signed=True, inst_form='NEG Vd.8B,Vn.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'neg': True}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_int_simd'),
    'vnegd_s64': ARMSema(intrin='vnegd_s64', inst='NEG', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), For(Var('e', '42'), Number(0), BinaryExpr('-', Var('elements', '13'), Number(1), '14'), [Update(Var('element', '15'), Call('SInt', [ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')], '22')), IfElse(Var('neg', '23'), [Update(Var('element', '24'), UnaryExpr('-', Var('element', '25'), '26'))], [Update(Var('element', '27'), Call('Abs', [Var('element', '29')], '30'))], '31'), Update(ArrayIndex(Var('Elem', '32'), [Var('result', '33'), Var('e', '34'), Var('esize', '35')], '36'), ArrayIndex(Var('element', '37'), [SliceRange(BinaryExpr('-', Var('esize', '38'), Number(1), '39'), Number(0), '40')], '41'))], 1, '43'), Update(ArrayIndex(Var('V', '44'), [Var('d', '45')], '46'), Var('result', '47'))], rettype='int64_t', ret_is_signed=True, inst_form='NEG Dd,Dn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'neg': True}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_int_sisd'),
    'vnegq_s16': ARMSema(intrin='vnegq_s16', inst='NEG', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), For(Var('e', '42'), Number(0), BinaryExpr('-', Var('elements', '13'), Number(1), '14'), [Update(Var('element', '15'), Call('SInt', [ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')], '22')), IfElse(Var('neg', '23'), [Update(Var('element', '24'), UnaryExpr('-', Var('element', '25'), '26'))], [Update(Var('element', '27'), Call('Abs', [Var('element', '29')], '30'))], '31'), Update(ArrayIndex(Var('Elem', '32'), [Var('result', '33'), Var('e', '34'), Var('esize', '35')], '36'), ArrayIndex(Var('element', '37'), [SliceRange(BinaryExpr('-', Var('esize', '38'), Number(1), '39'), Number(0), '40')], '41'))], 1, '43'), Update(ArrayIndex(Var('V', '44'), [Var('d', '45')], '46'), Var('result', '47'))], rettype='int16x8_t', ret_is_signed=True, inst_form='NEG Vd.8H,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'neg': True}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_int_simd'),
    'vnegq_s32': ARMSema(intrin='vnegq_s32', inst='NEG', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), For(Var('e', '42'), Number(0), BinaryExpr('-', Var('elements', '13'), Number(1), '14'), [Update(Var('element', '15'), Call('SInt', [ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')], '22')), IfElse(Var('neg', '23'), [Update(Var('element', '24'), UnaryExpr('-', Var('element', '25'), '26'))], [Update(Var('element', '27'), Call('Abs', [Var('element', '29')], '30'))], '31'), Update(ArrayIndex(Var('Elem', '32'), [Var('result', '33'), Var('e', '34'), Var('esize', '35')], '36'), ArrayIndex(Var('element', '37'), [SliceRange(BinaryExpr('-', Var('esize', '38'), Number(1), '39'), Number(0), '40')], '41'))], 1, '43'), Update(ArrayIndex(Var('V', '44'), [Var('d', '45')], '46'), Var('result', '47'))], rettype='int32x4_t', ret_is_signed=True, inst_form='NEG Vd.4S,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'neg': True}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_int_simd'),
    'vnegq_s64': ARMSema(intrin='vnegq_s64', inst='NEG', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), For(Var('e', '42'), Number(0), BinaryExpr('-', Var('elements', '13'), Number(1), '14'), [Update(Var('element', '15'), Call('SInt', [ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')], '22')), IfElse(Var('neg', '23'), [Update(Var('element', '24'), UnaryExpr('-', Var('element', '25'), '26'))], [Update(Var('element', '27'), Call('Abs', [Var('element', '29')], '30'))], '31'), Update(ArrayIndex(Var('Elem', '32'), [Var('result', '33'), Var('e', '34'), Var('esize', '35')], '36'), ArrayIndex(Var('element', '37'), [SliceRange(BinaryExpr('-', Var('esize', '38'), Number(1), '39'), Number(0), '40')], '41'))], 1, '43'), Update(ArrayIndex(Var('V', '44'), [Var('d', '45')], '46'), Var('result', '47'))], rettype='int64x2_t', ret_is_signed=True, inst_form='NEG Vd.2D,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'neg': True}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_int_simd'),
    'vnegq_s8': ARMSema(intrin='vnegq_s8', inst='NEG', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), For(Var('e', '42'), Number(0), BinaryExpr('-', Var('elements', '13'), Number(1), '14'), [Update(Var('element', '15'), Call('SInt', [ArrayIndex(Var('Elem', '17'), [Var('operand', '18'), Var('e', '19'), Var('esize', '20')], '21')], '22')), IfElse(Var('neg', '23'), [Update(Var('element', '24'), UnaryExpr('-', Var('element', '25'), '26'))], [Update(Var('element', '27'), Call('Abs', [Var('element', '29')], '30'))], '31'), Update(ArrayIndex(Var('Elem', '32'), [Var('result', '33'), Var('e', '34'), Var('esize', '35')], '36'), ArrayIndex(Var('element', '37'), [SliceRange(BinaryExpr('-', Var('esize', '38'), Number(1), '39'), Number(0), '40')], '41'))], 1, '43'), Update(ArrayIndex(Var('V', '44'), [Var('d', '45')], '46'), Var('result', '47'))], rettype='int8x16_t', ret_is_signed=True, inst_form='NEG Vd.16B,Vn.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'neg': True}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_int_simd'),
    'vorn_s16': ARMSema(intrin='vorn_s16', inst='ORN', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int16x4_t', ret_is_signed=True, inst_form='ORN Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': True, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vorn_s32': ARMSema(intrin='vorn_s32', inst='ORN', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int32x2_t', ret_is_signed=True, inst_form='ORN Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': True, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vorn_s64': ARMSema(intrin='vorn_s64', inst='ORN', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int64x1_t', ret_is_signed=True, inst_form='ORN Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': True, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vorn_s8': ARMSema(intrin='vorn_s8', inst='ORN', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int8x8_t', ret_is_signed=True, inst_form='ORN Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': True, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vorn_u16': ARMSema(intrin='vorn_u16', inst='ORN', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='ORN Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': True, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vorn_u32': ARMSema(intrin='vorn_u32', inst='ORN', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='ORN Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': True, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vorn_u64': ARMSema(intrin='vorn_u64', inst='ORN', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='ORN Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': True, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vorn_u8': ARMSema(intrin='vorn_u8', inst='ORN', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='ORN Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': True, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vornq_s16': ARMSema(intrin='vornq_s16', inst='ORN', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int16x8_t', ret_is_signed=True, inst_form='ORN Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': True, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vornq_s32': ARMSema(intrin='vornq_s32', inst='ORN', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int32x4_t', ret_is_signed=True, inst_form='ORN Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': True, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vornq_s64': ARMSema(intrin='vornq_s64', inst='ORN', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int64x2_t', ret_is_signed=True, inst_form='ORN Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': True, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vornq_s8': ARMSema(intrin='vornq_s8', inst='ORN', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int8x16_t', ret_is_signed=True, inst_form='ORN Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': True, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vornq_u16': ARMSema(intrin='vornq_u16', inst='ORN', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='ORN Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': True, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vornq_u32': ARMSema(intrin='vornq_u32', inst='ORN', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='ORN Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': True, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vornq_u64': ARMSema(intrin='vornq_u64', inst='ORN', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='ORN Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': True, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vornq_u8': ARMSema(intrin='vornq_u8', inst='ORN', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='ORN Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': True, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vorr_s16': ARMSema(intrin='vorr_s16', inst='ORR', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int16x4_t', ret_is_signed=True, inst_form='ORR Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': False, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vorr_s32': ARMSema(intrin='vorr_s32', inst='ORR', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int32x2_t', ret_is_signed=True, inst_form='ORR Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': False, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vorr_s64': ARMSema(intrin='vorr_s64', inst='ORR', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int64x1_t', ret_is_signed=True, inst_form='ORR Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': False, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vorr_s8': ARMSema(intrin='vorr_s8', inst='ORR', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int8x8_t', ret_is_signed=True, inst_form='ORR Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': False, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vorr_u16': ARMSema(intrin='vorr_u16', inst='ORR', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='ORR Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': False, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vorr_u32': ARMSema(intrin='vorr_u32', inst='ORR', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='ORR Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': False, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vorr_u64': ARMSema(intrin='vorr_u64', inst='ORR', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='ORR Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': False, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vorr_u8': ARMSema(intrin='vorr_u8', inst='ORR', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='ORR Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'invert': False, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vorrq_s16': ARMSema(intrin='vorrq_s16', inst='ORR', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int16x8_t', ret_is_signed=True, inst_form='ORR Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': False, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vorrq_s32': ARMSema(intrin='vorrq_s32', inst='ORR', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int32x4_t', ret_is_signed=True, inst_form='ORR Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': False, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vorrq_s64': ARMSema(intrin='vorrq_s64', inst='ORR', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int64x2_t', ret_is_signed=True, inst_form='ORR Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': False, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vorrq_s8': ARMSema(intrin='vorrq_s8', inst='ORR', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='int8x16_t', ret_is_signed=True, inst_form='ORR Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': False, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vorrq_u16': ARMSema(intrin='vorrq_u16', inst='ORR', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='ORR Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': False, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vorrq_u32': ARMSema(intrin='vorrq_u32', inst='ORR', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='ORR Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': False, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vorrq_u64': ARMSema(intrin='vorrq_u64', inst='ORR', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='ORR Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': False, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vorrq_u8': ARMSema(intrin='vorrq_u8', inst='ORR', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), If(Var('invert', '18'), [Update(Var('operand2', '19'), Call('NOT', [Var('operand2', '21')], '22'))], '23'), Match(Var('op', '24'), [Case(Number(0), [Update(Var('result', '25'), BinaryExpr('AND', Var('operand1', '26'), Var('operand2', '27'), '28'))], '29'), Case(Number(2), [Update(Var('result', '30'), BinaryExpr('OR', Var('operand1', '31'), Var('operand2', '32'), '33'))], '34')], '35'), Update(ArrayIndex(Var('V', '36'), [Var('d', '37')], '38'), Var('result', '39'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='ORR Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'invert': False, 'op': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_logical_and_orr'),
    'vpadal_s16': ARMSema(intrin='vpadal_s16', inst='SADALP', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result2', '12')], ('bits', Var('datasize', '11')), '13'), VarsDecl([Var('sum', '16')], ('bits', BinaryExpr('*', Number(2), Var('esize', '14'), '15')), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), Update(Var('result', '22'), IfElse(Var('acc', '26'), ArrayIndex(Var('V', '23'), [Var('d', '24')], '25'), Call('Zeros', [], '28'), '29')), For(Var('e', '77'), Number(0), BinaryExpr('-', Var('elements', '30'), Number(1), '31'), [Update(Var('op1', '32'), Call('Int', [ArrayIndex(Var('Elem', '34'), [Var('operand', '35'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '36'), '37'), Number(0), '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42')), Update(Var('op2', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand', '46'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '47'), '48'), Number(1), '49'), Var('esize', '50')], '51'), Var('unsigned', '52')], '53')), Update(Var('sum', '54'), ArrayIndex(BinaryExpr('+', Var('op1', '55'), Var('op2', '56'), '57'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '58'), '59'), Number(1), '60'), Number(0), '61')], '62')), Update(ArrayIndex(Var('Elem', '63'), [Var('result2', '64'), Var('e', '65'), BinaryExpr('*', Number(2), Var('esize', '66'), '67')], '68'), BinaryExpr('+', ArrayIndex(Var('Elem', '69'), [Var('result', '70'), Var('e', '71'), BinaryExpr('*', Number(2), Var('esize', '72'), '73')], '74'), Var('sum', '75'), '76'))], 1, '78'), Update(ArrayIndex(Var('V', '79'), [Var('d', '80')], '81'), Var('result2', '82'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SADALP Vd.2S,Vn.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 2, 'acc': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_add_pairwise'),
    'vpadal_s32': ARMSema(intrin='vpadal_s32', inst='SADALP', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result2', '12')], ('bits', Var('datasize', '11')), '13'), VarsDecl([Var('sum', '16')], ('bits', BinaryExpr('*', Number(2), Var('esize', '14'), '15')), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), Update(Var('result', '22'), IfElse(Var('acc', '26'), ArrayIndex(Var('V', '23'), [Var('d', '24')], '25'), Call('Zeros', [], '28'), '29')), For(Var('e', '77'), Number(0), BinaryExpr('-', Var('elements', '30'), Number(1), '31'), [Update(Var('op1', '32'), Call('Int', [ArrayIndex(Var('Elem', '34'), [Var('operand', '35'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '36'), '37'), Number(0), '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42')), Update(Var('op2', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand', '46'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '47'), '48'), Number(1), '49'), Var('esize', '50')], '51'), Var('unsigned', '52')], '53')), Update(Var('sum', '54'), ArrayIndex(BinaryExpr('+', Var('op1', '55'), Var('op2', '56'), '57'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '58'), '59'), Number(1), '60'), Number(0), '61')], '62')), Update(ArrayIndex(Var('Elem', '63'), [Var('result2', '64'), Var('e', '65'), BinaryExpr('*', Number(2), Var('esize', '66'), '67')], '68'), BinaryExpr('+', ArrayIndex(Var('Elem', '69'), [Var('result', '70'), Var('e', '71'), BinaryExpr('*', Number(2), Var('esize', '72'), '73')], '74'), Var('sum', '75'), '76'))], 1, '78'), Update(ArrayIndex(Var('V', '79'), [Var('d', '80')], '81'), Var('result2', '82'))], rettype='int64x1_t', ret_is_signed=True, inst_form='SADALP Vd.1D,Vn.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 1, 'acc': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_add_pairwise'),
    'vpadal_s8': ARMSema(intrin='vpadal_s8', inst='SADALP', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result2', '12')], ('bits', Var('datasize', '11')), '13'), VarsDecl([Var('sum', '16')], ('bits', BinaryExpr('*', Number(2), Var('esize', '14'), '15')), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), Update(Var('result', '22'), IfElse(Var('acc', '26'), ArrayIndex(Var('V', '23'), [Var('d', '24')], '25'), Call('Zeros', [], '28'), '29')), For(Var('e', '77'), Number(0), BinaryExpr('-', Var('elements', '30'), Number(1), '31'), [Update(Var('op1', '32'), Call('Int', [ArrayIndex(Var('Elem', '34'), [Var('operand', '35'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '36'), '37'), Number(0), '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42')), Update(Var('op2', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand', '46'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '47'), '48'), Number(1), '49'), Var('esize', '50')], '51'), Var('unsigned', '52')], '53')), Update(Var('sum', '54'), ArrayIndex(BinaryExpr('+', Var('op1', '55'), Var('op2', '56'), '57'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '58'), '59'), Number(1), '60'), Number(0), '61')], '62')), Update(ArrayIndex(Var('Elem', '63'), [Var('result2', '64'), Var('e', '65'), BinaryExpr('*', Number(2), Var('esize', '66'), '67')], '68'), BinaryExpr('+', ArrayIndex(Var('Elem', '69'), [Var('result', '70'), Var('e', '71'), BinaryExpr('*', Number(2), Var('esize', '72'), '73')], '74'), Var('sum', '75'), '76'))], 1, '78'), Update(ArrayIndex(Var('V', '79'), [Var('d', '80')], '81'), Var('result2', '82'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SADALP Vd.4H,Vn.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 4, 'acc': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_add_pairwise'),
    'vpadal_u16': ARMSema(intrin='vpadal_u16', inst='UADALP', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result2', '12')], ('bits', Var('datasize', '11')), '13'), VarsDecl([Var('sum', '16')], ('bits', BinaryExpr('*', Number(2), Var('esize', '14'), '15')), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), Update(Var('result', '22'), IfElse(Var('acc', '26'), ArrayIndex(Var('V', '23'), [Var('d', '24')], '25'), Call('Zeros', [], '28'), '29')), For(Var('e', '77'), Number(0), BinaryExpr('-', Var('elements', '30'), Number(1), '31'), [Update(Var('op1', '32'), Call('Int', [ArrayIndex(Var('Elem', '34'), [Var('operand', '35'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '36'), '37'), Number(0), '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42')), Update(Var('op2', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand', '46'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '47'), '48'), Number(1), '49'), Var('esize', '50')], '51'), Var('unsigned', '52')], '53')), Update(Var('sum', '54'), ArrayIndex(BinaryExpr('+', Var('op1', '55'), Var('op2', '56'), '57'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '58'), '59'), Number(1), '60'), Number(0), '61')], '62')), Update(ArrayIndex(Var('Elem', '63'), [Var('result2', '64'), Var('e', '65'), BinaryExpr('*', Number(2), Var('esize', '66'), '67')], '68'), BinaryExpr('+', ArrayIndex(Var('Elem', '69'), [Var('result', '70'), Var('e', '71'), BinaryExpr('*', Number(2), Var('esize', '72'), '73')], '74'), Var('sum', '75'), '76'))], 1, '78'), Update(ArrayIndex(Var('V', '79'), [Var('d', '80')], '81'), Var('result2', '82'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='UADALP Vd.2S,Vn.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 2, 'acc': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_add_pairwise'),
    'vpadal_u32': ARMSema(intrin='vpadal_u32', inst='UADALP', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result2', '12')], ('bits', Var('datasize', '11')), '13'), VarsDecl([Var('sum', '16')], ('bits', BinaryExpr('*', Number(2), Var('esize', '14'), '15')), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), Update(Var('result', '22'), IfElse(Var('acc', '26'), ArrayIndex(Var('V', '23'), [Var('d', '24')], '25'), Call('Zeros', [], '28'), '29')), For(Var('e', '77'), Number(0), BinaryExpr('-', Var('elements', '30'), Number(1), '31'), [Update(Var('op1', '32'), Call('Int', [ArrayIndex(Var('Elem', '34'), [Var('operand', '35'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '36'), '37'), Number(0), '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42')), Update(Var('op2', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand', '46'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '47'), '48'), Number(1), '49'), Var('esize', '50')], '51'), Var('unsigned', '52')], '53')), Update(Var('sum', '54'), ArrayIndex(BinaryExpr('+', Var('op1', '55'), Var('op2', '56'), '57'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '58'), '59'), Number(1), '60'), Number(0), '61')], '62')), Update(ArrayIndex(Var('Elem', '63'), [Var('result2', '64'), Var('e', '65'), BinaryExpr('*', Number(2), Var('esize', '66'), '67')], '68'), BinaryExpr('+', ArrayIndex(Var('Elem', '69'), [Var('result', '70'), Var('e', '71'), BinaryExpr('*', Number(2), Var('esize', '72'), '73')], '74'), Var('sum', '75'), '76'))], 1, '78'), Update(ArrayIndex(Var('V', '79'), [Var('d', '80')], '81'), Var('result2', '82'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='UADALP Vd.1D,Vn.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 1, 'acc': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_add_pairwise'),
    'vpadal_u8': ARMSema(intrin='vpadal_u8', inst='UADALP', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result2', '12')], ('bits', Var('datasize', '11')), '13'), VarsDecl([Var('sum', '16')], ('bits', BinaryExpr('*', Number(2), Var('esize', '14'), '15')), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), Update(Var('result', '22'), IfElse(Var('acc', '26'), ArrayIndex(Var('V', '23'), [Var('d', '24')], '25'), Call('Zeros', [], '28'), '29')), For(Var('e', '77'), Number(0), BinaryExpr('-', Var('elements', '30'), Number(1), '31'), [Update(Var('op1', '32'), Call('Int', [ArrayIndex(Var('Elem', '34'), [Var('operand', '35'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '36'), '37'), Number(0), '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42')), Update(Var('op2', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand', '46'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '47'), '48'), Number(1), '49'), Var('esize', '50')], '51'), Var('unsigned', '52')], '53')), Update(Var('sum', '54'), ArrayIndex(BinaryExpr('+', Var('op1', '55'), Var('op2', '56'), '57'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '58'), '59'), Number(1), '60'), Number(0), '61')], '62')), Update(ArrayIndex(Var('Elem', '63'), [Var('result2', '64'), Var('e', '65'), BinaryExpr('*', Number(2), Var('esize', '66'), '67')], '68'), BinaryExpr('+', ArrayIndex(Var('Elem', '69'), [Var('result', '70'), Var('e', '71'), BinaryExpr('*', Number(2), Var('esize', '72'), '73')], '74'), Var('sum', '75'), '76'))], 1, '78'), Update(ArrayIndex(Var('V', '79'), [Var('d', '80')], '81'), Var('result2', '82'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='UADALP Vd.4H,Vn.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 4, 'acc': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_add_pairwise'),
    'vpadalq_s16': ARMSema(intrin='vpadalq_s16', inst='SADALP', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result2', '12')], ('bits', Var('datasize', '11')), '13'), VarsDecl([Var('sum', '16')], ('bits', BinaryExpr('*', Number(2), Var('esize', '14'), '15')), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), Update(Var('result', '22'), IfElse(Var('acc', '26'), ArrayIndex(Var('V', '23'), [Var('d', '24')], '25'), Call('Zeros', [], '28'), '29')), For(Var('e', '77'), Number(0), BinaryExpr('-', Var('elements', '30'), Number(1), '31'), [Update(Var('op1', '32'), Call('Int', [ArrayIndex(Var('Elem', '34'), [Var('operand', '35'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '36'), '37'), Number(0), '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42')), Update(Var('op2', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand', '46'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '47'), '48'), Number(1), '49'), Var('esize', '50')], '51'), Var('unsigned', '52')], '53')), Update(Var('sum', '54'), ArrayIndex(BinaryExpr('+', Var('op1', '55'), Var('op2', '56'), '57'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '58'), '59'), Number(1), '60'), Number(0), '61')], '62')), Update(ArrayIndex(Var('Elem', '63'), [Var('result2', '64'), Var('e', '65'), BinaryExpr('*', Number(2), Var('esize', '66'), '67')], '68'), BinaryExpr('+', ArrayIndex(Var('Elem', '69'), [Var('result', '70'), Var('e', '71'), BinaryExpr('*', Number(2), Var('esize', '72'), '73')], '74'), Var('sum', '75'), '76'))], 1, '78'), Update(ArrayIndex(Var('V', '79'), [Var('d', '80')], '81'), Var('result2', '82'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SADALP Vd.4S,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 4, 'acc': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_add_pairwise'),
    'vpadalq_s32': ARMSema(intrin='vpadalq_s32', inst='SADALP', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result2', '12')], ('bits', Var('datasize', '11')), '13'), VarsDecl([Var('sum', '16')], ('bits', BinaryExpr('*', Number(2), Var('esize', '14'), '15')), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), Update(Var('result', '22'), IfElse(Var('acc', '26'), ArrayIndex(Var('V', '23'), [Var('d', '24')], '25'), Call('Zeros', [], '28'), '29')), For(Var('e', '77'), Number(0), BinaryExpr('-', Var('elements', '30'), Number(1), '31'), [Update(Var('op1', '32'), Call('Int', [ArrayIndex(Var('Elem', '34'), [Var('operand', '35'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '36'), '37'), Number(0), '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42')), Update(Var('op2', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand', '46'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '47'), '48'), Number(1), '49'), Var('esize', '50')], '51'), Var('unsigned', '52')], '53')), Update(Var('sum', '54'), ArrayIndex(BinaryExpr('+', Var('op1', '55'), Var('op2', '56'), '57'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '58'), '59'), Number(1), '60'), Number(0), '61')], '62')), Update(ArrayIndex(Var('Elem', '63'), [Var('result2', '64'), Var('e', '65'), BinaryExpr('*', Number(2), Var('esize', '66'), '67')], '68'), BinaryExpr('+', ArrayIndex(Var('Elem', '69'), [Var('result', '70'), Var('e', '71'), BinaryExpr('*', Number(2), Var('esize', '72'), '73')], '74'), Var('sum', '75'), '76'))], 1, '78'), Update(ArrayIndex(Var('V', '79'), [Var('d', '80')], '81'), Var('result2', '82'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SADALP Vd.2D,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 2, 'acc': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_add_pairwise'),
    'vpadalq_s8': ARMSema(intrin='vpadalq_s8', inst='SADALP', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result2', '12')], ('bits', Var('datasize', '11')), '13'), VarsDecl([Var('sum', '16')], ('bits', BinaryExpr('*', Number(2), Var('esize', '14'), '15')), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), Update(Var('result', '22'), IfElse(Var('acc', '26'), ArrayIndex(Var('V', '23'), [Var('d', '24')], '25'), Call('Zeros', [], '28'), '29')), For(Var('e', '77'), Number(0), BinaryExpr('-', Var('elements', '30'), Number(1), '31'), [Update(Var('op1', '32'), Call('Int', [ArrayIndex(Var('Elem', '34'), [Var('operand', '35'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '36'), '37'), Number(0), '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42')), Update(Var('op2', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand', '46'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '47'), '48'), Number(1), '49'), Var('esize', '50')], '51'), Var('unsigned', '52')], '53')), Update(Var('sum', '54'), ArrayIndex(BinaryExpr('+', Var('op1', '55'), Var('op2', '56'), '57'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '58'), '59'), Number(1), '60'), Number(0), '61')], '62')), Update(ArrayIndex(Var('Elem', '63'), [Var('result2', '64'), Var('e', '65'), BinaryExpr('*', Number(2), Var('esize', '66'), '67')], '68'), BinaryExpr('+', ArrayIndex(Var('Elem', '69'), [Var('result', '70'), Var('e', '71'), BinaryExpr('*', Number(2), Var('esize', '72'), '73')], '74'), Var('sum', '75'), '76'))], 1, '78'), Update(ArrayIndex(Var('V', '79'), [Var('d', '80')], '81'), Var('result2', '82'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SADALP Vd.8H,Vn.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 8, 'acc': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_add_pairwise'),
    'vpadalq_u16': ARMSema(intrin='vpadalq_u16', inst='UADALP', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result2', '12')], ('bits', Var('datasize', '11')), '13'), VarsDecl([Var('sum', '16')], ('bits', BinaryExpr('*', Number(2), Var('esize', '14'), '15')), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), Update(Var('result', '22'), IfElse(Var('acc', '26'), ArrayIndex(Var('V', '23'), [Var('d', '24')], '25'), Call('Zeros', [], '28'), '29')), For(Var('e', '77'), Number(0), BinaryExpr('-', Var('elements', '30'), Number(1), '31'), [Update(Var('op1', '32'), Call('Int', [ArrayIndex(Var('Elem', '34'), [Var('operand', '35'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '36'), '37'), Number(0), '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42')), Update(Var('op2', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand', '46'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '47'), '48'), Number(1), '49'), Var('esize', '50')], '51'), Var('unsigned', '52')], '53')), Update(Var('sum', '54'), ArrayIndex(BinaryExpr('+', Var('op1', '55'), Var('op2', '56'), '57'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '58'), '59'), Number(1), '60'), Number(0), '61')], '62')), Update(ArrayIndex(Var('Elem', '63'), [Var('result2', '64'), Var('e', '65'), BinaryExpr('*', Number(2), Var('esize', '66'), '67')], '68'), BinaryExpr('+', ArrayIndex(Var('Elem', '69'), [Var('result', '70'), Var('e', '71'), BinaryExpr('*', Number(2), Var('esize', '72'), '73')], '74'), Var('sum', '75'), '76'))], 1, '78'), Update(ArrayIndex(Var('V', '79'), [Var('d', '80')], '81'), Var('result2', '82'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UADALP Vd.4S,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 4, 'acc': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_add_pairwise'),
    'vpadalq_u32': ARMSema(intrin='vpadalq_u32', inst='UADALP', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result2', '12')], ('bits', Var('datasize', '11')), '13'), VarsDecl([Var('sum', '16')], ('bits', BinaryExpr('*', Number(2), Var('esize', '14'), '15')), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), Update(Var('result', '22'), IfElse(Var('acc', '26'), ArrayIndex(Var('V', '23'), [Var('d', '24')], '25'), Call('Zeros', [], '28'), '29')), For(Var('e', '77'), Number(0), BinaryExpr('-', Var('elements', '30'), Number(1), '31'), [Update(Var('op1', '32'), Call('Int', [ArrayIndex(Var('Elem', '34'), [Var('operand', '35'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '36'), '37'), Number(0), '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42')), Update(Var('op2', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand', '46'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '47'), '48'), Number(1), '49'), Var('esize', '50')], '51'), Var('unsigned', '52')], '53')), Update(Var('sum', '54'), ArrayIndex(BinaryExpr('+', Var('op1', '55'), Var('op2', '56'), '57'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '58'), '59'), Number(1), '60'), Number(0), '61')], '62')), Update(ArrayIndex(Var('Elem', '63'), [Var('result2', '64'), Var('e', '65'), BinaryExpr('*', Number(2), Var('esize', '66'), '67')], '68'), BinaryExpr('+', ArrayIndex(Var('Elem', '69'), [Var('result', '70'), Var('e', '71'), BinaryExpr('*', Number(2), Var('esize', '72'), '73')], '74'), Var('sum', '75'), '76'))], 1, '78'), Update(ArrayIndex(Var('V', '79'), [Var('d', '80')], '81'), Var('result2', '82'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UADALP Vd.2D,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 2, 'acc': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_add_pairwise'),
    'vpadalq_u8': ARMSema(intrin='vpadalq_u8', inst='UADALP', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result2', '12')], ('bits', Var('datasize', '11')), '13'), VarsDecl([Var('sum', '16')], ('bits', BinaryExpr('*', Number(2), Var('esize', '14'), '15')), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), Update(Var('result', '22'), IfElse(Var('acc', '26'), ArrayIndex(Var('V', '23'), [Var('d', '24')], '25'), Call('Zeros', [], '28'), '29')), For(Var('e', '77'), Number(0), BinaryExpr('-', Var('elements', '30'), Number(1), '31'), [Update(Var('op1', '32'), Call('Int', [ArrayIndex(Var('Elem', '34'), [Var('operand', '35'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '36'), '37'), Number(0), '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42')), Update(Var('op2', '43'), Call('Int', [ArrayIndex(Var('Elem', '45'), [Var('operand', '46'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '47'), '48'), Number(1), '49'), Var('esize', '50')], '51'), Var('unsigned', '52')], '53')), Update(Var('sum', '54'), ArrayIndex(BinaryExpr('+', Var('op1', '55'), Var('op2', '56'), '57'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '58'), '59'), Number(1), '60'), Number(0), '61')], '62')), Update(ArrayIndex(Var('Elem', '63'), [Var('result2', '64'), Var('e', '65'), BinaryExpr('*', Number(2), Var('esize', '66'), '67')], '68'), BinaryExpr('+', ArrayIndex(Var('Elem', '69'), [Var('result', '70'), Var('e', '71'), BinaryExpr('*', Number(2), Var('esize', '72'), '73')], '74'), Var('sum', '75'), '76'))], 1, '78'), Update(ArrayIndex(Var('V', '79'), [Var('d', '80')], '81'), Var('result2', '82'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UADALP Vd.8H,Vn.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 8, 'acc': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_add_pairwise'),
    'vpadd_s16': ARMSema(intrin='vpadd_s16', inst='ADDP', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '27')], ('bits', Var('esize', '26')), '28'), VarsDecl([Var('element2', '30')], ('bits', Var('esize', '29')), '31'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), ArrayIndex(Var('Elem', '35'), [Var('concat', '36'), BinaryExpr('*', Number(2), Var('e', '37'), '38'), Var('esize', '39')], '40')), Update(Var('element2', '41'), ArrayIndex(Var('Elem', '42'), [Var('concat', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '44'), '45'), Number(1), '46'), Var('esize', '47')], '48')), Update(ArrayIndex(Var('Elem', '49'), [Var('result', '50'), Var('e', '51'), Var('esize', '52')], '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int16x4_t', ret_is_signed=True, inst_form='ADDP Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_pair'),
    'vpadd_s32': ARMSema(intrin='vpadd_s32', inst='ADDP', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '27')], ('bits', Var('esize', '26')), '28'), VarsDecl([Var('element2', '30')], ('bits', Var('esize', '29')), '31'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), ArrayIndex(Var('Elem', '35'), [Var('concat', '36'), BinaryExpr('*', Number(2), Var('e', '37'), '38'), Var('esize', '39')], '40')), Update(Var('element2', '41'), ArrayIndex(Var('Elem', '42'), [Var('concat', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '44'), '45'), Number(1), '46'), Var('esize', '47')], '48')), Update(ArrayIndex(Var('Elem', '49'), [Var('result', '50'), Var('e', '51'), Var('esize', '52')], '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int32x2_t', ret_is_signed=True, inst_form='ADDP Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_pair'),
    'vpadd_s8': ARMSema(intrin='vpadd_s8', inst='ADDP', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '27')], ('bits', Var('esize', '26')), '28'), VarsDecl([Var('element2', '30')], ('bits', Var('esize', '29')), '31'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), ArrayIndex(Var('Elem', '35'), [Var('concat', '36'), BinaryExpr('*', Number(2), Var('e', '37'), '38'), Var('esize', '39')], '40')), Update(Var('element2', '41'), ArrayIndex(Var('Elem', '42'), [Var('concat', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '44'), '45'), Number(1), '46'), Var('esize', '47')], '48')), Update(ArrayIndex(Var('Elem', '49'), [Var('result', '50'), Var('e', '51'), Var('esize', '52')], '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int8x8_t', ret_is_signed=True, inst_form='ADDP Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_pair'),
    'vpadd_u16': ARMSema(intrin='vpadd_u16', inst='ADDP', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '27')], ('bits', Var('esize', '26')), '28'), VarsDecl([Var('element2', '30')], ('bits', Var('esize', '29')), '31'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), ArrayIndex(Var('Elem', '35'), [Var('concat', '36'), BinaryExpr('*', Number(2), Var('e', '37'), '38'), Var('esize', '39')], '40')), Update(Var('element2', '41'), ArrayIndex(Var('Elem', '42'), [Var('concat', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '44'), '45'), Number(1), '46'), Var('esize', '47')], '48')), Update(ArrayIndex(Var('Elem', '49'), [Var('result', '50'), Var('e', '51'), Var('esize', '52')], '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='ADDP Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_pair'),
    'vpadd_u32': ARMSema(intrin='vpadd_u32', inst='ADDP', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '27')], ('bits', Var('esize', '26')), '28'), VarsDecl([Var('element2', '30')], ('bits', Var('esize', '29')), '31'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), ArrayIndex(Var('Elem', '35'), [Var('concat', '36'), BinaryExpr('*', Number(2), Var('e', '37'), '38'), Var('esize', '39')], '40')), Update(Var('element2', '41'), ArrayIndex(Var('Elem', '42'), [Var('concat', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '44'), '45'), Number(1), '46'), Var('esize', '47')], '48')), Update(ArrayIndex(Var('Elem', '49'), [Var('result', '50'), Var('e', '51'), Var('esize', '52')], '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='ADDP Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_pair'),
    'vpadd_u8': ARMSema(intrin='vpadd_u8', inst='ADDP', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '27')], ('bits', Var('esize', '26')), '28'), VarsDecl([Var('element2', '30')], ('bits', Var('esize', '29')), '31'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), ArrayIndex(Var('Elem', '35'), [Var('concat', '36'), BinaryExpr('*', Number(2), Var('e', '37'), '38'), Var('esize', '39')], '40')), Update(Var('element2', '41'), ArrayIndex(Var('Elem', '42'), [Var('concat', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '44'), '45'), Number(1), '46'), Var('esize', '47')], '48')), Update(ArrayIndex(Var('Elem', '49'), [Var('result', '50'), Var('e', '51'), Var('esize', '52')], '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='ADDP Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_pair'),
    'vpaddd_s64': ARMSema(intrin='vpaddd_s64', inst='ADDP', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), Update(ArrayIndex(Var('V', '8'), [Var('d', '9')], '10'), Call('Reduce', [Var('op', '12'), Var('operand', '13'), Var('esize', '14')], '15'))], rettype='int64_t', ret_is_signed=True, inst_form='ADDP Dd,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'op': 5}, belongs_to='aarch64_vector_reduce_add_sisd'),
    'vpaddd_u64': ARMSema(intrin='vpaddd_u64', inst='ADDP', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), Update(ArrayIndex(Var('V', '8'), [Var('d', '9')], '10'), Call('Reduce', [Var('op', '12'), Var('operand', '13'), Var('esize', '14')], '15'))], rettype='uint64_t', ret_is_signed=False, inst_form='ADDP Dd,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'op': 5}, belongs_to='aarch64_vector_reduce_add_sisd'),
    'vpaddq_s16': ARMSema(intrin='vpaddq_s16', inst='ADDP', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '27')], ('bits', Var('esize', '26')), '28'), VarsDecl([Var('element2', '30')], ('bits', Var('esize', '29')), '31'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), ArrayIndex(Var('Elem', '35'), [Var('concat', '36'), BinaryExpr('*', Number(2), Var('e', '37'), '38'), Var('esize', '39')], '40')), Update(Var('element2', '41'), ArrayIndex(Var('Elem', '42'), [Var('concat', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '44'), '45'), Number(1), '46'), Var('esize', '47')], '48')), Update(ArrayIndex(Var('Elem', '49'), [Var('result', '50'), Var('e', '51'), Var('esize', '52')], '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int16x8_t', ret_is_signed=True, inst_form='ADDP Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_pair'),
    'vpaddq_s32': ARMSema(intrin='vpaddq_s32', inst='ADDP', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '27')], ('bits', Var('esize', '26')), '28'), VarsDecl([Var('element2', '30')], ('bits', Var('esize', '29')), '31'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), ArrayIndex(Var('Elem', '35'), [Var('concat', '36'), BinaryExpr('*', Number(2), Var('e', '37'), '38'), Var('esize', '39')], '40')), Update(Var('element2', '41'), ArrayIndex(Var('Elem', '42'), [Var('concat', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '44'), '45'), Number(1), '46'), Var('esize', '47')], '48')), Update(ArrayIndex(Var('Elem', '49'), [Var('result', '50'), Var('e', '51'), Var('esize', '52')], '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int32x4_t', ret_is_signed=True, inst_form='ADDP Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_pair'),
    'vpaddq_s64': ARMSema(intrin='vpaddq_s64', inst='ADDP', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '27')], ('bits', Var('esize', '26')), '28'), VarsDecl([Var('element2', '30')], ('bits', Var('esize', '29')), '31'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), ArrayIndex(Var('Elem', '35'), [Var('concat', '36'), BinaryExpr('*', Number(2), Var('e', '37'), '38'), Var('esize', '39')], '40')), Update(Var('element2', '41'), ArrayIndex(Var('Elem', '42'), [Var('concat', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '44'), '45'), Number(1), '46'), Var('esize', '47')], '48')), Update(ArrayIndex(Var('Elem', '49'), [Var('result', '50'), Var('e', '51'), Var('esize', '52')], '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int64x2_t', ret_is_signed=True, inst_form='ADDP Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_pair'),
    'vpaddq_s8': ARMSema(intrin='vpaddq_s8', inst='ADDP', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '27')], ('bits', Var('esize', '26')), '28'), VarsDecl([Var('element2', '30')], ('bits', Var('esize', '29')), '31'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), ArrayIndex(Var('Elem', '35'), [Var('concat', '36'), BinaryExpr('*', Number(2), Var('e', '37'), '38'), Var('esize', '39')], '40')), Update(Var('element2', '41'), ArrayIndex(Var('Elem', '42'), [Var('concat', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '44'), '45'), Number(1), '46'), Var('esize', '47')], '48')), Update(ArrayIndex(Var('Elem', '49'), [Var('result', '50'), Var('e', '51'), Var('esize', '52')], '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int8x16_t', ret_is_signed=True, inst_form='ADDP Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_pair'),
    'vpaddq_u16': ARMSema(intrin='vpaddq_u16', inst='ADDP', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '27')], ('bits', Var('esize', '26')), '28'), VarsDecl([Var('element2', '30')], ('bits', Var('esize', '29')), '31'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), ArrayIndex(Var('Elem', '35'), [Var('concat', '36'), BinaryExpr('*', Number(2), Var('e', '37'), '38'), Var('esize', '39')], '40')), Update(Var('element2', '41'), ArrayIndex(Var('Elem', '42'), [Var('concat', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '44'), '45'), Number(1), '46'), Var('esize', '47')], '48')), Update(ArrayIndex(Var('Elem', '49'), [Var('result', '50'), Var('e', '51'), Var('esize', '52')], '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='ADDP Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_pair'),
    'vpaddq_u32': ARMSema(intrin='vpaddq_u32', inst='ADDP', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '27')], ('bits', Var('esize', '26')), '28'), VarsDecl([Var('element2', '30')], ('bits', Var('esize', '29')), '31'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), ArrayIndex(Var('Elem', '35'), [Var('concat', '36'), BinaryExpr('*', Number(2), Var('e', '37'), '38'), Var('esize', '39')], '40')), Update(Var('element2', '41'), ArrayIndex(Var('Elem', '42'), [Var('concat', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '44'), '45'), Number(1), '46'), Var('esize', '47')], '48')), Update(ArrayIndex(Var('Elem', '49'), [Var('result', '50'), Var('e', '51'), Var('esize', '52')], '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='ADDP Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_pair'),
    'vpaddq_u64': ARMSema(intrin='vpaddq_u64', inst='ADDP', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '27')], ('bits', Var('esize', '26')), '28'), VarsDecl([Var('element2', '30')], ('bits', Var('esize', '29')), '31'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), ArrayIndex(Var('Elem', '35'), [Var('concat', '36'), BinaryExpr('*', Number(2), Var('e', '37'), '38'), Var('esize', '39')], '40')), Update(Var('element2', '41'), ArrayIndex(Var('Elem', '42'), [Var('concat', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '44'), '45'), Number(1), '46'), Var('esize', '47')], '48')), Update(ArrayIndex(Var('Elem', '49'), [Var('result', '50'), Var('e', '51'), Var('esize', '52')], '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='ADDP Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_pair'),
    'vpaddq_u8': ARMSema(intrin='vpaddq_u8', inst='ADDP', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '27')], ('bits', Var('esize', '26')), '28'), VarsDecl([Var('element2', '30')], ('bits', Var('esize', '29')), '31'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), ArrayIndex(Var('Elem', '35'), [Var('concat', '36'), BinaryExpr('*', Number(2), Var('e', '37'), '38'), Var('esize', '39')], '40')), Update(Var('element2', '41'), ArrayIndex(Var('Elem', '42'), [Var('concat', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '44'), '45'), Number(1), '46'), Var('esize', '47')], '48')), Update(ArrayIndex(Var('Elem', '49'), [Var('result', '50'), Var('e', '51'), Var('esize', '52')], '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='ADDP Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_pair'),
    'vpmax_s16': ARMSema(intrin='vpmax_s16', inst='SMAXP', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('maxmin', '30')], ('integer', Number(64)), '31'), For(Var('e', '76'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('concat', '37'), BinaryExpr('*', Number(2), Var('e', '38'), '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('element2', '44'), Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('concat', '47'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '48'), '49'), Number(1), '50'), Var('esize', '51')], '52'), Var('unsigned', '53')], '54')), Update(Var('maxmin', '55'), IfElse(Var('minimum', '60'), Call('Min', [Var('element1', '57'), Var('element2', '58')], '59'), Call('Max', [Var('element1', '62'), Var('element2', '63')], '64'), '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), Var('esize', '69')], '70'), ArrayIndex(Var('maxmin', '71'), [SliceRange(BinaryExpr('-', Var('esize', '72'), Number(1), '73'), Number(0), '74')], '75'))], 1, '77'), Update(ArrayIndex(Var('V', '78'), [Var('d', '79')], '80'), Var('result', '81'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SMAXP Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': False, 'minimum': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_pair'),
    'vpmax_s32': ARMSema(intrin='vpmax_s32', inst='SMAXP', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('maxmin', '30')], ('integer', Number(64)), '31'), For(Var('e', '76'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('concat', '37'), BinaryExpr('*', Number(2), Var('e', '38'), '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('element2', '44'), Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('concat', '47'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '48'), '49'), Number(1), '50'), Var('esize', '51')], '52'), Var('unsigned', '53')], '54')), Update(Var('maxmin', '55'), IfElse(Var('minimum', '60'), Call('Min', [Var('element1', '57'), Var('element2', '58')], '59'), Call('Max', [Var('element1', '62'), Var('element2', '63')], '64'), '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), Var('esize', '69')], '70'), ArrayIndex(Var('maxmin', '71'), [SliceRange(BinaryExpr('-', Var('esize', '72'), Number(1), '73'), Number(0), '74')], '75'))], 1, '77'), Update(ArrayIndex(Var('V', '78'), [Var('d', '79')], '80'), Var('result', '81'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SMAXP Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': False, 'minimum': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_pair'),
    'vpmax_s8': ARMSema(intrin='vpmax_s8', inst='SMAXP', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('maxmin', '30')], ('integer', Number(64)), '31'), For(Var('e', '76'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('concat', '37'), BinaryExpr('*', Number(2), Var('e', '38'), '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('element2', '44'), Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('concat', '47'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '48'), '49'), Number(1), '50'), Var('esize', '51')], '52'), Var('unsigned', '53')], '54')), Update(Var('maxmin', '55'), IfElse(Var('minimum', '60'), Call('Min', [Var('element1', '57'), Var('element2', '58')], '59'), Call('Max', [Var('element1', '62'), Var('element2', '63')], '64'), '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), Var('esize', '69')], '70'), ArrayIndex(Var('maxmin', '71'), [SliceRange(BinaryExpr('-', Var('esize', '72'), Number(1), '73'), Number(0), '74')], '75'))], 1, '77'), Update(ArrayIndex(Var('V', '78'), [Var('d', '79')], '80'), Var('result', '81'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SMAXP Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': False, 'minimum': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_pair'),
    'vpmax_u16': ARMSema(intrin='vpmax_u16', inst='UMAXP', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('maxmin', '30')], ('integer', Number(64)), '31'), For(Var('e', '76'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('concat', '37'), BinaryExpr('*', Number(2), Var('e', '38'), '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('element2', '44'), Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('concat', '47'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '48'), '49'), Number(1), '50'), Var('esize', '51')], '52'), Var('unsigned', '53')], '54')), Update(Var('maxmin', '55'), IfElse(Var('minimum', '60'), Call('Min', [Var('element1', '57'), Var('element2', '58')], '59'), Call('Max', [Var('element1', '62'), Var('element2', '63')], '64'), '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), Var('esize', '69')], '70'), ArrayIndex(Var('maxmin', '71'), [SliceRange(BinaryExpr('-', Var('esize', '72'), Number(1), '73'), Number(0), '74')], '75'))], 1, '77'), Update(ArrayIndex(Var('V', '78'), [Var('d', '79')], '80'), Var('result', '81'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='UMAXP Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': True, 'minimum': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_pair'),
    'vpmax_u32': ARMSema(intrin='vpmax_u32', inst='UMAXP', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('maxmin', '30')], ('integer', Number(64)), '31'), For(Var('e', '76'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('concat', '37'), BinaryExpr('*', Number(2), Var('e', '38'), '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('element2', '44'), Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('concat', '47'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '48'), '49'), Number(1), '50'), Var('esize', '51')], '52'), Var('unsigned', '53')], '54')), Update(Var('maxmin', '55'), IfElse(Var('minimum', '60'), Call('Min', [Var('element1', '57'), Var('element2', '58')], '59'), Call('Max', [Var('element1', '62'), Var('element2', '63')], '64'), '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), Var('esize', '69')], '70'), ArrayIndex(Var('maxmin', '71'), [SliceRange(BinaryExpr('-', Var('esize', '72'), Number(1), '73'), Number(0), '74')], '75'))], 1, '77'), Update(ArrayIndex(Var('V', '78'), [Var('d', '79')], '80'), Var('result', '81'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='UMAXP Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': True, 'minimum': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_pair'),
    'vpmax_u8': ARMSema(intrin='vpmax_u8', inst='UMAXP', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('maxmin', '30')], ('integer', Number(64)), '31'), For(Var('e', '76'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('concat', '37'), BinaryExpr('*', Number(2), Var('e', '38'), '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('element2', '44'), Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('concat', '47'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '48'), '49'), Number(1), '50'), Var('esize', '51')], '52'), Var('unsigned', '53')], '54')), Update(Var('maxmin', '55'), IfElse(Var('minimum', '60'), Call('Min', [Var('element1', '57'), Var('element2', '58')], '59'), Call('Max', [Var('element1', '62'), Var('element2', '63')], '64'), '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), Var('esize', '69')], '70'), ArrayIndex(Var('maxmin', '71'), [SliceRange(BinaryExpr('-', Var('esize', '72'), Number(1), '73'), Number(0), '74')], '75'))], 1, '77'), Update(ArrayIndex(Var('V', '78'), [Var('d', '79')], '80'), Var('result', '81'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='UMAXP Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': True, 'minimum': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_pair'),
    'vpmaxq_s16': ARMSema(intrin='vpmaxq_s16', inst='SMAXP', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('maxmin', '30')], ('integer', Number(64)), '31'), For(Var('e', '76'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('concat', '37'), BinaryExpr('*', Number(2), Var('e', '38'), '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('element2', '44'), Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('concat', '47'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '48'), '49'), Number(1), '50'), Var('esize', '51')], '52'), Var('unsigned', '53')], '54')), Update(Var('maxmin', '55'), IfElse(Var('minimum', '60'), Call('Min', [Var('element1', '57'), Var('element2', '58')], '59'), Call('Max', [Var('element1', '62'), Var('element2', '63')], '64'), '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), Var('esize', '69')], '70'), ArrayIndex(Var('maxmin', '71'), [SliceRange(BinaryExpr('-', Var('esize', '72'), Number(1), '73'), Number(0), '74')], '75'))], 1, '77'), Update(ArrayIndex(Var('V', '78'), [Var('d', '79')], '80'), Var('result', '81'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SMAXP Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': False, 'minimum': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_pair'),
    'vpmaxq_s32': ARMSema(intrin='vpmaxq_s32', inst='SMAXP', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('maxmin', '30')], ('integer', Number(64)), '31'), For(Var('e', '76'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('concat', '37'), BinaryExpr('*', Number(2), Var('e', '38'), '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('element2', '44'), Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('concat', '47'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '48'), '49'), Number(1), '50'), Var('esize', '51')], '52'), Var('unsigned', '53')], '54')), Update(Var('maxmin', '55'), IfElse(Var('minimum', '60'), Call('Min', [Var('element1', '57'), Var('element2', '58')], '59'), Call('Max', [Var('element1', '62'), Var('element2', '63')], '64'), '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), Var('esize', '69')], '70'), ArrayIndex(Var('maxmin', '71'), [SliceRange(BinaryExpr('-', Var('esize', '72'), Number(1), '73'), Number(0), '74')], '75'))], 1, '77'), Update(ArrayIndex(Var('V', '78'), [Var('d', '79')], '80'), Var('result', '81'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SMAXP Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': False, 'minimum': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_pair'),
    'vpmaxq_s8': ARMSema(intrin='vpmaxq_s8', inst='SMAXP', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('maxmin', '30')], ('integer', Number(64)), '31'), For(Var('e', '76'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('concat', '37'), BinaryExpr('*', Number(2), Var('e', '38'), '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('element2', '44'), Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('concat', '47'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '48'), '49'), Number(1), '50'), Var('esize', '51')], '52'), Var('unsigned', '53')], '54')), Update(Var('maxmin', '55'), IfElse(Var('minimum', '60'), Call('Min', [Var('element1', '57'), Var('element2', '58')], '59'), Call('Max', [Var('element1', '62'), Var('element2', '63')], '64'), '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), Var('esize', '69')], '70'), ArrayIndex(Var('maxmin', '71'), [SliceRange(BinaryExpr('-', Var('esize', '72'), Number(1), '73'), Number(0), '74')], '75'))], 1, '77'), Update(ArrayIndex(Var('V', '78'), [Var('d', '79')], '80'), Var('result', '81'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SMAXP Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': False, 'minimum': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_pair'),
    'vpmaxq_u16': ARMSema(intrin='vpmaxq_u16', inst='UMAXP', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('maxmin', '30')], ('integer', Number(64)), '31'), For(Var('e', '76'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('concat', '37'), BinaryExpr('*', Number(2), Var('e', '38'), '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('element2', '44'), Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('concat', '47'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '48'), '49'), Number(1), '50'), Var('esize', '51')], '52'), Var('unsigned', '53')], '54')), Update(Var('maxmin', '55'), IfElse(Var('minimum', '60'), Call('Min', [Var('element1', '57'), Var('element2', '58')], '59'), Call('Max', [Var('element1', '62'), Var('element2', '63')], '64'), '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), Var('esize', '69')], '70'), ArrayIndex(Var('maxmin', '71'), [SliceRange(BinaryExpr('-', Var('esize', '72'), Number(1), '73'), Number(0), '74')], '75'))], 1, '77'), Update(ArrayIndex(Var('V', '78'), [Var('d', '79')], '80'), Var('result', '81'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UMAXP Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': True, 'minimum': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_pair'),
    'vpmaxq_u32': ARMSema(intrin='vpmaxq_u32', inst='UMAXP', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('maxmin', '30')], ('integer', Number(64)), '31'), For(Var('e', '76'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('concat', '37'), BinaryExpr('*', Number(2), Var('e', '38'), '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('element2', '44'), Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('concat', '47'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '48'), '49'), Number(1), '50'), Var('esize', '51')], '52'), Var('unsigned', '53')], '54')), Update(Var('maxmin', '55'), IfElse(Var('minimum', '60'), Call('Min', [Var('element1', '57'), Var('element2', '58')], '59'), Call('Max', [Var('element1', '62'), Var('element2', '63')], '64'), '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), Var('esize', '69')], '70'), ArrayIndex(Var('maxmin', '71'), [SliceRange(BinaryExpr('-', Var('esize', '72'), Number(1), '73'), Number(0), '74')], '75'))], 1, '77'), Update(ArrayIndex(Var('V', '78'), [Var('d', '79')], '80'), Var('result', '81'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UMAXP Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': True, 'minimum': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_pair'),
    'vpmaxq_u8': ARMSema(intrin='vpmaxq_u8', inst='UMAXP', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('maxmin', '30')], ('integer', Number(64)), '31'), For(Var('e', '76'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('concat', '37'), BinaryExpr('*', Number(2), Var('e', '38'), '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('element2', '44'), Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('concat', '47'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '48'), '49'), Number(1), '50'), Var('esize', '51')], '52'), Var('unsigned', '53')], '54')), Update(Var('maxmin', '55'), IfElse(Var('minimum', '60'), Call('Min', [Var('element1', '57'), Var('element2', '58')], '59'), Call('Max', [Var('element1', '62'), Var('element2', '63')], '64'), '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), Var('esize', '69')], '70'), ArrayIndex(Var('maxmin', '71'), [SliceRange(BinaryExpr('-', Var('esize', '72'), Number(1), '73'), Number(0), '74')], '75'))], 1, '77'), Update(ArrayIndex(Var('V', '78'), [Var('d', '79')], '80'), Var('result', '81'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='UMAXP Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': True, 'minimum': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_pair'),
    'vpmin_s16': ARMSema(intrin='vpmin_s16', inst='SMINP', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('maxmin', '30')], ('integer', Number(64)), '31'), For(Var('e', '76'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('concat', '37'), BinaryExpr('*', Number(2), Var('e', '38'), '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('element2', '44'), Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('concat', '47'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '48'), '49'), Number(1), '50'), Var('esize', '51')], '52'), Var('unsigned', '53')], '54')), Update(Var('maxmin', '55'), IfElse(Var('minimum', '60'), Call('Min', [Var('element1', '57'), Var('element2', '58')], '59'), Call('Max', [Var('element1', '62'), Var('element2', '63')], '64'), '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), Var('esize', '69')], '70'), ArrayIndex(Var('maxmin', '71'), [SliceRange(BinaryExpr('-', Var('esize', '72'), Number(1), '73'), Number(0), '74')], '75'))], 1, '77'), Update(ArrayIndex(Var('V', '78'), [Var('d', '79')], '80'), Var('result', '81'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SMINP Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': False, 'minimum': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_pair'),
    'vpmin_s32': ARMSema(intrin='vpmin_s32', inst='SMINP', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('maxmin', '30')], ('integer', Number(64)), '31'), For(Var('e', '76'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('concat', '37'), BinaryExpr('*', Number(2), Var('e', '38'), '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('element2', '44'), Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('concat', '47'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '48'), '49'), Number(1), '50'), Var('esize', '51')], '52'), Var('unsigned', '53')], '54')), Update(Var('maxmin', '55'), IfElse(Var('minimum', '60'), Call('Min', [Var('element1', '57'), Var('element2', '58')], '59'), Call('Max', [Var('element1', '62'), Var('element2', '63')], '64'), '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), Var('esize', '69')], '70'), ArrayIndex(Var('maxmin', '71'), [SliceRange(BinaryExpr('-', Var('esize', '72'), Number(1), '73'), Number(0), '74')], '75'))], 1, '77'), Update(ArrayIndex(Var('V', '78'), [Var('d', '79')], '80'), Var('result', '81'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SMINP Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': False, 'minimum': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_pair'),
    'vpmin_s8': ARMSema(intrin='vpmin_s8', inst='SMINP', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('maxmin', '30')], ('integer', Number(64)), '31'), For(Var('e', '76'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('concat', '37'), BinaryExpr('*', Number(2), Var('e', '38'), '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('element2', '44'), Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('concat', '47'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '48'), '49'), Number(1), '50'), Var('esize', '51')], '52'), Var('unsigned', '53')], '54')), Update(Var('maxmin', '55'), IfElse(Var('minimum', '60'), Call('Min', [Var('element1', '57'), Var('element2', '58')], '59'), Call('Max', [Var('element1', '62'), Var('element2', '63')], '64'), '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), Var('esize', '69')], '70'), ArrayIndex(Var('maxmin', '71'), [SliceRange(BinaryExpr('-', Var('esize', '72'), Number(1), '73'), Number(0), '74')], '75'))], 1, '77'), Update(ArrayIndex(Var('V', '78'), [Var('d', '79')], '80'), Var('result', '81'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SMINP Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': False, 'minimum': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_pair'),
    'vpmin_u16': ARMSema(intrin='vpmin_u16', inst='UMINP', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('maxmin', '30')], ('integer', Number(64)), '31'), For(Var('e', '76'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('concat', '37'), BinaryExpr('*', Number(2), Var('e', '38'), '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('element2', '44'), Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('concat', '47'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '48'), '49'), Number(1), '50'), Var('esize', '51')], '52'), Var('unsigned', '53')], '54')), Update(Var('maxmin', '55'), IfElse(Var('minimum', '60'), Call('Min', [Var('element1', '57'), Var('element2', '58')], '59'), Call('Max', [Var('element1', '62'), Var('element2', '63')], '64'), '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), Var('esize', '69')], '70'), ArrayIndex(Var('maxmin', '71'), [SliceRange(BinaryExpr('-', Var('esize', '72'), Number(1), '73'), Number(0), '74')], '75'))], 1, '77'), Update(ArrayIndex(Var('V', '78'), [Var('d', '79')], '80'), Var('result', '81'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='UMINP Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': True, 'minimum': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_pair'),
    'vpmin_u32': ARMSema(intrin='vpmin_u32', inst='UMINP', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('maxmin', '30')], ('integer', Number(64)), '31'), For(Var('e', '76'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('concat', '37'), BinaryExpr('*', Number(2), Var('e', '38'), '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('element2', '44'), Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('concat', '47'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '48'), '49'), Number(1), '50'), Var('esize', '51')], '52'), Var('unsigned', '53')], '54')), Update(Var('maxmin', '55'), IfElse(Var('minimum', '60'), Call('Min', [Var('element1', '57'), Var('element2', '58')], '59'), Call('Max', [Var('element1', '62'), Var('element2', '63')], '64'), '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), Var('esize', '69')], '70'), ArrayIndex(Var('maxmin', '71'), [SliceRange(BinaryExpr('-', Var('esize', '72'), Number(1), '73'), Number(0), '74')], '75'))], 1, '77'), Update(ArrayIndex(Var('V', '78'), [Var('d', '79')], '80'), Var('result', '81'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='UMINP Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': True, 'minimum': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_pair'),
    'vpmin_u8': ARMSema(intrin='vpmin_u8', inst='UMINP', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('maxmin', '30')], ('integer', Number(64)), '31'), For(Var('e', '76'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('concat', '37'), BinaryExpr('*', Number(2), Var('e', '38'), '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('element2', '44'), Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('concat', '47'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '48'), '49'), Number(1), '50'), Var('esize', '51')], '52'), Var('unsigned', '53')], '54')), Update(Var('maxmin', '55'), IfElse(Var('minimum', '60'), Call('Min', [Var('element1', '57'), Var('element2', '58')], '59'), Call('Max', [Var('element1', '62'), Var('element2', '63')], '64'), '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), Var('esize', '69')], '70'), ArrayIndex(Var('maxmin', '71'), [SliceRange(BinaryExpr('-', Var('esize', '72'), Number(1), '73'), Number(0), '74')], '75'))], 1, '77'), Update(ArrayIndex(Var('V', '78'), [Var('d', '79')], '80'), Var('result', '81'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='UMINP Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': True, 'minimum': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_pair'),
    'vpminq_s16': ARMSema(intrin='vpminq_s16', inst='SMINP', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('maxmin', '30')], ('integer', Number(64)), '31'), For(Var('e', '76'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('concat', '37'), BinaryExpr('*', Number(2), Var('e', '38'), '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('element2', '44'), Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('concat', '47'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '48'), '49'), Number(1), '50'), Var('esize', '51')], '52'), Var('unsigned', '53')], '54')), Update(Var('maxmin', '55'), IfElse(Var('minimum', '60'), Call('Min', [Var('element1', '57'), Var('element2', '58')], '59'), Call('Max', [Var('element1', '62'), Var('element2', '63')], '64'), '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), Var('esize', '69')], '70'), ArrayIndex(Var('maxmin', '71'), [SliceRange(BinaryExpr('-', Var('esize', '72'), Number(1), '73'), Number(0), '74')], '75'))], 1, '77'), Update(ArrayIndex(Var('V', '78'), [Var('d', '79')], '80'), Var('result', '81'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SMINP Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': False, 'minimum': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_pair'),
    'vpminq_s32': ARMSema(intrin='vpminq_s32', inst='SMINP', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('maxmin', '30')], ('integer', Number(64)), '31'), For(Var('e', '76'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('concat', '37'), BinaryExpr('*', Number(2), Var('e', '38'), '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('element2', '44'), Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('concat', '47'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '48'), '49'), Number(1), '50'), Var('esize', '51')], '52'), Var('unsigned', '53')], '54')), Update(Var('maxmin', '55'), IfElse(Var('minimum', '60'), Call('Min', [Var('element1', '57'), Var('element2', '58')], '59'), Call('Max', [Var('element1', '62'), Var('element2', '63')], '64'), '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), Var('esize', '69')], '70'), ArrayIndex(Var('maxmin', '71'), [SliceRange(BinaryExpr('-', Var('esize', '72'), Number(1), '73'), Number(0), '74')], '75'))], 1, '77'), Update(ArrayIndex(Var('V', '78'), [Var('d', '79')], '80'), Var('result', '81'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SMINP Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': False, 'minimum': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_pair'),
    'vpminq_s8': ARMSema(intrin='vpminq_s8', inst='SMINP', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('maxmin', '30')], ('integer', Number(64)), '31'), For(Var('e', '76'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('concat', '37'), BinaryExpr('*', Number(2), Var('e', '38'), '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('element2', '44'), Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('concat', '47'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '48'), '49'), Number(1), '50'), Var('esize', '51')], '52'), Var('unsigned', '53')], '54')), Update(Var('maxmin', '55'), IfElse(Var('minimum', '60'), Call('Min', [Var('element1', '57'), Var('element2', '58')], '59'), Call('Max', [Var('element1', '62'), Var('element2', '63')], '64'), '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), Var('esize', '69')], '70'), ArrayIndex(Var('maxmin', '71'), [SliceRange(BinaryExpr('-', Var('esize', '72'), Number(1), '73'), Number(0), '74')], '75'))], 1, '77'), Update(ArrayIndex(Var('V', '78'), [Var('d', '79')], '80'), Var('result', '81'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SMINP Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': False, 'minimum': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_pair'),
    'vpminq_u16': ARMSema(intrin='vpminq_u16', inst='UMINP', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('maxmin', '30')], ('integer', Number(64)), '31'), For(Var('e', '76'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('concat', '37'), BinaryExpr('*', Number(2), Var('e', '38'), '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('element2', '44'), Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('concat', '47'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '48'), '49'), Number(1), '50'), Var('esize', '51')], '52'), Var('unsigned', '53')], '54')), Update(Var('maxmin', '55'), IfElse(Var('minimum', '60'), Call('Min', [Var('element1', '57'), Var('element2', '58')], '59'), Call('Max', [Var('element1', '62'), Var('element2', '63')], '64'), '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), Var('esize', '69')], '70'), ArrayIndex(Var('maxmin', '71'), [SliceRange(BinaryExpr('-', Var('esize', '72'), Number(1), '73'), Number(0), '74')], '75'))], 1, '77'), Update(ArrayIndex(Var('V', '78'), [Var('d', '79')], '80'), Var('result', '81'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UMINP Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': True, 'minimum': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_pair'),
    'vpminq_u32': ARMSema(intrin='vpminq_u32', inst='UMINP', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('maxmin', '30')], ('integer', Number(64)), '31'), For(Var('e', '76'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('concat', '37'), BinaryExpr('*', Number(2), Var('e', '38'), '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('element2', '44'), Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('concat', '47'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '48'), '49'), Number(1), '50'), Var('esize', '51')], '52'), Var('unsigned', '53')], '54')), Update(Var('maxmin', '55'), IfElse(Var('minimum', '60'), Call('Min', [Var('element1', '57'), Var('element2', '58')], '59'), Call('Max', [Var('element1', '62'), Var('element2', '63')], '64'), '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), Var('esize', '69')], '70'), ArrayIndex(Var('maxmin', '71'), [SliceRange(BinaryExpr('-', Var('esize', '72'), Number(1), '73'), Number(0), '74')], '75'))], 1, '77'), Update(ArrayIndex(Var('V', '78'), [Var('d', '79')], '80'), Var('result', '81'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UMINP Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': True, 'minimum': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_pair'),
    'vpminq_u8': ARMSema(intrin='vpminq_u8', inst='UMINP', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('concat', '23')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '18'), '19')), '24'), BinaryExpr(':', Var('operand2', '20'), Var('operand1', '21'), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('maxmin', '30')], ('integer', Number(64)), '31'), For(Var('e', '76'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element1', '34'), Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('concat', '37'), BinaryExpr('*', Number(2), Var('e', '38'), '39'), Var('esize', '40')], '41'), Var('unsigned', '42')], '43')), Update(Var('element2', '44'), Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('concat', '47'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '48'), '49'), Number(1), '50'), Var('esize', '51')], '52'), Var('unsigned', '53')], '54')), Update(Var('maxmin', '55'), IfElse(Var('minimum', '60'), Call('Min', [Var('element1', '57'), Var('element2', '58')], '59'), Call('Max', [Var('element1', '62'), Var('element2', '63')], '64'), '65')), Update(ArrayIndex(Var('Elem', '66'), [Var('result', '67'), Var('e', '68'), Var('esize', '69')], '70'), ArrayIndex(Var('maxmin', '71'), [SliceRange(BinaryExpr('-', Var('esize', '72'), Number(1), '73'), Number(0), '74')], '75'))], 1, '77'), Update(ArrayIndex(Var('V', '78'), [Var('d', '79')], '80'), Var('result', '81'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='UMINP Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': True, 'minimum': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_max_min_pair'),
    'vqabs_s16': ARMSema(intrin='vqabs_s16', inst='SQABS', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '43'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), IfElse(Var('neg', '25'), [Update(Var('element', '26'), UnaryExpr('-', Var('element', '27'), '28'))], [Update(Var('element', '29'), Call('Abs', [Var('element', '31')], '32'))], '33'), Update(ArrayIndex(Var('Elem', '34'), [Var('result', '35'), Var('e', '36'), Var('esize', '37')], '38'), Call('SignedSatQ', [Var('element', '40'), Var('esize', '41')], '42'))], 1, '44'), Update(ArrayIndex(Var('V', '45'), [Var('d', '46')], '47'), Var('result', '48'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SQABS Vd.4H,Vn.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'neg': False}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_sat_simd'),
    'vqabs_s32': ARMSema(intrin='vqabs_s32', inst='SQABS', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '43'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), IfElse(Var('neg', '25'), [Update(Var('element', '26'), UnaryExpr('-', Var('element', '27'), '28'))], [Update(Var('element', '29'), Call('Abs', [Var('element', '31')], '32'))], '33'), Update(ArrayIndex(Var('Elem', '34'), [Var('result', '35'), Var('e', '36'), Var('esize', '37')], '38'), Call('SignedSatQ', [Var('element', '40'), Var('esize', '41')], '42'))], 1, '44'), Update(ArrayIndex(Var('V', '45'), [Var('d', '46')], '47'), Var('result', '48'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SQABS Vd.2S,Vn.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'neg': False}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_sat_simd'),
    'vqabs_s64': ARMSema(intrin='vqabs_s64', inst='SQABS', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '43'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), IfElse(Var('neg', '25'), [Update(Var('element', '26'), UnaryExpr('-', Var('element', '27'), '28'))], [Update(Var('element', '29'), Call('Abs', [Var('element', '31')], '32'))], '33'), Update(ArrayIndex(Var('Elem', '34'), [Var('result', '35'), Var('e', '36'), Var('esize', '37')], '38'), Call('SignedSatQ', [Var('element', '40'), Var('esize', '41')], '42'))], 1, '44'), Update(ArrayIndex(Var('V', '45'), [Var('d', '46')], '47'), Var('result', '48'))], rettype='int64x1_t', ret_is_signed=True, inst_form='SQABS Dd,Dn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'neg': False}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_sat_sisd'),
    'vqabs_s8': ARMSema(intrin='vqabs_s8', inst='SQABS', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '43'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), IfElse(Var('neg', '25'), [Update(Var('element', '26'), UnaryExpr('-', Var('element', '27'), '28'))], [Update(Var('element', '29'), Call('Abs', [Var('element', '31')], '32'))], '33'), Update(ArrayIndex(Var('Elem', '34'), [Var('result', '35'), Var('e', '36'), Var('esize', '37')], '38'), Call('SignedSatQ', [Var('element', '40'), Var('esize', '41')], '42'))], 1, '44'), Update(ArrayIndex(Var('V', '45'), [Var('d', '46')], '47'), Var('result', '48'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SQABS Vd.8B,Vn.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'neg': False}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_sat_simd'),
    'vqabsb_s8': ARMSema(intrin='vqabsb_s8', inst='SQABS', params=[Parameter(name='a', type='int8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '43'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), IfElse(Var('neg', '25'), [Update(Var('element', '26'), UnaryExpr('-', Var('element', '27'), '28'))], [Update(Var('element', '29'), Call('Abs', [Var('element', '31')], '32'))], '33'), Update(ArrayIndex(Var('Elem', '34'), [Var('result', '35'), Var('e', '36'), Var('esize', '37')], '38'), Call('SignedSatQ', [Var('element', '40'), Var('esize', '41')], '42'))], 1, '44'), Update(ArrayIndex(Var('V', '45'), [Var('d', '46')], '47'), Var('result', '48'))], rettype='int8_t', ret_is_signed=True, inst_form='SQABS Bd,Bn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 8, 'elements': 1, 'neg': False}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_sat_sisd'),
    'vqabsd_s64': ARMSema(intrin='vqabsd_s64', inst='SQABS', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '43'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), IfElse(Var('neg', '25'), [Update(Var('element', '26'), UnaryExpr('-', Var('element', '27'), '28'))], [Update(Var('element', '29'), Call('Abs', [Var('element', '31')], '32'))], '33'), Update(ArrayIndex(Var('Elem', '34'), [Var('result', '35'), Var('e', '36'), Var('esize', '37')], '38'), Call('SignedSatQ', [Var('element', '40'), Var('esize', '41')], '42'))], 1, '44'), Update(ArrayIndex(Var('V', '45'), [Var('d', '46')], '47'), Var('result', '48'))], rettype='int64_t', ret_is_signed=True, inst_form='SQABS Dd,Dn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'neg': False}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_sat_sisd'),
    'vqabsh_s16': ARMSema(intrin='vqabsh_s16', inst='SQABS', params=[Parameter(name='a', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '43'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), IfElse(Var('neg', '25'), [Update(Var('element', '26'), UnaryExpr('-', Var('element', '27'), '28'))], [Update(Var('element', '29'), Call('Abs', [Var('element', '31')], '32'))], '33'), Update(ArrayIndex(Var('Elem', '34'), [Var('result', '35'), Var('e', '36'), Var('esize', '37')], '38'), Call('SignedSatQ', [Var('element', '40'), Var('esize', '41')], '42'))], 1, '44'), Update(ArrayIndex(Var('V', '45'), [Var('d', '46')], '47'), Var('result', '48'))], rettype='int16_t', ret_is_signed=True, inst_form='SQABS Hd,Hn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'neg': False}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_sat_sisd'),
    'vqabsq_s16': ARMSema(intrin='vqabsq_s16', inst='SQABS', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '43'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), IfElse(Var('neg', '25'), [Update(Var('element', '26'), UnaryExpr('-', Var('element', '27'), '28'))], [Update(Var('element', '29'), Call('Abs', [Var('element', '31')], '32'))], '33'), Update(ArrayIndex(Var('Elem', '34'), [Var('result', '35'), Var('e', '36'), Var('esize', '37')], '38'), Call('SignedSatQ', [Var('element', '40'), Var('esize', '41')], '42'))], 1, '44'), Update(ArrayIndex(Var('V', '45'), [Var('d', '46')], '47'), Var('result', '48'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SQABS Vd.8H,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'neg': False}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_sat_simd'),
    'vqabsq_s32': ARMSema(intrin='vqabsq_s32', inst='SQABS', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '43'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), IfElse(Var('neg', '25'), [Update(Var('element', '26'), UnaryExpr('-', Var('element', '27'), '28'))], [Update(Var('element', '29'), Call('Abs', [Var('element', '31')], '32'))], '33'), Update(ArrayIndex(Var('Elem', '34'), [Var('result', '35'), Var('e', '36'), Var('esize', '37')], '38'), Call('SignedSatQ', [Var('element', '40'), Var('esize', '41')], '42'))], 1, '44'), Update(ArrayIndex(Var('V', '45'), [Var('d', '46')], '47'), Var('result', '48'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SQABS Vd.4S,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'neg': False}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_sat_simd'),
    'vqabsq_s64': ARMSema(intrin='vqabsq_s64', inst='SQABS', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '43'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), IfElse(Var('neg', '25'), [Update(Var('element', '26'), UnaryExpr('-', Var('element', '27'), '28'))], [Update(Var('element', '29'), Call('Abs', [Var('element', '31')], '32'))], '33'), Update(ArrayIndex(Var('Elem', '34'), [Var('result', '35'), Var('e', '36'), Var('esize', '37')], '38'), Call('SignedSatQ', [Var('element', '40'), Var('esize', '41')], '42'))], 1, '44'), Update(ArrayIndex(Var('V', '45'), [Var('d', '46')], '47'), Var('result', '48'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SQABS Vd.2D,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'neg': False}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_sat_simd'),
    'vqabsq_s8': ARMSema(intrin='vqabsq_s8', inst='SQABS', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '43'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), IfElse(Var('neg', '25'), [Update(Var('element', '26'), UnaryExpr('-', Var('element', '27'), '28'))], [Update(Var('element', '29'), Call('Abs', [Var('element', '31')], '32'))], '33'), Update(ArrayIndex(Var('Elem', '34'), [Var('result', '35'), Var('e', '36'), Var('esize', '37')], '38'), Call('SignedSatQ', [Var('element', '40'), Var('esize', '41')], '42'))], 1, '44'), Update(ArrayIndex(Var('V', '45'), [Var('d', '46')], '47'), Var('result', '48'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SQABS Vd.16B,Vn.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'neg': False}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_sat_simd'),
    'vqabss_s32': ARMSema(intrin='vqabss_s32', inst='SQABS', params=[Parameter(name='a', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '43'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), IfElse(Var('neg', '25'), [Update(Var('element', '26'), UnaryExpr('-', Var('element', '27'), '28'))], [Update(Var('element', '29'), Call('Abs', [Var('element', '31')], '32'))], '33'), Update(ArrayIndex(Var('Elem', '34'), [Var('result', '35'), Var('e', '36'), Var('esize', '37')], '38'), Call('SignedSatQ', [Var('element', '40'), Var('esize', '41')], '42'))], 1, '44'), Update(ArrayIndex(Var('V', '45'), [Var('d', '46')], '47'), Var('result', '48'))], rettype='int32_t', ret_is_signed=True, inst_form='SQABS Sd,Sn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'neg': False}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_sat_sisd'),
    'vqadd_s16': ARMSema(intrin='vqadd_s16', inst='SQADD', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('sum', '46'), BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('sum', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SQADD Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_saturating_simd'),
    'vqadd_s32': ARMSema(intrin='vqadd_s32', inst='SQADD', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('sum', '46'), BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('sum', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SQADD Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_saturating_simd'),
    'vqadd_s64': ARMSema(intrin='vqadd_s64', inst='SQADD', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('sum', '46'), BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('sum', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='int64x1_t', ret_is_signed=True, inst_form='SQADD Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_saturating_sisd'),
    'vqadd_s8': ARMSema(intrin='vqadd_s8', inst='SQADD', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('sum', '46'), BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('sum', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SQADD Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_saturating_simd'),
    'vqadd_u16': ARMSema(intrin='vqadd_u16', inst='UQADD', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('sum', '46'), BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('sum', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='UQADD Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_saturating_simd'),
    'vqadd_u32': ARMSema(intrin='vqadd_u32', inst='UQADD', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('sum', '46'), BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('sum', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='UQADD Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_saturating_simd'),
    'vqadd_u64': ARMSema(intrin='vqadd_u64', inst='UQADD', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('sum', '46'), BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('sum', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='UQADD Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_saturating_sisd'),
    'vqadd_u8': ARMSema(intrin='vqadd_u8', inst='UQADD', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('sum', '46'), BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('sum', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='UQADD Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_saturating_simd'),
    'vqaddb_s8': ARMSema(intrin='vqaddb_s8', inst='SQADD', params=[Parameter(name='a', type='int8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('sum', '46'), BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('sum', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='int8_t', ret_is_signed=True, inst_form='SQADD Bd,Bn,Bm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 8, 'elements': 1, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_saturating_sisd'),
    'vqaddb_u8': ARMSema(intrin='vqaddb_u8', inst='UQADD', params=[Parameter(name='a', type='uint8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('sum', '46'), BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('sum', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='uint8_t', ret_is_signed=False, inst_form='UQADD Bd,Bn,Bm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 8, 'elements': 1, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_saturating_sisd'),
    'vqaddd_s64': ARMSema(intrin='vqaddd_s64', inst='SQADD', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('sum', '46'), BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('sum', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='int64_t', ret_is_signed=True, inst_form='SQADD Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_saturating_sisd'),
    'vqaddd_u64': ARMSema(intrin='vqaddd_u64', inst='UQADD', params=[Parameter(name='a', type='uint64_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('sum', '46'), BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('sum', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='uint64_t', ret_is_signed=False, inst_form='UQADD Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_saturating_sisd'),
    'vqaddh_s16': ARMSema(intrin='vqaddh_s16', inst='SQADD', params=[Parameter(name='a', type='int16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('sum', '46'), BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('sum', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='int16_t', ret_is_signed=True, inst_form='SQADD Hd,Hn,Hm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_saturating_sisd'),
    'vqaddh_u16': ARMSema(intrin='vqaddh_u16', inst='UQADD', params=[Parameter(name='a', type='uint16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('sum', '46'), BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('sum', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='uint16_t', ret_is_signed=False, inst_form='UQADD Hd,Hn,Hm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_saturating_sisd'),
    'vqaddq_s16': ARMSema(intrin='vqaddq_s16', inst='SQADD', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('sum', '46'), BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('sum', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SQADD Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_saturating_simd'),
    'vqaddq_s32': ARMSema(intrin='vqaddq_s32', inst='SQADD', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('sum', '46'), BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('sum', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SQADD Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_saturating_simd'),
    'vqaddq_s64': ARMSema(intrin='vqaddq_s64', inst='SQADD', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('sum', '46'), BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('sum', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SQADD Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_saturating_simd'),
    'vqaddq_s8': ARMSema(intrin='vqaddq_s8', inst='SQADD', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('sum', '46'), BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('sum', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SQADD Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_saturating_simd'),
    'vqaddq_u16': ARMSema(intrin='vqaddq_u16', inst='UQADD', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('sum', '46'), BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('sum', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UQADD Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_saturating_simd'),
    'vqaddq_u32': ARMSema(intrin='vqaddq_u32', inst='UQADD', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('sum', '46'), BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('sum', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UQADD Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_saturating_simd'),
    'vqaddq_u64': ARMSema(intrin='vqaddq_u64', inst='UQADD', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('sum', '46'), BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('sum', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UQADD Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_saturating_simd'),
    'vqaddq_u8': ARMSema(intrin='vqaddq_u8', inst='UQADD', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('sum', '46'), BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('sum', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='UQADD Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_saturating_simd'),
    'vqadds_s32': ARMSema(intrin='vqadds_s32', inst='SQADD', params=[Parameter(name='a', type='int32_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('sum', '46'), BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('sum', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='int32_t', ret_is_signed=True, inst_form='SQADD Sd,Sn,Sm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_saturating_sisd'),
    'vqadds_u32': ARMSema(intrin='vqadds_u32', inst='UQADD', params=[Parameter(name='a', type='uint32_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sum', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('sum', '46'), BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('sum', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='uint32_t', ret_is_signed=False, inst_form='UQADD Sd,Sn,Sm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_saturating_sisd'),
    'vqdmlal_high_n_s16': ARMSema(intrin='vqdmlal_high_n_s16', inst='SQDMLAL2', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarDeclInit(VarsDecl([Var('operand3', '21')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '22'), ArrayIndex(Var('V', '18'), [Var('d', '19')], '20'), '23'), VarsDecl([Var('result', '26')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '24'), '25')), '27'), VarsDecl([Var('element1', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('element2', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('product', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('accum', '36')], ('integer', Number(64)), '37'), VarsDecl([Var('sat1', '38')], ('boolean', Number(1)), '39'), VarsDecl([Var('sat2', '40')], ('boolean', Number(1)), '41'), Update(Var('element2', '42'), Call('SInt', [ArrayIndex(Var('Elem', '44'), [Var('operand2', '45'), Var('index', '46'), Var('esize', '47')], '48')], '49')), For(Var('e', '108'), Number(0), BinaryExpr('-', Var('elements', '50'), Number(1), '51'), [Update(Var('element1', '52'), Call('SInt', [ArrayIndex(Var('Elem', '54'), [Var('operand1', '55'), Var('e', '56'), Var('esize', '57')], '58')], '59')), Update(Var('product', '60'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '62'), '63'), Var('element2', '64'), '65'), BinaryExpr('*', Number(2), Var('esize', '66'), '67')], '68')), IfElse(Var('sub_op', '69'), [Update(Var('accum', '70'), BinaryExpr('-', Call('SInt', [ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77')], '78'), Call('SInt', [Var('product', '80')], '81'), '82'))], [Update(Var('accum', '83'), BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '85'), [Var('operand3', '86'), Var('e', '87'), BinaryExpr('*', Number(2), Var('esize', '88'), '89')], '90')], '91'), Call('SInt', [Var('product', '93')], '94'), '95'))], '96'), Update(ArrayIndex(Var('Elem', '97'), [Var('result', '98'), Var('e', '99'), BinaryExpr('*', Number(2), Var('esize', '100'), '101')], '102'), Call('SignedSatQ', [Var('accum', '104'), BinaryExpr('*', Number(2), Var('esize', '105'), '106')], '107'))], 1, '109'), Update(ArrayIndex(Var('V', '110'), [Var('d', '111')], '112'), Var('result', '113'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SQDMLAL2 Vd.4S,Vn.8H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_double_simd'),
    'vqdmlal_high_n_s32': ARMSema(intrin='vqdmlal_high_n_s32', inst='SQDMLAL2', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarDeclInit(VarsDecl([Var('operand3', '21')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '22'), ArrayIndex(Var('V', '18'), [Var('d', '19')], '20'), '23'), VarsDecl([Var('result', '26')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '24'), '25')), '27'), VarsDecl([Var('element1', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('element2', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('product', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('accum', '36')], ('integer', Number(64)), '37'), VarsDecl([Var('sat1', '38')], ('boolean', Number(1)), '39'), VarsDecl([Var('sat2', '40')], ('boolean', Number(1)), '41'), Update(Var('element2', '42'), Call('SInt', [ArrayIndex(Var('Elem', '44'), [Var('operand2', '45'), Var('index', '46'), Var('esize', '47')], '48')], '49')), For(Var('e', '108'), Number(0), BinaryExpr('-', Var('elements', '50'), Number(1), '51'), [Update(Var('element1', '52'), Call('SInt', [ArrayIndex(Var('Elem', '54'), [Var('operand1', '55'), Var('e', '56'), Var('esize', '57')], '58')], '59')), Update(Var('product', '60'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '62'), '63'), Var('element2', '64'), '65'), BinaryExpr('*', Number(2), Var('esize', '66'), '67')], '68')), IfElse(Var('sub_op', '69'), [Update(Var('accum', '70'), BinaryExpr('-', Call('SInt', [ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77')], '78'), Call('SInt', [Var('product', '80')], '81'), '82'))], [Update(Var('accum', '83'), BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '85'), [Var('operand3', '86'), Var('e', '87'), BinaryExpr('*', Number(2), Var('esize', '88'), '89')], '90')], '91'), Call('SInt', [Var('product', '93')], '94'), '95'))], '96'), Update(ArrayIndex(Var('Elem', '97'), [Var('result', '98'), Var('e', '99'), BinaryExpr('*', Number(2), Var('esize', '100'), '101')], '102'), Call('SignedSatQ', [Var('accum', '104'), BinaryExpr('*', Number(2), Var('esize', '105'), '106')], '107'))], 1, '109'), Update(ArrayIndex(Var('V', '110'), [Var('d', '111')], '112'), Var('result', '113'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SQDMLAL2 Vd.2D,Vn.4S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_double_simd'),
    'vqdmlal_high_s16': ARMSema(intrin='vqdmlal_high_s16', inst='SQDMLAL2', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '37')], ('integer', Number(64)), '38'), VarsDecl([Var('sat1', '39')], ('boolean', Number(1)), '40'), VarsDecl([Var('sat2', '41')], ('boolean', Number(1)), '42'), For(Var('e', '109'), Number(0), BinaryExpr('-', Var('elements', '43'), Number(1), '44'), [Update(Var('element1', '45'), Call('SInt', [ArrayIndex(Var('Elem', '47'), [Var('operand1', '48'), Var('e', '49'), Var('esize', '50')], '51')], '52')), Update(Var('element2', '53'), Call('SInt', [ArrayIndex(Var('Elem', '55'), [Var('operand2', '56'), Var('e', '57'), Var('esize', '58')], '59')], '60')), Update(Var('product', '61'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '63'), '64'), Var('element2', '65'), '66'), BinaryExpr('*', Number(2), Var('esize', '67'), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', Call('SInt', [ArrayIndex(Var('Elem', '73'), [Var('operand3', '74'), Var('e', '75'), BinaryExpr('*', Number(2), Var('esize', '76'), '77')], '78')], '79'), Call('SInt', [Var('product', '81')], '82'), '83'))], [Update(Var('accum', '84'), BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91')], '92'), Call('SInt', [Var('product', '94')], '95'), '96'))], '97'), Update(ArrayIndex(Var('Elem', '98'), [Var('result', '99'), Var('e', '100'), BinaryExpr('*', Number(2), Var('esize', '101'), '102')], '103'), Call('SignedSatQ', [Var('accum', '105'), BinaryExpr('*', Number(2), Var('esize', '106'), '107')], '108'))], 1, '110'), Update(ArrayIndex(Var('V', '111'), [Var('d', '112')], '113'), Var('result', '114'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SQDMLAL2 Vd.4S,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_dmacc_simd'),
    'vqdmlal_high_s32': ARMSema(intrin='vqdmlal_high_s32', inst='SQDMLAL2', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '37')], ('integer', Number(64)), '38'), VarsDecl([Var('sat1', '39')], ('boolean', Number(1)), '40'), VarsDecl([Var('sat2', '41')], ('boolean', Number(1)), '42'), For(Var('e', '109'), Number(0), BinaryExpr('-', Var('elements', '43'), Number(1), '44'), [Update(Var('element1', '45'), Call('SInt', [ArrayIndex(Var('Elem', '47'), [Var('operand1', '48'), Var('e', '49'), Var('esize', '50')], '51')], '52')), Update(Var('element2', '53'), Call('SInt', [ArrayIndex(Var('Elem', '55'), [Var('operand2', '56'), Var('e', '57'), Var('esize', '58')], '59')], '60')), Update(Var('product', '61'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '63'), '64'), Var('element2', '65'), '66'), BinaryExpr('*', Number(2), Var('esize', '67'), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', Call('SInt', [ArrayIndex(Var('Elem', '73'), [Var('operand3', '74'), Var('e', '75'), BinaryExpr('*', Number(2), Var('esize', '76'), '77')], '78')], '79'), Call('SInt', [Var('product', '81')], '82'), '83'))], [Update(Var('accum', '84'), BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91')], '92'), Call('SInt', [Var('product', '94')], '95'), '96'))], '97'), Update(ArrayIndex(Var('Elem', '98'), [Var('result', '99'), Var('e', '100'), BinaryExpr('*', Number(2), Var('esize', '101'), '102')], '103'), Call('SignedSatQ', [Var('accum', '105'), BinaryExpr('*', Number(2), Var('esize', '106'), '107')], '108'))], 1, '110'), Update(ArrayIndex(Var('V', '111'), [Var('d', '112')], '113'), Var('result', '114'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SQDMLAL2 Vd.2D,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_dmacc_simd'),
    'vqdmlal_n_s16': ARMSema(intrin='vqdmlal_n_s16', inst='SQDMLAL', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarDeclInit(VarsDecl([Var('operand3', '21')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '22'), ArrayIndex(Var('V', '18'), [Var('d', '19')], '20'), '23'), VarsDecl([Var('result', '26')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '24'), '25')), '27'), VarsDecl([Var('element1', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('element2', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('product', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('accum', '36')], ('integer', Number(64)), '37'), VarsDecl([Var('sat1', '38')], ('boolean', Number(1)), '39'), VarsDecl([Var('sat2', '40')], ('boolean', Number(1)), '41'), Update(Var('element2', '42'), Call('SInt', [ArrayIndex(Var('Elem', '44'), [Var('operand2', '45'), Var('index', '46'), Var('esize', '47')], '48')], '49')), For(Var('e', '108'), Number(0), BinaryExpr('-', Var('elements', '50'), Number(1), '51'), [Update(Var('element1', '52'), Call('SInt', [ArrayIndex(Var('Elem', '54'), [Var('operand1', '55'), Var('e', '56'), Var('esize', '57')], '58')], '59')), Update(Var('product', '60'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '62'), '63'), Var('element2', '64'), '65'), BinaryExpr('*', Number(2), Var('esize', '66'), '67')], '68')), IfElse(Var('sub_op', '69'), [Update(Var('accum', '70'), BinaryExpr('-', Call('SInt', [ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77')], '78'), Call('SInt', [Var('product', '80')], '81'), '82'))], [Update(Var('accum', '83'), BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '85'), [Var('operand3', '86'), Var('e', '87'), BinaryExpr('*', Number(2), Var('esize', '88'), '89')], '90')], '91'), Call('SInt', [Var('product', '93')], '94'), '95'))], '96'), Update(ArrayIndex(Var('Elem', '97'), [Var('result', '98'), Var('e', '99'), BinaryExpr('*', Number(2), Var('esize', '100'), '101')], '102'), Call('SignedSatQ', [Var('accum', '104'), BinaryExpr('*', Number(2), Var('esize', '105'), '106')], '107'))], 1, '109'), Update(ArrayIndex(Var('V', '110'), [Var('d', '111')], '112'), Var('result', '113'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SQDMLAL Vd.4S,Vn.4H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_double_simd'),
    'vqdmlal_n_s32': ARMSema(intrin='vqdmlal_n_s32', inst='SQDMLAL', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarDeclInit(VarsDecl([Var('operand3', '21')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '22'), ArrayIndex(Var('V', '18'), [Var('d', '19')], '20'), '23'), VarsDecl([Var('result', '26')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '24'), '25')), '27'), VarsDecl([Var('element1', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('element2', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('product', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('accum', '36')], ('integer', Number(64)), '37'), VarsDecl([Var('sat1', '38')], ('boolean', Number(1)), '39'), VarsDecl([Var('sat2', '40')], ('boolean', Number(1)), '41'), Update(Var('element2', '42'), Call('SInt', [ArrayIndex(Var('Elem', '44'), [Var('operand2', '45'), Var('index', '46'), Var('esize', '47')], '48')], '49')), For(Var('e', '108'), Number(0), BinaryExpr('-', Var('elements', '50'), Number(1), '51'), [Update(Var('element1', '52'), Call('SInt', [ArrayIndex(Var('Elem', '54'), [Var('operand1', '55'), Var('e', '56'), Var('esize', '57')], '58')], '59')), Update(Var('product', '60'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '62'), '63'), Var('element2', '64'), '65'), BinaryExpr('*', Number(2), Var('esize', '66'), '67')], '68')), IfElse(Var('sub_op', '69'), [Update(Var('accum', '70'), BinaryExpr('-', Call('SInt', [ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77')], '78'), Call('SInt', [Var('product', '80')], '81'), '82'))], [Update(Var('accum', '83'), BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '85'), [Var('operand3', '86'), Var('e', '87'), BinaryExpr('*', Number(2), Var('esize', '88'), '89')], '90')], '91'), Call('SInt', [Var('product', '93')], '94'), '95'))], '96'), Update(ArrayIndex(Var('Elem', '97'), [Var('result', '98'), Var('e', '99'), BinaryExpr('*', Number(2), Var('esize', '100'), '101')], '102'), Call('SignedSatQ', [Var('accum', '104'), BinaryExpr('*', Number(2), Var('esize', '105'), '106')], '107'))], 1, '109'), Update(ArrayIndex(Var('V', '110'), [Var('d', '111')], '112'), Var('result', '113'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SQDMLAL Vd.2D,Vn.2S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_double_simd'),
    'vqdmlal_s16': ARMSema(intrin='vqdmlal_s16', inst='SQDMLAL', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '37')], ('integer', Number(64)), '38'), VarsDecl([Var('sat1', '39')], ('boolean', Number(1)), '40'), VarsDecl([Var('sat2', '41')], ('boolean', Number(1)), '42'), For(Var('e', '109'), Number(0), BinaryExpr('-', Var('elements', '43'), Number(1), '44'), [Update(Var('element1', '45'), Call('SInt', [ArrayIndex(Var('Elem', '47'), [Var('operand1', '48'), Var('e', '49'), Var('esize', '50')], '51')], '52')), Update(Var('element2', '53'), Call('SInt', [ArrayIndex(Var('Elem', '55'), [Var('operand2', '56'), Var('e', '57'), Var('esize', '58')], '59')], '60')), Update(Var('product', '61'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '63'), '64'), Var('element2', '65'), '66'), BinaryExpr('*', Number(2), Var('esize', '67'), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', Call('SInt', [ArrayIndex(Var('Elem', '73'), [Var('operand3', '74'), Var('e', '75'), BinaryExpr('*', Number(2), Var('esize', '76'), '77')], '78')], '79'), Call('SInt', [Var('product', '81')], '82'), '83'))], [Update(Var('accum', '84'), BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91')], '92'), Call('SInt', [Var('product', '94')], '95'), '96'))], '97'), Update(ArrayIndex(Var('Elem', '98'), [Var('result', '99'), Var('e', '100'), BinaryExpr('*', Number(2), Var('esize', '101'), '102')], '103'), Call('SignedSatQ', [Var('accum', '105'), BinaryExpr('*', Number(2), Var('esize', '106'), '107')], '108'))], 1, '110'), Update(ArrayIndex(Var('V', '111'), [Var('d', '112')], '113'), Var('result', '114'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SQDMLAL Vd.4S,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_dmacc_simd'),
    'vqdmlal_s32': ARMSema(intrin='vqdmlal_s32', inst='SQDMLAL', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '37')], ('integer', Number(64)), '38'), VarsDecl([Var('sat1', '39')], ('boolean', Number(1)), '40'), VarsDecl([Var('sat2', '41')], ('boolean', Number(1)), '42'), For(Var('e', '109'), Number(0), BinaryExpr('-', Var('elements', '43'), Number(1), '44'), [Update(Var('element1', '45'), Call('SInt', [ArrayIndex(Var('Elem', '47'), [Var('operand1', '48'), Var('e', '49'), Var('esize', '50')], '51')], '52')), Update(Var('element2', '53'), Call('SInt', [ArrayIndex(Var('Elem', '55'), [Var('operand2', '56'), Var('e', '57'), Var('esize', '58')], '59')], '60')), Update(Var('product', '61'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '63'), '64'), Var('element2', '65'), '66'), BinaryExpr('*', Number(2), Var('esize', '67'), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', Call('SInt', [ArrayIndex(Var('Elem', '73'), [Var('operand3', '74'), Var('e', '75'), BinaryExpr('*', Number(2), Var('esize', '76'), '77')], '78')], '79'), Call('SInt', [Var('product', '81')], '82'), '83'))], [Update(Var('accum', '84'), BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91')], '92'), Call('SInt', [Var('product', '94')], '95'), '96'))], '97'), Update(ArrayIndex(Var('Elem', '98'), [Var('result', '99'), Var('e', '100'), BinaryExpr('*', Number(2), Var('esize', '101'), '102')], '103'), Call('SignedSatQ', [Var('accum', '105'), BinaryExpr('*', Number(2), Var('esize', '106'), '107')], '108'))], 1, '110'), Update(ArrayIndex(Var('V', '111'), [Var('d', '112')], '113'), Var('result', '114'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SQDMLAL Vd.2D,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_dmacc_simd'),
    'vqdmlalh_s16': ARMSema(intrin='vqdmlalh_s16', inst='SQDMLAL', params=[Parameter(name='a', type='int32_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '37')], ('integer', Number(64)), '38'), VarsDecl([Var('sat1', '39')], ('boolean', Number(1)), '40'), VarsDecl([Var('sat2', '41')], ('boolean', Number(1)), '42'), For(Var('e', '109'), Number(0), BinaryExpr('-', Var('elements', '43'), Number(1), '44'), [Update(Var('element1', '45'), Call('SInt', [ArrayIndex(Var('Elem', '47'), [Var('operand1', '48'), Var('e', '49'), Var('esize', '50')], '51')], '52')), Update(Var('element2', '53'), Call('SInt', [ArrayIndex(Var('Elem', '55'), [Var('operand2', '56'), Var('e', '57'), Var('esize', '58')], '59')], '60')), Update(Var('product', '61'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '63'), '64'), Var('element2', '65'), '66'), BinaryExpr('*', Number(2), Var('esize', '67'), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', Call('SInt', [ArrayIndex(Var('Elem', '73'), [Var('operand3', '74'), Var('e', '75'), BinaryExpr('*', Number(2), Var('esize', '76'), '77')], '78')], '79'), Call('SInt', [Var('product', '81')], '82'), '83'))], [Update(Var('accum', '84'), BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91')], '92'), Call('SInt', [Var('product', '94')], '95'), '96'))], '97'), Update(ArrayIndex(Var('Elem', '98'), [Var('result', '99'), Var('e', '100'), BinaryExpr('*', Number(2), Var('esize', '101'), '102')], '103'), Call('SignedSatQ', [Var('accum', '105'), BinaryExpr('*', Number(2), Var('esize', '106'), '107')], '108'))], 1, '110'), Update(ArrayIndex(Var('V', '111'), [Var('d', '112')], '113'), Var('result', '114'))], rettype='int32_t', ret_is_signed=True, inst_form='SQDMLAL Sd,Hn,Hm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'part': 0, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_dmacc_sisd'),
    'vqdmlals_s32': ARMSema(intrin='vqdmlals_s32', inst='SQDMLAL', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '37')], ('integer', Number(64)), '38'), VarsDecl([Var('sat1', '39')], ('boolean', Number(1)), '40'), VarsDecl([Var('sat2', '41')], ('boolean', Number(1)), '42'), For(Var('e', '109'), Number(0), BinaryExpr('-', Var('elements', '43'), Number(1), '44'), [Update(Var('element1', '45'), Call('SInt', [ArrayIndex(Var('Elem', '47'), [Var('operand1', '48'), Var('e', '49'), Var('esize', '50')], '51')], '52')), Update(Var('element2', '53'), Call('SInt', [ArrayIndex(Var('Elem', '55'), [Var('operand2', '56'), Var('e', '57'), Var('esize', '58')], '59')], '60')), Update(Var('product', '61'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '63'), '64'), Var('element2', '65'), '66'), BinaryExpr('*', Number(2), Var('esize', '67'), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', Call('SInt', [ArrayIndex(Var('Elem', '73'), [Var('operand3', '74'), Var('e', '75'), BinaryExpr('*', Number(2), Var('esize', '76'), '77')], '78')], '79'), Call('SInt', [Var('product', '81')], '82'), '83'))], [Update(Var('accum', '84'), BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91')], '92'), Call('SInt', [Var('product', '94')], '95'), '96'))], '97'), Update(ArrayIndex(Var('Elem', '98'), [Var('result', '99'), Var('e', '100'), BinaryExpr('*', Number(2), Var('esize', '101'), '102')], '103'), Call('SignedSatQ', [Var('accum', '105'), BinaryExpr('*', Number(2), Var('esize', '106'), '107')], '108'))], 1, '110'), Update(ArrayIndex(Var('V', '111'), [Var('d', '112')], '113'), Var('result', '114'))], rettype='int64_t', ret_is_signed=True, inst_form='SQDMLAL Dd,Sn,Sm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'part': 0, 'sub_op': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_dmacc_sisd'),
    'vqdmlsl_high_n_s16': ARMSema(intrin='vqdmlsl_high_n_s16', inst='SQDMLSL2', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarDeclInit(VarsDecl([Var('operand3', '21')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '22'), ArrayIndex(Var('V', '18'), [Var('d', '19')], '20'), '23'), VarsDecl([Var('result', '26')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '24'), '25')), '27'), VarsDecl([Var('element1', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('element2', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('product', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('accum', '36')], ('integer', Number(64)), '37'), VarsDecl([Var('sat1', '38')], ('boolean', Number(1)), '39'), VarsDecl([Var('sat2', '40')], ('boolean', Number(1)), '41'), Update(Var('element2', '42'), Call('SInt', [ArrayIndex(Var('Elem', '44'), [Var('operand2', '45'), Var('index', '46'), Var('esize', '47')], '48')], '49')), For(Var('e', '108'), Number(0), BinaryExpr('-', Var('elements', '50'), Number(1), '51'), [Update(Var('element1', '52'), Call('SInt', [ArrayIndex(Var('Elem', '54'), [Var('operand1', '55'), Var('e', '56'), Var('esize', '57')], '58')], '59')), Update(Var('product', '60'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '62'), '63'), Var('element2', '64'), '65'), BinaryExpr('*', Number(2), Var('esize', '66'), '67')], '68')), IfElse(Var('sub_op', '69'), [Update(Var('accum', '70'), BinaryExpr('-', Call('SInt', [ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77')], '78'), Call('SInt', [Var('product', '80')], '81'), '82'))], [Update(Var('accum', '83'), BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '85'), [Var('operand3', '86'), Var('e', '87'), BinaryExpr('*', Number(2), Var('esize', '88'), '89')], '90')], '91'), Call('SInt', [Var('product', '93')], '94'), '95'))], '96'), Update(ArrayIndex(Var('Elem', '97'), [Var('result', '98'), Var('e', '99'), BinaryExpr('*', Number(2), Var('esize', '100'), '101')], '102'), Call('SignedSatQ', [Var('accum', '104'), BinaryExpr('*', Number(2), Var('esize', '105'), '106')], '107'))], 1, '109'), Update(ArrayIndex(Var('V', '110'), [Var('d', '111')], '112'), Var('result', '113'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SQDMLSL2 Vd.4S,Vn.8H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_double_simd'),
    'vqdmlsl_high_n_s32': ARMSema(intrin='vqdmlsl_high_n_s32', inst='SQDMLSL2', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarDeclInit(VarsDecl([Var('operand3', '21')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '22'), ArrayIndex(Var('V', '18'), [Var('d', '19')], '20'), '23'), VarsDecl([Var('result', '26')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '24'), '25')), '27'), VarsDecl([Var('element1', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('element2', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('product', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('accum', '36')], ('integer', Number(64)), '37'), VarsDecl([Var('sat1', '38')], ('boolean', Number(1)), '39'), VarsDecl([Var('sat2', '40')], ('boolean', Number(1)), '41'), Update(Var('element2', '42'), Call('SInt', [ArrayIndex(Var('Elem', '44'), [Var('operand2', '45'), Var('index', '46'), Var('esize', '47')], '48')], '49')), For(Var('e', '108'), Number(0), BinaryExpr('-', Var('elements', '50'), Number(1), '51'), [Update(Var('element1', '52'), Call('SInt', [ArrayIndex(Var('Elem', '54'), [Var('operand1', '55'), Var('e', '56'), Var('esize', '57')], '58')], '59')), Update(Var('product', '60'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '62'), '63'), Var('element2', '64'), '65'), BinaryExpr('*', Number(2), Var('esize', '66'), '67')], '68')), IfElse(Var('sub_op', '69'), [Update(Var('accum', '70'), BinaryExpr('-', Call('SInt', [ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77')], '78'), Call('SInt', [Var('product', '80')], '81'), '82'))], [Update(Var('accum', '83'), BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '85'), [Var('operand3', '86'), Var('e', '87'), BinaryExpr('*', Number(2), Var('esize', '88'), '89')], '90')], '91'), Call('SInt', [Var('product', '93')], '94'), '95'))], '96'), Update(ArrayIndex(Var('Elem', '97'), [Var('result', '98'), Var('e', '99'), BinaryExpr('*', Number(2), Var('esize', '100'), '101')], '102'), Call('SignedSatQ', [Var('accum', '104'), BinaryExpr('*', Number(2), Var('esize', '105'), '106')], '107'))], 1, '109'), Update(ArrayIndex(Var('V', '110'), [Var('d', '111')], '112'), Var('result', '113'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SQDMLSL2 Vd.2D,Vn.4S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_double_simd'),
    'vqdmlsl_high_s16': ARMSema(intrin='vqdmlsl_high_s16', inst='SQDMLSL2', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '37')], ('integer', Number(64)), '38'), VarsDecl([Var('sat1', '39')], ('boolean', Number(1)), '40'), VarsDecl([Var('sat2', '41')], ('boolean', Number(1)), '42'), For(Var('e', '109'), Number(0), BinaryExpr('-', Var('elements', '43'), Number(1), '44'), [Update(Var('element1', '45'), Call('SInt', [ArrayIndex(Var('Elem', '47'), [Var('operand1', '48'), Var('e', '49'), Var('esize', '50')], '51')], '52')), Update(Var('element2', '53'), Call('SInt', [ArrayIndex(Var('Elem', '55'), [Var('operand2', '56'), Var('e', '57'), Var('esize', '58')], '59')], '60')), Update(Var('product', '61'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '63'), '64'), Var('element2', '65'), '66'), BinaryExpr('*', Number(2), Var('esize', '67'), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', Call('SInt', [ArrayIndex(Var('Elem', '73'), [Var('operand3', '74'), Var('e', '75'), BinaryExpr('*', Number(2), Var('esize', '76'), '77')], '78')], '79'), Call('SInt', [Var('product', '81')], '82'), '83'))], [Update(Var('accum', '84'), BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91')], '92'), Call('SInt', [Var('product', '94')], '95'), '96'))], '97'), Update(ArrayIndex(Var('Elem', '98'), [Var('result', '99'), Var('e', '100'), BinaryExpr('*', Number(2), Var('esize', '101'), '102')], '103'), Call('SignedSatQ', [Var('accum', '105'), BinaryExpr('*', Number(2), Var('esize', '106'), '107')], '108'))], 1, '110'), Update(ArrayIndex(Var('V', '111'), [Var('d', '112')], '113'), Var('result', '114'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SQDMLSL2 Vd.4S,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_dmacc_simd'),
    'vqdmlsl_high_s32': ARMSema(intrin='vqdmlsl_high_s32', inst='SQDMLSL2', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '37')], ('integer', Number(64)), '38'), VarsDecl([Var('sat1', '39')], ('boolean', Number(1)), '40'), VarsDecl([Var('sat2', '41')], ('boolean', Number(1)), '42'), For(Var('e', '109'), Number(0), BinaryExpr('-', Var('elements', '43'), Number(1), '44'), [Update(Var('element1', '45'), Call('SInt', [ArrayIndex(Var('Elem', '47'), [Var('operand1', '48'), Var('e', '49'), Var('esize', '50')], '51')], '52')), Update(Var('element2', '53'), Call('SInt', [ArrayIndex(Var('Elem', '55'), [Var('operand2', '56'), Var('e', '57'), Var('esize', '58')], '59')], '60')), Update(Var('product', '61'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '63'), '64'), Var('element2', '65'), '66'), BinaryExpr('*', Number(2), Var('esize', '67'), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', Call('SInt', [ArrayIndex(Var('Elem', '73'), [Var('operand3', '74'), Var('e', '75'), BinaryExpr('*', Number(2), Var('esize', '76'), '77')], '78')], '79'), Call('SInt', [Var('product', '81')], '82'), '83'))], [Update(Var('accum', '84'), BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91')], '92'), Call('SInt', [Var('product', '94')], '95'), '96'))], '97'), Update(ArrayIndex(Var('Elem', '98'), [Var('result', '99'), Var('e', '100'), BinaryExpr('*', Number(2), Var('esize', '101'), '102')], '103'), Call('SignedSatQ', [Var('accum', '105'), BinaryExpr('*', Number(2), Var('esize', '106'), '107')], '108'))], 1, '110'), Update(ArrayIndex(Var('V', '111'), [Var('d', '112')], '113'), Var('result', '114'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SQDMLSL2 Vd.2D,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_dmacc_simd'),
    'vqdmlsl_n_s16': ARMSema(intrin='vqdmlsl_n_s16', inst='SQDMLSL', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarDeclInit(VarsDecl([Var('operand3', '21')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '22'), ArrayIndex(Var('V', '18'), [Var('d', '19')], '20'), '23'), VarsDecl([Var('result', '26')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '24'), '25')), '27'), VarsDecl([Var('element1', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('element2', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('product', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('accum', '36')], ('integer', Number(64)), '37'), VarsDecl([Var('sat1', '38')], ('boolean', Number(1)), '39'), VarsDecl([Var('sat2', '40')], ('boolean', Number(1)), '41'), Update(Var('element2', '42'), Call('SInt', [ArrayIndex(Var('Elem', '44'), [Var('operand2', '45'), Var('index', '46'), Var('esize', '47')], '48')], '49')), For(Var('e', '108'), Number(0), BinaryExpr('-', Var('elements', '50'), Number(1), '51'), [Update(Var('element1', '52'), Call('SInt', [ArrayIndex(Var('Elem', '54'), [Var('operand1', '55'), Var('e', '56'), Var('esize', '57')], '58')], '59')), Update(Var('product', '60'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '62'), '63'), Var('element2', '64'), '65'), BinaryExpr('*', Number(2), Var('esize', '66'), '67')], '68')), IfElse(Var('sub_op', '69'), [Update(Var('accum', '70'), BinaryExpr('-', Call('SInt', [ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77')], '78'), Call('SInt', [Var('product', '80')], '81'), '82'))], [Update(Var('accum', '83'), BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '85'), [Var('operand3', '86'), Var('e', '87'), BinaryExpr('*', Number(2), Var('esize', '88'), '89')], '90')], '91'), Call('SInt', [Var('product', '93')], '94'), '95'))], '96'), Update(ArrayIndex(Var('Elem', '97'), [Var('result', '98'), Var('e', '99'), BinaryExpr('*', Number(2), Var('esize', '100'), '101')], '102'), Call('SignedSatQ', [Var('accum', '104'), BinaryExpr('*', Number(2), Var('esize', '105'), '106')], '107'))], 1, '109'), Update(ArrayIndex(Var('V', '110'), [Var('d', '111')], '112'), Var('result', '113'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SQDMLSL Vd.4S,Vn.4H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_double_simd'),
    'vqdmlsl_n_s32': ARMSema(intrin='vqdmlsl_n_s32', inst='SQDMLSL', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarDeclInit(VarsDecl([Var('operand3', '21')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '22'), ArrayIndex(Var('V', '18'), [Var('d', '19')], '20'), '23'), VarsDecl([Var('result', '26')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '24'), '25')), '27'), VarsDecl([Var('element1', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('element2', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('product', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('accum', '36')], ('integer', Number(64)), '37'), VarsDecl([Var('sat1', '38')], ('boolean', Number(1)), '39'), VarsDecl([Var('sat2', '40')], ('boolean', Number(1)), '41'), Update(Var('element2', '42'), Call('SInt', [ArrayIndex(Var('Elem', '44'), [Var('operand2', '45'), Var('index', '46'), Var('esize', '47')], '48')], '49')), For(Var('e', '108'), Number(0), BinaryExpr('-', Var('elements', '50'), Number(1), '51'), [Update(Var('element1', '52'), Call('SInt', [ArrayIndex(Var('Elem', '54'), [Var('operand1', '55'), Var('e', '56'), Var('esize', '57')], '58')], '59')), Update(Var('product', '60'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '62'), '63'), Var('element2', '64'), '65'), BinaryExpr('*', Number(2), Var('esize', '66'), '67')], '68')), IfElse(Var('sub_op', '69'), [Update(Var('accum', '70'), BinaryExpr('-', Call('SInt', [ArrayIndex(Var('Elem', '72'), [Var('operand3', '73'), Var('e', '74'), BinaryExpr('*', Number(2), Var('esize', '75'), '76')], '77')], '78'), Call('SInt', [Var('product', '80')], '81'), '82'))], [Update(Var('accum', '83'), BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '85'), [Var('operand3', '86'), Var('e', '87'), BinaryExpr('*', Number(2), Var('esize', '88'), '89')], '90')], '91'), Call('SInt', [Var('product', '93')], '94'), '95'))], '96'), Update(ArrayIndex(Var('Elem', '97'), [Var('result', '98'), Var('e', '99'), BinaryExpr('*', Number(2), Var('esize', '100'), '101')], '102'), Call('SignedSatQ', [Var('accum', '104'), BinaryExpr('*', Number(2), Var('esize', '105'), '106')], '107'))], 1, '109'), Update(ArrayIndex(Var('V', '110'), [Var('d', '111')], '112'), Var('result', '113'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SQDMLSL Vd.2D,Vn.2S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_acc_double_simd'),
    'vqdmlsl_s16': ARMSema(intrin='vqdmlsl_s16', inst='SQDMLSL', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '37')], ('integer', Number(64)), '38'), VarsDecl([Var('sat1', '39')], ('boolean', Number(1)), '40'), VarsDecl([Var('sat2', '41')], ('boolean', Number(1)), '42'), For(Var('e', '109'), Number(0), BinaryExpr('-', Var('elements', '43'), Number(1), '44'), [Update(Var('element1', '45'), Call('SInt', [ArrayIndex(Var('Elem', '47'), [Var('operand1', '48'), Var('e', '49'), Var('esize', '50')], '51')], '52')), Update(Var('element2', '53'), Call('SInt', [ArrayIndex(Var('Elem', '55'), [Var('operand2', '56'), Var('e', '57'), Var('esize', '58')], '59')], '60')), Update(Var('product', '61'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '63'), '64'), Var('element2', '65'), '66'), BinaryExpr('*', Number(2), Var('esize', '67'), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', Call('SInt', [ArrayIndex(Var('Elem', '73'), [Var('operand3', '74'), Var('e', '75'), BinaryExpr('*', Number(2), Var('esize', '76'), '77')], '78')], '79'), Call('SInt', [Var('product', '81')], '82'), '83'))], [Update(Var('accum', '84'), BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91')], '92'), Call('SInt', [Var('product', '94')], '95'), '96'))], '97'), Update(ArrayIndex(Var('Elem', '98'), [Var('result', '99'), Var('e', '100'), BinaryExpr('*', Number(2), Var('esize', '101'), '102')], '103'), Call('SignedSatQ', [Var('accum', '105'), BinaryExpr('*', Number(2), Var('esize', '106'), '107')], '108'))], 1, '110'), Update(ArrayIndex(Var('V', '111'), [Var('d', '112')], '113'), Var('result', '114'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SQDMLSL Vd.4S,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_dmacc_simd'),
    'vqdmlsl_s32': ARMSema(intrin='vqdmlsl_s32', inst='SQDMLSL', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '37')], ('integer', Number(64)), '38'), VarsDecl([Var('sat1', '39')], ('boolean', Number(1)), '40'), VarsDecl([Var('sat2', '41')], ('boolean', Number(1)), '42'), For(Var('e', '109'), Number(0), BinaryExpr('-', Var('elements', '43'), Number(1), '44'), [Update(Var('element1', '45'), Call('SInt', [ArrayIndex(Var('Elem', '47'), [Var('operand1', '48'), Var('e', '49'), Var('esize', '50')], '51')], '52')), Update(Var('element2', '53'), Call('SInt', [ArrayIndex(Var('Elem', '55'), [Var('operand2', '56'), Var('e', '57'), Var('esize', '58')], '59')], '60')), Update(Var('product', '61'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '63'), '64'), Var('element2', '65'), '66'), BinaryExpr('*', Number(2), Var('esize', '67'), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', Call('SInt', [ArrayIndex(Var('Elem', '73'), [Var('operand3', '74'), Var('e', '75'), BinaryExpr('*', Number(2), Var('esize', '76'), '77')], '78')], '79'), Call('SInt', [Var('product', '81')], '82'), '83'))], [Update(Var('accum', '84'), BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91')], '92'), Call('SInt', [Var('product', '94')], '95'), '96'))], '97'), Update(ArrayIndex(Var('Elem', '98'), [Var('result', '99'), Var('e', '100'), BinaryExpr('*', Number(2), Var('esize', '101'), '102')], '103'), Call('SignedSatQ', [Var('accum', '105'), BinaryExpr('*', Number(2), Var('esize', '106'), '107')], '108'))], 1, '110'), Update(ArrayIndex(Var('V', '111'), [Var('d', '112')], '113'), Var('result', '114'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SQDMLSL Vd.2D,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_dmacc_simd'),
    'vqdmlslh_s16': ARMSema(intrin='vqdmlslh_s16', inst='SQDMLSL', params=[Parameter(name='a', type='int32_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '37')], ('integer', Number(64)), '38'), VarsDecl([Var('sat1', '39')], ('boolean', Number(1)), '40'), VarsDecl([Var('sat2', '41')], ('boolean', Number(1)), '42'), For(Var('e', '109'), Number(0), BinaryExpr('-', Var('elements', '43'), Number(1), '44'), [Update(Var('element1', '45'), Call('SInt', [ArrayIndex(Var('Elem', '47'), [Var('operand1', '48'), Var('e', '49'), Var('esize', '50')], '51')], '52')), Update(Var('element2', '53'), Call('SInt', [ArrayIndex(Var('Elem', '55'), [Var('operand2', '56'), Var('e', '57'), Var('esize', '58')], '59')], '60')), Update(Var('product', '61'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '63'), '64'), Var('element2', '65'), '66'), BinaryExpr('*', Number(2), Var('esize', '67'), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', Call('SInt', [ArrayIndex(Var('Elem', '73'), [Var('operand3', '74'), Var('e', '75'), BinaryExpr('*', Number(2), Var('esize', '76'), '77')], '78')], '79'), Call('SInt', [Var('product', '81')], '82'), '83'))], [Update(Var('accum', '84'), BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91')], '92'), Call('SInt', [Var('product', '94')], '95'), '96'))], '97'), Update(ArrayIndex(Var('Elem', '98'), [Var('result', '99'), Var('e', '100'), BinaryExpr('*', Number(2), Var('esize', '101'), '102')], '103'), Call('SignedSatQ', [Var('accum', '105'), BinaryExpr('*', Number(2), Var('esize', '106'), '107')], '108'))], 1, '110'), Update(ArrayIndex(Var('V', '111'), [Var('d', '112')], '113'), Var('result', '114'))], rettype='int32_t', ret_is_signed=True, inst_form='SQDMLSL Sd,Hn,Hm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'part': 0, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_dmacc_sisd'),
    'vqdmlsls_s32': ARMSema(intrin='vqdmlsls_s32', inst='SQDMLSL', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='c', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarDeclInit(VarsDecl([Var('operand3', '22')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '23'), ArrayIndex(Var('V', '19'), [Var('d', '20')], '21'), '24'), VarsDecl([Var('result', '27')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '25'), '26')), '28'), VarsDecl([Var('element1', '29')], ('integer', Number(64)), '30'), VarsDecl([Var('element2', '31')], ('integer', Number(64)), '32'), VarsDecl([Var('product', '35')], ('bits', BinaryExpr('*', Number(2), Var('esize', '33'), '34')), '36'), VarsDecl([Var('accum', '37')], ('integer', Number(64)), '38'), VarsDecl([Var('sat1', '39')], ('boolean', Number(1)), '40'), VarsDecl([Var('sat2', '41')], ('boolean', Number(1)), '42'), For(Var('e', '109'), Number(0), BinaryExpr('-', Var('elements', '43'), Number(1), '44'), [Update(Var('element1', '45'), Call('SInt', [ArrayIndex(Var('Elem', '47'), [Var('operand1', '48'), Var('e', '49'), Var('esize', '50')], '51')], '52')), Update(Var('element2', '53'), Call('SInt', [ArrayIndex(Var('Elem', '55'), [Var('operand2', '56'), Var('e', '57'), Var('esize', '58')], '59')], '60')), Update(Var('product', '61'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '63'), '64'), Var('element2', '65'), '66'), BinaryExpr('*', Number(2), Var('esize', '67'), '68')], '69')), IfElse(Var('sub_op', '70'), [Update(Var('accum', '71'), BinaryExpr('-', Call('SInt', [ArrayIndex(Var('Elem', '73'), [Var('operand3', '74'), Var('e', '75'), BinaryExpr('*', Number(2), Var('esize', '76'), '77')], '78')], '79'), Call('SInt', [Var('product', '81')], '82'), '83'))], [Update(Var('accum', '84'), BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '86'), [Var('operand3', '87'), Var('e', '88'), BinaryExpr('*', Number(2), Var('esize', '89'), '90')], '91')], '92'), Call('SInt', [Var('product', '94')], '95'), '96'))], '97'), Update(ArrayIndex(Var('Elem', '98'), [Var('result', '99'), Var('e', '100'), BinaryExpr('*', Number(2), Var('esize', '101'), '102')], '103'), Call('SignedSatQ', [Var('accum', '105'), BinaryExpr('*', Number(2), Var('esize', '106'), '107')], '108'))], 1, '110'), Update(ArrayIndex(Var('V', '111'), [Var('d', '112')], '113'), Var('result', '114'))], rettype='int64_t', ret_is_signed=True, inst_form='SQDMLSL Dd,Sn,Sm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'm': 'c'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'part': 0, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_dmacc_sisd'),
    'vqdmulh_n_s16': ARMSema(intrin='vqdmulh_n_s16', inst='SQDMULH', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '23')], ('integer', Number(64)), '24'), IfElse(Var('round', '21'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '18'), Number(1), '19'), '20'), Number(0), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('product', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('sat', '32')], ('boolean', Number(1)), '33'), Update(Var('element2', '34'), Call('SInt', [ArrayIndex(Var('Elem', '36'), [Var('operand2', '37'), Var('index', '38'), Var('esize', '39')], '40')], '41')), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '42'), Number(1), '43'), [Update(Var('element1', '44'), Call('SInt', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50')], '51')), Update(Var('product', '52'), BinaryExpr('+', BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '53'), '54'), Var('element2', '55'), '56'), Var('round_const', '57'), '58')), Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), Call('SignedSatQ', [BinaryExpr('>>', Var('product', '65'), Var('esize', '66'), '67'), Var('esize', '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SQDMULH Vd.4H,Vn.4H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'elements': 4, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_high_simd'),
    'vqdmulh_n_s32': ARMSema(intrin='vqdmulh_n_s32', inst='SQDMULH', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '23')], ('integer', Number(64)), '24'), IfElse(Var('round', '21'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '18'), Number(1), '19'), '20'), Number(0), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('product', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('sat', '32')], ('boolean', Number(1)), '33'), Update(Var('element2', '34'), Call('SInt', [ArrayIndex(Var('Elem', '36'), [Var('operand2', '37'), Var('index', '38'), Var('esize', '39')], '40')], '41')), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '42'), Number(1), '43'), [Update(Var('element1', '44'), Call('SInt', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50')], '51')), Update(Var('product', '52'), BinaryExpr('+', BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '53'), '54'), Var('element2', '55'), '56'), Var('round_const', '57'), '58')), Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), Call('SignedSatQ', [BinaryExpr('>>', Var('product', '65'), Var('esize', '66'), '67'), Var('esize', '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SQDMULH Vd.2S,Vn.2S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'elements': 2, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_high_simd'),
    'vqdmulh_s16': ARMSema(intrin='vqdmulh_s16', inst='SQDMULH', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '23')], ('integer', Number(64)), '24'), IfElse(Var('rounding', '21'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '18'), Number(1), '19'), '20'), Number(0), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('product', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('sat', '32')], ('boolean', Number(1)), '33'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), Call('SInt', [ArrayIndex(Var('Elem', '38'), [Var('operand1', '39'), Var('e', '40'), Var('esize', '41')], '42')], '43')), Update(Var('element2', '44'), Call('SInt', [ArrayIndex(Var('Elem', '46'), [Var('operand2', '47'), Var('e', '48'), Var('esize', '49')], '50')], '51')), Update(Var('product', '52'), BinaryExpr('+', BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '53'), '54'), Var('element2', '55'), '56'), Var('round_const', '57'), '58')), Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), Call('SignedSatQ', [BinaryExpr('>>', Var('product', '65'), Var('esize', '66'), '67'), Var('esize', '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SQDMULH Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'rounding': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_doubling_simd'),
    'vqdmulh_s32': ARMSema(intrin='vqdmulh_s32', inst='SQDMULH', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '23')], ('integer', Number(64)), '24'), IfElse(Var('rounding', '21'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '18'), Number(1), '19'), '20'), Number(0), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('product', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('sat', '32')], ('boolean', Number(1)), '33'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), Call('SInt', [ArrayIndex(Var('Elem', '38'), [Var('operand1', '39'), Var('e', '40'), Var('esize', '41')], '42')], '43')), Update(Var('element2', '44'), Call('SInt', [ArrayIndex(Var('Elem', '46'), [Var('operand2', '47'), Var('e', '48'), Var('esize', '49')], '50')], '51')), Update(Var('product', '52'), BinaryExpr('+', BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '53'), '54'), Var('element2', '55'), '56'), Var('round_const', '57'), '58')), Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), Call('SignedSatQ', [BinaryExpr('>>', Var('product', '65'), Var('esize', '66'), '67'), Var('esize', '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SQDMULH Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'rounding': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_doubling_simd'),
    'vqdmulhh_s16': ARMSema(intrin='vqdmulhh_s16', inst='SQDMULH', params=[Parameter(name='a', type='int16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '23')], ('integer', Number(64)), '24'), IfElse(Var('rounding', '21'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '18'), Number(1), '19'), '20'), Number(0), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('product', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('sat', '32')], ('boolean', Number(1)), '33'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), Call('SInt', [ArrayIndex(Var('Elem', '38'), [Var('operand1', '39'), Var('e', '40'), Var('esize', '41')], '42')], '43')), Update(Var('element2', '44'), Call('SInt', [ArrayIndex(Var('Elem', '46'), [Var('operand2', '47'), Var('e', '48'), Var('esize', '49')], '50')], '51')), Update(Var('product', '52'), BinaryExpr('+', BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '53'), '54'), Var('element2', '55'), '56'), Var('round_const', '57'), '58')), Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), Call('SignedSatQ', [BinaryExpr('>>', Var('product', '65'), Var('esize', '66'), '67'), Var('esize', '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int16_t', ret_is_signed=True, inst_form='SQDMULH Hd,Hn,Hm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'rounding': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_doubling_sisd'),
    'vqdmulhq_n_s16': ARMSema(intrin='vqdmulhq_n_s16', inst='SQDMULH', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '23')], ('integer', Number(64)), '24'), IfElse(Var('round', '21'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '18'), Number(1), '19'), '20'), Number(0), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('product', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('sat', '32')], ('boolean', Number(1)), '33'), Update(Var('element2', '34'), Call('SInt', [ArrayIndex(Var('Elem', '36'), [Var('operand2', '37'), Var('index', '38'), Var('esize', '39')], '40')], '41')), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '42'), Number(1), '43'), [Update(Var('element1', '44'), Call('SInt', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50')], '51')), Update(Var('product', '52'), BinaryExpr('+', BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '53'), '54'), Var('element2', '55'), '56'), Var('round_const', '57'), '58')), Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), Call('SignedSatQ', [BinaryExpr('>>', Var('product', '65'), Var('esize', '66'), '67'), Var('esize', '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SQDMULH Vd.8H,Vn.8H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 128, 'elements': 8, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_high_simd'),
    'vqdmulhq_n_s32': ARMSema(intrin='vqdmulhq_n_s32', inst='SQDMULH', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '23')], ('integer', Number(64)), '24'), IfElse(Var('round', '21'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '18'), Number(1), '19'), '20'), Number(0), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('product', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('sat', '32')], ('boolean', Number(1)), '33'), Update(Var('element2', '34'), Call('SInt', [ArrayIndex(Var('Elem', '36'), [Var('operand2', '37'), Var('index', '38'), Var('esize', '39')], '40')], '41')), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '42'), Number(1), '43'), [Update(Var('element1', '44'), Call('SInt', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50')], '51')), Update(Var('product', '52'), BinaryExpr('+', BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '53'), '54'), Var('element2', '55'), '56'), Var('round_const', '57'), '58')), Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), Call('SignedSatQ', [BinaryExpr('>>', Var('product', '65'), Var('esize', '66'), '67'), Var('esize', '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SQDMULH Vd.4S,Vn.4S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 128, 'elements': 4, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_high_simd'),
    'vqdmulhq_s16': ARMSema(intrin='vqdmulhq_s16', inst='SQDMULH', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '23')], ('integer', Number(64)), '24'), IfElse(Var('rounding', '21'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '18'), Number(1), '19'), '20'), Number(0), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('product', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('sat', '32')], ('boolean', Number(1)), '33'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), Call('SInt', [ArrayIndex(Var('Elem', '38'), [Var('operand1', '39'), Var('e', '40'), Var('esize', '41')], '42')], '43')), Update(Var('element2', '44'), Call('SInt', [ArrayIndex(Var('Elem', '46'), [Var('operand2', '47'), Var('e', '48'), Var('esize', '49')], '50')], '51')), Update(Var('product', '52'), BinaryExpr('+', BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '53'), '54'), Var('element2', '55'), '56'), Var('round_const', '57'), '58')), Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), Call('SignedSatQ', [BinaryExpr('>>', Var('product', '65'), Var('esize', '66'), '67'), Var('esize', '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SQDMULH Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'rounding': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_doubling_simd'),
    'vqdmulhq_s32': ARMSema(intrin='vqdmulhq_s32', inst='SQDMULH', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '23')], ('integer', Number(64)), '24'), IfElse(Var('rounding', '21'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '18'), Number(1), '19'), '20'), Number(0), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('product', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('sat', '32')], ('boolean', Number(1)), '33'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), Call('SInt', [ArrayIndex(Var('Elem', '38'), [Var('operand1', '39'), Var('e', '40'), Var('esize', '41')], '42')], '43')), Update(Var('element2', '44'), Call('SInt', [ArrayIndex(Var('Elem', '46'), [Var('operand2', '47'), Var('e', '48'), Var('esize', '49')], '50')], '51')), Update(Var('product', '52'), BinaryExpr('+', BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '53'), '54'), Var('element2', '55'), '56'), Var('round_const', '57'), '58')), Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), Call('SignedSatQ', [BinaryExpr('>>', Var('product', '65'), Var('esize', '66'), '67'), Var('esize', '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SQDMULH Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'rounding': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_doubling_simd'),
    'vqdmulhs_s32': ARMSema(intrin='vqdmulhs_s32', inst='SQDMULH', params=[Parameter(name='a', type='int32_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '23')], ('integer', Number(64)), '24'), IfElse(Var('rounding', '21'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '18'), Number(1), '19'), '20'), Number(0), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('product', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('sat', '32')], ('boolean', Number(1)), '33'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), Call('SInt', [ArrayIndex(Var('Elem', '38'), [Var('operand1', '39'), Var('e', '40'), Var('esize', '41')], '42')], '43')), Update(Var('element2', '44'), Call('SInt', [ArrayIndex(Var('Elem', '46'), [Var('operand2', '47'), Var('e', '48'), Var('esize', '49')], '50')], '51')), Update(Var('product', '52'), BinaryExpr('+', BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '53'), '54'), Var('element2', '55'), '56'), Var('round_const', '57'), '58')), Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), Call('SignedSatQ', [BinaryExpr('>>', Var('product', '65'), Var('esize', '66'), '67'), Var('esize', '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int32_t', ret_is_signed=True, inst_form='SQDMULH Sd,Sn,Sm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'rounding': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_doubling_sisd'),
    'vqdmull_high_n_s16': ARMSema(intrin='vqdmull_high_n_s16', inst='SQDMULL2', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarsDecl([Var('result', '18')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '19'), VarsDecl([Var('element1', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('element2', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('product', '26')], ('bits', BinaryExpr('*', Number(2), Var('esize', '24'), '25')), '27'), VarsDecl([Var('sat', '28')], ('boolean', Number(1)), '29'), Update(Var('element2', '30'), Call('SInt', [ArrayIndex(Var('Elem', '32'), [Var('operand2', '33'), Var('index', '34'), Var('esize', '35')], '36')], '37')), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '38'), Number(1), '39'), [Update(Var('element1', '40'), Call('SInt', [ArrayIndex(Var('Elem', '42'), [Var('operand1', '43'), Var('e', '44'), Var('esize', '45')], '46')], '47')), Update(Var('product', '48'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '50'), '51'), Var('element2', '52'), '53'), BinaryExpr('*', Number(2), Var('esize', '54'), '55')], '56')), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), Var('product', '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SQDMULL2 Vd.4S,Vn.8H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_double_simd'),
    'vqdmull_high_n_s32': ARMSema(intrin='vqdmull_high_n_s32', inst='SQDMULL2', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarsDecl([Var('result', '18')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '19'), VarsDecl([Var('element1', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('element2', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('product', '26')], ('bits', BinaryExpr('*', Number(2), Var('esize', '24'), '25')), '27'), VarsDecl([Var('sat', '28')], ('boolean', Number(1)), '29'), Update(Var('element2', '30'), Call('SInt', [ArrayIndex(Var('Elem', '32'), [Var('operand2', '33'), Var('index', '34'), Var('esize', '35')], '36')], '37')), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '38'), Number(1), '39'), [Update(Var('element1', '40'), Call('SInt', [ArrayIndex(Var('Elem', '42'), [Var('operand1', '43'), Var('e', '44'), Var('esize', '45')], '46')], '47')), Update(Var('product', '48'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '50'), '51'), Var('element2', '52'), '53'), BinaryExpr('*', Number(2), Var('esize', '54'), '55')], '56')), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), Var('product', '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SQDMULL2 Vd.2D,Vn.4S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_double_simd'),
    'vqdmull_high_s16': ARMSema(intrin='vqdmull_high_s16', inst='SQDMULL2', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('product', '27')], ('bits', BinaryExpr('*', Number(2), Var('esize', '25'), '26')), '28'), VarsDecl([Var('sat', '29')], ('boolean', Number(1)), '30'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '31'), Number(1), '32'), [Update(Var('element1', '33'), Call('SInt', [ArrayIndex(Var('Elem', '35'), [Var('operand1', '36'), Var('e', '37'), Var('esize', '38')], '39')], '40')), Update(Var('element2', '41'), Call('SInt', [ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')], '48')), Update(Var('product', '49'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '51'), '52'), Var('element2', '53'), '54'), BinaryExpr('*', Number(2), Var('esize', '55'), '56')], '57')), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), Var('product', '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SQDMULL2 Vd.4S,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_double_simd'),
    'vqdmull_high_s32': ARMSema(intrin='vqdmull_high_s32', inst='SQDMULL2', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('product', '27')], ('bits', BinaryExpr('*', Number(2), Var('esize', '25'), '26')), '28'), VarsDecl([Var('sat', '29')], ('boolean', Number(1)), '30'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '31'), Number(1), '32'), [Update(Var('element1', '33'), Call('SInt', [ArrayIndex(Var('Elem', '35'), [Var('operand1', '36'), Var('e', '37'), Var('esize', '38')], '39')], '40')), Update(Var('element2', '41'), Call('SInt', [ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')], '48')), Update(Var('product', '49'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '51'), '52'), Var('element2', '53'), '54'), BinaryExpr('*', Number(2), Var('esize', '55'), '56')], '57')), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), Var('product', '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SQDMULL2 Vd.2D,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_double_simd'),
    'vqdmull_n_s16': ARMSema(intrin='vqdmull_n_s16', inst='SQDMULL', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarsDecl([Var('result', '18')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '19'), VarsDecl([Var('element1', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('element2', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('product', '26')], ('bits', BinaryExpr('*', Number(2), Var('esize', '24'), '25')), '27'), VarsDecl([Var('sat', '28')], ('boolean', Number(1)), '29'), Update(Var('element2', '30'), Call('SInt', [ArrayIndex(Var('Elem', '32'), [Var('operand2', '33'), Var('index', '34'), Var('esize', '35')], '36')], '37')), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '38'), Number(1), '39'), [Update(Var('element1', '40'), Call('SInt', [ArrayIndex(Var('Elem', '42'), [Var('operand1', '43'), Var('e', '44'), Var('esize', '45')], '46')], '47')), Update(Var('product', '48'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '50'), '51'), Var('element2', '52'), '53'), BinaryExpr('*', Number(2), Var('esize', '54'), '55')], '56')), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), Var('product', '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SQDMULL Vd.4S,Vn.4H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_double_simd'),
    'vqdmull_n_s32': ARMSema(intrin='vqdmull_n_s32', inst='SQDMULL', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '13')], ('bits', Var('idxdsize', '9')), '14'), ArrayIndex(Var('V', '10'), [Var('m', '11')], '12'), '15'), VarsDecl([Var('result', '18')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '16'), '17')), '19'), VarsDecl([Var('element1', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('element2', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('product', '26')], ('bits', BinaryExpr('*', Number(2), Var('esize', '24'), '25')), '27'), VarsDecl([Var('sat', '28')], ('boolean', Number(1)), '29'), Update(Var('element2', '30'), Call('SInt', [ArrayIndex(Var('Elem', '32'), [Var('operand2', '33'), Var('index', '34'), Var('esize', '35')], '36')], '37')), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '38'), Number(1), '39'), [Update(Var('element1', '40'), Call('SInt', [ArrayIndex(Var('Elem', '42'), [Var('operand1', '43'), Var('e', '44'), Var('esize', '45')], '46')], '47')), Update(Var('product', '48'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '50'), '51'), Var('element2', '52'), '53'), BinaryExpr('*', Number(2), Var('esize', '54'), '55')], '56')), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), Var('product', '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SQDMULL Vd.2D,Vn.2S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_double_simd'),
    'vqdmull_s16': ARMSema(intrin='vqdmull_s16', inst='SQDMULL', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('product', '27')], ('bits', BinaryExpr('*', Number(2), Var('esize', '25'), '26')), '28'), VarsDecl([Var('sat', '29')], ('boolean', Number(1)), '30'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '31'), Number(1), '32'), [Update(Var('element1', '33'), Call('SInt', [ArrayIndex(Var('Elem', '35'), [Var('operand1', '36'), Var('e', '37'), Var('esize', '38')], '39')], '40')), Update(Var('element2', '41'), Call('SInt', [ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')], '48')), Update(Var('product', '49'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '51'), '52'), Var('element2', '53'), '54'), BinaryExpr('*', Number(2), Var('esize', '55'), '56')], '57')), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), Var('product', '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SQDMULL Vd.4S,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_double_simd'),
    'vqdmull_s32': ARMSema(intrin='vqdmull_s32', inst='SQDMULL', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('product', '27')], ('bits', BinaryExpr('*', Number(2), Var('esize', '25'), '26')), '28'), VarsDecl([Var('sat', '29')], ('boolean', Number(1)), '30'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '31'), Number(1), '32'), [Update(Var('element1', '33'), Call('SInt', [ArrayIndex(Var('Elem', '35'), [Var('operand1', '36'), Var('e', '37'), Var('esize', '38')], '39')], '40')), Update(Var('element2', '41'), Call('SInt', [ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')], '48')), Update(Var('product', '49'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '51'), '52'), Var('element2', '53'), '54'), BinaryExpr('*', Number(2), Var('esize', '55'), '56')], '57')), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), Var('product', '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SQDMULL Vd.2D,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_double_simd'),
    'vqdmullh_s16': ARMSema(intrin='vqdmullh_s16', inst='SQDMULL', params=[Parameter(name='a', type='int16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('product', '27')], ('bits', BinaryExpr('*', Number(2), Var('esize', '25'), '26')), '28'), VarsDecl([Var('sat', '29')], ('boolean', Number(1)), '30'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '31'), Number(1), '32'), [Update(Var('element1', '33'), Call('SInt', [ArrayIndex(Var('Elem', '35'), [Var('operand1', '36'), Var('e', '37'), Var('esize', '38')], '39')], '40')), Update(Var('element2', '41'), Call('SInt', [ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')], '48')), Update(Var('product', '49'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '51'), '52'), Var('element2', '53'), '54'), BinaryExpr('*', Number(2), Var('esize', '55'), '56')], '57')), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), Var('product', '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='int32_t', ret_is_signed=True, inst_form='SQDMULL Sd,Hn,Hm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'part': 0}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_double_sisd'),
    'vqdmulls_s32': ARMSema(intrin='vqdmulls_s32', inst='SQDMULL', params=[Parameter(name='a', type='int32_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('product', '27')], ('bits', BinaryExpr('*', Number(2), Var('esize', '25'), '26')), '28'), VarsDecl([Var('sat', '29')], ('boolean', Number(1)), '30'), For(Var('e', '65'), Number(0), BinaryExpr('-', Var('elements', '31'), Number(1), '32'), [Update(Var('element1', '33'), Call('SInt', [ArrayIndex(Var('Elem', '35'), [Var('operand1', '36'), Var('e', '37'), Var('esize', '38')], '39')], '40')), Update(Var('element2', '41'), Call('SInt', [ArrayIndex(Var('Elem', '43'), [Var('operand2', '44'), Var('e', '45'), Var('esize', '46')], '47')], '48')), Update(Var('product', '49'), Call('SignedSatQ', [BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '51'), '52'), Var('element2', '53'), '54'), BinaryExpr('*', Number(2), Var('esize', '55'), '56')], '57')), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), Var('product', '64'))], 1, '66'), Update(ArrayIndex(Var('V', '67'), [Var('d', '68')], '69'), Var('result', '70'))], rettype='int64_t', ret_is_signed=True, inst_form='SQDMULL Dd,Sn,Sm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'part': 0}, belongs_to='aarch64_vector_arithmetic_binary_disparate_mul_double_sisd'),
    'vqmovn_high_s16': ARMSema(intrin='vqmovn_high_s16', inst='SQXTN2', params=[Parameter(name='r', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('SatQ', [Call('Int', [Var('element', '34'), Var('unsigned', '35')], '36'), Var('esize', '37'), Var('unsigned', '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('Vpart', '42'), [Var('d', '43'), Var('part', '44')], '45'), Var('result', '46'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SQXTN2 Vd.16B,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_extract_sat_simd'),
    'vqmovn_high_s32': ARMSema(intrin='vqmovn_high_s32', inst='SQXTN2', params=[Parameter(name='r', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('SatQ', [Call('Int', [Var('element', '34'), Var('unsigned', '35')], '36'), Var('esize', '37'), Var('unsigned', '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('Vpart', '42'), [Var('d', '43'), Var('part', '44')], '45'), Var('result', '46'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SQXTN2 Vd.8H,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_extract_sat_simd'),
    'vqmovn_high_s64': ARMSema(intrin='vqmovn_high_s64', inst='SQXTN2', params=[Parameter(name='r', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('SatQ', [Call('Int', [Var('element', '34'), Var('unsigned', '35')], '36'), Var('esize', '37'), Var('unsigned', '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('Vpart', '42'), [Var('d', '43'), Var('part', '44')], '45'), Var('result', '46'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SQXTN2 Vd.4S,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_extract_sat_simd'),
    'vqmovn_high_u16': ARMSema(intrin='vqmovn_high_u16', inst='UQXTN2', params=[Parameter(name='r', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('SatQ', [Call('Int', [Var('element', '34'), Var('unsigned', '35')], '36'), Var('esize', '37'), Var('unsigned', '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('Vpart', '42'), [Var('d', '43'), Var('part', '44')], '45'), Var('result', '46'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='UQXTN2 Vd.16B,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_extract_sat_simd'),
    'vqmovn_high_u32': ARMSema(intrin='vqmovn_high_u32', inst='UQXTN2', params=[Parameter(name='r', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('SatQ', [Call('Int', [Var('element', '34'), Var('unsigned', '35')], '36'), Var('esize', '37'), Var('unsigned', '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('Vpart', '42'), [Var('d', '43'), Var('part', '44')], '45'), Var('result', '46'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UQXTN2 Vd.8H,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_extract_sat_simd'),
    'vqmovn_high_u64': ARMSema(intrin='vqmovn_high_u64', inst='UQXTN2', params=[Parameter(name='r', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('SatQ', [Call('Int', [Var('element', '34'), Var('unsigned', '35')], '36'), Var('esize', '37'), Var('unsigned', '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('Vpart', '42'), [Var('d', '43'), Var('part', '44')], '45'), Var('result', '46'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UQXTN2 Vd.4S,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_extract_sat_simd'),
    'vqmovn_s16': ARMSema(intrin='vqmovn_s16', inst='SQXTN', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('SatQ', [Call('Int', [Var('element', '34'), Var('unsigned', '35')], '36'), Var('esize', '37'), Var('unsigned', '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('Vpart', '42'), [Var('d', '43'), Var('part', '44')], '45'), Var('result', '46'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SQXTN Vd.8B,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_extract_sat_simd'),
    'vqmovn_s32': ARMSema(intrin='vqmovn_s32', inst='SQXTN', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('SatQ', [Call('Int', [Var('element', '34'), Var('unsigned', '35')], '36'), Var('esize', '37'), Var('unsigned', '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('Vpart', '42'), [Var('d', '43'), Var('part', '44')], '45'), Var('result', '46'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SQXTN Vd.4H,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_extract_sat_simd'),
    'vqmovn_s64': ARMSema(intrin='vqmovn_s64', inst='SQXTN', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('SatQ', [Call('Int', [Var('element', '34'), Var('unsigned', '35')], '36'), Var('esize', '37'), Var('unsigned', '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('Vpart', '42'), [Var('d', '43'), Var('part', '44')], '45'), Var('result', '46'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SQXTN Vd.2S,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_extract_sat_simd'),
    'vqmovn_u16': ARMSema(intrin='vqmovn_u16', inst='UQXTN', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('SatQ', [Call('Int', [Var('element', '34'), Var('unsigned', '35')], '36'), Var('esize', '37'), Var('unsigned', '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('Vpart', '42'), [Var('d', '43'), Var('part', '44')], '45'), Var('result', '46'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='UQXTN Vd.8B,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_extract_sat_simd'),
    'vqmovn_u32': ARMSema(intrin='vqmovn_u32', inst='UQXTN', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('SatQ', [Call('Int', [Var('element', '34'), Var('unsigned', '35')], '36'), Var('esize', '37'), Var('unsigned', '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('Vpart', '42'), [Var('d', '43'), Var('part', '44')], '45'), Var('result', '46'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='UQXTN Vd.4H,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_extract_sat_simd'),
    'vqmovn_u64': ARMSema(intrin='vqmovn_u64', inst='UQXTN', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('SatQ', [Call('Int', [Var('element', '34'), Var('unsigned', '35')], '36'), Var('esize', '37'), Var('unsigned', '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('Vpart', '42'), [Var('d', '43'), Var('part', '44')], '45'), Var('result', '46'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='UQXTN Vd.2S,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_extract_sat_simd'),
    'vqmovnd_s64': ARMSema(intrin='vqmovnd_s64', inst='SQXTN', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('SatQ', [Call('Int', [Var('element', '34'), Var('unsigned', '35')], '36'), Var('esize', '37'), Var('unsigned', '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('Vpart', '42'), [Var('d', '43'), Var('part', '44')], '45'), Var('result', '46'))], rettype='int32_t', ret_is_signed=True, inst_form='SQXTN Sd,Dn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 32, 'part': 0, 'elements': 1, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_extract_sat_sisd'),
    'vqmovnd_u64': ARMSema(intrin='vqmovnd_u64', inst='UQXTN', params=[Parameter(name='a', type='uint64_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('SatQ', [Call('Int', [Var('element', '34'), Var('unsigned', '35')], '36'), Var('esize', '37'), Var('unsigned', '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('Vpart', '42'), [Var('d', '43'), Var('part', '44')], '45'), Var('result', '46'))], rettype='uint32_t', ret_is_signed=False, inst_form='UQXTN Sd,Dn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 32, 'part': 0, 'elements': 1, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_extract_sat_sisd'),
    'vqmovnh_s16': ARMSema(intrin='vqmovnh_s16', inst='SQXTN', params=[Parameter(name='a', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('SatQ', [Call('Int', [Var('element', '34'), Var('unsigned', '35')], '36'), Var('esize', '37'), Var('unsigned', '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('Vpart', '42'), [Var('d', '43'), Var('part', '44')], '45'), Var('result', '46'))], rettype='int8_t', ret_is_signed=True, inst_form='SQXTN Bd,Hn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 8, 'part': 0, 'elements': 1, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_extract_sat_sisd'),
    'vqmovnh_u16': ARMSema(intrin='vqmovnh_u16', inst='UQXTN', params=[Parameter(name='a', type='uint16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('SatQ', [Call('Int', [Var('element', '34'), Var('unsigned', '35')], '36'), Var('esize', '37'), Var('unsigned', '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('Vpart', '42'), [Var('d', '43'), Var('part', '44')], '45'), Var('result', '46'))], rettype='uint8_t', ret_is_signed=False, inst_form='UQXTN Bd,Hn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 8, 'part': 0, 'elements': 1, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_extract_sat_sisd'),
    'vqmovns_s32': ARMSema(intrin='vqmovns_s32', inst='SQXTN', params=[Parameter(name='a', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('SatQ', [Call('Int', [Var('element', '34'), Var('unsigned', '35')], '36'), Var('esize', '37'), Var('unsigned', '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('Vpart', '42'), [Var('d', '43'), Var('part', '44')], '45'), Var('result', '46'))], rettype='int16_t', ret_is_signed=True, inst_form='SQXTN Hd,Sn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 16, 'part': 0, 'elements': 1, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_extract_sat_sisd'),
    'vqmovns_u32': ARMSema(intrin='vqmovns_u32', inst='UQXTN', params=[Parameter(name='a', type='uint32_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('SatQ', [Call('Int', [Var('element', '34'), Var('unsigned', '35')], '36'), Var('esize', '37'), Var('unsigned', '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('Vpart', '42'), [Var('d', '43'), Var('part', '44')], '45'), Var('result', '46'))], rettype='uint16_t', ret_is_signed=False, inst_form='UQXTN Hd,Sn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 16, 'part': 0, 'elements': 1, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_extract_sat_sisd'),
    'vqmovun_high_s16': ARMSema(intrin='vqmovun_high_s16', inst='SQXTUN2', params=[Parameter(name='r', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('UnsignedSatQ', [Call('SInt', [Var('element', '34')], '35'), Var('esize', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('Vpart', '40'), [Var('d', '41'), Var('part', '42')], '43'), Var('result', '44'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='SQXTUN2 Vd.16B,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8}, belongs_to='aarch64_vector_arithmetic_unary_extract_sqxtun_simd'),
    'vqmovun_high_s32': ARMSema(intrin='vqmovun_high_s32', inst='SQXTUN2', params=[Parameter(name='r', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('UnsignedSatQ', [Call('SInt', [Var('element', '34')], '35'), Var('esize', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('Vpart', '40'), [Var('d', '41'), Var('part', '42')], '43'), Var('result', '44'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='SQXTUN2 Vd.8H,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4}, belongs_to='aarch64_vector_arithmetic_unary_extract_sqxtun_simd'),
    'vqmovun_high_s64': ARMSema(intrin='vqmovun_high_s64', inst='SQXTUN2', params=[Parameter(name='r', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('UnsignedSatQ', [Call('SInt', [Var('element', '34')], '35'), Var('esize', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('Vpart', '40'), [Var('d', '41'), Var('part', '42')], '43'), Var('result', '44'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='SQXTUN2 Vd.4S,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2}, belongs_to='aarch64_vector_arithmetic_unary_extract_sqxtun_simd'),
    'vqmovun_s16': ARMSema(intrin='vqmovun_s16', inst='SQXTUN', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('UnsignedSatQ', [Call('SInt', [Var('element', '34')], '35'), Var('esize', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('Vpart', '40'), [Var('d', '41'), Var('part', '42')], '43'), Var('result', '44'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='SQXTUN Vd.8B,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8}, belongs_to='aarch64_vector_arithmetic_unary_extract_sqxtun_simd'),
    'vqmovun_s32': ARMSema(intrin='vqmovun_s32', inst='SQXTUN', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('UnsignedSatQ', [Call('SInt', [Var('element', '34')], '35'), Var('esize', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('Vpart', '40'), [Var('d', '41'), Var('part', '42')], '43'), Var('result', '44'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='SQXTUN Vd.4H,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4}, belongs_to='aarch64_vector_arithmetic_unary_extract_sqxtun_simd'),
    'vqmovun_s64': ARMSema(intrin='vqmovun_s64', inst='SQXTUN', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('UnsignedSatQ', [Call('SInt', [Var('element', '34')], '35'), Var('esize', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('Vpart', '40'), [Var('d', '41'), Var('part', '42')], '43'), Var('result', '44'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='SQXTUN Vd.2S,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2}, belongs_to='aarch64_vector_arithmetic_unary_extract_sqxtun_simd'),
    'vqmovund_s64': ARMSema(intrin='vqmovund_s64', inst='SQXTUN', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('UnsignedSatQ', [Call('SInt', [Var('element', '34')], '35'), Var('esize', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('Vpart', '40'), [Var('d', '41'), Var('part', '42')], '43'), Var('result', '44'))], rettype='uint32_t', ret_is_signed=False, inst_form='SQXTUN Sd,Dn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 32, 'part': 0, 'elements': 1}, belongs_to='aarch64_vector_arithmetic_unary_extract_sqxtun_sisd'),
    'vqmovunh_s16': ARMSema(intrin='vqmovunh_s16', inst='SQXTUN', params=[Parameter(name='a', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('UnsignedSatQ', [Call('SInt', [Var('element', '34')], '35'), Var('esize', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('Vpart', '40'), [Var('d', '41'), Var('part', '42')], '43'), Var('result', '44'))], rettype='uint8_t', ret_is_signed=False, inst_form='SQXTUN Bd,Hn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 8, 'part': 0, 'elements': 1}, belongs_to='aarch64_vector_arithmetic_unary_extract_sqxtun_sisd'),
    'vqmovuns_s32': ARMSema(intrin='vqmovuns_s32', inst='SQXTUN', params=[Parameter(name='a', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarsDecl([Var('element', '14')], ('bits', BinaryExpr('*', Number(2), Var('esize', '12'), '13')), '15'), VarsDecl([Var('sat', '16')], ('boolean', Number(1)), '17'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '18'), Number(1), '19'), [Update(Var('element', '20'), ArrayIndex(Var('Elem', '21'), [Var('operand', '22'), Var('e', '23'), BinaryExpr('*', Number(2), Var('esize', '24'), '25')], '26')), Update(ArrayIndex(Var('Elem', '27'), [Var('result', '28'), Var('e', '29'), Var('esize', '30')], '31'), Call('UnsignedSatQ', [Call('SInt', [Var('element', '34')], '35'), Var('esize', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('Vpart', '40'), [Var('d', '41'), Var('part', '42')], '43'), Var('result', '44'))], rettype='uint16_t', ret_is_signed=False, inst_form='SQXTUN Hd,Sn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 16, 'part': 0, 'elements': 1}, belongs_to='aarch64_vector_arithmetic_unary_extract_sqxtun_sisd'),
    'vqneg_s16': ARMSema(intrin='vqneg_s16', inst='SQNEG', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '43'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), IfElse(Var('neg', '25'), [Update(Var('element', '26'), UnaryExpr('-', Var('element', '27'), '28'))], [Update(Var('element', '29'), Call('Abs', [Var('element', '31')], '32'))], '33'), Update(ArrayIndex(Var('Elem', '34'), [Var('result', '35'), Var('e', '36'), Var('esize', '37')], '38'), Call('SignedSatQ', [Var('element', '40'), Var('esize', '41')], '42'))], 1, '44'), Update(ArrayIndex(Var('V', '45'), [Var('d', '46')], '47'), Var('result', '48'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SQNEG Vd.4H,Vn.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'neg': True}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_sat_simd'),
    'vqneg_s32': ARMSema(intrin='vqneg_s32', inst='SQNEG', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '43'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), IfElse(Var('neg', '25'), [Update(Var('element', '26'), UnaryExpr('-', Var('element', '27'), '28'))], [Update(Var('element', '29'), Call('Abs', [Var('element', '31')], '32'))], '33'), Update(ArrayIndex(Var('Elem', '34'), [Var('result', '35'), Var('e', '36'), Var('esize', '37')], '38'), Call('SignedSatQ', [Var('element', '40'), Var('esize', '41')], '42'))], 1, '44'), Update(ArrayIndex(Var('V', '45'), [Var('d', '46')], '47'), Var('result', '48'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SQNEG Vd.2S,Vn.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'neg': True}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_sat_simd'),
    'vqneg_s64': ARMSema(intrin='vqneg_s64', inst='SQNEG', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '43'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), IfElse(Var('neg', '25'), [Update(Var('element', '26'), UnaryExpr('-', Var('element', '27'), '28'))], [Update(Var('element', '29'), Call('Abs', [Var('element', '31')], '32'))], '33'), Update(ArrayIndex(Var('Elem', '34'), [Var('result', '35'), Var('e', '36'), Var('esize', '37')], '38'), Call('SignedSatQ', [Var('element', '40'), Var('esize', '41')], '42'))], 1, '44'), Update(ArrayIndex(Var('V', '45'), [Var('d', '46')], '47'), Var('result', '48'))], rettype='int64x1_t', ret_is_signed=True, inst_form='SQNEG Dd,Dn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'neg': True}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_sat_sisd'),
    'vqneg_s8': ARMSema(intrin='vqneg_s8', inst='SQNEG', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '43'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), IfElse(Var('neg', '25'), [Update(Var('element', '26'), UnaryExpr('-', Var('element', '27'), '28'))], [Update(Var('element', '29'), Call('Abs', [Var('element', '31')], '32'))], '33'), Update(ArrayIndex(Var('Elem', '34'), [Var('result', '35'), Var('e', '36'), Var('esize', '37')], '38'), Call('SignedSatQ', [Var('element', '40'), Var('esize', '41')], '42'))], 1, '44'), Update(ArrayIndex(Var('V', '45'), [Var('d', '46')], '47'), Var('result', '48'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SQNEG Vd.8B,Vn.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'neg': True}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_sat_simd'),
    'vqnegb_s8': ARMSema(intrin='vqnegb_s8', inst='SQNEG', params=[Parameter(name='a', type='int8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '43'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), IfElse(Var('neg', '25'), [Update(Var('element', '26'), UnaryExpr('-', Var('element', '27'), '28'))], [Update(Var('element', '29'), Call('Abs', [Var('element', '31')], '32'))], '33'), Update(ArrayIndex(Var('Elem', '34'), [Var('result', '35'), Var('e', '36'), Var('esize', '37')], '38'), Call('SignedSatQ', [Var('element', '40'), Var('esize', '41')], '42'))], 1, '44'), Update(ArrayIndex(Var('V', '45'), [Var('d', '46')], '47'), Var('result', '48'))], rettype='int8_t', ret_is_signed=True, inst_form='SQNEG Bd,Bn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 8, 'elements': 1, 'neg': True}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_sat_sisd'),
    'vqnegd_s64': ARMSema(intrin='vqnegd_s64', inst='SQNEG', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '43'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), IfElse(Var('neg', '25'), [Update(Var('element', '26'), UnaryExpr('-', Var('element', '27'), '28'))], [Update(Var('element', '29'), Call('Abs', [Var('element', '31')], '32'))], '33'), Update(ArrayIndex(Var('Elem', '34'), [Var('result', '35'), Var('e', '36'), Var('esize', '37')], '38'), Call('SignedSatQ', [Var('element', '40'), Var('esize', '41')], '42'))], 1, '44'), Update(ArrayIndex(Var('V', '45'), [Var('d', '46')], '47'), Var('result', '48'))], rettype='int64_t', ret_is_signed=True, inst_form='SQNEG Dd,Dn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'neg': True}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_sat_sisd'),
    'vqnegh_s16': ARMSema(intrin='vqnegh_s16', inst='SQNEG', params=[Parameter(name='a', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '43'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), IfElse(Var('neg', '25'), [Update(Var('element', '26'), UnaryExpr('-', Var('element', '27'), '28'))], [Update(Var('element', '29'), Call('Abs', [Var('element', '31')], '32'))], '33'), Update(ArrayIndex(Var('Elem', '34'), [Var('result', '35'), Var('e', '36'), Var('esize', '37')], '38'), Call('SignedSatQ', [Var('element', '40'), Var('esize', '41')], '42'))], 1, '44'), Update(ArrayIndex(Var('V', '45'), [Var('d', '46')], '47'), Var('result', '48'))], rettype='int16_t', ret_is_signed=True, inst_form='SQNEG Hd,Hn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'neg': True}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_sat_sisd'),
    'vqnegq_s16': ARMSema(intrin='vqnegq_s16', inst='SQNEG', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '43'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), IfElse(Var('neg', '25'), [Update(Var('element', '26'), UnaryExpr('-', Var('element', '27'), '28'))], [Update(Var('element', '29'), Call('Abs', [Var('element', '31')], '32'))], '33'), Update(ArrayIndex(Var('Elem', '34'), [Var('result', '35'), Var('e', '36'), Var('esize', '37')], '38'), Call('SignedSatQ', [Var('element', '40'), Var('esize', '41')], '42'))], 1, '44'), Update(ArrayIndex(Var('V', '45'), [Var('d', '46')], '47'), Var('result', '48'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SQNEG Vd.8H,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'neg': True}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_sat_simd'),
    'vqnegq_s32': ARMSema(intrin='vqnegq_s32', inst='SQNEG', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '43'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), IfElse(Var('neg', '25'), [Update(Var('element', '26'), UnaryExpr('-', Var('element', '27'), '28'))], [Update(Var('element', '29'), Call('Abs', [Var('element', '31')], '32'))], '33'), Update(ArrayIndex(Var('Elem', '34'), [Var('result', '35'), Var('e', '36'), Var('esize', '37')], '38'), Call('SignedSatQ', [Var('element', '40'), Var('esize', '41')], '42'))], 1, '44'), Update(ArrayIndex(Var('V', '45'), [Var('d', '46')], '47'), Var('result', '48'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SQNEG Vd.4S,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'neg': True}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_sat_simd'),
    'vqnegq_s64': ARMSema(intrin='vqnegq_s64', inst='SQNEG', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '43'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), IfElse(Var('neg', '25'), [Update(Var('element', '26'), UnaryExpr('-', Var('element', '27'), '28'))], [Update(Var('element', '29'), Call('Abs', [Var('element', '31')], '32'))], '33'), Update(ArrayIndex(Var('Elem', '34'), [Var('result', '35'), Var('e', '36'), Var('esize', '37')], '38'), Call('SignedSatQ', [Var('element', '40'), Var('esize', '41')], '42'))], 1, '44'), Update(ArrayIndex(Var('V', '45'), [Var('d', '46')], '47'), Var('result', '48'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SQNEG Vd.2D,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'neg': True}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_sat_simd'),
    'vqnegq_s8': ARMSema(intrin='vqnegq_s8', inst='SQNEG', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '43'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), IfElse(Var('neg', '25'), [Update(Var('element', '26'), UnaryExpr('-', Var('element', '27'), '28'))], [Update(Var('element', '29'), Call('Abs', [Var('element', '31')], '32'))], '33'), Update(ArrayIndex(Var('Elem', '34'), [Var('result', '35'), Var('e', '36'), Var('esize', '37')], '38'), Call('SignedSatQ', [Var('element', '40'), Var('esize', '41')], '42'))], 1, '44'), Update(ArrayIndex(Var('V', '45'), [Var('d', '46')], '47'), Var('result', '48'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SQNEG Vd.16B,Vn.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'neg': True}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_sat_simd'),
    'vqnegs_s32': ARMSema(intrin='vqnegs_s32', inst='SQNEG', params=[Parameter(name='a', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '43'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), Call('SInt', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23')], '24')), IfElse(Var('neg', '25'), [Update(Var('element', '26'), UnaryExpr('-', Var('element', '27'), '28'))], [Update(Var('element', '29'), Call('Abs', [Var('element', '31')], '32'))], '33'), Update(ArrayIndex(Var('Elem', '34'), [Var('result', '35'), Var('e', '36'), Var('esize', '37')], '38'), Call('SignedSatQ', [Var('element', '40'), Var('esize', '41')], '42'))], 1, '44'), Update(ArrayIndex(Var('V', '45'), [Var('d', '46')], '47'), Var('result', '48'))], rettype='int32_t', ret_is_signed=True, inst_form='SQNEG Sd,Sn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'neg': True}, belongs_to='aarch64_vector_arithmetic_unary_diff_neg_sat_sisd'),
    'vqrdmulh_n_s16': ARMSema(intrin='vqrdmulh_n_s16', inst='SQRDMULH', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '23')], ('integer', Number(64)), '24'), IfElse(Var('round', '21'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '18'), Number(1), '19'), '20'), Number(0), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('product', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('sat', '32')], ('boolean', Number(1)), '33'), Update(Var('element2', '34'), Call('SInt', [ArrayIndex(Var('Elem', '36'), [Var('operand2', '37'), Var('index', '38'), Var('esize', '39')], '40')], '41')), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '42'), Number(1), '43'), [Update(Var('element1', '44'), Call('SInt', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50')], '51')), Update(Var('product', '52'), BinaryExpr('+', BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '53'), '54'), Var('element2', '55'), '56'), Var('round_const', '57'), '58')), Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), Call('SignedSatQ', [BinaryExpr('>>', Var('product', '65'), Var('esize', '66'), '67'), Var('esize', '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SQRDMULH Vd.4H,Vn.4H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 64, 'elements': 4, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_high_simd'),
    'vqrdmulh_n_s32': ARMSema(intrin='vqrdmulh_n_s32', inst='SQRDMULH', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '23')], ('integer', Number(64)), '24'), IfElse(Var('round', '21'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '18'), Number(1), '19'), '20'), Number(0), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('product', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('sat', '32')], ('boolean', Number(1)), '33'), Update(Var('element2', '34'), Call('SInt', [ArrayIndex(Var('Elem', '36'), [Var('operand2', '37'), Var('index', '38'), Var('esize', '39')], '40')], '41')), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '42'), Number(1), '43'), [Update(Var('element1', '44'), Call('SInt', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50')], '51')), Update(Var('product', '52'), BinaryExpr('+', BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '53'), '54'), Var('element2', '55'), '56'), Var('round_const', '57'), '58')), Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), Call('SignedSatQ', [BinaryExpr('>>', Var('product', '65'), Var('esize', '66'), '67'), Var('esize', '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SQRDMULH Vd.2S,Vn.2S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 64, 'elements': 2, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_high_simd'),
    'vqrdmulh_s16': ARMSema(intrin='vqrdmulh_s16', inst='SQRDMULH', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '23')], ('integer', Number(64)), '24'), IfElse(Var('rounding', '21'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '18'), Number(1), '19'), '20'), Number(0), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('product', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('sat', '32')], ('boolean', Number(1)), '33'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), Call('SInt', [ArrayIndex(Var('Elem', '38'), [Var('operand1', '39'), Var('e', '40'), Var('esize', '41')], '42')], '43')), Update(Var('element2', '44'), Call('SInt', [ArrayIndex(Var('Elem', '46'), [Var('operand2', '47'), Var('e', '48'), Var('esize', '49')], '50')], '51')), Update(Var('product', '52'), BinaryExpr('+', BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '53'), '54'), Var('element2', '55'), '56'), Var('round_const', '57'), '58')), Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), Call('SignedSatQ', [BinaryExpr('>>', Var('product', '65'), Var('esize', '66'), '67'), Var('esize', '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SQRDMULH Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'rounding': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_doubling_simd'),
    'vqrdmulh_s32': ARMSema(intrin='vqrdmulh_s32', inst='SQRDMULH', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '23')], ('integer', Number(64)), '24'), IfElse(Var('rounding', '21'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '18'), Number(1), '19'), '20'), Number(0), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('product', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('sat', '32')], ('boolean', Number(1)), '33'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), Call('SInt', [ArrayIndex(Var('Elem', '38'), [Var('operand1', '39'), Var('e', '40'), Var('esize', '41')], '42')], '43')), Update(Var('element2', '44'), Call('SInt', [ArrayIndex(Var('Elem', '46'), [Var('operand2', '47'), Var('e', '48'), Var('esize', '49')], '50')], '51')), Update(Var('product', '52'), BinaryExpr('+', BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '53'), '54'), Var('element2', '55'), '56'), Var('round_const', '57'), '58')), Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), Call('SignedSatQ', [BinaryExpr('>>', Var('product', '65'), Var('esize', '66'), '67'), Var('esize', '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SQRDMULH Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'rounding': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_doubling_simd'),
    'vqrdmulhh_s16': ARMSema(intrin='vqrdmulhh_s16', inst='SQRDMULH', params=[Parameter(name='a', type='int16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '23')], ('integer', Number(64)), '24'), IfElse(Var('rounding', '21'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '18'), Number(1), '19'), '20'), Number(0), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('product', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('sat', '32')], ('boolean', Number(1)), '33'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), Call('SInt', [ArrayIndex(Var('Elem', '38'), [Var('operand1', '39'), Var('e', '40'), Var('esize', '41')], '42')], '43')), Update(Var('element2', '44'), Call('SInt', [ArrayIndex(Var('Elem', '46'), [Var('operand2', '47'), Var('e', '48'), Var('esize', '49')], '50')], '51')), Update(Var('product', '52'), BinaryExpr('+', BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '53'), '54'), Var('element2', '55'), '56'), Var('round_const', '57'), '58')), Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), Call('SignedSatQ', [BinaryExpr('>>', Var('product', '65'), Var('esize', '66'), '67'), Var('esize', '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int16_t', ret_is_signed=True, inst_form='SQRDMULH Hd,Hn,Hm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'rounding': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_doubling_sisd'),
    'vqrdmulhq_n_s16': ARMSema(intrin='vqrdmulhq_n_s16', inst='SQRDMULH', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '23')], ('integer', Number(64)), '24'), IfElse(Var('round', '21'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '18'), Number(1), '19'), '20'), Number(0), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('product', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('sat', '32')], ('boolean', Number(1)), '33'), Update(Var('element2', '34'), Call('SInt', [ArrayIndex(Var('Elem', '36'), [Var('operand2', '37'), Var('index', '38'), Var('esize', '39')], '40')], '41')), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '42'), Number(1), '43'), [Update(Var('element1', '44'), Call('SInt', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50')], '51')), Update(Var('product', '52'), BinaryExpr('+', BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '53'), '54'), Var('element2', '55'), '56'), Var('round_const', '57'), '58')), Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), Call('SignedSatQ', [BinaryExpr('>>', Var('product', '65'), Var('esize', '66'), '67'), Var('esize', '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SQRDMULH Vd.8H,Vn.8H,Vm.H[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 16, 'datasize': 128, 'elements': 8, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_high_simd'),
    'vqrdmulhq_n_s32': ARMSema(intrin='vqrdmulhq_n_s32', inst='SQRDMULH', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('idxdsize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '23')], ('integer', Number(64)), '24'), IfElse(Var('round', '21'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '18'), Number(1), '19'), '20'), Number(0), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('product', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('sat', '32')], ('boolean', Number(1)), '33'), Update(Var('element2', '34'), Call('SInt', [ArrayIndex(Var('Elem', '36'), [Var('operand2', '37'), Var('index', '38'), Var('esize', '39')], '40')], '41')), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '42'), Number(1), '43'), [Update(Var('element1', '44'), Call('SInt', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50')], '51')), Update(Var('product', '52'), BinaryExpr('+', BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '53'), '54'), Var('element2', '55'), '56'), Var('round_const', '57'), '58')), Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), Call('SignedSatQ', [BinaryExpr('>>', Var('product', '65'), Var('esize', '66'), '67'), Var('esize', '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SQRDMULH Vd.4S,Vn.4S,Vm.S[0]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'idxdsize': 64, 'index': 0, 'Rmhi': '0', 'esize': 32, 'datasize': 128, 'elements': 4, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_element_mul_high_simd'),
    'vqrdmulhq_s16': ARMSema(intrin='vqrdmulhq_s16', inst='SQRDMULH', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '23')], ('integer', Number(64)), '24'), IfElse(Var('rounding', '21'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '18'), Number(1), '19'), '20'), Number(0), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('product', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('sat', '32')], ('boolean', Number(1)), '33'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), Call('SInt', [ArrayIndex(Var('Elem', '38'), [Var('operand1', '39'), Var('e', '40'), Var('esize', '41')], '42')], '43')), Update(Var('element2', '44'), Call('SInt', [ArrayIndex(Var('Elem', '46'), [Var('operand2', '47'), Var('e', '48'), Var('esize', '49')], '50')], '51')), Update(Var('product', '52'), BinaryExpr('+', BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '53'), '54'), Var('element2', '55'), '56'), Var('round_const', '57'), '58')), Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), Call('SignedSatQ', [BinaryExpr('>>', Var('product', '65'), Var('esize', '66'), '67'), Var('esize', '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SQRDMULH Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'rounding': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_doubling_simd'),
    'vqrdmulhq_s32': ARMSema(intrin='vqrdmulhq_s32', inst='SQRDMULH', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '23')], ('integer', Number(64)), '24'), IfElse(Var('rounding', '21'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '18'), Number(1), '19'), '20'), Number(0), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('product', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('sat', '32')], ('boolean', Number(1)), '33'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), Call('SInt', [ArrayIndex(Var('Elem', '38'), [Var('operand1', '39'), Var('e', '40'), Var('esize', '41')], '42')], '43')), Update(Var('element2', '44'), Call('SInt', [ArrayIndex(Var('Elem', '46'), [Var('operand2', '47'), Var('e', '48'), Var('esize', '49')], '50')], '51')), Update(Var('product', '52'), BinaryExpr('+', BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '53'), '54'), Var('element2', '55'), '56'), Var('round_const', '57'), '58')), Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), Call('SignedSatQ', [BinaryExpr('>>', Var('product', '65'), Var('esize', '66'), '67'), Var('esize', '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SQRDMULH Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'rounding': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_doubling_simd'),
    'vqrdmulhs_s32': ARMSema(intrin='vqrdmulhs_s32', inst='SQRDMULH', params=[Parameter(name='a', type='int32_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '23')], ('integer', Number(64)), '24'), IfElse(Var('rounding', '21'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '18'), Number(1), '19'), '20'), Number(0), '22'), '25'), VarsDecl([Var('element1', '26')], ('integer', Number(64)), '27'), VarsDecl([Var('element2', '28')], ('integer', Number(64)), '29'), VarsDecl([Var('product', '30')], ('integer', Number(64)), '31'), VarsDecl([Var('sat', '32')], ('boolean', Number(1)), '33'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '34'), Number(1), '35'), [Update(Var('element1', '36'), Call('SInt', [ArrayIndex(Var('Elem', '38'), [Var('operand1', '39'), Var('e', '40'), Var('esize', '41')], '42')], '43')), Update(Var('element2', '44'), Call('SInt', [ArrayIndex(Var('Elem', '46'), [Var('operand2', '47'), Var('e', '48'), Var('esize', '49')], '50')], '51')), Update(Var('product', '52'), BinaryExpr('+', BinaryExpr('*', BinaryExpr('*', Number(2), Var('element1', '53'), '54'), Var('element2', '55'), '56'), Var('round_const', '57'), '58')), Update(ArrayIndex(Var('Elem', '59'), [Var('result', '60'), Var('e', '61'), Var('esize', '62')], '63'), Call('SignedSatQ', [BinaryExpr('>>', Var('product', '65'), Var('esize', '66'), '67'), Var('esize', '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int32_t', ret_is_signed=True, inst_form='SQRDMULH Sd,Sn,Sm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'rounding': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_mul_int_doubling_sisd'),
    'vqrshl_s16': ARMSema(intrin='vqrshl_s16', inst='SQRSHL', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SQRSHL Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': False, 'rounding': True, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqrshl_s32': ARMSema(intrin='vqrshl_s32', inst='SQRSHL', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SQRSHL Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': False, 'rounding': True, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqrshl_s64': ARMSema(intrin='vqrshl_s64', inst='SQRSHL', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int64x1_t', ret_is_signed=True, inst_form='SQRSHL Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False, 'rounding': True, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vqrshl_s8': ARMSema(intrin='vqrshl_s8', inst='SQRSHL', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SQRSHL Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': False, 'rounding': True, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqrshl_u16': ARMSema(intrin='vqrshl_u16', inst='UQRSHL', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='UQRSHL Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': True, 'rounding': True, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqrshl_u32': ARMSema(intrin='vqrshl_u32', inst='UQRSHL', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='UQRSHL Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': True, 'rounding': True, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqrshl_u64': ARMSema(intrin='vqrshl_u64', inst='UQRSHL', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='UQRSHL Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True, 'rounding': True, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vqrshl_u8': ARMSema(intrin='vqrshl_u8', inst='UQRSHL', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='UQRSHL Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': True, 'rounding': True, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqrshlb_s8': ARMSema(intrin='vqrshlb_s8', inst='SQRSHL', params=[Parameter(name='a', type='int8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int8_t', ret_is_signed=True, inst_form='SQRSHL Bd,Bn,Bm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 8, 'elements': 1, 'unsigned': False, 'rounding': True, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vqrshlb_u8': ARMSema(intrin='vqrshlb_u8', inst='UQRSHL', params=[Parameter(name='a', type='uint8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint8_t', ret_is_signed=False, inst_form='UQRSHL Bd,Bn,Bm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 8, 'elements': 1, 'unsigned': True, 'rounding': True, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vqrshld_s64': ARMSema(intrin='vqrshld_s64', inst='SQRSHL', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int64_t', ret_is_signed=True, inst_form='SQRSHL Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False, 'rounding': True, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vqrshld_u64': ARMSema(intrin='vqrshld_u64', inst='UQRSHL', params=[Parameter(name='a', type='uint64_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint64_t', ret_is_signed=False, inst_form='UQRSHL Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True, 'rounding': True, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vqrshlh_s16': ARMSema(intrin='vqrshlh_s16', inst='SQRSHL', params=[Parameter(name='a', type='int16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int16_t', ret_is_signed=True, inst_form='SQRSHL Hd,Hn,Hm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'unsigned': False, 'rounding': True, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vqrshlh_u16': ARMSema(intrin='vqrshlh_u16', inst='UQRSHL', params=[Parameter(name='a', type='uint16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint16_t', ret_is_signed=False, inst_form='UQRSHL Hd,Hn,Hm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'unsigned': True, 'rounding': True, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vqrshlq_s16': ARMSema(intrin='vqrshlq_s16', inst='SQRSHL', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SQRSHL Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': False, 'rounding': True, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqrshlq_s32': ARMSema(intrin='vqrshlq_s32', inst='SQRSHL', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SQRSHL Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': False, 'rounding': True, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqrshlq_s64': ARMSema(intrin='vqrshlq_s64', inst='SQRSHL', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SQRSHL Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': False, 'rounding': True, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqrshlq_s8': ARMSema(intrin='vqrshlq_s8', inst='SQRSHL', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SQRSHL Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': False, 'rounding': True, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqrshlq_u16': ARMSema(intrin='vqrshlq_u16', inst='UQRSHL', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UQRSHL Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': True, 'rounding': True, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqrshlq_u32': ARMSema(intrin='vqrshlq_u32', inst='UQRSHL', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UQRSHL Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': True, 'rounding': True, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqrshlq_u64': ARMSema(intrin='vqrshlq_u64', inst='UQRSHL', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UQRSHL Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': True, 'rounding': True, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqrshlq_u8': ARMSema(intrin='vqrshlq_u8', inst='UQRSHL', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='UQRSHL Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': True, 'rounding': True, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqrshls_s32': ARMSema(intrin='vqrshls_s32', inst='SQRSHL', params=[Parameter(name='a', type='int32_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int32_t', ret_is_signed=True, inst_form='SQRSHL Sd,Sn,Sm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'unsigned': False, 'rounding': True, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vqrshls_u32': ARMSema(intrin='vqrshls_u32', inst='UQRSHL', params=[Parameter(name='a', type='uint32_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint32_t', ret_is_signed=False, inst_form='UQRSHL Sd,Sn,Sm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'unsigned': True, 'rounding': True, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vqrshrn_high_n_s16': ARMSema(intrin='vqrshrn_high_n_s16', inst='SQRSHRN2', params=[Parameter(name='r', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SQRSHRN2 Vd.16B,Vn.8H,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'round': True, 'unsigned': False}, belongs_to='aarch64_vector_shift_right_narrow_uniform_simd'),
    'vqrshrn_high_n_s32': ARMSema(intrin='vqrshrn_high_n_s32', inst='SQRSHRN2', params=[Parameter(name='r', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SQRSHRN2 Vd.8H,Vn.4S,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'round': True, 'unsigned': False}, belongs_to='aarch64_vector_shift_right_narrow_uniform_simd'),
    'vqrshrn_high_n_s64': ARMSema(intrin='vqrshrn_high_n_s64', inst='SQRSHRN2', params=[Parameter(name='r', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SQRSHRN2 Vd.4S,Vn.2D,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'round': True, 'unsigned': False}, belongs_to='aarch64_vector_shift_right_narrow_uniform_simd'),
    'vqrshrn_high_n_u16': ARMSema(intrin='vqrshrn_high_n_u16', inst='UQRSHRN2', params=[Parameter(name='r', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='UQRSHRN2 Vd.16B,Vn.8H,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'round': True, 'unsigned': True}, belongs_to='aarch64_vector_shift_right_narrow_uniform_simd'),
    'vqrshrn_high_n_u32': ARMSema(intrin='vqrshrn_high_n_u32', inst='UQRSHRN2', params=[Parameter(name='r', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UQRSHRN2 Vd.8H,Vn.4S,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'round': True, 'unsigned': True}, belongs_to='aarch64_vector_shift_right_narrow_uniform_simd'),
    'vqrshrn_high_n_u64': ARMSema(intrin='vqrshrn_high_n_u64', inst='UQRSHRN2', params=[Parameter(name='r', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UQRSHRN2 Vd.4S,Vn.2D,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'round': True, 'unsigned': True}, belongs_to='aarch64_vector_shift_right_narrow_uniform_simd'),
    'vqrshrn_n_s16': ARMSema(intrin='vqrshrn_n_s16', inst='SQRSHRN', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SQRSHRN Vd.8B,Vn.8H,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'round': True, 'unsigned': False}, belongs_to='aarch64_vector_shift_right_narrow_uniform_simd'),
    'vqrshrn_n_s32': ARMSema(intrin='vqrshrn_n_s32', inst='SQRSHRN', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SQRSHRN Vd.4H,Vn.4S,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'round': True, 'unsigned': False}, belongs_to='aarch64_vector_shift_right_narrow_uniform_simd'),
    'vqrshrn_n_s64': ARMSema(intrin='vqrshrn_n_s64', inst='SQRSHRN', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SQRSHRN Vd.2S,Vn.2D,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'round': True, 'unsigned': False}, belongs_to='aarch64_vector_shift_right_narrow_uniform_simd'),
    'vqrshrn_n_u16': ARMSema(intrin='vqrshrn_n_u16', inst='UQRSHRN', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='UQRSHRN Vd.8B,Vn.8H,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'round': True, 'unsigned': True}, belongs_to='aarch64_vector_shift_right_narrow_uniform_simd'),
    'vqrshrn_n_u32': ARMSema(intrin='vqrshrn_n_u32', inst='UQRSHRN', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='UQRSHRN Vd.4H,Vn.4S,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'round': True, 'unsigned': True}, belongs_to='aarch64_vector_shift_right_narrow_uniform_simd'),
    'vqrshrn_n_u64': ARMSema(intrin='vqrshrn_n_u64', inst='UQRSHRN', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='UQRSHRN Vd.2S,Vn.2D,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'round': True, 'unsigned': True}, belongs_to='aarch64_vector_shift_right_narrow_uniform_simd'),
    'vqrshrnd_n_s64': ARMSema(intrin='vqrshrnd_n_s64', inst='SQRSHRN', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='int32_t', ret_is_signed=True, inst_form='SQRSHRN Sd,Dn,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'part': 0, 'round': True, 'unsigned': False}, belongs_to='aarch64_vector_shift_right_narrow_uniform_sisd'),
    'vqrshrnd_n_u64': ARMSema(intrin='vqrshrnd_n_u64', inst='UQRSHRN', params=[Parameter(name='a', type='uint64_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='uint32_t', ret_is_signed=False, inst_form='UQRSHRN Sd,Dn,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'part': 0, 'round': True, 'unsigned': True}, belongs_to='aarch64_vector_shift_right_narrow_uniform_sisd'),
    'vqrshrnh_n_s16': ARMSema(intrin='vqrshrnh_n_s16', inst='SQRSHRN', params=[Parameter(name='a', type='int16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='int8_t', ret_is_signed=True, inst_form='SQRSHRN Bd,Hn,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 8, 'elements': 1, 'part': 0, 'round': True, 'unsigned': False}, belongs_to='aarch64_vector_shift_right_narrow_uniform_sisd'),
    'vqrshrnh_n_u16': ARMSema(intrin='vqrshrnh_n_u16', inst='UQRSHRN', params=[Parameter(name='a', type='uint16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='uint8_t', ret_is_signed=False, inst_form='UQRSHRN Bd,Hn,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 8, 'elements': 1, 'part': 0, 'round': True, 'unsigned': True}, belongs_to='aarch64_vector_shift_right_narrow_uniform_sisd'),
    'vqrshrns_n_s32': ARMSema(intrin='vqrshrns_n_s32', inst='SQRSHRN', params=[Parameter(name='a', type='int32_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='int16_t', ret_is_signed=True, inst_form='SQRSHRN Hd,Sn,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'part': 0, 'round': True, 'unsigned': False}, belongs_to='aarch64_vector_shift_right_narrow_uniform_sisd'),
    'vqrshrns_n_u32': ARMSema(intrin='vqrshrns_n_u32', inst='UQRSHRN', params=[Parameter(name='a', type='uint32_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='uint16_t', ret_is_signed=False, inst_form='UQRSHRN Hd,Sn,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'part': 0, 'round': True, 'unsigned': True}, belongs_to='aarch64_vector_shift_right_narrow_uniform_sisd'),
    'vqrshrun_high_n_s16': ARMSema(intrin='vqrshrun_high_n_s16', inst='SQRSHRUN2', params=[Parameter(name='r', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '48'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33')], '34'), Var('round_const', '35'), '36'), Var('shift', '37'), '38')), Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), Call('UnsignedSatQ', [Var('element', '45'), Var('esize', '46')], '47'))], 1, '49'), Update(ArrayIndex(Var('Vpart', '50'), [Var('d', '51'), Var('part', '52')], '53'), Var('result', '54'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='SQRSHRUN2 Vd.16B,Vn.8H,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'round': True}, belongs_to='aarch64_vector_shift_right_narrow_nonuniform_simd'),
    'vqrshrun_high_n_s32': ARMSema(intrin='vqrshrun_high_n_s32', inst='SQRSHRUN2', params=[Parameter(name='r', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '48'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33')], '34'), Var('round_const', '35'), '36'), Var('shift', '37'), '38')), Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), Call('UnsignedSatQ', [Var('element', '45'), Var('esize', '46')], '47'))], 1, '49'), Update(ArrayIndex(Var('Vpart', '50'), [Var('d', '51'), Var('part', '52')], '53'), Var('result', '54'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='SQRSHRUN2 Vd.8H,Vn.4S,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'round': True}, belongs_to='aarch64_vector_shift_right_narrow_nonuniform_simd'),
    'vqrshrun_high_n_s64': ARMSema(intrin='vqrshrun_high_n_s64', inst='SQRSHRUN2', params=[Parameter(name='r', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '48'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33')], '34'), Var('round_const', '35'), '36'), Var('shift', '37'), '38')), Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), Call('UnsignedSatQ', [Var('element', '45'), Var('esize', '46')], '47'))], 1, '49'), Update(ArrayIndex(Var('Vpart', '50'), [Var('d', '51'), Var('part', '52')], '53'), Var('result', '54'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='SQRSHRUN2 Vd.4S,Vn.2D,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'round': True}, belongs_to='aarch64_vector_shift_right_narrow_nonuniform_simd'),
    'vqrshrun_n_s16': ARMSema(intrin='vqrshrun_n_s16', inst='SQRSHRUN', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '48'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33')], '34'), Var('round_const', '35'), '36'), Var('shift', '37'), '38')), Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), Call('UnsignedSatQ', [Var('element', '45'), Var('esize', '46')], '47'))], 1, '49'), Update(ArrayIndex(Var('Vpart', '50'), [Var('d', '51'), Var('part', '52')], '53'), Var('result', '54'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='SQRSHRUN Vd.8B,Vn.8H,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'round': True}, belongs_to='aarch64_vector_shift_right_narrow_nonuniform_simd'),
    'vqrshrun_n_s32': ARMSema(intrin='vqrshrun_n_s32', inst='SQRSHRUN', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '48'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33')], '34'), Var('round_const', '35'), '36'), Var('shift', '37'), '38')), Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), Call('UnsignedSatQ', [Var('element', '45'), Var('esize', '46')], '47'))], 1, '49'), Update(ArrayIndex(Var('Vpart', '50'), [Var('d', '51'), Var('part', '52')], '53'), Var('result', '54'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='SQRSHRUN Vd.4H,Vn.4S,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'round': True}, belongs_to='aarch64_vector_shift_right_narrow_nonuniform_simd'),
    'vqrshrun_n_s64': ARMSema(intrin='vqrshrun_n_s64', inst='SQRSHRUN', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '48'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33')], '34'), Var('round_const', '35'), '36'), Var('shift', '37'), '38')), Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), Call('UnsignedSatQ', [Var('element', '45'), Var('esize', '46')], '47'))], 1, '49'), Update(ArrayIndex(Var('Vpart', '50'), [Var('d', '51'), Var('part', '52')], '53'), Var('result', '54'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='SQRSHRUN Vd.2S,Vn.2D,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'round': True}, belongs_to='aarch64_vector_shift_right_narrow_nonuniform_simd'),
    'vqrshrund_n_s64': ARMSema(intrin='vqrshrund_n_s64', inst='SQRSHRUN', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '48'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33')], '34'), Var('round_const', '35'), '36'), Var('shift', '37'), '38')), Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), Call('UnsignedSatQ', [Var('element', '45'), Var('esize', '46')], '47'))], 1, '49'), Update(ArrayIndex(Var('Vpart', '50'), [Var('d', '51'), Var('part', '52')], '53'), Var('result', '54'))], rettype='uint32_t', ret_is_signed=False, inst_form='SQRSHRUN Sd,Dn,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'part': 0, 'round': True}, belongs_to='aarch64_vector_shift_right_narrow_nonuniform_sisd'),
    'vqrshrunh_n_s16': ARMSema(intrin='vqrshrunh_n_s16', inst='SQRSHRUN', params=[Parameter(name='a', type='int16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '48'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33')], '34'), Var('round_const', '35'), '36'), Var('shift', '37'), '38')), Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), Call('UnsignedSatQ', [Var('element', '45'), Var('esize', '46')], '47'))], 1, '49'), Update(ArrayIndex(Var('Vpart', '50'), [Var('d', '51'), Var('part', '52')], '53'), Var('result', '54'))], rettype='uint8_t', ret_is_signed=False, inst_form='SQRSHRUN Bd,Hn,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 8, 'elements': 1, 'part': 0, 'round': True}, belongs_to='aarch64_vector_shift_right_narrow_nonuniform_sisd'),
    'vqrshruns_n_s32': ARMSema(intrin='vqrshruns_n_s32', inst='SQRSHRUN', params=[Parameter(name='a', type='int32_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '48'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33')], '34'), Var('round_const', '35'), '36'), Var('shift', '37'), '38')), Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), Call('UnsignedSatQ', [Var('element', '45'), Var('esize', '46')], '47'))], 1, '49'), Update(ArrayIndex(Var('Vpart', '50'), [Var('d', '51'), Var('part', '52')], '53'), Var('result', '54'))], rettype='uint16_t', ret_is_signed=False, inst_form='SQRSHRUN Hd,Sn,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'part': 0, 'round': True}, belongs_to='aarch64_vector_shift_right_narrow_nonuniform_sisd'),
    'vqshl_s16': ARMSema(intrin='vqshl_s16', inst='SQSHL', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SQSHL Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': False, 'rounding': False, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqshl_s32': ARMSema(intrin='vqshl_s32', inst='SQSHL', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SQSHL Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': False, 'rounding': False, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqshl_s64': ARMSema(intrin='vqshl_s64', inst='SQSHL', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int64x1_t', ret_is_signed=True, inst_form='SQSHL Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False, 'rounding': False, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vqshl_s8': ARMSema(intrin='vqshl_s8', inst='SQSHL', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SQSHL Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': False, 'rounding': False, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqshl_u16': ARMSema(intrin='vqshl_u16', inst='UQSHL', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='UQSHL Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': True, 'rounding': False, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqshl_u32': ARMSema(intrin='vqshl_u32', inst='UQSHL', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='UQSHL Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': True, 'rounding': False, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqshl_u64': ARMSema(intrin='vqshl_u64', inst='UQSHL', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='UQSHL Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True, 'rounding': False, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vqshl_u8': ARMSema(intrin='vqshl_u8', inst='UQSHL', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='UQSHL Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': True, 'rounding': False, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqshlb_n_s8': ARMSema(intrin='vqshlb_n_s8', inst='SQSHL', params=[Parameter(name='a', type='int8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('src_unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), Call('SatQ', [Var('element', '34'), Var('esize', '35'), Var('dst_unsigned', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('V', '40'), [Var('d', '41')], '42'), Var('result', '43'))], rettype='int8_t', ret_is_signed=True, inst_form='SQSHL Bd,Bn,#n', extensions=None, imm_width=(0, 7), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 8, 'elements': 1, 'src_unsigned': False, 'dst_unsigned': False}, belongs_to='aarch64_vector_shift_left_sat_sisd'),
    'vqshlb_n_u8': ARMSema(intrin='vqshlb_n_u8', inst='UQSHL', params=[Parameter(name='a', type='uint8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('src_unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), Call('SatQ', [Var('element', '34'), Var('esize', '35'), Var('dst_unsigned', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('V', '40'), [Var('d', '41')], '42'), Var('result', '43'))], rettype='uint8_t', ret_is_signed=False, inst_form='UQSHL Bd,Bn,#n', extensions=None, imm_width=(0, 7), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 8, 'elements': 1, 'src_unsigned': True, 'dst_unsigned': True}, belongs_to='aarch64_vector_shift_left_sat_sisd'),
    'vqshlb_s8': ARMSema(intrin='vqshlb_s8', inst='SQSHL', params=[Parameter(name='a', type='int8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int8_t', ret_is_signed=True, inst_form='SQSHL Bd,Bn,Bm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 8, 'elements': 1, 'unsigned': False, 'rounding': False, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vqshlb_u8': ARMSema(intrin='vqshlb_u8', inst='UQSHL', params=[Parameter(name='a', type='uint8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint8_t', ret_is_signed=False, inst_form='UQSHL Bd,Bn,Bm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 8, 'elements': 1, 'unsigned': True, 'rounding': False, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vqshld_s64': ARMSema(intrin='vqshld_s64', inst='SQSHL', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int64_t', ret_is_signed=True, inst_form='SQSHL Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False, 'rounding': False, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vqshld_u64': ARMSema(intrin='vqshld_u64', inst='UQSHL', params=[Parameter(name='a', type='uint64_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint64_t', ret_is_signed=False, inst_form='UQSHL Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True, 'rounding': False, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vqshlh_n_s16': ARMSema(intrin='vqshlh_n_s16', inst='SQSHL', params=[Parameter(name='a', type='int16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('src_unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), Call('SatQ', [Var('element', '34'), Var('esize', '35'), Var('dst_unsigned', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('V', '40'), [Var('d', '41')], '42'), Var('result', '43'))], rettype='int16_t', ret_is_signed=True, inst_form='SQSHL Hd,Hn,#n', extensions=None, imm_width=(0, 15), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'src_unsigned': False, 'dst_unsigned': False}, belongs_to='aarch64_vector_shift_left_sat_sisd'),
    'vqshlh_n_u16': ARMSema(intrin='vqshlh_n_u16', inst='UQSHL', params=[Parameter(name='a', type='uint16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('src_unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), Call('SatQ', [Var('element', '34'), Var('esize', '35'), Var('dst_unsigned', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('V', '40'), [Var('d', '41')], '42'), Var('result', '43'))], rettype='uint16_t', ret_is_signed=False, inst_form='UQSHL Hd,Hn,#n', extensions=None, imm_width=(0, 15), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'src_unsigned': True, 'dst_unsigned': True}, belongs_to='aarch64_vector_shift_left_sat_sisd'),
    'vqshlh_s16': ARMSema(intrin='vqshlh_s16', inst='SQSHL', params=[Parameter(name='a', type='int16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int16_t', ret_is_signed=True, inst_form='SQSHL Hd,Hn,Hm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'unsigned': False, 'rounding': False, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vqshlh_u16': ARMSema(intrin='vqshlh_u16', inst='UQSHL', params=[Parameter(name='a', type='uint16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint16_t', ret_is_signed=False, inst_form='UQSHL Hd,Hn,Hm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'unsigned': True, 'rounding': False, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vqshlq_s16': ARMSema(intrin='vqshlq_s16', inst='SQSHL', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SQSHL Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': False, 'rounding': False, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqshlq_s32': ARMSema(intrin='vqshlq_s32', inst='SQSHL', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SQSHL Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': False, 'rounding': False, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqshlq_s64': ARMSema(intrin='vqshlq_s64', inst='SQSHL', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SQSHL Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': False, 'rounding': False, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqshlq_s8': ARMSema(intrin='vqshlq_s8', inst='SQSHL', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SQSHL Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': False, 'rounding': False, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqshlq_u16': ARMSema(intrin='vqshlq_u16', inst='UQSHL', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UQSHL Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': True, 'rounding': False, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqshlq_u32': ARMSema(intrin='vqshlq_u32', inst='UQSHL', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UQSHL Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': True, 'rounding': False, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqshlq_u64': ARMSema(intrin='vqshlq_u64', inst='UQSHL', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UQSHL Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': True, 'rounding': False, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqshlq_u8': ARMSema(intrin='vqshlq_u8', inst='UQSHL', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='UQSHL Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': True, 'rounding': False, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vqshls_n_s32': ARMSema(intrin='vqshls_n_s32', inst='SQSHL', params=[Parameter(name='a', type='int32_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('src_unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), Call('SatQ', [Var('element', '34'), Var('esize', '35'), Var('dst_unsigned', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('V', '40'), [Var('d', '41')], '42'), Var('result', '43'))], rettype='int32_t', ret_is_signed=True, inst_form='SQSHL Sd,Sn,#n', extensions=None, imm_width=(0, 31), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'src_unsigned': False, 'dst_unsigned': False}, belongs_to='aarch64_vector_shift_left_sat_sisd'),
    'vqshls_n_u32': ARMSema(intrin='vqshls_n_u32', inst='UQSHL', params=[Parameter(name='a', type='uint32_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('src_unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), Call('SatQ', [Var('element', '34'), Var('esize', '35'), Var('dst_unsigned', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('V', '40'), [Var('d', '41')], '42'), Var('result', '43'))], rettype='uint32_t', ret_is_signed=False, inst_form='UQSHL Sd,Sn,#n', extensions=None, imm_width=(0, 31), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'src_unsigned': True, 'dst_unsigned': True}, belongs_to='aarch64_vector_shift_left_sat_sisd'),
    'vqshls_s32': ARMSema(intrin='vqshls_s32', inst='SQSHL', params=[Parameter(name='a', type='int32_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int32_t', ret_is_signed=True, inst_form='SQSHL Sd,Sn,Sm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'unsigned': False, 'rounding': False, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vqshls_u32': ARMSema(intrin='vqshls_u32', inst='UQSHL', params=[Parameter(name='a', type='uint32_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint32_t', ret_is_signed=False, inst_form='UQSHL Sd,Sn,Sm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'unsigned': True, 'rounding': False, 'saturating': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vqshlu_n_s16': ARMSema(intrin='vqshlu_n_s16', inst='SQSHLU', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('src_unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), Call('SatQ', [Var('element', '34'), Var('esize', '35'), Var('dst_unsigned', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('V', '40'), [Var('d', '41')], '42'), Var('result', '43'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='SQSHLU Vd.4H,Vn.4H,#n', extensions=None, imm_width=(0, 15), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'src_unsigned': False, 'dst_unsigned': True}, belongs_to='aarch64_vector_shift_left_sat_simd'),
    'vqshlu_n_s32': ARMSema(intrin='vqshlu_n_s32', inst='SQSHLU', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('src_unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), Call('SatQ', [Var('element', '34'), Var('esize', '35'), Var('dst_unsigned', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('V', '40'), [Var('d', '41')], '42'), Var('result', '43'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='SQSHLU Vd.2S,Vn.2S,#n', extensions=None, imm_width=(0, 31), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'src_unsigned': False, 'dst_unsigned': True}, belongs_to='aarch64_vector_shift_left_sat_simd'),
    'vqshlu_n_s64': ARMSema(intrin='vqshlu_n_s64', inst='SQSHLU', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('src_unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), Call('SatQ', [Var('element', '34'), Var('esize', '35'), Var('dst_unsigned', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('V', '40'), [Var('d', '41')], '42'), Var('result', '43'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='SQSHLU Dd,Dn,#n', extensions=None, imm_width=(0, 63), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'src_unsigned': False, 'dst_unsigned': True}, belongs_to='aarch64_vector_shift_left_sat_sisd'),
    'vqshlu_n_s8': ARMSema(intrin='vqshlu_n_s8', inst='SQSHLU', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('src_unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), Call('SatQ', [Var('element', '34'), Var('esize', '35'), Var('dst_unsigned', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('V', '40'), [Var('d', '41')], '42'), Var('result', '43'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='SQSHLU Vd.8B,Vn.8B,#n', extensions=None, imm_width=(0, 7), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'src_unsigned': False, 'dst_unsigned': True}, belongs_to='aarch64_vector_shift_left_sat_simd'),
    'vqshlub_n_s8': ARMSema(intrin='vqshlub_n_s8', inst='SQSHLU', params=[Parameter(name='a', type='int8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('src_unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), Call('SatQ', [Var('element', '34'), Var('esize', '35'), Var('dst_unsigned', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('V', '40'), [Var('d', '41')], '42'), Var('result', '43'))], rettype='uint8_t', ret_is_signed=False, inst_form='SQSHLU Bd,Bn,#n', extensions=None, imm_width=(0, 7), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 8, 'elements': 1, 'src_unsigned': False, 'dst_unsigned': True}, belongs_to='aarch64_vector_shift_left_sat_sisd'),
    'vqshlud_n_s64': ARMSema(intrin='vqshlud_n_s64', inst='SQSHLU', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('src_unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), Call('SatQ', [Var('element', '34'), Var('esize', '35'), Var('dst_unsigned', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('V', '40'), [Var('d', '41')], '42'), Var('result', '43'))], rettype='uint64_t', ret_is_signed=False, inst_form='SQSHLU Dd,Dn,#n', extensions=None, imm_width=(0, 63), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'src_unsigned': False, 'dst_unsigned': True}, belongs_to='aarch64_vector_shift_left_sat_sisd'),
    'vqshluh_n_s16': ARMSema(intrin='vqshluh_n_s16', inst='SQSHLU', params=[Parameter(name='a', type='int16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('src_unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), Call('SatQ', [Var('element', '34'), Var('esize', '35'), Var('dst_unsigned', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('V', '40'), [Var('d', '41')], '42'), Var('result', '43'))], rettype='uint16_t', ret_is_signed=False, inst_form='SQSHLU Hd,Hn,#n', extensions=None, imm_width=(0, 15), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'src_unsigned': False, 'dst_unsigned': True}, belongs_to='aarch64_vector_shift_left_sat_sisd'),
    'vqshluq_n_s16': ARMSema(intrin='vqshluq_n_s16', inst='SQSHLU', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('src_unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), Call('SatQ', [Var('element', '34'), Var('esize', '35'), Var('dst_unsigned', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('V', '40'), [Var('d', '41')], '42'), Var('result', '43'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='SQSHLU Vd.8H,Vn.8H,#n', extensions=None, imm_width=(0, 15), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'src_unsigned': False, 'dst_unsigned': True}, belongs_to='aarch64_vector_shift_left_sat_simd'),
    'vqshluq_n_s32': ARMSema(intrin='vqshluq_n_s32', inst='SQSHLU', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('src_unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), Call('SatQ', [Var('element', '34'), Var('esize', '35'), Var('dst_unsigned', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('V', '40'), [Var('d', '41')], '42'), Var('result', '43'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='SQSHLU Vd.4S,Vn.4S,#n', extensions=None, imm_width=(0, 31), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'src_unsigned': False, 'dst_unsigned': True}, belongs_to='aarch64_vector_shift_left_sat_simd'),
    'vqshluq_n_s64': ARMSema(intrin='vqshluq_n_s64', inst='SQSHLU', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('src_unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), Call('SatQ', [Var('element', '34'), Var('esize', '35'), Var('dst_unsigned', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('V', '40'), [Var('d', '41')], '42'), Var('result', '43'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='SQSHLU Vd.2D,Vn.2D,#n', extensions=None, imm_width=(0, 63), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'src_unsigned': False, 'dst_unsigned': True}, belongs_to='aarch64_vector_shift_left_sat_simd'),
    'vqshluq_n_s8': ARMSema(intrin='vqshluq_n_s8', inst='SQSHLU', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('src_unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), Call('SatQ', [Var('element', '34'), Var('esize', '35'), Var('dst_unsigned', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('V', '40'), [Var('d', '41')], '42'), Var('result', '43'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='SQSHLU Vd.16B,Vn.16B,#n', extensions=None, imm_width=(0, 7), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'src_unsigned': False, 'dst_unsigned': True}, belongs_to='aarch64_vector_shift_left_sat_simd'),
    'vqshlus_n_s32': ARMSema(intrin='vqshlus_n_s32', inst='SQSHLU', params=[Parameter(name='a', type='int32_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('element', '11')], ('integer', Number(64)), '12'), VarsDecl([Var('sat', '13')], ('boolean', Number(1)), '14'), For(Var('e', '38'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('src_unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), Call('SatQ', [Var('element', '34'), Var('esize', '35'), Var('dst_unsigned', '36')], '37'))], 1, '39'), Update(ArrayIndex(Var('V', '40'), [Var('d', '41')], '42'), Var('result', '43'))], rettype='uint32_t', ret_is_signed=False, inst_form='SQSHLU Sd,Sn,#n', extensions=None, imm_width=(0, 31), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'src_unsigned': False, 'dst_unsigned': True}, belongs_to='aarch64_vector_shift_left_sat_sisd'),
    'vqshrn_high_n_s16': ARMSema(intrin='vqshrn_high_n_s16', inst='SQSHRN2', params=[Parameter(name='r', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SQSHRN2 Vd.16B,Vn.8H,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'round': False, 'unsigned': False}, belongs_to='aarch64_vector_shift_right_narrow_uniform_simd'),
    'vqshrn_high_n_s32': ARMSema(intrin='vqshrn_high_n_s32', inst='SQSHRN2', params=[Parameter(name='r', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SQSHRN2 Vd.8H,Vn.4S,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'round': False, 'unsigned': False}, belongs_to='aarch64_vector_shift_right_narrow_uniform_simd'),
    'vqshrn_high_n_s64': ARMSema(intrin='vqshrn_high_n_s64', inst='SQSHRN2', params=[Parameter(name='r', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SQSHRN2 Vd.4S,Vn.2D,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'round': False, 'unsigned': False}, belongs_to='aarch64_vector_shift_right_narrow_uniform_simd'),
    'vqshrn_high_n_u16': ARMSema(intrin='vqshrn_high_n_u16', inst='UQSHRN2', params=[Parameter(name='r', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='UQSHRN2 Vd.16B,Vn.8H,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'round': False, 'unsigned': True}, belongs_to='aarch64_vector_shift_right_narrow_uniform_simd'),
    'vqshrn_high_n_u32': ARMSema(intrin='vqshrn_high_n_u32', inst='UQSHRN2', params=[Parameter(name='r', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UQSHRN2 Vd.8H,Vn.4S,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'round': False, 'unsigned': True}, belongs_to='aarch64_vector_shift_right_narrow_uniform_simd'),
    'vqshrn_high_n_u64': ARMSema(intrin='vqshrn_high_n_u64', inst='UQSHRN2', params=[Parameter(name='r', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UQSHRN2 Vd.4S,Vn.2D,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'round': False, 'unsigned': True}, belongs_to='aarch64_vector_shift_right_narrow_uniform_simd'),
    'vqshrn_n_s16': ARMSema(intrin='vqshrn_n_s16', inst='SQSHRN', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SQSHRN Vd.8B,Vn.8H,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'round': False, 'unsigned': False}, belongs_to='aarch64_vector_shift_right_narrow_uniform_simd'),
    'vqshrn_n_s32': ARMSema(intrin='vqshrn_n_s32', inst='SQSHRN', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SQSHRN Vd.4H,Vn.4S,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'round': False, 'unsigned': False}, belongs_to='aarch64_vector_shift_right_narrow_uniform_simd'),
    'vqshrn_n_s64': ARMSema(intrin='vqshrn_n_s64', inst='SQSHRN', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SQSHRN Vd.2S,Vn.2D,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'round': False, 'unsigned': False}, belongs_to='aarch64_vector_shift_right_narrow_uniform_simd'),
    'vqshrn_n_u16': ARMSema(intrin='vqshrn_n_u16', inst='UQSHRN', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='UQSHRN Vd.8B,Vn.8H,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'round': False, 'unsigned': True}, belongs_to='aarch64_vector_shift_right_narrow_uniform_simd'),
    'vqshrn_n_u32': ARMSema(intrin='vqshrn_n_u32', inst='UQSHRN', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='UQSHRN Vd.4H,Vn.4S,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'round': False, 'unsigned': True}, belongs_to='aarch64_vector_shift_right_narrow_uniform_simd'),
    'vqshrn_n_u64': ARMSema(intrin='vqshrn_n_u64', inst='UQSHRN', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='UQSHRN Vd.2S,Vn.2D,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'round': False, 'unsigned': True}, belongs_to='aarch64_vector_shift_right_narrow_uniform_simd'),
    'vqshrnd_n_s64': ARMSema(intrin='vqshrnd_n_s64', inst='SQSHRN', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='int32_t', ret_is_signed=True, inst_form='SQSHRN Sd,Dn,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'part': 0, 'round': False, 'unsigned': False}, belongs_to='aarch64_vector_shift_right_narrow_uniform_sisd'),
    'vqshrnd_n_u64': ARMSema(intrin='vqshrnd_n_u64', inst='UQSHRN', params=[Parameter(name='a', type='uint64_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='uint32_t', ret_is_signed=False, inst_form='UQSHRN Sd,Dn,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'part': 0, 'round': False, 'unsigned': True}, belongs_to='aarch64_vector_shift_right_narrow_uniform_sisd'),
    'vqshrnh_n_s16': ARMSema(intrin='vqshrnh_n_s16', inst='SQSHRN', params=[Parameter(name='a', type='int16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='int8_t', ret_is_signed=True, inst_form='SQSHRN Bd,Hn,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 8, 'elements': 1, 'part': 0, 'round': False, 'unsigned': False}, belongs_to='aarch64_vector_shift_right_narrow_uniform_sisd'),
    'vqshrnh_n_u16': ARMSema(intrin='vqshrnh_n_u16', inst='UQSHRN', params=[Parameter(name='a', type='uint16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='uint8_t', ret_is_signed=False, inst_form='UQSHRN Bd,Hn,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 8, 'elements': 1, 'part': 0, 'round': False, 'unsigned': True}, belongs_to='aarch64_vector_shift_right_narrow_uniform_sisd'),
    'vqshrns_n_s32': ARMSema(intrin='vqshrns_n_s32', inst='SQSHRN', params=[Parameter(name='a', type='int32_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='int16_t', ret_is_signed=True, inst_form='SQSHRN Hd,Sn,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'part': 0, 'round': False, 'unsigned': False}, belongs_to='aarch64_vector_shift_right_narrow_uniform_sisd'),
    'vqshrns_n_u32': ARMSema(intrin='vqshrns_n_u32', inst='UQSHRN', params=[Parameter(name='a', type='uint32_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '50'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), Var('unsigned', '34')], '35'), Var('round_const', '36'), '37'), Var('shift', '38'), '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), Var('e', '42'), Var('esize', '43')], '44'), Call('SatQ', [Var('element', '46'), Var('esize', '47'), Var('unsigned', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('Vpart', '52'), [Var('d', '53'), Var('part', '54')], '55'), Var('result', '56'))], rettype='uint16_t', ret_is_signed=False, inst_form='UQSHRN Hd,Sn,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'part': 0, 'round': False, 'unsigned': True}, belongs_to='aarch64_vector_shift_right_narrow_uniform_sisd'),
    'vqshrun_high_n_s16': ARMSema(intrin='vqshrun_high_n_s16', inst='SQSHRUN2', params=[Parameter(name='r', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '48'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33')], '34'), Var('round_const', '35'), '36'), Var('shift', '37'), '38')), Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), Call('UnsignedSatQ', [Var('element', '45'), Var('esize', '46')], '47'))], 1, '49'), Update(ArrayIndex(Var('Vpart', '50'), [Var('d', '51'), Var('part', '52')], '53'), Var('result', '54'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='SQSHRUN2 Vd.16B,Vn.8H,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'round': False}, belongs_to='aarch64_vector_shift_right_narrow_nonuniform_simd'),
    'vqshrun_high_n_s32': ARMSema(intrin='vqshrun_high_n_s32', inst='SQSHRUN2', params=[Parameter(name='r', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '48'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33')], '34'), Var('round_const', '35'), '36'), Var('shift', '37'), '38')), Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), Call('UnsignedSatQ', [Var('element', '45'), Var('esize', '46')], '47'))], 1, '49'), Update(ArrayIndex(Var('Vpart', '50'), [Var('d', '51'), Var('part', '52')], '53'), Var('result', '54'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='SQSHRUN2 Vd.8H,Vn.4S,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'round': False}, belongs_to='aarch64_vector_shift_right_narrow_nonuniform_simd'),
    'vqshrun_high_n_s64': ARMSema(intrin='vqshrun_high_n_s64', inst='SQSHRUN2', params=[Parameter(name='r', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '48'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33')], '34'), Var('round_const', '35'), '36'), Var('shift', '37'), '38')), Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), Call('UnsignedSatQ', [Var('element', '45'), Var('esize', '46')], '47'))], 1, '49'), Update(ArrayIndex(Var('Vpart', '50'), [Var('d', '51'), Var('part', '52')], '53'), Var('result', '54'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='SQSHRUN2 Vd.4S,Vn.2D,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'round': False}, belongs_to='aarch64_vector_shift_right_narrow_nonuniform_simd'),
    'vqshrun_n_s16': ARMSema(intrin='vqshrun_n_s16', inst='SQSHRUN', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '48'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33')], '34'), Var('round_const', '35'), '36'), Var('shift', '37'), '38')), Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), Call('UnsignedSatQ', [Var('element', '45'), Var('esize', '46')], '47'))], 1, '49'), Update(ArrayIndex(Var('Vpart', '50'), [Var('d', '51'), Var('part', '52')], '53'), Var('result', '54'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='SQSHRUN Vd.8B,Vn.8H,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'round': False}, belongs_to='aarch64_vector_shift_right_narrow_nonuniform_simd'),
    'vqshrun_n_s32': ARMSema(intrin='vqshrun_n_s32', inst='SQSHRUN', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '48'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33')], '34'), Var('round_const', '35'), '36'), Var('shift', '37'), '38')), Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), Call('UnsignedSatQ', [Var('element', '45'), Var('esize', '46')], '47'))], 1, '49'), Update(ArrayIndex(Var('Vpart', '50'), [Var('d', '51'), Var('part', '52')], '53'), Var('result', '54'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='SQSHRUN Vd.4H,Vn.4S,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'round': False}, belongs_to='aarch64_vector_shift_right_narrow_nonuniform_simd'),
    'vqshrun_n_s64': ARMSema(intrin='vqshrun_n_s64', inst='SQSHRUN', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '48'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33')], '34'), Var('round_const', '35'), '36'), Var('shift', '37'), '38')), Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), Call('UnsignedSatQ', [Var('element', '45'), Var('esize', '46')], '47'))], 1, '49'), Update(ArrayIndex(Var('Vpart', '50'), [Var('d', '51'), Var('part', '52')], '53'), Var('result', '54'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='SQSHRUN Vd.2S,Vn.2D,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'round': False}, belongs_to='aarch64_vector_shift_right_narrow_nonuniform_simd'),
    'vqshrund_n_s64': ARMSema(intrin='vqshrund_n_s64', inst='SQSHRUN', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '48'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33')], '34'), Var('round_const', '35'), '36'), Var('shift', '37'), '38')), Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), Call('UnsignedSatQ', [Var('element', '45'), Var('esize', '46')], '47'))], 1, '49'), Update(ArrayIndex(Var('Vpart', '50'), [Var('d', '51'), Var('part', '52')], '53'), Var('result', '54'))], rettype='uint32_t', ret_is_signed=False, inst_form='SQSHRUN Sd,Dn,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'part': 0, 'round': False}, belongs_to='aarch64_vector_shift_right_narrow_nonuniform_sisd'),
    'vqshrunh_n_s16': ARMSema(intrin='vqshrunh_n_s16', inst='SQSHRUN', params=[Parameter(name='a', type='int16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '48'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33')], '34'), Var('round_const', '35'), '36'), Var('shift', '37'), '38')), Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), Call('UnsignedSatQ', [Var('element', '45'), Var('esize', '46')], '47'))], 1, '49'), Update(ArrayIndex(Var('Vpart', '50'), [Var('d', '51'), Var('part', '52')], '53'), Var('result', '54'))], rettype='uint8_t', ret_is_signed=False, inst_form='SQSHRUN Bd,Hn,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 8, 'elements': 1, 'part': 0, 'round': False}, belongs_to='aarch64_vector_shift_right_narrow_nonuniform_sisd'),
    'vqshruns_n_s32': ARMSema(intrin='vqshruns_n_s32', inst='SQSHRUN', params=[Parameter(name='a', type='int32_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '48'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element', '26'), BinaryExpr('>>', BinaryExpr('+', Call('SInt', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33')], '34'), Var('round_const', '35'), '36'), Var('shift', '37'), '38')), Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), Call('UnsignedSatQ', [Var('element', '45'), Var('esize', '46')], '47'))], 1, '49'), Update(ArrayIndex(Var('Vpart', '50'), [Var('d', '51'), Var('part', '52')], '53'), Var('result', '54'))], rettype='uint16_t', ret_is_signed=False, inst_form='SQSHRUN Hd,Sn,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'part': 0, 'round': False}, belongs_to='aarch64_vector_shift_right_narrow_nonuniform_sisd'),
    'vqsub_s16': ARMSema(intrin='vqsub_s16', inst='SQSUB', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('diff', '46'), BinaryExpr('-', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('diff', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SQSUB Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_saturating_simd'),
    'vqsub_s32': ARMSema(intrin='vqsub_s32', inst='SQSUB', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('diff', '46'), BinaryExpr('-', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('diff', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SQSUB Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_saturating_simd'),
    'vqsub_s64': ARMSema(intrin='vqsub_s64', inst='SQSUB', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('diff', '46'), BinaryExpr('-', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('diff', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='int64x1_t', ret_is_signed=True, inst_form='SQSUB Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_saturating_sisd'),
    'vqsub_s8': ARMSema(intrin='vqsub_s8', inst='SQSUB', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('diff', '46'), BinaryExpr('-', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('diff', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SQSUB Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_saturating_simd'),
    'vqsub_u16': ARMSema(intrin='vqsub_u16', inst='UQSUB', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('diff', '46'), BinaryExpr('-', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('diff', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='UQSUB Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_saturating_simd'),
    'vqsub_u32': ARMSema(intrin='vqsub_u32', inst='UQSUB', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('diff', '46'), BinaryExpr('-', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('diff', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='UQSUB Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_saturating_simd'),
    'vqsub_u64': ARMSema(intrin='vqsub_u64', inst='UQSUB', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('diff', '46'), BinaryExpr('-', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('diff', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='UQSUB Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_saturating_sisd'),
    'vqsub_u8': ARMSema(intrin='vqsub_u8', inst='UQSUB', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('diff', '46'), BinaryExpr('-', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('diff', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='UQSUB Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_saturating_simd'),
    'vqsubb_s8': ARMSema(intrin='vqsubb_s8', inst='SQSUB', params=[Parameter(name='a', type='int8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('diff', '46'), BinaryExpr('-', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('diff', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='int8_t', ret_is_signed=True, inst_form='SQSUB Bd,Bn,Bm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 8, 'elements': 1, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_saturating_sisd'),
    'vqsubb_u8': ARMSema(intrin='vqsubb_u8', inst='UQSUB', params=[Parameter(name='a', type='uint8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('diff', '46'), BinaryExpr('-', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('diff', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='uint8_t', ret_is_signed=False, inst_form='UQSUB Bd,Bn,Bm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 8, 'elements': 1, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_saturating_sisd'),
    'vqsubd_s64': ARMSema(intrin='vqsubd_s64', inst='SQSUB', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('diff', '46'), BinaryExpr('-', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('diff', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='int64_t', ret_is_signed=True, inst_form='SQSUB Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_saturating_sisd'),
    'vqsubd_u64': ARMSema(intrin='vqsubd_u64', inst='UQSUB', params=[Parameter(name='a', type='uint64_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('diff', '46'), BinaryExpr('-', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('diff', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='uint64_t', ret_is_signed=False, inst_form='UQSUB Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_saturating_sisd'),
    'vqsubh_s16': ARMSema(intrin='vqsubh_s16', inst='SQSUB', params=[Parameter(name='a', type='int16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('diff', '46'), BinaryExpr('-', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('diff', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='int16_t', ret_is_signed=True, inst_form='SQSUB Hd,Hn,Hm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_saturating_sisd'),
    'vqsubh_u16': ARMSema(intrin='vqsubh_u16', inst='UQSUB', params=[Parameter(name='a', type='uint16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('diff', '46'), BinaryExpr('-', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('diff', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='uint16_t', ret_is_signed=False, inst_form='UQSUB Hd,Hn,Hm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_saturating_sisd'),
    'vqsubq_s16': ARMSema(intrin='vqsubq_s16', inst='SQSUB', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('diff', '46'), BinaryExpr('-', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('diff', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SQSUB Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_saturating_simd'),
    'vqsubq_s32': ARMSema(intrin='vqsubq_s32', inst='SQSUB', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('diff', '46'), BinaryExpr('-', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('diff', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SQSUB Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_saturating_simd'),
    'vqsubq_s64': ARMSema(intrin='vqsubq_s64', inst='SQSUB', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('diff', '46'), BinaryExpr('-', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('diff', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SQSUB Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_saturating_simd'),
    'vqsubq_s8': ARMSema(intrin='vqsubq_s8', inst='SQSUB', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('diff', '46'), BinaryExpr('-', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('diff', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SQSUB Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_saturating_simd'),
    'vqsubq_u16': ARMSema(intrin='vqsubq_u16', inst='UQSUB', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('diff', '46'), BinaryExpr('-', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('diff', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UQSUB Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_saturating_simd'),
    'vqsubq_u32': ARMSema(intrin='vqsubq_u32', inst='UQSUB', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('diff', '46'), BinaryExpr('-', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('diff', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UQSUB Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_saturating_simd'),
    'vqsubq_u64': ARMSema(intrin='vqsubq_u64', inst='UQSUB', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('diff', '46'), BinaryExpr('-', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('diff', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UQSUB Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_saturating_simd'),
    'vqsubq_u8': ARMSema(intrin='vqsubq_u8', inst='UQSUB', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('diff', '46'), BinaryExpr('-', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('diff', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='UQSUB Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_saturating_simd'),
    'vqsubs_s32': ARMSema(intrin='vqsubs_s32', inst='SQSUB', params=[Parameter(name='a', type='int32_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('diff', '46'), BinaryExpr('-', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('diff', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='int32_t', ret_is_signed=True, inst_form='SQSUB Sd,Sn,Sm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_saturating_sisd'),
    'vqsubs_u32': ARMSema(intrin='vqsubs_u32', inst='UQSUB', params=[Parameter(name='a', type='uint32_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('diff', '22')], ('integer', Number(64)), '23'), VarsDecl([Var('sat', '24')], ('boolean', Number(1)), '25'), For(Var('e', '60'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), Call('Int', [ArrayIndex(Var('Elem', '30'), [Var('operand1', '31'), Var('e', '32'), Var('esize', '33')], '34'), Var('unsigned', '35')], '36')), Update(Var('element2', '37'), Call('Int', [ArrayIndex(Var('Elem', '39'), [Var('operand2', '40'), Var('e', '41'), Var('esize', '42')], '43'), Var('unsigned', '44')], '45')), Update(Var('diff', '46'), BinaryExpr('-', Var('element1', '47'), Var('element2', '48'), '49')), Update(ArrayIndex(Var('Elem', '50'), [Var('result', '51'), Var('e', '52'), Var('esize', '53')], '54'), Call('SatQ', [Var('diff', '56'), Var('esize', '57'), Var('unsigned', '58')], '59'))], 1, '61'), Update(ArrayIndex(Var('V', '62'), [Var('d', '63')], '64'), Var('result', '65'))], rettype='uint32_t', ret_is_signed=False, inst_form='UQSUB Sd,Sn,Sm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_sub_saturating_sisd'),
    'vraddhn_high_s16': ARMSema(intrin='vraddhn_high_s16', inst='RADDHN2', params=[Parameter(name='r', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='int8x16_t', ret_is_signed=True, inst_form='RADDHN2 Vd.16B,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'sub_op': False, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vraddhn_high_s32': ARMSema(intrin='vraddhn_high_s32', inst='RADDHN2', params=[Parameter(name='r', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='int16x8_t', ret_is_signed=True, inst_form='RADDHN2 Vd.8H,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'sub_op': False, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vraddhn_high_s64': ARMSema(intrin='vraddhn_high_s64', inst='RADDHN2', params=[Parameter(name='r', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='int32x4_t', ret_is_signed=True, inst_form='RADDHN2 Vd.4S,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'sub_op': False, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vraddhn_high_u16': ARMSema(intrin='vraddhn_high_u16', inst='RADDHN2', params=[Parameter(name='r', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='RADDHN2 Vd.16B,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'sub_op': False, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vraddhn_high_u32': ARMSema(intrin='vraddhn_high_u32', inst='RADDHN2', params=[Parameter(name='r', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='RADDHN2 Vd.8H,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'sub_op': False, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vraddhn_high_u64': ARMSema(intrin='vraddhn_high_u64', inst='RADDHN2', params=[Parameter(name='r', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='RADDHN2 Vd.4S,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'sub_op': False, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vraddhn_s16': ARMSema(intrin='vraddhn_s16', inst='RADDHN', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='int8x8_t', ret_is_signed=True, inst_form='RADDHN Vd.8B,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'sub_op': False, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vraddhn_s32': ARMSema(intrin='vraddhn_s32', inst='RADDHN', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='int16x4_t', ret_is_signed=True, inst_form='RADDHN Vd.4H,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'sub_op': False, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vraddhn_s64': ARMSema(intrin='vraddhn_s64', inst='RADDHN', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='int32x2_t', ret_is_signed=True, inst_form='RADDHN Vd.2S,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'sub_op': False, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vraddhn_u16': ARMSema(intrin='vraddhn_u16', inst='RADDHN', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='RADDHN Vd.8B,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'sub_op': False, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vraddhn_u32': ARMSema(intrin='vraddhn_u32', inst='RADDHN', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='RADDHN Vd.4H,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'sub_op': False, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vraddhn_u64': ARMSema(intrin='vraddhn_u64', inst='RADDHN', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='RADDHN Vd.2S,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'sub_op': False, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vrhadd_s16': ARMSema(intrin='vrhadd_s16', inst='SRHADD', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), For(Var('e', '54'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element1', '24'), Call('Int', [ArrayIndex(Var('Elem', '26'), [Var('operand1', '27'), Var('e', '28'), Var('esize', '29')], '30'), Var('unsigned', '31')], '32')), Update(Var('element2', '33'), Call('Int', [ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39'), Var('unsigned', '40')], '41')), Update(ArrayIndex(Var('Elem', '42'), [Var('result', '43'), Var('e', '44'), Var('esize', '45')], '46'), ArrayIndex(BinaryExpr('+', BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49'), Number(1), '50'), [SliceRange(Var('esize', '51'), Number(1), '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SRHADD Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_halving_rounding'),
    'vrhadd_s32': ARMSema(intrin='vrhadd_s32', inst='SRHADD', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), For(Var('e', '54'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element1', '24'), Call('Int', [ArrayIndex(Var('Elem', '26'), [Var('operand1', '27'), Var('e', '28'), Var('esize', '29')], '30'), Var('unsigned', '31')], '32')), Update(Var('element2', '33'), Call('Int', [ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39'), Var('unsigned', '40')], '41')), Update(ArrayIndex(Var('Elem', '42'), [Var('result', '43'), Var('e', '44'), Var('esize', '45')], '46'), ArrayIndex(BinaryExpr('+', BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49'), Number(1), '50'), [SliceRange(Var('esize', '51'), Number(1), '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SRHADD Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_halving_rounding'),
    'vrhadd_s8': ARMSema(intrin='vrhadd_s8', inst='SRHADD', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), For(Var('e', '54'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element1', '24'), Call('Int', [ArrayIndex(Var('Elem', '26'), [Var('operand1', '27'), Var('e', '28'), Var('esize', '29')], '30'), Var('unsigned', '31')], '32')), Update(Var('element2', '33'), Call('Int', [ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39'), Var('unsigned', '40')], '41')), Update(ArrayIndex(Var('Elem', '42'), [Var('result', '43'), Var('e', '44'), Var('esize', '45')], '46'), ArrayIndex(BinaryExpr('+', BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49'), Number(1), '50'), [SliceRange(Var('esize', '51'), Number(1), '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SRHADD Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_halving_rounding'),
    'vrhadd_u16': ARMSema(intrin='vrhadd_u16', inst='URHADD', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), For(Var('e', '54'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element1', '24'), Call('Int', [ArrayIndex(Var('Elem', '26'), [Var('operand1', '27'), Var('e', '28'), Var('esize', '29')], '30'), Var('unsigned', '31')], '32')), Update(Var('element2', '33'), Call('Int', [ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39'), Var('unsigned', '40')], '41')), Update(ArrayIndex(Var('Elem', '42'), [Var('result', '43'), Var('e', '44'), Var('esize', '45')], '46'), ArrayIndex(BinaryExpr('+', BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49'), Number(1), '50'), [SliceRange(Var('esize', '51'), Number(1), '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='URHADD Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_halving_rounding'),
    'vrhadd_u32': ARMSema(intrin='vrhadd_u32', inst='URHADD', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), For(Var('e', '54'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element1', '24'), Call('Int', [ArrayIndex(Var('Elem', '26'), [Var('operand1', '27'), Var('e', '28'), Var('esize', '29')], '30'), Var('unsigned', '31')], '32')), Update(Var('element2', '33'), Call('Int', [ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39'), Var('unsigned', '40')], '41')), Update(ArrayIndex(Var('Elem', '42'), [Var('result', '43'), Var('e', '44'), Var('esize', '45')], '46'), ArrayIndex(BinaryExpr('+', BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49'), Number(1), '50'), [SliceRange(Var('esize', '51'), Number(1), '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='URHADD Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_halving_rounding'),
    'vrhadd_u8': ARMSema(intrin='vrhadd_u8', inst='URHADD', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), For(Var('e', '54'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element1', '24'), Call('Int', [ArrayIndex(Var('Elem', '26'), [Var('operand1', '27'), Var('e', '28'), Var('esize', '29')], '30'), Var('unsigned', '31')], '32')), Update(Var('element2', '33'), Call('Int', [ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39'), Var('unsigned', '40')], '41')), Update(ArrayIndex(Var('Elem', '42'), [Var('result', '43'), Var('e', '44'), Var('esize', '45')], '46'), ArrayIndex(BinaryExpr('+', BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49'), Number(1), '50'), [SliceRange(Var('esize', '51'), Number(1), '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='URHADD Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_halving_rounding'),
    'vrhaddq_s16': ARMSema(intrin='vrhaddq_s16', inst='SRHADD', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), For(Var('e', '54'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element1', '24'), Call('Int', [ArrayIndex(Var('Elem', '26'), [Var('operand1', '27'), Var('e', '28'), Var('esize', '29')], '30'), Var('unsigned', '31')], '32')), Update(Var('element2', '33'), Call('Int', [ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39'), Var('unsigned', '40')], '41')), Update(ArrayIndex(Var('Elem', '42'), [Var('result', '43'), Var('e', '44'), Var('esize', '45')], '46'), ArrayIndex(BinaryExpr('+', BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49'), Number(1), '50'), [SliceRange(Var('esize', '51'), Number(1), '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SRHADD Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_halving_rounding'),
    'vrhaddq_s32': ARMSema(intrin='vrhaddq_s32', inst='SRHADD', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), For(Var('e', '54'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element1', '24'), Call('Int', [ArrayIndex(Var('Elem', '26'), [Var('operand1', '27'), Var('e', '28'), Var('esize', '29')], '30'), Var('unsigned', '31')], '32')), Update(Var('element2', '33'), Call('Int', [ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39'), Var('unsigned', '40')], '41')), Update(ArrayIndex(Var('Elem', '42'), [Var('result', '43'), Var('e', '44'), Var('esize', '45')], '46'), ArrayIndex(BinaryExpr('+', BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49'), Number(1), '50'), [SliceRange(Var('esize', '51'), Number(1), '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SRHADD Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_halving_rounding'),
    'vrhaddq_s8': ARMSema(intrin='vrhaddq_s8', inst='SRHADD', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), For(Var('e', '54'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element1', '24'), Call('Int', [ArrayIndex(Var('Elem', '26'), [Var('operand1', '27'), Var('e', '28'), Var('esize', '29')], '30'), Var('unsigned', '31')], '32')), Update(Var('element2', '33'), Call('Int', [ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39'), Var('unsigned', '40')], '41')), Update(ArrayIndex(Var('Elem', '42'), [Var('result', '43'), Var('e', '44'), Var('esize', '45')], '46'), ArrayIndex(BinaryExpr('+', BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49'), Number(1), '50'), [SliceRange(Var('esize', '51'), Number(1), '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SRHADD Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_halving_rounding'),
    'vrhaddq_u16': ARMSema(intrin='vrhaddq_u16', inst='URHADD', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), For(Var('e', '54'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element1', '24'), Call('Int', [ArrayIndex(Var('Elem', '26'), [Var('operand1', '27'), Var('e', '28'), Var('esize', '29')], '30'), Var('unsigned', '31')], '32')), Update(Var('element2', '33'), Call('Int', [ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39'), Var('unsigned', '40')], '41')), Update(ArrayIndex(Var('Elem', '42'), [Var('result', '43'), Var('e', '44'), Var('esize', '45')], '46'), ArrayIndex(BinaryExpr('+', BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49'), Number(1), '50'), [SliceRange(Var('esize', '51'), Number(1), '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='URHADD Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_halving_rounding'),
    'vrhaddq_u32': ARMSema(intrin='vrhaddq_u32', inst='URHADD', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), For(Var('e', '54'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element1', '24'), Call('Int', [ArrayIndex(Var('Elem', '26'), [Var('operand1', '27'), Var('e', '28'), Var('esize', '29')], '30'), Var('unsigned', '31')], '32')), Update(Var('element2', '33'), Call('Int', [ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39'), Var('unsigned', '40')], '41')), Update(ArrayIndex(Var('Elem', '42'), [Var('result', '43'), Var('e', '44'), Var('esize', '45')], '46'), ArrayIndex(BinaryExpr('+', BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49'), Number(1), '50'), [SliceRange(Var('esize', '51'), Number(1), '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='URHADD Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_halving_rounding'),
    'vrhaddq_u8': ARMSema(intrin='vrhaddq_u8', inst='URHADD', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('element2', '20')], ('integer', Number(64)), '21'), For(Var('e', '54'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element1', '24'), Call('Int', [ArrayIndex(Var('Elem', '26'), [Var('operand1', '27'), Var('e', '28'), Var('esize', '29')], '30'), Var('unsigned', '31')], '32')), Update(Var('element2', '33'), Call('Int', [ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39'), Var('unsigned', '40')], '41')), Update(ArrayIndex(Var('Elem', '42'), [Var('result', '43'), Var('e', '44'), Var('esize', '45')], '46'), ArrayIndex(BinaryExpr('+', BinaryExpr('+', Var('element1', '47'), Var('element2', '48'), '49'), Number(1), '50'), [SliceRange(Var('esize', '51'), Number(1), '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='URHADD Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_halving_rounding'),
    'vrshl_s16': ARMSema(intrin='vrshl_s16', inst='SRSHL', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SRSHL Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': False, 'rounding': True, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vrshl_s32': ARMSema(intrin='vrshl_s32', inst='SRSHL', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SRSHL Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': False, 'rounding': True, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vrshl_s64': ARMSema(intrin='vrshl_s64', inst='SRSHL', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int64x1_t', ret_is_signed=True, inst_form='SRSHL Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False, 'rounding': True, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vrshl_s8': ARMSema(intrin='vrshl_s8', inst='SRSHL', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SRSHL Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': False, 'rounding': True, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vrshl_u16': ARMSema(intrin='vrshl_u16', inst='URSHL', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='URSHL Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': True, 'rounding': True, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vrshl_u32': ARMSema(intrin='vrshl_u32', inst='URSHL', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='URSHL Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': True, 'rounding': True, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vrshl_u64': ARMSema(intrin='vrshl_u64', inst='URSHL', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='URSHL Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True, 'rounding': True, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vrshl_u8': ARMSema(intrin='vrshl_u8', inst='URSHL', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='URSHL Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': True, 'rounding': True, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vrshld_s64': ARMSema(intrin='vrshld_s64', inst='SRSHL', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int64_t', ret_is_signed=True, inst_form='SRSHL Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False, 'rounding': True, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vrshld_u64': ARMSema(intrin='vrshld_u64', inst='URSHL', params=[Parameter(name='a', type='uint64_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint64_t', ret_is_signed=False, inst_form='URSHL Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True, 'rounding': True, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vrshlq_s16': ARMSema(intrin='vrshlq_s16', inst='SRSHL', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SRSHL Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': False, 'rounding': True, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vrshlq_s32': ARMSema(intrin='vrshlq_s32', inst='SRSHL', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SRSHL Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': False, 'rounding': True, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vrshlq_s64': ARMSema(intrin='vrshlq_s64', inst='SRSHL', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SRSHL Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': False, 'rounding': True, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vrshlq_s8': ARMSema(intrin='vrshlq_s8', inst='SRSHL', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SRSHL Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': False, 'rounding': True, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vrshlq_u16': ARMSema(intrin='vrshlq_u16', inst='URSHL', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='URSHL Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': True, 'rounding': True, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vrshlq_u32': ARMSema(intrin='vrshlq_u32', inst='URSHL', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='URSHL Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': True, 'rounding': True, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vrshlq_u64': ARMSema(intrin='vrshlq_u64', inst='URSHL', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='URSHL Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': True, 'rounding': True, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vrshlq_u8': ARMSema(intrin='vrshlq_u8', inst='URSHL', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='URSHL Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': True, 'rounding': True, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vrshr_n_s16': ARMSema(intrin='vrshr_n_s16', inst='SRSHR', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SRSHR Vd.4H,Vn.4H,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': False, 'round': True, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrshr_n_s32': ARMSema(intrin='vrshr_n_s32', inst='SRSHR', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SRSHR Vd.2S,Vn.2S,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': False, 'round': True, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrshr_n_s64': ARMSema(intrin='vrshr_n_s64', inst='SRSHR', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int64x1_t', ret_is_signed=True, inst_form='SRSHR Dd,Dn,#n', extensions=None, imm_width=(1, 64), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False, 'round': True, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_sisd'),
    'vrshr_n_s8': ARMSema(intrin='vrshr_n_s8', inst='SRSHR', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SRSHR Vd.8B,Vn.8B,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': False, 'round': True, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrshr_n_u16': ARMSema(intrin='vrshr_n_u16', inst='URSHR', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='URSHR Vd.4H,Vn.4H,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': True, 'round': True, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrshr_n_u32': ARMSema(intrin='vrshr_n_u32', inst='URSHR', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='URSHR Vd.2S,Vn.2S,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': True, 'round': True, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrshr_n_u64': ARMSema(intrin='vrshr_n_u64', inst='URSHR', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='URSHR Dd,Dn,#n', extensions=None, imm_width=(1, 64), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True, 'round': True, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_sisd'),
    'vrshr_n_u8': ARMSema(intrin='vrshr_n_u8', inst='URSHR', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='URSHR Vd.8B,Vn.8B,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': True, 'round': True, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrshrd_n_s64': ARMSema(intrin='vrshrd_n_s64', inst='SRSHR', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int64_t', ret_is_signed=True, inst_form='SRSHR Dd,Dn,#n', extensions=None, imm_width=(1, 64), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False, 'round': True, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_sisd'),
    'vrshrd_n_u64': ARMSema(intrin='vrshrd_n_u64', inst='URSHR', params=[Parameter(name='a', type='uint64_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint64_t', ret_is_signed=False, inst_form='URSHR Dd,Dn,#n', extensions=None, imm_width=(1, 64), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True, 'round': True, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_sisd'),
    'vrshrn_high_n_s16': ARMSema(intrin='vrshrn_high_n_s16', inst='RSHRN2', params=[Parameter(name='r', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), For(Var('e', '47'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element', '24'), BinaryExpr('>>', BinaryExpr('+', Call('UInt', [ArrayIndex(Var('Elem', '26'), [Var('operand', '27'), Var('e', '28'), BinaryExpr('*', Number(2), Var('esize', '29'), '30')], '31')], '32'), Var('round_const', '33'), '34'), Var('shift', '35'), '36')), Update(ArrayIndex(Var('Elem', '37'), [Var('result', '38'), Var('e', '39'), Var('esize', '40')], '41'), ArrayIndex(Var('element', '42'), [SliceRange(BinaryExpr('-', Var('esize', '43'), Number(1), '44'), Number(0), '45')], '46'))], 1, '48'), Update(ArrayIndex(Var('Vpart', '49'), [Var('d', '50'), Var('part', '51')], '52'), Var('result', '53'))], rettype='int8x16_t', ret_is_signed=True, inst_form='RSHRN2 Vd.16B,Vn.8H,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'round': True}, belongs_to='aarch64_vector_shift_right_narrow_logical'),
    'vrshrn_high_n_s32': ARMSema(intrin='vrshrn_high_n_s32', inst='RSHRN2', params=[Parameter(name='r', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), For(Var('e', '47'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element', '24'), BinaryExpr('>>', BinaryExpr('+', Call('UInt', [ArrayIndex(Var('Elem', '26'), [Var('operand', '27'), Var('e', '28'), BinaryExpr('*', Number(2), Var('esize', '29'), '30')], '31')], '32'), Var('round_const', '33'), '34'), Var('shift', '35'), '36')), Update(ArrayIndex(Var('Elem', '37'), [Var('result', '38'), Var('e', '39'), Var('esize', '40')], '41'), ArrayIndex(Var('element', '42'), [SliceRange(BinaryExpr('-', Var('esize', '43'), Number(1), '44'), Number(0), '45')], '46'))], 1, '48'), Update(ArrayIndex(Var('Vpart', '49'), [Var('d', '50'), Var('part', '51')], '52'), Var('result', '53'))], rettype='int16x8_t', ret_is_signed=True, inst_form='RSHRN2 Vd.8H,Vn.4S,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'round': True}, belongs_to='aarch64_vector_shift_right_narrow_logical'),
    'vrshrn_high_n_s64': ARMSema(intrin='vrshrn_high_n_s64', inst='RSHRN2', params=[Parameter(name='r', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), For(Var('e', '47'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element', '24'), BinaryExpr('>>', BinaryExpr('+', Call('UInt', [ArrayIndex(Var('Elem', '26'), [Var('operand', '27'), Var('e', '28'), BinaryExpr('*', Number(2), Var('esize', '29'), '30')], '31')], '32'), Var('round_const', '33'), '34'), Var('shift', '35'), '36')), Update(ArrayIndex(Var('Elem', '37'), [Var('result', '38'), Var('e', '39'), Var('esize', '40')], '41'), ArrayIndex(Var('element', '42'), [SliceRange(BinaryExpr('-', Var('esize', '43'), Number(1), '44'), Number(0), '45')], '46'))], 1, '48'), Update(ArrayIndex(Var('Vpart', '49'), [Var('d', '50'), Var('part', '51')], '52'), Var('result', '53'))], rettype='int32x4_t', ret_is_signed=True, inst_form='RSHRN2 Vd.4S,Vn.2D,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'round': True}, belongs_to='aarch64_vector_shift_right_narrow_logical'),
    'vrshrn_high_n_u16': ARMSema(intrin='vrshrn_high_n_u16', inst='RSHRN2', params=[Parameter(name='r', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), For(Var('e', '47'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element', '24'), BinaryExpr('>>', BinaryExpr('+', Call('UInt', [ArrayIndex(Var('Elem', '26'), [Var('operand', '27'), Var('e', '28'), BinaryExpr('*', Number(2), Var('esize', '29'), '30')], '31')], '32'), Var('round_const', '33'), '34'), Var('shift', '35'), '36')), Update(ArrayIndex(Var('Elem', '37'), [Var('result', '38'), Var('e', '39'), Var('esize', '40')], '41'), ArrayIndex(Var('element', '42'), [SliceRange(BinaryExpr('-', Var('esize', '43'), Number(1), '44'), Number(0), '45')], '46'))], 1, '48'), Update(ArrayIndex(Var('Vpart', '49'), [Var('d', '50'), Var('part', '51')], '52'), Var('result', '53'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='RSHRN2 Vd.16B,Vn.8H,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'round': True}, belongs_to='aarch64_vector_shift_right_narrow_logical'),
    'vrshrn_high_n_u32': ARMSema(intrin='vrshrn_high_n_u32', inst='RSHRN2', params=[Parameter(name='r', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), For(Var('e', '47'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element', '24'), BinaryExpr('>>', BinaryExpr('+', Call('UInt', [ArrayIndex(Var('Elem', '26'), [Var('operand', '27'), Var('e', '28'), BinaryExpr('*', Number(2), Var('esize', '29'), '30')], '31')], '32'), Var('round_const', '33'), '34'), Var('shift', '35'), '36')), Update(ArrayIndex(Var('Elem', '37'), [Var('result', '38'), Var('e', '39'), Var('esize', '40')], '41'), ArrayIndex(Var('element', '42'), [SliceRange(BinaryExpr('-', Var('esize', '43'), Number(1), '44'), Number(0), '45')], '46'))], 1, '48'), Update(ArrayIndex(Var('Vpart', '49'), [Var('d', '50'), Var('part', '51')], '52'), Var('result', '53'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='RSHRN2 Vd.8H,Vn.4S,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'round': True}, belongs_to='aarch64_vector_shift_right_narrow_logical'),
    'vrshrn_high_n_u64': ARMSema(intrin='vrshrn_high_n_u64', inst='RSHRN2', params=[Parameter(name='r', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), For(Var('e', '47'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element', '24'), BinaryExpr('>>', BinaryExpr('+', Call('UInt', [ArrayIndex(Var('Elem', '26'), [Var('operand', '27'), Var('e', '28'), BinaryExpr('*', Number(2), Var('esize', '29'), '30')], '31')], '32'), Var('round_const', '33'), '34'), Var('shift', '35'), '36')), Update(ArrayIndex(Var('Elem', '37'), [Var('result', '38'), Var('e', '39'), Var('esize', '40')], '41'), ArrayIndex(Var('element', '42'), [SliceRange(BinaryExpr('-', Var('esize', '43'), Number(1), '44'), Number(0), '45')], '46'))], 1, '48'), Update(ArrayIndex(Var('Vpart', '49'), [Var('d', '50'), Var('part', '51')], '52'), Var('result', '53'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='RSHRN2 Vd.4S,Vn.2D,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'round': True}, belongs_to='aarch64_vector_shift_right_narrow_logical'),
    'vrshrn_n_s16': ARMSema(intrin='vrshrn_n_s16', inst='RSHRN', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), For(Var('e', '47'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element', '24'), BinaryExpr('>>', BinaryExpr('+', Call('UInt', [ArrayIndex(Var('Elem', '26'), [Var('operand', '27'), Var('e', '28'), BinaryExpr('*', Number(2), Var('esize', '29'), '30')], '31')], '32'), Var('round_const', '33'), '34'), Var('shift', '35'), '36')), Update(ArrayIndex(Var('Elem', '37'), [Var('result', '38'), Var('e', '39'), Var('esize', '40')], '41'), ArrayIndex(Var('element', '42'), [SliceRange(BinaryExpr('-', Var('esize', '43'), Number(1), '44'), Number(0), '45')], '46'))], 1, '48'), Update(ArrayIndex(Var('Vpart', '49'), [Var('d', '50'), Var('part', '51')], '52'), Var('result', '53'))], rettype='int8x8_t', ret_is_signed=True, inst_form='RSHRN Vd.8B,Vn.8H,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'round': True}, belongs_to='aarch64_vector_shift_right_narrow_logical'),
    'vrshrn_n_s32': ARMSema(intrin='vrshrn_n_s32', inst='RSHRN', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), For(Var('e', '47'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element', '24'), BinaryExpr('>>', BinaryExpr('+', Call('UInt', [ArrayIndex(Var('Elem', '26'), [Var('operand', '27'), Var('e', '28'), BinaryExpr('*', Number(2), Var('esize', '29'), '30')], '31')], '32'), Var('round_const', '33'), '34'), Var('shift', '35'), '36')), Update(ArrayIndex(Var('Elem', '37'), [Var('result', '38'), Var('e', '39'), Var('esize', '40')], '41'), ArrayIndex(Var('element', '42'), [SliceRange(BinaryExpr('-', Var('esize', '43'), Number(1), '44'), Number(0), '45')], '46'))], 1, '48'), Update(ArrayIndex(Var('Vpart', '49'), [Var('d', '50'), Var('part', '51')], '52'), Var('result', '53'))], rettype='int16x4_t', ret_is_signed=True, inst_form='RSHRN Vd.4H,Vn.4S,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'round': True}, belongs_to='aarch64_vector_shift_right_narrow_logical'),
    'vrshrn_n_s64': ARMSema(intrin='vrshrn_n_s64', inst='RSHRN', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), For(Var('e', '47'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element', '24'), BinaryExpr('>>', BinaryExpr('+', Call('UInt', [ArrayIndex(Var('Elem', '26'), [Var('operand', '27'), Var('e', '28'), BinaryExpr('*', Number(2), Var('esize', '29'), '30')], '31')], '32'), Var('round_const', '33'), '34'), Var('shift', '35'), '36')), Update(ArrayIndex(Var('Elem', '37'), [Var('result', '38'), Var('e', '39'), Var('esize', '40')], '41'), ArrayIndex(Var('element', '42'), [SliceRange(BinaryExpr('-', Var('esize', '43'), Number(1), '44'), Number(0), '45')], '46'))], 1, '48'), Update(ArrayIndex(Var('Vpart', '49'), [Var('d', '50'), Var('part', '51')], '52'), Var('result', '53'))], rettype='int32x2_t', ret_is_signed=True, inst_form='RSHRN Vd.2S,Vn.2D,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'round': True}, belongs_to='aarch64_vector_shift_right_narrow_logical'),
    'vrshrn_n_u16': ARMSema(intrin='vrshrn_n_u16', inst='RSHRN', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), For(Var('e', '47'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element', '24'), BinaryExpr('>>', BinaryExpr('+', Call('UInt', [ArrayIndex(Var('Elem', '26'), [Var('operand', '27'), Var('e', '28'), BinaryExpr('*', Number(2), Var('esize', '29'), '30')], '31')], '32'), Var('round_const', '33'), '34'), Var('shift', '35'), '36')), Update(ArrayIndex(Var('Elem', '37'), [Var('result', '38'), Var('e', '39'), Var('esize', '40')], '41'), ArrayIndex(Var('element', '42'), [SliceRange(BinaryExpr('-', Var('esize', '43'), Number(1), '44'), Number(0), '45')], '46'))], 1, '48'), Update(ArrayIndex(Var('Vpart', '49'), [Var('d', '50'), Var('part', '51')], '52'), Var('result', '53'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='RSHRN Vd.8B,Vn.8H,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'round': True}, belongs_to='aarch64_vector_shift_right_narrow_logical'),
    'vrshrn_n_u32': ARMSema(intrin='vrshrn_n_u32', inst='RSHRN', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), For(Var('e', '47'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element', '24'), BinaryExpr('>>', BinaryExpr('+', Call('UInt', [ArrayIndex(Var('Elem', '26'), [Var('operand', '27'), Var('e', '28'), BinaryExpr('*', Number(2), Var('esize', '29'), '30')], '31')], '32'), Var('round_const', '33'), '34'), Var('shift', '35'), '36')), Update(ArrayIndex(Var('Elem', '37'), [Var('result', '38'), Var('e', '39'), Var('esize', '40')], '41'), ArrayIndex(Var('element', '42'), [SliceRange(BinaryExpr('-', Var('esize', '43'), Number(1), '44'), Number(0), '45')], '46'))], 1, '48'), Update(ArrayIndex(Var('Vpart', '49'), [Var('d', '50'), Var('part', '51')], '52'), Var('result', '53'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='RSHRN Vd.4H,Vn.4S,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'round': True}, belongs_to='aarch64_vector_shift_right_narrow_logical'),
    'vrshrn_n_u64': ARMSema(intrin='vrshrn_n_u64', inst='RSHRN', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), For(Var('e', '47'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element', '24'), BinaryExpr('>>', BinaryExpr('+', Call('UInt', [ArrayIndex(Var('Elem', '26'), [Var('operand', '27'), Var('e', '28'), BinaryExpr('*', Number(2), Var('esize', '29'), '30')], '31')], '32'), Var('round_const', '33'), '34'), Var('shift', '35'), '36')), Update(ArrayIndex(Var('Elem', '37'), [Var('result', '38'), Var('e', '39'), Var('esize', '40')], '41'), ArrayIndex(Var('element', '42'), [SliceRange(BinaryExpr('-', Var('esize', '43'), Number(1), '44'), Number(0), '45')], '46'))], 1, '48'), Update(ArrayIndex(Var('Vpart', '49'), [Var('d', '50'), Var('part', '51')], '52'), Var('result', '53'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='RSHRN Vd.2S,Vn.2D,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'round': True}, belongs_to='aarch64_vector_shift_right_narrow_logical'),
    'vrshrq_n_s16': ARMSema(intrin='vrshrq_n_s16', inst='SRSHR', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SRSHR Vd.8H,Vn.8H,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': False, 'round': True, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrshrq_n_s32': ARMSema(intrin='vrshrq_n_s32', inst='SRSHR', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SRSHR Vd.4S,Vn.4S,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': False, 'round': True, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrshrq_n_s64': ARMSema(intrin='vrshrq_n_s64', inst='SRSHR', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SRSHR Vd.2D,Vn.2D,#n', extensions=None, imm_width=(1, 64), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': False, 'round': True, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrshrq_n_s8': ARMSema(intrin='vrshrq_n_s8', inst='SRSHR', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SRSHR Vd.16B,Vn.16B,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': False, 'round': True, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrshrq_n_u16': ARMSema(intrin='vrshrq_n_u16', inst='URSHR', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='URSHR Vd.8H,Vn.8H,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': True, 'round': True, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrshrq_n_u32': ARMSema(intrin='vrshrq_n_u32', inst='URSHR', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='URSHR Vd.4S,Vn.4S,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': True, 'round': True, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrshrq_n_u64': ARMSema(intrin='vrshrq_n_u64', inst='URSHR', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='URSHR Vd.2D,Vn.2D,#n', extensions=None, imm_width=(1, 64), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': True, 'round': True, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrshrq_n_u8': ARMSema(intrin='vrshrq_n_u8', inst='URSHR', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='URSHR Vd.16B,Vn.16B,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': True, 'round': True, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrsra_n_s16': ARMSema(intrin='vrsra_n_s16', inst='SRSRA', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SRSRA Vd.4H,Vn.4H,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': False, 'round': True, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrsra_n_s32': ARMSema(intrin='vrsra_n_s32', inst='SRSRA', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SRSRA Vd.2S,Vn.2S,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': False, 'round': True, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrsra_n_s64': ARMSema(intrin='vrsra_n_s64', inst='SRSRA', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int64x1_t', ret_is_signed=True, inst_form='SRSRA Dd,Dn,#n', extensions=None, imm_width=(1, 64), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False, 'round': True, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_sisd'),
    'vrsra_n_s8': ARMSema(intrin='vrsra_n_s8', inst='SRSRA', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SRSRA Vd.8B,Vn.8B,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': False, 'round': True, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrsra_n_u16': ARMSema(intrin='vrsra_n_u16', inst='URSRA', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='URSRA Vd.4H,Vn.4H,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': True, 'round': True, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrsra_n_u32': ARMSema(intrin='vrsra_n_u32', inst='URSRA', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='URSRA Vd.2S,Vn.2S,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': True, 'round': True, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrsra_n_u64': ARMSema(intrin='vrsra_n_u64', inst='URSRA', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='URSRA Dd,Dn,#n', extensions=None, imm_width=(1, 64), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True, 'round': True, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_sisd'),
    'vrsra_n_u8': ARMSema(intrin='vrsra_n_u8', inst='URSRA', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='URSRA Vd.8B,Vn.8B,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': True, 'round': True, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrsrad_n_s64': ARMSema(intrin='vrsrad_n_s64', inst='SRSRA', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int64_t', ret_is_signed=True, inst_form='SRSRA Dd,Dn,#n', extensions=None, imm_width=(1, 64), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False, 'round': True, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_sisd'),
    'vrsrad_n_u64': ARMSema(intrin='vrsrad_n_u64', inst='URSRA', params=[Parameter(name='a', type='uint64_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint64_t', ret_is_signed=False, inst_form='URSRA Dd,Dn,#n', extensions=None, imm_width=(1, 64), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True, 'round': True, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_sisd'),
    'vrsraq_n_s16': ARMSema(intrin='vrsraq_n_s16', inst='SRSRA', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SRSRA Vd.8H,Vn.8H,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': False, 'round': True, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrsraq_n_s32': ARMSema(intrin='vrsraq_n_s32', inst='SRSRA', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SRSRA Vd.4S,Vn.4S,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': False, 'round': True, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrsraq_n_s64': ARMSema(intrin='vrsraq_n_s64', inst='SRSRA', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SRSRA Vd.2D,Vn.2D,#n', extensions=None, imm_width=(1, 64), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': False, 'round': True, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrsraq_n_s8': ARMSema(intrin='vrsraq_n_s8', inst='SRSRA', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SRSRA Vd.16B,Vn.16B,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': False, 'round': True, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrsraq_n_u16': ARMSema(intrin='vrsraq_n_u16', inst='URSRA', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='URSRA Vd.8H,Vn.8H,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': True, 'round': True, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrsraq_n_u32': ARMSema(intrin='vrsraq_n_u32', inst='URSRA', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='URSRA Vd.4S,Vn.4S,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': True, 'round': True, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrsraq_n_u64': ARMSema(intrin='vrsraq_n_u64', inst='URSRA', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='URSRA Vd.2D,Vn.2D,#n', extensions=None, imm_width=(1, 64), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': True, 'round': True, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrsraq_n_u8': ARMSema(intrin='vrsraq_n_u8', inst='URSRA', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='URSRA Vd.16B,Vn.16B,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': True, 'round': True, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vrsubhn_high_s16': ARMSema(intrin='vrsubhn_high_s16', inst='RSUBHN2', params=[Parameter(name='r', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='int8x16_t', ret_is_signed=True, inst_form='RSUBHN2 Vd.16B,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'sub_op': True, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vrsubhn_high_s32': ARMSema(intrin='vrsubhn_high_s32', inst='RSUBHN2', params=[Parameter(name='r', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='int16x8_t', ret_is_signed=True, inst_form='RSUBHN2 Vd.8H,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'sub_op': True, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vrsubhn_high_s64': ARMSema(intrin='vrsubhn_high_s64', inst='RSUBHN2', params=[Parameter(name='r', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='int32x4_t', ret_is_signed=True, inst_form='RSUBHN2 Vd.4S,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'sub_op': True, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vrsubhn_high_u16': ARMSema(intrin='vrsubhn_high_u16', inst='RSUBHN2', params=[Parameter(name='r', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='RSUBHN2 Vd.16B,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'sub_op': True, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vrsubhn_high_u32': ARMSema(intrin='vrsubhn_high_u32', inst='RSUBHN2', params=[Parameter(name='r', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='RSUBHN2 Vd.8H,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'sub_op': True, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vrsubhn_high_u64': ARMSema(intrin='vrsubhn_high_u64', inst='RSUBHN2', params=[Parameter(name='r', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='RSUBHN2 Vd.4S,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'sub_op': True, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vrsubhn_s16': ARMSema(intrin='vrsubhn_s16', inst='RSUBHN', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='int8x8_t', ret_is_signed=True, inst_form='RSUBHN Vd.8B,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'sub_op': True, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vrsubhn_s32': ARMSema(intrin='vrsubhn_s32', inst='RSUBHN', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='int16x4_t', ret_is_signed=True, inst_form='RSUBHN Vd.4H,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'sub_op': True, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vrsubhn_s64': ARMSema(intrin='vrsubhn_s64', inst='RSUBHN', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='int32x2_t', ret_is_signed=True, inst_form='RSUBHN Vd.2S,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'sub_op': True, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vrsubhn_u16': ARMSema(intrin='vrsubhn_u16', inst='RSUBHN', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='RSUBHN Vd.8B,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'sub_op': True, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vrsubhn_u32': ARMSema(intrin='vrsubhn_u32', inst='RSUBHN', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='RSUBHN Vd.4H,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'sub_op': True, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vrsubhn_u64': ARMSema(intrin='vrsubhn_u64', inst='RSUBHN', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='RSUBHN Vd.2S,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'sub_op': True, 'round': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vshl_s16': ARMSema(intrin='vshl_s16', inst='SSHL', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SSHL Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': False, 'rounding': False, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vshl_s32': ARMSema(intrin='vshl_s32', inst='SSHL', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SSHL Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': False, 'rounding': False, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vshl_s64': ARMSema(intrin='vshl_s64', inst='SSHL', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int64x1_t', ret_is_signed=True, inst_form='SSHL Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False, 'rounding': False, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vshl_s8': ARMSema(intrin='vshl_s8', inst='SSHL', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SSHL Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': False, 'rounding': False, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vshl_u16': ARMSema(intrin='vshl_u16', inst='USHL', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='USHL Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': True, 'rounding': False, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vshl_u32': ARMSema(intrin='vshl_u32', inst='USHL', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='USHL Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': True, 'rounding': False, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vshl_u64': ARMSema(intrin='vshl_u64', inst='USHL', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='USHL Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True, 'rounding': False, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vshl_u8': ARMSema(intrin='vshl_u8', inst='USHL', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='USHL Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': True, 'rounding': False, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vshld_s64': ARMSema(intrin='vshld_s64', inst='SSHL', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int64_t', ret_is_signed=True, inst_form='SSHL Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False, 'rounding': False, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vshld_u64': ARMSema(intrin='vshld_u64', inst='USHL', params=[Parameter(name='a', type='uint64_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint64_t', ret_is_signed=False, inst_form='USHL Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True, 'rounding': False, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_sisd'),
    'vshll_high_n_s16': ARMSema(intrin='vshll_high_n_s16', inst='SSHLL2', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarsDecl([Var('result', '11')], ('bits', BinaryExpr('*', Var('datasize', '9'), Number(2), '10')), '12'), VarsDecl([Var('element', '13')], ('integer', Number(64)), '14'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), ArrayIndex(Var('element', '34'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '35'), '36'), Number(1), '37'), Number(0), '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('V', '42'), [Var('d', '43')], '44'), Var('result', '45'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SSHLL2 Vd.4S,Vn.8H,#n', extensions=None, imm_width=(0, 15), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'unsigned': False}, belongs_to='aarch64_vector_shift_left_long'),
    'vshll_high_n_s32': ARMSema(intrin='vshll_high_n_s32', inst='SSHLL2', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarsDecl([Var('result', '11')], ('bits', BinaryExpr('*', Var('datasize', '9'), Number(2), '10')), '12'), VarsDecl([Var('element', '13')], ('integer', Number(64)), '14'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), ArrayIndex(Var('element', '34'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '35'), '36'), Number(1), '37'), Number(0), '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('V', '42'), [Var('d', '43')], '44'), Var('result', '45'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SSHLL2 Vd.2D,Vn.4S,#n', extensions=None, imm_width=(0, 31), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'unsigned': False}, belongs_to='aarch64_vector_shift_left_long'),
    'vshll_high_n_s8': ARMSema(intrin='vshll_high_n_s8', inst='SSHLL2', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarsDecl([Var('result', '11')], ('bits', BinaryExpr('*', Var('datasize', '9'), Number(2), '10')), '12'), VarsDecl([Var('element', '13')], ('integer', Number(64)), '14'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), ArrayIndex(Var('element', '34'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '35'), '36'), Number(1), '37'), Number(0), '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('V', '42'), [Var('d', '43')], '44'), Var('result', '45'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SSHLL2 Vd.8H,Vn.16B,#n', extensions=None, imm_width=(0, 7), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'unsigned': False}, belongs_to='aarch64_vector_shift_left_long'),
    'vshll_high_n_u16': ARMSema(intrin='vshll_high_n_u16', inst='USHLL2', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarsDecl([Var('result', '11')], ('bits', BinaryExpr('*', Var('datasize', '9'), Number(2), '10')), '12'), VarsDecl([Var('element', '13')], ('integer', Number(64)), '14'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), ArrayIndex(Var('element', '34'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '35'), '36'), Number(1), '37'), Number(0), '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('V', '42'), [Var('d', '43')], '44'), Var('result', '45'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='USHLL2 Vd.4S,Vn.8H,#n', extensions=None, imm_width=(0, 15), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'unsigned': True}, belongs_to='aarch64_vector_shift_left_long'),
    'vshll_high_n_u32': ARMSema(intrin='vshll_high_n_u32', inst='USHLL2', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarsDecl([Var('result', '11')], ('bits', BinaryExpr('*', Var('datasize', '9'), Number(2), '10')), '12'), VarsDecl([Var('element', '13')], ('integer', Number(64)), '14'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), ArrayIndex(Var('element', '34'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '35'), '36'), Number(1), '37'), Number(0), '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('V', '42'), [Var('d', '43')], '44'), Var('result', '45'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='USHLL2 Vd.2D,Vn.4S,#n', extensions=None, imm_width=(0, 31), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'unsigned': True}, belongs_to='aarch64_vector_shift_left_long'),
    'vshll_high_n_u8': ARMSema(intrin='vshll_high_n_u8', inst='USHLL2', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarsDecl([Var('result', '11')], ('bits', BinaryExpr('*', Var('datasize', '9'), Number(2), '10')), '12'), VarsDecl([Var('element', '13')], ('integer', Number(64)), '14'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), ArrayIndex(Var('element', '34'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '35'), '36'), Number(1), '37'), Number(0), '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('V', '42'), [Var('d', '43')], '44'), Var('result', '45'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='USHLL2 Vd.8H,Vn.16B,#n', extensions=None, imm_width=(0, 7), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'unsigned': True}, belongs_to='aarch64_vector_shift_left_long'),
    'vshll_n_s16': ARMSema(intrin='vshll_n_s16', inst='SSHLL', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarsDecl([Var('result', '11')], ('bits', BinaryExpr('*', Var('datasize', '9'), Number(2), '10')), '12'), VarsDecl([Var('element', '13')], ('integer', Number(64)), '14'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), ArrayIndex(Var('element', '34'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '35'), '36'), Number(1), '37'), Number(0), '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('V', '42'), [Var('d', '43')], '44'), Var('result', '45'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SSHLL Vd.4S,Vn.4H,#n', extensions=None, imm_width=(0, 15), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'unsigned': False}, belongs_to='aarch64_vector_shift_left_long'),
    'vshll_n_s32': ARMSema(intrin='vshll_n_s32', inst='SSHLL', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarsDecl([Var('result', '11')], ('bits', BinaryExpr('*', Var('datasize', '9'), Number(2), '10')), '12'), VarsDecl([Var('element', '13')], ('integer', Number(64)), '14'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), ArrayIndex(Var('element', '34'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '35'), '36'), Number(1), '37'), Number(0), '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('V', '42'), [Var('d', '43')], '44'), Var('result', '45'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SSHLL Vd.2D,Vn.2S,#n', extensions=None, imm_width=(0, 31), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'unsigned': False}, belongs_to='aarch64_vector_shift_left_long'),
    'vshll_n_s8': ARMSema(intrin='vshll_n_s8', inst='SSHLL', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarsDecl([Var('result', '11')], ('bits', BinaryExpr('*', Var('datasize', '9'), Number(2), '10')), '12'), VarsDecl([Var('element', '13')], ('integer', Number(64)), '14'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), ArrayIndex(Var('element', '34'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '35'), '36'), Number(1), '37'), Number(0), '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('V', '42'), [Var('d', '43')], '44'), Var('result', '45'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SSHLL Vd.8H,Vn.8B,#n', extensions=None, imm_width=(0, 7), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'unsigned': False}, belongs_to='aarch64_vector_shift_left_long'),
    'vshll_n_u16': ARMSema(intrin='vshll_n_u16', inst='USHLL', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarsDecl([Var('result', '11')], ('bits', BinaryExpr('*', Var('datasize', '9'), Number(2), '10')), '12'), VarsDecl([Var('element', '13')], ('integer', Number(64)), '14'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), ArrayIndex(Var('element', '34'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '35'), '36'), Number(1), '37'), Number(0), '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('V', '42'), [Var('d', '43')], '44'), Var('result', '45'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='USHLL Vd.4S,Vn.4H,#n', extensions=None, imm_width=(0, 15), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'unsigned': True}, belongs_to='aarch64_vector_shift_left_long'),
    'vshll_n_u32': ARMSema(intrin='vshll_n_u32', inst='USHLL', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarsDecl([Var('result', '11')], ('bits', BinaryExpr('*', Var('datasize', '9'), Number(2), '10')), '12'), VarsDecl([Var('element', '13')], ('integer', Number(64)), '14'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), ArrayIndex(Var('element', '34'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '35'), '36'), Number(1), '37'), Number(0), '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('V', '42'), [Var('d', '43')], '44'), Var('result', '45'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='USHLL Vd.2D,Vn.2S,#n', extensions=None, imm_width=(0, 31), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'unsigned': True}, belongs_to='aarch64_vector_shift_left_long'),
    'vshll_n_u8': ARMSema(intrin='vshll_n_u8', inst='USHLL', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarsDecl([Var('result', '11')], ('bits', BinaryExpr('*', Var('datasize', '9'), Number(2), '10')), '12'), VarsDecl([Var('element', '13')], ('integer', Number(64)), '14'), For(Var('e', '40'), Number(0), BinaryExpr('-', Var('elements', '15'), Number(1), '16'), [Update(Var('element', '17'), BinaryExpr('<<', Call('Int', [ArrayIndex(Var('Elem', '19'), [Var('operand', '20'), Var('e', '21'), Var('esize', '22')], '23'), Var('unsigned', '24')], '25'), Var('shift', '26'), '27')), Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), BinaryExpr('*', Number(2), Var('esize', '31'), '32')], '33'), ArrayIndex(Var('element', '34'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '35'), '36'), Number(1), '37'), Number(0), '38')], '39'))], 1, '41'), Update(ArrayIndex(Var('V', '42'), [Var('d', '43')], '44'), Var('result', '45'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='USHLL Vd.8H,Vn.8B,#n', extensions=None, imm_width=(0, 7), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'unsigned': True}, belongs_to='aarch64_vector_shift_left_long'),
    'vshlq_s16': ARMSema(intrin='vshlq_s16', inst='SSHL', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SSHL Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': False, 'rounding': False, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vshlq_s32': ARMSema(intrin='vshlq_s32', inst='SSHL', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SSHL Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': False, 'rounding': False, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vshlq_s64': ARMSema(intrin='vshlq_s64', inst='SSHL', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SSHL Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': False, 'rounding': False, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vshlq_s8': ARMSema(intrin='vshlq_s8', inst='SSHL', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SSHL Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': False, 'rounding': False, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vshlq_u16': ARMSema(intrin='vshlq_u16', inst='USHL', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='USHL Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': True, 'rounding': False, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vshlq_u32': ARMSema(intrin='vshlq_u32', inst='USHL', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='USHL Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': True, 'rounding': False, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vshlq_u64': ARMSema(intrin='vshlq_u64', inst='USHL', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='USHL Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': True, 'rounding': False, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vshlq_u8': ARMSema(intrin='vshlq_u8', inst='USHL', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('round_const', '18')], ('integer', Number(64)), '19'), Number(0), '20'), VarsDecl([Var('shift', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sat', '25')], ('boolean', Number(1)), '26'), For(Var('e', '79'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('shift', '29'), Call('SInt', [ArrayIndex(Var('Elem', '31'), [Var('operand2', '32'), Var('e', '33'), Var('esize', '34')], '35')], '36')), If(Var('rounding', '37'), [Update(Var('round_const', '38'), BinaryExpr('<<', Number(1), BinaryExpr('-', UnaryExpr('-', Var('shift', '39'), '40'), Number(1), '41'), '42'))], '43'), Update(Var('element', '44'), BinaryExpr('<<', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '46'), [Var('operand1', '47'), Var('e', '48'), Var('esize', '49')], '50'), Var('unsigned', '51')], '52'), Var('round_const', '53'), '54'), Var('shift', '55'), '56')), IfElse(Var('saturating', '57'), [Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), Var('esize', '61')], '62'), Call('SatQ', [Var('element', '64'), Var('esize', '65'), Var('unsigned', '66')], '67'))], [Update(ArrayIndex(Var('Elem', '68'), [Var('result', '69'), Var('e', '70'), Var('esize', '71')], '72'), ArrayIndex(Var('element', '73'), [SliceRange(BinaryExpr('-', Var('esize', '74'), Number(1), '75'), Number(0), '76')], '77'))], '78')], 1, '80'), Update(ArrayIndex(Var('V', '81'), [Var('d', '82')], '83'), Var('result', '84'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='USHL Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': True, 'rounding': False, 'saturating': False}, belongs_to='aarch64_vector_arithmetic_binary_uniform_shift_simd'),
    'vshr_n_s16': ARMSema(intrin='vshr_n_s16', inst='SSHR', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SSHR Vd.4H,Vn.4H,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': False, 'round': False, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vshr_n_s32': ARMSema(intrin='vshr_n_s32', inst='SSHR', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SSHR Vd.2S,Vn.2S,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': False, 'round': False, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vshr_n_s64': ARMSema(intrin='vshr_n_s64', inst='SSHR', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int64x1_t', ret_is_signed=True, inst_form='SSHR Dd,Dn,#n', extensions=None, imm_width=(1, 64), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False, 'round': False, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_sisd'),
    'vshr_n_s8': ARMSema(intrin='vshr_n_s8', inst='SSHR', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SSHR Vd.8B,Vn.8B,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': False, 'round': False, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vshr_n_u16': ARMSema(intrin='vshr_n_u16', inst='USHR', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='USHR Vd.4H,Vn.4H,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': True, 'round': False, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vshr_n_u32': ARMSema(intrin='vshr_n_u32', inst='USHR', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='USHR Vd.2S,Vn.2S,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': True, 'round': False, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vshr_n_u64': ARMSema(intrin='vshr_n_u64', inst='USHR', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='USHR Dd,Dn,#n', extensions=None, imm_width=(1, 64), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True, 'round': False, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_sisd'),
    'vshr_n_u8': ARMSema(intrin='vshr_n_u8', inst='USHR', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='USHR Vd.8B,Vn.8B,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': True, 'round': False, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vshrd_n_s64': ARMSema(intrin='vshrd_n_s64', inst='SSHR', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int64_t', ret_is_signed=True, inst_form='SSHR Dd,Dn,#n', extensions=None, imm_width=(1, 64), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False, 'round': False, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_sisd'),
    'vshrd_n_u64': ARMSema(intrin='vshrd_n_u64', inst='USHR', params=[Parameter(name='a', type='uint64_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint64_t', ret_is_signed=False, inst_form='USHR Dd,Dn,#n', extensions=None, imm_width=(1, 64), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True, 'round': False, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_sisd'),
    'vshrn_high_n_s16': ARMSema(intrin='vshrn_high_n_s16', inst='SHRN2', params=[Parameter(name='r', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), For(Var('e', '47'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element', '24'), BinaryExpr('>>', BinaryExpr('+', Call('UInt', [ArrayIndex(Var('Elem', '26'), [Var('operand', '27'), Var('e', '28'), BinaryExpr('*', Number(2), Var('esize', '29'), '30')], '31')], '32'), Var('round_const', '33'), '34'), Var('shift', '35'), '36')), Update(ArrayIndex(Var('Elem', '37'), [Var('result', '38'), Var('e', '39'), Var('esize', '40')], '41'), ArrayIndex(Var('element', '42'), [SliceRange(BinaryExpr('-', Var('esize', '43'), Number(1), '44'), Number(0), '45')], '46'))], 1, '48'), Update(ArrayIndex(Var('Vpart', '49'), [Var('d', '50'), Var('part', '51')], '52'), Var('result', '53'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SHRN2 Vd.16B,Vn.8H,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'round': False}, belongs_to='aarch64_vector_shift_right_narrow_logical'),
    'vshrn_high_n_s32': ARMSema(intrin='vshrn_high_n_s32', inst='SHRN2', params=[Parameter(name='r', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), For(Var('e', '47'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element', '24'), BinaryExpr('>>', BinaryExpr('+', Call('UInt', [ArrayIndex(Var('Elem', '26'), [Var('operand', '27'), Var('e', '28'), BinaryExpr('*', Number(2), Var('esize', '29'), '30')], '31')], '32'), Var('round_const', '33'), '34'), Var('shift', '35'), '36')), Update(ArrayIndex(Var('Elem', '37'), [Var('result', '38'), Var('e', '39'), Var('esize', '40')], '41'), ArrayIndex(Var('element', '42'), [SliceRange(BinaryExpr('-', Var('esize', '43'), Number(1), '44'), Number(0), '45')], '46'))], 1, '48'), Update(ArrayIndex(Var('Vpart', '49'), [Var('d', '50'), Var('part', '51')], '52'), Var('result', '53'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SHRN2 Vd.8H,Vn.4S,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'round': False}, belongs_to='aarch64_vector_shift_right_narrow_logical'),
    'vshrn_high_n_s64': ARMSema(intrin='vshrn_high_n_s64', inst='SHRN2', params=[Parameter(name='r', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), For(Var('e', '47'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element', '24'), BinaryExpr('>>', BinaryExpr('+', Call('UInt', [ArrayIndex(Var('Elem', '26'), [Var('operand', '27'), Var('e', '28'), BinaryExpr('*', Number(2), Var('esize', '29'), '30')], '31')], '32'), Var('round_const', '33'), '34'), Var('shift', '35'), '36')), Update(ArrayIndex(Var('Elem', '37'), [Var('result', '38'), Var('e', '39'), Var('esize', '40')], '41'), ArrayIndex(Var('element', '42'), [SliceRange(BinaryExpr('-', Var('esize', '43'), Number(1), '44'), Number(0), '45')], '46'))], 1, '48'), Update(ArrayIndex(Var('Vpart', '49'), [Var('d', '50'), Var('part', '51')], '52'), Var('result', '53'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SHRN2 Vd.4S,Vn.2D,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'round': False}, belongs_to='aarch64_vector_shift_right_narrow_logical'),
    'vshrn_high_n_u16': ARMSema(intrin='vshrn_high_n_u16', inst='SHRN2', params=[Parameter(name='r', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), For(Var('e', '47'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element', '24'), BinaryExpr('>>', BinaryExpr('+', Call('UInt', [ArrayIndex(Var('Elem', '26'), [Var('operand', '27'), Var('e', '28'), BinaryExpr('*', Number(2), Var('esize', '29'), '30')], '31')], '32'), Var('round_const', '33'), '34'), Var('shift', '35'), '36')), Update(ArrayIndex(Var('Elem', '37'), [Var('result', '38'), Var('e', '39'), Var('esize', '40')], '41'), ArrayIndex(Var('element', '42'), [SliceRange(BinaryExpr('-', Var('esize', '43'), Number(1), '44'), Number(0), '45')], '46'))], 1, '48'), Update(ArrayIndex(Var('Vpart', '49'), [Var('d', '50'), Var('part', '51')], '52'), Var('result', '53'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='SHRN2 Vd.16B,Vn.8H,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'round': False}, belongs_to='aarch64_vector_shift_right_narrow_logical'),
    'vshrn_high_n_u32': ARMSema(intrin='vshrn_high_n_u32', inst='SHRN2', params=[Parameter(name='r', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), For(Var('e', '47'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element', '24'), BinaryExpr('>>', BinaryExpr('+', Call('UInt', [ArrayIndex(Var('Elem', '26'), [Var('operand', '27'), Var('e', '28'), BinaryExpr('*', Number(2), Var('esize', '29'), '30')], '31')], '32'), Var('round_const', '33'), '34'), Var('shift', '35'), '36')), Update(ArrayIndex(Var('Elem', '37'), [Var('result', '38'), Var('e', '39'), Var('esize', '40')], '41'), ArrayIndex(Var('element', '42'), [SliceRange(BinaryExpr('-', Var('esize', '43'), Number(1), '44'), Number(0), '45')], '46'))], 1, '48'), Update(ArrayIndex(Var('Vpart', '49'), [Var('d', '50'), Var('part', '51')], '52'), Var('result', '53'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='SHRN2 Vd.8H,Vn.4S,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'round': False}, belongs_to='aarch64_vector_shift_right_narrow_logical'),
    'vshrn_high_n_u64': ARMSema(intrin='vshrn_high_n_u64', inst='SHRN2', params=[Parameter(name='r', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), For(Var('e', '47'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element', '24'), BinaryExpr('>>', BinaryExpr('+', Call('UInt', [ArrayIndex(Var('Elem', '26'), [Var('operand', '27'), Var('e', '28'), BinaryExpr('*', Number(2), Var('esize', '29'), '30')], '31')], '32'), Var('round_const', '33'), '34'), Var('shift', '35'), '36')), Update(ArrayIndex(Var('Elem', '37'), [Var('result', '38'), Var('e', '39'), Var('esize', '40')], '41'), ArrayIndex(Var('element', '42'), [SliceRange(BinaryExpr('-', Var('esize', '43'), Number(1), '44'), Number(0), '45')], '46'))], 1, '48'), Update(ArrayIndex(Var('Vpart', '49'), [Var('d', '50'), Var('part', '51')], '52'), Var('result', '53'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='SHRN2 Vd.4S,Vn.2D,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'round': False}, belongs_to='aarch64_vector_shift_right_narrow_logical'),
    'vshrn_n_s16': ARMSema(intrin='vshrn_n_s16', inst='SHRN', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), For(Var('e', '47'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element', '24'), BinaryExpr('>>', BinaryExpr('+', Call('UInt', [ArrayIndex(Var('Elem', '26'), [Var('operand', '27'), Var('e', '28'), BinaryExpr('*', Number(2), Var('esize', '29'), '30')], '31')], '32'), Var('round_const', '33'), '34'), Var('shift', '35'), '36')), Update(ArrayIndex(Var('Elem', '37'), [Var('result', '38'), Var('e', '39'), Var('esize', '40')], '41'), ArrayIndex(Var('element', '42'), [SliceRange(BinaryExpr('-', Var('esize', '43'), Number(1), '44'), Number(0), '45')], '46'))], 1, '48'), Update(ArrayIndex(Var('Vpart', '49'), [Var('d', '50'), Var('part', '51')], '52'), Var('result', '53'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SHRN Vd.8B,Vn.8H,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'round': False}, belongs_to='aarch64_vector_shift_right_narrow_logical'),
    'vshrn_n_s32': ARMSema(intrin='vshrn_n_s32', inst='SHRN', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), For(Var('e', '47'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element', '24'), BinaryExpr('>>', BinaryExpr('+', Call('UInt', [ArrayIndex(Var('Elem', '26'), [Var('operand', '27'), Var('e', '28'), BinaryExpr('*', Number(2), Var('esize', '29'), '30')], '31')], '32'), Var('round_const', '33'), '34'), Var('shift', '35'), '36')), Update(ArrayIndex(Var('Elem', '37'), [Var('result', '38'), Var('e', '39'), Var('esize', '40')], '41'), ArrayIndex(Var('element', '42'), [SliceRange(BinaryExpr('-', Var('esize', '43'), Number(1), '44'), Number(0), '45')], '46'))], 1, '48'), Update(ArrayIndex(Var('Vpart', '49'), [Var('d', '50'), Var('part', '51')], '52'), Var('result', '53'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SHRN Vd.4H,Vn.4S,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'round': False}, belongs_to='aarch64_vector_shift_right_narrow_logical'),
    'vshrn_n_s64': ARMSema(intrin='vshrn_n_s64', inst='SHRN', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), For(Var('e', '47'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element', '24'), BinaryExpr('>>', BinaryExpr('+', Call('UInt', [ArrayIndex(Var('Elem', '26'), [Var('operand', '27'), Var('e', '28'), BinaryExpr('*', Number(2), Var('esize', '29'), '30')], '31')], '32'), Var('round_const', '33'), '34'), Var('shift', '35'), '36')), Update(ArrayIndex(Var('Elem', '37'), [Var('result', '38'), Var('e', '39'), Var('esize', '40')], '41'), ArrayIndex(Var('element', '42'), [SliceRange(BinaryExpr('-', Var('esize', '43'), Number(1), '44'), Number(0), '45')], '46'))], 1, '48'), Update(ArrayIndex(Var('Vpart', '49'), [Var('d', '50'), Var('part', '51')], '52'), Var('result', '53'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SHRN Vd.2S,Vn.2D,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'round': False}, belongs_to='aarch64_vector_shift_right_narrow_logical'),
    'vshrn_n_u16': ARMSema(intrin='vshrn_n_u16', inst='SHRN', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), For(Var('e', '47'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element', '24'), BinaryExpr('>>', BinaryExpr('+', Call('UInt', [ArrayIndex(Var('Elem', '26'), [Var('operand', '27'), Var('e', '28'), BinaryExpr('*', Number(2), Var('esize', '29'), '30')], '31')], '32'), Var('round_const', '33'), '34'), Var('shift', '35'), '36')), Update(ArrayIndex(Var('Elem', '37'), [Var('result', '38'), Var('e', '39'), Var('esize', '40')], '41'), ArrayIndex(Var('element', '42'), [SliceRange(BinaryExpr('-', Var('esize', '43'), Number(1), '44'), Number(0), '45')], '46'))], 1, '48'), Update(ArrayIndex(Var('Vpart', '49'), [Var('d', '50'), Var('part', '51')], '52'), Var('result', '53'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='SHRN Vd.8B,Vn.8H,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'round': False}, belongs_to='aarch64_vector_shift_right_narrow_logical'),
    'vshrn_n_u32': ARMSema(intrin='vshrn_n_u32', inst='SHRN', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), For(Var('e', '47'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element', '24'), BinaryExpr('>>', BinaryExpr('+', Call('UInt', [ArrayIndex(Var('Elem', '26'), [Var('operand', '27'), Var('e', '28'), BinaryExpr('*', Number(2), Var('esize', '29'), '30')], '31')], '32'), Var('round_const', '33'), '34'), Var('shift', '35'), '36')), Update(ArrayIndex(Var('Elem', '37'), [Var('result', '38'), Var('e', '39'), Var('esize', '40')], '41'), ArrayIndex(Var('element', '42'), [SliceRange(BinaryExpr('-', Var('esize', '43'), Number(1), '44'), Number(0), '45')], '46'))], 1, '48'), Update(ArrayIndex(Var('Vpart', '49'), [Var('d', '50'), Var('part', '51')], '52'), Var('result', '53'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='SHRN Vd.4H,Vn.4S,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'round': False}, belongs_to='aarch64_vector_shift_right_narrow_logical'),
    'vshrn_n_u64': ARMSema(intrin='vshrn_n_u64', inst='SHRN', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '6')], ('bits', BinaryExpr('*', Var('datasize', '1'), Number(2), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarsDecl([Var('result', '10')], ('bits', Var('datasize', '9')), '11'), VarDeclInit(VarsDecl([Var('round_const', '17')], ('integer', Number(64)), '18'), IfElse(Var('round', '15'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '12'), Number(1), '13'), '14'), Number(0), '16'), '19'), VarsDecl([Var('element', '20')], ('integer', Number(64)), '21'), For(Var('e', '47'), Number(0), BinaryExpr('-', Var('elements', '22'), Number(1), '23'), [Update(Var('element', '24'), BinaryExpr('>>', BinaryExpr('+', Call('UInt', [ArrayIndex(Var('Elem', '26'), [Var('operand', '27'), Var('e', '28'), BinaryExpr('*', Number(2), Var('esize', '29'), '30')], '31')], '32'), Var('round_const', '33'), '34'), Var('shift', '35'), '36')), Update(ArrayIndex(Var('Elem', '37'), [Var('result', '38'), Var('e', '39'), Var('esize', '40')], '41'), ArrayIndex(Var('element', '42'), [SliceRange(BinaryExpr('-', Var('esize', '43'), Number(1), '44'), Number(0), '45')], '46'))], 1, '48'), Update(ArrayIndex(Var('Vpart', '49'), [Var('d', '50'), Var('part', '51')], '52'), Var('result', '53'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='SHRN Vd.2S,Vn.2D,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'round': False}, belongs_to='aarch64_vector_shift_right_narrow_logical'),
    'vshrq_n_s16': ARMSema(intrin='vshrq_n_s16', inst='SSHR', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SSHR Vd.8H,Vn.8H,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': False, 'round': False, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vshrq_n_s32': ARMSema(intrin='vshrq_n_s32', inst='SSHR', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SSHR Vd.4S,Vn.4S,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': False, 'round': False, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vshrq_n_s64': ARMSema(intrin='vshrq_n_s64', inst='SSHR', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SSHR Vd.2D,Vn.2D,#n', extensions=None, imm_width=(1, 64), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': False, 'round': False, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vshrq_n_s8': ARMSema(intrin='vshrq_n_s8', inst='SSHR', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SSHR Vd.16B,Vn.16B,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': False, 'round': False, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vshrq_n_u16': ARMSema(intrin='vshrq_n_u16', inst='USHR', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='USHR Vd.8H,Vn.8H,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': True, 'round': False, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vshrq_n_u32': ARMSema(intrin='vshrq_n_u32', inst='USHR', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='USHR Vd.4S,Vn.4S,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': True, 'round': False, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vshrq_n_u64': ARMSema(intrin='vshrq_n_u64', inst='USHR', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='USHR Vd.2D,Vn.2D,#n', extensions=None, imm_width=(1, 64), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': True, 'round': False, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vshrq_n_u8': ARMSema(intrin='vshrq_n_u8', inst='USHR', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='USHR Vd.16B,Vn.16B,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': True, 'round': False, 'accumulate': False}, belongs_to='aarch64_vector_shift_right_simd'),
    'vsqadd_u16': ARMSema(intrin='vsqadd_u16', inst='USQADD', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarDeclInit(VarsDecl([Var('operand2', '15')], ('bits', Var('datasize', '11')), '16'), ArrayIndex(Var('V', '12'), [Var('d', '13')], '14'), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('op1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), Var('esize', '31')], '32'), UnaryExpr('!', Var('unsigned', '33'), '34')], '35')), Update(Var('op2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), Var('esize', '48')], '49'), Call('SatQ', [BinaryExpr('+', Var('op1', '51'), Var('op2', '52'), '53'), Var('esize', '54'), Var('unsigned', '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='USQADD Vd.4H,Vn.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_add_saturating_simd'),
    'vsqadd_u32': ARMSema(intrin='vsqadd_u32', inst='USQADD', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarDeclInit(VarsDecl([Var('operand2', '15')], ('bits', Var('datasize', '11')), '16'), ArrayIndex(Var('V', '12'), [Var('d', '13')], '14'), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('op1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), Var('esize', '31')], '32'), UnaryExpr('!', Var('unsigned', '33'), '34')], '35')), Update(Var('op2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), Var('esize', '48')], '49'), Call('SatQ', [BinaryExpr('+', Var('op1', '51'), Var('op2', '52'), '53'), Var('esize', '54'), Var('unsigned', '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='USQADD Vd.2S,Vn.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_add_saturating_simd'),
    'vsqadd_u64': ARMSema(intrin='vsqadd_u64', inst='USQADD', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarDeclInit(VarsDecl([Var('operand2', '15')], ('bits', Var('datasize', '11')), '16'), ArrayIndex(Var('V', '12'), [Var('d', '13')], '14'), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('op1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), Var('esize', '31')], '32'), UnaryExpr('!', Var('unsigned', '33'), '34')], '35')), Update(Var('op2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), Var('esize', '48')], '49'), Call('SatQ', [BinaryExpr('+', Var('op1', '51'), Var('op2', '52'), '53'), Var('esize', '54'), Var('unsigned', '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='USQADD Dd,Dn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_add_saturating_sisd'),
    'vsqadd_u8': ARMSema(intrin='vsqadd_u8', inst='USQADD', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarDeclInit(VarsDecl([Var('operand2', '15')], ('bits', Var('datasize', '11')), '16'), ArrayIndex(Var('V', '12'), [Var('d', '13')], '14'), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('op1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), Var('esize', '31')], '32'), UnaryExpr('!', Var('unsigned', '33'), '34')], '35')), Update(Var('op2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), Var('esize', '48')], '49'), Call('SatQ', [BinaryExpr('+', Var('op1', '51'), Var('op2', '52'), '53'), Var('esize', '54'), Var('unsigned', '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='USQADD Vd.8B,Vn.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_add_saturating_simd'),
    'vsqaddb_u8': ARMSema(intrin='vsqaddb_u8', inst='USQADD', params=[Parameter(name='a', type='uint8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarDeclInit(VarsDecl([Var('operand2', '15')], ('bits', Var('datasize', '11')), '16'), ArrayIndex(Var('V', '12'), [Var('d', '13')], '14'), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('op1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), Var('esize', '31')], '32'), UnaryExpr('!', Var('unsigned', '33'), '34')], '35')), Update(Var('op2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), Var('esize', '48')], '49'), Call('SatQ', [BinaryExpr('+', Var('op1', '51'), Var('op2', '52'), '53'), Var('esize', '54'), Var('unsigned', '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint8_t', ret_is_signed=False, inst_form='USQADD Bd,Bn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 8, 'datasize': 8, 'elements': 1, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_add_saturating_sisd'),
    'vsqaddd_u64': ARMSema(intrin='vsqaddd_u64', inst='USQADD', params=[Parameter(name='a', type='uint64_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarDeclInit(VarsDecl([Var('operand2', '15')], ('bits', Var('datasize', '11')), '16'), ArrayIndex(Var('V', '12'), [Var('d', '13')], '14'), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('op1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), Var('esize', '31')], '32'), UnaryExpr('!', Var('unsigned', '33'), '34')], '35')), Update(Var('op2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), Var('esize', '48')], '49'), Call('SatQ', [BinaryExpr('+', Var('op1', '51'), Var('op2', '52'), '53'), Var('esize', '54'), Var('unsigned', '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint64_t', ret_is_signed=False, inst_form='USQADD Dd,Dn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_add_saturating_sisd'),
    'vsqaddh_u16': ARMSema(intrin='vsqaddh_u16', inst='USQADD', params=[Parameter(name='a', type='uint16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarDeclInit(VarsDecl([Var('operand2', '15')], ('bits', Var('datasize', '11')), '16'), ArrayIndex(Var('V', '12'), [Var('d', '13')], '14'), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('op1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), Var('esize', '31')], '32'), UnaryExpr('!', Var('unsigned', '33'), '34')], '35')), Update(Var('op2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), Var('esize', '48')], '49'), Call('SatQ', [BinaryExpr('+', Var('op1', '51'), Var('op2', '52'), '53'), Var('esize', '54'), Var('unsigned', '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint16_t', ret_is_signed=False, inst_form='USQADD Hd,Hn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_add_saturating_sisd'),
    'vsqaddq_u16': ARMSema(intrin='vsqaddq_u16', inst='USQADD', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarDeclInit(VarsDecl([Var('operand2', '15')], ('bits', Var('datasize', '11')), '16'), ArrayIndex(Var('V', '12'), [Var('d', '13')], '14'), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('op1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), Var('esize', '31')], '32'), UnaryExpr('!', Var('unsigned', '33'), '34')], '35')), Update(Var('op2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), Var('esize', '48')], '49'), Call('SatQ', [BinaryExpr('+', Var('op1', '51'), Var('op2', '52'), '53'), Var('esize', '54'), Var('unsigned', '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='USQADD Vd.8H,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_add_saturating_simd'),
    'vsqaddq_u32': ARMSema(intrin='vsqaddq_u32', inst='USQADD', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarDeclInit(VarsDecl([Var('operand2', '15')], ('bits', Var('datasize', '11')), '16'), ArrayIndex(Var('V', '12'), [Var('d', '13')], '14'), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('op1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), Var('esize', '31')], '32'), UnaryExpr('!', Var('unsigned', '33'), '34')], '35')), Update(Var('op2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), Var('esize', '48')], '49'), Call('SatQ', [BinaryExpr('+', Var('op1', '51'), Var('op2', '52'), '53'), Var('esize', '54'), Var('unsigned', '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='USQADD Vd.4S,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_add_saturating_simd'),
    'vsqaddq_u64': ARMSema(intrin='vsqaddq_u64', inst='USQADD', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarDeclInit(VarsDecl([Var('operand2', '15')], ('bits', Var('datasize', '11')), '16'), ArrayIndex(Var('V', '12'), [Var('d', '13')], '14'), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('op1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), Var('esize', '31')], '32'), UnaryExpr('!', Var('unsigned', '33'), '34')], '35')), Update(Var('op2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), Var('esize', '48')], '49'), Call('SatQ', [BinaryExpr('+', Var('op1', '51'), Var('op2', '52'), '53'), Var('esize', '54'), Var('unsigned', '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='USQADD Vd.2D,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_add_saturating_simd'),
    'vsqaddq_u8': ARMSema(intrin='vsqaddq_u8', inst='USQADD', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarDeclInit(VarsDecl([Var('operand2', '15')], ('bits', Var('datasize', '11')), '16'), ArrayIndex(Var('V', '12'), [Var('d', '13')], '14'), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('op1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), Var('esize', '31')], '32'), UnaryExpr('!', Var('unsigned', '33'), '34')], '35')), Update(Var('op2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), Var('esize', '48')], '49'), Call('SatQ', [BinaryExpr('+', Var('op1', '51'), Var('op2', '52'), '53'), Var('esize', '54'), Var('unsigned', '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='USQADD Vd.16B,Vn.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_add_saturating_simd'),
    'vsqadds_u32': ARMSema(intrin='vsqadds_u32', inst='USQADD', params=[Parameter(name='a', type='uint32_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='int32_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarDeclInit(VarsDecl([Var('operand2', '15')], ('bits', Var('datasize', '11')), '16'), ArrayIndex(Var('V', '12'), [Var('d', '13')], '14'), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('op1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), Var('esize', '31')], '32'), UnaryExpr('!', Var('unsigned', '33'), '34')], '35')), Update(Var('op2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), Var('esize', '48')], '49'), Call('SatQ', [BinaryExpr('+', Var('op1', '51'), Var('op2', '52'), '53'), Var('esize', '54'), Var('unsigned', '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='uint32_t', ret_is_signed=False, inst_form='USQADD Sd,Sn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_unary_add_saturating_sisd'),
    'vsra_n_s16': ARMSema(intrin='vsra_n_s16', inst='SSRA', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SSRA Vd.4H,Vn.4H,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': False, 'round': False, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vsra_n_s32': ARMSema(intrin='vsra_n_s32', inst='SSRA', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SSRA Vd.2S,Vn.2S,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': False, 'round': False, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vsra_n_s64': ARMSema(intrin='vsra_n_s64', inst='SSRA', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int64x1_t', ret_is_signed=True, inst_form='SSRA Dd,Dn,#n', extensions=None, imm_width=(1, 64), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False, 'round': False, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_sisd'),
    'vsra_n_s8': ARMSema(intrin='vsra_n_s8', inst='SSRA', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SSRA Vd.8B,Vn.8B,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': False, 'round': False, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vsra_n_u16': ARMSema(intrin='vsra_n_u16', inst='USRA', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='USRA Vd.4H,Vn.4H,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': True, 'round': False, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vsra_n_u32': ARMSema(intrin='vsra_n_u32', inst='USRA', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='USRA Vd.2S,Vn.2S,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': True, 'round': False, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vsra_n_u64': ARMSema(intrin='vsra_n_u64', inst='USRA', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='USRA Dd,Dn,#n', extensions=None, imm_width=(1, 64), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True, 'round': False, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_sisd'),
    'vsra_n_u8': ARMSema(intrin='vsra_n_u8', inst='USRA', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='USRA Vd.8B,Vn.8B,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': True, 'round': False, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vsrad_n_s64': ARMSema(intrin='vsrad_n_s64', inst='SSRA', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int64_t', ret_is_signed=True, inst_form='SSRA Dd,Dn,#n', extensions=None, imm_width=(1, 64), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False, 'round': False, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_sisd'),
    'vsrad_n_u64': ARMSema(intrin='vsrad_n_u64', inst='USRA', params=[Parameter(name='a', type='uint64_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint64_t', ret_is_signed=False, inst_form='USRA Dd,Dn,#n', extensions=None, imm_width=(1, 64), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': True, 'round': False, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_sisd'),
    'vsraq_n_s16': ARMSema(intrin='vsraq_n_s16', inst='SSRA', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SSRA Vd.8H,Vn.8H,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': False, 'round': False, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vsraq_n_s32': ARMSema(intrin='vsraq_n_s32', inst='SSRA', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SSRA Vd.4S,Vn.4S,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': False, 'round': False, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vsraq_n_s64': ARMSema(intrin='vsraq_n_s64', inst='SSRA', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SSRA Vd.2D,Vn.2D,#n', extensions=None, imm_width=(1, 64), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': False, 'round': False, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vsraq_n_s8': ARMSema(intrin='vsraq_n_s8', inst='SSRA', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SSRA Vd.16B,Vn.16B,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': False, 'round': False, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vsraq_n_u16': ARMSema(intrin='vsraq_n_u16', inst='USRA', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='USRA Vd.8H,Vn.8H,#n', extensions=None, imm_width=(1, 16), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': True, 'round': False, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vsraq_n_u32': ARMSema(intrin='vsraq_n_u32', inst='USRA', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='USRA Vd.4S,Vn.4S,#n', extensions=None, imm_width=(1, 32), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': True, 'round': False, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vsraq_n_u64': ARMSema(intrin='vsraq_n_u64', inst='USRA', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='USRA Vd.2D,Vn.2D,#n', extensions=None, imm_width=(1, 64), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': True, 'round': False, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vsraq_n_u8': ARMSema(intrin='vsraq_n_u8', inst='USRA', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='n', type='const int', is_signed=False, is_imm=True, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('operand2', '9')], ('bits', Var('datasize', '8')), '10'), VarsDecl([Var('result', '12')], ('bits', Var('datasize', '11')), '13'), VarDeclInit(VarsDecl([Var('round_const', '19')], ('integer', Number(64)), '20'), IfElse(Var('round', '17'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('shift', '14'), Number(1), '15'), '16'), Number(0), '18'), '21'), VarsDecl([Var('element', '22')], ('integer', Number(64)), '23'), Update(Var('operand2', '24'), IfElse(Var('accumulate', '28'), ArrayIndex(Var('V', '25'), [Var('d', '26')], '27'), Call('Zeros', [], '30'), '31')), For(Var('e', '63'), Number(0), BinaryExpr('-', Var('elements', '32'), Number(1), '33'), [Update(Var('element', '34'), BinaryExpr('>>', BinaryExpr('+', Call('Int', [ArrayIndex(Var('Elem', '36'), [Var('operand', '37'), Var('e', '38'), Var('esize', '39')], '40'), Var('unsigned', '41')], '42'), Var('round_const', '43'), '44'), Var('shift', '45'), '46')), Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', ArrayIndex(Var('Elem', '52'), [Var('operand2', '53'), Var('e', '54'), Var('esize', '55')], '56'), ArrayIndex(Var('element', '57'), [SliceRange(BinaryExpr('-', Var('esize', '58'), Number(1), '59'), Number(0), '60')], '61'), '62'))], 1, '64'), Update(ArrayIndex(Var('V', '65'), [Var('d', '66')], '67'), Var('result', '68'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='USRA Vd.16B,Vn.16B,#n', extensions=None, imm_width=(1, 8), xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b', 'shift': 'n'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': True, 'round': False, 'accumulate': True}, belongs_to='aarch64_vector_shift_right_simd'),
    'vst1_s16': ARMSema(intrin='vst1_s16', inst='ST1', params=[Parameter(name='ptr', type='int16_t *', is_signed=True, is_imm=False, is_mask=False), Parameter(name='val', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='void', ret_is_signed=True, inst_form='ST1 {Vt.4H},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'n': 'ptr', 't': 'val'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 1, 'datasize': 64, 'esize': 16, 'elements': 4, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vst1_s32': ARMSema(intrin='vst1_s32', inst='ST1', params=[Parameter(name='ptr', type='int32_t *', is_signed=True, is_imm=False, is_mask=False), Parameter(name='val', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='void', ret_is_signed=True, inst_form='ST1 {Vt.2S},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'n': 'ptr', 't': 'val'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 1, 'datasize': 64, 'esize': 32, 'elements': 2, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vst1_s64': ARMSema(intrin='vst1_s64', inst='ST1', params=[Parameter(name='ptr', type='int64_t *', is_signed=True, is_imm=False, is_mask=False), Parameter(name='val', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='void', ret_is_signed=True, inst_form='ST1 {Vt.1D},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'n': 'ptr', 't': 'val'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 1, 'datasize': 64, 'esize': 64, 'elements': 1, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vst1_s8': ARMSema(intrin='vst1_s8', inst='ST1', params=[Parameter(name='ptr', type='int8_t *', is_signed=True, is_imm=False, is_mask=False), Parameter(name='val', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='void', ret_is_signed=True, inst_form='ST1 {Vt.8B},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'n': 'ptr', 't': 'val'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 1, 'datasize': 64, 'esize': 8, 'elements': 8, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vst1_u16': ARMSema(intrin='vst1_u16', inst='ST1', params=[Parameter(name='ptr', type='uint16_t *', is_signed=False, is_imm=False, is_mask=False), Parameter(name='val', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='void', ret_is_signed=True, inst_form='ST1 {Vt.4H},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'n': 'ptr', 't': 'val'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 1, 'datasize': 64, 'esize': 16, 'elements': 4, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vst1_u32': ARMSema(intrin='vst1_u32', inst='ST1', params=[Parameter(name='ptr', type='uint32_t *', is_signed=False, is_imm=False, is_mask=False), Parameter(name='val', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='void', ret_is_signed=True, inst_form='ST1 {Vt.2S},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'n': 'ptr', 't': 'val'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 1, 'datasize': 64, 'esize': 32, 'elements': 2, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vst1_u64': ARMSema(intrin='vst1_u64', inst='ST1', params=[Parameter(name='ptr', type='uint64_t *', is_signed=False, is_imm=False, is_mask=False), Parameter(name='val', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='void', ret_is_signed=True, inst_form='ST1 {Vt.1D},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'n': 'ptr', 't': 'val'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 1, 'datasize': 64, 'esize': 64, 'elements': 1, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vst1_u8': ARMSema(intrin='vst1_u8', inst='ST1', params=[Parameter(name='ptr', type='uint8_t *', is_signed=False, is_imm=False, is_mask=False), Parameter(name='val', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='void', ret_is_signed=True, inst_form='ST1 {Vt.8B},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'n': 'ptr', 't': 'val'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 1, 'datasize': 64, 'esize': 8, 'elements': 8, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vst1q_s16': ARMSema(intrin='vst1q_s16', inst='ST1', params=[Parameter(name='ptr', type='int16_t *', is_signed=True, is_imm=False, is_mask=False), Parameter(name='val', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='void', ret_is_signed=True, inst_form='ST1 {Vt.8H},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'n': 'ptr', 't': 'val'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 1, 'datasize': 128, 'esize': 16, 'elements': 8, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vst1q_s32': ARMSema(intrin='vst1q_s32', inst='ST1', params=[Parameter(name='ptr', type='int32_t *', is_signed=True, is_imm=False, is_mask=False), Parameter(name='val', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='void', ret_is_signed=True, inst_form='ST1 {Vt.4S},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'n': 'ptr', 't': 'val'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 1, 'datasize': 128, 'esize': 32, 'elements': 4, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vst1q_s64': ARMSema(intrin='vst1q_s64', inst='ST1', params=[Parameter(name='ptr', type='int64_t *', is_signed=True, is_imm=False, is_mask=False), Parameter(name='val', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='void', ret_is_signed=True, inst_form='ST1 {Vt.2D},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'n': 'ptr', 't': 'val'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 1, 'datasize': 128, 'esize': 64, 'elements': 2, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vst1q_s8': ARMSema(intrin='vst1q_s8', inst='ST1', params=[Parameter(name='ptr', type='int8_t *', is_signed=True, is_imm=False, is_mask=False), Parameter(name='val', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='void', ret_is_signed=True, inst_form='ST1 {Vt.16B},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'n': 'ptr', 't': 'val'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 1, 'datasize': 128, 'esize': 8, 'elements': 16, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vst1q_u16': ARMSema(intrin='vst1q_u16', inst='ST1', params=[Parameter(name='ptr', type='uint16_t *', is_signed=False, is_imm=False, is_mask=False), Parameter(name='val', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='void', ret_is_signed=True, inst_form='ST1 {Vt.8H},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'n': 'ptr', 't': 'val'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 1, 'datasize': 128, 'esize': 16, 'elements': 8, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vst1q_u32': ARMSema(intrin='vst1q_u32', inst='ST1', params=[Parameter(name='ptr', type='uint32_t *', is_signed=False, is_imm=False, is_mask=False), Parameter(name='val', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='void', ret_is_signed=True, inst_form='ST1 {Vt.4S},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'n': 'ptr', 't': 'val'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 1, 'datasize': 128, 'esize': 32, 'elements': 4, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vst1q_u64': ARMSema(intrin='vst1q_u64', inst='ST1', params=[Parameter(name='ptr', type='uint64_t *', is_signed=False, is_imm=False, is_mask=False), Parameter(name='val', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='void', ret_is_signed=True, inst_form='ST1 {Vt.2D},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'n': 'ptr', 't': 'val'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 1, 'datasize': 128, 'esize': 64, 'elements': 2, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vst1q_u8': ARMSema(intrin='vst1q_u8', inst='ST1', params=[Parameter(name='ptr', type='uint8_t *', is_signed=False, is_imm=False, is_mask=False), Parameter(name='val', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarsDecl([Var('address', '1')], ('bits', Number(64)), '2'), VarsDecl([Var('offs', '3')], ('bits', Number(64)), '4'), VarsDecl([Var('rval', '6')], ('bits', Var('datasize', '5')), '7'), VarsDecl([Var('tt', '8')], ('integer', Number(64)), '9'), VarDeclInit(VarsDecl([Var('ebytes', '12')], ('integer', Number(64)), '13'), BinaryExpr('DIV', Var('esize', '10'), Number(8), '11'), '14'), If(Call('HaveMTEExt', [], '16'), [], '17'), IfElse(BinaryExpr('==', Var('n', '18'), Number(31), '19'), [Update(Var('address', '20'), ArrayIndex(Var('SP', '21'), [], '22'))], [Update(Var('address', '23'), ArrayIndex(Var('X', '24'), [Var('n', '25')], '26'))], '27'), Update(Var('offs', '28'), Call('Zeros', [], '30')), For(Var('r', '90'), Number(0), BinaryExpr('-', Var('rpt', '31'), Number(1), '32'), [For(Var('e', '88'), Number(0), BinaryExpr('-', Var('elements', '33'), Number(1), '34'), [Update(Var('tt', '35'), BinaryExpr('MOD', BinaryExpr('+', Var('t', '36'), Var('r', '37'), '38'), Number(32), '39')), For(Var('s', '86'), Number(0), BinaryExpr('-', Var('selem', '40'), Number(1), '41'), [Update(Var('rval', '42'), ArrayIndex(Var('V', '43'), [Var('tt', '44')], '45')), IfElse(BinaryExpr('==', Var('memop', '46'), Var('MemOp_LOAD', '47'), '48'), [Update(ArrayIndex(Var('Elem', '49'), [Var('rval', '50'), Var('e', '51'), Var('esize', '52')], '53'), ArrayIndex(Var('Mem', '54'), [BinaryExpr('+', Var('address', '55'), Var('offs', '56'), '57'), Var('ebytes', '58'), Var('AccType_VEC', '59')], '60')), Update(ArrayIndex(Var('V', '61'), [Var('tt', '62')], '63'), Var('rval', '64'))], [Update(ArrayIndex(Var('Mem', '65'), [BinaryExpr('+', Var('address', '66'), Var('offs', '67'), '68'), Var('ebytes', '69'), Var('AccType_VEC', '70')], '71'), ArrayIndex(Var('Elem', '72'), [Var('rval', '73'), Var('e', '74'), Var('esize', '75')], '76'))], '77'), Update(Var('offs', '78'), BinaryExpr('+', Var('offs', '79'), Var('ebytes', '80'), '81')), Update(Var('tt', '82'), BinaryExpr('MOD', BinaryExpr('+', Var('tt', '83'), Number(1), '84'), Number(32), '85'))], 1, '87')], 1, '89')], 1, '91'), If(Var('wback', '92'), [If(BinaryExpr('!=', Var('m', '93'), Number(31), '94'), [Update(Var('offs', '95'), ArrayIndex(Var('X', '96'), [Var('m', '97')], '98'))], '99'), IfElse(BinaryExpr('==', Var('n', '100'), Number(31), '101'), [Update(ArrayIndex(Var('SP', '102'), [], '103'), BinaryExpr('+', Var('address', '104'), Var('offs', '105'), '106'))], [Update(ArrayIndex(Var('X', '107'), [Var('n', '108')], '109'), BinaryExpr('+', Var('address', '110'), Var('offs', '111'), '112'))], '113')], '114')], rettype='void', ret_is_signed=True, inst_form='ST1 {Vt.16B},[Xn]', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'n': 'ptr', 't': 'val'}, resolving={'m': 0, 'wback': False, 'tag_checked': True, 'memop': 1, 'datasize': 128, 'esize': 8, 'elements': 16, 'rpt': 1, 'selem': 1}, belongs_to='aarch64_memory_vector_multiple_no_wb'),
    'vsub_s16': ARMSema(intrin='vsub_s16', inst='SUB', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SUB Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vsub_s32': ARMSema(intrin='vsub_s32', inst='SUB', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SUB Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vsub_s64': ARMSema(intrin='vsub_s64', inst='SUB', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='int64x1_t', ret_is_signed=True, inst_form='SUB Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_sisd'),
    'vsub_s8': ARMSema(intrin='vsub_s8', inst='SUB', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SUB Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vsub_u16': ARMSema(intrin='vsub_u16', inst='SUB', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='SUB Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vsub_u32': ARMSema(intrin='vsub_u32', inst='SUB', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='SUB Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vsub_u64': ARMSema(intrin='vsub_u64', inst='SUB', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='SUB Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_sisd'),
    'vsub_u8': ARMSema(intrin='vsub_u8', inst='SUB', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='SUB Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vsubd_s64': ARMSema(intrin='vsubd_s64', inst='SUB', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='int64_t', ret_is_signed=True, inst_form='SUB Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_sisd'),
    'vsubd_u64': ARMSema(intrin='vsubd_u64', inst='SUB', params=[Parameter(name='a', type='uint64_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='uint64_t', ret_is_signed=False, inst_form='SUB Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_sisd'),
    'vsubhn_high_s16': ARMSema(intrin='vsubhn_high_s16', inst='SUBHN2', params=[Parameter(name='r', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SUBHN2 Vd.16B,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'sub_op': True, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vsubhn_high_s32': ARMSema(intrin='vsubhn_high_s32', inst='SUBHN2', params=[Parameter(name='r', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SUBHN2 Vd.8H,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'sub_op': True, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vsubhn_high_s64': ARMSema(intrin='vsubhn_high_s64', inst='SUBHN2', params=[Parameter(name='r', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SUBHN2 Vd.4S,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'sub_op': True, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vsubhn_high_u16': ARMSema(intrin='vsubhn_high_u16', inst='SUBHN2', params=[Parameter(name='r', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='SUBHN2 Vd.16B,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'sub_op': True, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vsubhn_high_u32': ARMSema(intrin='vsubhn_high_u32', inst='SUBHN2', params=[Parameter(name='r', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='SUBHN2 Vd.8H,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'sub_op': True, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vsubhn_high_u64': ARMSema(intrin='vsubhn_high_u64', inst='SUBHN2', params=[Parameter(name='r', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='SUBHN2 Vd.4S,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'r', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'sub_op': True, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vsubhn_s16': ARMSema(intrin='vsubhn_s16', inst='SUBHN', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SUBHN Vd.8B,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'sub_op': True, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vsubhn_s32': ARMSema(intrin='vsubhn_s32', inst='SUBHN', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SUBHN Vd.4H,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'sub_op': True, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vsubhn_s64': ARMSema(intrin='vsubhn_s64', inst='SUBHN', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SUBHN Vd.2S,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'sub_op': True, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vsubhn_u16': ARMSema(intrin='vsubhn_u16', inst='SUBHN', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='SUBHN Vd.8B,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'sub_op': True, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vsubhn_u32': ARMSema(intrin='vsubhn_u32', inst='SUBHN', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='SUBHN Vd.4H,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'sub_op': True, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vsubhn_u64': ARMSema(intrin='vsubhn_u64', inst='SUBHN', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '9'), '10')), '15'), ArrayIndex(Var('V', '11'), [Var('m', '12')], '13'), '16'), VarsDecl([Var('result', '18')], ('bits', Var('datasize', '17')), '19'), VarDeclInit(VarsDecl([Var('round_const', '25')], ('integer', Number(64)), '26'), IfElse(Var('round', '23'), BinaryExpr('<<', Number(1), BinaryExpr('-', Var('esize', '20'), Number(1), '21'), '22'), Number(0), '24'), '27'), VarsDecl([Var('element1', '30')], ('bits', BinaryExpr('*', Number(2), Var('esize', '28'), '29')), '31'), VarsDecl([Var('element2', '34')], ('bits', BinaryExpr('*', Number(2), Var('esize', '32'), '33')), '35'), VarsDecl([Var('sum', '38')], ('bits', BinaryExpr('*', Number(2), Var('esize', '36'), '37')), '39'), For(Var('e', '82'), Number(0), BinaryExpr('-', Var('elements', '40'), Number(1), '41'), [Update(Var('element1', '42'), ArrayIndex(Var('Elem', '43'), [Var('operand1', '44'), Var('e', '45'), BinaryExpr('*', Number(2), Var('esize', '46'), '47')], '48')), Update(Var('element2', '49'), ArrayIndex(Var('Elem', '50'), [Var('operand2', '51'), Var('e', '52'), BinaryExpr('*', Number(2), Var('esize', '53'), '54')], '55')), IfElse(Var('sub_op', '56'), [Update(Var('sum', '57'), BinaryExpr('-', Var('element1', '58'), Var('element2', '59'), '60'))], [Update(Var('sum', '61'), BinaryExpr('+', Var('element1', '62'), Var('element2', '63'), '64'))], '65'), Update(Var('sum', '66'), BinaryExpr('+', Var('sum', '67'), Var('round_const', '68'), '69')), Update(ArrayIndex(Var('Elem', '70'), [Var('result', '71'), Var('e', '72'), Var('esize', '73')], '74'), ArrayIndex(Var('sum', '75'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '77'), '78'), Number(1), '79'), Var('esize', '76'), '80')], '81'))], 1, '83'), Update(ArrayIndex(Var('Vpart', '84'), [Var('d', '85'), Var('part', '86')], '87'), Var('result', '88'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='SUBHN Vd.2S,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'sub_op': True, 'round': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_narrow'),
    'vsubl_high_s16': ARMSema(intrin='vsubl_high_s16', inst='SSUBL2', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '69'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), Var('esize', '34')], '35'), Var('unsigned', '36')], '37')), Update(Var('element2', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand2', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), IfElse(Var('sub_op', '47'), [Update(Var('sum', '48'), BinaryExpr('-', Var('element1', '49'), Var('element2', '50'), '51'))], [Update(Var('sum', '52'), BinaryExpr('+', Var('element1', '53'), Var('element2', '54'), '55'))], '56'), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), ArrayIndex(Var('sum', '63'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '64'), '65'), Number(1), '66'), Number(0), '67')], '68'))], 1, '70'), Update(ArrayIndex(Var('V', '71'), [Var('d', '72')], '73'), Var('result', '74'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SSUBL2 Vd.4S,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'sub_op': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_long'),
    'vsubl_high_s32': ARMSema(intrin='vsubl_high_s32', inst='SSUBL2', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '69'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), Var('esize', '34')], '35'), Var('unsigned', '36')], '37')), Update(Var('element2', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand2', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), IfElse(Var('sub_op', '47'), [Update(Var('sum', '48'), BinaryExpr('-', Var('element1', '49'), Var('element2', '50'), '51'))], [Update(Var('sum', '52'), BinaryExpr('+', Var('element1', '53'), Var('element2', '54'), '55'))], '56'), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), ArrayIndex(Var('sum', '63'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '64'), '65'), Number(1), '66'), Number(0), '67')], '68'))], 1, '70'), Update(ArrayIndex(Var('V', '71'), [Var('d', '72')], '73'), Var('result', '74'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SSUBL2 Vd.2D,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'sub_op': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_long'),
    'vsubl_high_s8': ARMSema(intrin='vsubl_high_s8', inst='SSUBL2', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '69'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), Var('esize', '34')], '35'), Var('unsigned', '36')], '37')), Update(Var('element2', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand2', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), IfElse(Var('sub_op', '47'), [Update(Var('sum', '48'), BinaryExpr('-', Var('element1', '49'), Var('element2', '50'), '51'))], [Update(Var('sum', '52'), BinaryExpr('+', Var('element1', '53'), Var('element2', '54'), '55'))], '56'), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), ArrayIndex(Var('sum', '63'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '64'), '65'), Number(1), '66'), Number(0), '67')], '68'))], 1, '70'), Update(ArrayIndex(Var('V', '71'), [Var('d', '72')], '73'), Var('result', '74'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SSUBL2 Vd.8H,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'sub_op': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_long'),
    'vsubl_high_u16': ARMSema(intrin='vsubl_high_u16', inst='USUBL2', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '69'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), Var('esize', '34')], '35'), Var('unsigned', '36')], '37')), Update(Var('element2', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand2', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), IfElse(Var('sub_op', '47'), [Update(Var('sum', '48'), BinaryExpr('-', Var('element1', '49'), Var('element2', '50'), '51'))], [Update(Var('sum', '52'), BinaryExpr('+', Var('element1', '53'), Var('element2', '54'), '55'))], '56'), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), ArrayIndex(Var('sum', '63'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '64'), '65'), Number(1), '66'), Number(0), '67')], '68'))], 1, '70'), Update(ArrayIndex(Var('V', '71'), [Var('d', '72')], '73'), Var('result', '74'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='USUBL2 Vd.4S,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'sub_op': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_long'),
    'vsubl_high_u32': ARMSema(intrin='vsubl_high_u32', inst='USUBL2', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '69'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), Var('esize', '34')], '35'), Var('unsigned', '36')], '37')), Update(Var('element2', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand2', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), IfElse(Var('sub_op', '47'), [Update(Var('sum', '48'), BinaryExpr('-', Var('element1', '49'), Var('element2', '50'), '51'))], [Update(Var('sum', '52'), BinaryExpr('+', Var('element1', '53'), Var('element2', '54'), '55'))], '56'), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), ArrayIndex(Var('sum', '63'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '64'), '65'), Number(1), '66'), Number(0), '67')], '68'))], 1, '70'), Update(ArrayIndex(Var('V', '71'), [Var('d', '72')], '73'), Var('result', '74'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='USUBL2 Vd.2D,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'sub_op': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_long'),
    'vsubl_high_u8': ARMSema(intrin='vsubl_high_u8', inst='USUBL2', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '69'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), Var('esize', '34')], '35'), Var('unsigned', '36')], '37')), Update(Var('element2', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand2', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), IfElse(Var('sub_op', '47'), [Update(Var('sum', '48'), BinaryExpr('-', Var('element1', '49'), Var('element2', '50'), '51'))], [Update(Var('sum', '52'), BinaryExpr('+', Var('element1', '53'), Var('element2', '54'), '55'))], '56'), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), ArrayIndex(Var('sum', '63'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '64'), '65'), Number(1), '66'), Number(0), '67')], '68'))], 1, '70'), Update(ArrayIndex(Var('V', '71'), [Var('d', '72')], '73'), Var('result', '74'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='USUBL2 Vd.8H,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'sub_op': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_long'),
    'vsubl_s16': ARMSema(intrin='vsubl_s16', inst='SSUBL', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '69'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), Var('esize', '34')], '35'), Var('unsigned', '36')], '37')), Update(Var('element2', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand2', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), IfElse(Var('sub_op', '47'), [Update(Var('sum', '48'), BinaryExpr('-', Var('element1', '49'), Var('element2', '50'), '51'))], [Update(Var('sum', '52'), BinaryExpr('+', Var('element1', '53'), Var('element2', '54'), '55'))], '56'), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), ArrayIndex(Var('sum', '63'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '64'), '65'), Number(1), '66'), Number(0), '67')], '68'))], 1, '70'), Update(ArrayIndex(Var('V', '71'), [Var('d', '72')], '73'), Var('result', '74'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SSUBL Vd.4S,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'sub_op': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_long'),
    'vsubl_s32': ARMSema(intrin='vsubl_s32', inst='SSUBL', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '69'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), Var('esize', '34')], '35'), Var('unsigned', '36')], '37')), Update(Var('element2', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand2', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), IfElse(Var('sub_op', '47'), [Update(Var('sum', '48'), BinaryExpr('-', Var('element1', '49'), Var('element2', '50'), '51'))], [Update(Var('sum', '52'), BinaryExpr('+', Var('element1', '53'), Var('element2', '54'), '55'))], '56'), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), ArrayIndex(Var('sum', '63'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '64'), '65'), Number(1), '66'), Number(0), '67')], '68'))], 1, '70'), Update(ArrayIndex(Var('V', '71'), [Var('d', '72')], '73'), Var('result', '74'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SSUBL Vd.2D,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'sub_op': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_long'),
    'vsubl_s8': ARMSema(intrin='vsubl_s8', inst='SSUBL', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '69'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), Var('esize', '34')], '35'), Var('unsigned', '36')], '37')), Update(Var('element2', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand2', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), IfElse(Var('sub_op', '47'), [Update(Var('sum', '48'), BinaryExpr('-', Var('element1', '49'), Var('element2', '50'), '51'))], [Update(Var('sum', '52'), BinaryExpr('+', Var('element1', '53'), Var('element2', '54'), '55'))], '56'), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), ArrayIndex(Var('sum', '63'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '64'), '65'), Number(1), '66'), Number(0), '67')], '68'))], 1, '70'), Update(ArrayIndex(Var('V', '71'), [Var('d', '72')], '73'), Var('result', '74'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SSUBL Vd.8H,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'sub_op': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_long'),
    'vsubl_u16': ARMSema(intrin='vsubl_u16', inst='USUBL', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '69'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), Var('esize', '34')], '35'), Var('unsigned', '36')], '37')), Update(Var('element2', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand2', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), IfElse(Var('sub_op', '47'), [Update(Var('sum', '48'), BinaryExpr('-', Var('element1', '49'), Var('element2', '50'), '51'))], [Update(Var('sum', '52'), BinaryExpr('+', Var('element1', '53'), Var('element2', '54'), '55'))], '56'), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), ArrayIndex(Var('sum', '63'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '64'), '65'), Number(1), '66'), Number(0), '67')], '68'))], 1, '70'), Update(ArrayIndex(Var('V', '71'), [Var('d', '72')], '73'), Var('result', '74'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='USUBL Vd.4S,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'sub_op': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_long'),
    'vsubl_u32': ARMSema(intrin='vsubl_u32', inst='USUBL', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '69'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), Var('esize', '34')], '35'), Var('unsigned', '36')], '37')), Update(Var('element2', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand2', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), IfElse(Var('sub_op', '47'), [Update(Var('sum', '48'), BinaryExpr('-', Var('element1', '49'), Var('element2', '50'), '51'))], [Update(Var('sum', '52'), BinaryExpr('+', Var('element1', '53'), Var('element2', '54'), '55'))], '56'), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), ArrayIndex(Var('sum', '63'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '64'), '65'), Number(1), '66'), Number(0), '67')], '68'))], 1, '70'), Update(ArrayIndex(Var('V', '71'), [Var('d', '72')], '73'), Var('result', '74'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='USUBL Vd.2D,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'sub_op': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_long'),
    'vsubl_u8': ARMSema(intrin='vsubl_u8', inst='USUBL', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', Var('datasize', '1')), '7'), ArrayIndex(Var('Vpart', '2'), [Var('n', '3'), Var('part', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '69'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), Var('esize', '34')], '35'), Var('unsigned', '36')], '37')), Update(Var('element2', '38'), Call('Int', [ArrayIndex(Var('Elem', '40'), [Var('operand2', '41'), Var('e', '42'), Var('esize', '43')], '44'), Var('unsigned', '45')], '46')), IfElse(Var('sub_op', '47'), [Update(Var('sum', '48'), BinaryExpr('-', Var('element1', '49'), Var('element2', '50'), '51'))], [Update(Var('sum', '52'), BinaryExpr('+', Var('element1', '53'), Var('element2', '54'), '55'))], '56'), Update(ArrayIndex(Var('Elem', '57'), [Var('result', '58'), Var('e', '59'), BinaryExpr('*', Number(2), Var('esize', '60'), '61')], '62'), ArrayIndex(Var('sum', '63'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '64'), '65'), Number(1), '66'), Number(0), '67')], '68'))], 1, '70'), Update(ArrayIndex(Var('V', '71'), [Var('d', '72')], '73'), Var('result', '74'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='USUBL Vd.8H,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'sub_op': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_long'),
    'vsubq_s16': ARMSema(intrin='vsubq_s16', inst='SUB', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SUB Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vsubq_s32': ARMSema(intrin='vsubq_s32', inst='SUB', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SUB Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vsubq_s64': ARMSema(intrin='vsubq_s64', inst='SUB', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SUB Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vsubq_s8': ARMSema(intrin='vsubq_s8', inst='SUB', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SUB Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vsubq_u16': ARMSema(intrin='vsubq_u16', inst='SUB', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='SUB Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vsubq_u32': ARMSema(intrin='vsubq_u32', inst='SUB', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='SUB Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vsubq_u64': ARMSema(intrin='vsubq_u64', inst='SUB', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='SUB Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vsubq_u8': ARMSema(intrin='vsubq_u8', inst='SUB', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), For(Var('e', '56'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('element1', '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), Var('e', '29'), Var('esize', '30')], '31')), Update(Var('element2', '32'), ArrayIndex(Var('Elem', '33'), [Var('operand2', '34'), Var('e', '35'), Var('esize', '36')], '37')), IfElse(Var('sub_op', '38'), [Update(ArrayIndex(Var('Elem', '39'), [Var('result', '40'), Var('e', '41'), Var('esize', '42')], '43'), BinaryExpr('-', Var('element1', '44'), Var('element2', '45'), '46'))], [Update(ArrayIndex(Var('Elem', '47'), [Var('result', '48'), Var('e', '49'), Var('esize', '50')], '51'), BinaryExpr('+', Var('element1', '52'), Var('element2', '53'), '54'))], '55')], 1, '57'), Update(ArrayIndex(Var('V', '58'), [Var('d', '59')], '60'), Var('result', '61'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='SUB Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'sub_op': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd'),
    'vsubw_high_s16': ARMSema(intrin='vsubw_high_s16', inst='SSUBW2', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), BinaryExpr('*', Number(2), Var('esize', '34'), '35')], '36'), Var('unsigned', '37')], '38')), Update(Var('element2', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand2', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), IfElse(Var('sub_op', '48'), [Update(Var('sum', '49'), BinaryExpr('-', Var('element1', '50'), Var('element2', '51'), '52'))], [Update(Var('sum', '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], '57'), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), ArrayIndex(Var('sum', '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SSUBW2 Vd.4S,Vn.4S,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'sub_op': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_wide'),
    'vsubw_high_s32': ARMSema(intrin='vsubw_high_s32', inst='SSUBW2', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), BinaryExpr('*', Number(2), Var('esize', '34'), '35')], '36'), Var('unsigned', '37')], '38')), Update(Var('element2', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand2', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), IfElse(Var('sub_op', '48'), [Update(Var('sum', '49'), BinaryExpr('-', Var('element1', '50'), Var('element2', '51'), '52'))], [Update(Var('sum', '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], '57'), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), ArrayIndex(Var('sum', '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SSUBW2 Vd.2D,Vn.2D,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'sub_op': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_wide'),
    'vsubw_high_s8': ARMSema(intrin='vsubw_high_s8', inst='SSUBW2', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), BinaryExpr('*', Number(2), Var('esize', '34'), '35')], '36'), Var('unsigned', '37')], '38')), Update(Var('element2', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand2', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), IfElse(Var('sub_op', '48'), [Update(Var('sum', '49'), BinaryExpr('-', Var('element1', '50'), Var('element2', '51'), '52'))], [Update(Var('sum', '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], '57'), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), ArrayIndex(Var('sum', '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SSUBW2 Vd.8H,Vn.8H,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'sub_op': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_wide'),
    'vsubw_high_u16': ARMSema(intrin='vsubw_high_u16', inst='USUBW2', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), BinaryExpr('*', Number(2), Var('esize', '34'), '35')], '36'), Var('unsigned', '37')], '38')), Update(Var('element2', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand2', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), IfElse(Var('sub_op', '48'), [Update(Var('sum', '49'), BinaryExpr('-', Var('element1', '50'), Var('element2', '51'), '52'))], [Update(Var('sum', '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], '57'), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), ArrayIndex(Var('sum', '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='USUBW2 Vd.4S,Vn.4S,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 1, 'elements': 4, 'sub_op': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_wide'),
    'vsubw_high_u32': ARMSema(intrin='vsubw_high_u32', inst='USUBW2', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), BinaryExpr('*', Number(2), Var('esize', '34'), '35')], '36'), Var('unsigned', '37')], '38')), Update(Var('element2', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand2', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), IfElse(Var('sub_op', '48'), [Update(Var('sum', '49'), BinaryExpr('-', Var('element1', '50'), Var('element2', '51'), '52'))], [Update(Var('sum', '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], '57'), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), ArrayIndex(Var('sum', '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='USUBW2 Vd.2D,Vn.2D,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 1, 'elements': 2, 'sub_op': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_wide'),
    'vsubw_high_u8': ARMSema(intrin='vsubw_high_u8', inst='USUBW2', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), BinaryExpr('*', Number(2), Var('esize', '34'), '35')], '36'), Var('unsigned', '37')], '38')), Update(Var('element2', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand2', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), IfElse(Var('sub_op', '48'), [Update(Var('sum', '49'), BinaryExpr('-', Var('element1', '50'), Var('element2', '51'), '52'))], [Update(Var('sum', '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], '57'), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), ArrayIndex(Var('sum', '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='USUBW2 Vd.8H,Vn.8H,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 1, 'elements': 8, 'sub_op': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_wide'),
    'vsubw_s16': ARMSema(intrin='vsubw_s16', inst='SSUBW', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), BinaryExpr('*', Number(2), Var('esize', '34'), '35')], '36'), Var('unsigned', '37')], '38')), Update(Var('element2', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand2', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), IfElse(Var('sub_op', '48'), [Update(Var('sum', '49'), BinaryExpr('-', Var('element1', '50'), Var('element2', '51'), '52'))], [Update(Var('sum', '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], '57'), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), ArrayIndex(Var('sum', '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SSUBW Vd.4S,Vn.4S,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'sub_op': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_wide'),
    'vsubw_s32': ARMSema(intrin='vsubw_s32', inst='SSUBW', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), BinaryExpr('*', Number(2), Var('esize', '34'), '35')], '36'), Var('unsigned', '37')], '38')), Update(Var('element2', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand2', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), IfElse(Var('sub_op', '48'), [Update(Var('sum', '49'), BinaryExpr('-', Var('element1', '50'), Var('element2', '51'), '52'))], [Update(Var('sum', '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], '57'), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), ArrayIndex(Var('sum', '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SSUBW Vd.2D,Vn.2D,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'sub_op': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_wide'),
    'vsubw_s8': ARMSema(intrin='vsubw_s8', inst='SSUBW', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), BinaryExpr('*', Number(2), Var('esize', '34'), '35')], '36'), Var('unsigned', '37')], '38')), Update(Var('element2', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand2', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), IfElse(Var('sub_op', '48'), [Update(Var('sum', '49'), BinaryExpr('-', Var('element1', '50'), Var('element2', '51'), '52'))], [Update(Var('sum', '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], '57'), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), ArrayIndex(Var('sum', '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SSUBW Vd.8H,Vn.8H,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'sub_op': True, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_wide'),
    'vsubw_u16': ARMSema(intrin='vsubw_u16', inst='USUBW', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), BinaryExpr('*', Number(2), Var('esize', '34'), '35')], '36'), Var('unsigned', '37')], '38')), Update(Var('element2', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand2', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), IfElse(Var('sub_op', '48'), [Update(Var('sum', '49'), BinaryExpr('-', Var('element1', '50'), Var('element2', '51'), '52'))], [Update(Var('sum', '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], '57'), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), ArrayIndex(Var('sum', '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='USUBW Vd.4S,Vn.4S,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'part': 0, 'elements': 4, 'sub_op': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_wide'),
    'vsubw_u32': ARMSema(intrin='vsubw_u32', inst='USUBW', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), BinaryExpr('*', Number(2), Var('esize', '34'), '35')], '36'), Var('unsigned', '37')], '38')), Update(Var('element2', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand2', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), IfElse(Var('sub_op', '48'), [Update(Var('sum', '49'), BinaryExpr('-', Var('element1', '50'), Var('element2', '51'), '52'))], [Update(Var('sum', '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], '57'), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), ArrayIndex(Var('sum', '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='USUBW Vd.2D,Vn.2D,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'part': 0, 'elements': 2, 'sub_op': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_wide'),
    'vsubw_u8': ARMSema(intrin='vsubw_u8', inst='USUBW', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '6')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '1'), '2')), '7'), ArrayIndex(Var('V', '3'), [Var('n', '4')], '5'), '8'), VarDeclInit(VarsDecl([Var('operand2', '14')], ('bits', Var('datasize', '9')), '15'), ArrayIndex(Var('Vpart', '10'), [Var('m', '11'), Var('part', '12')], '13'), '16'), VarsDecl([Var('result', '19')], ('bits', BinaryExpr('*', Number(2), Var('datasize', '17'), '18')), '20'), VarsDecl([Var('element1', '21')], ('integer', Number(64)), '22'), VarsDecl([Var('element2', '23')], ('integer', Number(64)), '24'), VarsDecl([Var('sum', '25')], ('integer', Number(64)), '26'), For(Var('e', '70'), Number(0), BinaryExpr('-', Var('elements', '27'), Number(1), '28'), [Update(Var('element1', '29'), Call('Int', [ArrayIndex(Var('Elem', '31'), [Var('operand1', '32'), Var('e', '33'), BinaryExpr('*', Number(2), Var('esize', '34'), '35')], '36'), Var('unsigned', '37')], '38')), Update(Var('element2', '39'), Call('Int', [ArrayIndex(Var('Elem', '41'), [Var('operand2', '42'), Var('e', '43'), Var('esize', '44')], '45'), Var('unsigned', '46')], '47')), IfElse(Var('sub_op', '48'), [Update(Var('sum', '49'), BinaryExpr('-', Var('element1', '50'), Var('element2', '51'), '52'))], [Update(Var('sum', '53'), BinaryExpr('+', Var('element1', '54'), Var('element2', '55'), '56'))], '57'), Update(ArrayIndex(Var('Elem', '58'), [Var('result', '59'), Var('e', '60'), BinaryExpr('*', Number(2), Var('esize', '61'), '62')], '63'), ArrayIndex(Var('sum', '64'), [SliceRange(BinaryExpr('-', BinaryExpr('*', Number(2), Var('esize', '65'), '66'), Number(1), '67'), Number(0), '68')], '69'))], 1, '71'), Update(ArrayIndex(Var('V', '72'), [Var('d', '73')], '74'), Var('result', '75'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='USUBW Vd.8H,Vn.8H,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'part': 0, 'elements': 8, 'sub_op': True, 'unsigned': True}, belongs_to='aarch64_vector_arithmetic_binary_disparate_add_sub_wide'),
    'vtrn1_s16': ARMSema(intrin='vtrn1_s16', inst='TRN1', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='int16x4_t', ret_is_signed=True, inst_form='TRN1 Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'part': 0, 'pairs': 2}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn1_s32': ARMSema(intrin='vtrn1_s32', inst='TRN1', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='int32x2_t', ret_is_signed=True, inst_form='TRN1 Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'part': 0, 'pairs': 1}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn1_s8': ARMSema(intrin='vtrn1_s8', inst='TRN1', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='int8x8_t', ret_is_signed=True, inst_form='TRN1 Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'part': 0, 'pairs': 4}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn1_u16': ARMSema(intrin='vtrn1_u16', inst='TRN1', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='TRN1 Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'part': 0, 'pairs': 2}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn1_u32': ARMSema(intrin='vtrn1_u32', inst='TRN1', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='TRN1 Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'part': 0, 'pairs': 1}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn1_u8': ARMSema(intrin='vtrn1_u8', inst='TRN1', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='TRN1 Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'part': 0, 'pairs': 4}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn1q_s16': ARMSema(intrin='vtrn1q_s16', inst='TRN1', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='int16x8_t', ret_is_signed=True, inst_form='TRN1 Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'part': 0, 'pairs': 4}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn1q_s32': ARMSema(intrin='vtrn1q_s32', inst='TRN1', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='int32x4_t', ret_is_signed=True, inst_form='TRN1 Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'part': 0, 'pairs': 2}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn1q_s64': ARMSema(intrin='vtrn1q_s64', inst='TRN1', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='int64x2_t', ret_is_signed=True, inst_form='TRN1 Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'part': 0, 'pairs': 1}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn1q_s8': ARMSema(intrin='vtrn1q_s8', inst='TRN1', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='int8x16_t', ret_is_signed=True, inst_form='TRN1 Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'part': 0, 'pairs': 8}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn1q_u16': ARMSema(intrin='vtrn1q_u16', inst='TRN1', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='TRN1 Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'part': 0, 'pairs': 4}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn1q_u32': ARMSema(intrin='vtrn1q_u32', inst='TRN1', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='TRN1 Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'part': 0, 'pairs': 2}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn1q_u64': ARMSema(intrin='vtrn1q_u64', inst='TRN1', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='TRN1 Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'part': 0, 'pairs': 1}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn1q_u8': ARMSema(intrin='vtrn1q_u8', inst='TRN1', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='TRN1 Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'part': 0, 'pairs': 8}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn2_s16': ARMSema(intrin='vtrn2_s16', inst='TRN2', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='int16x4_t', ret_is_signed=True, inst_form='TRN2 Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'part': 1, 'pairs': 2}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn2_s32': ARMSema(intrin='vtrn2_s32', inst='TRN2', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='int32x2_t', ret_is_signed=True, inst_form='TRN2 Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'part': 1, 'pairs': 1}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn2_s8': ARMSema(intrin='vtrn2_s8', inst='TRN2', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='int8x8_t', ret_is_signed=True, inst_form='TRN2 Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'part': 1, 'pairs': 4}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn2_u16': ARMSema(intrin='vtrn2_u16', inst='TRN2', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='TRN2 Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'part': 1, 'pairs': 2}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn2_u32': ARMSema(intrin='vtrn2_u32', inst='TRN2', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='TRN2 Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'part': 1, 'pairs': 1}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn2_u8': ARMSema(intrin='vtrn2_u8', inst='TRN2', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='TRN2 Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'part': 1, 'pairs': 4}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn2q_s16': ARMSema(intrin='vtrn2q_s16', inst='TRN2', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='int16x8_t', ret_is_signed=True, inst_form='TRN2 Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'part': 1, 'pairs': 4}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn2q_s32': ARMSema(intrin='vtrn2q_s32', inst='TRN2', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='int32x4_t', ret_is_signed=True, inst_form='TRN2 Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'part': 1, 'pairs': 2}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn2q_s64': ARMSema(intrin='vtrn2q_s64', inst='TRN2', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='int64x2_t', ret_is_signed=True, inst_form='TRN2 Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'part': 1, 'pairs': 1}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn2q_s8': ARMSema(intrin='vtrn2q_s8', inst='TRN2', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='int8x16_t', ret_is_signed=True, inst_form='TRN2 Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'part': 1, 'pairs': 8}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn2q_u16': ARMSema(intrin='vtrn2q_u16', inst='TRN2', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='TRN2 Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'part': 1, 'pairs': 4}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn2q_u32': ARMSema(intrin='vtrn2q_u32', inst='TRN2', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='TRN2 Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'part': 1, 'pairs': 2}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn2q_u64': ARMSema(intrin='vtrn2q_u64', inst='TRN2', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='TRN2 Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'part': 1, 'pairs': 1}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtrn2q_u8': ARMSema(intrin='vtrn2q_u8', inst='TRN2', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), For(Var('p', '50'), Number(0), BinaryExpr('-', Var('pairs', '18'), Number(1), '19'), [Update(ArrayIndex(Var('Elem', '20'), [Var('result', '21'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '22'), '23'), Number(0), '24'), Var('esize', '25')], '26'), ArrayIndex(Var('Elem', '27'), [Var('operand1', '28'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '29'), '30'), Var('part', '31'), '32'), Var('esize', '33')], '34')), Update(ArrayIndex(Var('Elem', '35'), [Var('result', '36'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '37'), '38'), Number(1), '39'), Var('esize', '40')], '41'), ArrayIndex(Var('Elem', '42'), [Var('operand2', '43'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '44'), '45'), Var('part', '46'), '47'), Var('esize', '48')], '49'))], 1, '51'), Update(ArrayIndex(Var('V', '52'), [Var('d', '53')], '54'), Var('result', '55'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='TRN2 Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'part': 1, 'pairs': 8}, belongs_to='aarch64_vector_transfer_vector_permute_transpose'),
    'vtst_s16': ARMSema(intrin='vtst_s16', inst='CMTST', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='CMTST Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'and_test': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vtst_s32': ARMSema(intrin='vtst_s32', inst='CMTST', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='CMTST Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'and_test': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vtst_s64': ARMSema(intrin='vtst_s64', inst='CMTST', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='CMTST Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'and_test': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_sisd'),
    'vtst_s8': ARMSema(intrin='vtst_s8', inst='CMTST', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='CMTST Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'and_test': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vtst_u16': ARMSema(intrin='vtst_u16', inst='CMTST', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='CMTST Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'and_test': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vtst_u32': ARMSema(intrin='vtst_u32', inst='CMTST', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='CMTST Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'and_test': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vtst_u64': ARMSema(intrin='vtst_u64', inst='CMTST', params=[Parameter(name='a', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x1_t', ret_is_signed=False, inst_form='CMTST Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'and_test': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_sisd'),
    'vtst_u8': ARMSema(intrin='vtst_u8', inst='CMTST', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='CMTST Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'and_test': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vtstd_s64': ARMSema(intrin='vtstd_s64', inst='CMTST', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64_t', ret_is_signed=False, inst_form='CMTST Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'and_test': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_sisd'),
    'vtstd_u64': ARMSema(intrin='vtstd_u64', inst='CMTST', params=[Parameter(name='a', type='uint64_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64_t', ret_is_signed=False, inst_form='CMTST Dd,Dn,Dm', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'and_test': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_sisd'),
    'vtstq_s16': ARMSema(intrin='vtstq_s16', inst='CMTST', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='CMTST Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'and_test': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vtstq_s32': ARMSema(intrin='vtstq_s32', inst='CMTST', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='CMTST Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'and_test': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vtstq_s64': ARMSema(intrin='vtstq_s64', inst='CMTST', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='CMTST Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'and_test': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vtstq_s8': ARMSema(intrin='vtstq_s8', inst='CMTST', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='CMTST Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'and_test': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vtstq_u16': ARMSema(intrin='vtstq_u16', inst='CMTST', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='CMTST Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'and_test': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vtstq_u32': ARMSema(intrin='vtstq_u32', inst='CMTST', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='CMTST Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'and_test': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vtstq_u64': ARMSema(intrin='vtstq_u64', inst='CMTST', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='CMTST Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'and_test': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vtstq_u8': ARMSema(intrin='vtstq_u8', inst='CMTST', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarsDecl([Var('element1', '19')], ('bits', Var('esize', '18')), '20'), VarsDecl([Var('element2', '22')], ('bits', Var('esize', '21')), '23'), VarsDecl([Var('test_passed', '24')], ('boolean', Number(1)), '25'), For(Var('e', '64'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(Var('element1', '28'), ArrayIndex(Var('Elem', '29'), [Var('operand1', '30'), Var('e', '31'), Var('esize', '32')], '33')), Update(Var('element2', '34'), ArrayIndex(Var('Elem', '35'), [Var('operand2', '36'), Var('e', '37'), Var('esize', '38')], '39')), IfElse(Var('and_test', '40'), [Update(Var('test_passed', '41'), UnaryExpr('!', Call('IsZero', [BinaryExpr('AND', Var('element1', '43'), Var('element2', '44'), '45')], '46'), '47'))], [Update(Var('test_passed', '48'), BinaryExpr('==', Var('element1', '49'), Var('element2', '50'), '51'))], '52'), Update(ArrayIndex(Var('Elem', '53'), [Var('result', '54'), Var('e', '55'), Var('esize', '56')], '57'), IfElse(Var('test_passed', '60'), Call('Ones', [], '59'), Call('Zeros', [], '62'), '63'))], 1, '65'), Update(ArrayIndex(Var('V', '66'), [Var('d', '67')], '68'), Var('result', '69'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='CMTST Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'and_test': True}, belongs_to='aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd'),
    'vuqadd_s16': ARMSema(intrin='vuqadd_s16', inst='SUQADD', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarDeclInit(VarsDecl([Var('operand2', '15')], ('bits', Var('datasize', '11')), '16'), ArrayIndex(Var('V', '12'), [Var('d', '13')], '14'), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('op1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), Var('esize', '31')], '32'), UnaryExpr('!', Var('unsigned', '33'), '34')], '35')), Update(Var('op2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), Var('esize', '48')], '49'), Call('SatQ', [BinaryExpr('+', Var('op1', '51'), Var('op2', '52'), '53'), Var('esize', '54'), Var('unsigned', '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int16x4_t', ret_is_signed=True, inst_form='SUQADD Vd.4H,Vn.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_add_saturating_simd'),
    'vuqadd_s32': ARMSema(intrin='vuqadd_s32', inst='SUQADD', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarDeclInit(VarsDecl([Var('operand2', '15')], ('bits', Var('datasize', '11')), '16'), ArrayIndex(Var('V', '12'), [Var('d', '13')], '14'), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('op1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), Var('esize', '31')], '32'), UnaryExpr('!', Var('unsigned', '33'), '34')], '35')), Update(Var('op2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), Var('esize', '48')], '49'), Call('SatQ', [BinaryExpr('+', Var('op1', '51'), Var('op2', '52'), '53'), Var('esize', '54'), Var('unsigned', '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int32x2_t', ret_is_signed=True, inst_form='SUQADD Vd.2S,Vn.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_add_saturating_simd'),
    'vuqadd_s64': ARMSema(intrin='vuqadd_s64', inst='SUQADD', params=[Parameter(name='a', type='int64x1_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x1_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarDeclInit(VarsDecl([Var('operand2', '15')], ('bits', Var('datasize', '11')), '16'), ArrayIndex(Var('V', '12'), [Var('d', '13')], '14'), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('op1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), Var('esize', '31')], '32'), UnaryExpr('!', Var('unsigned', '33'), '34')], '35')), Update(Var('op2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), Var('esize', '48')], '49'), Call('SatQ', [BinaryExpr('+', Var('op1', '51'), Var('op2', '52'), '53'), Var('esize', '54'), Var('unsigned', '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int64x1_t', ret_is_signed=True, inst_form='SUQADD Dd,Dn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_add_saturating_sisd'),
    'vuqadd_s8': ARMSema(intrin='vuqadd_s8', inst='SUQADD', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarDeclInit(VarsDecl([Var('operand2', '15')], ('bits', Var('datasize', '11')), '16'), ArrayIndex(Var('V', '12'), [Var('d', '13')], '14'), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('op1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), Var('esize', '31')], '32'), UnaryExpr('!', Var('unsigned', '33'), '34')], '35')), Update(Var('op2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), Var('esize', '48')], '49'), Call('SatQ', [BinaryExpr('+', Var('op1', '51'), Var('op2', '52'), '53'), Var('esize', '54'), Var('unsigned', '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int8x8_t', ret_is_signed=True, inst_form='SUQADD Vd.8B,Vn.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_add_saturating_simd'),
    'vuqaddb_s8': ARMSema(intrin='vuqaddb_s8', inst='SUQADD', params=[Parameter(name='a', type='int8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='uint8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarDeclInit(VarsDecl([Var('operand2', '15')], ('bits', Var('datasize', '11')), '16'), ArrayIndex(Var('V', '12'), [Var('d', '13')], '14'), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('op1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), Var('esize', '31')], '32'), UnaryExpr('!', Var('unsigned', '33'), '34')], '35')), Update(Var('op2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), Var('esize', '48')], '49'), Call('SatQ', [BinaryExpr('+', Var('op1', '51'), Var('op2', '52'), '53'), Var('esize', '54'), Var('unsigned', '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int8_t', ret_is_signed=True, inst_form='SUQADD Bd,Bn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 8, 'datasize': 8, 'elements': 1, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_add_saturating_sisd'),
    'vuqaddd_s64': ARMSema(intrin='vuqaddd_s64', inst='SUQADD', params=[Parameter(name='a', type='int64_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='uint64_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarDeclInit(VarsDecl([Var('operand2', '15')], ('bits', Var('datasize', '11')), '16'), ArrayIndex(Var('V', '12'), [Var('d', '13')], '14'), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('op1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), Var('esize', '31')], '32'), UnaryExpr('!', Var('unsigned', '33'), '34')], '35')), Update(Var('op2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), Var('esize', '48')], '49'), Call('SatQ', [BinaryExpr('+', Var('op1', '51'), Var('op2', '52'), '53'), Var('esize', '54'), Var('unsigned', '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int64_t', ret_is_signed=True, inst_form='SUQADD Dd,Dn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 64, 'datasize': 64, 'elements': 1, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_add_saturating_sisd'),
    'vuqaddh_s16': ARMSema(intrin='vuqaddh_s16', inst='SUQADD', params=[Parameter(name='a', type='int16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='uint16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarDeclInit(VarsDecl([Var('operand2', '15')], ('bits', Var('datasize', '11')), '16'), ArrayIndex(Var('V', '12'), [Var('d', '13')], '14'), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('op1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), Var('esize', '31')], '32'), UnaryExpr('!', Var('unsigned', '33'), '34')], '35')), Update(Var('op2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), Var('esize', '48')], '49'), Call('SatQ', [BinaryExpr('+', Var('op1', '51'), Var('op2', '52'), '53'), Var('esize', '54'), Var('unsigned', '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int16_t', ret_is_signed=True, inst_form='SUQADD Hd,Hn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_add_saturating_sisd'),
    'vuqaddq_s16': ARMSema(intrin='vuqaddq_s16', inst='SUQADD', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarDeclInit(VarsDecl([Var('operand2', '15')], ('bits', Var('datasize', '11')), '16'), ArrayIndex(Var('V', '12'), [Var('d', '13')], '14'), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('op1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), Var('esize', '31')], '32'), UnaryExpr('!', Var('unsigned', '33'), '34')], '35')), Update(Var('op2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), Var('esize', '48')], '49'), Call('SatQ', [BinaryExpr('+', Var('op1', '51'), Var('op2', '52'), '53'), Var('esize', '54'), Var('unsigned', '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int16x8_t', ret_is_signed=True, inst_form='SUQADD Vd.8H,Vn.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_add_saturating_simd'),
    'vuqaddq_s32': ARMSema(intrin='vuqaddq_s32', inst='SUQADD', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarDeclInit(VarsDecl([Var('operand2', '15')], ('bits', Var('datasize', '11')), '16'), ArrayIndex(Var('V', '12'), [Var('d', '13')], '14'), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('op1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), Var('esize', '31')], '32'), UnaryExpr('!', Var('unsigned', '33'), '34')], '35')), Update(Var('op2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), Var('esize', '48')], '49'), Call('SatQ', [BinaryExpr('+', Var('op1', '51'), Var('op2', '52'), '53'), Var('esize', '54'), Var('unsigned', '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int32x4_t', ret_is_signed=True, inst_form='SUQADD Vd.4S,Vn.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_add_saturating_simd'),
    'vuqaddq_s64': ARMSema(intrin='vuqaddq_s64', inst='SUQADD', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarDeclInit(VarsDecl([Var('operand2', '15')], ('bits', Var('datasize', '11')), '16'), ArrayIndex(Var('V', '12'), [Var('d', '13')], '14'), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('op1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), Var('esize', '31')], '32'), UnaryExpr('!', Var('unsigned', '33'), '34')], '35')), Update(Var('op2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), Var('esize', '48')], '49'), Call('SatQ', [BinaryExpr('+', Var('op1', '51'), Var('op2', '52'), '53'), Var('esize', '54'), Var('unsigned', '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int64x2_t', ret_is_signed=True, inst_form='SUQADD Vd.2D,Vn.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_add_saturating_simd'),
    'vuqaddq_s8': ARMSema(intrin='vuqaddq_s8', inst='SUQADD', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarDeclInit(VarsDecl([Var('operand2', '15')], ('bits', Var('datasize', '11')), '16'), ArrayIndex(Var('V', '12'), [Var('d', '13')], '14'), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('op1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), Var('esize', '31')], '32'), UnaryExpr('!', Var('unsigned', '33'), '34')], '35')), Update(Var('op2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), Var('esize', '48')], '49'), Call('SatQ', [BinaryExpr('+', Var('op1', '51'), Var('op2', '52'), '53'), Var('esize', '54'), Var('unsigned', '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int8x16_t', ret_is_signed=True, inst_form='SUQADD Vd.16B,Vn.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_add_saturating_simd'),
    'vuqadds_s32': ARMSema(intrin='vuqadds_s32', inst='SUQADD', params=[Parameter(name='a', type='int32_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='uint32_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarsDecl([Var('result', '9')], ('bits', Var('datasize', '8')), '10'), VarDeclInit(VarsDecl([Var('operand2', '15')], ('bits', Var('datasize', '11')), '16'), ArrayIndex(Var('V', '12'), [Var('d', '13')], '14'), '17'), VarsDecl([Var('op1', '18')], ('integer', Number(64)), '19'), VarsDecl([Var('op2', '20')], ('integer', Number(64)), '21'), VarsDecl([Var('sat', '22')], ('boolean', Number(1)), '23'), For(Var('e', '57'), Number(0), BinaryExpr('-', Var('elements', '24'), Number(1), '25'), [Update(Var('op1', '26'), Call('Int', [ArrayIndex(Var('Elem', '28'), [Var('operand', '29'), Var('e', '30'), Var('esize', '31')], '32'), UnaryExpr('!', Var('unsigned', '33'), '34')], '35')), Update(Var('op2', '36'), Call('Int', [ArrayIndex(Var('Elem', '38'), [Var('operand2', '39'), Var('e', '40'), Var('esize', '41')], '42'), Var('unsigned', '43')], '44')), Update(ArrayIndex(Var('Elem', '45'), [Var('result', '46'), Var('e', '47'), Var('esize', '48')], '49'), Call('SatQ', [BinaryExpr('+', Var('op1', '51'), Var('op2', '52'), '53'), Var('esize', '54'), Var('unsigned', '55')], '56'))], 1, '58'), Update(ArrayIndex(Var('V', '59'), [Var('d', '60')], '61'), Var('result', '62'))], rettype='int32_t', ret_is_signed=True, inst_form='SUQADD Sd,Sn', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'a', 'n': 'b'}, resolving={'esize': 32, 'datasize': 32, 'elements': 1, 'unsigned': False}, belongs_to='aarch64_vector_arithmetic_unary_add_saturating_sisd'),
    'vuzp1_s16': ARMSema(intrin='vuzp1_s16', inst='UZP1', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='int16x4_t', ret_is_signed=True, inst_form='UZP1 Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'part': 0}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp1_s32': ARMSema(intrin='vuzp1_s32', inst='UZP1', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='int32x2_t', ret_is_signed=True, inst_form='UZP1 Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'part': 0}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp1_s8': ARMSema(intrin='vuzp1_s8', inst='UZP1', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='int8x8_t', ret_is_signed=True, inst_form='UZP1 Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'part': 0}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp1_u16': ARMSema(intrin='vuzp1_u16', inst='UZP1', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='UZP1 Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'part': 0}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp1_u32': ARMSema(intrin='vuzp1_u32', inst='UZP1', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='UZP1 Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'part': 0}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp1_u8': ARMSema(intrin='vuzp1_u8', inst='UZP1', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='UZP1 Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'part': 0}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp1q_s16': ARMSema(intrin='vuzp1q_s16', inst='UZP1', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='int16x8_t', ret_is_signed=True, inst_form='UZP1 Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'part': 0}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp1q_s32': ARMSema(intrin='vuzp1q_s32', inst='UZP1', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='int32x4_t', ret_is_signed=True, inst_form='UZP1 Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'part': 0}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp1q_s64': ARMSema(intrin='vuzp1q_s64', inst='UZP1', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='int64x2_t', ret_is_signed=True, inst_form='UZP1 Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'part': 0}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp1q_s8': ARMSema(intrin='vuzp1q_s8', inst='UZP1', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='int8x16_t', ret_is_signed=True, inst_form='UZP1 Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'part': 0}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp1q_u16': ARMSema(intrin='vuzp1q_u16', inst='UZP1', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UZP1 Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'part': 0}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp1q_u32': ARMSema(intrin='vuzp1q_u32', inst='UZP1', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UZP1 Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'part': 0}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp1q_u64': ARMSema(intrin='vuzp1q_u64', inst='UZP1', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UZP1 Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'part': 0}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp1q_u8': ARMSema(intrin='vuzp1q_u8', inst='UZP1', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='UZP1 Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'part': 0}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp2_s16': ARMSema(intrin='vuzp2_s16', inst='UZP2', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='int16x4_t', ret_is_signed=True, inst_form='UZP2 Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'part': 1}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp2_s32': ARMSema(intrin='vuzp2_s32', inst='UZP2', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='int32x2_t', ret_is_signed=True, inst_form='UZP2 Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'part': 1}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp2_s8': ARMSema(intrin='vuzp2_s8', inst='UZP2', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='int8x8_t', ret_is_signed=True, inst_form='UZP2 Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'part': 1}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp2_u16': ARMSema(intrin='vuzp2_u16', inst='UZP2', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='UZP2 Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'part': 1}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp2_u32': ARMSema(intrin='vuzp2_u32', inst='UZP2', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='UZP2 Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'part': 1}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp2_u8': ARMSema(intrin='vuzp2_u8', inst='UZP2', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='UZP2 Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'part': 1}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp2q_s16': ARMSema(intrin='vuzp2q_s16', inst='UZP2', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='int16x8_t', ret_is_signed=True, inst_form='UZP2 Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'part': 1}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp2q_s32': ARMSema(intrin='vuzp2q_s32', inst='UZP2', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='int32x4_t', ret_is_signed=True, inst_form='UZP2 Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'part': 1}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp2q_s64': ARMSema(intrin='vuzp2q_s64', inst='UZP2', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='int64x2_t', ret_is_signed=True, inst_form='UZP2 Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'part': 1}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp2q_s8': ARMSema(intrin='vuzp2q_s8', inst='UZP2', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='int8x16_t', ret_is_signed=True, inst_form='UZP2 Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'part': 1}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp2q_u16': ARMSema(intrin='vuzp2q_u16', inst='UZP2', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='UZP2 Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'part': 1}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp2q_u32': ARMSema(intrin='vuzp2q_u32', inst='UZP2', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='UZP2 Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'part': 1}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp2q_u64': ARMSema(intrin='vuzp2q_u64', inst='UZP2', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='UZP2 Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'part': 1}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vuzp2q_u8': ARMSema(intrin='vuzp2q_u8', inst='UZP2', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operandl', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operandh', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('zipped', '23')], ('bits', BinaryExpr('*', Var('datasize', '18'), Number(2), '19')), '24'), BinaryExpr(':', Var('operandh', '20'), Var('operandl', '21'), '22'), '25'), For(Var('e', '41'), Number(0), BinaryExpr('-', Var('elements', '26'), Number(1), '27'), [Update(ArrayIndex(Var('Elem', '28'), [Var('result', '29'), Var('e', '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('zipped', '34'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('e', '35'), '36'), Var('part', '37'), '38'), Var('esize', '39')], '40'))], 1, '42'), Update(ArrayIndex(Var('V', '43'), [Var('d', '44')], '45'), Var('result', '46'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='UZP2 Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'part': 1}, belongs_to='aarch64_vector_transfer_vector_permute_unzip'),
    'vzip1_s16': ARMSema(intrin='vzip1_s16', inst='ZIP1', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='int16x4_t', ret_is_signed=True, inst_form='ZIP1 Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'part': 0, 'pairs': 2}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip1_s32': ARMSema(intrin='vzip1_s32', inst='ZIP1', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='int32x2_t', ret_is_signed=True, inst_form='ZIP1 Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'part': 0, 'pairs': 1}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip1_s8': ARMSema(intrin='vzip1_s8', inst='ZIP1', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='int8x8_t', ret_is_signed=True, inst_form='ZIP1 Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'part': 0, 'pairs': 4}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip1_u16': ARMSema(intrin='vzip1_u16', inst='ZIP1', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='ZIP1 Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'part': 0, 'pairs': 2}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip1_u32': ARMSema(intrin='vzip1_u32', inst='ZIP1', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='ZIP1 Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'part': 0, 'pairs': 1}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip1_u8': ARMSema(intrin='vzip1_u8', inst='ZIP1', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='ZIP1 Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'part': 0, 'pairs': 4}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip1q_s16': ARMSema(intrin='vzip1q_s16', inst='ZIP1', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='int16x8_t', ret_is_signed=True, inst_form='ZIP1 Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'part': 0, 'pairs': 4}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip1q_s32': ARMSema(intrin='vzip1q_s32', inst='ZIP1', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='int32x4_t', ret_is_signed=True, inst_form='ZIP1 Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'part': 0, 'pairs': 2}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip1q_s64': ARMSema(intrin='vzip1q_s64', inst='ZIP1', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='int64x2_t', ret_is_signed=True, inst_form='ZIP1 Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'part': 0, 'pairs': 1}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip1q_s8': ARMSema(intrin='vzip1q_s8', inst='ZIP1', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='int8x16_t', ret_is_signed=True, inst_form='ZIP1 Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'part': 0, 'pairs': 8}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip1q_u16': ARMSema(intrin='vzip1q_u16', inst='ZIP1', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='ZIP1 Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'part': 0, 'pairs': 4}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip1q_u32': ARMSema(intrin='vzip1q_u32', inst='ZIP1', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='ZIP1 Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'part': 0, 'pairs': 2}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip1q_u64': ARMSema(intrin='vzip1q_u64', inst='ZIP1', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='ZIP1 Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'part': 0, 'pairs': 1}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip1q_u8': ARMSema(intrin='vzip1q_u8', inst='ZIP1', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='ZIP1 Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'part': 0, 'pairs': 8}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip2_s16': ARMSema(intrin='vzip2_s16', inst='ZIP2', params=[Parameter(name='a', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='int16x4_t', ret_is_signed=True, inst_form='ZIP2 Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'part': 1, 'pairs': 2}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip2_s32': ARMSema(intrin='vzip2_s32', inst='ZIP2', params=[Parameter(name='a', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='int32x2_t', ret_is_signed=True, inst_form='ZIP2 Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'part': 1, 'pairs': 1}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip2_s8': ARMSema(intrin='vzip2_s8', inst='ZIP2', params=[Parameter(name='a', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='int8x8_t', ret_is_signed=True, inst_form='ZIP2 Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'part': 1, 'pairs': 4}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip2_u16': ARMSema(intrin='vzip2_u16', inst='ZIP2', params=[Parameter(name='a', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='uint16x4_t', ret_is_signed=False, inst_form='ZIP2 Vd.4H,Vn.4H,Vm.4H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 64, 'elements': 4, 'part': 1, 'pairs': 2}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip2_u32': ARMSema(intrin='vzip2_u32', inst='ZIP2', params=[Parameter(name='a', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='uint32x2_t', ret_is_signed=False, inst_form='ZIP2 Vd.2S,Vn.2S,Vm.2S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 64, 'elements': 2, 'part': 1, 'pairs': 1}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip2_u8': ARMSema(intrin='vzip2_u8', inst='ZIP2', params=[Parameter(name='a', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='uint8x8_t', ret_is_signed=False, inst_form='ZIP2 Vd.8B,Vn.8B,Vm.8B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 64, 'elements': 8, 'part': 1, 'pairs': 4}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip2q_s16': ARMSema(intrin='vzip2q_s16', inst='ZIP2', params=[Parameter(name='a', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int16x8_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='int16x8_t', ret_is_signed=True, inst_form='ZIP2 Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'part': 1, 'pairs': 4}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip2q_s32': ARMSema(intrin='vzip2q_s32', inst='ZIP2', params=[Parameter(name='a', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int32x4_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='int32x4_t', ret_is_signed=True, inst_form='ZIP2 Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'part': 1, 'pairs': 2}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip2q_s64': ARMSema(intrin='vzip2q_s64', inst='ZIP2', params=[Parameter(name='a', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int64x2_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='int64x2_t', ret_is_signed=True, inst_form='ZIP2 Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'part': 1, 'pairs': 1}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip2q_s8': ARMSema(intrin='vzip2q_s8', inst='ZIP2', params=[Parameter(name='a', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False), Parameter(name='b', type='int8x16_t', is_signed=True, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='int8x16_t', ret_is_signed=True, inst_form='ZIP2 Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'part': 1, 'pairs': 8}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip2q_u16': ARMSema(intrin='vzip2q_u16', inst='ZIP2', params=[Parameter(name='a', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint16x8_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='uint16x8_t', ret_is_signed=False, inst_form='ZIP2 Vd.8H,Vn.8H,Vm.8H', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 16, 'datasize': 128, 'elements': 8, 'part': 1, 'pairs': 4}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip2q_u32': ARMSema(intrin='vzip2q_u32', inst='ZIP2', params=[Parameter(name='a', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint32x4_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='uint32x4_t', ret_is_signed=False, inst_form='ZIP2 Vd.4S,Vn.4S,Vm.4S', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 32, 'datasize': 128, 'elements': 4, 'part': 1, 'pairs': 2}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip2q_u64': ARMSema(intrin='vzip2q_u64', inst='ZIP2', params=[Parameter(name='a', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint64x2_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='uint64x2_t', ret_is_signed=False, inst_form='ZIP2 Vd.2D,Vn.2D,Vm.2D', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 64, 'datasize': 128, 'elements': 2, 'part': 1, 'pairs': 1}, belongs_to='aarch64_vector_transfer_vector_permute_zip'),
    'vzip2q_u8': ARMSema(intrin='vzip2q_u8', inst='ZIP2', params=[Parameter(name='a', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False), Parameter(name='b', type='uint8x16_t', is_signed=False, is_imm=False, is_mask=False)], spec=[VarDeclInit(VarsDecl([Var('operand1', '5')], ('bits', Var('datasize', '1')), '6'), ArrayIndex(Var('V', '2'), [Var('n', '3')], '4'), '7'), VarDeclInit(VarsDecl([Var('operand2', '12')], ('bits', Var('datasize', '8')), '13'), ArrayIndex(Var('V', '9'), [Var('m', '10')], '11'), '14'), VarsDecl([Var('result', '16')], ('bits', Var('datasize', '15')), '17'), VarDeclInit(VarsDecl([Var('base', '21')], ('integer', Number(64)), '22'), BinaryExpr('*', Var('part', '18'), Var('pairs', '19'), '20'), '23'), For(Var('p', '54'), Number(0), BinaryExpr('-', Var('pairs', '24'), Number(1), '25'), [Update(ArrayIndex(Var('Elem', '26'), [Var('result', '27'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '28'), '29'), Number(0), '30'), Var('esize', '31')], '32'), ArrayIndex(Var('Elem', '33'), [Var('operand1', '34'), BinaryExpr('+', Var('base', '35'), Var('p', '36'), '37'), Var('esize', '38')], '39')), Update(ArrayIndex(Var('Elem', '40'), [Var('result', '41'), BinaryExpr('+', BinaryExpr('*', Number(2), Var('p', '42'), '43'), Number(1), '44'), Var('esize', '45')], '46'), ArrayIndex(Var('Elem', '47'), [Var('operand2', '48'), BinaryExpr('+', Var('base', '49'), Var('p', '50'), '51'), Var('esize', '52')], '53'))], 1, '55'), Update(ArrayIndex(Var('V', '56'), [Var('d', '57')], '58'), Var('result', '59'))], rettype='uint8x16_t', ret_is_signed=False, inst_form='ZIP2 Vd.16B,Vn.16B,Vm.16B', extensions=None, imm_width=None, xed=None, elem_type=None, preparation={'d': 'returnVal', 'n': 'a', 'm': 'b'}, resolving={'esize': 8, 'datasize': 128, 'elements': 16, 'part': 1, 'pairs': 8}, belongs_to='aarch64_vector_transfer_vector_permute_zip')}