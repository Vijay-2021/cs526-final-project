#lang rosette
(define (vadd_u16  a b )
(define result
(apply
concat
(for/list ([e0 (reverse (range 0 4 1))])
 (define %1 (*  e0  16))
 (define %2 (+  e0  1))
 (define %3 (*  %2  16))
 (define %4 (-  %3  1))
 (define %5 (extract  %4 %1 a))
 (define %6 (*  e0  16))
 (define %7 (+  e0  1))
 (define %8 (*  %7  16))
 (define %9 (-  %8  1))
 (define %10 (extract  %9 %6 b))
 (define %11 (bvadd  %5  %10))
 %11
)
)
)
result)
(define a0 (bv #xffd7eb77e96d7ddf 64))
(define b0 (bv #x8652edcbd3ab9069 64))
(assert (eq? (vadd_u16 a0 b0) (bv #x8629d942bd180e48 64)))
(define a1 (bv #x785ab859ca25289e 64))
(define b1 (bv #xa13b8bb825fe5e36 64))
(assert (eq? (vadd_u16 a1 b1) (bv #x19954411f02386d4 64)))
(define a2 (bv #x965829bab07a182a 64))
(define b2 (bv #xa235446588bbcb7e 64))
(assert (eq? (vadd_u16 a2 b2) (bv #x388d6e1f3935e3a8 64)))
(define a3 (bv #x7d3eb77358189035 64))
(define b3 (bv #x36b32dd6f48330f7 64))
(assert (eq? (vadd_u16 a3 b3) (bv #xb3f1e5494c9bc12c 64)))
(define a4 (bv #x272b61b605d2db08 64))
(define b4 (bv #x289fe6b90602eb13 64))
(assert (eq? (vadd_u16 a4 b4) (bv #x4fca486f0bd4c61b 64)))
(define a5 (bv #x79ae6120ea247df4 64))
(define b5 (bv #xe6211d214b7bee3c 64))
(assert (eq? (vadd_u16 a5 b5) (bv #x5fcf7e41359f6c30 64)))
(define a6 (bv #x33782739f5d877c8 64))
(define b6 (bv #xa4ea698238419b5e 64))
(assert (eq? (vadd_u16 a6 b6) (bv #xd86290bb2e191326 64)))
(define a7 (bv #x9e6e330728c71461 64))
(define b7 (bv #x1c4ef258b1dcb847 64))
(assert (eq? (vadd_u16 a7 b7) (bv #xbabc255fdaa3cca8 64)))
(define a8 (bv #x225ef8ce3b4e6de9 64))
(define b8 (bv #x95426e3beffb4cd3 64))
(assert (eq? (vadd_u16 a8 b8) (bv #xb7a067092b49babc 64)))
(define a9 (bv #xb947317734596b90 64))
(define b9 (bv #xf0eb48de88b7d69b 64))
(assert (eq? (vadd_u16 a9 b9) (bv #xaa327a55bd10422b 64)))
