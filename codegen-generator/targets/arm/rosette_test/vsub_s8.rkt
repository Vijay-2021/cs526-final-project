#lang rosette
(define (vsub_s8  a b )
(define result
(apply
concat
(for/list ([e0 (reverse (range 0 8 1))])
 (define %1 (*  e0  8))
 (define %2 (+  e0  1))
 (define %3 (*  %2  8))
 (define %4 (-  %3  1))
 (define %5 (extract  %4 %1 a))
 (define %6 (*  e0  8))
 (define %7 (+  e0  1))
 (define %8 (*  %7  8))
 (define %9 (-  %8  1))
 (define %10 (extract  %9 %6 b))
 (define %11 (bvsub  %5  %10))
 %11
)
)
)
result)
(define a0 (bv #x41ee7a8d65ce6edd 64))
(define b0 (bv #x73ccc838b80e6d74 64))
(assert (eq? (vsub_s8 a0 b0) (bv #xce22b255adc00169 64)))
(define a1 (bv #x13fbcf28f1df90f6 64))
(define b1 (bv #x94f07d3fcda98be9 64))
(assert (eq? (vsub_s8 a1 b1) (bv #x7f0b52e92436050d 64)))
(define a2 (bv #x46daf0d86b0a5f8c 64))
(define b2 (bv #xd358db0ad64aeb38 64))
(assert (eq? (vsub_s8 a2 b2) (bv #x738215ce95c07454 64)))
(define a3 (bv #x7ce0f7e141161205 64))
(define b3 (bv #x047eda6460084e98 64))
(assert (eq? (vsub_s8 a3 b3) (bv #x78621d7de10ec46d 64)))
(define a4 (bv #x354606a0c26e4104 64))
(define b4 (bv #xc2af14b4a9283318 64))
(assert (eq? (vsub_s8 a4 b4) (bv #x7397f2ec19460eec 64)))
(define a5 (bv #xc09d6dbffe729f30 64))
(define b5 (bv #x2e58614348d0cdfa 64))
(assert (eq? (vsub_s8 a5 b5) (bv #x92450c7cb6a2d236 64)))
(define a6 (bv #x11f90d982420705a 64))
(define b6 (bv #x5318acbd8f5f58d8 64))
(assert (eq? (vsub_s8 a6 b6) (bv #xbee161db95c11882 64)))
(define a7 (bv #xb572fd6e3d75d462 64))
(define b7 (bv #xaf94ad0666f1c48c 64))
(assert (eq? (vsub_s8 a7 b7) (bv #x06de5068d78410d6 64)))
(define a8 (bv #xf52311028af42efd 64))
(define b8 (bv #x272f1e9f2371afff 64))
(assert (eq? (vsub_s8 a8 b8) (bv #xcef4f36367837ffe 64)))
(define a9 (bv #x2d1c18ba04fb8c0d 64))
(define b9 (bv #xed82a75ce6179eb4 64))
(assert (eq? (vsub_s8 a9 b9) (bv #x409a715e1ee4ee59 64)))
