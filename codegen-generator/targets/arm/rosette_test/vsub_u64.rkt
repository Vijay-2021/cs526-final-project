#lang rosette
(define (vsub_u64  a b )
(define result
(apply
concat
(for/list ([e0 (reverse (range 0 1 1))])
 (define %1 (*  e0  64))
 (define %2 (+  e0  1))
 (define %3 (*  %2  64))
 (define %4 (-  %3  1))
 (define %5 (extract  %4 %1 a))
 (define %6 (*  e0  64))
 (define %7 (+  e0  1))
 (define %8 (*  %7  64))
 (define %9 (-  %8  1))
 (define %10 (extract  %9 %6 b))
 (define %11 (bvsub  %5  %10))
 %11
)
)
)
result)
(define a0 (bv #xe8c841cc3a703d09 64))
(define b0 (bv #xf4b09974f99cbe1d 64))
(assert (eq? (vsub_u64 a0 b0) (bv #xf417a85740d37eec 64)))
(define a1 (bv #xd0d7d24b415412b6 64))
(define b1 (bv #x29ad00cdfa0e903e 64))
(assert (eq? (vsub_u64 a1 b1) (bv #xa72ad17d47458278 64)))
(define a2 (bv #x997767d17923f37e 64))
(define b2 (bv #xa6d917d7492c1c28 64))
(assert (eq? (vsub_u64 a2 b2) (bv #xf29e4ffa2ff7d756 64)))
(define a3 (bv #x40de796b17274e1e 64))
(define b3 (bv #xad213ab6c8578576 64))
(assert (eq? (vsub_u64 a3 b3) (bv #x93bd3eb44ecfc8a8 64)))
(define a4 (bv #x608ded7fec8634cf 64))
(define b4 (bv #xda488b5dacad3b26 64))
(assert (eq? (vsub_u64 a4 b4) (bv #x864562223fd8f9a9 64)))
(define a5 (bv #x8456528a0813dccd 64))
(define b5 (bv #xd15ba8da1b09ea44 64))
(assert (eq? (vsub_u64 a5 b5) (bv #xb2faa9afed09f289 64)))
(define a6 (bv #xbc47af100bd19448 64))
(define b6 (bv #x7a81a97ab213ee3a 64))
(assert (eq? (vsub_u64 a6 b6) (bv #x41c6059559bda60e 64)))
(define a7 (bv #x421429c39d180cbd 64))
(define b7 (bv #x9c8bfb6af96d0cc3 64))
(assert (eq? (vsub_u64 a7 b7) (bv #xa5882e58a3aafffa 64)))
(define a8 (bv #x5d700c68b31a73eb 64))
(define b8 (bv #x9dac679eae1a7e27 64))
(assert (eq? (vsub_u64 a8 b8) (bv #xbfc3a4ca04fff5c4 64)))
(define a9 (bv #xe1404af2b263bcbc 64))
(define b9 (bv #x8c2db13d579af8e1 64))
(assert (eq? (vsub_u64 a9 b9) (bv #x551299b55ac8c3db 64)))
