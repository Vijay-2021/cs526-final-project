#lang rosette
(define (vadd_u8  a b )
(define result
(apply
concat
(for/list ([e0 (reverse (range 0 8 1))])
 (define %1 (*  e0  8))
 (define %2 (+  e0  1))
 (define %3 (*  %2  8))
 (define %4 (-  %3  1))
 (define %5 (extract  %4 %1 a))
 (define %6 (*  e0  8))
 (define %7 (+  e0  1))
 (define %8 (*  %7  8))
 (define %9 (-  %8  1))
 (define %10 (extract  %9 %6 b))
 (define %11 (bvadd  %5  %10))
 %11
)
)
)
result)
(define a0 (bv #x4fe88a76b89bc53a 64))
(define b0 (bv #x3d6d8f6a41378413 64))
(assert (eq? (vadd_u8 a0 b0) (bv #x8c5519e0f9d2494d 64)))
(define a1 (bv #xa31e9360e688a33e 64))
(define b1 (bv #xa5672aaee95484b5 64))
(assert (eq? (vadd_u8 a1 b1) (bv #x4885bd0ecfdc27f3 64)))
(define a2 (bv #x18b62f5739e5a8e8 64))
(define b2 (bv #x976647c28d022993 64))
(assert (eq? (vadd_u8 a2 b2) (bv #xaf1c7619c6e7d17b 64)))
(define a3 (bv #x2bb494e7222a926b 64))
(define b3 (bv #x9b8eb1b93cc2abf8 64))
(assert (eq? (vadd_u8 a3 b3) (bv #xc64245a05eec3d63 64)))
(define a4 (bv #x7b0c8bb7a52d49da 64))
(define b4 (bv #xf7e4bb71ff4a4e38 64))
(assert (eq? (vadd_u8 a4 b4) (bv #x72f04628a4779712 64)))
(define a5 (bv #x4378cdb043b83713 64))
(define b5 (bv #x384872d13b019a85 64))
(assert (eq? (vadd_u8 a5 b5) (bv #x7bc03f817eb9d198 64)))
(define a6 (bv #x7e219738a71bf392 64))
(define b6 (bv #x5690c2fff802686a 64))
(assert (eq? (vadd_u8 a6 b6) (bv #xd4b159379f1d5bfc 64)))
(define a7 (bv #xb0ff26e82fc70f56 64))
(define b7 (bv #x1c5d5f79fecb1c80 64))
(assert (eq? (vadd_u8 a7 b7) (bv #xcc5c85612d922bd6 64)))
(define a8 (bv #x7e0dfcb525f8737f 64))
(define b8 (bv #x178ef530e8b49753 64))
(assert (eq? (vadd_u8 a8 b8) (bv #x959bf1e50dac0ad2 64)))
(define a9 (bv #x53ae8d51abcdaee8 64))
(define b9 (bv #xe13372113f0815db 64))
(assert (eq? (vadd_u8 a9 b9) (bv #x34e1ff62ead5c3c3 64)))
