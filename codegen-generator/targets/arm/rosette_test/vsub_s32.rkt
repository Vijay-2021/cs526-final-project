#lang rosette
(define (vsub_s32  a b )
(define result
(apply
concat
(for/list ([e0 (reverse (range 0 2 1))])
 (define %1 (*  e0  32))
 (define %2 (+  e0  1))
 (define %3 (*  %2  32))
 (define %4 (-  %3  1))
 (define %5 (extract  %4 %1 a))
 (define %6 (*  e0  32))
 (define %7 (+  e0  1))
 (define %8 (*  %7  32))
 (define %9 (-  %8  1))
 (define %10 (extract  %9 %6 b))
 (define %11 (bvsub  %5  %10))
 %11
)
)
)
result)
(define a0 (bv #xa41896c3daff4683 64))
(define b0 (bv #xa7e62a41a007d0d7 64))
(assert (eq? (vsub_s32 a0 b0) (bv #xfc326c823af775ac 64)))
(define a1 (bv #x17dcd4b786337f67 64))
(define b1 (bv #x353b8110700c5182 64))
(assert (eq? (vsub_s32 a1 b1) (bv #xe2a153a716272de5 64)))
(define a2 (bv #xb6a5affdb056405c 64))
(define b2 (bv #xc3f2962dc2013939 64))
(assert (eq? (vsub_s32 a2 b2) (bv #xf2b319d0ee550723 64)))
(define a3 (bv #x1b2caa1672739f90 64))
(define b3 (bv #xdde85853418543a3 64))
(assert (eq? (vsub_s32 a3 b3) (bv #x3d4451c330ee5bed 64)))
(define a4 (bv #x06f5ac28f5d17e46 64))
(define b4 (bv #x6260839f2c6540c9 64))
(assert (eq? (vsub_s32 a4 b4) (bv #xa4952889c96c3d7d 64)))
(define a5 (bv #x4456053272c45321 64))
(define b5 (bv #xcb114f05a99de152 64))
(assert (eq? (vsub_s32 a5 b5) (bv #x7944b62dc92671cf 64)))
(define a6 (bv #x17b2674f1cd4766d 64))
(define b6 (bv #x2d24c31fa364a3cf 64))
(assert (eq? (vsub_s32 a6 b6) (bv #xea8da430796fd29e 64)))
(define a7 (bv #xc601c325758a8266 64))
(define b7 (bv #x15482e17a5c2ba69 64))
(assert (eq? (vsub_s32 a7 b7) (bv #xb0b9950ecfc7c7fd 64)))
(define a8 (bv #x3ede0d0a411ff00a 64))
(define b8 (bv #xd58a7963065063b5 64))
(assert (eq? (vsub_s32 a8 b8) (bv #x695393a73acf8c55 64)))
(define a9 (bv #x4756564c49387b86 64))
(define b9 (bv #xf0d3f8b3a29b1b97 64))
(assert (eq? (vsub_s32 a9 b9) (bv #x56825d99a69d5fef 64)))
