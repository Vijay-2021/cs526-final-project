#lang rosette
(define (vsub_s64  a b )
(define result
(apply
concat
(for/list ([e0 (reverse (range 0 1 1))])
 (define %1 (*  e0  64))
 (define %2 (+  e0  1))
 (define %3 (*  %2  64))
 (define %4 (-  %3  1))
 (define %5 (extract  %4 %1 a))
 (define %6 (*  e0  64))
 (define %7 (+  e0  1))
 (define %8 (*  %7  64))
 (define %9 (-  %8  1))
 (define %10 (extract  %9 %6 b))
 (define %11 (bvsub  %5  %10))
 %11
)
)
)
result)
(define a0 (bv #x07ae23a1107b3ec1 64))
(define b0 (bv #xbc8947b99e0946f0 64))
(assert (eq? (vsub_s64 a0 b0) (bv #x4b24dbe77271f7d1 64)))
(define a1 (bv #x06bbf26da890ee6d 64))
(define b1 (bv #x0d8fa05917b50b77 64))
(assert (eq? (vsub_s64 a1 b1) (bv #xf92c521490dbe2f6 64)))
(define a2 (bv #x973d46834887e6f6 64))
(define b2 (bv #x960fac0343d045f3 64))
(assert (eq? (vsub_s64 a2 b2) (bv #x012d9a8004b7a103 64)))
(define a3 (bv #x07670b9ffc2dcf09 64))
(define b3 (bv #x332fd0792ba7fa6a 64))
(assert (eq? (vsub_s64 a3 b3) (bv #xd4373b26d085d49f 64)))
(define a4 (bv #xfb6462a340b2d773 64))
(define b4 (bv #x3b4a378af022d0a9 64))
(assert (eq? (vsub_s64 a4 b4) (bv #xc01a2b18509006ca 64)))
(define a5 (bv #xdbbeb4680ab492fc 64))
(define b5 (bv #xd13d09dad002061e 64))
(assert (eq? (vsub_s64 a5 b5) (bv #x0a81aa8d3ab28cde 64)))
(define a6 (bv #x3a01587d0f1483e3 64))
(define b6 (bv #xadda835e625c6f04 64))
(assert (eq? (vsub_s64 a6 b6) (bv #x8c26d51eacb814df 64)))
(define a7 (bv #xa844625447cda02f 64))
(define b7 (bv #xe899fc1f4a2096cd 64))
(assert (eq? (vsub_s64 a7 b7) (bv #xbfaa6634fdad0962 64)))
(define a8 (bv #xf1082ea0ad00b3cb 64))
(define b8 (bv #xa23d79dab1a6b334 64))
(assert (eq? (vsub_s64 a8 b8) (bv #x4ecab4c5fb5a0097 64)))
(define a9 (bv #x18dadc96d5f047ff 64))
(define b9 (bv #xea6f8925e168b05d 64))
(assert (eq? (vsub_s64 a9 b9) (bv #x2e6b5370f48797a2 64)))
