#lang rosette
(define (vadd_s16  a b )
(define result
(apply
concat
(for/list ([e0 (reverse (range 0 4 1))])
 (define %1 (*  e0  16))
 (define %2 (+  e0  1))
 (define %3 (*  %2  16))
 (define %4 (-  %3  1))
 (define %5 (extract  %4 %1 a))
 (define %6 (*  e0  16))
 (define %7 (+  e0  1))
 (define %8 (*  %7  16))
 (define %9 (-  %8  1))
 (define %10 (extract  %9 %6 b))
 (define %11 (bvadd  %5  %10))
 %11
)
)
)
result)
(define a0 (bv #xb8d7e7d0e9cc5732 64))
(define b0 (bv #x0313dc4d426addb7 64))
(assert (eq? (vadd_s16 a0 b0) (bv #xbbeac41d2c3634e9 64)))
(define a1 (bv #x73b6b595b087be47 64))
(define b1 (bv #xcca7d846a27f747b 64))
(assert (eq? (vadd_s16 a1 b1) (bv #x405d8ddb530632c2 64)))
(define a2 (bv #x8dca979b42c3b33d 64))
(define b2 (bv #x7a4883e831704bb5 64))
(assert (eq? (vadd_s16 a2 b2) (bv #x08121b837433fef2 64)))
(define a3 (bv #xc3b7655cc4932c3e 64))
(define b3 (bv #x036e546443cd8846 64))
(assert (eq? (vadd_s16 a3 b3) (bv #xc725b9c00860b484 64)))
(define a4 (bv #x75abd4a8924f9e92 64))
(define b4 (bv #xe41bfbf14f3e86c2 64))
(assert (eq? (vadd_s16 a4 b4) (bv #x59c6d099e18d2554 64)))
(define a5 (bv #xca8d1b30e5bda746 64))
(define b5 (bv #x49f06c95aa86a3f7 64))
(assert (eq? (vadd_s16 a5 b5) (bv #x147d87c590434b3d 64)))
(define a6 (bv #xd3a84b1b0c54558d 64))
(define b6 (bv #xff66e65e1caebe5f 64))
(assert (eq? (vadd_s16 a6 b6) (bv #xd30e3179290213ec 64)))
(define a7 (bv #xe66cf1e921322ec1 64))
(define b7 (bv #x1dabd2ed223e2c9c 64))
(assert (eq? (vadd_s16 a7 b7) (bv #x0417c4d643705b5d 64)))
(define a8 (bv #x1ff879186b9a67ac 64))
(define b8 (bv #x365a7c069daf771a 64))
(assert (eq? (vadd_s16 a8 b8) (bv #x5652f51e0949dec6 64)))
(define a9 (bv #x310eea843a698337 64))
(define b9 (bv #x1cae4852cbefebd7 64))
(assert (eq? (vadd_s16 a9 b9) (bv #x4dbc32d606586f0e 64)))
