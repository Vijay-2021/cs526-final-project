#lang rosette
(require "rosette_test/bvops.rkt")

(define (vqrdmlahh_s16  a b c )
(define result
(apply
concat
(for/list ([e0 (reverse (range 0 1 1))])
 (define %3 (*  e0  16))
 (define %4 (+  e0  1))
 (define %5 (*  %4  16))
 (define %6 (-  %5  1))
 (define %7 (extract  %6 %3 b))
 (define %8 (sign-extend  %7 (bitvector 192)))
 (define %9 (*  e0  16))
 (define %10 (+  e0  1))
 (define %11 (*  %10  16))
 (define %12 (-  %11  1))
 (define %13 (extract  %12 %9 c))
 (define %14 (sign-extend  %13 (bitvector 192)))
 (define %15 (*  e0  16))
 (define %16 (+  e0  1))
 (define %17 (*  %16  16))
 (define %18 (-  %17  1))
 (define %19 (extract  %18 %15 a))
 (define %20 (sign-extend  %19 (bitvector 192)))
 (define %21 (armshl  %20  (bv 16 192)))
 (define %22 (bvmul  %8  %14))
 (define %23 (bvmul  (bv 2 192)  %22))
 (define %24 (bvsub  %21  %23))
 (define %25 (bvadd  %24  (bv 32768 192)))
 (define %30 (bvashr  %25  (bv 16 192)))
 (define %31 (bvssat %30 192 16 ))
 %31
)
)
)
result)
(vqrdmlahh_s16 (bv #xfbfb 16) (bv #x1946 16) (bv #x1a37 16)) 
;;; (assert (eq? (vqrdmlahh_s16 (bv #xfbfb 16) (bv #x1946 16) (bv #x1a37 16)) (bv #x0128 16)))
;;; resolving={'esize': 16, 'datasize': 16, 'elements': 1, 'rounding': True, 'sub_op': True})