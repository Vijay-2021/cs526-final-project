#============================== Hydride File =================================
#
# Part of the Hydride Compiler Infrastructure. 
# <Placeholder for license information> 
#
#=============================================================================
#
# Do NOT modify this file. It is automatically generated. 
#
#=============================================================================




semantcs = {

          "_mm256_unpackhi_epi8" : {
            "target_instructions" : {
              "_mm512_unpackhi_epi16" : {
                  "args" : ["SYMBOLIC_BV_512","SYMBOLIC_BV_512","512","16","16"],
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : 2,
                  "out_vectsize_index" : 2,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_unpackhi_epi8" : {
                  "args" : ["SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","8","8"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 128,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : 2,
                  "out_vectsize_index" : 2,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': ''}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_unpackhi_epi32" : {
                  "args" : ["SYMBOLIC_BV_512","SYMBOLIC_BV_512","512","32","32"],
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 128,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : 2,
                  "out_vectsize_index" : 2,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_unpackhi_epi16" : {
                  "args" : ["SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","16","16"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : 2,
                  "out_vectsize_index" : 2,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': ''}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_unpackhi_epi32" : {
                  "args" : ["SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","32","32"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 128,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : 2,
                  "out_vectsize_index" : 2,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': ''}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_unpackhi_epi8" : {
                  "args" : ["SYMBOLIC_BV_512","SYMBOLIC_BV_512","512","8","8"],
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 128,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : 2,
                  "out_vectsize_index" : 2,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm256_unpackhi_epi8  a b %vectsize0 %elemsize0 %arg0 )"', '"(define dst"', '"(apply"', '"concat"', '"(for/list ([iterator.0 (reverse (range 0 %vectsize0 128))])"', '" (apply"', '" concat"', '" (for/list ([iterator.0.site0.new (reverse (range 0 64 %elemsize0))])"', '"  (define %factor0 (/  %elemsize0  %elemsize0))"', '"  (define %factor1 (*  2  %factor0))"', '"  (define iterator.0.site0.new.mul (*  iterator.0.site0.new  %factor1))"', '"  (define %low.offset0.site0 (+  iterator.0.site0.new  64))"', '"  (define %0.site0.new.low.idx (+  iterator.0  %low.offset0.site0))"', '"  (define %lastidx1 (-  %elemsize0  1))"', '"  (define %0.site0.new.high.idx0 (+  %0.site0.new.low.idx  %lastidx1))"', '"  (define %0.copy.copy.00.new (extract  %0.site0.new.high.idx0 %0.site0.new.low.idx a))"', '"  (define %1.copy.copy.00.new (extract  %0.site0.new.high.idx0 %0.site0.new.low.idx b))"', '"(concat %1.copy.copy.00.new %0.copy.copy.00.new)"', '" )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst 0)"', '")"', '""'], 
      },
        
          "_mm_mask_packus_epi16" : {
            "target_instructions" : {
              "_mm_mask_packus_epi16" : {
                  "args" : ["SYMBOLIC_BV_16","SYMBOLIC_BV_128","SYMBOLIC_BV_128","SYMBOLIC_BV_128","16","16","8","8","8"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 6,
                  "out_precision_index" : 6,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_maskz_packus_epi32" : {
                  "args" : ["SYMBOLIC_BV_8","(bv #x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 128)","SYMBOLIC_BV_128","SYMBOLIC_BV_128","32","32","16","16","16"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 32,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 6,
                  "out_precision_index" : 6,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_maskz_packus_epi16" : {
                  "args" : ["SYMBOLIC_BV_16","(bv #x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 128)","SYMBOLIC_BV_128","SYMBOLIC_BV_128","16","16","8","8","8"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 6,
                  "out_precision_index" : 6,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_mask_packus_epi32" : {
                  "args" : ["SYMBOLIC_BV_8","SYMBOLIC_BV_128","SYMBOLIC_BV_128","SYMBOLIC_BV_128","32","32","16","16","16"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 6,
                  "out_precision_index" : 6,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm_mask_packus_epi16  k.perm src.perm a.perm b.perm %elemsize0.perm %elemsize1.perm %elemsize2.perm %arg0.perm %arg1.perm )"', '"(define tmp_dst0.perm"', '"(apply"', '"concat"', '"(for/list ([%outer.it.perm (reverse (range 0 128 128))])"', '" (concat "', '"  (apply"', '"  concat"', '"  (for/list ([iterator.1.new.perm (reverse (range 128 256 %elemsize1.perm))])"', '"   (define %low.offset0.new0.perm (-  iterator.1.new.perm  128))"', '"   (define %lastidx3.perm (-  %elemsize1.perm  1))"', '"   (define %high.offset2.perm (+  %low.offset0.new0.perm  %lastidx3.perm))"', '"   (define %16.perm (extract  %high.offset2.perm %low.offset0.new0.perm b.perm))"', '"   (define %17.perm (bvusat %16.perm %elemsize1.perm %arg1.perm ))"', '"   %17.perm"', '"  )"', '"  )"', '"  (apply"', '"  concat"', '"  (for/list ([iterator.0.new.perm (reverse (range 0 128 %elemsize0.perm))])"', '"   (define %lastidx1.perm (-  %elemsize0.perm  1))"', '"   (define %high.offset0.perm (+  iterator.0.new.perm  %lastidx1.perm))"', '"   (define %0.perm (extract  %high.offset0.perm iterator.0.new.perm a.perm))"', '"   (define %1.perm (bvusat %0.perm %elemsize0.perm %arg0.perm ))"', '"   %1.perm"', '"  )"', '"  )"', '" )"', '")"', '")"', '")"', '"(define dst.perm"', '"(apply"', '"concat"', '"(for/list ([%outer.it.perm (reverse (range 0 128 128))])"', '" (apply"', '" concat"', '" (for/list ([j0.new.perm (reverse (range 0 128 %elemsize2.perm))])"', '"  (define j0.new.div.perm (/  j0.new.perm  %elemsize2.perm))"', '"  (define %33.perm (extract  j0.new.div.perm j0.new.div.perm k.perm))"', '"  (define %cond0.perm (bveq  %33.perm  (bv 1 1)))"', '"  (cond"', '"  [(equal? %cond0.perm #t)"', '"   (begin"', '"   (define %lastidx5.perm (-  %elemsize2.perm  1))"', '"   (define %35.perm (+  j0.new.perm  %lastidx5.perm))"', '"   (define %36.perm (extract  %35.perm j0.new.perm tmp_dst0.perm))"', '"   %36.perm"', '"   )]"', '"  [else (begin"', '"   (define %lastidx6.perm (-  %elemsize2.perm  1))"', '"   (define %39.perm (+  j0.new.perm  %lastidx6.perm))"', '"   (define %40.perm (extract  %39.perm j0.new.perm src.perm))"', '"   %40.perm"', '"   )]"', '"  )"', '" )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst.perm 0)"', '")"', '""'], 
      },
        
          "_mm512_packus_epi16" : {
            "target_instructions" : {
              "_mm256_packus_epi16" : {
                  "args" : ["SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","8","8","16","16"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 8,
                  "in_vectsize_index" : 2,
                  "out_vectsize_index" : 2,
                  "lanesize_index" : None,
                  "in_precision_index" : 6,
                  "out_precision_index" : 4,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '3', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_packus_epi16" : {
                  "args" : ["SYMBOLIC_BV_512","SYMBOLIC_BV_512","512","8","8","16","16"],
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 8,
                  "in_vectsize_index" : 2,
                  "out_vectsize_index" : 2,
                  "lanesize_index" : None,
                  "in_precision_index" : 6,
                  "out_precision_index" : 4,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_packus_epi32" : {
                  "args" : ["SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","16","16","32","32"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 128,
                  "in_precision" : 32,
                  "out_precision" : 16,
                  "in_vectsize_index" : 2,
                  "out_vectsize_index" : 2,
                  "lanesize_index" : None,
                  "in_precision_index" : 6,
                  "out_precision_index" : 4,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '3', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_packus_epi32" : {
                  "args" : ["SYMBOLIC_BV_512","SYMBOLIC_BV_512","512","16","16","32","32"],
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 128,
                  "in_precision" : 32,
                  "out_precision" : 16,
                  "in_vectsize_index" : 2,
                  "out_vectsize_index" : 2,
                  "lanesize_index" : None,
                  "in_precision_index" : 6,
                  "out_precision_index" : 4,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm512_packus_epi16  a b %vectsize0 %elemsize0 %elemsize1 %arg0 %arg2 )"', '"(define dst"', '"(apply"', '"concat"', '"(for/list ([iterator.lane (reverse (range 0 %vectsize0 128))])"', '" (concat "', '"  (apply"', '"  concat"', '"  (for/list ([iterator.1 (reverse (range 64 128 %elemsize1))])"', '"   (define %low.cofactor1 (*  iterator.1  2))"', '"   (define %low.scaled.it2 (+  iterator.lane  %low.cofactor1))"', '"   (define %low.offset0.new0 (-  %low.scaled.it2  128))"', '"   (define %lastidx3 (-  %arg2  1))"', '"   (define %high.offset2 (+  %low.offset0.new0  %lastidx3))"', '"   (define %16 (extract  %high.offset2 %low.offset0.new0 b))"', '"   (define %17 (bvusat %16 %arg2 %elemsize1 ))"', '"   %17"', '"  )"', '"  )"', '"  (apply"', '"  concat"', '"  (for/list ([iterator.0 (reverse (range 0 64 %elemsize0))])"', '"   (define %low.cofactor0 (*  iterator.0  2))"', '"   (define %low.scaled.it0 (+  iterator.lane  %low.cofactor0))"', '"   (define %lastidx1 (-  %arg0  1))"', '"   (define %high.offset0 (+  %low.scaled.it0  %lastidx1))"', '"   (define %0 (extract  %high.offset0 %low.scaled.it0 a))"', '"   (define %1 (bvusat %0 %arg0 %elemsize0 ))"', '"   %1"', '"  )"', '"  )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst 0)"', '")"', '""'], 
      },
        
          "_mm512_maskz_unpacklo_epi64" : {
            "target_instructions" : {
              "_mm512_maskz_unpacklo_epi64" : {
                  "args" : ["SYMBOLIC_BV_8","(bv #x
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 64,
                  "out_precision" : 64,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : None,
                  "out_precision_index" : None,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_maskz_unpacklo_epi64" : {
                  "args" : ["SYMBOLIC_BV_8","(bv #x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 256)","SYMBOLIC_BV_256","SYMBOLIC_BV_256","128","256","0"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 64,
                  "out_precision" : 64,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : None,
                  "out_precision_index" : None,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_mask_unpackhi_epi64" : {
                  "args" : ["SYMBOLIC_BV_8","SYMBOLIC_BV_512","SYMBOLIC_BV_512","SYMBOLIC_BV_512","256","512","64"],
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 64,
                  "out_precision" : 64,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : None,
                  "out_precision_index" : None,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_mask_unpacklo_epi64" : {
                  "args" : ["SYMBOLIC_BV_8","SYMBOLIC_BV_256","SYMBOLIC_BV_256","SYMBOLIC_BV_256","128","256","0"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 64,
                  "out_precision" : 64,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : None,
                  "out_precision_index" : None,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_maskz_unpackhi_epi64" : {
                  "args" : ["SYMBOLIC_BV_8","(bv #x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 256)","SYMBOLIC_BV_256","SYMBOLIC_BV_256","128","256","64"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 64,
                  "out_precision" : 64,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : None,
                  "out_precision_index" : None,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_mask_unpacklo_epi64" : {
                  "args" : ["SYMBOLIC_BV_8","SYMBOLIC_BV_512","SYMBOLIC_BV_512","SYMBOLIC_BV_512","256","512","0"],
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 64,
                  "out_precision" : 64,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : None,
                  "out_precision_index" : None,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_maskz_unpackhi_epi64" : {
                  "args" : ["SYMBOLIC_BV_8","(bv #x
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 64,
                  "out_precision" : 64,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : None,
                  "out_precision_index" : None,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_mask_unpackhi_epi64" : {
                  "args" : ["SYMBOLIC_BV_8","SYMBOLIC_BV_256","SYMBOLIC_BV_256","SYMBOLIC_BV_256","128","256","64"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 64,
                  "out_precision" : 64,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : None,
                  "out_precision_index" : None,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm512_maskz_unpacklo_epi64  k.perm %arg8.perm a.perm b.perm %innerlanesize0.perm %innerlanesize1.perm %arg4.perm )"', '"(define tmp_dst.perm"', '"(apply"', '"concat"', '"(for/list ([%outer.it.perm (reverse (range 0 1 1))])"', '" (apply"', '" concat"', '" (for/list ([iterator.0.new.perm (reverse (range 0 %innerlanesize0.perm 64))])"', '"  (define iterator.0.new.mul.perm (*  iterator.0.new.perm  2))"', '"  (define %0.site0.new.low.idx.perm (+  iterator.0.new.mul.perm  %arg4.perm))"', '"  (define %0.site0.new.high.idx0.perm (+  %0.site0.new.low.idx.perm  63))"', '"  (define %0.copy.copy.00.new.perm (extract  %0.site0.new.high.idx0.perm %0.site0.new.low.idx.perm a.perm))"', '"  (define %1.copy.copy.00.new.perm (extract  %0.site0.new.high.idx0.perm %0.site0.new.low.idx.perm b.perm))"', '"(concat %1.copy.copy.00.new.perm %0.copy.copy.00.new.perm)"', '" )"', '" )"', '")"', '")"', '")"', '"(define dst.perm"', '"(apply"', '"concat"', '"(for/list ([%outer.it.perm (reverse (range 0 1 1))])"', '" (apply"', '" concat"', '" (for/list ([j0.new.perm (reverse (range 0 %innerlanesize1.perm 64))])"', '"  (define j0.new.div.perm (/  j0.new.perm  64))"', '"  (define %13.perm (extract  j0.new.div.perm j0.new.div.perm k.perm))"', '"  (define %cond0.perm (bveq  %13.perm  (bv 1 1)))"', '"  (cond"', '"  [(equal? %cond0.perm #t)"', '"   (begin"', '"   (define %15.perm (+  j0.new.perm  63))"', '"   (define %16.perm (extract  %15.perm j0.new.perm tmp_dst.perm))"', '"   %16.perm"', '"   )]"', '"  [else (begin"', '"   (define %19.perm (+  j0.new.perm  63))"', '"   (define %20.perm (extract  %19.perm j0.new.perm %arg8.perm))"', '"   %20.perm"', '"   )]"', '"  )"', '" )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst.perm 0)"', '")"', '""'], 
      },
        
          "_mm_hsubs_epi16" : {
            "target_instructions" : {
              "_mm_hsubs_pi16" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_64","32","32","64","48","64"],
                  "in_vectsize" : 64,
                  "out_vectsize" : 64,
                  "lanesize" : 64,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : None,
                  "out_precision_index" : None,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '3', 't': '2'}}, {'Skylake': {'l': '3', 't': '2'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_hsubs_epi16" : {
                  "args" : ["SYMBOLIC_BV_128","SYMBOLIC_BV_128","64","64","128","112","128"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : None,
                  "out_precision_index" : None,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Skylake': {'l': '3', 't': '2'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm_hsubs_epi16  a b %innerlanesize0 %innerlaneoffset1 %innerlanesize1 %arg1 %arg2 )"', '"(define dst"', '"(apply"', '"concat"', '"(for/list ([%outer.it (reverse (range 0 1 1))])"', '" (concat "', '"  (apply"', '"  concat"', '"  (for/list ([iterator.1 (reverse (range %innerlaneoffset1 %innerlanesize1 16))])"', '"   (define %low.cofactor2 (*  iterator.1  2))"', '"   (define %low.offset1.new0 (-  %low.cofactor2  %arg2))"', '"   (define %high.offset3 (+  %low.offset1.new0  15))"', '"   (define %8 (extract  %high.offset3 %low.offset1.new0 b))"', '"   (define %low.offset2.new0 (-  %low.cofactor2  %arg1))"', '"   (define %high.offset4 (+  %low.offset2.new0  15))"', '"   (define %9 (extract  %high.offset4 %low.offset2.new0 b))"', '"   (define %10 (bvsubnsw  %8  %9 16))"', '"   %10"', '"  )"', '"  )"', '"  (apply"', '"  concat"', '"  (for/list ([iterator.0 (reverse (range 0 %innerlanesize0 16))])"', '"   (define %low.cofactor0 (*  iterator.0  2))"', '"   (define %high.offset0 (+  %low.cofactor0  15))"', '"   (define %0 (extract  %high.offset0 %low.cofactor0 a))"', '"   (define %low.offset0 (+  %low.cofactor0  16))"', '"   (define %high.offset1 (+  %low.offset0  15))"', '"   (define %1 (extract  %high.offset1 %low.offset0 a))"', '"   (define %2 (bvsubnsw  %0  %1 16))"', '"   %2"', '"  )"', '"  )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst 0)"', '")"', '""'], 
      },
        
          "_mm_unpacklo_epi32" : {
            "target_instructions" : {
              "_m_punpcklbw" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_64","32","8","8","0"],
                  "in_vectsize" : 64,
                  "out_vectsize" : 64,
                  "lanesize" : 64,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_unpackhi_pi8" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_64","32","8","8","32"],
                  "in_vectsize" : 64,
                  "out_vectsize" : 64,
                  "lanesize" : 64,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_unpacklo_epi16" : {
                  "args" : ["SYMBOLIC_BV_128","SYMBOLIC_BV_128","64","16","16","0"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1],
                  "Cost" : "[{'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_unpacklo_epi8" : {
                  "args" : ["SYMBOLIC_BV_128","SYMBOLIC_BV_128","64","8","8","0"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1],
                  "Cost" : "[{'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_unpackhi_pi16" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_64","32","16","16","32"],
                  "in_vectsize" : 64,
                  "out_vectsize" : 64,
                  "lanesize" : 64,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_m_punpcklwd" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_64","32","16","16","0"],
                  "in_vectsize" : 64,
                  "out_vectsize" : 64,
                  "lanesize" : 64,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_unpackhi_epi8" : {
                  "args" : ["SYMBOLIC_BV_128","SYMBOLIC_BV_128","64","8","8","64"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1],
                  "Cost" : "[{'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_unpacklo_pi16" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_64","32","16","16","0"],
                  "in_vectsize" : 64,
                  "out_vectsize" : 64,
                  "lanesize" : 64,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_unpacklo_pi8" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_64","32","8","8","0"],
                  "in_vectsize" : 64,
                  "out_vectsize" : 64,
                  "lanesize" : 64,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_unpackhi_epi16" : {
                  "args" : ["SYMBOLIC_BV_128","SYMBOLIC_BV_128","64","16","16","64"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1],
                  "Cost" : "[{'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_m_punpckhbw" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_64","32","8","8","32"],
                  "in_vectsize" : 64,
                  "out_vectsize" : 64,
                  "lanesize" : 64,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_m_punpckhwd" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_64","32","16","16","32"],
                  "in_vectsize" : 64,
                  "out_vectsize" : 64,
                  "lanesize" : 64,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_unpacklo_epi32" : {
                  "args" : ["SYMBOLIC_BV_128","SYMBOLIC_BV_128","64","32","32","0"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1],
                  "Cost" : "[{'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_unpackhi_epi32" : {
                  "args" : ["SYMBOLIC_BV_128","SYMBOLIC_BV_128","64","32","32","64"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1],
                  "Cost" : "[{'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm_unpacklo_epi32  a b %innerlanesize0 %elemsize0 %arg0 %arg1 )"', '"(define dst"', '"(apply"', '"concat"', '"(for/list ([%outer.it (reverse (range 0 1 1))])"', '" (apply"', '" concat"', '" (for/list ([iterator.0.site0.new (reverse (range 0 %innerlanesize0 %elemsize0))])"', '"  (define %factor0 (/  %elemsize0  %elemsize0))"', '"  (define %factor1 (*  2  %factor0))"', '"  (define iterator.0.site0.new.mul (*  iterator.0.site0.new  %factor1))"', '"  (define %0.site0.new.low.idx (+  %arg1  iterator.0.site0.new))"', '"  (define %lastidx1 (-  %elemsize0  1))"', '"  (define %0.site0.new.high.idx0 (+  %0.site0.new.low.idx  %lastidx1))"', '"  (define %0.copy.copy.00.new (extract  %0.site0.new.high.idx0 %0.site0.new.low.idx a))"', '"  (define %1.copy.copy.00.new (extract  %0.site0.new.high.idx0 %0.site0.new.low.idx b))"', '"(concat %1.copy.copy.00.new %0.copy.copy.00.new)"', '" )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst 0)"', '")"', '""'], 
      },
        
          "_mm256_hsubs_epi16" : {
            "target_instructions" : {
              "_mm256_hsubs_epi16" : {
                  "args" : ["SYMBOLIC_BV_256","SYMBOLIC_BV_256"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : None,
                  "out_precision_index" : None,
                  "arg_permute_map" : [0,1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '3', 't': '2'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm256_hsubs_epi16  a b )"', '"(define dst"', '"(apply"', '"concat"', '"(for/list ([iterator.lane (reverse (range 0 256 128))])"', '" (concat "', '"  (apply"', '"  concat"', '"  (for/list ([iterator.1 (reverse (range 64 128 16))])"', '"   (define %low.cofactor2 (*  iterator.1  2))"', '"   (define %low.scaled.it3 (+  iterator.lane  %low.cofactor2))"', '"   (define %low.offset1.new0 (-  %low.scaled.it3  128))"', '"   (define %high.offset3 (+  %low.offset1.new0  15))"', '"   (define %16 (extract  %high.offset3 %low.offset1.new0 b))"', '"   (define %low.offset2.new0 (-  %low.scaled.it3  112))"', '"   (define %high.offset4 (+  %low.offset2.new0  15))"', '"   (define %17 (extract  %high.offset4 %low.offset2.new0 b))"', '"   (define %18 (bvsubnsw  %16  %17 16))"', '"   %18"', '"  )"', '"  )"', '"  (apply"', '"  concat"', '"  (for/list ([iterator.0 (reverse (range 0 64 16))])"', '"   (define %low.cofactor0 (*  iterator.0  2))"', '"   (define %low.scaled.it0 (+  iterator.lane  %low.cofactor0))"', '"   (define %high.offset0 (+  %low.scaled.it0  15))"', '"   (define %0 (extract  %high.offset0 %low.scaled.it0 a))"', '"   (define %low.offset0 (+  %low.scaled.it0  16))"', '"   (define %high.offset1 (+  %low.offset0  15))"', '"   (define %1 (extract  %high.offset1 %low.offset0 a))"', '"   (define %2 (bvsubnsw  %0  %1 16))"', '"   %2"', '"  )"', '"  )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst 0)"', '")"', '""'], 
      },
        
          "_mm_mask_packs_epi16" : {
            "target_instructions" : {
              "_mm_mask_packs_epi16" : {
                  "args" : ["SYMBOLIC_BV_16","SYMBOLIC_BV_128","SYMBOLIC_BV_128","SYMBOLIC_BV_128","16","16","8","8","8"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 6,
                  "out_precision_index" : 6,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_maskz_packs_epi32" : {
                  "args" : ["SYMBOLIC_BV_8","(bv #x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 128)","SYMBOLIC_BV_128","SYMBOLIC_BV_128","32","32","16","16","16"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 32,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 6,
                  "out_precision_index" : 6,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_mask_packs_epi32" : {
                  "args" : ["SYMBOLIC_BV_8","SYMBOLIC_BV_128","SYMBOLIC_BV_128","SYMBOLIC_BV_128","32","32","16","16","16"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 6,
                  "out_precision_index" : 6,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_maskz_packs_epi16" : {
                  "args" : ["SYMBOLIC_BV_16","(bv #x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 128)","SYMBOLIC_BV_128","SYMBOLIC_BV_128","16","16","8","8","8"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 6,
                  "out_precision_index" : 6,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm_mask_packs_epi16  k.norm src.norm a.norm b.norm %elemsize0.norm %elemsize1.norm %elemsize2.norm %arg0.norm %arg1.norm )"', '"(define tmp_dst0.norm"', '"(apply"', '"concat"', '"(for/list ([%outer.it.norm (reverse (range 0 128 128))])"', '" (concat "', '"  (apply"', '"  concat"', '"  (for/list ([iterator.1.new.norm (reverse (range 128 256 %elemsize1.norm))])"', '"   (define %low.offset0.new0.norm (-  iterator.1.new.norm  128))"', '"   (define %lastidx3.norm (-  %elemsize1.norm  1))"', '"   (define %high.offset2.norm (+  %low.offset0.new0.norm  %lastidx3.norm))"', '"   (define %16.norm (extract  %high.offset2.norm %low.offset0.new0.norm b.norm))"', '"   (define %17.norm (bvssat %16.norm %elemsize1.norm %arg1.norm ))"', '"   %17.norm"', '"  )"', '"  )"', '"  (apply"', '"  concat"', '"  (for/list ([iterator.0.new.norm (reverse (range 0 128 %elemsize0.norm))])"', '"   (define %lastidx1.norm (-  %elemsize0.norm  1))"', '"   (define %high.offset0.norm (+  iterator.0.new.norm  %lastidx1.norm))"', '"   (define %0.norm (extract  %high.offset0.norm iterator.0.new.norm a.norm))"', '"   (define %1.norm (bvssat %0.norm %elemsize0.norm %arg0.norm ))"', '"   %1.norm"', '"  )"', '"  )"', '" )"', '")"', '")"', '")"', '"(define dst.norm"', '"(apply"', '"concat"', '"(for/list ([%outer.it.norm (reverse (range 0 128 128))])"', '" (apply"', '" concat"', '" (for/list ([j0.new.norm (reverse (range 0 128 %elemsize2.norm))])"', '"  (define j0.new.div.norm (/  j0.new.norm  %elemsize2.norm))"', '"  (define %33.norm (extract  j0.new.div.norm j0.new.div.norm k.norm))"', '"  (define %cond0.norm (bveq  %33.norm  (bv 1 1)))"', '"  (cond"', '"  [(equal? %cond0.norm #t)"', '"   (begin"', '"   (define %lastidx5.norm (-  %elemsize2.norm  1))"', '"   (define %35.norm (+  j0.new.norm  %lastidx5.norm))"', '"   (define %36.norm (extract  %35.norm j0.new.norm tmp_dst0.norm))"', '"   %36.norm"', '"   )]"', '"  [else (begin"', '"   (define %lastidx6.norm (-  %elemsize2.norm  1))"', '"   (define %39.norm (+  j0.new.norm  %lastidx6.norm))"', '"   (define %40.norm (extract  %39.norm j0.new.norm src.norm))"', '"   %40.norm"', '"   )]"', '"  )"', '" )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst.norm 0)"', '")"', '""'], 
      },
        
          "_mm_hadd_epi16" : {
            "target_instructions" : {
              "_mm_hadd_epi32" : {
                  "args" : ["SYMBOLIC_BV_128","SYMBOLIC_BV_128","64","32","64","128","32","32","128","96"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 6,
                  "out_precision_index" : 6,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Skylake': {'l': '3', 't': '2'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_hadd_pi16" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_64","32","16","32","64","16","16","64","48"],
                  "in_vectsize" : 64,
                  "out_vectsize" : 64,
                  "lanesize" : 64,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 6,
                  "out_precision_index" : 6,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '3', 't': '2'}}, {'Skylake': {'l': '3', 't': '2'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_hadd_epi16" : {
                  "args" : ["SYMBOLIC_BV_128","SYMBOLIC_BV_128","64","16","64","128","16","16","128","112"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 6,
                  "out_precision_index" : 6,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Skylake': {'l': '3', 't': '2'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm_hadd_epi16  a b %innerlanesize0 %elemsize0 %innerlaneoffset1 %innerlanesize1 %elemsize1 %arg0 %arg1 %arg2 )"', '"(define dst"', '"(apply"', '"concat"', '"(for/list ([%outer.it (reverse (range 0 1 1))])"', '" (concat "', '"  (apply"', '"  concat"', '"  (for/list ([iterator.1 (reverse (range %innerlaneoffset1 %innerlanesize1 %elemsize1))])"', '"   (define %low.cofactor2 (*  iterator.1  2))"', '"   (define %low.offset1.new0 (-  %low.cofactor2  %arg2))"', '"   (define %lastidx5 (-  %elemsize1  1))"', '"   (define %high.offset3 (+  %low.offset1.new0  %lastidx5))"', '"   (define %6 (extract  %high.offset3 %low.offset1.new0 b))"', '"   (define %low.offset2.new0 (-  %low.cofactor2  %arg1))"', '"   (define %lastidx4 (-  %elemsize1  1))"', '"   (define %high.offset4 (+  %low.offset2.new0  %lastidx4))"', '"   (define %7 (extract  %high.offset4 %low.offset2.new0 b))"', '"   (define %8 (bvadd  %6  %7))"', '"   %8"', '"  )"', '"  )"', '"  (apply"', '"  concat"', '"  (for/list ([iterator.0 (reverse (range 0 %innerlanesize0 %elemsize0))])"', '"   (define %factor0 (/  %elemsize0  %elemsize0))"', '"   (define %factor1 (*  2  %factor0))"', '"   (define %low.cofactor0 (*  iterator.0  %factor1))"', '"   (define %low.offset0 (+  %low.cofactor0  %arg0))"', '"   (define %lastidx2 (-  %elemsize0  1))"', '"   (define %high.offset0 (+  %low.offset0  %lastidx2))"', '"   (define %0 (extract  %high.offset0 %low.offset0 a))"', '"   (define %lastidx1 (-  %elemsize0  1))"', '"   (define %high.offset1 (+  %low.cofactor0  %lastidx1))"', '"   (define %1 (extract  %high.offset1 %low.cofactor0 a))"', '"   (define %2 (bvadd  %0  %1))"', '"   %2"', '"  )"', '"  )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst 0)"', '")"', '""'], 
      },
        
          "_m_punpckhdq" : {
            "target_instructions" : {
              "_mm_unpackhi_pi32" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_64","32","32","0","32"],
                  "in_vectsize" : 64,
                  "out_vectsize" : 64,
                  "lanesize" : 32,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_unpackhi_epi64" : {
                  "args" : ["SYMBOLIC_BV_128","SYMBOLIC_BV_128","64","64","0","64"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 64,
                  "in_precision" : 64,
                  "out_precision" : 64,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1],
                  "Cost" : "[{'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_m_punpckldq" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_64","32","32","32","0"],
                  "in_vectsize" : 64,
                  "out_vectsize" : 64,
                  "lanesize" : 32,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_unpacklo_epi64" : {
                  "args" : ["SYMBOLIC_BV_128","SYMBOLIC_BV_128","64","64","64","0"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 64,
                  "in_precision" : 64,
                  "out_precision" : 64,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1],
                  "Cost" : "[{'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_m_punpckhdq" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_64","32","32","0","32"],
                  "in_vectsize" : 64,
                  "out_vectsize" : 64,
                  "lanesize" : 32,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_unpacklo_pi32" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_64","32","32","32","0"],
                  "in_vectsize" : 64,
                  "out_vectsize" : 64,
                  "lanesize" : 32,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_m_punpckhdq  a b %innerlanesize0 %elemsize0 %arg0 %arg1 )"', '"(define dst"', '"(apply"', '"concat"', '"(for/list ([%outer.it (reverse (range 0 1 1))])"', '" (apply"', '" concat"', '" (for/list ([%inner.it (reverse (range 0 %innerlanesize0 %elemsize0))])"', '"  (define %2 (+  %inner.it  %arg1))"', '"  (define %lastidx0 (-  %elemsize0  1))"', '"  (define %3 (+  %2  %lastidx0))"', '"  (define %0 (extract  %3 %2 a))"', '"  (define %1 (extract  %3 %2 b))"', '"(concat %1 %0)"', '" )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst 0)"', '")"', '""'], 
      },
        
          "_mm_maskz_unpackhi_epi64" : {
            "target_instructions" : {
              "_mm_maskz_unpackhi_epi64" : {
                  "args" : ["SYMBOLIC_BV_8","(bv #x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 128)","SYMBOLIC_BV_128","SYMBOLIC_BV_128","64","64"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 64,
                  "out_precision" : 64,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : None,
                  "out_precision_index" : None,
                  "arg_permute_map" : [0,-1,1,2,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_mask_unpackhi_epi64" : {
                  "args" : ["SYMBOLIC_BV_8","SYMBOLIC_BV_128","SYMBOLIC_BV_128","SYMBOLIC_BV_128","64","64"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 64,
                  "out_precision" : 64,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : None,
                  "out_precision_index" : None,
                  "arg_permute_map" : [1,0,2,3,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_mask_unpacklo_epi64" : {
                  "args" : ["SYMBOLIC_BV_8","SYMBOLIC_BV_128","SYMBOLIC_BV_128","SYMBOLIC_BV_128","0","0"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 64,
                  "out_precision" : 64,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : None,
                  "out_precision_index" : None,
                  "arg_permute_map" : [1,0,2,3,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_maskz_unpacklo_epi64" : {
                  "args" : ["SYMBOLIC_BV_8","(bv #x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 128)","SYMBOLIC_BV_128","SYMBOLIC_BV_128","0","0"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 64,
                  "out_precision" : 64,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : None,
                  "out_precision_index" : None,
                  "arg_permute_map" : [0,-1,1,2,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm_maskz_unpackhi_epi64  k.norm %arg8.norm a.norm b.norm %arg2.norm %arg5.norm )"', '"(define tmp_dst0.norm"', '"(apply"', '"concat"', '"(for/list ([%outer.it.norm (reverse (range 0 128 128))])"', '" (apply"', '" concat"', '" (for/list ([%inner.it.norm (reverse (range 0 128 128))])"', '"  (define %highidx3.norm (+  63  %arg5.norm))"', '"  (define %0.copy.copy.00.new.norm (extract  %highidx3.norm %arg5.norm a.norm))"', '"  (define %highidx1.norm (+  63  %arg2.norm))"', '"  (define %1.copy.copy.00.new.norm (extract  %highidx1.norm %arg2.norm b.norm))"', '"(concat %1.copy.copy.00.new.norm %0.copy.copy.00.new.norm)"', '" )"', '" )"', '")"', '")"', '")"', '"(define dst.norm"', '"(apply"', '"concat"', '"(for/list ([%outer.it.norm (reverse (range 0 128 128))])"', '" (apply"', '" concat"', '" (for/list ([j0.new.norm (reverse (range 0 128 64))])"', '"  (define j0.new.div.norm (/  j0.new.norm  64))"', '"  (define %4.norm (extract  j0.new.div.norm j0.new.div.norm k.norm))"', '"  (define %cond0.norm (bveq  %4.norm  (bv 1 1)))"', '"  (cond"', '"  [(equal? %cond0.norm #t)"', '"   (begin"', '"   (define %6.norm (+  j0.new.norm  63))"', '"   (define %7.norm (extract  %6.norm j0.new.norm tmp_dst0.norm))"', '"   %7.norm"', '"   )]"', '"  [else (begin"', '"   (define %10.norm (+  j0.new.norm  63))"', '"   (define %11.norm (extract  %10.norm j0.new.norm %arg8.norm))"', '"   %11.norm"', '"   )]"', '"  )"', '" )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst.norm 0)"', '")"', '""'], 
      },
        
          "_mm256_hadds_epi16" : {
            "target_instructions" : {
              "_mm256_hadds_epi16" : {
                  "args" : ["SYMBOLIC_BV_256","SYMBOLIC_BV_256"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : None,
                  "out_precision_index" : None,
                  "arg_permute_map" : [0,1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '3', 't': '2'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm256_hadds_epi16  a b )"', '"(define dst"', '"(apply"', '"concat"', '"(for/list ([iterator.lane (reverse (range 0 256 128))])"', '" (concat "', '"  (apply"', '"  concat"', '"  (for/list ([iterator.1 (reverse (range 64 128 16))])"', '"   (define %low.cofactor2 (*  iterator.1  2))"', '"   (define %low.scaled.it3 (+  iterator.lane  %low.cofactor2))"', '"   (define %low.offset1.new0 (-  %low.scaled.it3  112))"', '"   (define %high.offset3 (+  %low.offset1.new0  15))"', '"   (define %16 (extract  %high.offset3 %low.offset1.new0 b))"', '"   (define %low.offset2.new0 (-  %low.scaled.it3  128))"', '"   (define %high.offset4 (+  %low.offset2.new0  15))"', '"   (define %17 (extract  %high.offset4 %low.offset2.new0 b))"', '"   (define %18 (bvaddnsw  %16  %17 16))"', '"   %18"', '"  )"', '"  )"', '"  (apply"', '"  concat"', '"  (for/list ([iterator.0 (reverse (range 0 64 16))])"', '"   (define %low.cofactor0 (*  iterator.0  2))"', '"   (define %low.scaled.it0 (+  iterator.lane  %low.cofactor0))"', '"   (define %low.offset0 (+  %low.scaled.it0  16))"', '"   (define %high.offset0 (+  %low.offset0  15))"', '"   (define %0 (extract  %high.offset0 %low.offset0 a))"', '"   (define %high.offset1 (+  %low.scaled.it0  15))"', '"   (define %1 (extract  %high.offset1 %low.scaled.it0 a))"', '"   (define %2 (bvaddnsw  %0  %1 16))"', '"   %2"', '"  )"', '"  )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst 0)"', '")"', '""'], 
      },
        
          "_mm256_mask_packus_epi16" : {
            "target_instructions" : {
              "_mm512_maskz_packus_epi32" : {
                  "args" : ["SYMBOLIC_BV_32","(bv #x
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 32,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 8,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_maskz_packus_epi32" : {
                  "args" : ["SYMBOLIC_BV_16","(bv #x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 256)","SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","32","32","256","16","16","16"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 32,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 8,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_maskz_packus_epi16" : {
                  "args" : ["SYMBOLIC_BV_64","(bv #x
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 16,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 8,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_mask_packus_epi16" : {
                  "args" : ["SYMBOLIC_BV_32","SYMBOLIC_BV_256","SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","16","16","256","8","8","8"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 8,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_mask_packus_epi16" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_512","SYMBOLIC_BV_512","SYMBOLIC_BV_512","512","16","16","512","8","8","8"],
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 8,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_maskz_packus_epi16" : {
                  "args" : ["SYMBOLIC_BV_32","(bv #x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 256)","SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","16","16","256","8","8","8"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 16,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 8,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_mask_packus_epi32" : {
                  "args" : ["SYMBOLIC_BV_16","SYMBOLIC_BV_256","SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","32","32","256","16","16","16"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 8,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_mask_packus_epi32" : {
                  "args" : ["SYMBOLIC_BV_32","SYMBOLIC_BV_512","SYMBOLIC_BV_512","SYMBOLIC_BV_512","512","32","32","512","16","16","16"],
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 8,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm256_mask_packus_epi16  k.6 %arg5.6 a.6 b.6 %vectsize0.6 %elemsize0.6 %elemsize1.6 %innerlanesize2.6 %elemsize2.6 %arg0.6 %arg1.6 )"', '"(define tmp_dst.6"', '"(apply"', '"concat"', '"(for/list ([iterator.lane.6 (reverse (range 0 %vectsize0.6 128))])"', '" (concat "', '"  (apply"', '"  concat"', '"  (for/list ([iterator.1.new.6 (reverse (range 128 256 %elemsize1.6))])"', '"   (define %low.scaled.it2.6 (+  iterator.lane.6  iterator.1.new.6))"', '"   (define %low.offset0.new0.6 (-  %low.scaled.it2.6  128))"', '"   (define %lastidx3.6 (-  %elemsize1.6  1))"', '"   (define %high.offset2.6 (+  %low.offset0.new0.6  %lastidx3.6))"', '"   (define %8.6 (extract  %high.offset2.6 %low.offset0.new0.6 b.6))"', '"   (define %9.6 (bvusat %8.6 %elemsize1.6 %arg1.6 ))"', '"   %9.6"', '"  )"', '"  )"', '"  (apply"', '"  concat"', '"  (for/list ([iterator.0.new.6 (reverse (range 0 128 %elemsize0.6))])"', '"   (define %low.scaled.it0.6 (+  iterator.lane.6  iterator.0.new.6))"', '"   (define %lastidx1.6 (-  %elemsize0.6  1))"', '"   (define %high.offset0.6 (+  %low.scaled.it0.6  %lastidx1.6))"', '"   (define %0.6 (extract  %high.offset0.6 %low.scaled.it0.6 a.6))"', '"   (define %1.6 (bvusat %0.6 %elemsize0.6 %arg0.6 ))"', '"   %1.6"', '"  )"', '"  )"', '" )"', '")"', '")"', '")"', '"(define dst.6"', '"(apply"', '"concat"', '"(for/list ([%outer.it.6 (reverse (range 0 1 1))])"', '" (apply"', '" concat"', '" (for/list ([j0.new.6 (reverse (range 0 %innerlanesize2.6 %elemsize2.6))])"', '"  (define j0.new.div.6 (/  j0.new.6  %elemsize2.6))"', '"  (define %65.6 (extract  j0.new.div.6 j0.new.div.6 k.6))"', '"  (define %cond0.6 (bveq  %65.6  (bv 1 1)))"', '"  (cond"', '"  [(equal? %cond0.6 #t)"', '"   (begin"', '"   (define %lastidx5.6 (-  %elemsize2.6  1))"', '"   (define %67.6 (+  j0.new.6  %lastidx5.6))"', '"   (define %68.6 (extract  %67.6 j0.new.6 tmp_dst.6))"', '"   %68.6"', '"   )]"', '"  [else (begin"', '"   (define %lastidx6.6 (-  %elemsize2.6  1))"', '"   (define %71.6 (+  j0.new.6  %lastidx6.6))"', '"   (define %72.6 (extract  %71.6 j0.new.6 %arg5.6))"', '"   %72.6"', '"   )]"', '"  )"', '" )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst.6 0)"', '")"', '""'], 
      },
        
          "_mm_mask_unpacklo_epi16" : {
            "target_instructions" : {
              "_mm_mask_unpacklo_epi8" : {
                  "args" : ["SYMBOLIC_BV_16","SYMBOLIC_BV_128","SYMBOLIC_BV_128","SYMBOLIC_BV_128","8","8","8","8","8","0"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 5,
                  "out_precision_index" : 5,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_mask_unpacklo_epi32" : {
                  "args" : ["SYMBOLIC_BV_8","SYMBOLIC_BV_128","SYMBOLIC_BV_128","SYMBOLIC_BV_128","32","32","32","32","32","0"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 5,
                  "out_precision_index" : 5,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_maskz_unpackhi_epi16" : {
                  "args" : ["SYMBOLIC_BV_8","(bv #x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 128)","SYMBOLIC_BV_128","SYMBOLIC_BV_128","16","16","16","16","16","64"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 5,
                  "out_precision_index" : 5,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_maskz_unpackhi_epi8" : {
                  "args" : ["SYMBOLIC_BV_16","(bv #x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 128)","SYMBOLIC_BV_128","SYMBOLIC_BV_128","8","8","8","8","8","64"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 5,
                  "out_precision_index" : 5,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_maskz_unpackhi_epi32" : {
                  "args" : ["SYMBOLIC_BV_8","(bv #x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 128)","SYMBOLIC_BV_128","SYMBOLIC_BV_128","32","32","32","32","32","64"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 5,
                  "out_precision_index" : 5,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_maskz_unpacklo_epi32" : {
                  "args" : ["SYMBOLIC_BV_8","(bv #x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 128)","SYMBOLIC_BV_128","SYMBOLIC_BV_128","32","32","32","32","32","0"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 5,
                  "out_precision_index" : 5,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_mask_unpacklo_epi16" : {
                  "args" : ["SYMBOLIC_BV_8","SYMBOLIC_BV_128","SYMBOLIC_BV_128","SYMBOLIC_BV_128","16","16","16","16","16","0"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 5,
                  "out_precision_index" : 5,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_mask_unpackhi_epi8" : {
                  "args" : ["SYMBOLIC_BV_16","SYMBOLIC_BV_128","SYMBOLIC_BV_128","SYMBOLIC_BV_128","8","8","8","8","8","64"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 5,
                  "out_precision_index" : 5,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_maskz_unpacklo_epi8" : {
                  "args" : ["SYMBOLIC_BV_16","(bv #x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 128)","SYMBOLIC_BV_128","SYMBOLIC_BV_128","8","8","8","8","8","0"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 5,
                  "out_precision_index" : 5,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_mask_unpackhi_epi16" : {
                  "args" : ["SYMBOLIC_BV_8","SYMBOLIC_BV_128","SYMBOLIC_BV_128","SYMBOLIC_BV_128","16","16","16","16","16","64"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 5,
                  "out_precision_index" : 5,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_mask_unpackhi_epi32" : {
                  "args" : ["SYMBOLIC_BV_8","SYMBOLIC_BV_128","SYMBOLIC_BV_128","SYMBOLIC_BV_128","32","32","32","32","32","64"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 5,
                  "out_precision_index" : 5,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_maskz_unpacklo_epi16" : {
                  "args" : ["SYMBOLIC_BV_8","(bv #x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 128)","SYMBOLIC_BV_128","SYMBOLIC_BV_128","16","16","16","16","16","0"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 5,
                  "out_precision_index" : 5,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm_mask_unpacklo_epi16  k.perm src.perm a.perm b.perm %elemsize0.perm %elemsize1.perm %arg0.perm %arg1.perm %arg2.perm %arg3.perm )"', '"(define tmp_dst0.perm"', '"(apply"', '"concat"', '"(for/list ([%outer.it.perm (reverse (range 0 128 128))])"', '" (apply"', '" concat"', '" (for/list ([iterator.0.site0.new.perm (reverse (range 0 64 %elemsize0.perm))])"', '"  (define %factor0.perm (/  %arg2.perm  %elemsize0.perm))"', '"  (define %factor1.perm (*  2  %factor0.perm))"', '"  (define iterator.0.site0.new.mul.perm (*  iterator.0.site0.new.perm  %factor1.perm))"', '"  (define %0.site0.new.low.idx.perm (+  %arg3.perm  iterator.0.site0.new.perm))"', '"  (define %lastidx1.perm (-  %arg0.perm  1))"', '"  (define %0.site0.new.high.idx0.perm (+  %0.site0.new.low.idx.perm  %lastidx1.perm))"', '"  (define %0.copy.copy.00.new.perm (extract  %0.site0.new.high.idx0.perm %0.site0.new.low.idx.perm a.perm))"', '"  (define %1.copy.copy.00.new.perm (extract  %0.site0.new.high.idx0.perm %0.site0.new.low.idx.perm b.perm))"', '"(concat %1.copy.copy.00.new.perm %0.copy.copy.00.new.perm)"', '" )"', '" )"', '")"', '")"', '")"', '"(define dst.perm"', '"(apply"', '"concat"', '"(for/list ([%outer.it.perm (reverse (range 0 128 128))])"', '" (apply"', '" concat"', '" (for/list ([j0.new.perm (reverse (range 0 128 %elemsize1.perm))])"', '"  (define j0.new.div.perm (/  j0.new.perm  %elemsize1.perm))"', '"  (define %4.perm (extract  j0.new.div.perm j0.new.div.perm k.perm))"', '"  (define %cond0.perm (bveq  %4.perm  (bv 1 1)))"', '"  (cond"', '"  [(equal? %cond0.perm #t)"', '"   (begin"', '"   (define %lastidx4.perm (-  %elemsize1.perm  1))"', '"   (define %6.perm (+  j0.new.perm  %lastidx4.perm))"', '"   (define %7.perm (extract  %6.perm j0.new.perm tmp_dst0.perm))"', '"   %7.perm"', '"   )]"', '"  [else (begin"', '"   (define %lastidx5.perm (-  %elemsize1.perm  1))"', '"   (define %10.perm (+  j0.new.perm  %lastidx5.perm))"', '"   (define %11.perm (extract  %10.perm j0.new.perm src.perm))"', '"   %11.perm"', '"   )]"', '"  )"', '" )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst.perm 0)"', '")"', '""'], 
      },
        
          "_m_packsswb" : {
            "target_instructions" : {
              "_mm_packs_pi16" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_64","32","8","32","64","8","16","16","64"],
                  "in_vectsize" : 64,
                  "out_vectsize" : 64,
                  "lanesize" : 64,
                  "in_precision" : 16,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 6,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '2'}}, {'Skylake': {'l': '3', 't': '2'}}]",
                  "SIMD" : "True",
      },
        
              "_m_packssdw" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_64","32","16","32","64","16","32","32","64"],
                  "in_vectsize" : 64,
                  "out_vectsize" : 64,
                  "lanesize" : 64,
                  "in_precision" : 32,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 6,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '2'}}, {'Skylake': {'l': '3', 't': '2'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_packs_pi32" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_64","32","16","32","64","16","32","32","64"],
                  "in_vectsize" : 64,
                  "out_vectsize" : 64,
                  "lanesize" : 64,
                  "in_precision" : 32,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 6,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '2'}}, {'Skylake': {'l': '3', 't': '2'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_packs_epi16" : {
                  "args" : ["SYMBOLIC_BV_128","SYMBOLIC_BV_128","64","8","64","128","8","16","16","128"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 6,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_m_packsswb" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_64","32","8","32","64","8","16","16","64"],
                  "in_vectsize" : 64,
                  "out_vectsize" : 64,
                  "lanesize" : 64,
                  "in_precision" : 16,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 6,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '2'}}, {'Skylake': {'l': '3', 't': '2'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_packs_epi32" : {
                  "args" : ["SYMBOLIC_BV_128","SYMBOLIC_BV_128","64","16","64","128","16","32","32","128"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 32,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 6,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_m_packsswb  a b %innerlanesize0 %elemsize0 %innerlaneoffset1 %innerlanesize1 %elemsize1 %arg0 %arg1 %arg2 )"', '"(define dst"', '"(apply"', '"concat"', '"(for/list ([%outer.it (reverse (range 0 1 1))])"', '" (concat "', '"  (apply"', '"  concat"', '"  (for/list ([iterator.1 (reverse (range %innerlaneoffset1 %innerlanesize1 %elemsize1))])"', '"   (define %low.cofactor1 (*  iterator.1  2))"', '"   (define %low.offset0.new0 (-  %low.cofactor1  %arg2))"', '"   (define %lastidx3 (-  %arg1  1))"', '"   (define %high.offset2 (+  %low.offset0.new0  %lastidx3))"', '"   (define %8 (extract  %high.offset2 %low.offset0.new0 b))"', '"   (define %9 (bvssat %8 %arg1 %elemsize1 ))"', '"   %9"', '"  )"', '"  )"', '"  (apply"', '"  concat"', '"  (for/list ([iterator.0 (reverse (range 0 %innerlanesize0 %elemsize0))])"', '"   (define %factor0 (/  %arg0  %elemsize0))"', '"   (define %low.cofactor0 (*  iterator.0  %factor0))"', '"   (define %lastidx1 (-  %arg0  1))"', '"   (define %high.offset0 (+  %low.cofactor0  %lastidx1))"', '"   (define %0 (extract  %high.offset0 %low.cofactor0 a))"', '"   (define %1 (bvssat %0 %arg0 %elemsize0 ))"', '"   %1"', '"  )"', '"  )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst 0)"', '")"', '""'], 
      },
        
          "_mm512_maskz_packs_epi16" : {
            "target_instructions" : {
              "_mm512_mask_packs_epi16" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_512","SYMBOLIC_BV_512","SYMBOLIC_BV_512","512","16","16","512","8","8","8"],
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 8,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_mask_packs_epi32" : {
                  "args" : ["SYMBOLIC_BV_32","SYMBOLIC_BV_512","SYMBOLIC_BV_512","SYMBOLIC_BV_512","512","32","32","512","16","16","16"],
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 8,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_maskz_packs_epi16" : {
                  "args" : ["SYMBOLIC_BV_32","(bv #x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 256)","SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","16","16","256","8","8","8"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 16,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 8,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_maskz_packs_epi32" : {
                  "args" : ["SYMBOLIC_BV_32","(bv #x
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 32,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 8,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_maskz_packs_epi32" : {
                  "args" : ["SYMBOLIC_BV_16","(bv #x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 256)","SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","32","32","256","16","16","16"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 32,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 8,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_mask_packs_epi16" : {
                  "args" : ["SYMBOLIC_BV_32","SYMBOLIC_BV_256","SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","16","16","256","8","8","8"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 8,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_mask_packs_epi32" : {
                  "args" : ["SYMBOLIC_BV_16","SYMBOLIC_BV_256","SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","32","32","256","16","16","16"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 8,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_maskz_packs_epi16" : {
                  "args" : ["SYMBOLIC_BV_64","(bv #x
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 16,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 8,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm512_maskz_packs_epi16  k.norm src.norm a.norm b.norm %vectsize0.norm %elemsize0.norm %elemsize1.norm %innerlanesize2.norm %elemsize2.norm %arg0.norm %arg1.norm )"', '"(define tmp_dst.norm"', '"(apply"', '"concat"', '"(for/list ([iterator.lane.norm (reverse (range 0 %vectsize0.norm 128))])"', '" (concat "', '"  (apply"', '"  concat"', '"  (for/list ([iterator.1.new.norm (reverse (range 128 256 %elemsize1.norm))])"', '"   (define %low.scaled.it2.norm (+  iterator.lane.norm  iterator.1.new.norm))"', '"   (define %low.offset0.new0.norm (-  %low.scaled.it2.norm  128))"', '"   (define %lastidx3.norm (-  %elemsize1.norm  1))"', '"   (define %high.offset2.norm (+  %low.offset0.new0.norm  %lastidx3.norm))"', '"   (define %16.norm (extract  %high.offset2.norm %low.offset0.new0.norm b.norm))"', '"   (define %17.norm (bvssat %16.norm %elemsize1.norm %arg1.norm ))"', '"   %17.norm"', '"  )"', '"  )"', '"  (apply"', '"  concat"', '"  (for/list ([iterator.0.new.norm (reverse (range 0 128 %elemsize0.norm))])"', '"   (define %low.scaled.it0.norm (+  iterator.lane.norm  iterator.0.new.norm))"', '"   (define %lastidx1.norm (-  %elemsize0.norm  1))"', '"   (define %high.offset0.norm (+  %low.scaled.it0.norm  %lastidx1.norm))"', '"   (define %0.norm (extract  %high.offset0.norm %low.scaled.it0.norm a.norm))"', '"   (define %1.norm (bvssat %0.norm %elemsize0.norm %arg0.norm ))"', '"   %1.norm"', '"  )"', '"  )"', '" )"', '")"', '")"', '")"', '"(define dst.norm"', '"(apply"', '"concat"', '"(for/list ([%outer.it.norm (reverse (range 0 1 1))])"', '" (apply"', '" concat"', '" (for/list ([j0.new.norm (reverse (range 0 %innerlanesize2.norm %elemsize2.norm))])"', '"  (define j0.new.div.norm (/  j0.new.norm  %elemsize2.norm))"', '"  (define %129.norm (extract  j0.new.div.norm j0.new.div.norm k.norm))"', '"  (define %cond0.norm (bveq  %129.norm  (bv 1 1)))"', '"  (cond"', '"  [(equal? %cond0.norm #t)"', '"   (begin"', '"   (define %lastidx5.norm (-  %elemsize2.norm  1))"', '"   (define %131.norm (+  j0.new.norm  %lastidx5.norm))"', '"   (define %132.norm (extract  %131.norm j0.new.norm tmp_dst.norm))"', '"   %132.norm"', '"   )]"', '"  [else (begin"', '"   (define %lastidx6.norm (-  %elemsize2.norm  1))"', '"   (define %135.norm (+  j0.new.norm  %lastidx6.norm))"', '"   (define %136.norm (extract  %135.norm j0.new.norm src.norm))"', '"   %136.norm"', '"   )]"', '"  )"', '" )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst.norm 0)"', '")"', '""'], 
      },
        
          "_mm512_mask_unpackhi_epi8" : {
            "target_instructions" : {
              "_mm512_maskz_unpackhi_epi16" : {
                  "args" : ["SYMBOLIC_BV_32","(bv #x
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 7,
                  "out_precision_index" : 7,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_maskz_unpackhi_epi32" : {
                  "args" : ["SYMBOLIC_BV_8","(bv #x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 256)","SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","32","256","32","32","32","32"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 7,
                  "out_precision_index" : 7,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_maskz_unpackhi_epi8" : {
                  "args" : ["SYMBOLIC_BV_32","(bv #x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 256)","SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","8","256","8","8","8","8"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 7,
                  "out_precision_index" : 7,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_maskz_unpackhi_epi16" : {
                  "args" : ["SYMBOLIC_BV_16","(bv #x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 256)","SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","16","256","16","16","16","16"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 7,
                  "out_precision_index" : 7,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_maskz_unpackhi_epi32" : {
                  "args" : ["SYMBOLIC_BV_16","(bv #x
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 7,
                  "out_precision_index" : 7,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_maskz_unpackhi_epi8" : {
                  "args" : ["SYMBOLIC_BV_64","(bv #x
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 7,
                  "out_precision_index" : 7,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_mask_unpackhi_epi16" : {
                  "args" : ["SYMBOLIC_BV_32","SYMBOLIC_BV_512","SYMBOLIC_BV_512","SYMBOLIC_BV_512","512","16","512","16","16","16","16"],
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 7,
                  "out_precision_index" : 7,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_mask_unpackhi_epi16" : {
                  "args" : ["SYMBOLIC_BV_16","SYMBOLIC_BV_256","SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","16","256","16","16","16","16"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 7,
                  "out_precision_index" : 7,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_mask_unpackhi_epi32" : {
                  "args" : ["SYMBOLIC_BV_16","SYMBOLIC_BV_512","SYMBOLIC_BV_512","SYMBOLIC_BV_512","512","32","512","32","32","32","32"],
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 7,
                  "out_precision_index" : 7,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_mask_unpackhi_epi32" : {
                  "args" : ["SYMBOLIC_BV_8","SYMBOLIC_BV_256","SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","32","256","32","32","32","32"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 7,
                  "out_precision_index" : 7,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_mask_unpackhi_epi8" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_512","SYMBOLIC_BV_512","SYMBOLIC_BV_512","512","8","512","8","8","8","8"],
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 7,
                  "out_precision_index" : 7,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_mask_unpackhi_epi8" : {
                  "args" : ["SYMBOLIC_BV_32","SYMBOLIC_BV_256","SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","8","256","8","8","8","8"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 7,
                  "out_precision_index" : 7,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm512_mask_unpackhi_epi8  k.norm %arg6.norm a.norm b.norm %vectsize0.norm %elemsize0.norm %innerlanesize1.norm %elemsize1.norm %arg0.norm %arg1.norm %arg2.norm )"', '"(define tmp_dst.norm"', '"(apply"', '"concat"', '"(for/list ([iterator.0.norm (reverse (range 0 %vectsize0.norm 128))])"', '" (apply"', '" concat"', '" (for/list ([iterator.0.site0.new.norm (reverse (range 0 64 %elemsize0.norm))])"', '"  (define %factor0.norm (/  %arg2.norm  %elemsize0.norm))"', '"  (define %factor1.norm (*  2  %factor0.norm))"', '"  (define iterator.0.site0.new.mul.norm (*  iterator.0.site0.new.norm  %factor1.norm))"', '"  (define %low.offset0.site0.norm (+  iterator.0.site0.new.norm  64))"', '"  (define %0.site0.new.low.idx.norm (+  iterator.0.norm  %low.offset0.site0.norm))"', '"  (define %lastidx1.norm (-  %arg0.norm  1))"', '"  (define %0.site0.new.high.idx0.norm (+  %0.site0.new.low.idx.norm  %lastidx1.norm))"', '"  (define %0.copy.copy.00.new.norm (extract  %0.site0.new.high.idx0.norm %0.site0.new.low.idx.norm a.norm))"', '"  (define %1.copy.copy.00.new.norm (extract  %0.site0.new.high.idx0.norm %0.site0.new.low.idx.norm b.norm))"', '"  (define %low.offset2.site0.norm (+  iterator.0.site0.new.mul.norm  %arg1.norm))"', '"(concat %1.copy.copy.00.new.norm %0.copy.copy.00.new.norm)"', '" )"', '" )"', '")"', '")"', '")"', '"(define dst.norm"', '"(apply"', '"concat"', '"(for/list ([%outer.it.norm (reverse (range 0 1 1))])"', '" (apply"', '" concat"', '" (for/list ([j0.new.norm (reverse (range 0 %innerlanesize1.norm %elemsize1.norm))])"', '"  (define j0.new.div.norm (/  j0.new.norm  %elemsize1.norm))"', '"  (define %13.norm (extract  j0.new.div.norm j0.new.div.norm k.norm))"', '"  (define %cond0.norm (bveq  %13.norm  (bv 1 1)))"', '"  (cond"', '"  [(equal? %cond0.norm #t)"', '"   (begin"', '"   (define %lastidx4.norm (-  %elemsize1.norm  1))"', '"   (define %15.norm (+  j0.new.norm  %lastidx4.norm))"', '"   (define %16.norm (extract  %15.norm j0.new.norm tmp_dst.norm))"', '"   %16.norm"', '"   )]"', '"  [else (begin"', '"   (define %lastidx5.norm (-  %elemsize1.norm  1))"', '"   (define %19.norm (+  j0.new.norm  %lastidx5.norm))"', '"   (define %23.norm (extract  %19.norm j0.new.norm %arg6.norm))"', '"   %23.norm"', '"   )]"', '"  )"', '" )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst.norm 0)"', '")"', '""'], 
      },
        
          "_mm256_hadd_epi32" : {
            "target_instructions" : {
              "_mm256_hadd_epi32" : {
                  "args" : ["SYMBOLIC_BV_256","SYMBOLIC_BV_256","32","32","32","96"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 128,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '3', 't': '2'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_hadd_epi16" : {
                  "args" : ["SYMBOLIC_BV_256","SYMBOLIC_BV_256","16","16","16","112"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '3', 't': '2'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm256_hadd_epi32  a b %elemsize0 %elemsize1 %arg0 %arg3 )"', '"(define dst"', '"(apply"', '"concat"', '"(for/list ([iterator.lane (reverse (range 0 256 128))])"', '" (concat "', '"  (apply"', '"  concat"', '"  (for/list ([iterator.1 (reverse (range 64 128 %elemsize1))])"', '"   (define %low.cofactor2 (*  iterator.1  2))"', '"   (define %low.scaled.it3 (+  iterator.lane  %low.cofactor2))"', '"   (define %low.offset1.new0 (-  %low.scaled.it3  %arg3))"', '"   (define %lastidx5 (-  %elemsize1  1))"', '"   (define %high.offset3 (+  %low.offset1.new0  %lastidx5))"', '"   (define %6 (extract  %high.offset3 %low.offset1.new0 b))"', '"   (define %low.offset2.new0 (-  %low.scaled.it3  128))"', '"   (define %lastidx4 (-  %elemsize1  1))"', '"   (define %high.offset4 (+  %low.offset2.new0  %lastidx4))"', '"   (define %7 (extract  %high.offset4 %low.offset2.new0 b))"', '"   (define %8 (bvadd  %6  %7))"', '"   %8"', '"  )"', '"  )"', '"  (apply"', '"  concat"', '"  (for/list ([iterator.0 (reverse (range 0 64 %elemsize0))])"', '"   (define %low.cofactor0 (*  iterator.0  2))"', '"   (define %low.scaled.it0 (+  iterator.lane  %low.cofactor0))"', '"   (define %low.offset0 (+  %low.scaled.it0  %arg0))"', '"   (define %lastidx2 (-  %elemsize0  1))"', '"   (define %high.offset0 (+  %low.offset0  %lastidx2))"', '"   (define %0 (extract  %high.offset0 %low.offset0 a))"', '"   (define %lastidx1 (-  %elemsize0  1))"', '"   (define %high.offset1 (+  %low.scaled.it0  %lastidx1))"', '"   (define %1 (extract  %high.offset1 %low.scaled.it0 a))"', '"   (define %2 (bvadd  %0  %1))"', '"   %2"', '"  )"', '"  )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst 0)"', '")"', '""'], 
      },
        
          "_mm256_hsub_epi32" : {
            "target_instructions" : {
              "_mm256_hsub_epi16" : {
                  "args" : ["SYMBOLIC_BV_256","SYMBOLIC_BV_256","16","16","16","112"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '3', 't': '2'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_hsub_epi32" : {
                  "args" : ["SYMBOLIC_BV_256","SYMBOLIC_BV_256","32","32","32","96"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 128,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '3', 't': '2'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm256_hsub_epi32  a b %elemsize0 %elemsize1 %arg0 %arg2 )"', '"(define dst"', '"(apply"', '"concat"', '"(for/list ([iterator.lane (reverse (range 0 256 128))])"', '" (concat "', '"  (apply"', '"  concat"', '"  (for/list ([iterator.1 (reverse (range 64 128 %elemsize1))])"', '"   (define %low.cofactor2 (*  iterator.1  2))"', '"   (define %low.scaled.it3 (+  iterator.lane  %low.cofactor2))"', '"   (define %low.offset1.new0 (-  %low.scaled.it3  128))"', '"   (define %lastidx5 (-  %elemsize1  1))"', '"   (define %high.offset3 (+  %low.offset1.new0  %lastidx5))"', '"   (define %12 (extract  %high.offset3 %low.offset1.new0 b))"', '"   (define %low.offset2.new0 (-  %low.scaled.it3  %arg2))"', '"   (define %lastidx4 (-  %elemsize1  1))"', '"   (define %high.offset4 (+  %low.offset2.new0  %lastidx4))"', '"   (define %13 (extract  %high.offset4 %low.offset2.new0 b))"', '"   (define %14 (bvsub  %12  %13))"', '"   %14"', '"  )"', '"  )"', '"  (apply"', '"  concat"', '"  (for/list ([iterator.0 (reverse (range 0 64 %elemsize0))])"', '"   (define %low.cofactor0 (*  iterator.0  2))"', '"   (define %low.scaled.it0 (+  iterator.lane  %low.cofactor0))"', '"   (define %lastidx2 (-  %elemsize0  1))"', '"   (define %high.offset0 (+  %low.scaled.it0  %lastidx2))"', '"   (define %0 (extract  %high.offset0 %low.scaled.it0 a))"', '"   (define %low.offset0 (+  %low.scaled.it0  %arg0))"', '"   (define %lastidx1 (-  %elemsize0  1))"', '"   (define %high.offset1 (+  %low.offset0  %lastidx1))"', '"   (define %1 (extract  %high.offset1 %low.offset0 a))"', '"   (define %2 (bvsub  %0  %1))"', '"   %2"', '"  )"', '"  )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst 0)"', '")"', '""'], 
      },
        
          "_mm_hsub_pi32" : {
            "target_instructions" : {
              "_mm_hsub_pi32" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_64"],
                  "in_vectsize" : 64,
                  "out_vectsize" : 64,
                  "lanesize" : 32,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : None,
                  "out_precision_index" : None,
                  "arg_permute_map" : [0,1],
                  "Cost" : "[{'Icelake': {'l': '3', 't': '2'}}, {'Skylake': {'l': '3', 't': '2'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm_hsub_pi32  a b )"', '"(define dst"', '"(apply"', '"concat"', '"(for/list ([%outer.it (reverse (range 0 1 1))])"', '" (apply"', '" concat"', '" (for/list ([%inner.it (reverse (range 0 32 32))])"', '"  (define %7 (+  %inner.it  31))"', '"  (define %0 (extract  %7 %inner.it a))"', '"  (define %8 (+  %inner.it  32))"', '"  (define %9 (+  %8  31))"', '"  (define %1 (extract  %9 %8 a))"', '"  (define %2 (bvsub  %0  %1))"', '"  (define %3 (extract  %7 %inner.it b))"', '"  (define %4 (extract  %9 %8 b))"', '"  (define %5 (bvsub  %3  %4))"', '"(concat %5 %2)"', '" )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst 0)"', '")"', '""'], 
      },
        
          "_mm256_maskz_unpacklo_epi8" : {
            "target_instructions" : {
              "_mm256_mask_unpacklo_epi32" : {
                  "args" : ["SYMBOLIC_BV_8","SYMBOLIC_BV_256","SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","32","256","32","32","32","32"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 7,
                  "out_precision_index" : 7,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_mask_unpacklo_epi16" : {
                  "args" : ["SYMBOLIC_BV_32","SYMBOLIC_BV_512","SYMBOLIC_BV_512","SYMBOLIC_BV_512","512","16","512","16","16","16","16"],
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 7,
                  "out_precision_index" : 7,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_maskz_unpacklo_epi32" : {
                  "args" : ["SYMBOLIC_BV_8","(bv #x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 256)","SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","32","256","32","32","32","32"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 7,
                  "out_precision_index" : 7,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_maskz_unpacklo_epi32" : {
                  "args" : ["SYMBOLIC_BV_16","(bv #x
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 7,
                  "out_precision_index" : 7,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_maskz_unpacklo_epi16" : {
                  "args" : ["SYMBOLIC_BV_16","(bv #x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 256)","SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","16","256","16","16","16","16"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 7,
                  "out_precision_index" : 7,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_mask_unpacklo_epi16" : {
                  "args" : ["SYMBOLIC_BV_16","SYMBOLIC_BV_256","SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","16","256","16","16","16","16"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 7,
                  "out_precision_index" : 7,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_mask_unpacklo_epi8" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_512","SYMBOLIC_BV_512","SYMBOLIC_BV_512","512","8","512","8","8","8","8"],
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 7,
                  "out_precision_index" : 7,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_maskz_unpacklo_epi8" : {
                  "args" : ["SYMBOLIC_BV_32","(bv #x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 256)","SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","8","256","8","8","8","8"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 7,
                  "out_precision_index" : 7,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_maskz_unpacklo_epi8" : {
                  "args" : ["SYMBOLIC_BV_64","(bv #x
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 7,
                  "out_precision_index" : 7,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_mask_unpacklo_epi32" : {
                  "args" : ["SYMBOLIC_BV_16","SYMBOLIC_BV_512","SYMBOLIC_BV_512","SYMBOLIC_BV_512","512","32","512","32","32","32","32"],
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 7,
                  "out_precision_index" : 7,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_mask_unpacklo_epi8" : {
                  "args" : ["SYMBOLIC_BV_32","SYMBOLIC_BV_256","SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","8","256","8","8","8","8"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 7,
                  "out_precision_index" : 7,
                  "arg_permute_map" : [1,0,2,3,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_maskz_unpacklo_epi16" : {
                  "args" : ["SYMBOLIC_BV_32","(bv #x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 512)","SYMBOLIC_BV_512","SYMBOLIC_BV_512","512","16","512","16","16","16","16"],
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 7,
                  "out_precision_index" : 7,
                  "arg_permute_map" : [0,-1,1,2,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm256_maskz_unpacklo_epi8  k.perm src.perm a.perm b.perm %vectsize0.perm %elemsize0.perm %innerlanesize1.perm %elemsize1.perm %arg0.perm %arg1.perm %arg2.perm )"', '"(define tmp_dst0.perm"', '"(apply"', '"concat"', '"(for/list ([iterator.0.perm (reverse (range 0 %vectsize0.perm 128))])"', '" (apply"', '" concat"', '" (for/list ([iterator.0.site0.new.perm (reverse (range 0 64 %elemsize0.perm))])"', '"  (define %factor0.perm (/  %arg2.perm  %elemsize0.perm))"', '"  (define %factor1.perm (*  2  %factor0.perm))"', '"  (define iterator.0.site0.new.mul.perm (*  iterator.0.site0.new.perm  %factor1.perm))"', '"  (define %0.site0.new.low.idx.perm (+  iterator.0.perm  iterator.0.site0.new.perm))"', '"  (define %lastidx1.perm (-  %arg0.perm  1))"', '"  (define %0.site0.new.high.idx0.perm (+  %0.site0.new.low.idx.perm  %lastidx1.perm))"', '"  (define %0.copy.copy.00.new.perm (extract  %0.site0.new.high.idx0.perm %0.site0.new.low.idx.perm a.perm))"', '"  (define %1.copy.copy.00.new.perm (extract  %0.site0.new.high.idx0.perm %0.site0.new.low.idx.perm b.perm))"', '"  (define %low.offset0.site0.perm (+  iterator.0.site0.new.mul.perm  %arg1.perm))"', '"(concat %1.copy.copy.00.new.perm %0.copy.copy.00.new.perm)"', '" )"', '" )"', '")"', '")"', '")"', '"(define dst.perm"', '"(apply"', '"concat"', '"(for/list ([%outer.it.perm (reverse (range 0 1 1))])"', '" (apply"', '" concat"', '" (for/list ([j0.new.perm (reverse (range 0 %innerlanesize1.perm %elemsize1.perm))])"', '"  (define j0.new.div.perm (/  j0.new.perm  %elemsize1.perm))"', '"  (define %7.perm (extract  j0.new.div.perm j0.new.div.perm k.perm))"', '"  (define %cond0.perm (bveq  %7.perm  (bv 1 1)))"', '"  (cond"', '"  [(equal? %cond0.perm #t)"', '"   (begin"', '"   (define %lastidx4.perm (-  %elemsize1.perm  1))"', '"   (define %9.perm (+  j0.new.perm  %lastidx4.perm))"', '"   (define %10.perm (extract  %9.perm j0.new.perm tmp_dst0.perm))"', '"   %10.perm"', '"   )]"', '"  [else (begin"', '"   (define %lastidx5.perm (-  %elemsize1.perm  1))"', '"   (define %13.perm (+  j0.new.perm  %lastidx5.perm))"', '"   (define %14.perm (extract  %13.perm j0.new.perm src.perm))"', '"   %14.perm"', '"   )]"', '"  )"', '" )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst.perm 0)"', '")"', '""'], 
      },
        
          "_mm256_unpacklo_epi32" : {
            "target_instructions" : {
              "_mm512_unpacklo_epi16" : {
                  "args" : ["SYMBOLIC_BV_512","SYMBOLIC_BV_512","512","16","16"],
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : 2,
                  "out_vectsize_index" : 2,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_unpacklo_epi8" : {
                  "args" : ["SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","8","8"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 128,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : 2,
                  "out_vectsize_index" : 2,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_unpacklo_epi8" : {
                  "args" : ["SYMBOLIC_BV_512","SYMBOLIC_BV_512","512","8","8"],
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 128,
                  "in_precision" : 8,
                  "out_precision" : 8,
                  "in_vectsize_index" : 2,
                  "out_vectsize_index" : 2,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_unpacklo_epi16" : {
                  "args" : ["SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","16","16"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : 2,
                  "out_vectsize_index" : 2,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_unpacklo_epi32" : {
                  "args" : ["SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","32","32"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 128,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : 2,
                  "out_vectsize_index" : 2,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_unpacklo_epi32" : {
                  "args" : ["SYMBOLIC_BV_512","SYMBOLIC_BV_512","512","32","32"],
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 128,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : 2,
                  "out_vectsize_index" : 2,
                  "lanesize_index" : None,
                  "in_precision_index" : 3,
                  "out_precision_index" : 3,
                  "arg_permute_map" : [0,1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm256_unpacklo_epi32  a b %vectsize0 %elemsize0 %arg0 )"', '"(define dst"', '"(apply"', '"concat"', '"(for/list ([iterator.0 (reverse (range 0 %vectsize0 128))])"', '" (apply"', '" concat"', '" (for/list ([iterator.0.site0.new (reverse (range 0 64 %elemsize0))])"', '"  (define %factor0 (/  %elemsize0  %elemsize0))"', '"  (define %factor1 (*  2  %factor0))"', '"  (define iterator.0.site0.new.mul (*  iterator.0.site0.new  %factor1))"', '"  (define %0.site0.new.low.idx (+  iterator.0  iterator.0.site0.new))"', '"  (define %lastidx1 (-  %elemsize0  1))"', '"  (define %0.site0.new.high.idx0 (+  %0.site0.new.low.idx  %lastidx1))"', '"  (define %0.copy.copy.00.new (extract  %0.site0.new.high.idx0 %0.site0.new.low.idx a))"', '"  (define %1.copy.copy.00.new (extract  %0.site0.new.high.idx0 %0.site0.new.low.idx b))"', '"(concat %1.copy.copy.00.new %0.copy.copy.00.new)"', '" )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst 0)"', '")"', '""'], 
      },
        
          "_mm_hadds_epi16" : {
            "target_instructions" : {
              "_mm_hadds_epi16" : {
                  "args" : ["SYMBOLIC_BV_128","SYMBOLIC_BV_128","64","64","128","128","112"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : None,
                  "out_precision_index" : None,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Skylake': {'l': '3', 't': '2'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_hadds_pi16" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_64","32","32","64","64","48"],
                  "in_vectsize" : 64,
                  "out_vectsize" : 64,
                  "lanesize" : 64,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : None,
                  "out_precision_index" : None,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '3', 't': '2'}}, {'Skylake': {'l': '3', 't': '2'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm_hadds_epi16  a b %innerlanesize0 %innerlaneoffset1 %innerlanesize1 %arg1 %arg2 )"', '"(define dst"', '"(apply"', '"concat"', '"(for/list ([%outer.it (reverse (range 0 1 1))])"', '" (concat "', '"  (apply"', '"  concat"', '"  (for/list ([iterator.1 (reverse (range %innerlaneoffset1 %innerlanesize1 16))])"', '"   (define %low.cofactor2 (*  iterator.1  2))"', '"   (define %low.offset1.new0 (-  %low.cofactor2  %arg2))"', '"   (define %high.offset3 (+  %low.offset1.new0  15))"', '"   (define %16 (extract  %high.offset3 %low.offset1.new0 b))"', '"   (define %low.offset2.new0 (-  %low.cofactor2  %arg1))"', '"   (define %high.offset4 (+  %low.offset2.new0  15))"', '"   (define %17 (extract  %high.offset4 %low.offset2.new0 b))"', '"   (define %18 (bvaddnsw  %16  %17 16))"', '"   %18"', '"  )"', '"  )"', '"  (apply"', '"  concat"', '"  (for/list ([iterator.0 (reverse (range 0 %innerlanesize0 16))])"', '"   (define %low.cofactor0 (*  iterator.0  2))"', '"   (define %low.offset0 (+  %low.cofactor0  16))"', '"   (define %high.offset0 (+  %low.offset0  15))"', '"   (define %0 (extract  %high.offset0 %low.offset0 a))"', '"   (define %high.offset1 (+  %low.cofactor0  15))"', '"   (define %1 (extract  %high.offset1 %low.cofactor0 a))"', '"   (define %2 (bvaddnsw  %0  %1 16))"', '"   %2"', '"  )"', '"  )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst 0)"', '")"', '""'], 
      },
        
          "_mm_hadd_pi32" : {
            "target_instructions" : {
              "_mm_hadd_pi32" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_64"],
                  "in_vectsize" : 64,
                  "out_vectsize" : 64,
                  "lanesize" : 32,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : None,
                  "out_precision_index" : None,
                  "arg_permute_map" : [0,1],
                  "Cost" : "[{'Icelake': {'l': '3', 't': '2'}}, {'Skylake': {'l': '3', 't': '2'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm_hadd_pi32  a b )"', '"(define dst"', '"(apply"', '"concat"', '"(for/list ([%outer.it (reverse (range 0 1 1))])"', '" (apply"', '" concat"', '" (for/list ([%inner.it (reverse (range 0 32 32))])"', '"  (define %6 (+  %inner.it  32))"', '"  (define %7 (+  %6  31))"', '"  (define %0 (extract  %7 %6 a))"', '"  (define %9 (+  %inner.it  31))"', '"  (define %1 (extract  %9 %inner.it a))"', '"  (define %2 (bvadd  %0  %1))"', '"  (define %3 (extract  %7 %6 b))"', '"  (define %4 (extract  %9 %inner.it b))"', '"  (define %5 (bvadd  %3  %4))"', '"(concat %5 %2)"', '" )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst 0)"', '")"', '""'], 
      },
        
          "_mm_packus_epi16" : {
            "target_instructions" : {
              "_mm_packus_epi16" : {
                  "args" : ["SYMBOLIC_BV_128","SYMBOLIC_BV_128","64","8","64","128","8","16","16","128"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 6,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_packs_pu16" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_64","32","8","32","64","8","16","16","64"],
                  "in_vectsize" : 64,
                  "out_vectsize" : 64,
                  "lanesize" : 64,
                  "in_precision" : 16,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 6,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '2'}}, {'Skylake': {'l': '3', 't': '2'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_packus_epi32" : {
                  "args" : ["SYMBOLIC_BV_128","SYMBOLIC_BV_128","64","16","64","128","16","32","32","128"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 32,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 6,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_m_packuswb" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_64","32","8","32","64","8","16","16","64"],
                  "in_vectsize" : 64,
                  "out_vectsize" : 64,
                  "lanesize" : 64,
                  "in_precision" : 16,
                  "out_precision" : 8,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 8,
                  "out_precision_index" : 6,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '2'}}, {'Skylake': {'l': '3', 't': '2'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm_packus_epi16  a b %innerlanesize0 %elemsize0 %innerlaneoffset1 %innerlanesize1 %elemsize1 %arg0 %arg1 %arg2 )"', '"(define dst"', '"(apply"', '"concat"', '"(for/list ([%outer.it (reverse (range 0 1 1))])"', '" (concat "', '"  (apply"', '"  concat"', '"  (for/list ([iterator.1 (reverse (range %innerlaneoffset1 %innerlanesize1 %elemsize1))])"', '"   (define %low.cofactor1 (*  iterator.1  2))"', '"   (define %low.offset0.new0 (-  %low.cofactor1  %arg2))"', '"   (define %lastidx3 (-  %arg1  1))"', '"   (define %high.offset2 (+  %low.offset0.new0  %lastidx3))"', '"   (define %16 (extract  %high.offset2 %low.offset0.new0 b))"', '"   (define %17 (bvusat %16 %arg1 %elemsize1 ))"', '"   %17"', '"  )"', '"  )"', '"  (apply"', '"  concat"', '"  (for/list ([iterator.0 (reverse (range 0 %innerlanesize0 %elemsize0))])"', '"   (define %factor0 (/  %arg0  %elemsize0))"', '"   (define %low.cofactor0 (*  iterator.0  %factor0))"', '"   (define %lastidx1 (-  %arg0  1))"', '"   (define %high.offset0 (+  %low.cofactor0  %lastidx1))"', '"   (define %0 (extract  %high.offset0 %low.cofactor0 a))"', '"   (define %1 (bvusat %0 %arg0 %elemsize0 ))"', '"   %1"', '"  )"', '"  )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst 0)"', '")"', '""'], 
      },
        
          "_mm256_unpacklo_epi64" : {
            "target_instructions" : {
              "_mm256_unpacklo_epi64" : {
                  "args" : ["SYMBOLIC_BV_256","SYMBOLIC_BV_256","128","0"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 64,
                  "out_precision" : 64,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : None,
                  "out_precision_index" : None,
                  "arg_permute_map" : [0,1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '0.5'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_unpacklo_epi64" : {
                  "args" : ["SYMBOLIC_BV_512","SYMBOLIC_BV_512","256","0"],
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 64,
                  "out_precision" : 64,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : None,
                  "out_precision_index" : None,
                  "arg_permute_map" : [0,1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_unpackhi_epi64" : {
                  "args" : ["SYMBOLIC_BV_512","SYMBOLIC_BV_512","256","64"],
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 512,
                  "in_precision" : 64,
                  "out_precision" : 64,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : None,
                  "out_precision_index" : None,
                  "arg_permute_map" : [0,1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_unpackhi_epi64" : {
                  "args" : ["SYMBOLIC_BV_256","SYMBOLIC_BV_256","128","64"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 256,
                  "in_precision" : 64,
                  "out_precision" : 64,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : None,
                  "out_precision_index" : None,
                  "arg_permute_map" : [0,1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '1', 't': ''}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm256_unpacklo_epi64  a b %innerlanesize0 %arg2 )"', '"(define dst"', '"(apply"', '"concat"', '"(for/list ([%outer.it (reverse (range 0 1 1))])"', '" (apply"', '" concat"', '" (for/list ([iterator.0.new (reverse (range 0 %innerlanesize0 64))])"', '"  (define iterator.0.new.mul (*  iterator.0.new  2))"', '"  (define %0.site0.new.low.idx (+  iterator.0.new.mul  %arg2))"', '"  (define %0.site0.new.high.idx0 (+  %0.site0.new.low.idx  63))"', '"  (define %0.copy.copy.00.new (extract  %0.site0.new.high.idx0 %0.site0.new.low.idx a))"', '"  (define %1.copy.copy.00.new (extract  %0.site0.new.high.idx0 %0.site0.new.low.idx b))"', '"(concat %1.copy.copy.00.new %0.copy.copy.00.new)"', '" )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst 0)"', '")"', '""'], 
      },
        
          "_mm256_packs_epi32" : {
            "target_instructions" : {
              "_mm256_packs_epi16" : {
                  "args" : ["SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","8","8","16","16"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 8,
                  "in_vectsize_index" : 2,
                  "out_vectsize_index" : 2,
                  "lanesize_index" : None,
                  "in_precision_index" : 6,
                  "out_precision_index" : 4,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '3', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_packs_epi32" : {
                  "args" : ["SYMBOLIC_BV_512","SYMBOLIC_BV_512","512","16","16","32","32"],
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 128,
                  "in_precision" : 32,
                  "out_precision" : 16,
                  "in_vectsize_index" : 2,
                  "out_vectsize_index" : 2,
                  "lanesize_index" : None,
                  "in_precision_index" : 6,
                  "out_precision_index" : 4,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm256_packs_epi32" : {
                  "args" : ["SYMBOLIC_BV_256","SYMBOLIC_BV_256","256","16","16","32","32"],
                  "in_vectsize" : 256,
                  "out_vectsize" : 256,
                  "lanesize" : 128,
                  "in_precision" : 32,
                  "out_precision" : 16,
                  "in_vectsize_index" : 2,
                  "out_vectsize_index" : 2,
                  "lanesize_index" : None,
                  "in_precision_index" : 6,
                  "out_precision_index" : 4,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '3', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        
              "_mm512_packs_epi16" : {
                  "args" : ["SYMBOLIC_BV_512","SYMBOLIC_BV_512","512","8","8","16","16"],
                  "in_vectsize" : 512,
                  "out_vectsize" : 512,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 8,
                  "in_vectsize_index" : 2,
                  "out_vectsize_index" : 2,
                  "lanesize_index" : None,
                  "in_precision_index" : 6,
                  "out_precision_index" : 4,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '1'}}, {'Skylake': {'l': '1', 't': '1'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm256_packs_epi32  a b %vectsize0 %elemsize0 %elemsize1 %arg0 %arg2 )"', '"(define dst"', '"(apply"', '"concat"', '"(for/list ([iterator.lane (reverse (range 0 %vectsize0 128))])"', '" (concat "', '"  (apply"', '"  concat"', '"  (for/list ([iterator.1 (reverse (range 64 128 %elemsize1))])"', '"   (define %low.cofactor1 (*  iterator.1  2))"', '"   (define %low.scaled.it2 (+  iterator.lane  %low.cofactor1))"', '"   (define %low.offset0.new0 (-  %low.scaled.it2  128))"', '"   (define %lastidx3 (-  %arg2  1))"', '"   (define %high.offset2 (+  %low.offset0.new0  %lastidx3))"', '"   (define %16 (extract  %high.offset2 %low.offset0.new0 b))"', '"   (define %17 (bvssat %16 %arg2 %elemsize1 ))"', '"   %17"', '"  )"', '"  )"', '"  (apply"', '"  concat"', '"  (for/list ([iterator.0 (reverse (range 0 64 %elemsize0))])"', '"   (define %low.cofactor0 (*  iterator.0  2))"', '"   (define %low.scaled.it0 (+  iterator.lane  %low.cofactor0))"', '"   (define %lastidx1 (-  %arg0  1))"', '"   (define %high.offset0 (+  %low.scaled.it0  %lastidx1))"', '"   (define %0 (extract  %high.offset0 %low.scaled.it0 a))"', '"   (define %1 (bvssat %0 %arg0 %elemsize0 ))"', '"   %1"', '"  )"', '"  )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst 0)"', '")"', '""'], 
      },
        
          "_mm_hsub_epi32" : {
            "target_instructions" : {
              "_mm_hsub_epi16" : {
                  "args" : ["SYMBOLIC_BV_128","SYMBOLIC_BV_128","64","16","64","128","16","16","112","128"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 6,
                  "out_precision_index" : 6,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Skylake': {'l': '3', 't': '2'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_hsub_epi32" : {
                  "args" : ["SYMBOLIC_BV_128","SYMBOLIC_BV_128","64","32","64","128","32","32","96","128"],
                  "in_vectsize" : 128,
                  "out_vectsize" : 128,
                  "lanesize" : 128,
                  "in_precision" : 32,
                  "out_precision" : 32,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 6,
                  "out_precision_index" : 6,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Skylake': {'l': '3', 't': '2'}}]",
                  "SIMD" : "True",
      },
        
              "_mm_hsub_pi16" : {
                  "args" : ["SYMBOLIC_BV_64","SYMBOLIC_BV_64","32","16","32","64","16","16","48","64"],
                  "in_vectsize" : 64,
                  "out_vectsize" : 64,
                  "lanesize" : 64,
                  "in_precision" : 16,
                  "out_precision" : 16,
                  "in_vectsize_index" : None,
                  "out_vectsize_index" : None,
                  "lanesize_index" : None,
                  "in_precision_index" : 6,
                  "out_precision_index" : 6,
                  "arg_permute_map" : [0,1,-1,-1,-1,-1,-1,-1,-1,-1],
                  "Cost" : "[{'Icelake': {'l': '', 't': '2'}}, {'Skylake': {'l': '3', 't': '2'}}]",
                  "SIMD" : "True",
      },
        },
            "semantics" : ['"(define (_mm_hsub_epi32  a b %innerlanesize0 %elemsize0 %innerlaneoffset1 %innerlanesize1 %elemsize1 %arg0 %arg1 %arg2 )"', '"(define dst"', '"(apply"', '"concat"', '"(for/list ([%outer.it (reverse (range 0 1 1))])"', '" (concat "', '"  (apply"', '"  concat"', '"  (for/list ([iterator.1 (reverse (range %innerlaneoffset1 %innerlanesize1 %elemsize1))])"', '"   (define %low.cofactor2 (*  iterator.1  2))"', '"   (define %low.offset1.new0 (-  %low.cofactor2  %arg2))"', '"   (define %lastidx5 (-  %elemsize1  1))"', '"   (define %high.offset3 (+  %low.offset1.new0  %lastidx5))"', '"   (define %12 (extract  %high.offset3 %low.offset1.new0 b))"', '"   (define %low.offset2.new0 (-  %low.cofactor2  %arg1))"', '"   (define %lastidx4 (-  %elemsize1  1))"', '"   (define %high.offset4 (+  %low.offset2.new0  %lastidx4))"', '"   (define %13 (extract  %high.offset4 %low.offset2.new0 b))"', '"   (define %14 (bvsub  %12  %13))"', '"   %14"', '"  )"', '"  )"', '"  (apply"', '"  concat"', '"  (for/list ([iterator.0 (reverse (range 0 %innerlanesize0 %elemsize0))])"', '"   (define %factor0 (/  %elemsize0  %elemsize0))"', '"   (define %factor1 (*  2  %factor0))"', '"   (define %low.cofactor0 (*  iterator.0  %factor1))"', '"   (define %lastidx2 (-  %elemsize0  1))"', '"   (define %high.offset0 (+  %low.cofactor0  %lastidx2))"', '"   (define %0 (extract  %high.offset0 %low.cofactor0 a))"', '"   (define %low.offset0 (+  %low.cofactor0  %arg0))"', '"   (define %lastidx1 (-  %elemsize0  1))"', '"   (define %high.offset1 (+  %low.offset0  %lastidx1))"', '"   (define %1 (extract  %high.offset1 %low.offset0 a))"', '"   (define %2 (bvsub  %0  %1))"', '"   %2"', '"  )"', '"  )"', '" )"', '")"', '")"', '")"', '"(bvpadhighbits  dst 0)"', '")"', '""'], 
      },
        }
