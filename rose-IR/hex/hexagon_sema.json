{"Vd.h=vdmpy(Vu.ub,Rt.b)": "for (i = 0; i < VELEM(16); i++) {\nVd.h[i] = (Vu.uh[i].ub[0] * Rt.b[(2*i) % 4]);\nVd.h[i] += (Vu.uh[i].ub[1] * Rt.b[(2*i+1)%4]);\n}", "Vd.w=vdmpy(Vu.h,Rt.b)": "for (i = 0; i < VELEM(32); i++) {\nVd.w[i] = (Vu.w[i].h[0] * Rt.b[(2*i+0)%4]);\nVd.w[i] += (Vu.w[i].h[1] * Rt.b[(2*i+1)%4]);\n}", "Vx.h+=vdmpy(Vu.ub,Rt.b)": "for (i = 0; i < VELEM(16); i++) {\nVx.h[i] += (Vu.uh[i].ub[0] * Rt.b[(2*i) % 4]);\nVx.h[i] += (Vu.uh[i].ub[1] * Rt.b[(2*i+1)%4]);\n}", "Vx.w+=vdmpy(Vu.h,Rt.b)": "for (i = 0; i < VELEM(32); i++) {\nVx.w[i] += (Vu.w[i].h[0] * Rt.b[(2*i+0)%4]);\nVx.w[i] += (Vu.w[i].h[1] * Rt.b[(2*i+1)%4]);\n}", "Vd.w=vmpyieo(Vu.h,Vv.h)": "for (i = 0; i < VELEM(32); i++) {\nVd.w[i] = (Vu.w[i].h[0]*Vv.w[i].h[1]) << 16;\n}", "Vd.h=vmpyi(Vu.h,Rt.b)": "for (i = 0; i < VELEM(16); i++) {\nVd.h[i] = (Vu.h[i] * Rt.b[i % 4]);\n}", "Vd.w=vmpyi(Vu.w,Rt.b)": "for (i = 0; i < VELEM(32); i++) {\nVd.w[i] = (Vu.w[i] * Rt.b[i % 4]);\n}", "Vd.w=vmpyi(Vu.w,Rt.ub)": "for (i = 0; i < VELEM(32); i++) {\nVd.w[i] = (Vu.w[i] * Rt.ub[i % 4]);\n}", "Vx.h+=vmpyi(Vu.h,Rt.b)": "for (i = 0; i < VELEM(16); i++) {\nVx.h[i] += (Vu.h[i] * Rt.b[i % 4]);\n}", "Vx.w+=vmpyi(Vu.w,Rt.b)": "for (i = 0; i < VELEM(32); i++) {\nVx.w[i] += (Vu.w[i] * Rt.b[i % 4]);\n}", "Vx.w+=vmpyi(Vu.w,Rt.ub)": "for (i = 0; i < VELEM(32); i++) {\nVx.w[i] += (Vu.w[i] * Rt.ub[i % 4]);\n}", "Vd.uw=vmpye(Vu.uh,Rt.uh)": "for (i = 0; i < VELEM(32); i++) {\nVd.uw[i] = (Vu.uw[i].uh[0] * Rt.uh[0]);\n}", "Vx.uw+=vmpye(Vu.uh,Rt.uh)": "for (i = 0; i < VELEM(32); i++) {\nVx.uw[i] += (Vu.uw[i].uh[0] * Rt.uh[0]);\n}", "Vd.uw=vrmpy(Vu.ub,Rt.ub)": "for (i = 0; i < VELEM(32); i++) {\nVd.uw[i] = (Vu.uw[i].ub[0] * Rt.ub[0]);\nVd.uw[i] += (Vu.uw[i].ub[1] * Rt.ub[1]);\nVd.uw[i] += (Vu.uw[i].ub[2] * Rt.ub[2]);\nVd.uw[i] += (Vu.uw[i].ub[3] * Rt.ub[3]);\n}", "Vd.w=vrmpy(Vu.ub,Rt.b)": "for (i = 0; i < VELEM(32); i++) {\nVd.w[i] = (Vu.uw[i].ub[0] * Rt.b[0]);\nVd.w[i] += (Vu.uw[i].ub[1] * Rt.b[1]);\nVd.w[i] += (Vu.uw[i].ub[2] * Rt.b[2]);\nVd.w[i] += (Vu.uw[i].ub[3] * Rt.b[3]);\n}", "Vx.uw+=vrmpy(Vu.ub,Rt.ub)": "for (i = 0; i < VELEM(32); i++) {\nVx.uw[i] += (Vu.uw[i].ub[0] * Rt.ub[0]);\nVx.uw[i] += (Vu.uw[i].ub[1] * Rt.ub[1]);\nVx.uw[i] += (Vu.uw[i].ub[2] * Rt.ub[2]);\nVx.uw[i] += (Vu.uw[i].ub[3] * Rt.ub[3]);\n}", "Vx.w+=vrmpy(Vu.ub,Rt.b)": "for (i = 0; i < VELEM(32); i++) {\nVx.w[i] += (Vu.uw[i].ub[0] * Rt.b[0]);\nVx.w[i] += (Vu.uw[i].ub[1] * Rt.b[1]);\nVx.w[i] += (Vu.uw[i].ub[2] * Rt.b[2]);\nVx.w[i] += (Vu.uw[i].ub[3] * Rt.b[3]);\n}", "Vd.uw=vrmpy(Vu.ub,Vv.ub)": "for (i = 0; i < VELEM(32); i++) {\nVd.uw[i] = (Vu.uw[i].ub[0] * Vv.uw[i].ub[0]);\nVd.uw[i] += (Vu.uw[i].ub[1] * Vv.uw[i].ub[1]);\nVd.uw[i] += (Vu.uw[i].ub[2] * Vv.uw[i].ub[2]);\nVd.uw[i] += (Vu.uw[i].ub[3] * Vv.uw[i].ub[3]);\n}", "Vd.w=vrmpy(Vu.b,Vv.b)": "for (i = 0; i < VELEM(32); i++) {\nVd.w[i] = (Vu.w[i].b[0] * Vv.w[i].b[0]);\nVd.w[i] += (Vu.w[i].b[1] * Vv.w[i].b[1]);\nVd.w[i] += (Vu.w[i].b[2] * Vv.w[i].b[2]);\nVd.w[i] += (Vu.w[i].b[3] * Vv.w[i].b[3]);\n}", "Vd.w=vrmpy(Vu.ub,Vv.b)": "for (i = 0; i < VELEM(32); i++) {\nVd.w[i] = (Vu.uw[i].ub[0] * Vv.w[i].b[0]);\nVd.w[i] += (Vu.uw[i].ub[1] * Vv.w[i].b[1]);\nVd.w[i] += (Vu.uw[i].ub[2] * Vv.w[i].b[2]);\nVd.w[i] += (Vu.uw[i].ub[3] * Vv.w[i].b[3]);\n}", "Vd.b=vsplat(Rt)": "for (i = 0; i < VELEM(8); i++) {\nVd.ub[i] = Rt;\n}", "Vd.h=vsplat(Rt)": "for (i = 0; i < VELEM(16); i++) {\nVd.uh[i] = Rt;\n}", "Vd=vsplat(Rt)": "for (i = 0; i < VELEM(32); i++) {\nVd.uw[i] = Rt;\n}", "Qd4=vand(Vu,Rt)": "for (i = 0; i < VELEM(8); i++) {\nQdV[i]=((Vu.ub[i] & Rt.ub[i % 4]) != 0) ? 1 : 0;\n}", "Qx4|=vand(Vu,Rt)": "for (i = 0; i < VELEM(8); i++) {\nQxV[i]=QxV[i]|(((Vu.ub[i] & Rt.ub[i % 4]) != 0) ? 1 : 0);\n}", "Vd=vand([!]Qu4,Rt)": "for (i = 0; i < VELEM(8); i++) {\nVd.ub[i] = [!]QuV[i] ? Rt.ub[i % 4] : 0;\n}", "Vx|=vand([!]Qu4,Rt)": "for (i = 0; i < VELEM(8); i++) {\nVx.ub[i] |= [!](QuV[i]) ? Rt.ub[i % 4] : 0;\n}", "Vd.ub=vabsdiff(Vu.ub,Vv.ub)": "for (i = 0; i < VELEM(8); i++) {\nVd.ub[i] = (Vu.ub[i] > Vv.ub[i]) ? (Vu.ub[i]\n- Vv.ub[i]) : (Vv.ub[i] - Vu.ub[i]);\n}", "Vd.uh=vabsdiff(Vu.h,Vv.h)": "for (i = 0; i < VELEM(16); i++) {\nVd.uh[i] = (Vu.h[i] > Vv.h[i]) ? (Vu.h[i] -\nVv.h[i]) : (Vv.h[i] - Vu.h[i]);\n}", "Vd.uh=vabsdiff(Vu.uh,Vv.uh)": "for (i = 0; i < VELEM(16); i++) {\nVd.uh[i] = (Vu.uh[i] > Vv.uh[i]) ? (Vu.uh[i]\n- Vv.uh[i]) : (Vv.uh[i] - Vu.uh[i]);\n}", "Vd.uw=vabsdiff(Vu.w,Vv.w)": "for (i = 0; i < VELEM(32); i++) {\nVd.uw[i] = (Vu.w[i] > Vv.w[i]) ? (Vu.w[i] -\nVv.w[i]) : (Vv.w[i] - Vu.w[i]);\n}", "Vx.w=vinsert(Rt)": "Vx.uw[0] = Rt;"}