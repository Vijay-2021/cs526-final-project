#lang rosette
(require rosette/lib/synthax)
(require rosette/lib/angelic)
(require racket/pretty)
(require data/bit-vector)
(require rosette/lib/destruct)
(require rosette/solver/smt/boolector)

(require hydride/utils/bvops)
(require hydride/utils/misc)

(require hydride/ir/hydride/definition)


(provide (all-defined-out))


;; ================================================================================
;;                                DSL Cost Model
;; ================================================================================
(define cost__mm512_mask_testn_epi64_mask_dsl 3)
(define cost__mm512_maskz_mulhi_epu16_dsl 5)
(define cost__mm_cmpge_epi16_mask_dsl 3)
(define cost__mm512_mask_cmpge_epu8_mask_dsl 3)
(define cost__mm512_dpbusd_epi32_dsl 1)
(define cost__mm512_maskz_broadcast_i64x2_dsl 8)
(define cost__mm256_blend_epi16_dsl 1)
(define cost__mm_maddubs_pi16_dsl 4)
(define cost__mm256_mask_min_epi16_dsl 1)
(define cost__mm256_avg_epu16_dsl 1)
(define cost__mm256_mask_cmpgt_epi16_mask_dsl 3)
(define cost__mm512_maskz_dpbusd_epi32_dsl 1)
(define cost__mm512_mask_cvtsepi32_epi16_dsl 4)
(define cost__mm_mul_epi32_dsl 5)
(define cost__mm_maskz_sub_epi16_dsl 1)
(define cost__mm512_mask_div_epu32_dsl 1)
(define cost__mm512_sub_epi8_dsl 1)
(define cost__mm512_madd52hi_epu64_dsl 1)
(define cost__mm256_cvtepi64_epi8_dsl 4)
(define cost__mm512_mullo_epi16_dsl 5)
(define cost__mm256_mask_cmpneq_epu32_mask_dsl 3)
(define cost__mm512_mask_reduce_add_epi64_dsl 1)
(define cost__mm512_subr_epi32_dsl 1)
(define cost__mm256_subs_epu8_dsl 1)
(define cost__mm512_abs_epi64_dsl 1)
(define cost__mm_urem_epi32_dsl 1)
(define cost__mm512_mask_cmple_epi32_mask_dsl 3)
(define cost__mm_cmpeq_epi32_dsl 1)
(define cost__mm_maskz_adds_epu16_dsl 1)
(define cost__mm_maskz_dpbusds_epi32_dsl 1)
(define cost__mm256_maskz_andnot_epi32_dsl 1)
(define cost__mm256_maskz_cvtepu32_epi64_dsl 3)
(define cost__mm256_mask_xor_epi64_dsl 1)
(define cost__mm512_mask_rem_epu32_dsl 1)
(define cost__mm_mask_cvtepi32_epi64_dsl 3)
(define cost__mm512_testn_epi32_mask_dsl 3)
(define cost__mm512_reduce_add_epi64_dsl 1)
(define cost__mm256_blendv_epi8_dsl 2)
(define cost__mm512_maskz_and_epi64_dsl 1)
(define cost__mm_mask_cmplt_epi64_mask_dsl 3)
(define cost__mm_maskz_dpwssds_epi32_dsl 1)
(define cost__mm512_andnot_epi32_dsl 1)
(define cost__mm512_reduce_and_epi64_dsl 1)
(define cost__m_paddw_dsl 1)
(define cost__mm256_max_epi8_dsl 1)
(define cost__mm256_mask_dpbusds_epi32_dsl 1)
(define cost__mm256_mask_madd52lo_epu64_dsl 1)
(define cost__mm256_test_epi8_mask_dsl 3)
(define cost__mm256_xor_epi32_dsl 1)
(define cost__mm512_cmpeq_epi64_mask_dsl 3)
(define cost__mm512_maskz_subs_epi8_dsl 1)
(define cost__mm_cmple_epu32_mask_dsl 3)
(define cost__mm_maskz_mul_epi32_dsl 5)
(define cost__mm_mulhi_pi16_dsl 5)
(define cost__mm512_mask_cmpgt_epu32_mask_dsl 3)
(define cost__mm256_maskz_min_epu16_dsl 1)
(define cost__mm_mask_dpwssd_epi32_dsl 1)
(define cost__mm256_adds_epi16_dsl 1)
(define cost__mm_dpbusds_epi32_dsl 1)
(define cost__mm256_cmpneq_epi8_mask_dsl 3)
(define cost__m_pmovmskb_dsl 2)
(define cost__mm512_div_epi64_dsl 1)
(define cost__mm512_mask_cvtepi32_epi8_dsl 4)
(define cost__mm_mask_mul_epu32_dsl 5)
(define cost__mm_cmpgt_epi8_mask_dsl 3)
(define cost__mm512_mask_cmplt_epu64_mask_dsl 3)
(define cost__mm512_mask_reduce_and_epi64_dsl 1)
(define cost__mm256_mask_dpwssds_epi32_dsl 1)
(define cost__mm_cvtepi16_epi64_dsl 1)
(define cost__mm_mask_blend_epi64_dsl 1)
(define cost__mm256_mask_cmple_epu32_mask_dsl 3)
(define cost__mm512_maskz_mov_epi64_dsl 1)
(define cost__mm_cvtepu16_epi32_dsl 1)
(define cost__mm256_broadcastmw_epi32_dsl 1)
(define cost__mm512_mask_div_epi32_dsl 1)
(define cost__mm512_maskz_maddubs_epi16_dsl 5)
(define cost__mm256_maskz_dpwssd_epi32_dsl 1)
(define cost__mm_cmplt_epi32_mask_dsl 3)
(define cost__mm512_mask_cmpge_epi16_mask_dsl 3)
(define cost__mm_dpwssds_epi32_dsl 1)
(define cost__mm_or_epi32_dsl 1)
(define cost__mm_dpwssd_epi32_dsl 1)
(define cost__mm256_maskz_mulhrs_epi16_dsl 5)
(define cost__mm512_subs_epi16_dsl 1)
(define cost__mm256_mul_epu32_dsl 5)
(define cost__mm512_min_epu64_dsl 3)
(define cost__mm512_mask_reduce_or_epi64_dsl 1)
(define cost__mm256_cmpgt_epi8_dsl 1)
(define cost__mm256_cmplt_epu16_mask_dsl 3)
(define cost__mm256_mulhrs_epi16_dsl 5)
(define cost__mm512_min_epi8_dsl 1)
(define cost__mm_cvtusepi64_epi32_dsl 4)
(define cost__mm512_reduce_or_epi64_dsl 1)
(define cost__mm_blend_epi16_dsl 1)
(define cost__mm256_movm_epi64_dsl 1)
(define cost__mm256_maskz_madd_epi16_dsl 5)
(define cost__mm512_mask_adds_epi16_dsl 1)
(define cost__mm_maskz_avg_epu16_dsl 1)
(define cost__mm_mask_or_epi32_dsl 1)
(define cost__mm_maskz_abs_epi16_dsl 1)
(define cost__mm512_and_epi32_dsl 1)
(define cost__mm256_cmpgt_epu32_mask_dsl 3)
(define cost__mm_cmpge_epu64_mask_dsl 3)
(define cost__mm512_mask_subs_epu16_dsl 1)
(define cost__mm_cmplt_epi32_dsl 1)
(define cost__mm256_maskz_set1_epi8_dsl 3)
(define cost__mm_adds_pu16_dsl 1)
(define cost__mm256_mask_cmpeq_epi32_mask_dsl 3)
(define cost__mm_maskz_add_epi16_dsl 1)
(define cost__mm256_maskz_mulhi_epi16_dsl 5)
(define cost__m_pmaxub_dsl 1)
(define cost__mm_udiv_epi32_dsl 1)
(define cost__mm512_broadcast_i64x2_dsl 8)
(define cost__mm512_cmple_epi32_mask_dsl 3)
(define cost__mm256_maskz_max_epu16_dsl 1)
(define cost__mm512_maskz_madd52lo_epu64_dsl 1)
(define cost__mm_mask_dpbusd_epi32_dsl 1)
(define cost__mm256_broadcastq_epi64_dsl 3)
(define cost__mm_movepi16_mask_dsl 1)
(define cost__mm256_mask_test_epi16_mask_dsl 3)
(define cost__mm256_mask_max_epi8_dsl 1)
(define cost__mm_madd_epi16_dsl 5)
(define cost__mm512_mask_subr_epi32_dsl 1)

(define (cost prog)
 (destruct prog
	[(idx-i id) 1]
	[(idx-j id) 1]
	[(reg id) 1]
	[(lit v) 1 ]
	[(nop v1) (+ 1 (cost v1))]
	[(dim-x id) 1]
	[(dim-y id) 1]
	[(idx-add i1 i2) (+ 1 (cost i1) (cost i2))]
	[(idx-mul i1 i2) (+ 1 (cost i1) (cost i2))]
	[(vector-choose_dsl n ) n]
	[ (_mm512_mask_testn_epi64_mask_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_o num_8 vc_9 vc_10 vc_11 prec_i)
		(+ cost__mm512_mask_testn_epi64_mask_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_o) (cost  num_8) 
		 (cost  vc_9) (cost  vc_10) (cost  vc_11) 
		 (cost  prec_i))
	]
	[ (_mm512_maskz_mulhi_epu16_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 num_9 num_10)
		(+ cost__mm512_maskz_mulhi_epu16_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_i_o) (cost  num_8) 
		 (cost  num_9) (cost  num_10))
	]
	[ (_mm_cmpge_epi16_mask_dsl v0 v1 size_i_o lane_size num_4 prec_o num_6 vc_7 vc_8 prec_i)
		(+ cost__mm_cmpge_epi16_mask_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_o) 
		 (cost  num_6) (cost  vc_7) (cost  vc_8) 
		 (cost  prec_i))
	]
	[ (_mm512_mask_cmpge_epu8_mask_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_o num_8 vc_9 vc_10 prec_i)
		(+ cost__mm512_mask_cmpge_epu8_mask_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_o) (cost  num_8) 
		 (cost  vc_9) (cost  vc_10) (cost  prec_i))
	]
	[ (_mm512_dpbusd_epi32_dsl v0 v1 v2 size_i lane_size num_5 prec_i num_7 num_8)
		(+ cost__mm512_dpbusd_epi32_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  size_i) (cost  lane_size) (cost  num_5) 
		 (cost  prec_i) (cost  num_7) (cost  num_8))
	]
	[ (_mm512_maskz_broadcast_i64x2_dsl vc_0 v1 v2 size_i_o lane_size num_5 prec_i_o num_7 num_8)
		(+ cost__mm512_maskz_broadcast_i64x2_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  size_i_o) (cost  lane_size) (cost  num_5) 
		 (cost  prec_i_o) (cost  num_7) (cost  num_8))
	]
	[ (_mm256_blend_epi16_dsl v0 v1 v2 size_i_o lane_size num_5 prec_i_o num_7 num_8)
		(+ cost__mm256_blend_epi16_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  size_i_o) (cost  lane_size) (cost  num_5) 
		 (cost  prec_i_o) (cost  num_7) (cost  num_8))
	]
	[ (_mm_maddubs_pi16_dsl v0 v1 size_i_o lane_size num_4 prec_i num_6 prec_o num_8)
		(+ cost__mm_maddubs_pi16_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i) 
		 (cost  num_6) (cost  prec_o) (cost  num_8))
	]
	[ (_mm256_mask_min_epi16_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8)
		(+ cost__mm256_mask_min_epi16_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_i_o) (cost  num_8))
	]
	[ (_mm256_avg_epu16_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 vc_7 vc_8)
		(+ cost__mm256_avg_epu16_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6) (cost  vc_7) (cost  vc_8))
	]
	[ (_mm256_mask_cmpgt_epi16_mask_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_o num_8 vc_9 vc_10 prec_i)
		(+ cost__mm256_mask_cmpgt_epi16_mask_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_o) (cost  num_8) 
		 (cost  vc_9) (cost  vc_10) (cost  prec_i))
	]
	[ (_mm512_maskz_dpbusd_epi32_dsl vc_0 v1 v2 v3 v4 size_i_o lane_size num_7 num_8 num_9 num_10 num_11 num_12 num_13)
		(+ cost__mm512_maskz_dpbusd_epi32_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  v4) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_7) (cost  num_8) 
		 (cost  num_9) (cost  num_10) (cost  num_11) 
		 (cost  num_12) (cost  num_13))
	]
	[ (_mm512_mask_cvtsepi32_epi16_dsl v0 v1 v2 size_i_o lane_size num_5 prec_i_o num_7 num_8)
		(+ cost__mm512_mask_cvtsepi32_epi16_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  size_i_o) (cost  lane_size) (cost  num_5) 
		 (cost  prec_i_o) (cost  num_7) (cost  num_8))
	]
	[ (_mm_mul_epi32_dsl v0 v1 size_i_o lane_size num_4 prec_i num_6 prec_o)
		(+ cost__mm_mul_epi32_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i) 
		 (cost  num_6) (cost  prec_o))
	]
	[ (_mm_maskz_sub_epi16_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8)
		(+ cost__mm_maskz_sub_epi16_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_i_o) (cost  num_8))
	]
	[ (_mm512_mask_div_epu32_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 num_9)
		(+ cost__mm512_mask_div_epu32_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_i_o) (cost  num_8) 
		 (cost  num_9))
	]
	[ (_mm512_sub_epi8_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6)
		(+ cost__mm512_sub_epi8_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6))
	]
	[ (_mm512_madd52hi_epu64_dsl v0 v1 v2 size_i_o lane_size num_5 prec_i num_7 prec_o num_9 num_10 num_11)
		(+ cost__mm512_madd52hi_epu64_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  size_i_o) (cost  lane_size) (cost  num_5) 
		 (cost  prec_i) (cost  num_7) (cost  prec_o) 
		 (cost  num_9) (cost  num_10) (cost  num_11))
	]
	[ (_mm256_cvtepi64_epi8_dsl v0 size_i_o lane_size num_3 prec_o num_5 prec_i)
		(+ cost__mm256_cvtepi64_epi8_dsl (cost  v0) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_3) (cost  prec_o) (cost  num_5) 
		 (cost  prec_i))
	]
	[ (_mm512_mullo_epi16_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 num_7 num_8)
		(+ cost__mm512_mullo_epi16_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6) (cost  num_7) (cost  num_8))
	]
	[ (_mm256_mask_cmpneq_epu32_mask_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_o num_8 vc_9 vc_10 prec_i)
		(+ cost__mm256_mask_cmpneq_epu32_mask_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_o) (cost  num_8) 
		 (cost  vc_9) (cost  vc_10) (cost  prec_i))
	]
	[ (_mm512_mask_reduce_add_epi64_dsl vc_0 v1 v2 size_i_o lane_size num_5 prec_i_o num_7 num_8)
		(+ cost__mm512_mask_reduce_add_epi64_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  size_i_o) (cost  lane_size) (cost  num_5) 
		 (cost  prec_i_o) (cost  num_7) (cost  num_8))
	]
	[ (_mm512_subr_epi32_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6)
		(+ cost__mm512_subr_epi32_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6))
	]
	[ (_mm256_subs_epu8_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6)
		(+ cost__mm256_subs_epu8_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6))
	]
	[ (_mm512_abs_epi64_dsl v0 size_i_o lane_size num_3 prec_i_o num_5)
		(+ cost__mm512_abs_epi64_dsl (cost  v0) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_3) (cost  prec_i_o) (cost  num_5))
	]
	[ (_mm_urem_epi32_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6)
		(+ cost__mm_urem_epi32_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6))
	]
	[ (_mm512_mask_cmple_epi32_mask_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_o num_8 vc_9 vc_10 prec_i)
		(+ cost__mm512_mask_cmple_epi32_mask_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_o) (cost  num_8) 
		 (cost  vc_9) (cost  vc_10) (cost  prec_i))
	]
	[ (_mm_cmpeq_epi32_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 vc_7 vc_8)
		(+ cost__mm_cmpeq_epi32_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6) (cost  vc_7) (cost  vc_8))
	]
	[ (_mm_maskz_adds_epu16_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8)
		(+ cost__mm_maskz_adds_epu16_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_i_o) (cost  num_8))
	]
	[ (_mm_maskz_dpbusds_epi32_dsl vc_0 v1 v2 v3 v4 size_i_o lane_size num_7 num_8 num_9 num_10 num_11 num_12 num_13)
		(+ cost__mm_maskz_dpbusds_epi32_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  v4) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_7) (cost  num_8) 
		 (cost  num_9) (cost  num_10) (cost  num_11) 
		 (cost  num_12) (cost  num_13))
	]
	[ (_mm256_maskz_andnot_epi32_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8)
		(+ cost__mm256_maskz_andnot_epi32_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_i_o) (cost  num_8))
	]
	[ (_mm256_maskz_cvtepu32_epi64_dsl vc_0 v1 v2 size_i_o lane_size num_5 num_6 num_7 prec_i_o)
		(+ cost__mm256_maskz_cvtepu32_epi64_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  size_i_o) (cost  lane_size) (cost  num_5) 
		 (cost  num_6) (cost  num_7) (cost  prec_i_o))
	]
	[ (_mm256_mask_xor_epi64_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8)
		(+ cost__mm256_mask_xor_epi64_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_i_o) (cost  num_8))
	]
	[ (_mm512_mask_rem_epu32_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8)
		(+ cost__mm512_mask_rem_epu32_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_i_o) (cost  num_8))
	]
	[ (_mm_mask_cvtepi32_epi64_dsl v0 v1 v2 size_i_o lane_size num_5 num_6 num_7 prec_i_o)
		(+ cost__mm_mask_cvtepi32_epi64_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  size_i_o) (cost  lane_size) (cost  num_5) 
		 (cost  num_6) (cost  num_7) (cost  prec_i_o))
	]
	[ (_mm512_testn_epi32_mask_dsl v0 v1 size_i_o lane_size num_4 prec_o num_6 vc_7 vc_8 vc_9 prec_i)
		(+ cost__mm512_testn_epi32_mask_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_o) 
		 (cost  num_6) (cost  vc_7) (cost  vc_8) 
		 (cost  vc_9) (cost  prec_i))
	]
	[ (_mm512_reduce_add_epi64_dsl vc_0 v1 size_i lane_size num_4 prec_i_o num_6 num_7)
		(+ cost__mm512_reduce_add_epi64_dsl (cost  vc_0) (cost  v1) (cost  size_i) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6) (cost  num_7))
	]
	[ (_mm256_blendv_epi8_dsl v0 v1 v2 size_i_o lane_size num_5 prec_i_o num_7)
		(+ cost__mm256_blendv_epi8_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  size_i_o) (cost  lane_size) (cost  num_5) 
		 (cost  prec_i_o) (cost  num_7))
	]
	[ (_mm512_maskz_and_epi64_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8)
		(+ cost__mm512_maskz_and_epi64_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_i_o) (cost  num_8))
	]
	[ (_mm_mask_cmplt_epi64_mask_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_o num_8 vc_9 vc_10 prec_i)
		(+ cost__mm_mask_cmplt_epi64_mask_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_o) (cost  num_8) 
		 (cost  vc_9) (cost  vc_10) (cost  prec_i))
	]
	[ (_mm_maskz_dpwssds_epi32_dsl vc_0 v1 v2 v3 v4 size_i_o lane_size num_7 num_8 num_9 num_10 num_11 num_12)
		(+ cost__mm_maskz_dpwssds_epi32_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  v4) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_7) (cost  num_8) 
		 (cost  num_9) (cost  num_10) (cost  num_11) 
		 (cost  num_12))
	]
	[ (_mm512_andnot_epi32_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6)
		(+ cost__mm512_andnot_epi32_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6))
	]
	[ (_mm512_reduce_and_epi64_dsl vc_0 v1 size_i lane_size num_4 prec_i_o num_6 num_7)
		(+ cost__mm512_reduce_and_epi64_dsl (cost  vc_0) (cost  v1) (cost  size_i) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6) (cost  num_7))
	]
	[ (_m_paddw_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6)
		(+ cost__m_paddw_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6))
	]
	[ (_mm256_max_epi8_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6)
		(+ cost__mm256_max_epi8_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6))
	]
	[ (_mm256_mask_dpbusds_epi32_dsl v0 v1 v2 v3 size_i_o lane_size num_6 num_7 num_8 num_9 num_10 num_11 num_12)
		(+ cost__mm256_mask_dpbusds_epi32_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  num_7) (cost  num_8) 
		 (cost  num_9) (cost  num_10) (cost  num_11) 
		 (cost  num_12))
	]
	[ (_mm256_mask_madd52lo_epu64_dsl v0 v1 v2 v3 size_i_o lane_size num_6 num_7 num_8 prec_i_o num_10 num_11 num_12)
		(+ cost__mm256_mask_madd52lo_epu64_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  num_7) (cost  num_8) 
		 (cost  prec_i_o) (cost  num_10) (cost  num_11) 
		 (cost  num_12))
	]
	[ (_mm256_test_epi8_mask_dsl v0 v1 size_i_o lane_size num_4 prec_o num_6 vc_7 vc_8 vc_9 prec_i)
		(+ cost__mm256_test_epi8_mask_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_o) 
		 (cost  num_6) (cost  vc_7) (cost  vc_8) 
		 (cost  vc_9) (cost  prec_i))
	]
	[ (_mm256_xor_epi32_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6)
		(+ cost__mm256_xor_epi32_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6))
	]
	[ (_mm512_cmpeq_epi64_mask_dsl v0 v1 size_i_o lane_size num_4 prec_o num_6 vc_7 vc_8 prec_i)
		(+ cost__mm512_cmpeq_epi64_mask_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_o) 
		 (cost  num_6) (cost  vc_7) (cost  vc_8) 
		 (cost  prec_i))
	]
	[ (_mm512_maskz_subs_epi8_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8)
		(+ cost__mm512_maskz_subs_epi8_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_i_o) (cost  num_8))
	]
	[ (_mm_cmple_epu32_mask_dsl v0 v1 size_i_o lane_size num_4 prec_o num_6 vc_7 vc_8 prec_i)
		(+ cost__mm_cmple_epu32_mask_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_o) 
		 (cost  num_6) (cost  vc_7) (cost  vc_8) 
		 (cost  prec_i))
	]
	[ (_mm_maskz_mul_epi32_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 num_7 num_8 prec_i_o)
		(+ cost__mm_maskz_mul_epi32_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  num_7) (cost  num_8) 
		 (cost  prec_i_o))
	]
	[ (_mm_mulhi_pi16_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 num_7 num_8)
		(+ cost__mm_mulhi_pi16_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6) (cost  num_7) (cost  num_8))
	]
	[ (_mm512_mask_cmpgt_epu32_mask_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_o num_8 vc_9 vc_10 prec_i)
		(+ cost__mm512_mask_cmpgt_epu32_mask_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_o) (cost  num_8) 
		 (cost  vc_9) (cost  vc_10) (cost  prec_i))
	]
	[ (_mm256_maskz_min_epu16_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8)
		(+ cost__mm256_maskz_min_epu16_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_i_o) (cost  num_8))
	]
	[ (_mm_mask_dpwssd_epi32_dsl v0 v1 v2 v3 size_i_o lane_size num_6 num_7 num_8 num_9 num_10 num_11)
		(+ cost__mm_mask_dpwssd_epi32_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  num_7) (cost  num_8) 
		 (cost  num_9) (cost  num_10) (cost  num_11))
	]
	[ (_mm256_adds_epi16_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6)
		(+ cost__mm256_adds_epi16_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6))
	]
	[ (_mm_dpbusds_epi32_dsl v0 v1 v2 size_i lane_size num_5 prec_i num_7 num_8)
		(+ cost__mm_dpbusds_epi32_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  size_i) (cost  lane_size) (cost  num_5) 
		 (cost  prec_i) (cost  num_7) (cost  num_8))
	]
	[ (_mm256_cmpneq_epi8_mask_dsl v0 v1 size_i_o lane_size num_4 prec_o num_6 vc_7 vc_8 prec_i)
		(+ cost__mm256_cmpneq_epi8_mask_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_o) 
		 (cost  num_6) (cost  vc_7) (cost  vc_8) 
		 (cost  prec_i))
	]
	[ (_m_pmovmskb_dsl v0 size_o lane_size num_3 prec_o num_5 num_6)
		(+ cost__m_pmovmskb_dsl (cost  v0) (cost  size_o) (cost  lane_size) 
		 (cost  num_3) (cost  prec_o) (cost  num_5) 
		 (cost  num_6))
	]
	[ (_mm512_div_epi64_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 num_7)
		(+ cost__mm512_div_epi64_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6) (cost  num_7))
	]
	[ (_mm512_mask_cvtepi32_epi8_dsl v0 v1 v2 size_i_o lane_size num_5 prec_i_o num_7 num_8)
		(+ cost__mm512_mask_cvtepi32_epi8_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  size_i_o) (cost  lane_size) (cost  num_5) 
		 (cost  prec_i_o) (cost  num_7) (cost  num_8))
	]
	[ (_mm_mask_mul_epu32_dsl v0 v1 v2 v3 size_i_o lane_size num_6 num_7 num_8 prec_i_o)
		(+ cost__mm_mask_mul_epu32_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  num_7) (cost  num_8) 
		 (cost  prec_i_o))
	]
	[ (_mm_cmpgt_epi8_mask_dsl v0 v1 size_i_o lane_size num_4 prec_o num_6 vc_7 vc_8 prec_i)
		(+ cost__mm_cmpgt_epi8_mask_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_o) 
		 (cost  num_6) (cost  vc_7) (cost  vc_8) 
		 (cost  prec_i))
	]
	[ (_mm512_mask_cmplt_epu64_mask_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_o num_8 vc_9 vc_10 prec_i)
		(+ cost__mm512_mask_cmplt_epu64_mask_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_o) (cost  num_8) 
		 (cost  vc_9) (cost  vc_10) (cost  prec_i))
	]
	[ (_mm512_mask_reduce_and_epi64_dsl vc_0 v1 v2 size_i_o lane_size num_5 prec_i_o num_7 num_8)
		(+ cost__mm512_mask_reduce_and_epi64_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  size_i_o) (cost  lane_size) (cost  num_5) 
		 (cost  prec_i_o) (cost  num_7) (cost  num_8))
	]
	[ (_mm256_mask_dpwssds_epi32_dsl v0 v1 v2 v3 size_i_o lane_size num_6 num_7 num_8 num_9 num_10 num_11)
		(+ cost__mm256_mask_dpwssds_epi32_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  num_7) (cost  num_8) 
		 (cost  num_9) (cost  num_10) (cost  num_11))
	]
	[ (_mm_cvtepi16_epi64_dsl v0 size_i_o lane_size num_3 prec_i num_5 prec_o)
		(+ cost__mm_cvtepi16_epi64_dsl (cost  v0) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_3) (cost  prec_i) (cost  num_5) 
		 (cost  prec_o))
	]
	[ (_mm_mask_blend_epi64_dsl v0 v1 v2 size_i_o lane_size num_5 prec_i_o num_7)
		(+ cost__mm_mask_blend_epi64_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  size_i_o) (cost  lane_size) (cost  num_5) 
		 (cost  prec_i_o) (cost  num_7))
	]
	[ (_mm256_mask_cmple_epu32_mask_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_o num_8 vc_9 vc_10 prec_i)
		(+ cost__mm256_mask_cmple_epu32_mask_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_o) (cost  num_8) 
		 (cost  vc_9) (cost  vc_10) (cost  prec_i))
	]
	[ (_mm512_maskz_mov_epi64_dsl vc_0 v1 v2 size_i_o lane_size num_5 prec_i_o num_7)
		(+ cost__mm512_maskz_mov_epi64_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  size_i_o) (cost  lane_size) (cost  num_5) 
		 (cost  prec_i_o) (cost  num_7))
	]
	[ (_mm_cvtepu16_epi32_dsl v0 size_i_o lane_size num_3 prec_i num_5 prec_o)
		(+ cost__mm_cvtepu16_epi32_dsl (cost  v0) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_3) (cost  prec_i) (cost  num_5) 
		 (cost  prec_o))
	]
	[ (_mm256_broadcastmw_epi32_dsl v0 size_o lane_size num_3 prec_i num_5 prec_o num_7)
		(+ cost__mm256_broadcastmw_epi32_dsl (cost  v0) (cost  size_o) (cost  lane_size) 
		 (cost  num_3) (cost  prec_i) (cost  num_5) 
		 (cost  prec_o) (cost  num_7))
	]
	[ (_mm512_mask_div_epi32_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 num_9)
		(+ cost__mm512_mask_div_epi32_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_i_o) (cost  num_8) 
		 (cost  num_9))
	]
	[ (_mm512_maskz_maddubs_epi16_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 num_7 num_8 prec_i_o num_10)
		(+ cost__mm512_maskz_maddubs_epi16_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  num_7) (cost  num_8) 
		 (cost  prec_i_o) (cost  num_10))
	]
	[ (_mm256_maskz_dpwssd_epi32_dsl vc_0 v1 v2 v3 v4 size_i_o lane_size num_7 num_8 num_9 num_10 num_11 num_12)
		(+ cost__mm256_maskz_dpwssd_epi32_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  v4) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_7) (cost  num_8) 
		 (cost  num_9) (cost  num_10) (cost  num_11) 
		 (cost  num_12))
	]
	[ (_mm_cmplt_epi32_mask_dsl v0 v1 size_i_o lane_size num_4 prec_o num_6 vc_7 vc_8 prec_i)
		(+ cost__mm_cmplt_epi32_mask_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_o) 
		 (cost  num_6) (cost  vc_7) (cost  vc_8) 
		 (cost  prec_i))
	]
	[ (_mm512_mask_cmpge_epi16_mask_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_o num_8 vc_9 vc_10 prec_i)
		(+ cost__mm512_mask_cmpge_epi16_mask_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_o) (cost  num_8) 
		 (cost  vc_9) (cost  vc_10) (cost  prec_i))
	]
	[ (_mm_dpwssds_epi32_dsl v0 v1 v2 size_i lane_size num_5 prec_i num_7)
		(+ cost__mm_dpwssds_epi32_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  size_i) (cost  lane_size) (cost  num_5) 
		 (cost  prec_i) (cost  num_7))
	]
	[ (_mm_or_epi32_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6)
		(+ cost__mm_or_epi32_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6))
	]
	[ (_mm_dpwssd_epi32_dsl v0 v1 v2 size_i lane_size num_5 prec_i num_7)
		(+ cost__mm_dpwssd_epi32_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  size_i) (cost  lane_size) (cost  num_5) 
		 (cost  prec_i) (cost  num_7))
	]
	[ (_mm256_maskz_mulhrs_epi16_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 num_9 vc_10 vc_11 num_12)
		(+ cost__mm256_maskz_mulhrs_epi16_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_i_o) (cost  num_8) 
		 (cost  num_9) (cost  vc_10) (cost  vc_11) 
		 (cost  num_12))
	]
	[ (_mm512_subs_epi16_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6)
		(+ cost__mm512_subs_epi16_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6))
	]
	[ (_mm256_mul_epu32_dsl v0 v1 size_i_o lane_size num_4 prec_i num_6 prec_o)
		(+ cost__mm256_mul_epu32_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i) 
		 (cost  num_6) (cost  prec_o))
	]
	[ (_mm512_min_epu64_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6)
		(+ cost__mm512_min_epu64_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6))
	]
	[ (_mm512_mask_reduce_or_epi64_dsl vc_0 v1 v2 size_i_o lane_size num_5 prec_i_o num_7 num_8)
		(+ cost__mm512_mask_reduce_or_epi64_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  size_i_o) (cost  lane_size) (cost  num_5) 
		 (cost  prec_i_o) (cost  num_7) (cost  num_8))
	]
	[ (_mm256_cmpgt_epi8_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 vc_7 vc_8)
		(+ cost__mm256_cmpgt_epi8_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6) (cost  vc_7) (cost  vc_8))
	]
	[ (_mm256_cmplt_epu16_mask_dsl v0 v1 size_i_o lane_size num_4 prec_o num_6 vc_7 vc_8 prec_i)
		(+ cost__mm256_cmplt_epu16_mask_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_o) 
		 (cost  num_6) (cost  vc_7) (cost  vc_8) 
		 (cost  prec_i))
	]
	[ (_mm256_mulhrs_epi16_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 num_7 vc_8 vc_9 num_10)
		(+ cost__mm256_mulhrs_epi16_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6) (cost  num_7) (cost  vc_8) 
		 (cost  vc_9) (cost  num_10))
	]
	[ (_mm512_min_epi8_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6)
		(+ cost__mm512_min_epi8_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6))
	]
	[ (_mm_cvtusepi64_epi32_dsl v0 size_i_o lane_size num_3 prec_o num_5 prec_i)
		(+ cost__mm_cvtusepi64_epi32_dsl (cost  v0) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_3) (cost  prec_o) (cost  num_5) 
		 (cost  prec_i))
	]
	[ (_mm512_reduce_or_epi64_dsl vc_0 v1 size_i lane_size num_4 prec_i_o num_6 num_7)
		(+ cost__mm512_reduce_or_epi64_dsl (cost  vc_0) (cost  v1) (cost  size_i) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6) (cost  num_7))
	]
	[ (_mm_blend_epi16_dsl v0 v1 v2 size_i_o lane_size num_5 prec_i_o num_7)
		(+ cost__mm_blend_epi16_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  size_i_o) (cost  lane_size) (cost  num_5) 
		 (cost  prec_i_o) (cost  num_7))
	]
	[ (_mm256_movm_epi64_dsl v0 size_o lane_size num_3 prec_o num_5 vc_6 vc_7)
		(+ cost__mm256_movm_epi64_dsl (cost  v0) (cost  size_o) (cost  lane_size) 
		 (cost  num_3) (cost  prec_o) (cost  num_5) 
		 (cost  vc_6) (cost  vc_7))
	]
	[ (_mm256_maskz_madd_epi16_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 num_7 num_8 prec_i_o num_10)
		(+ cost__mm256_maskz_madd_epi16_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  num_7) (cost  num_8) 
		 (cost  prec_i_o) (cost  num_10))
	]
	[ (_mm512_mask_adds_epi16_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8)
		(+ cost__mm512_mask_adds_epi16_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_i_o) (cost  num_8))
	]
	[ (_mm_maskz_avg_epu16_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 vc_9 vc_10)
		(+ cost__mm_maskz_avg_epu16_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_i_o) (cost  num_8) 
		 (cost  vc_9) (cost  vc_10))
	]
	[ (_mm_mask_or_epi32_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8)
		(+ cost__mm_mask_or_epi32_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_i_o) (cost  num_8))
	]
	[ (_mm_maskz_abs_epi16_dsl vc_0 v1 v2 size_i_o lane_size num_5 prec_i_o num_7)
		(+ cost__mm_maskz_abs_epi16_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  size_i_o) (cost  lane_size) (cost  num_5) 
		 (cost  prec_i_o) (cost  num_7))
	]
	[ (_mm512_and_epi32_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6)
		(+ cost__mm512_and_epi32_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6))
	]
	[ (_mm256_cmpgt_epu32_mask_dsl v0 v1 size_i_o lane_size num_4 prec_o num_6 vc_7 vc_8 prec_i)
		(+ cost__mm256_cmpgt_epu32_mask_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_o) 
		 (cost  num_6) (cost  vc_7) (cost  vc_8) 
		 (cost  prec_i))
	]
	[ (_mm_cmpge_epu64_mask_dsl v0 v1 size_i_o lane_size num_4 prec_o num_6 vc_7 vc_8 prec_i)
		(+ cost__mm_cmpge_epu64_mask_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_o) 
		 (cost  num_6) (cost  vc_7) (cost  vc_8) 
		 (cost  prec_i))
	]
	[ (_mm512_mask_subs_epu16_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8)
		(+ cost__mm512_mask_subs_epu16_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_i_o) (cost  num_8))
	]
	[ (_mm_cmplt_epi32_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 vc_7 vc_8)
		(+ cost__mm_cmplt_epi32_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6) (cost  vc_7) (cost  vc_8))
	]
	[ (_mm256_maskz_set1_epi8_dsl vc_0 v1 v2 size_i_o lane_size num_5 prec_i_o num_7 num_8)
		(+ cost__mm256_maskz_set1_epi8_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  size_i_o) (cost  lane_size) (cost  num_5) 
		 (cost  prec_i_o) (cost  num_7) (cost  num_8))
	]
	[ (_mm_adds_pu16_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6)
		(+ cost__mm_adds_pu16_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6))
	]
	[ (_mm256_mask_cmpeq_epi32_mask_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_o num_8 vc_9 vc_10 prec_i)
		(+ cost__mm256_mask_cmpeq_epi32_mask_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_o) (cost  num_8) 
		 (cost  vc_9) (cost  vc_10) (cost  prec_i))
	]
	[ (_mm_maskz_add_epi16_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8)
		(+ cost__mm_maskz_add_epi16_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_i_o) (cost  num_8))
	]
	[ (_mm256_maskz_mulhi_epi16_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 num_9 num_10)
		(+ cost__mm256_maskz_mulhi_epi16_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_i_o) (cost  num_8) 
		 (cost  num_9) (cost  num_10))
	]
	[ (_m_pmaxub_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6)
		(+ cost__m_pmaxub_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6))
	]
	[ (_mm_udiv_epi32_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 num_7)
		(+ cost__mm_udiv_epi32_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i_o) 
		 (cost  num_6) (cost  num_7))
	]
	[ (_mm512_broadcast_i64x2_dsl v0 size_i_o lane_size num_3 prec_i_o num_5 num_6)
		(+ cost__mm512_broadcast_i64x2_dsl (cost  v0) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_3) (cost  prec_i_o) (cost  num_5) 
		 (cost  num_6))
	]
	[ (_mm512_cmple_epi32_mask_dsl v0 v1 size_i_o lane_size num_4 prec_o num_6 vc_7 vc_8 prec_i)
		(+ cost__mm512_cmple_epi32_mask_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_o) 
		 (cost  num_6) (cost  vc_7) (cost  vc_8) 
		 (cost  prec_i))
	]
	[ (_mm256_maskz_max_epu16_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8)
		(+ cost__mm256_maskz_max_epu16_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_i_o) (cost  num_8))
	]
	[ (_mm512_maskz_madd52lo_epu64_dsl vc_0 v1 v2 v3 v4 size_i_o lane_size num_7 num_8 num_9 prec_i_o num_11 num_12 num_13)
		(+ cost__mm512_maskz_madd52lo_epu64_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  v4) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_7) (cost  num_8) 
		 (cost  num_9) (cost  prec_i_o) (cost  num_11) 
		 (cost  num_12) (cost  num_13))
	]
	[ (_mm_mask_dpbusd_epi32_dsl v0 v1 v2 v3 size_i_o lane_size num_6 num_7 num_8 num_9 num_10 num_11 num_12)
		(+ cost__mm_mask_dpbusd_epi32_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  num_7) (cost  num_8) 
		 (cost  num_9) (cost  num_10) (cost  num_11) 
		 (cost  num_12))
	]
	[ (_mm256_broadcastq_epi64_dsl v0 size_o lane_size num_3 prec_i_o num_5 num_6)
		(+ cost__mm256_broadcastq_epi64_dsl (cost  v0) (cost  size_o) (cost  lane_size) 
		 (cost  num_3) (cost  prec_i_o) (cost  num_5) 
		 (cost  num_6))
	]
	[ (_mm_movepi16_mask_dsl v0 size_o lane_size num_3 prec_o num_5 num_6 vc_7 vc_8)
		(+ cost__mm_movepi16_mask_dsl (cost  v0) (cost  size_o) (cost  lane_size) 
		 (cost  num_3) (cost  prec_o) (cost  num_5) 
		 (cost  num_6) (cost  vc_7) (cost  vc_8))
	]
	[ (_mm256_mask_test_epi16_mask_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_o num_8 vc_9 vc_10 vc_11 prec_i)
		(+ cost__mm256_mask_test_epi16_mask_dsl (cost  vc_0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_o) (cost  num_8) 
		 (cost  vc_9) (cost  vc_10) (cost  vc_11) 
		 (cost  prec_i))
	]
	[ (_mm256_mask_max_epi8_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8)
		(+ cost__mm256_mask_max_epi8_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_i_o) (cost  num_8))
	]
	[ (_mm_madd_epi16_dsl v0 v1 size_i_o lane_size num_4 prec_i num_6 prec_o num_8)
		(+ cost__mm_madd_epi16_dsl (cost  v0) (cost  v1) (cost  size_i_o) 
		 (cost  lane_size) (cost  num_4) (cost  prec_i) 
		 (cost  num_6) (cost  prec_o) (cost  num_8))
	]
	[ (_mm512_mask_subr_epi32_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8)
		(+ cost__mm512_mask_subr_epi32_dsl (cost  v0) (cost  v1) (cost  v2) 
		 (cost  v3) (cost  size_i_o) (cost  lane_size) 
		 (cost  num_6) (cost  prec_i_o) (cost  num_8))
	]
	[_ 1]
 )
)
;; ================================================================================
