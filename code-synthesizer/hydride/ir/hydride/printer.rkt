#lang rosette
(require rosette/lib/synthax)
(require rosette/lib/angelic)
(require racket/pretty)
(require data/bit-vector)
(require rosette/lib/destruct)
(require rosette/solver/smt/boolector)

(require hydride/utils/bvops)
(require hydride/utils/misc)

(require hydride/ir/hydride/definition)
(require hydride/ir/hydride/length)
(require hydride/ir/hydride/prec)


(provide (all-defined-out))




;; ================================================================================
;;                                DSL Custom Printer
;; ================================================================================
(define (hydride-printer  prog)
 (destruct prog
	[(reg id) (string-append  "\n" "(reg " (~s  (bitvector->natural id)) ")")]
	[(lit v) (string-append   "(lit " (~s v) ")")]
	[(vector-two-input-swizzle_dsl v0 v1 num_2 prec_i_o num_4 lane_size num_6 num_7 num_8) 
	(string-append "\n" 
	(string-append "(vector-two-input-swizzle_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
	[(interleave-vectors_dsl v0 v1 size_i_o prec_i_o) 
	(string-append "\n" 
	(string-append "(interleave-vectors_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
	[(interleave-vector_dsl v0 size_i_o prec_i_o) 
	(string-append "\n" 
	(string-append "(interleave-vector_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
	[(deinterleave-vector_dsl v0 size_i_o prec_i_o) 
	(string-append "\n" 
	(string-append "(deinterleave-vector_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
	[(llvm_shuffle_vectors_dsl v0 v1 num_2 prec_i_o v4 num_5) 
	(string-append "\n" 
	(string-append "(llvm_shuffle_vectors_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i_o)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_sub_pi16_dsl v0 v1 num_2 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm_sub_pi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_extracti32x4_epi32_dsl v0 v1 v2 v3 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm512_mask_extracti32x4_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_sllv_epi16_dsl v0 vc_1 v2 vc_3 vc_4 v5 num_6 prec_i_o num_8 num_9) 
	(string-append "\n" 
	(string-append "(_mm_maskz_sllv_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (get-length vc_3 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_3)) " " " " (if (lit? vc_4) (begin (define num_elem (/ (get-length vc_4 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_4)) " " " " (if (lit? v5) (begin (define num_elem (/ (get-length v5 (vector 0)) prec_i_o)) (string-append (hydride-printer v5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_adds_epi16_dsl v0 v1 v2 v3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm256_mask_adds_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_cmplt_epi16_mask_dsl v0 vc_1 vc_2 v3 v4 vc_5 num_6 prec_i num_8) 
	(string-append "\n" 
	(string-append "(_mm_mask_cmplt_epi16_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (get-length vc_2 (vector 0)) prec_i)) (string-append (hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? vc_5) (begin (define num_elem (/ (get-length vc_5 (vector 0)) prec_i)) (string-append (hydride-printer vc_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_madd_epi16_dsl v0 v1 v2 v3 num_4) 
	(string-append "\n" 
	(string-append "(_mm_mask_madd_epi16_dsl " (if (lit? v0) (hydride-printer v0) (hydride-printer v0)) " " " " (if (lit? v1) (hydride-printer v1) (hydride-printer v1)) " " " " (if (lit? v2) (hydride-printer v2) (hydride-printer v2)) " " " " (if (lit? v3) (hydride-printer v3) (hydride-printer v3)) " " " " (if (lit? num_4) (hydride-printer num_4) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_srl_epi16_dsl v0 vc_1 v2 vc_3 v4 v5 num_6 prec_i_o num_8) 
	(string-append "\n" 
	(string-append "(_mm_mask_srl_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (get-length vc_3 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i_o)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? v5) (begin (define num_elem (/ (get-length v5 (vector 0)) prec_i_o)) (string-append (hydride-printer v5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mulhi_pi16_dsl v0 v1 num_2 prec_i_o num_4 num_5) 
	(string-append "\n" 
	(string-append "(_mm_mulhi_pi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_cvtepu8_epi32_dsl v0 vc_1 v2 num_3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm_maskz_cvtepu8_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i_o)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_hadd_epi16_dsl v0 v1 num_2 num_3 num_4 num_5 prec_i_o num_7 num_8 num_9) 
	(string-append "\n" 
	(string-append "(_mm_hadd_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i_o)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_hsubs_epi16_dsl v0 v1 num_2 num_3 num_4 num_5 num_6) 
	(string-append "\n" 
	(string-append "(_mm_hsubs_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 16)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 16)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) 16)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) 16)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) 16)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) 16)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) 16)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer num_6)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_extract_epi16_dsl vc_0 v1 v2 num_3 num_4 prec_o prec_i num_7 num_8) 
	(string-append "\n" 
	(string-append "(_mm256_extract_epi16_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_sra_epi64_dsl v0 v1 num_2) 
	(string-append "\n" 
	(string-append "(_mm_sra_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 64)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 64)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) 64)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer num_2)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_div_epi16_dsl v0 v1 num_2 prec_i_o num_4) 
	(string-append "\n" 
	(string-append "(_mm256_div_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_subs_epi16_dsl v0 v1 v2 v3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm_mask_subs_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_hadds_epi16_dsl v0 v1) 
	(string-append "\n" 
	(string-append "(_mm256_hadds_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 16)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 16)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v1)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_hsub_epi32_dsl v0 v1 num_2 prec_i_o num_4 num_5) 
	(string-append "\n" 
	(string-append "(_mm256_hsub_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_madd52lo_epu64_dsl v0 vc_1 v2 v3 v4 num_5 num_6) 
	(string-append "\n" 
	(string-append "(_mm512_maskz_madd52lo_epu64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 52)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 52) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) 52)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s 52) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 52)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 52) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) 52)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s 52) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) 52)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s 52) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) 52)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s 52) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) 52)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s 52) ">" "\n" )) (hydride-printer num_6)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_maskz_extracti64x2_epi64_dsl v0 v1 vc_2 v3 num_4 prec_i_o num_6 num_7) 
	(string-append "\n" 
	(string-append "(_mm256_maskz_extracti64x2_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (get-length vc_2 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_cvtepi16_epi8_dsl v0 vc_1 v2 num_3 prec_i_o num_5 num_6) 
	(string-append "\n" 
	(string-append "(_mm_maskz_cvtepi16_epi8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i_o)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_hsub_pi32_dsl v0 v1) 
	(string-append "\n" 
	(string-append "(_mm_hsub_pi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 32)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 32)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v1)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_max_epi32_dsl v0 v1 v2 v3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm256_mask_max_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_cmplt_epi16_dsl v0 vc_1 vc_2 v3 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm_cmplt_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (get-length vc_2 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_srli_pi32_dsl v0 vc_1 vc_2 v3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm_srli_pi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (get-length vc_2 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_cmple_epu16_mask_dsl v0 v1 num_2 prec_i num_4) 
	(string-append "\n" 
	(string-append "(_mm_cmple_epu16_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_movepi64_mask_dsl v0 vc_1 vc_2 num_3 num_4 num_5 num_6) 
	(string-append "\n" 
	(string-append "(_mm512_movepi64_mask_dsl " (if (lit? v0) (hydride-printer v0) (hydride-printer v0)) " " " " (if (lit? vc_1) (hydride-printer vc_1) (hydride-printer vc_1)) " " " " (if (lit? vc_2) (hydride-printer vc_2) (hydride-printer vc_2)) " " " " (if (lit? num_3) (hydride-printer num_3) (hydride-printer num_3)) " " " " (if (lit? num_4) (hydride-printer num_4) (hydride-printer num_4)) " " " " (if (lit? num_5) (hydride-printer num_5) (hydride-printer num_5)) " " " " (if (lit? num_6) (hydride-printer num_6) (hydride-printer num_6)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_testn_epi16_mask_dsl v0 vc_1 vc_2 vc_3 v4 num_5 prec_i num_7) 
	(string-append "\n" 
	(string-append "(_mm256_testn_epi16_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (get-length vc_2 (vector 0)) prec_i)) (string-append (hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (get-length vc_3 (vector 0)) prec_i)) (string-append (hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_sll_epi32_dsl v0 v1 vc_2 vc_3 vc_4 v5 num_6 prec_i_o num_8) 
	(string-append "\n" 
	(string-append "(_mm512_maskz_sll_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (get-length vc_2 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (get-length vc_3 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_3)) " " " " (if (lit? vc_4) (begin (define num_elem (/ (get-length vc_4 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_4)) " " " " (if (lit? v5) (begin (define num_elem (/ (get-length v5 (vector 0)) prec_i_o)) (string-append (hydride-printer v5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_mul_epi32_dsl v0 v1 v2 v3 num_4) 
	(string-append "\n" 
	(string-append "(_mm256_mask_mul_epi32_dsl " (if (lit? v0) (hydride-printer v0) (hydride-printer v0)) " " " " (if (lit? v1) (hydride-printer v1) (hydride-printer v1)) " " " " (if (lit? v2) (hydride-printer v2) (hydride-printer v2)) " " " " (if (lit? v3) (hydride-printer v3) (hydride-printer v3)) " " " " (if (lit? num_4) (hydride-printer num_4) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_cmpneq_epi8_mask_dsl v0 v1 num_2 prec_i num_4) 
	(string-append "\n" 
	(string-append "(_mm512_cmpneq_epi8_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mulhrs_pi16_dsl v0 v1 num_2) 
	(string-append "\n" 
	(string-append "(_mm_mulhrs_pi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 16)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 16)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) 16)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer num_2)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_max_epi16_dsl v0 v1 num_2 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm512_max_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_madd52lo_epu64_dsl v0 v1 v2 num_3 num_4) 
	(string-append "\n" 
	(string-append "(_mm512_madd52lo_epu64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 52)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 52) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 52)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 52) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 52)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 52) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) 52)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s 52) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) 52)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s 52) ">" "\n" )) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_m_por_dsl v0 v1 num_2 prec_i_o) 
	(string-append "\n" 
	(string-append "(_m_por_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_unpackhi_epi8_dsl v0 v1 num_2 prec_i_o num_4 num_5) 
	(string-append "\n" 
	(string-append "(_mm_unpackhi_epi8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_mul_epu32_dsl v0 v1 v2 v3 num_4) 
	(string-append "\n" 
	(string-append "(_mm256_mask_mul_epu32_dsl " (if (lit? v0) (hydride-printer v0) (hydride-printer v0)) " " " " (if (lit? v1) (hydride-printer v1) (hydride-printer v1)) " " " " (if (lit? v2) (hydride-printer v2) (hydride-printer v2)) " " " " (if (lit? v3) (hydride-printer v3) (hydride-printer v3)) " " " " (if (lit? num_4) (hydride-printer num_4) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_maskz_mulhi_epi16_dsl v0 vc_1 v2 v3 num_4 num_5) 
	(string-append "\n" 
	(string-append "(_mm256_maskz_mulhi_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 16)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) 16)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 16)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) 16)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) 16)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) 16)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer num_5)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mul_epi32_dsl v0 v1 num_2) 
	(string-append "\n" 
	(string-append "(_mm_mul_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 32)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 32)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) 32)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer num_2)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_packus_epi16_dsl v0 v1 size_i_o num_3 prec_o num_5 prec_i) 
	(string-append "\n" 
	(string-append "(_mm512_packus_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_sllv_epi64_dsl vc_0 v1 vc_2 v3 num_4 prec_i_o num_6) 
	(string-append "\n" 
	(string-append "(_mm512_sllv_epi64_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (get-length vc_2 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_unpacklo_epi64_dsl v0 v1 num_2 prec_i_o num_4) 
	(string-append "\n" 
	(string-append "(_mm_unpacklo_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_dpbusds_epi32_dsl v0 vc_1 v2 v3 v4 size_i_o) 
	(string-append "\n" 
	(string-append "(_mm_maskz_dpbusds_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 8)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) 8)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 8)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) 8)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) 8)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) 8)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer size_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_m_paddsb_dsl v0 v1 num_2 prec_i_o) 
	(string-append "\n" 
	(string-append "(_m_paddsb_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_cvtsepi64_epi16_dsl v0 num_1 prec_o prec_i num_4) 
	(string-append "\n" 
	(string-append "(_mm_cvtsepi64_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? num_1) (begin (define num_elem (/ (get-length num_1 (vector 0)) prec_i)) (string-append (hydride-printer num_1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_1)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_testn_epi32_mask_dsl v0 vc_1 vc_2 v3 vc_4 vc_5 v6 num_7 prec_i num_9) 
	(string-append "\n" 
	(string-append "(_mm512_mask_testn_epi32_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (get-length vc_2 (vector 0)) prec_i)) (string-append (hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? vc_4) (begin (define num_elem (/ (get-length vc_4 (vector 0)) prec_i)) (string-append (hydride-printer vc_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_4)) " " " " (if (lit? vc_5) (begin (define num_elem (/ (get-length vc_5 (vector 0)) prec_i)) (string-append (hydride-printer vc_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_5)) " " " " (if (lit? v6) (begin (define num_elem (/ (get-length v6 (vector 0)) prec_i)) (string-append (hydride-printer v6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_m_pminub_dsl v0 v1 num_2 prec_i_o) 
	(string-append "\n" 
	(string-append "(_m_pminub_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_srl_epi64_dsl v0 vc_1 v2 num_3) 
	(string-append "\n" 
	(string-append "(_mm256_srl_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 64)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) 64)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 64)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) 64)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer num_3)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_srlv_epi32_dsl v0 vc_1 vc_2 v3 num_4 prec_i_o num_6) 
	(string-append "\n" 
	(string-append "(_mm_srlv_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (get-length vc_2 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_srav_epi64_dsl vc_0 v1 vc_2 v3 vc_4 num_5 prec_i_o num_7) 
	(string-append "\n" 
	(string-append "(_mm512_srav_epi64_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (get-length vc_2 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? vc_4) (begin (define num_elem (/ (get-length vc_4 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_maskz_slli_epi16_dsl v0 vc_1 v2 vc_3 vc_4 v5 num_6 prec_i_o num_8) 
	(string-append "\n" 
	(string-append "(_mm256_maskz_slli_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (get-length vc_3 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_3)) " " " " (if (lit? vc_4) (begin (define num_elem (/ (get-length vc_4 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_4)) " " " " (if (lit? v5) (begin (define num_elem (/ (get-length v5 (vector 0)) prec_i_o)) (string-append (hydride-printer v5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mulhi_epu16_dsl v0 v1 num_2 prec_i_o num_4 num_5) 
	(string-append "\n" 
	(string-append "(_mm_mulhi_epu16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_maskz_adds_epu8_dsl v0 vc_1 v2 v3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm256_maskz_adds_epu8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_cmplt_epu16_mask_dsl v0 v1 vc_2 vc_3 v4 vc_5 num_6 prec_i num_8) 
	(string-append "\n" 
	(string-append "(_mm_mask_cmplt_epu16_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (get-length vc_2 (vector 0)) prec_i)) (string-append (hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (get-length vc_3 (vector 0)) prec_i)) (string-append (hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? vc_5) (begin (define num_elem (/ (get-length vc_5 (vector 0)) prec_i)) (string-append (hydride-printer vc_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_maddubs_epi16_dsl v0 v1 v2 v3 num_4) 
	(string-append "\n" 
	(string-append "(_mm256_mask_maddubs_epi16_dsl " (if (lit? v0) (hydride-printer v0) (hydride-printer v0)) " " " " (if (lit? v1) (hydride-printer v1) (hydride-printer v1)) " " " " (if (lit? v2) (hydride-printer v2) (hydride-printer v2)) " " " " (if (lit? v3) (hydride-printer v3) (hydride-printer v3)) " " " " (if (lit? num_4) (hydride-printer num_4) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_ror_epi32_dsl v0 vc_1 vc_2 v3 v4 v5 num_6 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm512_mask_ror_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (get-length vc_2 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i_o)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? v5) (begin (define num_elem (/ (get-length v5 (vector 0)) prec_i_o)) (string-append (hydride-printer v5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_broadcast_i64x4_dsl v0 num_1 prec_i_o num_3) 
	(string-append "\n" 
	(string-append "(_mm512_broadcast_i64x4_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? num_1) (begin (define num_elem (/ (get-length num_1 (vector 0)) prec_i_o)) (string-append (hydride-printer num_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_1)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i_o)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_3)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_broadcastq_epi64_dsl v0 vc_1 v2 num_3 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm_maskz_broadcastq_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i_o)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_fmadd_epi32_dsl v0 v1 v2 v3) 
	(string-append "\n" 
	(string-append "(_mm512_mask_fmadd_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 32)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 32)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 32)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) 32)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v3)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_avg_epu16_dsl vc_0 vc_1 v2 v3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm256_avg_epu16_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_min_epu16_dsl v0 v1 v2 v3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm512_mask_min_epu16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_cvtepi64_epi32_dsl v0 num_1 prec_o prec_i num_4) 
	(string-append "\n" 
	(string-append "(_mm_cvtepi64_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? num_1) (begin (define num_elem (/ (get-length num_1 (vector 0)) prec_i)) (string-append (hydride-printer num_1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_1)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_cmpgt_pi32_dsl vc_0 v1 v2 vc_3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm_cmpgt_pi32_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (get-length vc_3 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_dpbusd_epi32_dsl v0 vc_1 v2 v3 v4 size_i_o) 
	(string-append "\n" 
	(string-append "(_mm512_maskz_dpbusd_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 8)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) 8)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 8)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) 8)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) 8)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) 8)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer size_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_abs_epi64_dsl v0 v1 v2 num_3 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm256_mask_abs_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i_o)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_sll_epi64_dsl v0 v1 v2 vc_3 v4 num_5) 
	(string-append "\n" 
	(string-append "(_mm256_mask_sll_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 64)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 64)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 64)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (get-length vc_3 (vector 0)) 64)) (string-append (hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer vc_3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) 64)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) 64)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer num_5)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_unpackhi_epi64_dsl v0 vc_1 v2 v3 num_4 num_5) 
	(string-append "\n" 
	(string-append "(_mm_maskz_unpackhi_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 64)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) 64)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 64)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) 64)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) 64)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) 64)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer num_5)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_sub_epi32_dsl v0 v1 v2 v3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm512_mask_sub_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_xor_epi32_dsl v0 v1 num_2 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm_xor_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_blendv_epi8_dsl v0 v1 v2 num_3) 
	(string-append "\n" 
	(string-append "(_mm_blendv_epi8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 8)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 8)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 8)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) 8)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer num_3)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_movepi64_pi64_dsl v0 num_1 prec_i_o num_3) 
	(string-append "\n" 
	(string-append "(_mm_movepi64_pi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? num_1) (begin (define num_elem (/ (get-length num_1 (vector 0)) prec_i_o)) (string-append (hydride-printer num_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_1)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i_o)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_3)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_movm_epi64_dsl v0 vc_1 vc_2 num_3 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm256_movm_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (get-length vc_2 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i_o)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_sign_epi8_dsl v0 vc_1 vc_2 vc_3 v4 num_5 prec_i_o num_7 num_8) 
	(string-append "\n" 
	(string-append "(_mm256_sign_epi8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (get-length vc_2 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (get-length vc_3 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i_o)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_maskz_cvtusepi64_epi16_dsl v0 vc_1 v2 num_3 prec_i_o num_5 num_6) 
	(string-append "\n" 
	(string-append "(_mm256_maskz_cvtusepi64_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i_o)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_packus_epi16_dsl v0 v1 num_2 num_3 num_4 num_5 prec_o num_7 prec_i num_9) 
	(string-append "\n" 
	(string-append "(_mm_packus_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_max_epu64_dsl v0 v1 num_2 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm512_max_epu64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_subs_epu8_dsl v0 vc_1 v2 v3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm512_maskz_subs_epu8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_ror_epi64_dsl vc_0 vc_1 v2 v3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm512_ror_epi64_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_abs_epi16_dsl v0 num_1 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm256_abs_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? num_1) (begin (define num_elem (/ (get-length num_1 (vector 0)) prec_i_o)) (string-append (hydride-printer num_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_1)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_min_epi8_dsl v0 vc_1 v2 v3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm_maskz_min_epi8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_mulhi_epi32_dsl v0 v1 v2 v3) 
	(string-append "\n" 
	(string-append "(_mm512_mask_mulhi_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 32)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 32)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 32)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) 32)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v3)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_sll_epi64_dsl v0 vc_1 v2 num_3) 
	(string-append "\n" 
	(string-append "(_mm_sll_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 64)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) 64)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 64)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) 64)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer num_3)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_unpacklo_epi64_dsl v0 v1 num_2 num_3) 
	(string-append "\n" 
	(string-append "(_mm256_unpacklo_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 64)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 64)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) 64)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) 64)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer num_3)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_cmpgt_epi16_mask_dsl v0 v1 num_2 prec_i num_4) 
	(string-append "\n" 
	(string-append "(_mm512_cmpgt_epi16_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mul_epu32_dsl v0 v1 num_2) 
	(string-append "\n" 
	(string-append "(_mm512_mul_epu32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 32)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 32)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) 32)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer num_2)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_div_epu32_dsl v0 v1 v2 v3) 
	(string-append "\n" 
	(string-append "(_mm512_mask_div_epu32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 32)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 32)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 32)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) 32)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v3)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_dpbusds_epi32_dsl v0 v1 v2 size_i) 
	(string-append "\n" 
	(string-append "(_mm_dpbusds_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 8)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 8)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 8)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i) (begin (define num_elem (/ (get-length size_i (vector 0)) 8)) (string-append (hydride-printer size_i) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer size_i)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maddubs_pi16_dsl v0 v1 num_2) 
	(string-append "\n" 
	(string-append "(_mm_maddubs_pi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 8)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 8)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) 8)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer num_2)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_extracti32x4_epi32_dsl v0 v1) 
	(string-append "\n" 
	(string-append "(_mm512_extracti32x4_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 128)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 128) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 128)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 128) ">" "\n" )) (hydride-printer v1)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_srlv_epi32_dsl vc_0 v1 v2 vc_3 vc_4 v5 num_6 prec_i_o num_8 num_9) 
	(string-append "\n" 
	(string-append "(_mm512_maskz_srlv_epi32_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (get-length vc_3 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_3)) " " " " (if (lit? vc_4) (begin (define num_elem (/ (get-length vc_4 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_4)) " " " " (if (lit? v5) (begin (define num_elem (/ (get-length v5 (vector 0)) prec_i_o)) (string-append (hydride-printer v5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_div_epu16_dsl v0 v1 num_2 prec_i_o num_4) 
	(string-append "\n" 
	(string-append "(_mm512_div_epu16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask3_fmadd_epi32_dsl v0 v1 v2 v3) 
	(string-append "\n" 
	(string-append "(_mm512_mask3_fmadd_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 32)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 32)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 32)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) 32)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v3)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_dpwssds_epi32_dsl v0 v1 v2 size_i) 
	(string-append "\n" 
	(string-append "(_mm256_dpwssds_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 16)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 16)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 16)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i) (begin (define num_elem (/ (get-length size_i (vector 0)) 16)) (string-append (hydride-printer size_i) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer size_i)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_cvtepi8_epi32_dsl v0 num_1 prec_i prec_o) 
	(string-append "\n" 
	(string-append "(_mm256_cvtepi8_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? num_1) (begin (define num_elem (/ (get-length num_1 (vector 0)) prec_i)) (string-append (hydride-printer num_1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_1)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_or_epi64_dsl v0 vc_1 v2 v3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm_maskz_or_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_cmplt_epu16_mask_dsl v0 v1 num_2 prec_i num_4) 
	(string-append "\n" 
	(string-append "(_mm_cmplt_epu16_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_rem_epu32_dsl v0 v1 v2 v3) 
	(string-append "\n" 
	(string-append "(_mm512_mask_rem_epu32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 32)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 32)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 32)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) 32)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v3)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_dpwssds_epi32_dsl v0 v1 v2 v3 size_i_o) 
	(string-append "\n" 
	(string-append "(_mm512_mask_dpwssds_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 32)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 32)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 32)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) 32)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) 32)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer size_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_hadd_epi32_dsl v0 v1 num_2 prec_i_o num_4 num_5) 
	(string-append "\n" 
	(string-append "(_mm256_hadd_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_rorv_epi32_dsl vc_0 vc_1 v2 v3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm256_rorv_epi32_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_hsub_epi32_dsl v0 v1 num_2 num_3 num_4 num_5 prec_i_o num_7 num_8 num_9) 
	(string-append "\n" 
	(string-append "(_mm_hsub_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i_o)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_srai_epi32_dsl vc_0 v1 vc_2 v3 vc_4 num_5 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm256_srai_epi32_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (get-length vc_2 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? vc_4) (begin (define num_elem (/ (get-length vc_4 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_avg_epu16_dsl v0 vc_1 vc_2 vc_3 v4 v5 num_6 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm512_maskz_avg_epu16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (get-length vc_2 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (get-length vc_3 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i_o)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? v5) (begin (define num_elem (/ (get-length v5 (vector 0)) prec_i_o)) (string-append (hydride-printer v5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_cmpeq_epi32_dsl vc_0 vc_1 v2 v3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm_cmpeq_epi32_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_dpwssd_epi32_dsl v0 v1 v2 v3 size_i_o) 
	(string-append "\n" 
	(string-append "(_mm_mask_dpwssd_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 32)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 32)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 32)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) 32)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) 32)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer size_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_subs_epi16_dsl v0 v1 num_2 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm512_subs_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_sra_epi64_dsl v0 v1 v2 vc_3 num_4) 
	(string-append "\n" 
	(string-append "(_mm_maskz_sra_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 64)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 64)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 64)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (get-length vc_3 (vector 0)) 64)) (string-append (hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer vc_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) 64)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_sll_pi16_dsl v0 vc_1 vc_2 v3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm_sll_pi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (get-length vc_2 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_cmpge_epu64_mask_dsl v0 v1 num_2 prec_i num_4) 
	(string-append "\n" 
	(string-append "(_mm_cmpge_epu64_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_andnot_epi32_dsl v0 v1 num_2 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm512_andnot_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mulhi_epi32_dsl v0 v1) 
	(string-append "\n" 
	(string-append "(_mm512_mulhi_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 32)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 32)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v1)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_unpacklo_epi32_dsl v0 v1 size_i_o prec_i_o num_4) 
	(string-append "\n" 
	(string-append "(_mm256_unpacklo_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_xor_epi32_dsl v0 vc_1 v2 v3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm512_maskz_xor_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mul_su32_dsl v0 v1) 
	(string-append "\n" 
	(string-append "(_mm_mul_su32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 32)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 32)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v1)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_unpackhi_epi8_dsl v0 vc_1 v2 v3 num_4 num_5 num_6 prec_i_o num_8 num_9 num_10) 
	(string-append "\n" 
	(string-append "(_mm512_mask_unpackhi_epi8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_set1_pi8_dsl v0 num_1 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm_set1_pi8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? num_1) (begin (define num_elem (/ (get-length num_1 (vector 0)) prec_i_o)) (string-append (hydride-printer num_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_1)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_unpackhi_epi64_dsl v0 v1 num_2) 
	(string-append "\n" 
	(string-append "(_mm512_unpackhi_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 64)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 64)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) 64)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer num_2)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_srav_epi16_dsl v0 vc_1 v2 vc_3 vc_4 v5 v6 num_7 prec_i_o num_9 num_10) 
	(string-append "\n" 
	(string-append "(_mm_mask_srav_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (get-length vc_3 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_3)) " " " " (if (lit? vc_4) (begin (define num_elem (/ (get-length vc_4 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_4)) " " " " (if (lit? v5) (begin (define num_elem (/ (get-length v5 (vector 0)) prec_i_o)) (string-append (hydride-printer v5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v5)) " " " " (if (lit? v6) (begin (define num_elem (/ (get-length v6 (vector 0)) prec_i_o)) (string-append (hydride-printer v6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_maskz_unpacklo_epi8_dsl v0 v1 v2 v3 num_4 num_5 num_6 prec_i_o num_8 num_9 num_10) 
	(string-append "\n" 
	(string-append "(_mm256_maskz_unpacklo_epi8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_broadcast_i32x2_dsl v0 vc_1 v2 num_3 prec_i_o num_5) 
	(string-append "\n" 
	(string-append "(_mm_maskz_broadcast_i32x2_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i_o)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_maskz_mulhrs_epi16_dsl v0 vc_1 v2 v3 num_4) 
	(string-append "\n" 
	(string-append "(_mm256_maskz_mulhrs_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 16)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) 16)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 16)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) 16)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) 16)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_packs_epi16_dsl v0 v1 v2 v3 num_4 num_5 num_6 num_7 prec_i_o num_9 num_10) 
	(string-append "\n" 
	(string-append "(_mm512_maskz_packs_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_sra_epi16_dsl vc_0 v1 v2 vc_3 vc_4 v5 v6 num_7 prec_i_o num_9) 
	(string-append "\n" 
	(string-append "(_mm_mask_sra_epi16_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (get-length vc_3 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_3)) " " " " (if (lit? vc_4) (begin (define num_elem (/ (get-length vc_4 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_4)) " " " " (if (lit? v5) (begin (define num_elem (/ (get-length v5 (vector 0)) prec_i_o)) (string-append (hydride-printer v5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v5)) " " " " (if (lit? v6) (begin (define num_elem (/ (get-length v6 (vector 0)) prec_i_o)) (string-append (hydride-printer v6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_fmadd_epi32_dsl v0 v1 v2) 
	(string-append "\n" 
	(string-append "(_mm512_fmadd_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 32)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 32)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 32)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v2)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_unpackhi_epi32_dsl v0 vc_1 v2 v3 num_4 prec_i_o num_6 num_7 num_8) 
	(string-append "\n" 
	(string-append "(_mm_maskz_unpackhi_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_and_si256_dsl v0 v1 num_2 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm256_and_si256_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_mullo_epi64_dsl v0 v1 v2 v3 num_4 prec_i_o num_6 num_7) 
	(string-append "\n" 
	(string-append "(_mm512_mask_mullo_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_hadds_epi16_dsl v0 v1 num_2 num_3 num_4 num_5 num_6) 
	(string-append "\n" 
	(string-append "(_mm_hadds_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 16)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 16)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) 16)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) 16)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) 16)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) 16)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) 16)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer num_6)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_unpacklo_epi32_dsl v0 v1 num_2 prec_i_o num_4 num_5) 
	(string-append "\n" 
	(string-append "(_mm_unpacklo_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_cmpeq_epi64_mask_dsl v0 v1 num_2 prec_i num_4) 
	(string-append "\n" 
	(string-append "(_mm_cmpeq_epi64_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_rem_epu16_dsl v0 v1 num_2 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm512_rem_epu16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_cvtusepi64_epi8_dsl v0 num_1 prec_o prec_i num_4) 
	(string-append "\n" 
	(string-append "(_mm_cvtusepi64_epi8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? num_1) (begin (define num_elem (/ (get-length num_1 (vector 0)) prec_i)) (string-append (hydride-printer num_1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_1)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_m_paddusw_dsl v0 v1 num_2 prec_i_o) 
	(string-append "\n" 
	(string-append "(_m_paddusw_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_dpwssd_epi32_dsl v0 vc_1 v2 v3 v4 size_i_o) 
	(string-append "\n" 
	(string-append "(_mm512_maskz_dpwssd_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 16)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) 16)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 16)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) 16)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) 16)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) 16)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer size_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_dpbusd_epi32_dsl v0 v1 v2 v3 size_i_o) 
	(string-append "\n" 
	(string-append "(_mm_mask_dpbusd_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 32)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 32)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 32)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) 32)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) 32)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer size_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_m_packsswb_dsl v0 v1 num_2 num_3 num_4 num_5 prec_o num_7 prec_i num_9) 
	(string-append "\n" 
	(string-append "(_m_packsswb_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_packus_epi16_dsl v0 v1 v2 v3 num_4 num_5 prec_i_o num_7 num_8) 
	(string-append "\n" 
	(string-append "(_mm_mask_packus_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_min_epi16_dsl v0 v1 num_2 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm256_min_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_madd52hi_epu64_dsl v0 v1 v2 v3 num_4 num_5) 
	(string-append "\n" 
	(string-append "(_mm_mask_madd52hi_epu64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 64)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 64)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 64)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) 64)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) 64)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) 64)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer num_5)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_div_epi32_dsl v0 v1 v2 v3) 
	(string-append "\n" 
	(string-append "(_mm512_mask_div_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 32)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 32)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 32)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) 32)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v3)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_m_psllwi_dsl v0 vc_1 vc_2 v3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_m_psllwi_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (get-length vc_2 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_broadcastmw_epi32_dsl v0 num_1 prec_i prec_o) 
	(string-append "\n" 
	(string-append "(_mm256_broadcastmw_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? num_1) (begin (define num_elem (/ (get-length num_1 (vector 0)) prec_i)) (string-append (hydride-printer num_1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_1)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_andnot_epi32_dsl v0 v1 v2 v3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm_mask_andnot_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_add_epi8_dsl v0 v1 v2 v3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm256_mask_add_epi8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_dpwssd_epi32_dsl v0 v1 v2 size_i) 
	(string-append "\n" 
	(string-append "(_mm_dpwssd_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 16)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 16)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 16)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i) (begin (define num_elem (/ (get-length size_i (vector 0)) 16)) (string-append (hydride-printer size_i) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer size_i)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_cmple_epi32_mask_dsl v0 v1 num_2 prec_i num_4) 
	(string-append "\n" 
	(string-append "(_mm256_cmple_epi32_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_unpackhi_epi8_dsl v0 v1 size_i_o prec_i_o num_4) 
	(string-append "\n" 
	(string-append "(_mm256_unpackhi_epi8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_madd_pi16_dsl v0 v1 num_2) 
	(string-append "\n" 
	(string-append "(_mm_madd_pi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 16)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 16)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) 16)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer num_2)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_cvtepi8_epi32_dsl v0 v1 v2 num_3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm256_mask_cvtepi8_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i_o)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_packus_epi16_dsl v0 vc_1 v2 v3 num_4 num_5 num_6 num_7 prec_i_o num_9 num_10) 
	(string-append "\n" 
	(string-append "(_mm256_mask_packus_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_packs_epi32_dsl v0 v1 size_i_o num_3 prec_o num_5 prec_i) 
	(string-append "\n" 
	(string-append "(_mm256_packs_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_cmpgt_epu8_mask_dsl v0 v1 num_2 prec_i num_4) 
	(string-append "\n" 
	(string-append "(_mm_cmpgt_epu8_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_cmpge_epi64_mask_dsl v0 v1 num_2 prec_i num_4) 
	(string-append "\n" 
	(string-append "(_mm256_cmpge_epi64_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_srl_epi64_dsl v0 v1 vc_2 vc_3 v4 num_5) 
	(string-append "\n" 
	(string-append "(_mm_maskz_srl_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 64)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 64)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (get-length vc_2 (vector 0)) 64)) (string-append (hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer vc_2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (get-length vc_3 (vector 0)) 64)) (string-append (hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer vc_3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) 64)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) 64)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer num_5)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_maskz_dpwssds_epi32_dsl v0 vc_1 v2 v3 v4 size_i_o) 
	(string-append "\n" 
	(string-append "(_mm256_maskz_dpwssds_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 16)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) 16)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 16)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) 16)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) 16)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) 16)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer size_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_m_punpckhdq_dsl v0 v1 num_2 prec_i_o num_4 num_5) 
	(string-append "\n" 
	(string-append "(_m_punpckhdq_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_dpbusd_epi32_dsl v0 v1 v2 size_i) 
	(string-append "\n" 
	(string-append "(_mm256_dpbusd_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 8)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 8)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 8)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i) (begin (define num_elem (/ (get-length size_i (vector 0)) 8)) (string-append (hydride-printer size_i) " ; " "<" (~s num_elem) " x i" (~s 8) ">" "\n" )) (hydride-printer size_i)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_cmpneq_epu16_mask_dsl v0 vc_1 v2 v3 vc_4 vc_5 num_6 prec_i num_8) 
	(string-append "\n" 
	(string-append "(_mm512_mask_cmpneq_epu16_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? vc_4) (begin (define num_elem (/ (get-length vc_4 (vector 0)) prec_i)) (string-append (hydride-printer vc_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_4)) " " " " (if (lit? vc_5) (begin (define num_elem (/ (get-length vc_5 (vector 0)) prec_i)) (string-append (hydride-printer vc_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_packs_epi16_dsl v0 v1 v2 v3 num_4 num_5 prec_i_o num_7 num_8) 
	(string-append "\n" 
	(string-append "(_mm_mask_packs_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_rol_epi64_dsl v0 v1 vc_2 vc_3 v4 v5 num_6 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm_mask_rol_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (get-length vc_2 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (get-length vc_3 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i_o)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? v5) (begin (define num_elem (/ (get-length v5 (vector 0)) prec_i_o)) (string-append (hydride-printer v5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_cvtepu16_epi32_dsl v0 num_1 prec_i prec_o) 
	(string-append "\n" 
	(string-append "(_mm256_cvtepu16_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? num_1) (begin (define num_elem (/ (get-length num_1 (vector 0)) prec_i)) (string-append (hydride-printer num_1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_1)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_unpacklo_epi16_dsl v0 v1 v2 v3 num_4 prec_i_o num_6 num_7 num_8 num_9) 
	(string-append "\n" 
	(string-append "(_mm_mask_unpacklo_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_movemask_pi8_dsl v0 num_1 num_2) 
	(string-append "\n" 
	(string-append "(_mm_movemask_pi8_dsl " (if (lit? v0) (hydride-printer v0) (hydride-printer v0)) " " " " (if (lit? num_1) (hydride-printer num_1) (hydride-printer num_1)) " " " " (if (lit? num_2) (hydride-printer num_2) (hydride-printer num_2)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_unpacklo_epi64_dsl v0 vc_1 v2 v3 num_4 num_5 num_6) 
	(string-append "\n" 
	(string-append "(_mm512_maskz_unpacklo_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 64)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) 64)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 64)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) 64)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) 64)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) 64)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) 64)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer num_6)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_srai_epi64_dsl v0 vc_1 v2 v3 vc_4 vc_5 vc_6 num_7 prec_i_o num_9) 
	(string-append "\n" 
	(string-append "(_mm_maskz_srai_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? vc_4) (begin (define num_elem (/ (get-length vc_4 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_4)) " " " " (if (lit? vc_5) (begin (define num_elem (/ (get-length vc_5 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_5)) " " " " (if (lit? vc_6) (begin (define num_elem (/ (get-length vc_6 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_rolv_epi64_dsl v0 vc_1 vc_2 v3 v4 v5 num_6 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm512_mask_rolv_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (get-length vc_2 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i_o)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? v5) (begin (define num_elem (/ (get-length v5 (vector 0)) prec_i_o)) (string-append (hydride-printer v5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_hadd_pi32_dsl v0 v1) 
	(string-append "\n" 
	(string-append "(_mm_hadd_pi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 32)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 32)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v1)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_add_epi8_dsl v0 v1 num_2 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm256_add_epi8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_maskz_rorv_epi64_dsl v0 vc_1 vc_2 vc_3 v4 v5 num_6 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm256_maskz_rorv_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (get-length vc_2 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (get-length vc_3 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i_o)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? v5) (begin (define num_elem (/ (get-length v5 (vector 0)) prec_i_o)) (string-append (hydride-printer v5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_unpackhi_epi64_dsl v0 vc_1 v2 v3 num_4 num_5) 
	(string-append "\n" 
	(string-append "(_mm512_maskz_unpackhi_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 64)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) 64)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 64)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) 64)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) 64)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) 64)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hydride-printer num_5)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_extract_epi8_dsl vc_0 v1 v2 num_3 num_4 prec_i num_6) 
	(string-append "\n" 
	(string-append "(_mm256_extract_epi8_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_maskz_max_epu8_dsl v0 vc_1 v2 v3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm256_maskz_max_epu8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_sra_pi16_dsl vc_0 v1 vc_2 v3 vc_4 num_5 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm_sra_pi16_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (get-length vc_2 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? vc_4) (begin (define num_elem (/ (get-length vc_4 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_cvtsepi32_epi16_dsl v0 v1 v2 num_3 prec_i_o num_5 num_6) 
	(string-append "\n" 
	(string-append "(_mm256_mask_cvtsepi32_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i_o)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_rolv_epi32_dsl vc_0 vc_1 v2 v3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm_rolv_epi32_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_dpbusds_epi32_dsl v0 v1 v2 v3 size_i_o) 
	(string-append "\n" 
	(string-append "(_mm256_mask_dpbusds_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 32)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 32)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 32)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) 32)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) 32)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hydride-printer size_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_rol_epi64_dsl vc_0 vc_1 v2 v3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm256_rol_epi64_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_and_epi64_dsl v0 vc_1 v2 v3 num_4 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm512_maskz_and_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_cmplt_epi16_mask_dsl v0 v1 num_2 prec_i num_4) 
	(string-append "\n" 
	(string-append "(_mm_cmplt_epi16_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_blend_epi16_dsl v0 v1 v2) 
	(string-append "\n" 
	(string-append "(_mm256_blend_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 16)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 16)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) 16)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v2)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_hsubs_epi16_dsl v0 v1) 
	(string-append "\n" 
	(string-append "(_mm256_hsubs_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) 16)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) 16)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s 16) ">" "\n" )) (hydride-printer v1)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_extracti32x4_epi32_dsl v0 v1 prec_i_o num_3) 
	(string-append "\n" 
	(string-append "(_mm256_extracti32x4_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i_o)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_3)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_subs_epu8_dsl v0 v1 num_2 prec_i_o) 
	(string-append "\n" 
	(string-append "(_mm_subs_epu8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_srli_epi64_dsl vc_0 v1 v2 vc_3 v4 v5 num_6 prec_i_o num_8) 
	(string-append "\n" 
	(string-append "(_mm512_mask_srli_epi64_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (get-length vc_3 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i_o)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? v5) (begin (define num_elem (/ (get-length v5 (vector 0)) prec_i_o)) (string-append (hydride-printer v5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_set_m128i_dsl v0 v1 num_2 prec_i_o num_4) 
	(string-append "\n" 
	(string-append "(_mm256_set_m128i_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
	[v (~s v)]
 )
)

;; ================================================================================
