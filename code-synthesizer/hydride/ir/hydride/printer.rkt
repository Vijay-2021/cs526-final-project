#lang rosette
(require rosette/lib/synthax)
(require rosette/lib/angelic)
(require racket/pretty)
(require data/bit-vector)
(require rosette/lib/destruct)
(require rosette/solver/smt/boolector)

(require hydride/utils/bvops)
(require hydride/utils/misc)

(require hydride/ir/hydride/definition)
(require hydride/ir/hydride/length)
(require hydride/ir/hydride/prec)


(provide (all-defined-out))




;; ================================================================================
;;                                DSL Custom Printer
;; ================================================================================
(define (hydride-printer  prog)
 (destruct prog
	[(dim-x id) (string-append "(dim-x " (~s id) ")\n")]
	[(dim-y id) (string-append "(dim-y " (~s id) ")\n")]
	[(idx-i id) (string-append "(idx-i " (~s id) ")\n")]
	[(idx-j id) (string-append "(idx-j " (~s id) ")\n")]
	[(reg id) (string-append  "(reg " (~s id) ")\n")]
	[(lit v) (string-append  "(lit " (~s v) ")")]
	[(nop v1) (string-append "(nop " (hydride-printer v1) ")\n")]
	[(idx-add i1 i2) (string-append "(idx-add " (~s i1) (~s i2) ")\n" )]
	[(idx-mul i1 i2) (string-append "(idx-mul " (~s i1) (~s i2) ")\n" )]
	[(vector-load_dsl v0 size_i_o num_2 num_3 prec_i_o) 
	(string-append 
	(string-append "(vector-load_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i_o)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
	[(vector-two-input-swizzle_dsl v0 v1 num_2 prec_i_o num_4 lane_size num_6 num_7 num_8) 
	(string-append 
	(string-append "(vector-two-input-swizzle_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (get-length num_2 (vector 0)) prec_i_o)) (string-append (hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mulhi_epi16_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 num_7 num_8 num_9) 
	(string-append 
	(string-append "(_mm512_mulhi_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_m_from_int_dsl v0 size_o lane_size num_3 prec_i_o num_5 num_6 num_7 num_8) 
	(string-append 
	(string-append "(_m_from_int_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i_o)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_hsubs_pi16_dsl v0 v1 size_i_o lane_size num_4 num_5 num_6 prec_i_o num_8 num_9 num_10 num_11 num_12 num_13 num_14) 
	(string-append 
	(string-append "(_mm_hsubs_pi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i_o)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i_o)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i_o)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_maskz_sllv_epi32_dsl vc_0 vc_1 v2 v3 v4 size_i_o lane_size num_7 num_8 num_9 vc_10 prec_i_o num_12) 
	(string-append 
	(string-append "(_mm256_maskz_sllv_epi32_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i_o)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i_o)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_dpbusd_epi32_dsl v0 v1 v2 v3 size_i_o lane_size num_6 num_7 num_8 num_9 num_10 num_11 num_12 num_13) 
	(string-append 
	(string-append "(_mm256_mask_dpbusd_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) lane_size)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) lane_size)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) lane_size)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) lane_size)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) lane_size)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) lane_size)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) lane_size)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) lane_size)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) lane_size)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) lane_size)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) lane_size)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) lane_size)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) lane_size)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) lane_size)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_13)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_maskz_sra_epi32_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 num_7 num_8 vc_9 num_10 num_11 prec_i_o vc_13 vc_14 num_15 num_16 num_17) 
	(string-append 
	(string-append "(_mm256_maskz_sra_epi32_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? vc_13) (begin (define num_elem (/ (get-length vc_13 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_13)) " " " " (if (lit? vc_14) (begin (define num_elem (/ (get-length vc_14 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (get-length num_15 (vector 0)) prec_i_o)) (string-append (hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (get-length num_16 (vector 0)) prec_i_o)) (string-append (hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_16)) " " " " (if (lit? num_17) (begin (define num_elem (/ (get-length num_17 (vector 0)) prec_i_o)) (string-append (hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_17)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_xor_epi64_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 num_7) 
	(string-append 
	(string-append "(_mm512_xor_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_broadcast_i64x4_dsl v0 size_i_o lane_size num_3 prec_i_o num_5 num_6 num_7) 
	(string-append 
	(string-append "(_mm512_broadcast_i64x4_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i_o)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_and_epi32_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 num_7) 
	(string-append 
	(string-append "(_mm512_and_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_subs_epu16_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 num_7) 
	(string-append 
	(string-append "(_mm512_subs_epu16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_maskz_packus_epi16_dsl vc_0 v1 v2 v3 size_i prec_i num_6 num_7 num_8 num_9 num_10 num_11 num_12 num_13 num_14) 
	(string-append 
	(string-append "(_mm256_maskz_packus_epi16_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i) (begin (define num_elem (/ (get-length size_i (vector 0)) prec_i)) (string-append (hydride-printer size_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_packus_epi32_dsl vc_0 v1 v2 v3 size_i prec_i num_6 num_7 num_8 num_9 num_10 num_11 num_12) 
	(string-append 
	(string-append "(_mm512_maskz_packus_epi32_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i) (begin (define num_elem (/ (get-length size_i (vector 0)) prec_i)) (string-append (hydride-printer size_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_srl_epi64_dsl vc_0 vc_1 v2 v3 v4 size_i_o lane_size num_7 num_8 num_9 vc_10 num_11 prec_i_o num_13 num_14) 
	(string-append 
	(string-append "(_mm512_maskz_srl_epi64_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i_o)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i_o)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i_o)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_packus_epi32_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i num_8 num_9 num_10 num_11 num_12) 
	(string-append 
	(string-append "(_mm_maskz_packus_epi32_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_maskz_adds_epu16_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 num_9) 
	(string-append 
	(string-append "(_mm256_maskz_adds_epu16_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_packs_epi16_dsl vc_0 v1 v2 v3 size_i prec_i num_6 num_7 num_8 num_9 num_10 num_11 num_12) 
	(string-append 
	(string-append "(_mm512_maskz_packs_epi16_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i) (begin (define num_elem (/ (get-length size_i (vector 0)) prec_i)) (string-append (hydride-printer size_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_xor_epi64_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 num_9) 
	(string-append 
	(string-append "(_mm_maskz_xor_epi64_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_min_epi8_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 num_7) 
	(string-append 
	(string-append "(_mm256_min_epi8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_cvtepi16_epi8_dsl v0 size_i_o lane_size num_3 prec_o num_5 prec_i num_7) 
	(string-append 
	(string-append "(_mm256_cvtepi16_epi8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_extract_epi32_dsl v0 v1 size_o lane_size num_4 num_5 num_6 prec_o num_8 num_9 prec_i vc_11 num_12 num_13 num_14 num_15) 
	(string-append 
	(string-append "(_mm_extract_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? vc_11) (begin (define num_elem (/ (get-length vc_11 (vector 0)) prec_i)) (string-append (hydride-printer vc_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (get-length num_15 (vector 0)) prec_i)) (string-append (hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_15)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_hsub_epi32_dsl v0 v1 size_i_o lane_size num_4 num_5 num_6 prec_i_o num_8 num_9 num_10 num_11 num_12 num_13 num_14 num_15) 
	(string-append 
	(string-append "(_mm256_hsub_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i_o)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i_o)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i_o)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (get-length num_15 (vector 0)) prec_i_o)) (string-append (hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_15)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_packs_epi32_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i num_8 num_9 num_10 num_11 num_12) 
	(string-append 
	(string-append "(_mm_maskz_packs_epi32_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_maskz_packus_epi32_dsl vc_0 v1 v2 v3 size_i prec_i num_6 num_7 num_8 num_9 num_10 num_11 num_12 num_13 num_14) 
	(string-append 
	(string-append "(_mm256_maskz_packus_epi32_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i) (begin (define num_elem (/ (get-length size_i (vector 0)) prec_i)) (string-append (hydride-printer size_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_m_psrldi_dsl vc_0 v1 v2 size_i_o lane_size num_5 num_6 num_7 vc_8 num_9 prec_i_o num_11 num_12 num_13) 
	(string-append 
	(string-append "(_m_psrldi_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i_o)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i_o)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_13)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_slli_epi64_dsl vc_0 v1 v2 v3 v4 size_i_o lane_size num_7 num_8 num_9 vc_10 num_11 prec_i_o num_13 num_14 num_15) 
	(string-append 
	(string-append "(_mm256_mask_slli_epi64_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i_o)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i_o)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i_o)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (get-length num_15 (vector 0)) prec_i_o)) (string-append (hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_15)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_xor_si512_dsl v0 v1 size_o lane_size num_4 prec_i_o num_6 num_7 num_8 num_9 num_10) 
	(string-append 
	(string-append "(_mm512_xor_si512_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_srl_epi16_dsl vc_0 v1 v2 size_i_o lane_size num_5 num_6 num_7 vc_8 num_9 num_10 prec_i_o num_12 num_13 num_14) 
	(string-append 
	(string-append "(_mm256_srl_epi16_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i_o)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i_o)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i_o)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_cvtepu8_epi64_dsl vc_0 v1 v2 size_i_o lane_size num_5 num_6 num_7 prec_i_o num_9) 
	(string-append 
	(string-append "(_mm_maskz_cvtepu8_epi64_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_srai_epi64_dsl v0 v1 size_i_o lane_size num_4 num_5 num_6 vc_7 num_8 prec_i_o vc_10 vc_11 num_12 num_13 num_14) 
	(string-append 
	(string-append "(_mm512_srai_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? vc_7) (begin (define num_elem (/ (get-length vc_7 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? vc_11) (begin (define num_elem (/ (get-length vc_11 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i_o)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i_o)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i_o)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_m_paddd_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 num_7) 
	(string-append 
	(string-append "(_m_paddd_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_subr_epi32_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 num_7) 
	(string-append 
	(string-append "(_mm512_subr_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_cvtsepi32_epi8_dsl v0 size_i_o lane_size num_3 prec_o num_5 prec_i num_7) 
	(string-append 
	(string-append "(_mm256_cvtsepi32_epi8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mulhi_epu32_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 vc_7 num_8 num_9) 
	(string-append 
	(string-append "(_mm512_mulhi_epu32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? vc_7) (begin (define num_elem (/ (get-length vc_7 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_srav_epi16_dsl v0 v1 v2 v3 size_i_o lane_size num_6 num_7 num_8 vc_9 prec_i_o vc_11 vc_12 num_13) 
	(string-append 
	(string-append "(_mm256_mask_srav_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? vc_11) (begin (define num_elem (/ (get-length vc_11 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_11)) " " " " (if (lit? vc_12) (begin (define num_elem (/ (get-length vc_12 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i_o)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_13)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask3_fmadd_epi32_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 num_9 num_10) 
	(string-append 
	(string-append "(_mm512_mask3_fmadd_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_sra_epi64_dsl v0 v1 v2 v3 size_i_o lane_size num_6 num_7 num_8 vc_9 num_10 prec_i_o vc_12 vc_13 num_14 num_15) 
	(string-append 
	(string-append "(_mm_mask_sra_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? vc_12) (begin (define num_elem (/ (get-length vc_12 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_12)) " " " " (if (lit? vc_13) (begin (define num_elem (/ (get-length vc_13 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i_o)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (get-length num_15 (vector 0)) prec_i_o)) (string-append (hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_15)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_srav_epi64_dsl v0 v1 size_i_o lane_size num_4 num_5 num_6 vc_7 prec_i_o vc_9 vc_10 num_11) 
	(string-append 
	(string-append "(_mm_srav_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? vc_7) (begin (define num_elem (/ (get-length vc_7 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_min_epi8_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 num_9) 
	(string-append 
	(string-append "(_mm_mask_min_epi8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_min_epu16_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 num_9) 
	(string-append 
	(string-append "(_mm_mask_min_epu16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_m_punpckhdq_dsl v0 v1 size_o lane_size num_4 prec_i_o num_6 num_7 num_8 num_9 num_10 num_11) 
	(string-append 
	(string-append "(_m_punpckhdq_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_maskz_packs_epi16_dsl vc_0 v1 v2 v3 size_i prec_i num_6 num_7 num_8 num_9 num_10 num_11 num_12 num_13 num_14) 
	(string-append 
	(string-append "(_mm256_maskz_packs_epi16_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i) (begin (define num_elem (/ (get-length size_i (vector 0)) prec_i)) (string-append (hydride-printer size_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_cmplt_epu16_mask_dsl v0 v1 size_i_o lane_size num_4 prec_o num_6 vc_7 vc_8 prec_i num_10) 
	(string-append 
	(string-append "(_mm_cmplt_epu16_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? vc_7) (begin (define num_elem (/ (get-length vc_7 (vector 0)) prec_i)) (string-append (hydride-printer vc_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_srl_epi32_dsl vc_0 v1 v2 v3 v4 size_i_o lane_size num_7 num_8 num_9 vc_10 num_11 num_12 prec_i_o num_14 num_15 num_16) 
	(string-append 
	(string-append "(_mm512_mask_srl_epi32_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i_o)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i_o)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i_o)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (get-length num_15 (vector 0)) prec_i_o)) (string-append (hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (get-length num_16 (vector 0)) prec_i_o)) (string-append (hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_16)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_cvtepi32_epi8_dsl v0 v1 v2 size_i_o lane_size num_5 prec_i_o num_7 num_8 num_9) 
	(string-append 
	(string-append "(_mm256_mask_cvtepi32_epi8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_cmpeq_epi8_mask_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_o num_8 vc_9 vc_10 prec_i num_12) 
	(string-append 
	(string-append "(_mm_mask_cmpeq_epi8_mask_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_adds_epu16_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 num_7) 
	(string-append 
	(string-append "(_mm256_adds_epu16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_mulhi_epi16_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 num_9 num_10 num_11) 
	(string-append 
	(string-append "(_mm_maskz_mulhi_epi16_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mul_epu32_dsl v0 v1 size_i_o lane_size num_4 prec_i num_6 prec_o num_8) 
	(string-append 
	(string-append "(_mm256_mul_epu32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_dpwssd_epi32_dsl vc_0 v1 v2 v3 v4 size_i_o lane_size num_7 num_8 num_9 num_10 num_11 num_12 num_13) 
	(string-append 
	(string-append "(_mm_maskz_dpwssd_epi32_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) lane_size)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) lane_size)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) lane_size)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) lane_size)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) lane_size)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) lane_size)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) lane_size)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) lane_size)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) lane_size)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) lane_size)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) lane_size)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) lane_size)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) lane_size)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) lane_size)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_13)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_cmpgt_epi8_mask_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_o num_8 vc_9 vc_10 prec_i num_12) 
	(string-append 
	(string-append "(_mm512_mask_cmpgt_epi8_mask_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_blend_epi32_dsl v0 v1 v2 size_i_o lane_size num_5 prec_i_o num_7 num_8) 
	(string-append 
	(string-append "(_mm256_mask_blend_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_srlv_epi64_dsl vc_0 v1 v2 size_i_o lane_size num_5 num_6 num_7 vc_8 prec_i_o num_10) 
	(string-append 
	(string-append "(_mm512_srlv_epi64_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_hsubs_epi16_dsl v0 v1 size_i_o lane_size num_4 num_5 num_6 prec_i_o num_8 num_9 num_10 num_11 num_12 num_13 num_14 num_15) 
	(string-append 
	(string-append "(_mm256_hsubs_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i_o)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i_o)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i_o)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (get-length num_15 (vector 0)) prec_i_o)) (string-append (hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_15)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_or_si512_dsl v0 v1 size_o lane_size num_4 prec_i_o num_6 num_7 num_8 num_9 num_10) 
	(string-append 
	(string-append "(_mm512_or_si512_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_broadcastmb_epi64_dsl v0 size_o lane_size num_3 prec_i num_5 prec_o num_7 num_8) 
	(string-append 
	(string-append "(_mm_broadcastmb_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_cvtusepi16_epi8_dsl vc_0 v1 v2 size_i_o lane_size num_5 prec_i_o num_7 num_8 num_9) 
	(string-append 
	(string-append "(_mm512_maskz_cvtusepi16_epi8_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_srli_epi64_dsl vc_0 vc_1 v2 v3 v4 size_i_o lane_size num_7 num_8 num_9 vc_10 num_11 prec_i_o num_13 num_14 num_15) 
	(string-append 
	(string-append "(_mm512_maskz_srli_epi64_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i_o)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i_o)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i_o)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (get-length num_15 (vector 0)) prec_i_o)) (string-append (hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_15)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_extract_epi8_dsl v0 v1 size_o lane_size num_4 num_5 num_6 prec_o num_8 num_9 prec_i vc_11 num_12 num_13 num_14) 
	(string-append 
	(string-append "(_mm_extract_epi8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? vc_11) (begin (define num_elem (/ (get-length vc_11 (vector 0)) prec_i)) (string-append (hydride-printer vc_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_cmpeq_epu8_mask_dsl v0 v1 size_i_o lane_size num_4 prec_o num_6 vc_7 vc_8 prec_i num_10) 
	(string-append 
	(string-append "(_mm_cmpeq_epu8_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? vc_7) (begin (define num_elem (/ (get-length vc_7 (vector 0)) prec_i)) (string-append (hydride-printer vc_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_srlv_epi32_dsl vc_0 vc_1 v2 v3 v4 size_i_o lane_size num_7 num_8 num_9 vc_10 prec_i_o num_12) 
	(string-append 
	(string-append "(_mm_maskz_srlv_epi32_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i_o)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i_o)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_max_epu32_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 num_7) 
	(string-append 
	(string-append "(_mm512_max_epu32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_dpwssds_epi32_dsl vc_0 v1 v2 v3 v4 size_i_o lane_size num_7 num_8 num_9 num_10 num_11 num_12 num_13) 
	(string-append 
	(string-append "(_mm_maskz_dpwssds_epi32_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) lane_size)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) lane_size)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) lane_size)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) lane_size)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) lane_size)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) lane_size)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) lane_size)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) lane_size)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) lane_size)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) lane_size)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) lane_size)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) lane_size)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) lane_size)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) lane_size)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_13)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_sll_epi64_dsl vc_0 vc_1 v2 v3 v4 size_i_o lane_size num_7 num_8 num_9 vc_10 num_11 prec_i_o num_13 num_14) 
	(string-append 
	(string-append "(_mm_maskz_sll_epi64_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i_o)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i_o)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i_o)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_movpi64_epi64_dsl v0 size_o lane_size num_3 prec_i_o num_5 num_6 num_7 num_8) 
	(string-append 
	(string-append "(_mm_movpi64_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i_o)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_packus_epi16_dsl v0 v1 v2 v3 size_i num_5 num_6 prec_i num_8 num_9 num_10 num_11 num_12 num_13 num_14) 
	(string-append 
	(string-append "(_mm256_mask_packus_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i) (begin (define num_elem (/ (get-length size_i (vector 0)) prec_i)) (string-append (hydride-printer size_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_fmadd_epi32_dsl v0 v1 v2 size_i_o lane_size num_5 prec_i_o num_7 num_8 num_9) 
	(string-append 
	(string-append "(_mm512_fmadd_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_add_epi32_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 num_9) 
	(string-append 
	(string-append "(_mm_mask_add_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mul_su32_dsl v0 v1 size_o lane_size num_4 prec_i num_6 prec_o num_8 num_9 num_10 num_11) 
	(string-append 
	(string-append "(_mm_mul_su32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_cmpge_epi64_mask_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_o num_8 vc_9 vc_10 prec_i num_12) 
	(string-append 
	(string-append "(_mm_mask_cmpge_epi64_mask_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_cmple_epu32_mask_dsl v0 v1 size_i_o lane_size num_4 prec_o num_6 vc_7 vc_8 prec_i num_10) 
	(string-append 
	(string-append "(_mm256_cmple_epu32_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? vc_7) (begin (define num_elem (/ (get-length vc_7 (vector 0)) prec_i)) (string-append (hydride-printer vc_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_test_epi32_mask_dsl v0 v1 size_i_o lane_size num_4 prec_o num_6 vc_7 vc_8 vc_9 prec_i num_11) 
	(string-append 
	(string-append "(_mm512_test_epi32_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? vc_7) (begin (define num_elem (/ (get-length vc_7 (vector 0)) prec_i)) (string-append (hydride-printer vc_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_m_packuswb_dsl v0 v1 size_i_o lane_size num_4 num_5 num_6 prec_o num_8 num_9 num_10 prec_i num_12 num_13 num_14) 
	(string-append 
	(string-append "(_m_packuswb_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_hsub_pi32_dsl v0 v1 size_o lane_size num_4 prec_i_o num_6 num_7 num_8 num_9 num_10 num_11 num_12 num_13) 
	(string-append 
	(string-append "(_mm_hsub_pi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i_o)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i_o)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_13)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_subs_epu8_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 num_9) 
	(string-append 
	(string-append "(_mm_maskz_subs_epu8_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_subs_pi8_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 num_7) 
	(string-append 
	(string-append "(_mm_subs_pi8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_srli_epi64_dsl vc_0 v1 v2 v3 v4 size_i_o lane_size num_7 num_8 num_9 vc_10 num_11 prec_i_o num_13 num_14 num_15) 
	(string-append 
	(string-append "(_mm512_mask_srli_epi64_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i_o)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i_o)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i_o)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (get-length num_15 (vector 0)) prec_i_o)) (string-append (hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_15)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_cmpgt_epu64_mask_dsl v0 v1 size_i_o lane_size num_4 prec_o num_6 vc_7 vc_8 prec_i num_10) 
	(string-append 
	(string-append "(_mm256_cmpgt_epu64_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? vc_7) (begin (define num_elem (/ (get-length vc_7 (vector 0)) prec_i)) (string-append (hydride-printer vc_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_cmpeq_epi32_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 vc_7 vc_8 num_9) 
	(string-append 
	(string-append "(_mm_cmpeq_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? vc_7) (begin (define num_elem (/ (get-length vc_7 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_sll_epi64_dsl vc_0 v1 v2 v3 v4 size_i_o lane_size num_7 num_8 num_9 vc_10 num_11 prec_i_o num_13 num_14) 
	(string-append 
	(string-append "(_mm256_mask_sll_epi64_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i_o)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i_o)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i_o)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_packs_epi16_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i num_8 num_9 num_10 num_11 num_12) 
	(string-append 
	(string-append "(_mm_maskz_packs_epi16_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_cvtepi16_epi64_dsl v0 v1 v2 size_i_o lane_size num_5 num_6 num_7 prec_i_o num_9) 
	(string-append 
	(string-append "(_mm256_mask_cvtepi16_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_cvtsi64_si128_dsl v0 size_o lane_size num_3 prec_i_o num_5 num_6 num_7 num_8) 
	(string-append 
	(string-append "(_mm_cvtsi64_si128_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i_o)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_rorv_epi32_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 vc_7 vc_8 num_9) 
	(string-append 
	(string-append "(_mm_rorv_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? vc_7) (begin (define num_elem (/ (get-length vc_7 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_sra_epi64_dsl v0 v1 size_i_o lane_size num_4 num_5 num_6 vc_7 num_8 prec_i_o vc_10 vc_11 num_12 num_13) 
	(string-append 
	(string-append "(_mm512_sra_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? vc_7) (begin (define num_elem (/ (get-length vc_7 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? vc_11) (begin (define num_elem (/ (get-length vc_11 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i_o)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i_o)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_13)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_cvtsepi16_epi8_dsl v0 v1 v2 size_i_o lane_size num_5 prec_i_o num_7 num_8 num_9) 
	(string-append 
	(string-append "(_mm_mask_cvtsepi16_epi8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_dpbusds_epi32_dsl vc_0 v1 v2 v3 v4 size_i_o lane_size num_7 num_8 num_9 num_10 num_11 num_12 num_13 num_14) 
	(string-append 
	(string-append "(_mm_maskz_dpbusds_epi32_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) lane_size)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) lane_size)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) lane_size)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) lane_size)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) lane_size)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) lane_size)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) lane_size)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) lane_size)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) lane_size)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) lane_size)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) lane_size)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) lane_size)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) lane_size)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) lane_size)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) lane_size)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_min_epu64_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 num_7) 
	(string-append 
	(string-append "(_mm512_min_epu64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_max_epi32_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 num_9) 
	(string-append 
	(string-append "(_mm_mask_max_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_packs_epi16_dsl v0 v1 v2 v3 size_i num_5 num_6 prec_i num_8 num_9 num_10 num_11 num_12 num_13 num_14) 
	(string-append 
	(string-append "(_mm256_mask_packs_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i) (begin (define num_elem (/ (get-length size_i (vector 0)) prec_i)) (string-append (hydride-printer size_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_srl_epi64_dsl vc_0 v1 v2 v3 v4 size_i_o lane_size num_7 num_8 num_9 vc_10 num_11 prec_i_o num_13 num_14) 
	(string-append 
	(string-append "(_mm256_mask_srl_epi64_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i_o)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i_o)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i_o)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mulhrs_epi16_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 num_7 vc_8 vc_9 num_10 num_11) 
	(string-append 
	(string-append "(_mm256_mulhrs_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_cvtm64_si64_dsl v0 size_o lane_size num_3 prec_i_o num_5 num_6 num_7 num_8) 
	(string-append 
	(string-append "(_mm_cvtm64_si64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i_o)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_extract_epi16_dsl v0 v1 size_o lane_size num_4 num_5 num_6 prec_o num_8 num_9 prec_i vc_11 num_12 num_13 num_14 num_15) 
	(string-append 
	(string-append "(_mm_extract_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? vc_11) (begin (define num_elem (/ (get-length vc_11 (vector 0)) prec_i)) (string-append (hydride-printer vc_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (get-length num_15 (vector 0)) prec_i)) (string-append (hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_15)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_cvtepu8_epi16_dsl v0 size_i_o lane_size num_3 prec_i num_5 prec_o num_7) 
	(string-append 
	(string-append "(_mm256_cvtepu8_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_srlv_epi64_dsl vc_0 v1 v2 v3 v4 size_i_o lane_size num_7 num_8 num_9 vc_10 prec_i_o num_12) 
	(string-append 
	(string-append "(_mm256_mask_srlv_epi64_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i_o)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i_o)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_hsub_pi16_dsl v0 v1 size_i_o lane_size num_4 num_5 num_6 prec_i_o num_8 num_9 num_10 num_11 num_12 num_13 num_14) 
	(string-append 
	(string-append "(_mm_hsub_pi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i_o)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i_o)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i_o)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_rorv_epi64_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 vc_9 vc_10 num_11) 
	(string-append 
	(string-append "(_mm512_maskz_rorv_epi64_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_test_epi64_mask_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_o num_8 vc_9 vc_10 vc_11 prec_i num_13) 
	(string-append 
	(string-append "(_mm256_mask_test_epi64_mask_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? vc_11) (begin (define num_elem (/ (get-length vc_11 (vector 0)) prec_i)) (string-append (hydride-printer vc_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_11)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_13)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_avg_epu8_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 vc_9 vc_10 num_11) 
	(string-append 
	(string-append "(_mm_maskz_avg_epu8_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_ror_epi64_dsl v0 v1 size_i_o lane_size num_4 num_5 num_6 prec_i_o vc_8 vc_9 num_10 num_11) 
	(string-append 
	(string-append "(_mm512_ror_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_packus_epi16_dsl v0 v1 v2 v3 size_i num_5 num_6 prec_i num_8 num_9 num_10 num_11 num_12) 
	(string-append 
	(string-append "(_mm512_mask_packus_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i) (begin (define num_elem (/ (get-length size_i (vector 0)) prec_i)) (string-append (hydride-printer size_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_sub_epi32_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 num_9) 
	(string-append 
	(string-append "(_mm_mask_sub_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_packs_epi32_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i num_8 num_9 num_10 num_11 num_12) 
	(string-append 
	(string-append "(_mm_mask_packs_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_cmplt_epu64_mask_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_o num_8 vc_9 vc_10 prec_i num_12) 
	(string-append 
	(string-append "(_mm256_mask_cmplt_epu64_mask_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_maskz_packs_epi32_dsl vc_0 v1 v2 v3 size_i prec_i num_6 num_7 num_8 num_9 num_10 num_11 num_12 num_13 num_14) 
	(string-append 
	(string-append "(_mm256_maskz_packs_epi32_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i) (begin (define num_elem (/ (get-length size_i (vector 0)) prec_i)) (string-append (hydride-printer size_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_m_psllwi_dsl vc_0 v1 v2 size_i_o lane_size num_5 num_6 num_7 vc_8 num_9 prec_i_o num_11 num_12 num_13) 
	(string-append 
	(string-append "(_m_psllwi_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i_o)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i_o)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_13)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_max_epi64_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 num_7) 
	(string-append 
	(string-append "(_mm256_max_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_sub_epi8_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 num_7) 
	(string-append 
	(string-append "(_mm_sub_epi8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_cvtsi32_si64_dsl v0 size_o lane_size num_3 prec_i_o num_5 num_6 num_7 num_8) 
	(string-append 
	(string-append "(_mm_cvtsi32_si64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i_o)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_adds_epi16_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 num_9) 
	(string-append 
	(string-append "(_mm_maskz_adds_epi16_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_unpackhi_pi32_dsl v0 v1 size_o lane_size num_4 prec_i_o num_6 num_7 num_8 num_9 num_10 num_11) 
	(string-append 
	(string-append "(_mm_unpackhi_pi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_cmple_epu32_mask_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_o num_8 vc_9 vc_10 prec_i num_12) 
	(string-append 
	(string-append "(_mm256_mask_cmple_epu32_mask_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_andnot_epi32_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 num_7) 
	(string-append 
	(string-append "(_mm512_andnot_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_dpwssd_epi32_dsl v0 v1 v2 size_i_o lane_size num_5 prec_i num_7 num_8) 
	(string-append 
	(string-append "(_mm512_dpwssd_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_packs_epi16_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i num_8 num_9 num_10 num_11 num_12) 
	(string-append 
	(string-append "(_mm_mask_packs_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_mulhi_epu32_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 vc_9 num_10 num_11) 
	(string-append 
	(string-append "(_mm512_mask_mulhi_epu32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_abs_epi8_dsl v0 size_i_o lane_size num_3 prec_i_o num_5 num_6) 
	(string-append 
	(string-append "(_mm_abs_epi8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i_o)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_packus_epi32_dsl v0 v1 v2 v3 size_i num_5 num_6 prec_i num_8 num_9 num_10 num_11 num_12) 
	(string-append 
	(string-append "(_mm512_mask_packus_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i) (begin (define num_elem (/ (get-length size_i (vector 0)) prec_i)) (string-append (hydride-printer size_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_packs_epi16_dsl v0 v1 v2 v3 size_i num_5 num_6 prec_i num_8 num_9 num_10 num_11 num_12) 
	(string-append 
	(string-append "(_mm512_mask_packs_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i) (begin (define num_elem (/ (get-length size_i (vector 0)) prec_i)) (string-append (hydride-printer size_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_sll_epi64_dsl vc_0 v1 v2 size_i_o lane_size num_5 num_6 num_7 vc_8 num_9 prec_i_o num_11 num_12) 
	(string-append 
	(string-append "(_mm256_sll_epi64_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i_o)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_cvtepi8_epi16_dsl v0 size_i_o lane_size num_3 prec_i num_5 prec_o num_7) 
	(string-append 
	(string-append "(_mm256_cvtepi8_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_testn_epi16_mask_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_o num_8 vc_9 vc_10 vc_11 prec_i num_13) 
	(string-append 
	(string-append "(_mm256_mask_testn_epi16_mask_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? vc_11) (begin (define num_elem (/ (get-length vc_11 (vector 0)) prec_i)) (string-append (hydride-printer vc_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_11)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_13)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_cmpgt_epi32_mask_dsl v0 v1 size_i_o lane_size num_4 prec_o num_6 vc_7 vc_8 prec_i num_10) 
	(string-append 
	(string-append "(_mm512_cmpgt_epi32_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? vc_7) (begin (define num_elem (/ (get-length vc_7 (vector 0)) prec_i)) (string-append (hydride-printer vc_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mul_epi32_dsl v0 v1 size_i_o lane_size num_4 prec_i num_6 prec_o num_8) 
	(string-append 
	(string-append "(_mm512_mul_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_cmple_epi32_mask_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_o num_8 vc_9 vc_10 prec_i num_12) 
	(string-append 
	(string-append "(_mm256_mask_cmple_epi32_mask_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_dpbusd_epi32_dsl vc_0 v1 v2 v3 v4 size_i_o lane_size num_7 num_8 num_9 num_10 num_11 num_12 num_13 num_14) 
	(string-append 
	(string-append "(_mm_maskz_dpbusd_epi32_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) lane_size)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) lane_size)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) lane_size)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) lane_size)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) lane_size)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) lane_size)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) lane_size)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) lane_size)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) lane_size)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) lane_size)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) lane_size)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) lane_size)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) lane_size)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) lane_size)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) lane_size)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_movm_epi8_dsl vc_0 vc_1 v2 size_i_o lane_size num_5 prec_i_o num_7 num_8) 
	(string-append 
	(string-append "(_mm_movm_epi8_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_sub_si64_dsl v0 v1 size_o lane_size num_4 prec_i_o num_6 num_7 num_8 num_9 num_10) 
	(string-append 
	(string-append "(_mm_sub_si64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_srai_epi16_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 num_7 num_8 vc_9 num_10 prec_i_o vc_12 vc_13 num_14 num_15 num_16) 
	(string-append 
	(string-append "(_mm512_maskz_srai_epi16_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? vc_12) (begin (define num_elem (/ (get-length vc_12 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_12)) " " " " (if (lit? vc_13) (begin (define num_elem (/ (get-length vc_13 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i_o)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (get-length num_15 (vector 0)) prec_i_o)) (string-append (hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (get-length num_16 (vector 0)) prec_i_o)) (string-append (hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_16)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_and_epi64_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 num_9) 
	(string-append 
	(string-append "(_mm512_maskz_and_epi64_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_abs_epi16_dsl v0 v1 v2 size_i_o lane_size num_5 prec_i_o num_7 num_8) 
	(string-append 
	(string-append "(_mm256_mask_abs_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_rolv_epi32_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 vc_9 vc_10 num_11) 
	(string-append 
	(string-append "(_mm256_mask_rolv_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_movepi16_mask_dsl vc_0 vc_1 v2 size_o lane_size num_5 prec_o num_7 num_8 num_9) 
	(string-append 
	(string-append "(_mm256_movepi16_mask_dsl " (if (lit? vc_0) (hydride-printer vc_0) (hydride-printer vc_0)) " " " " (if (lit? vc_1) (hydride-printer vc_1) (hydride-printer vc_1)) " " " " (if (lit? v2) (hydride-printer v2) (hydride-printer v2)) " " " " (if (lit? size_o) (hydride-printer size_o) (hydride-printer size_o)) " " " " (if (lit? lane_size) (hydride-printer lane_size) (hydride-printer lane_size)) " " " " (if (lit? num_5) (hydride-printer num_5) (hydride-printer num_5)) " " " " (if (lit? prec_o) (hydride-printer prec_o) (hydride-printer prec_o)) " " " " (if (lit? num_7) (hydride-printer num_7) (hydride-printer num_7)) " " " " (if (lit? num_8) (hydride-printer num_8) (hydride-printer num_8)) " " " " (if (lit? num_9) (hydride-printer num_9) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_subr_epi32_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 num_9) 
	(string-append 
	(string-append "(_mm512_mask_subr_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_dpwssd_epi32_dsl v0 v1 v2 v3 size_i_o lane_size num_6 num_7 num_8 num_9 num_10 num_11 num_12) 
	(string-append 
	(string-append "(_mm_mask_dpwssd_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) lane_size)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) lane_size)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) lane_size)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) lane_size)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) lane_size)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) lane_size)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) lane_size)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) lane_size)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) lane_size)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) lane_size)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) lane_size)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) lane_size)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) lane_size)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_movemask_epi8_dsl v0 size_o lane_size num_3 prec_o num_5 num_6 num_7 num_8) 
	(string-append 
	(string-append "(_mm_movemask_epi8_dsl " (if (lit? v0) (hydride-printer v0) (hydride-printer v0)) " " " " (if (lit? size_o) (hydride-printer size_o) (hydride-printer size_o)) " " " " (if (lit? lane_size) (hydride-printer lane_size) (hydride-printer lane_size)) " " " " (if (lit? num_3) (hydride-printer num_3) (hydride-printer num_3)) " " " " (if (lit? prec_o) (hydride-printer prec_o) (hydride-printer prec_o)) " " " " (if (lit? num_5) (hydride-printer num_5) (hydride-printer num_5)) " " " " (if (lit? num_6) (hydride-printer num_6) (hydride-printer num_6)) " " " " (if (lit? num_7) (hydride-printer num_7) (hydride-printer num_7)) " " " " (if (lit? num_8) (hydride-printer num_8) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_cmpge_epu32_mask_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_o num_8 vc_9 vc_10 prec_i num_12) 
	(string-append 
	(string-append "(_mm512_mask_cmpge_epu32_mask_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_cvtsi64x_si128_dsl v0 size_o lane_size num_3 prec_i_o num_5 num_6 num_7 num_8) 
	(string-append 
	(string-append "(_mm_cvtsi64x_si128_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i_o)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_sllv_epi64_dsl vc_0 v1 v2 size_i_o lane_size num_5 num_6 num_7 vc_8 prec_i_o num_10) 
	(string-append 
	(string-append "(_mm_sllv_epi64_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_extract_pi16_dsl v0 v1 size_o lane_size num_4 num_5 num_6 prec_o num_8 num_9 prec_i vc_11 num_12 num_13 num_14 num_15) 
	(string-append 
	(string-append "(_mm_extract_pi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? vc_11) (begin (define num_elem (/ (get-length vc_11 (vector 0)) prec_i)) (string-append (hydride-printer vc_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (get-length num_15 (vector 0)) prec_i)) (string-append (hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_15)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_srl_epi16_dsl vc_0 vc_1 v2 v3 v4 size_i_o lane_size num_7 num_8 num_9 vc_10 num_11 num_12 prec_i_o num_14 num_15 num_16) 
	(string-append 
	(string-append "(_mm512_maskz_srl_epi16_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i_o)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i_o)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i_o)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (get-length num_15 (vector 0)) prec_i_o)) (string-append (hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (get-length num_16 (vector 0)) prec_i_o)) (string-append (hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_16)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_dpwssds_epi32_dsl v0 v1 v2 size_i_o lane_size num_5 prec_i num_7 num_8) 
	(string-append 
	(string-append "(_mm_dpwssds_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_maskz_or_epi32_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 num_9) 
	(string-append 
	(string-append "(_mm256_maskz_or_epi32_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_packus_epi32_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i num_8 num_9 num_10 num_11 num_12) 
	(string-append 
	(string-append "(_mm_mask_packus_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_rolv_epi32_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 vc_7 vc_8 num_9) 
	(string-append 
	(string-append "(_mm256_rolv_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? vc_7) (begin (define num_elem (/ (get-length vc_7 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_blendv_epi8_dsl v0 v1 v2 size_i_o lane_size num_5 prec_i_o num_7 num_8) 
	(string-append 
	(string-append "(_mm_blendv_epi8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_setr_m128i_dsl v0 v1 size_o lane_size num_4 prec_i_o num_6 num_7 num_8 num_9 num_10 num_11) 
	(string-append 
	(string-append "(_mm256_setr_m128i_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_cmpneq_epi16_mask_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_o num_8 vc_9 vc_10 prec_i num_12) 
	(string-append 
	(string-append "(_mm256_mask_cmpneq_epi16_mask_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_testn_epi32_mask_dsl v0 v1 size_i_o lane_size num_4 prec_o num_6 vc_7 vc_8 vc_9 prec_i num_11) 
	(string-append 
	(string-append "(_mm256_testn_epi32_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? vc_7) (begin (define num_elem (/ (get-length vc_7 (vector 0)) prec_i)) (string-append (hydride-printer vc_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_blend_epi16_dsl v0 v1 v2 size_i_o lane_size num_5 prec_i_o num_7 num_8 num_9) 
	(string-append 
	(string-append "(_mm256_blend_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_maskz_rol_epi64_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 num_7 num_8 prec_i_o vc_10 vc_11 num_12 num_13) 
	(string-append 
	(string-append "(_mm256_maskz_rol_epi64_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? vc_11) (begin (define num_elem (/ (get-length vc_11 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i_o)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i_o)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_13)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_subs_epi8_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 num_9) 
	(string-append 
	(string-append "(_mm256_mask_subs_epi8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_or_epi32_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 num_7) 
	(string-append 
	(string-append "(_mm256_or_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_m_packsswb_dsl v0 v1 size_i_o lane_size num_4 num_5 num_6 prec_o num_8 num_9 num_10 prec_i num_12 num_13 num_14) 
	(string-append 
	(string-append "(_m_packsswb_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_broadcastd_epi32_dsl v0 size_o lane_size num_3 prec_i_o num_5 num_6 num_7) 
	(string-append 
	(string-append "(_mm512_broadcastd_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i_o)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_and_si512_dsl v0 v1 size_o lane_size num_4 prec_i_o num_6 num_7 num_8 num_9 num_10) 
	(string-append 
	(string-append "(_mm512_and_si512_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_maskz_slli_epi16_dsl vc_0 vc_1 v2 v3 v4 size_i_o lane_size num_7 num_8 num_9 vc_10 num_11 prec_i_o num_13 num_14 num_15) 
	(string-append 
	(string-append "(_mm256_maskz_slli_epi16_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (get-length vc_1 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i_o)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i_o)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i_o)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (get-length num_15 (vector 0)) prec_i_o)) (string-append (hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_15)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_cmplt_epi64_mask_dsl v0 v1 size_i_o lane_size num_4 prec_o num_6 vc_7 vc_8 prec_i num_10) 
	(string-append 
	(string-append "(_mm512_cmplt_epi64_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? vc_7) (begin (define num_elem (/ (get-length vc_7 (vector 0)) prec_i)) (string-append (hydride-printer vc_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_packus_epi32_dsl v0 v1 v2 v3 size_i num_5 num_6 prec_i num_8 num_9 num_10 num_11 num_12 num_13 num_14) 
	(string-append 
	(string-append "(_mm256_mask_packus_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i) (begin (define num_elem (/ (get-length size_i (vector 0)) prec_i)) (string-append (hydride-printer size_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_cmpneq_epi32_mask_dsl v0 v1 size_i_o lane_size num_4 prec_o num_6 vc_7 vc_8 prec_i num_10) 
	(string-append 
	(string-append "(_mm_cmpneq_epi32_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? vc_7) (begin (define num_elem (/ (get-length vc_7 (vector 0)) prec_i)) (string-append (hydride-printer vc_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_packs_epi32_dsl v0 v1 v2 v3 size_i num_5 num_6 prec_i num_8 num_9 num_10 num_11 num_12 num_13 num_14) 
	(string-append 
	(string-append "(_mm256_mask_packs_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i) (begin (define num_elem (/ (get-length size_i (vector 0)) prec_i)) (string-append (hydride-printer size_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_ror_epi32_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 num_7 num_8 prec_i_o vc_10 vc_11 num_12 num_13) 
	(string-append 
	(string-append "(_mm_maskz_ror_epi32_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? vc_11) (begin (define num_elem (/ (get-length vc_11 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i_o)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i_o)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_13)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_packs_epi32_dsl vc_0 v1 v2 v3 size_i prec_i num_6 num_7 num_8 num_9 num_10 num_11 num_12) 
	(string-append 
	(string-append "(_mm512_maskz_packs_epi32_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i) (begin (define num_elem (/ (get-length size_i (vector 0)) prec_i)) (string-append (hydride-printer size_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_cmpge_epu64_mask_dsl v0 v1 size_i_o lane_size num_4 prec_o num_6 vc_7 vc_8 prec_i num_10) 
	(string-append 
	(string-append "(_mm512_cmpge_epu64_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? vc_7) (begin (define num_elem (/ (get-length vc_7 (vector 0)) prec_i)) (string-append (hydride-printer vc_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_dpbusds_epi32_dsl v0 v1 v2 v3 size_i_o lane_size num_6 num_7 num_8 num_9 num_10 num_11 num_12 num_13) 
	(string-append 
	(string-append "(_mm256_mask_dpbusds_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) lane_size)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) lane_size)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) lane_size)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) lane_size)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) lane_size)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) lane_size)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) lane_size)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) lane_size)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) lane_size)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) lane_size)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) lane_size)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) lane_size)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) lane_size)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) lane_size)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_13)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_cmplt_epi16_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 vc_7 vc_8 num_9) 
	(string-append 
	(string-append "(_mm_cmplt_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? vc_7) (begin (define num_elem (/ (get-length vc_7 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_cvtusepi32_epi8_dsl v0 size_i_o lane_size num_3 prec_o num_5 prec_i num_7) 
	(string-append 
	(string-append "(_mm512_cvtusepi32_epi8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_sllv_epi64_dsl vc_0 v1 v2 v3 v4 size_i_o lane_size num_7 num_8 num_9 vc_10 prec_i_o num_12) 
	(string-append 
	(string-append "(_mm_mask_sllv_epi64_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (get-length v4 (vector 0)) prec_i_o)) (string-append (hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i_o)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_cmpgt_epi64_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 vc_7 vc_8 num_9) 
	(string-append 
	(string-append "(_mm256_cmpgt_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? vc_7) (begin (define num_elem (/ (get-length vc_7 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_cmpge_epi32_mask_dsl v0 v1 size_i_o lane_size num_4 prec_o num_6 vc_7 vc_8 prec_i num_10) 
	(string-append 
	(string-append "(_mm_cmpge_epi32_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? vc_7) (begin (define num_elem (/ (get-length vc_7 (vector 0)) prec_i)) (string-append (hydride-printer vc_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_dpwssds_epi32_dsl v0 v1 v2 v3 size_i_o lane_size num_6 num_7 num_8 num_9 num_10 num_11 num_12) 
	(string-append 
	(string-append "(_mm_mask_dpwssds_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) lane_size)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) lane_size)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) lane_size)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) lane_size)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) lane_size)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) lane_size)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) lane_size)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) lane_size)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) lane_size)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) lane_size)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) lane_size)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) lane_size)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) lane_size)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s lane_size) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_srl_epi64_dsl vc_0 v1 v2 size_i_o lane_size num_5 num_6 num_7 vc_8 num_9 prec_i_o num_11 num_12) 
	(string-append 
	(string-append "(_mm256_srl_epi64_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i_o)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_maskz_packus_epi16_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i num_8 num_9 num_10 num_11 num_12) 
	(string-append 
	(string-append "(_mm_maskz_packus_epi16_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_avg_pu8_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 vc_7 vc_8 num_9) 
	(string-append 
	(string-append "(_mm_avg_pu8_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? vc_7) (begin (define num_elem (/ (get-length vc_7 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_andnot_si512_dsl v0 v1 size_o lane_size num_4 prec_i_o num_6 num_7 num_8 num_9 num_10) 
	(string-append 
	(string-append "(_mm512_andnot_si512_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_cmple_epi16_mask_dsl v0 v1 size_i_o lane_size num_4 prec_o num_6 vc_7 vc_8 prec_i num_10) 
	(string-append 
	(string-append "(_mm512_cmple_epi16_mask_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? vc_7) (begin (define num_elem (/ (get-length vc_7 (vector 0)) prec_i)) (string-append (hydride-printer vc_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_cmpgt_epu32_mask_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_o num_8 vc_9 vc_10 prec_i num_12) 
	(string-append 
	(string-append "(_mm256_mask_cmpgt_epu32_mask_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_mulhrs_epi16_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 num_9 vc_10 vc_11 num_12 num_13) 
	(string-append 
	(string-append "(_mm512_maskz_mulhrs_epi16_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? vc_11) (begin (define num_elem (/ (get-length vc_11 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i_o)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i_o)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_13)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_set_m128i_dsl v0 v1 size_o lane_size num_4 prec_i_o num_6 num_7 num_8 num_9 num_10 num_11) 
	(string-append 
	(string-append "(_mm256_set_m128i_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_packs_epi16_dsl v0 v1 size_i_o lane_size num_4 num_5 num_6 prec_o num_8 num_9 num_10 num_11 prec_i num_13 num_14 num_15) 
	(string-append 
	(string-append "(_mm256_packs_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (get-length num_15 (vector 0)) prec_i)) (string-append (hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_15)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mask_packus_epi16_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i num_8 num_9 num_10 num_11 num_12) 
	(string-append 
	(string-append "(_mm_mask_packus_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_fmadd_epi32_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 num_9 num_10) 
	(string-append 
	(string-append "(_mm512_mask_fmadd_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_dpbusd_epi32_dsl v0 v1 v2 size_i_o lane_size num_5 prec_i num_7 num_8 num_9) 
	(string-append 
	(string-append "(_mm512_dpbusd_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_mul_epi32_dsl v0 v1 v2 v3 size_i_o lane_size num_6 num_7 num_8 prec_i_o num_10) 
	(string-append 
	(string-append "(_mm256_mask_mul_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_unpacklo_pi32_dsl v0 v1 size_o lane_size num_4 prec_i_o num_6 num_7 num_8 num_9 num_10 num_11) 
	(string-append 
	(string-append "(_mm_unpacklo_pi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_max_epu16_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 num_9) 
	(string-append 
	(string-append "(_mm512_mask_max_epu16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_andnot_epi64_dsl v0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 num_9) 
	(string-append 
	(string-append "(_mm512_mask_andnot_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_adds_epi16_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 num_7) 
	(string-append 
	(string-append "(_mm256_adds_epi16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_maskz_mullo_epi32_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_i_o num_8 num_9 num_10 num_11) 
	(string-append 
	(string-append "(_mm256_maskz_mullo_epi32_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_broadcast_i64x4_dsl vc_0 v1 v2 size_i_o lane_size num_5 prec_i_o num_7 num_8 num_9) 
	(string-append 
	(string-append "(_mm512_maskz_broadcast_i64x4_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_dpbusds_epi32_dsl v0 v1 v2 size_i_o lane_size num_5 prec_i num_7 num_8 num_9) 
	(string-append 
	(string-append "(_mm_dpbusds_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_sign_pi8_dsl vc_0 v1 v2 size_i_o lane_size num_5 num_6 num_7 vc_8 prec_i_o vc_10 num_11 num_12) 
	(string-append 
	(string-append "(_mm_sign_pi8_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i_o)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_cvtsi32_si128_dsl v0 size_o lane_size num_3 prec_i_o num_5 num_6 num_7 num_8) 
	(string-append 
	(string-append "(_mm_cvtsi32_si128_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_3) (begin (define num_elem (/ (get-length num_3 (vector 0)) prec_i_o)) (string-append (hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_3)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_mulhi_epu16_dsl v0 v1 size_i_o lane_size num_4 prec_i_o num_6 num_7 num_8 num_9) 
	(string-append 
	(string-append "(_mm_mulhi_epu16_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_add_si64_dsl v0 v1 size_o lane_size num_4 prec_i_o num_6 num_7 num_8 num_9 num_10) 
	(string-append 
	(string-append "(_mm_add_si64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_mask_mov_epi32_dsl v0 v1 v2 size_i_o lane_size num_5 prec_i_o num_7 num_8) 
	(string-append 
	(string-append "(_mm256_mask_mov_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_extract_epi64_dsl v0 v1 size_i_o lane_size num_4 num_5 num_6 prec_o num_8 num_9 prec_i vc_11 num_12 num_13 num_14) 
	(string-append 
	(string-append "(_mm_extract_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? vc_11) (begin (define num_elem (/ (get-length vc_11 (vector 0)) prec_i)) (string-append (hydride-printer vc_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_packs_epi32_dsl v0 v1 v2 v3 size_i num_5 num_6 prec_i num_8 num_9 num_10 num_11 num_12) 
	(string-append 
	(string-append "(_mm512_mask_packs_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i) (begin (define num_elem (/ (get-length size_i (vector 0)) prec_i)) (string-append (hydride-printer size_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_maskz_set1_epi16_dsl vc_0 v1 v2 size_i_o lane_size num_5 prec_i_o num_7 num_8 num_9) 
	(string-append 
	(string-append "(_mm256_maskz_set1_epi16_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_sra_pi32_dsl v0 v1 size_i_o lane_size num_4 num_5 num_6 vc_7 num_8 num_9 prec_i_o vc_11 vc_12 num_13 num_14 num_15) 
	(string-append 
	(string-append "(_mm_sra_pi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? vc_7) (begin (define num_elem (/ (get-length vc_7 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i_o)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? vc_11) (begin (define num_elem (/ (get-length vc_11 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_11)) " " " " (if (lit? vc_12) (begin (define num_elem (/ (get-length vc_12 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i_o)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i_o)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (get-length num_15 (vector 0)) prec_i_o)) (string-append (hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_15)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_packus_epi16_dsl vc_0 v1 v2 v3 size_i prec_i num_6 num_7 num_8 num_9 num_10 num_11 num_12) 
	(string-append 
	(string-append "(_mm512_maskz_packus_epi16_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i) (begin (define num_elem (/ (get-length size_i (vector 0)) prec_i)) (string-append (hydride-printer size_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_mask_cmplt_epi8_mask_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 prec_o num_8 vc_9 vc_10 prec_i num_12) 
	(string-append 
	(string-append "(_mm512_mask_cmplt_epi8_mask_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? vc_10) (begin (define num_elem (/ (get-length vc_10 (vector 0)) prec_i)) (string-append (hydride-printer vc_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_10)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_m_pextrw_dsl v0 v1 size_o lane_size num_4 num_5 num_6 prec_o num_8 num_9 prec_i vc_11 num_12 num_13 num_14 num_15) 
	(string-append 
	(string-append "(_m_pextrw_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_o) (begin (define num_elem (/ (get-length size_o (vector 0)) prec_i)) (string-append (hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? vc_11) (begin (define num_elem (/ (get-length vc_11 (vector 0)) prec_i)) (string-append (hydride-printer vc_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer vc_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (get-length num_12 (vector 0)) prec_i)) (string-append (hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (get-length num_15 (vector 0)) prec_i)) (string-append (hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_15)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm512_maskz_mul_epu32_dsl vc_0 v1 v2 v3 size_i_o lane_size num_6 num_7 num_8 prec_i_o num_10) 
	(string-append 
	(string-append "(_mm512_maskz_mul_epu32_dsl " (if (lit? vc_0) (begin (define num_elem (/ (get-length vc_0 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (get-length v2 (vector 0)) prec_i_o)) (string-append (hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (get-length v3 (vector 0)) prec_i_o)) (string-append (hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (get-length num_7 (vector 0)) prec_i_o)) (string-append (hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i_o)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm_rol_epi64_dsl v0 v1 size_i_o lane_size num_4 num_5 num_6 prec_i_o vc_8 vc_9 num_10 num_11) 
	(string-append 
	(string-append "(_mm_rol_epi64_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i_o)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i_o)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i_o)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i_o)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i_o)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i_o)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer prec_i_o)) " " " " (if (lit? vc_8) (begin (define num_elem (/ (get-length vc_8 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_8)) " " " " (if (lit? vc_9) (begin (define num_elem (/ (get-length vc_9 (vector 0)) prec_i_o)) (string-append (hydride-printer vc_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer vc_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i_o)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i_o)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
[(_mm256_packus_epi32_dsl v0 v1 size_i_o lane_size num_4 num_5 num_6 prec_o num_8 num_9 num_10 num_11 prec_i num_13 num_14 num_15) 
	(string-append 
	(string-append "(_mm256_packus_epi32_dsl " (if (lit? v0) (begin (define num_elem (/ (get-length v0 (vector 0)) prec_i)) (string-append (hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (get-length v1 (vector 0)) prec_i)) (string-append (hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (get-length size_i_o (vector 0)) prec_i)) (string-append (hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer size_i_o)) " " " " (if (lit? lane_size) (begin (define num_elem (/ (get-length lane_size (vector 0)) prec_i)) (string-append (hydride-printer lane_size) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer lane_size)) " " " " (if (lit? num_4) (begin (define num_elem (/ (get-length num_4 (vector 0)) prec_i)) (string-append (hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (get-length num_5 (vector 0)) prec_i)) (string-append (hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (get-length num_6 (vector 0)) prec_i)) (string-append (hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_6)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (get-length prec_o (vector 0)) prec_i)) (string-append (hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (get-length num_8 (vector 0)) prec_i)) (string-append (hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (get-length num_9 (vector 0)) prec_i)) (string-append (hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (get-length num_10 (vector 0)) prec_i)) (string-append (hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (get-length num_11 (vector 0)) prec_i)) (string-append (hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_11)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (get-length prec_i (vector 0)) prec_i)) (string-append (hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer prec_i)) " " " " (if (lit? num_13) (begin (define num_elem (/ (get-length num_13 (vector 0)) prec_i)) (string-append (hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (get-length num_14 (vector 0)) prec_i)) (string-append (hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (get-length num_15 (vector 0)) prec_i)) (string-append (hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hydride-printer num_15)) " " " " ")")
	(string-append ";" "<" (~s (/ (get-length prog (vector 0)) (get-prec prog (vector 0))) ) " x " "i" (~s (get-prec prog (vector 0))) ">") "\n")]
	[v (~s v)]
 )
)

;; ================================================================================
