#lang rosette
(require rosette/lib/synthax)
(require rosette/lib/angelic)
(require racket/pretty)
(require rosette/lib/destruct)

(require hydride/utils/bvops)
(require hydride/utils/misc)

(require hydride/ir/hydride/definition)


(require hydride/ir/hvx/definition)
(require hydride/ir/hvx/length)
(require hydride/ir/hvx/prec)


(provide (all-defined-out))


;; ================================================================================
;;                                DSL Custom Printer
;; ================================================================================
(define (hvx:hydride-printer  prog)
 (destruct prog
	[(dim-x id) (string-append "\n"  "(dim-x " (~s id) ")")]
	[(dim-y id) (string-append "\n" "(dim-y " (~s id) ")")]
	[(idx-i id) (string-append "\n" "(idx-i " (~s id) ")")]
	[(idx-j id) (string-append "\n" "(idx-j " (~s id) ")")]
	[(reg id) (string-append  "\n" "(reg " (~s  (bitvector->natural id)) ")")]
	[(lit v) (string-append   "(lit " (~s v) ")")]
[(scalar_splat_dsl v0 size_i size_o) 
	(string-append "\n" 
	(string-append "(scalar_splat_dsl " (if (lit? v0) (hvx:hydride-printer v0) (hvx:hydride-printer v0)) " " " " (if (lit? size_i) (hvx:hydride-printer size_i) (hvx:hydride-printer size_i)) " " " " (if (lit? size_o) (hvx:hydride-printer size_o) (hvx:hydride-printer size_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
    [(llvm-zext_dsl v0 size_i size_o) 
	(string-append "\n" 
	(string-append "(llvm-zext_dsl " (if (lit? v0) (hvx:hydride-printer v0) (hvx:hydride-printer v0)) " " " " (if (lit? size_i) (hvx:hydride-printer size_i) (hvx:hydride-printer size_i)) " " " " (if (lit? size_o) (hvx:hydride-printer size_o) (hvx:hydride-printer size_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
	[(nop v1) (string-append "\n" "(nop " (hvx:hydride-printer v1) ")")]
	[(idx-add i1 i2) (string-append "\n" "(idx-add " (~s i1) (~s i2) ")" )]
	[(idx-mul i1 i2) (string-append "\n" "(idx-mul " (~s i1) (~s i2) ")" )]
	[(vector-two-input-swizzle_dsl v0 v1 num_2 prec_i_o num_4 num_5 num_6 num_7 num_8) 
	(string-append "\n" 
	(string-append "(vector-two-input-swizzle_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? num_2) (begin (define num_elem (/ (hvx:get-length num_2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
	[(interleave-vectors_dsl v0 v1 size_i_o prec_i_o) 
	(string-append "\n" 
	(string-append "(interleave-vectors_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
	[(interleave-vector_dsl v0 size_i_o prec_i_o) 
	(string-append "\n" 
	(string-append "(interleave-vector_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
	[(deinterleave-vector_dsl v0 size_i_o prec_i_o) 
	(string-append "\n" 
	(string-append "(deinterleave-vector_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]


[(llvm-vect-add_dsl v0 v1 num_2 prec_i_o) 
	(string-append "\n" 
	(string-append "(llvm-vect-add_dsl " (if (lit? v0) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length v0 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length v0 (vector 0)) (hvx:get-prec v0 (vector 0))) (/ (hvx:get-prec v0 (vector 0))) )] [else (values (/ (hvx:get-length v0 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length v1 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length v1 (vector 0)) (hvx:get-prec v1 (vector 0))) (/ (hvx:get-prec v1 (vector 0))) )] [else (values (/ (hvx:get-length v1 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? num_2) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_2 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length num_2 (vector 0)) (hvx:get-prec num_2 (vector 0))) (/ (hvx:get-prec num_2 (vector 0))) )] [else (values (/ (hvx:get-length num_2 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length prec_i_o (vector 0)) (hvx:get-prec prec_i_o (vector 0))) (/ (hvx:get-prec prec_i_o (vector 0))) )] [else (values (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
	[(llvm-vect-sub_dsl v0 v1 num_2 prec_i_o) 
	(string-append "\n" 
	(string-append "(llvm-vect-sub_dsl " (if (lit? v0) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length v0 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length v0 (vector 0)) (hvx:get-prec v0 (vector 0))) (/ (hvx:get-prec v0 (vector 0))) )] [else (values (/ (hvx:get-length v0 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length v1 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length v1 (vector 0)) (hvx:get-prec v1 (vector 0))) (/ (hvx:get-prec v1 (vector 0))) )] [else (values (/ (hvx:get-length v1 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? num_2) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_2 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length num_2 (vector 0)) (hvx:get-prec num_2 (vector 0))) (/ (hvx:get-prec num_2 (vector 0))) )] [else (values (/ (hvx:get-length num_2 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length prec_i_o (vector 0)) (hvx:get-prec prec_i_o (vector 0))) (/ (hvx:get-prec prec_i_o (vector 0))) )] [else (values (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
	[(llvm-vect-mul_dsl v0 v1 num_2 prec_i_o) 
	(string-append "\n" 
	(string-append "(llvm-vect-mul_dsl " (if (lit? v0) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length v0 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length v0 (vector 0)) (hvx:get-prec v0 (vector 0))) (/ (hvx:get-prec v0 (vector 0))) )] [else (values (/ (hvx:get-length v0 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length v1 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length v1 (vector 0)) (hvx:get-prec v1 (vector 0))) (/ (hvx:get-prec v1 (vector 0))) )] [else (values (/ (hvx:get-length v1 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? num_2) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_2 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length num_2 (vector 0)) (hvx:get-prec num_2 (vector 0))) (/ (hvx:get-prec num_2 (vector 0))) )] [else (values (/ (hvx:get-length num_2 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length prec_i_o (vector 0)) (hvx:get-prec prec_i_o (vector 0))) (/ (hvx:get-prec prec_i_o (vector 0))) )] [else (values (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
	[(llvm-vect-sdiv_dsl v0 v1 num_2 prec_i_o) 
	(string-append "\n" 
	(string-append "(llvm-vect-sdiv_dsl " (if (lit? v0) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length v0 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length v0 (vector 0)) (hvx:get-prec v0 (vector 0))) (/ (hvx:get-prec v0 (vector 0))) )] [else (values (/ (hvx:get-length v0 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length v1 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length v1 (vector 0)) (hvx:get-prec v1 (vector 0))) (/ (hvx:get-prec v1 (vector 0))) )] [else (values (/ (hvx:get-length v1 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? num_2) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_2 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length num_2 (vector 0)) (hvx:get-prec num_2 (vector 0))) (/ (hvx:get-prec num_2 (vector 0))) )] [else (values (/ (hvx:get-length num_2 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length prec_i_o (vector 0)) (hvx:get-prec prec_i_o (vector 0))) (/ (hvx:get-prec prec_i_o (vector 0))) )] [else (values (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
	[(llvm-vect-udiv_dsl v0 v1 num_2 prec_i_o) 
	(string-append "\n" 
	(string-append "(llvm-vect-udiv_dsl " (if (lit? v0) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length v0 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length v0 (vector 0)) (hvx:get-prec v0 (vector 0))) (/ (hvx:get-prec v0 (vector 0))) )] [else (values (/ (hvx:get-length v0 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length v1 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length v1 (vector 0)) (hvx:get-prec v1 (vector 0))) (/ (hvx:get-prec v1 (vector 0))) )] [else (values (/ (hvx:get-length v1 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? num_2) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_2 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length num_2 (vector 0)) (hvx:get-prec num_2 (vector 0))) (/ (hvx:get-prec num_2 (vector 0))) )] [else (values (/ (hvx:get-length num_2 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_2)) " " " " (if (lit? prec_i_o) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length prec_i_o (vector 0)) (hvx:get-prec prec_i_o (vector 0))) (/ (hvx:get-prec prec_i_o (vector 0))) )] [else (values (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vshuffob_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 prec_i_o num_7 num_8 num_9) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vshuffob_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_veqw_xor_128B_dsl vc_0 vc_1 v2 v3 v4 size_i_o num_6 num_7 num_8 prec_i_o num_10 num_11 num_12) 
	(string-append "\n" 
	(string-append "(hexagon_V6_veqw_xor_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (hvx:get-length vc_1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (hvx:get-length v3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (hvx:get-length v4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vasrh_acc_128B_dsl vc_0 v1 v2 v3 size_i_o num_5 num_6 num_7 prec_i_o num_9 num_10 num_11 num_12 num_13 num_14) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vasrh_acc_128B_dsl " (if (lit? vc_0) (begin (define num_elem 1) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (hvx:get-length v3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vdmpyhb_acc_128B_dsl v0 v1 v2 size_i prec_o num_5 num_6 num_7 num_8 num_9 num_10 num_11 num_12 prec_i num_14 num_15 num_16) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vdmpyhb_acc_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i) (begin (define num_elem (/ (hvx:get-length size_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vminuh_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 prec_i_o num_7 num_8) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vminuh_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpyieoh_128B_dsl vc_0 v1 v2 size_i_o num_4 num_5 num_6 prec_i prec_o num_9 num_10 num_11 num_12 num_13) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpyieoh_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vpackwuh_sat_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 num_6 num_7 num_8 prec_o num_10 num_11 num_12 num_13 num_14 prec_i num_16 num_17 num_18) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vpackwuh_sat_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " (if (lit? num_17) (begin (define num_elem (/ (hvx:get-length num_17 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " (if (lit? num_18) (begin (define num_elem (/ (hvx:get-length num_18 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_18) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_18)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vpackeh_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 num_6 num_7 num_8 prec_i_o num_10 num_11 num_12 num_13 num_14) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vpackeh_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpyih_acc_128B_dsl v0 v1 v2 size_i_o num_4 num_5 num_6 prec_i_o num_8 num_9 num_10 num_11 num_12 num_13 num_14) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpyih_acc_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_lvsplatb_128B_dsl v0 size_o num_2 num_3 num_4 prec_o num_6) 
	(string-append "\n" 
	(string-append "(hexagon_V6_lvsplatb_128B_dsl " (if (lit? v0) (hvx:hydride-printer v0) (hvx:hydride-printer v0)) " " " " (if (lit? size_o) (hvx:hydride-printer size_o) (hvx:hydride-printer size_o)) " " " " (if (lit? num_2) (hvx:hydride-printer num_2) (hvx:hydride-printer num_2)) " " " " (if (lit? num_3) (hvx:hydride-printer num_3) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (hvx:hydride-printer num_4) (hvx:hydride-printer num_4)) " " " " (if (lit? prec_o) (hvx:hydride-printer prec_o) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_6) (hvx:hydride-printer num_6) (hvx:hydride-printer num_6)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vasrw_acc_128B_dsl vc_0 v1 v2 v3 size_i_o num_5 num_6 num_7 prec_i_o num_9 num_10) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vasrw_acc_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (hvx:get-length v3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vgtuw_and_128B_dsl vc_0 vc_1 v2 v3 v4 size_i_o num_6 num_7 num_8 prec_i_o num_10 num_11 num_12 num_13) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vgtuw_and_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (hvx:get-length vc_1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (hvx:get-length v3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (hvx:get-length v4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vaslh_acc_128B_dsl vc_0 v1 v2 v3 size_i_o num_5 num_6 num_7 prec_i_o num_9 num_10 num_11 num_12 num_13 num_14) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vaslh_acc_128B_dsl " (if (lit? vc_0) (begin (define num_elem 1) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (hvx:get-length v3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpabus_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 num_6 num_7 num_8 prec_i num_10 num_11 num_12 num_13 num_14 num_15 num_16 num_17 num_18 num_19 prec_o num_21 num_22 num_23 num_24 num_25 num_26 num_27 num_28 num_29 num_30 num_31 num_32) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpabus_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " (if (lit? num_17) (begin (define num_elem (/ (hvx:get-length num_17 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " (if (lit? num_18) (begin (define num_elem (/ (hvx:get-length num_18 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_18) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_18)) " " " " (if (lit? num_19) (begin (define num_elem (/ (hvx:get-length num_19 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_19) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_19)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_21) (begin (define num_elem (/ (hvx:get-length num_21 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_21) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_21)) " " " " (if (lit? num_22) (begin (define num_elem (/ (hvx:get-length num_22 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_22) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_22)) " " " " (if (lit? num_23) (begin (define num_elem (/ (hvx:get-length num_23 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_23) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_23)) " " " " (if (lit? num_24) (begin (define num_elem (/ (hvx:get-length num_24 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_24) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_24)) " " " " (if (lit? num_25) (begin (define num_elem (/ (hvx:get-length num_25 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_25) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_25)) " " " " (if (lit? num_26) (begin (define num_elem (/ (hvx:get-length num_26 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_26) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_26)) " " " " (if (lit? num_27) (begin (define num_elem (/ (hvx:get-length num_27 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_27) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_27)) " " " " (if (lit? num_28) (begin (define num_elem (/ (hvx:get-length num_28 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_28) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_28)) " " " " (if (lit? num_29) (begin (define num_elem (/ (hvx:get-length num_29 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_29) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_29)) " " " " (if (lit? num_30) (begin (define num_elem (/ (hvx:get-length num_30 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_30) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_30)) " " " " (if (lit? num_31) (begin (define num_elem (/ (hvx:get-length num_31 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_31) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_31)) " " " " (if (lit? num_32) (begin (define num_elem (/ (hvx:get-length num_32 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_32) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_32)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vaslw_acc_128B_dsl vc_0 v1 v2 v3 size_i_o num_5 num_6 num_7 prec_i_o num_9 num_10) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vaslw_acc_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (hvx:get-length v3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vabsdiffh_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 prec_i_o num_7 num_8 num_9 num_10) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vabsdiffh_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vshuffeb_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 prec_i_o num_7 num_8 num_9) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vshuffeb_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vaddcarrysat_128B_dsl v0 v1 v2 size_i_o num_4 num_5 num_6 num_7 prec_i_o num_9 num_10 num_11 num_12 num_13 num_14) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vaddcarrysat_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_pred_and_128B_dsl v0 v1 size_o num_3 num_4 num_5 prec_o num_7) 
	(string-append "\n" 
	(string-append "(hexagon_V6_pred_and_128B_dsl " (if (lit? v0) (hvx:hydride-printer v0) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (hvx:hydride-printer v1) (hvx:hydride-printer v1)) " " " " (if (lit? size_o) (hvx:hydride-printer size_o) (hvx:hydride-printer size_o)) " " " " (if (lit? num_3) (hvx:hydride-printer num_3) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (hvx:hydride-printer num_4) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (hvx:hydride-printer num_5) (hvx:hydride-printer num_5)) " " " " (if (lit? prec_o) (hvx:hydride-printer prec_o) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_7) (hvx:hydride-printer num_7) (hvx:hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vgtb_128B_dsl vc_0 vc_1 v2 v3 size_i_o num_5 num_6 num_7 prec_o num_9 prec_i num_11 num_12) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vgtb_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (hvx:get-length vc_1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (hvx:get-length v3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vaddubh_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 num_6 num_7 num_8 prec_i num_10 num_11 num_12 num_13 prec_o num_15 num_16 num_17 num_18 num_19 num_20) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vaddubh_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " (if (lit? num_17) (begin (define num_elem (/ (hvx:get-length num_17 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " (if (lit? num_18) (begin (define num_elem (/ (hvx:get-length num_18 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_18) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_18)) " " " " (if (lit? num_19) (begin (define num_elem (/ (hvx:get-length num_19 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_19) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_19)) " " " " (if (lit? num_20) (begin (define num_elem (/ (hvx:get-length num_20 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_20) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_20)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpyewuh_128B_dsl vc_0 v1 v2 size_i_o num_4 num_5 num_6 num_7 prec_i_o num_9 num_10 num_11 num_12 num_13) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpyewuh_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) 64)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpyh_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 num_6 num_7 num_8 prec_i num_10 num_11 num_12 num_13 num_14 prec_o num_16 num_17 num_18 num_19 num_20 num_21 num_22) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpyh_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " (if (lit? num_17) (begin (define num_elem (/ (hvx:get-length num_17 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " (if (lit? num_18) (begin (define num_elem (/ (hvx:get-length num_18 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_18) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_18)) " " " " (if (lit? num_19) (begin (define num_elem (/ (hvx:get-length num_19 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_19) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_19)) " " " " (if (lit? num_20) (begin (define num_elem (/ (hvx:get-length num_20 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_20) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_20)) " " " " (if (lit? num_21) (begin (define num_elem (/ (hvx:get-length num_21 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_21) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_21)) " " " " (if (lit? num_22) (begin (define num_elem (/ (hvx:get-length num_22 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_22) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_22)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpyiewuh_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 num_6 prec_i_o num_8 num_9 num_10 num_11 num_12) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpyiewuh_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vshufoeh_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 num_6 num_7 num_8 prec_i_o num_10 num_11 num_12 num_13 num_14 num_15 num_16) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vshufoeh_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_lvsplatw_128B_dsl v0 size_o num_2 num_3 num_4 prec_o num_6) 
	(string-append "\n" 
	(string-append "(hexagon_V6_lvsplatw_128B_dsl " (if (lit? v0) (hvx:hydride-printer v0) (hvx:hydride-printer v0)) " " " " (if (lit? size_o) (hvx:hydride-printer size_o) (hvx:hydride-printer size_o)) " " " " (if (lit? num_2) (hvx:hydride-printer num_2) (hvx:hydride-printer num_2)) " " " " (if (lit? num_3) (hvx:hydride-printer num_3) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (hvx:hydride-printer num_4) (hvx:hydride-printer num_4)) " " " " (if (lit? prec_o) (hvx:hydride-printer prec_o) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_6) (hvx:hydride-printer num_6) (hvx:hydride-printer num_6)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vaddhsat_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 prec_i_o num_7 num_8) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vaddhsat_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vswap_128B_dsl v0 v1 v2 vc_3 size_i_o num_5 num_6 num_7 num_8 num_9 num_10 num_11 num_12 num_13 prec_i_o num_15 num_16 num_17) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vswap_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (hvx:get-length vc_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " (if (lit? num_17) (begin (define num_elem (/ (hvx:get-length num_17 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vinsertwr_128B_dsl v0 size_o num_2 num_3 num_4 prec_o num_6 num_7) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vinsertwr_128B_dsl " (if (lit? v0) (hvx:hydride-printer v0) (hvx:hydride-printer v0)) " " " " (if (lit? size_o) (hvx:hydride-printer size_o) (hvx:hydride-printer size_o)) " " " " (if (lit? num_2) (hvx:hydride-printer num_2) (hvx:hydride-printer num_2)) " " " " (if (lit? num_3) (hvx:hydride-printer num_3) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (hvx:hydride-printer num_4) (hvx:hydride-printer num_4)) " " " " (if (lit? prec_o) (hvx:hydride-printer prec_o) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_6) (hvx:hydride-printer num_6) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (hvx:hydride-printer num_7) (hvx:hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vabsh_128B_dsl v0 size_i_o num_2 num_3 num_4 prec_i_o num_6) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vabsh_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_2) (begin (define num_elem (/ (hvx:get-length num_2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vunpackoh_128B_dsl vc_0 v1 v2 size_i_o num_4 num_5 num_6 num_7 prec_i_o num_9 num_10 num_11) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vunpackoh_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vabsw_sat_128B_dsl v0 size_i_o num_2 num_3 num_4 prec_i_o num_6 num_7) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vabsw_sat_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_2) (begin (define num_elem (/ (hvx:get-length num_2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vandqrt_128B_dsl vc_0 vc_1 v2 v3 size_i_o num_5 num_6 num_7 prec_i_o num_9 num_10 num_11 num_12) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vandqrt_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (hvx:get-length vc_1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (hvx:get-length v3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vsubuhw_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 num_6 num_7 num_8 prec_i num_10 num_11 num_12 num_13 prec_o num_15 num_16 num_17 num_18 num_19 num_20) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vsubuhw_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " (if (lit? num_17) (begin (define num_elem (/ (hvx:get-length num_17 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " (if (lit? num_18) (begin (define num_elem (/ (hvx:get-length num_18 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_18) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_18)) " " " " (if (lit? num_19) (begin (define num_elem (/ (hvx:get-length num_19 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_19) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_19)) " " " " (if (lit? num_20) (begin (define num_elem (/ (hvx:get-length num_20 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_20) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_20)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_veqw_or_128B_dsl v0 vc_1 vc_2 v3 v4 size_i_o num_6 num_7 num_8 prec_i_o num_10 num_11 num_12) 
	(string-append "\n" 
	(string-append "(hexagon_V6_veqw_or_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (hvx:get-length vc_1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (hvx:get-length vc_2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_2)) " " " " (if (lit? v3) (begin (define num_elem (/ (hvx:get-length v3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (hvx:get-length v4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vsubh_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 prec_i_o num_7 num_8) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vsubh_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpyiewh_acc_128B_dsl v0 v1 v2 size_i_o num_4 num_5 num_6 num_7 prec_i_o num_9 num_10 num_11 num_12 num_13 num_14 num_15 num_16) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpyiewh_acc_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vasruhubrndsat_128B_dsl vc_0 vc_1 vc_2 v3 v4 v5 size_i_o num_7 num_8 num_9 prec_o num_11 num_12 num_13 num_14 num_15 prec_i num_17 num_18 num_19 num_20 num_21 num_22 num_23) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vasruhubrndsat_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (hvx:get-length vc_1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (hvx:get-length vc_2 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_2)) " " " " (if (lit? v3) (begin (define num_elem (/ (hvx:get-length v3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (hvx:get-length v4 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v4)) " " " " (if (lit? v5) (begin (define num_elem (/ (hvx:get-length v5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v5)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_17) (begin (define num_elem (/ (hvx:get-length num_17 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " (if (lit? num_18) (begin (define num_elem (/ (hvx:get-length num_18 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_18) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_18)) " " " " (if (lit? num_19) (begin (define num_elem (/ (hvx:get-length num_19 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_19) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_19)) " " " " (if (lit? num_20) (begin (define num_elem (/ (hvx:get-length num_20 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_20) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_20)) " " " " (if (lit? num_21) (begin (define num_elem (/ (hvx:get-length num_21 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_21) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_21)) " " " " (if (lit? num_22) (begin (define num_elem (/ (hvx:get-length num_22 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_22) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_22)) " " " " (if (lit? num_23) (begin (define num_elem (/ (hvx:get-length num_23 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_23) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_23)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpyiowh_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 num_6 prec_i_o num_8 num_9 num_10 num_11 num_12 num_13) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpyiowh_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vaslhv_128B_dsl v0 vc_1 v2 size_i_o num_4 num_5 num_6 prec_i_o num_8 num_9) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vaslhv_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (hvx:get-length vc_1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vgtub_xor_128B_dsl vc_0 vc_1 v2 v3 v4 size_i_o num_6 num_7 num_8 prec_o num_10 prec_i num_12 num_13) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vgtub_xor_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (hvx:get-length vc_1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (hvx:get-length v3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (hvx:get-length v4 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpyih_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 prec_i_o num_7 num_8 num_9 num_10) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpyih_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpyiwh_acc_128B_dsl v0 v1 v2 size_i_o num_4 num_5 num_6 num_7 prec_i_o num_9 num_10 num_11 num_12 num_13 num_14 num_15 num_16 num_17 num_18) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpyiwh_acc_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " (if (lit? num_17) (begin (define num_elem (/ (hvx:get-length num_17 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " (if (lit? num_18) (begin (define num_elem (/ (hvx:get-length num_18 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_18) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_18)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vandvnqv_128B_dsl v0 vc_1 v2 size_i_o num_4 num_5 num_6 num_7 prec_i_o num_9 num_10) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vandvnqv_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (hvx:get-length vc_1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vlsrh_128B_dsl vc_0 v1 v2 size_i_o num_4 num_5 num_6 prec_i_o num_8 num_9 num_10) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vlsrh_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpabus_acc_128B_dsl v0 v1 v2 size_i_o num_4 num_5 num_6 num_7 num_8 num_9 num_10 num_11 num_12 num_13 num_14 num_15 num_16 num_17 num_18 num_19 num_20 num_21 prec_i_o num_23 num_24 num_25 num_26 num_27 num_28 num_29 num_30 num_31 num_32 num_33 num_34 num_35) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpabus_acc_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " (if (lit? num_17) (begin (define num_elem (/ (hvx:get-length num_17 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " (if (lit? num_18) (begin (define num_elem (/ (hvx:get-length num_18 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_18) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_18)) " " " " (if (lit? num_19) (begin (define num_elem (/ (hvx:get-length num_19 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_19) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_19)) " " " " (if (lit? num_20) (begin (define num_elem (/ (hvx:get-length num_20 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_20) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_20)) " " " " (if (lit? num_21) (begin (define num_elem (/ (hvx:get-length num_21 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_21) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_21)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_23) (begin (define num_elem (/ (hvx:get-length num_23 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_23) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_23)) " " " " (if (lit? num_24) (begin (define num_elem (/ (hvx:get-length num_24 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_24) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_24)) " " " " (if (lit? num_25) (begin (define num_elem (/ (hvx:get-length num_25 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_25) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_25)) " " " " (if (lit? num_26) (begin (define num_elem (/ (hvx:get-length num_26 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_26) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_26)) " " " " (if (lit? num_27) (begin (define num_elem (/ (hvx:get-length num_27 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_27) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_27)) " " " " (if (lit? num_28) (begin (define num_elem (/ (hvx:get-length num_28 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_28) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_28)) " " " " (if (lit? num_29) (begin (define num_elem (/ (hvx:get-length num_29 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_29) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_29)) " " " " (if (lit? num_30) (begin (define num_elem (/ (hvx:get-length num_30 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_30) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_30)) " " " " (if (lit? num_31) (begin (define num_elem (/ (hvx:get-length num_31 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_31) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_31)) " " " " (if (lit? num_32) (begin (define num_elem (/ (hvx:get-length num_32 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_32) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_32)) " " " " (if (lit? num_33) (begin (define num_elem (/ (hvx:get-length num_33 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_33) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_33)) " " " " (if (lit? num_34) (begin (define num_elem (/ (hvx:get-length num_34 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_34) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_34)) " " " " (if (lit? num_35) (begin (define num_elem (/ (hvx:get-length num_35 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_35) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_35)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmux_128B_dsl v0 v1 vc_2 v3 size_i_o num_5 num_6 num_7 prec_i_o num_9 num_10 num_11) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmux_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (hvx:get-length vc_2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_2)) " " " " (if (lit? v3) (begin (define num_elem (/ (hvx:get-length v3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vnavgw_128B_dsl vc_0 v1 v2 size_i_o num_4 num_5 num_6 prec_i_o num_8 num_9 num_10) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vnavgw_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vaslh_128B_dsl vc_0 v1 v2 size_i_o num_4 num_5 num_6 prec_i_o num_8 num_9 num_10) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vaslh_128B_dsl " (if (lit? vc_0) (begin (define num_elem 1) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vandnqrt_acc_128B_dsl vc_0 v1 v2 v3 size_i_o num_5 num_6 num_7 num_8 prec_i_o num_10 num_11 num_12) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vandnqrt_acc_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (hvx:get-length v3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vdealb_128B_dsl v0 size_i_o num_2 num_3 num_4 num_5 num_6 num_7 prec_i_o num_9 num_10 num_11 num_12 num_13 num_14) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vdealb_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_2) (begin (define num_elem (/ (hvx:get-length num_2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpahb_acc_128B_dsl v0 v1 v2 size_i_o num_4 num_5 num_6 num_7 num_8 num_9 num_10 num_11 num_12 num_13 num_14 num_15 num_16 num_17 num_18 num_19 num_20 num_21 num_22 num_23 prec_i_o num_25 num_26 num_27 num_28 num_29 num_30 num_31 num_32 num_33 num_34 num_35 num_36 num_37 num_38 num_39) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpahb_acc_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " (if (lit? num_17) (begin (define num_elem (/ (hvx:get-length num_17 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " (if (lit? num_18) (begin (define num_elem (/ (hvx:get-length num_18 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_18) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_18)) " " " " (if (lit? num_19) (begin (define num_elem (/ (hvx:get-length num_19 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_19) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_19)) " " " " (if (lit? num_20) (begin (define num_elem (/ (hvx:get-length num_20 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_20) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_20)) " " " " (if (lit? num_21) (begin (define num_elem (/ (hvx:get-length num_21 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_21) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_21)) " " " " (if (lit? num_22) (begin (define num_elem (/ (hvx:get-length num_22 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_22) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_22)) " " " " (if (lit? num_23) (begin (define num_elem (/ (hvx:get-length num_23 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_23) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_23)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_25) (begin (define num_elem (/ (hvx:get-length num_25 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_25) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_25)) " " " " (if (lit? num_26) (begin (define num_elem (/ (hvx:get-length num_26 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_26) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_26)) " " " " (if (lit? num_27) (begin (define num_elem (/ (hvx:get-length num_27 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_27) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_27)) " " " " (if (lit? num_28) (begin (define num_elem (/ (hvx:get-length num_28 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_28) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_28)) " " " " (if (lit? num_29) (begin (define num_elem (/ (hvx:get-length num_29 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_29) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_29)) " " " " (if (lit? num_30) (begin (define num_elem (/ (hvx:get-length num_30 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_30) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_30)) " " " " (if (lit? num_31) (begin (define num_elem (/ (hvx:get-length num_31 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_31) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_31)) " " " " (if (lit? num_32) (begin (define num_elem (/ (hvx:get-length num_32 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_32) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_32)) " " " " (if (lit? num_33) (begin (define num_elem (/ (hvx:get-length num_33 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_33) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_33)) " " " " (if (lit? num_34) (begin (define num_elem (/ (hvx:get-length num_34 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_34) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_34)) " " " " (if (lit? num_35) (begin (define num_elem (/ (hvx:get-length num_35 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_35) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_35)) " " " " (if (lit? num_36) (begin (define num_elem (/ (hvx:get-length num_36 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_36) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_36)) " " " " (if (lit? num_37) (begin (define num_elem (/ (hvx:get-length num_37 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_37) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_37)) " " " " (if (lit? num_38) (begin (define num_elem (/ (hvx:get-length num_38 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_38) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_38)) " " " " (if (lit? num_39) (begin (define num_elem (/ (hvx:get-length num_39 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_39) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_39)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vrounduhub_128B_dsl vc_0 vc_1 vc_2 vc_3 v4 v5 size_i_o num_7 num_8 num_9 prec_o num_11 num_12 num_13 prec_i num_15 num_16 num_17 num_18) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vrounduhub_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (hvx:get-length vc_1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (hvx:get-length vc_2 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (hvx:get-length vc_3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_3)) " " " " (if (lit? v4) (begin (define num_elem (/ (hvx:get-length v4 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v4)) " " " " (if (lit? v5) (begin (define num_elem (/ (hvx:get-length v5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v5)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " (if (lit? num_17) (begin (define num_elem (/ (hvx:get-length num_17 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " (if (lit? num_18) (begin (define num_elem (/ (hvx:get-length num_18 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_18) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_18)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vlsrw_128B_dsl vc_0 v1 v2 size_i_o num_4 num_5 num_6 prec_i_o num_8) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vlsrw_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpyowh_128B_dsl vc_0 vc_1 vc_2 v3 v4 size_i_o num_6 num_7 num_8 num_9 prec_i_o num_11 num_12 num_13 num_14 num_15 num_16 num_17 num_18) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpyowh_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (hvx:get-length vc_1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (hvx:get-length vc_2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_2)) " " " " (if (lit? v3) (begin (define num_elem (/ (hvx:get-length v3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (hvx:get-length v4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " (if (lit? num_17) (begin (define num_elem (/ (hvx:get-length num_17 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " (if (lit? num_18) (begin (define num_elem (/ (hvx:get-length num_18 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_18) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_18)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vsathub_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 prec_o num_7 num_8 prec_i num_10 num_11 num_12) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vsathub_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vdmpyhvsat_acc_128B_dsl v0 v1 v2 size_i_o prec_o num_5 num_6 prec_i num_8 num_9 num_10 num_11) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vdmpyhvsat_acc_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_veqw_128B_dsl vc_0 v1 vc_2 v3 size_i_o num_5 num_6 num_7 prec_o prec_i num_10 num_11) 
	(string-append "\n" 
	(string-append "(hexagon_V6_veqw_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (hvx:get-length vc_2 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_2)) " " " " (if (lit? v3) (begin (define num_elem (/ (hvx:get-length v3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpyub_acc_128B_dsl v0 v1 v2 size_i_o num_4 num_5 num_6 num_7 num_8 num_9 num_10 num_11 num_12 num_13 num_14 num_15 num_16 num_17 prec_i_o num_19 num_20 num_21 num_22 num_23 num_24 num_25 num_26 num_27 num_28) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpyub_acc_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " (if (lit? num_17) (begin (define num_elem (/ (hvx:get-length num_17 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_19) (begin (define num_elem (/ (hvx:get-length num_19 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_19) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_19)) " " " " (if (lit? num_20) (begin (define num_elem (/ (hvx:get-length num_20 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_20) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_20)) " " " " (if (lit? num_21) (begin (define num_elem (/ (hvx:get-length num_21 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_21) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_21)) " " " " (if (lit? num_22) (begin (define num_elem (/ (hvx:get-length num_22 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_22) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_22)) " " " " (if (lit? num_23) (begin (define num_elem (/ (hvx:get-length num_23 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_23) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_23)) " " " " (if (lit? num_24) (begin (define num_elem (/ (hvx:get-length num_24 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_24) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_24)) " " " " (if (lit? num_25) (begin (define num_elem (/ (hvx:get-length num_25 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_25) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_25)) " " " " (if (lit? num_26) (begin (define num_elem (/ (hvx:get-length num_26 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_26) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_26)) " " " " (if (lit? num_27) (begin (define num_elem (/ (hvx:get-length num_27 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_27) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_27)) " " " " (if (lit? num_28) (begin (define num_elem (/ (hvx:get-length num_28 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_28) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_28)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vdealb4w_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 num_6 num_7 num_8 num_9 num_10 num_11 num_12 num_13 num_14 prec_i_o num_16 num_17 num_18 num_19 num_20 num_21 num_22 num_23 num_24 num_25 num_26 num_27 num_28) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vdealb4w_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " (if (lit? num_17) (begin (define num_elem (/ (hvx:get-length num_17 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " (if (lit? num_18) (begin (define num_elem (/ (hvx:get-length num_18 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_18) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_18)) " " " " (if (lit? num_19) (begin (define num_elem (/ (hvx:get-length num_19 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_19) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_19)) " " " " (if (lit? num_20) (begin (define num_elem (/ (hvx:get-length num_20 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_20) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_20)) " " " " (if (lit? num_21) (begin (define num_elem (/ (hvx:get-length num_21 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_21) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_21)) " " " " (if (lit? num_22) (begin (define num_elem (/ (hvx:get-length num_22 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_22) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_22)) " " " " (if (lit? num_23) (begin (define num_elem (/ (hvx:get-length num_23 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_23) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_23)) " " " " (if (lit? num_24) (begin (define num_elem (/ (hvx:get-length num_24 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_24) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_24)) " " " " (if (lit? num_25) (begin (define num_elem (/ (hvx:get-length num_25 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_25) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_25)) " " " " (if (lit? num_26) (begin (define num_elem (/ (hvx:get-length num_26 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_26) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_26)) " " " " (if (lit? num_27) (begin (define num_elem (/ (hvx:get-length num_27 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_27) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_27)) " " " " (if (lit? num_28) (begin (define num_elem (/ (hvx:get-length num_28 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_28) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_28)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vrmpybv_128B_dsl vc_0 v1 v2 size_i_o prec_o num_5 num_6 prec_i num_8 num_9 num_10 num_11 num_12 num_13) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vrmpybv_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vrmpybus_acc_128B_dsl v0 v1 v2 size_i_o prec_o num_5 num_6 prec_i num_8 num_9 num_10 num_11 num_12 num_13) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vrmpybus_acc_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vdmpybus_128B_dsl vc_0 v1 v2 size_i prec_o num_5 num_6 prec_i num_8 num_9 num_10 num_11 num_12 num_13 num_14) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vdmpybus_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i) (begin (define num_elem (/ (hvx:get-length size_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_veqh_and_128B_dsl vc_0 vc_1 v2 v3 v4 size_i_o num_6 num_7 num_8 prec_i_o num_10 num_11 num_12) 
	(string-append "\n" 
	(string-append "(hexagon_V6_veqh_and_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (hvx:get-length vc_1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (hvx:get-length v3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (hvx:get-length v4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpyuhe_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 prec_i prec_o num_8 num_9 num_10 num_11 num_12) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpyuhe_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vpackoh_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 num_6 num_7 num_8 prec_i_o num_10 num_11 num_12 num_13 num_14 num_15 num_16) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vpackoh_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vdmpyhisat_128B_dsl vc_0 v1 v2 size_i prec_o num_5 num_6 prec_i num_8 num_9 num_10 num_11 num_12 num_13 num_14 num_15) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vdmpyhisat_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i) (begin (define num_elem (/ (hvx:get-length size_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vandnqrt_128B_dsl v0 vc_1 v2 size_i_o num_4 num_5 num_6 num_7 prec_i_o num_9 num_10 num_11) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vandnqrt_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (hvx:get-length vc_1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vshuffh_128B_dsl v0 size_i_o num_2 num_3 num_4 prec_i_o num_6 num_7 num_8) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vshuffh_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_2) (begin (define num_elem (/ (hvx:get-length num_2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vandvrt_acc_128B_dsl v0 vc_1 vc_2 vc_3 v4 v5 size_i_o num_7 num_8 num_9 prec_o prec_i num_12 num_13 num_14) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vandvrt_acc_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (hvx:get-length vc_1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (hvx:get-length vc_2 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (hvx:get-length vc_3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_3)) " " " " (if (lit? v4) (begin (define num_elem (/ (hvx:get-length v4 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v4)) " " " " (if (lit? v5) (begin (define num_elem (/ (hvx:get-length v5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v5)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpabusv_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 num_6 num_7 num_8 prec_i num_10 num_11 num_12 num_13 num_14 num_15 num_16 num_17 prec_o num_19 num_20 num_21 num_22 num_23 num_24 num_25 num_26 num_27 num_28) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpabusv_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " (if (lit? num_17) (begin (define num_elem (/ (hvx:get-length num_17 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_19) (begin (define num_elem (/ (hvx:get-length num_19 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_19) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_19)) " " " " (if (lit? num_20) (begin (define num_elem (/ (hvx:get-length num_20 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_20) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_20)) " " " " (if (lit? num_21) (begin (define num_elem (/ (hvx:get-length num_21 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_21) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_21)) " " " " (if (lit? num_22) (begin (define num_elem (/ (hvx:get-length num_22 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_22) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_22)) " " " " (if (lit? num_23) (begin (define num_elem (/ (hvx:get-length num_23 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_23) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_23)) " " " " (if (lit? num_24) (begin (define num_elem (/ (hvx:get-length num_24 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_24) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_24)) " " " " (if (lit? num_25) (begin (define num_elem (/ (hvx:get-length num_25 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_25) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_25)) " " " " (if (lit? num_26) (begin (define num_elem (/ (hvx:get-length num_26 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_26) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_26)) " " " " (if (lit? num_27) (begin (define num_elem (/ (hvx:get-length num_27 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_27) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_27)) " " " " (if (lit? num_28) (begin (define num_elem (/ (hvx:get-length num_28 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_28) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_28)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vor_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 prec_i_o num_7) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vor_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vasruwuhsat_128B_dsl vc_0 v1 v2 v3 size_i_o num_5 num_6 num_7 prec_o num_9 num_10 prec_i num_12 num_13 num_14) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vasruwuhsat_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (hvx:get-length v3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpyowh_rnd_sacc_128B_dsl vc_0 vc_1 vc_2 v3 v4 v5 size_i_o num_7 num_8 num_9 num_10 prec_i_o num_12 num_13 num_14 num_15 num_16 num_17 num_18 num_19 num_20 num_21 num_22) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpyowh_rnd_sacc_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) 64)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (hvx:get-length vc_1 (vector 0)) 64)) (string-append (hvx:hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hvx:hydride-printer vc_1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (hvx:get-length vc_2 (vector 0)) 64)) (string-append (hvx:hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s 64) ">" "\n" )) (hvx:hydride-printer vc_2)) " " " " (if (lit? v3) (begin (define num_elem (/ (hvx:get-length v3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (hvx:get-length v4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v4)) " " " " (if (lit? v5) (begin (define num_elem (/ (hvx:get-length v5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v5)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " (if (lit? num_17) (begin (define num_elem (/ (hvx:get-length num_17 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " (if (lit? num_18) (begin (define num_elem (/ (hvx:get-length num_18 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_18) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_18)) " " " " (if (lit? num_19) (begin (define num_elem (/ (hvx:get-length num_19 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_19) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_19)) " " " " (if (lit? num_20) (begin (define num_elem (/ (hvx:get-length num_20 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_20) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_20)) " " " " (if (lit? num_21) (begin (define num_elem (/ (hvx:get-length num_21 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_21) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_21)) " " " " (if (lit? num_22) (begin (define num_elem (/ (hvx:get-length num_22 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_22) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_22)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vaddubh_acc_128B_dsl v0 v1 v2 size_i_o num_4 num_5 num_6 num_7 num_8 num_9 num_10 num_11 num_12 num_13 num_14 num_15 prec_i_o num_17 num_18 num_19 num_20 num_21 num_22 num_23) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vaddubh_acc_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_17) (begin (define num_elem (/ (hvx:get-length num_17 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " (if (lit? num_18) (begin (define num_elem (/ (hvx:get-length num_18 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_18) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_18)) " " " " (if (lit? num_19) (begin (define num_elem (/ (hvx:get-length num_19 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_19) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_19)) " " " " (if (lit? num_20) (begin (define num_elem (/ (hvx:get-length num_20 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_20) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_20)) " " " " (if (lit? num_21) (begin (define num_elem (/ (hvx:get-length num_21 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_21) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_21)) " " " " (if (lit? num_22) (begin (define num_elem (/ (hvx:get-length num_22 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_22) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_22)) " " " " (if (lit? num_23) (begin (define num_elem (/ (hvx:get-length num_23 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_23) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_23)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vroundwuh_128B_dsl vc_0 vc_1 vc_2 vc_3 v4 v5 size_i_o num_7 num_8 num_9 prec_o num_11 num_12 num_13 prec_i num_15 num_16 num_17 num_18) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vroundwuh_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (hvx:get-length vc_1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (hvx:get-length vc_2 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (hvx:get-length vc_3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_3)) " " " " (if (lit? v4) (begin (define num_elem (/ (hvx:get-length v4 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v4)) " " " " (if (lit? v5) (begin (define num_elem (/ (hvx:get-length v5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v5)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " (if (lit? num_17) (begin (define num_elem (/ (hvx:get-length num_17 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " (if (lit? num_18) (begin (define num_elem (/ (hvx:get-length num_18 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_18) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_18)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpyihb_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 num_6 prec_i_o num_8 num_9 num_10 num_11 num_12 num_13 num_14) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpyihb_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_pred_xor_128B_dsl v0 v1 size_o num_3 num_4 num_5 prec_o num_7) 
	(string-append "\n" 
	(string-append "(hexagon_V6_pred_xor_128B_dsl " (if (lit? v0) (hvx:hydride-printer v0) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (hvx:hydride-printer v1) (hvx:hydride-printer v1)) " " " " (if (lit? size_o) (hvx:hydride-printer size_o) (hvx:hydride-printer size_o)) " " " " (if (lit? num_3) (hvx:hydride-printer num_3) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (hvx:hydride-printer num_4) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (hvx:hydride-printer num_5) (hvx:hydride-printer num_5)) " " " " (if (lit? prec_o) (hvx:hydride-printer prec_o) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_7) (hvx:hydride-printer num_7) (hvx:hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vandvrt_128B_dsl vc_0 vc_1 v2 vc_3 v4 size_i_o num_6 num_7 num_8 prec_o prec_i num_11 num_12 num_13) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vandvrt_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (hvx:get-length vc_1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (hvx:get-length vc_3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_3)) " " " " (if (lit? v4) (begin (define num_elem (/ (hvx:get-length v4 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vasrwh_128B_dsl vc_0 v1 v2 v3 size_i_o num_5 num_6 num_7 prec_o num_9 prec_i num_11 num_12) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vasrwh_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (hvx:get-length v3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vandvqv_128B_dsl vc_0 v1 v2 vc_3 size_i_o num_5 num_6 num_7 prec_i_o num_9 num_10 num_11) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vandvqv_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (hvx:get-length vc_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vavgwrnd_128B_dsl vc_0 vc_1 v2 v3 size_i_o num_5 num_6 num_7 prec_i_o num_9 num_10 num_11 num_12) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vavgwrnd_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (hvx:get-length vc_1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (hvx:get-length v3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vgth_or_128B_dsl vc_0 vc_1 v2 v3 v4 size_i_o num_6 num_7 num_8 prec_i_o num_10 num_11 num_12 num_13) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vgth_or_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (hvx:get-length vc_1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (hvx:get-length v3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (hvx:get-length v4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpyuhe_acc_128B_dsl v0 v1 v2 size_i_o num_4 num_5 num_6 num_7 prec_i_o num_9 num_10 num_11 num_12 num_13 num_14) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpyuhe_acc_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmaxw_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 prec_i_o num_7 num_8) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmaxw_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vandqrt_acc_128B_dsl vc_0 v1 v2 vc_3 v4 size_i_o num_6 num_7 num_8 prec_i_o num_10 num_11 num_12 num_13) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vandqrt_acc_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (hvx:get-length vc_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_3)) " " " " (if (lit? v4) (begin (define num_elem (/ (hvx:get-length v4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v4)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpyub_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 num_6 num_7 num_8 prec_i num_10 num_11 num_12 num_13 num_14 num_15 prec_o num_17 num_18 num_19 num_20 num_21 num_22 num_23 num_24 num_25) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpyub_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_17) (begin (define num_elem (/ (hvx:get-length num_17 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " (if (lit? num_18) (begin (define num_elem (/ (hvx:get-length num_18 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_18) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_18)) " " " " (if (lit? num_19) (begin (define num_elem (/ (hvx:get-length num_19 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_19) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_19)) " " " " (if (lit? num_20) (begin (define num_elem (/ (hvx:get-length num_20 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_20) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_20)) " " " " (if (lit? num_21) (begin (define num_elem (/ (hvx:get-length num_21 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_21) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_21)) " " " " (if (lit? num_22) (begin (define num_elem (/ (hvx:get-length num_22 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_22) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_22)) " " " " (if (lit? num_23) (begin (define num_elem (/ (hvx:get-length num_23 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_23) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_23)) " " " " (if (lit? num_24) (begin (define num_elem (/ (hvx:get-length num_24 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_24) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_24)) " " " " (if (lit? num_25) (begin (define num_elem (/ (hvx:get-length num_25 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_25) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_25)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_pred_and_n_128B_dsl v0 v1 size_o num_3 num_4 num_5 prec_o num_7) 
	(string-append "\n" 
	(string-append "(hexagon_V6_pred_and_n_128B_dsl " (if (lit? v0) (hvx:hydride-printer v0) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (hvx:hydride-printer v1) (hvx:hydride-printer v1)) " " " " (if (lit? size_o) (hvx:hydride-printer size_o) (hvx:hydride-printer size_o)) " " " " (if (lit? num_3) (hvx:hydride-printer num_3) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (hvx:hydride-printer num_4) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (hvx:hydride-printer num_5) (hvx:hydride-printer num_5)) " " " " (if (lit? prec_o) (hvx:hydride-printer prec_o) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_7) (hvx:hydride-printer num_7) (hvx:hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vasruwuhrndsat_128B_dsl vc_0 vc_1 vc_2 v3 v4 v5 size_i_o num_7 num_8 num_9 prec_o num_11 num_12 num_13 prec_i num_15 num_16 num_17 num_18 num_19) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vasruwuhrndsat_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (hvx:get-length vc_1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_1)) " " " " (if (lit? vc_2) (begin (define num_elem (/ (hvx:get-length vc_2 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_2)) " " " " (if (lit? v3) (begin (define num_elem (/ (hvx:get-length v3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v3)) " " " " (if (lit? v4) (begin (define num_elem (/ (hvx:get-length v4 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v4)) " " " " (if (lit? v5) (begin (define num_elem (/ (hvx:get-length v5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v5)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " (if (lit? num_17) (begin (define num_elem (/ (hvx:get-length num_17 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " (if (lit? num_18) (begin (define num_elem (/ (hvx:get-length num_18 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_18) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_18)) " " " " (if (lit? num_19) (begin (define num_elem (/ (hvx:get-length num_19 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_19) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_19)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vaslw_128B_dsl vc_0 v1 v2 size_i_o num_4 num_5 num_6 prec_i_o num_8) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vaslw_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vavguw_128B_dsl vc_0 v1 v2 size_i_o num_4 num_5 num_6 prec_i_o num_8 num_9 num_10) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vavguw_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vasrhubsat_128B_dsl vc_0 v1 v2 v3 size_i_o num_5 num_6 num_7 prec_o num_9 num_10 num_11 num_12 prec_i num_14 num_15 num_16 num_17) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vasrhubsat_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) 32)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s 32) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (hvx:get-length v3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " (if (lit? num_17) (begin (define num_elem (/ (hvx:get-length num_17 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_lo_128B_dsl v0 size_i_o num_2 num_3 num_4 prec_i_o num_6 num_7) 
	(string-append "\n" 
	(string-append "(hexagon_V6_lo_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_2) (begin (define num_elem (/ (hvx:get-length num_2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vassign_128B_dsl v0 size_i_o num_2 num_3 num_4 prec_i_o num_6) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vassign_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_2) (begin (define num_elem (/ (hvx:get-length num_2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vunpackh_128B_dsl v0 size_i_o num_2 num_3 num_4 prec_i prec_o num_7 num_8 num_9) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vunpackh_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_2) (begin (define num_elem (/ (hvx:get-length num_2 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vcombine_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 num_6 num_7 num_8 prec_i_o num_10 num_11) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vcombine_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpauhb_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 num_6 num_7 num_8 num_9 num_10 num_11 num_12 num_13 num_14 num_15 num_16 num_17 num_18 num_19 num_20 num_21 prec_o num_23 num_24 num_25 num_26 num_27 num_28 num_29 num_30 num_31 num_32 prec_i num_34 num_35 num_36) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpauhb_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " (if (lit? num_17) (begin (define num_elem (/ (hvx:get-length num_17 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " (if (lit? num_18) (begin (define num_elem (/ (hvx:get-length num_18 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_18) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_18)) " " " " (if (lit? num_19) (begin (define num_elem (/ (hvx:get-length num_19 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_19) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_19)) " " " " (if (lit? num_20) (begin (define num_elem (/ (hvx:get-length num_20 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_20) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_20)) " " " " (if (lit? num_21) (begin (define num_elem (/ (hvx:get-length num_21 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_21) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_21)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_23) (begin (define num_elem (/ (hvx:get-length num_23 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_23) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_23)) " " " " (if (lit? num_24) (begin (define num_elem (/ (hvx:get-length num_24 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_24) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_24)) " " " " (if (lit? num_25) (begin (define num_elem (/ (hvx:get-length num_25 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_25) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_25)) " " " " (if (lit? num_26) (begin (define num_elem (/ (hvx:get-length num_26 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_26) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_26)) " " " " (if (lit? num_27) (begin (define num_elem (/ (hvx:get-length num_27 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_27) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_27)) " " " " (if (lit? num_28) (begin (define num_elem (/ (hvx:get-length num_28 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_28) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_28)) " " " " (if (lit? num_29) (begin (define num_elem (/ (hvx:get-length num_29 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_29) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_29)) " " " " (if (lit? num_30) (begin (define num_elem (/ (hvx:get-length num_30 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_30) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_30)) " " " " (if (lit? num_31) (begin (define num_elem (/ (hvx:get-length num_31 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_31) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_31)) " " " " (if (lit? num_32) (begin (define num_elem (/ (hvx:get-length num_32 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_32) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_32)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_34) (begin (define num_elem (/ (hvx:get-length num_34 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_34) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_34)) " " " " (if (lit? num_35) (begin (define num_elem (/ (hvx:get-length num_35 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_35) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_35)) " " " " (if (lit? num_36) (begin (define num_elem (/ (hvx:get-length num_36 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_36) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_36)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpybv_acc_128B_dsl v0 v1 v2 size_i_o num_4 num_5 num_6 num_7 num_8 num_9 num_10 num_11 num_12 num_13 num_14 num_15 prec_i_o num_17 num_18 num_19 num_20 num_21 num_22 num_23) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpybv_acc_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_17) (begin (define num_elem (/ (hvx:get-length num_17 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " (if (lit? num_18) (begin (define num_elem (/ (hvx:get-length num_18 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_18) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_18)) " " " " (if (lit? num_19) (begin (define num_elem (/ (hvx:get-length num_19 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_19) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_19)) " " " " (if (lit? num_20) (begin (define num_elem (/ (hvx:get-length num_20 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_20) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_20)) " " " " (if (lit? num_21) (begin (define num_elem (/ (hvx:get-length num_21 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_21) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_21)) " " " " (if (lit? num_22) (begin (define num_elem (/ (hvx:get-length num_22 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_22) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_22)) " " " " (if (lit? num_23) (begin (define num_elem (/ (hvx:get-length num_23 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_23) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_23)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vlsrwv_128B_dsl v0 vc_1 v2 size_i_o num_4 num_5 num_6 prec_i_o num_8 num_9) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vlsrwv_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (hvx:get-length vc_1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vsubhnq_128B_dsl v0 v1 v2 vc_3 size_i_o num_5 num_6 num_7 prec_i_o num_9 num_10 num_11 num_12) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vsubhnq_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? vc_3) (begin (define num_elem (/ (hvx:get-length vc_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vsb_128B_dsl v0 size_i_o num_2 num_3 num_4 num_5 num_6 num_7 prec_i num_9 num_10 num_11 prec_o num_13 num_14 num_15 num_16 num_17) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vsb_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_2) (begin (define num_elem (/ (hvx:get-length num_2 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " (if (lit? num_17) (begin (define num_elem (/ (hvx:get-length num_17 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vaddbq_128B_dsl v0 vc_1 v2 v3 size_i_o num_5 num_6 num_7 prec_i_o num_9 num_10 num_11 num_12) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vaddbq_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (hvx:get-length vc_1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (hvx:get-length v3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpybv_128B_dsl v0 v1 size_i_o num_3 num_4 num_5 num_6 num_7 num_8 prec_i num_10 num_11 num_12 num_13 prec_o num_15 num_16 num_17 num_18 num_19 num_20) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpybv_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " (if (lit? num_17) (begin (define num_elem (/ (hvx:get-length num_17 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " (if (lit? num_18) (begin (define num_elem (/ (hvx:get-length num_18 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_18) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_18)) " " " " (if (lit? num_19) (begin (define num_elem (/ (hvx:get-length num_19 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_19) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_19)) " " " " (if (lit? num_20) (begin (define num_elem (/ (hvx:get-length num_20 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_20) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_20)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vasrhv_128B_dsl v0 vc_1 v2 size_i_o num_4 num_5 num_6 prec_i_o num_8 num_9) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vasrhv_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (hvx:get-length vc_1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vdmpyhsat_acc_128B_dsl v0 v1 v2 size_i prec_o num_5 num_6 prec_i num_8 num_9 num_10 num_11) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vdmpyhsat_acc_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i) (begin (define num_elem (/ (hvx:get-length size_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpyh_acc_128B_dsl v0 v1 v2 size_i_o num_4 num_5 num_6 num_7 num_8 num_9 num_10 num_11 num_12 num_13 num_14 num_15 num_16 prec_i_o num_18 num_19 num_20 num_21 num_22 num_23 num_24 num_25) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpyh_acc_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define num_elem (/ (hvx:get-length v1 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_18) (begin (define num_elem (/ (hvx:get-length num_18 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_18) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_18)) " " " " (if (lit? num_19) (begin (define num_elem (/ (hvx:get-length num_19 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_19) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_19)) " " " " (if (lit? num_20) (begin (define num_elem (/ (hvx:get-length num_20 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_20) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_20)) " " " " (if (lit? num_21) (begin (define num_elem (/ (hvx:get-length num_21 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_21) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_21)) " " " " (if (lit? num_22) (begin (define num_elem (/ (hvx:get-length num_22 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_22) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_22)) " " " " (if (lit? num_23) (begin (define num_elem (/ (hvx:get-length num_23 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_23) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_23)) " " " " (if (lit? num_24) (begin (define num_elem (/ (hvx:get-length num_24 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_24) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_24)) " " " " (if (lit? num_25) (begin (define num_elem (/ (hvx:get-length num_25 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_25) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_25)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vnot_128B_dsl v0 size_i_o num_2 num_3 num_4 prec_i_o num_6) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vnot_128B_dsl " (if (lit? v0) (begin (define num_elem (/ (hvx:get-length v0 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_2) (begin (define num_elem (/ (hvx:get-length num_2 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_2) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_2)) " " " " (if (lit? num_3) (begin (define num_elem (/ (hvx:get-length num_3 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_3) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (begin (define num_elem (/ (hvx:get-length num_4 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? prec_i_o) (begin (define num_elem (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i_o)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i_o) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_pred_or_n_128B_dsl v0 v1 size_o num_3 num_4 num_5 prec_o num_7) 
	(string-append "\n" 
	(string-append "(hexagon_V6_pred_or_n_128B_dsl " (if (lit? v0) (hvx:hydride-printer v0) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (hvx:hydride-printer v1) (hvx:hydride-printer v1)) " " " " (if (lit? size_o) (hvx:hydride-printer size_o) (hvx:hydride-printer size_o)) " " " " (if (lit? num_3) (hvx:hydride-printer num_3) (hvx:hydride-printer num_3)) " " " " (if (lit? num_4) (hvx:hydride-printer num_4) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (hvx:hydride-printer num_5) (hvx:hydride-printer num_5)) " " " " (if (lit? prec_o) (hvx:hydride-printer prec_o) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_7) (hvx:hydride-printer num_7) (hvx:hydride-printer num_7)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpyewuh_64_128B_dsl vc_0 vc_1 v2 v3 size_i_o num_5 num_6 num_7 num_8 num_9 num_10 num_11 num_12 num_13 num_14 num_15 num_16 prec_o num_18 num_19 num_20 num_21 num_22 prec_i num_24) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpyewuh_64_128B_dsl " (if (lit? vc_0) (begin (define num_elem (/ (hvx:get-length vc_0 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define num_elem (/ (hvx:get-length vc_1 (vector 0)) prec_i)) (string-append (hvx:hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer vc_1)) " " " " (if (lit? v2) (begin (define num_elem (/ (hvx:get-length v2 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? v3) (begin (define num_elem (/ (hvx:get-length v3 (vector 0)) prec_i)) (string-append (hvx:hydride-printer v3) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer v3)) " " " " (if (lit? size_i_o) (begin (define num_elem (/ (hvx:get-length size_i_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_5) (begin (define num_elem (/ (hvx:get-length num_5 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define num_elem (/ (hvx:get-length num_6 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define num_elem (/ (hvx:get-length num_7 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define num_elem (/ (hvx:get-length num_8 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define num_elem (/ (hvx:get-length num_9 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define num_elem (/ (hvx:get-length num_10 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define num_elem (/ (hvx:get-length num_11 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define num_elem (/ (hvx:get-length num_12 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define num_elem (/ (hvx:get-length num_13 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define num_elem (/ (hvx:get-length num_14 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define num_elem (/ (hvx:get-length num_15 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define num_elem (/ (hvx:get-length num_16 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " (if (lit? prec_o) (begin (define num_elem (/ (hvx:get-length prec_o (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_o) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_o)) " " " " (if (lit? num_18) (begin (define num_elem (/ (hvx:get-length num_18 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_18) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_18)) " " " " (if (lit? num_19) (begin (define num_elem (/ (hvx:get-length num_19 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_19) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_19)) " " " " (if (lit? num_20) (begin (define num_elem (/ (hvx:get-length num_20 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_20) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_20)) " " " " (if (lit? num_21) (begin (define num_elem (/ (hvx:get-length num_21 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_21) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_21)) " " " " (if (lit? num_22) (begin (define num_elem (/ (hvx:get-length num_22 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_22) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_22)) " " " " (if (lit? prec_i) (begin (define num_elem (/ (hvx:get-length prec_i (vector 0)) prec_i)) (string-append (hvx:hydride-printer prec_i) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer prec_i)) " " " " (if (lit? num_24) (begin (define num_elem (/ (hvx:get-length num_24 (vector 0)) prec_i)) (string-append (hvx:hydride-printer num_24) " ; " "<" (~s num_elem) " x i" (~s prec_i) ">" "\n" )) (hvx:hydride-printer num_24)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]

[(hexagon_V6_vshuffvdd_128B_dsl v0 v1 v2 size_o num_4 num_5 size_i num_7 num_8) 
 (define lit-val 
   (destruct v2
             [(lit val) val]
             [_ (error "Unknown type")]
             )
   )
(define prec-arg (cond
[(equal? -1 (bitvector->integer lit-val))  8]
[(equal? -2 (bitvector->integer lit-val))  16]
[(equal? -4 (bitvector->integer lit-val))  32]
))
	(string-append "\n" 
(string-append "(hexagon_V6_vshuffvdd_128B_dsl " (if (lit? v0) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length v0 (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length v0 (vector 0)) (hvx:get-prec v0 (vector 0))) (/ (hvx:get-prec v0 (vector 0))) )] [else (values (/ (hvx:get-length v0 (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length v1 (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length v1 (vector 0)) (hvx:get-prec v1 (vector 0))) (/ (hvx:get-prec v1 (vector 0))) )] [else (values (/ (hvx:get-length v1 (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define-values (num_elem arg_prec) (values 1 32))(string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_o) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length size_o (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length size_o (vector 0)) (hvx:get-prec size_o (vector 0))) (/ (hvx:get-prec size_o (vector 0))) )] [else (values (/ (hvx:get-length size_o (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer size_o)) " " " " (if (lit? num_4) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_4 (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length num_4 (vector 0)) (hvx:get-prec num_4 (vector 0))) (/ (hvx:get-prec num_4 (vector 0))) )] [else (values (/ (hvx:get-length num_4 (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_5 (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length num_5 (vector 0)) (hvx:get-prec num_5 (vector 0))) (/ (hvx:get-prec num_5 (vector 0))) )] [else (values (/ (hvx:get-length num_5 (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? size_i) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length size_i (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length size_i (vector 0)) (hvx:get-prec size_i (vector 0))) (/ (hvx:get-prec size_i (vector 0))) )] [else (values (/ (hvx:get-length size_i (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer size_i) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer size_i)) " " " " (if (lit? num_7) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_7 (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length num_7 (vector 0)) (hvx:get-prec num_7 (vector 0))) (/ (hvx:get-prec num_7 (vector 0))) )] [else (values (/ (hvx:get-length num_7 (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_8 (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length num_8 (vector 0)) (hvx:get-prec num_8 (vector 0))) (/ (hvx:get-prec num_8 (vector 0))) )] [else (values (/ (hvx:get-length num_8 (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " ")")

	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]

[(hexagon_V6_vdealvdd_128B_dsl v0 v1 v2 size_o num_4 num_5 num_6 num_7 num_8 num_9 num_10 num_11 num_12 num_13 num_14 num_15 num_16 num_17 num_18) 
 (define lit-val 
   (destruct v2
             [(lit val) val]
             [_ (error "Unknown type")]
             )
   )
(define prec-arg (cond
[(equal? -1 (bitvector->integer lit-val))  8]
[(equal? -2 (bitvector->integer lit-val))  16]
[(equal? -4 (bitvector->integer lit-val))  32]
))
	(string-append "\n" 
(string-append "(hexagon_V6_vdealvdd_128B_dsl " (if (lit? v0) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length v0 (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length v0 (vector 0)) (hvx:get-prec v0 (vector 0))) (/ (hvx:get-prec v0 (vector 0))) )] [else (values (/ (hvx:get-length v0 (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer v0) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer v0)) " " " " (if (lit? v1) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length v1 (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length v1 (vector 0)) (hvx:get-prec v1 (vector 0))) (/ (hvx:get-prec v1 (vector 0))) )] [else (values (/ (hvx:get-length v1 (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer v1) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer v1)) " " " " (if (lit? v2) (begin (define-values (num_elem arg_prec) (values 1 32)) (string-append (hvx:hydride-printer v2) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer v2)) " " " " (if (lit? size_o) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length size_o (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length size_o (vector 0)) (hvx:get-prec size_o (vector 0))) (/ (hvx:get-prec size_o (vector 0))) )] [else (values (/ (hvx:get-length size_o (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer size_o) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer size_o)) " " " " (if (lit? num_4) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_4 (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length num_4 (vector 0)) (hvx:get-prec num_4 (vector 0))) (/ (hvx:get-prec num_4 (vector 0))) )] [else (values (/ (hvx:get-length num_4 (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer num_4) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_4)) " " " " (if (lit? num_5) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_5 (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length num_5 (vector 0)) (hvx:get-prec num_5 (vector 0))) (/ (hvx:get-prec num_5 (vector 0))) )] [else (values (/ (hvx:get-length num_5 (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer num_5) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_5)) " " " " (if (lit? num_6) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_6 (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length num_6 (vector 0)) (hvx:get-prec num_6 (vector 0))) (/ (hvx:get-prec num_6 (vector 0))) )] [else (values (/ (hvx:get-length num_6 (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer num_6) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_6)) " " " " (if (lit? num_7) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_7 (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length num_7 (vector 0)) (hvx:get-prec num_7 (vector 0))) (/ (hvx:get-prec num_7 (vector 0))) )] [else (values (/ (hvx:get-length num_7 (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_8 (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length num_8 (vector 0)) (hvx:get-prec num_8 (vector 0))) (/ (hvx:get-prec num_8 (vector 0))) )] [else (values (/ (hvx:get-length num_8 (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_9 (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length num_9 (vector 0)) (hvx:get-prec num_9 (vector 0))) (/ (hvx:get-prec num_9 (vector 0))) )] [else (values (/ (hvx:get-length num_9 (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? num_10) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_10 (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length num_10 (vector 0)) (hvx:get-prec num_10 (vector 0))) (/ (hvx:get-prec num_10 (vector 0))) )] [else (values (/ (hvx:get-length num_10 (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer num_10) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_10)) " " " " (if (lit? num_11) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_11 (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length num_11 (vector 0)) (hvx:get-prec num_11 (vector 0))) (/ (hvx:get-prec num_11 (vector 0))) )] [else (values (/ (hvx:get-length num_11 (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_12 (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length num_12 (vector 0)) (hvx:get-prec num_12 (vector 0))) (/ (hvx:get-prec num_12 (vector 0))) )] [else (values (/ (hvx:get-length num_12 (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_13 (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length num_13 (vector 0)) (hvx:get-prec num_13 (vector 0))) (/ (hvx:get-prec num_13 (vector 0))) )] [else (values (/ (hvx:get-length num_13 (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_14 (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length num_14 (vector 0)) (hvx:get-prec num_14 (vector 0))) (/ (hvx:get-prec num_14 (vector 0))) )] [else (values (/ (hvx:get-length num_14 (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_15 (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length num_15 (vector 0)) (hvx:get-prec num_15 (vector 0))) (/ (hvx:get-prec num_15 (vector 0))) )] [else (values (/ (hvx:get-length num_15 (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_16 (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length num_16 (vector 0)) (hvx:get-prec num_16 (vector 0))) (/ (hvx:get-prec num_16 (vector 0))) )] [else (values (/ (hvx:get-length num_16 (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " (if (lit? num_17) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_17 (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length num_17 (vector 0)) (hvx:get-prec num_17 (vector 0))) (/ (hvx:get-prec num_17 (vector 0))) )] [else (values (/ (hvx:get-length num_17 (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " (if (lit? num_18) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_18 (vector 0)) prec-arg) 1)  (values  (/ (hvx:get-length num_18 (vector 0)) (hvx:get-prec num_18 (vector 0))) (/ (hvx:get-prec num_18 (vector 0))) )] [else (values (/ (hvx:get-length num_18 (vector 0)) prec-arg) prec-arg)]))(string-append (hvx:hydride-printer num_18) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_18)) " " " " ")")

	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
[(hexagon_V6_vmpyhvsrs_128B_dsl vc_0 vc_1 vc_2 vc_3 v4 v5 size_i_o num_7 num_8 num_9 prec_i_o num_11 num_12 num_13 num_14 num_15 num_16 num_17 num_18 num_19 num_20 num_21 num_22 num_23) 
	(string-append "\n" 
	(string-append "(hexagon_V6_vmpyhvsrs_128B_dsl " (if (lit? vc_0) (begin (define-values (num_elem arg_prec) (values 1 32))(string-append (hvx:hydride-printer vc_0) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer vc_0)) " " " " (if (lit? vc_1) (begin (define-values (num_elem arg_prec) (values 1 32))(string-append (hvx:hydride-printer vc_1) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer vc_1)) " " " " (if (lit? vc_2) (begin (define-values (num_elem arg_prec) (values 1 32))(string-append (hvx:hydride-printer vc_2) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer vc_2)) " " " " (if (lit? vc_3) (begin (define-values (num_elem arg_prec) (values 1 64))(string-append (hvx:hydride-printer vc_3) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer vc_3)) " " " " (if (lit? v4) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length v4 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length v4 (vector 0)) (hvx:get-prec v4 (vector 0))) (/ (hvx:get-prec v4 (vector 0))) )] [else (values (/ (hvx:get-length v4 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer v4) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer v4)) " " " " (if (lit? v5) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length v5 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length v5 (vector 0)) (hvx:get-prec v5 (vector 0))) (/ (hvx:get-prec v5 (vector 0))) )] [else (values (/ (hvx:get-length v5 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer v5) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer v5)) " " " " (if (lit? size_i_o) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length size_i_o (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length size_i_o (vector 0)) (hvx:get-prec size_i_o (vector 0))) (/ (hvx:get-prec size_i_o (vector 0))) )] [else (values (/ (hvx:get-length size_i_o (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer size_i_o) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer size_i_o)) " " " " (if (lit? num_7) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_7 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length num_7 (vector 0)) (hvx:get-prec num_7 (vector 0))) (/ (hvx:get-prec num_7 (vector 0))) )] [else (values (/ (hvx:get-length num_7 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer num_7) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_7)) " " " " (if (lit? num_8) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_8 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length num_8 (vector 0)) (hvx:get-prec num_8 (vector 0))) (/ (hvx:get-prec num_8 (vector 0))) )] [else (values (/ (hvx:get-length num_8 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer num_8) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_8)) " " " " (if (lit? num_9) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_9 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length num_9 (vector 0)) (hvx:get-prec num_9 (vector 0))) (/ (hvx:get-prec num_9 (vector 0))) )] [else (values (/ (hvx:get-length num_9 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer num_9) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_9)) " " " " (if (lit? prec_i_o) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length prec_i_o (vector 0)) (hvx:get-prec prec_i_o (vector 0))) (/ (hvx:get-prec prec_i_o (vector 0))) )] [else (values (/ (hvx:get-length prec_i_o (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer prec_i_o) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer prec_i_o)) " " " " (if (lit? num_11) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_11 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length num_11 (vector 0)) (hvx:get-prec num_11 (vector 0))) (/ (hvx:get-prec num_11 (vector 0))) )] [else (values (/ (hvx:get-length num_11 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer num_11) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_11)) " " " " (if (lit? num_12) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_12 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length num_12 (vector 0)) (hvx:get-prec num_12 (vector 0))) (/ (hvx:get-prec num_12 (vector 0))) )] [else (values (/ (hvx:get-length num_12 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer num_12) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_12)) " " " " (if (lit? num_13) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_13 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length num_13 (vector 0)) (hvx:get-prec num_13 (vector 0))) (/ (hvx:get-prec num_13 (vector 0))) )] [else (values (/ (hvx:get-length num_13 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer num_13) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_13)) " " " " (if (lit? num_14) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_14 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length num_14 (vector 0)) (hvx:get-prec num_14 (vector 0))) (/ (hvx:get-prec num_14 (vector 0))) )] [else (values (/ (hvx:get-length num_14 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer num_14) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_14)) " " " " (if (lit? num_15) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_15 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length num_15 (vector 0)) (hvx:get-prec num_15 (vector 0))) (/ (hvx:get-prec num_15 (vector 0))) )] [else (values (/ (hvx:get-length num_15 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer num_15) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_15)) " " " " (if (lit? num_16) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_16 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length num_16 (vector 0)) (hvx:get-prec num_16 (vector 0))) (/ (hvx:get-prec num_16 (vector 0))) )] [else (values (/ (hvx:get-length num_16 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer num_16) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_16)) " " " " (if (lit? num_17) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_17 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length num_17 (vector 0)) (hvx:get-prec num_17 (vector 0))) (/ (hvx:get-prec num_17 (vector 0))) )] [else (values (/ (hvx:get-length num_17 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer num_17) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_17)) " " " " (if (lit? num_18) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_18 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length num_18 (vector 0)) (hvx:get-prec num_18 (vector 0))) (/ (hvx:get-prec num_18 (vector 0))) )] [else (values (/ (hvx:get-length num_18 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer num_18) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_18)) " " " " (if (lit? num_19) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_19 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length num_19 (vector 0)) (hvx:get-prec num_19 (vector 0))) (/ (hvx:get-prec num_19 (vector 0))) )] [else (values (/ (hvx:get-length num_19 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer num_19) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_19)) " " " " (if (lit? num_20) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_20 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length num_20 (vector 0)) (hvx:get-prec num_20 (vector 0))) (/ (hvx:get-prec num_20 (vector 0))) )] [else (values (/ (hvx:get-length num_20 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer num_20) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_20)) " " " " (if (lit? num_21) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_21 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length num_21 (vector 0)) (hvx:get-prec num_21 (vector 0))) (/ (hvx:get-prec num_21 (vector 0))) )] [else (values (/ (hvx:get-length num_21 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer num_21) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_21)) " " " " (if (lit? num_22) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_22 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length num_22 (vector 0)) (hvx:get-prec num_22 (vector 0))) (/ (hvx:get-prec num_22 (vector 0))) )] [else (values (/ (hvx:get-length num_22 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer num_22) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_22)) " " " " (if (lit? num_23) (begin (define-values (num_elem arg_prec) (cond [(< (/ (hvx:get-length num_23 (vector 0)) prec_i_o) 1)  (values  (/ (hvx:get-length num_23 (vector 0)) (hvx:get-prec num_23 (vector 0))) (/ (hvx:get-prec num_23 (vector 0))) )] [else (values (/ (hvx:get-length num_23 (vector 0)) prec_i_o) prec_i_o)]))(string-append (hvx:hydride-printer num_23) " ; " "<" (~s num_elem) " x i" (~s arg_prec) ">" "\n" )) (hvx:hydride-printer num_23)) " " " " ")")
	(string-append ";" "<" (~s (/ (hvx:get-length prog (vector 0)) (hvx:get-prec prog (vector 0))) ) " x " "i" (~s (hvx:get-prec prog (vector 0))) ">") "\n")]
	[v (~s v)]
 )
)
;; ================================================================================
