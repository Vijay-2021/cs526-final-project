; ModuleID = 'sobel3x3'
source_filename = "/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/posix_allocator.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64--linux-gnu"

%struct.timespec = type { i64, i64 }
%"struct.Halide::Runtime::Internal::Synchronization::hash_table" = type { [1024 x %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"] }
%"struct.Halide::Runtime::Internal::Synchronization::hash_bucket" = type { %"class.Halide::Runtime::Internal::Synchronization::word_lock", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* }
%"class.Halide::Runtime::Internal::Synchronization::word_lock" = type { i64 }
%"struct.Halide::Runtime::Internal::Synchronization::queue_data" = type { %"struct.Halide::Runtime::Internal::Synchronization::thread_parker", i64, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, i64 }
%"struct.Halide::Runtime::Internal::Synchronization::thread_parker" = type <{ %struct.pthread_mutex_t, %struct.pthread_mutex_t, i8, [7 x i8] }>
%struct.pthread_mutex_t = type { [8 x i64] }
%"struct.Halide::Runtime::Internal::work_queue_t" = type { %struct.halide_mutex, i32, i32, %"struct.Halide::Runtime::Internal::work"*, i32, i32, i32, [4 x i8], %struct.halide_mutex, %struct.halide_mutex, %struct.halide_mutex, i32, i32, [256 x %struct.halide_thread*], i8, i8, i32 }
%"struct.Halide::Runtime::Internal::work" = type { %struct.halide_parallel_task_t, i32 (i8*, i32, i8*)*, %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"*, i32, %"struct.Halide::Runtime::Internal::work"*, i32, i8*, i32, i32, i32, i8 }
%struct.halide_parallel_task_t = type { i32 (i8*, i32, i32, i8*, i8*)*, i8*, i8*, %struct.halide_semaphore_acquire_t*, i32, i32, i32, i32, i8, [7 x i8] }
%struct.halide_semaphore_acquire_t = type { %struct.halide_semaphore_t*, i32, [4 x i8] }
%struct.halide_semaphore_t = type { [2 x i64] }
%struct.halide_mutex = type { [1 x i64] }
%struct.halide_thread = type opaque
%"class.Halide::Runtime::Internal::TraceBuffer" = type { %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock", i32, i32, [1048576 x i8] }
%"class.Halide::Runtime::Internal::SharedExclusiveSpinLock" = type { i32 }
%struct.halide_trace_event_t = type <{ i8*, i8*, i32*, i8*, %struct.halide_type_t, i32, i32, i32, i32, [4 x i8] }>
%struct.halide_type_t = type { i8, i8, i16 }
%"struct.Halide::Runtime::Internal::CacheEntry" = type { %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"*, i8*, i64, i8*, i32, i32, i32, i32, %struct.halide_dimension_t*, %struct.halide_buffer_t*, i64, i8, [7 x i8] }
%struct.halide_dimension_t = type { i32, i32, i32, i32 }
%struct.halide_buffer_t = type { i64, %struct.halide_device_interface_t*, i8*, i64, %struct.halide_type_t, i32, %struct.halide_dimension_t*, i8* }
%struct.halide_device_interface_t = type { i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, void (i8*, %struct.halide_device_interface_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, i32, i32, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, i64, %struct.halide_device_interface_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, i32*, i32*)*, %struct.halide_device_interface_impl_t* }
%struct.halide_device_interface_impl_t = type { void ()*, void ()*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, i32, i32, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, i64)*, i32 (i8*, %struct.halide_buffer_t*)* }
%struct.halide_device_allocation_pool = type { i32 (i8*)*, %struct.halide_device_allocation_pool* }
%struct.halide_profiler_state = type { %struct.halide_mutex, i32, i32, i32, i32, %struct.halide_profiler_pipeline_stats*, void (i32*, i32*)*, %struct.halide_thread* }
%struct.halide_profiler_pipeline_stats = type { i64, i64, i64, i64, i64, i64, i8*, %struct.halide_profiler_func_stats*, i8*, i32, i32, i32, i32, i32, [4 x i8] }
%struct.halide_profiler_func_stats = type { i64, i64, i64, i64, i64, i64, i64, i8*, i32, [4 x i8] }
%struct.halide_filter_argument_t = type { i8*, i32, i32, %struct.halide_type_t, %struct.halide_scalar_value_t*, %struct.halide_scalar_value_t*, %struct.halide_scalar_value_t*, %struct.halide_scalar_value_t*, i64** }
%struct.halide_scalar_value_t = type { %union.anon.28 }
%union.anon.28 = type { double }
%struct.halide_filter_metadata_t = type { i32, i32, %struct.halide_filter_argument_t*, i8*, i8* }
%"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control" = type { %"struct.Halide::Runtime::Internal::Synchronization::parking_control", i64* }
%"struct.Halide::Runtime::Internal::Synchronization::parking_control" = type { i32 (...)** }
%"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data" = type { %"struct.Halide::Runtime::Internal::Synchronization::thread_parker", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* }
%"struct.Halide::Runtime::Internal::Synchronization::validate_action" = type { i8, [7 x i8], i64 }
%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control" = type { %"struct.Halide::Runtime::Internal::Synchronization::parking_control", i64*, %"class.Halide::Runtime::Internal::Synchronization::word_lock"* }
%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair" = type { %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* }
%"struct.Halide::Runtime::Internal::spawned_thread" = type { void (i8*)*, i8*, i64 }
%struct.halide_mutex_array = type { %struct.halide_mutex* }
%"struct.Halide::Runtime::Internal::halide_tiff_header" = type <{ i16, i16, i32, i16, [15 x %"struct.Halide::Runtime::Internal::tiff_tag"], i32, [2 x i32], [2 x i32] }>
%"struct.Halide::Runtime::Internal::tiff_tag" = type { i16, i16, i32, %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock" }
%"struct.Halide::Runtime::Internal::CacheBlockHeader" = type { %"struct.Halide::Runtime::Internal::CacheEntry"*, i32, [4 x i8] }
%"struct.Halide::Runtime::Internal::device_copy" = type { i64, i64, i64, [16 x i64], [16 x i64], [16 x i64], i64 }
%"struct.Halide::Runtime::Internal::CpuFeatures" = type { [2 x i64], [2 x i64] }

$_ZN6Halide7Runtime8Internal15Synchronization21mutex_parking_control8validateERNS2_15validate_actionE = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization15parking_control12before_sleepEv = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization21mutex_parking_control6unparkEib = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization15parking_control16requeue_callbackERKNS2_15validate_actionEbb = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control8validateERNS2_15validate_actionE = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control12before_sleepEv = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control6unparkEib = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization25broadcast_parking_control8validateERNS2_15validate_actionE = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization15parking_control6unparkEib = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization25broadcast_parking_control16requeue_callbackERKNS2_15validate_actionEbb = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization15parking_control8validateERNS2_15validate_actionE = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization22signal_parking_control6unparkEib = comdat any

$_ZTVN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE = comdat any

$_ZTVN6Halide7Runtime8Internal15Synchronization20wait_parking_controlE = comdat any

$_ZTVN6Halide7Runtime8Internal15Synchronization25broadcast_parking_controlE = comdat any

$_ZTVN6Halide7Runtime8Internal15Synchronization22signal_parking_controlE = comdat any

@_ZN6Halide7Runtime8Internal13custom_mallocE = linkonce local_unnamed_addr global i8* (i8*, i64)* @halide_default_malloc, align 8
@_ZN6Halide7Runtime8Internal11custom_freeE = linkonce local_unnamed_addr global void (i8*, i8*)* @halide_default_free, align 8
@_ZN6Halide7Runtime8Internal13error_handlerE = linkonce local_unnamed_addr global void (i8*, i8*)* @halide_default_error, align 8
@.str = private unnamed_addr constant [8 x i8] c"Error: \00", align 1
@_ZN6Halide7Runtime8Internal12custom_printE = linkonce local_unnamed_addr global void (i8*, i8*)* @halide_default_print, align 8
@halide_reference_clock_inited = linkonce local_unnamed_addr global i8 0, align 1
@halide_reference_clock = linkonce global %struct.timespec zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal15Synchronization5tableE = linkonce global %"struct.Halide::Runtime::Internal::Synchronization::hash_table" zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal10work_queueE = linkonce global %"struct.Halide::Runtime::Internal::work_queue_t" { %struct.halide_mutex zeroinitializer, i32 0, i32 0, %"struct.Halide::Runtime::Internal::work"* null, i32 0, i32 0, i32 0, [4 x i8] undef, %struct.halide_mutex zeroinitializer, %struct.halide_mutex zeroinitializer, %struct.halide_mutex zeroinitializer, i32 0, i32 0, [256 x %struct.halide_thread*] zeroinitializer, i8 0, i8 0, i32 0 }, align 8
@_ZN6Halide7Runtime8Internal14custom_do_taskE = linkonce local_unnamed_addr global i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* @halide_default_do_task, align 8
@_ZN6Halide7Runtime8Internal19custom_do_loop_taskE = linkonce local_unnamed_addr global i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* @halide_default_do_loop_task, align 8
@_ZN6Halide7Runtime8Internal17custom_do_par_forE = linkonce local_unnamed_addr global i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* @halide_default_do_par_for, align 8
@_ZTVN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE = linkonce_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)* @_ZN6Halide7Runtime8Internal15Synchronization21mutex_parking_control8validateERNS2_15validate_actionE to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control12before_sleepEv to i8*), i8* bitcast (i64 (%"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"*, i32, i1)* @_ZN6Halide7Runtime8Internal15Synchronization21mutex_parking_control6unparkEib to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control16requeue_callbackERKNS2_15validate_actionEbb to i8*)] }, comdat, align 8
@.str.5 = private unnamed_addr constant [158 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/synchronization_common.h:386 halide_abort_if_false() failed: next != nullptr\0A\00", align 1
@_ZTVN6Halide7Runtime8Internal15Synchronization20wait_parking_controlE = linkonce_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)* @_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control8validateERNS2_15validate_actionE to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"*)* @_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control12before_sleepEv to i8*), i8* bitcast (i64 (%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"*, i32, i1)* @_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control6unparkEib to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control16requeue_callbackERKNS2_15validate_actionEbb to i8*)] }, comdat, align 8
@.str.5.6 = private unnamed_addr constant [152 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/synchronization_common.h:994 halide_abort_if_false() failed: val & 0x1\0A\00", align 1
@_ZTVN6Halide7Runtime8Internal15Synchronization25broadcast_parking_controlE = linkonce_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)* @_ZN6Halide7Runtime8Internal15Synchronization25broadcast_parking_control8validateERNS2_15validate_actionE to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control12before_sleepEv to i8*), i8* bitcast (i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control6unparkEib to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)* @_ZN6Halide7Runtime8Internal15Synchronization25broadcast_parking_control16requeue_callbackERKNS2_15validate_actionEbb to i8*)] }, comdat, align 8
@.str.6 = private unnamed_addr constant [214 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/thread_pool_common.h:155 halide_abort_if_false() failed: bytes == limit && \22Logic error in thread pool work queue initialization.\\n\22\0A\00", align 1
@.str.3 = private unnamed_addr constant [291 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/thread_pool_common.h:527 halide_abort_if_false() failed: (min_threads <= ((task_parent->task.min_threads * task_parent->active_workers) - task_parent->threads_reserved)) && \22Logic error: thread over commit.\\n\22\0A\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"HL_NUM_THREADS\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"HL_NUMTHREADS\00", align 1
@_ZN6Halide7Runtime8Internal24custom_do_parallel_tasksE = linkonce local_unnamed_addr global i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)* @halide_default_do_parallel_tasks, align 8
@_ZN6Halide7Runtime8Internal21custom_semaphore_initE = linkonce local_unnamed_addr global i32 (%struct.halide_semaphore_t*, i32)* @halide_default_semaphore_init, align 8
@_ZN6Halide7Runtime8Internal28custom_semaphore_try_acquireE = linkonce local_unnamed_addr global i1 (%struct.halide_semaphore_t*, i32)* @halide_default_semaphore_try_acquire, align 8
@_ZN6Halide7Runtime8Internal24custom_semaphore_releaseE = linkonce local_unnamed_addr global i32 (%struct.halide_semaphore_t*, i32)* @halide_default_semaphore_release, align 8
@llvm.global_dtors = appending global [4 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @halide_thread_pool_cleanup, i8* null }, { i32, void ()*, i8* } { i32 65535, void ()* @halide_trace_cleanup, i8* null }, { i32, void ()*, i8* } { i32 65535, void ()* @halide_cache_cleanup, i8* null }, { i32, void ()*, i8* } { i32 65535, void ()* @halide_profiler_shutdown, i8* null }]
@_ZTVN6Halide7Runtime8Internal15Synchronization22signal_parking_controlE = linkonce_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control8validateERNS2_15validate_actionE to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control12before_sleepEv to i8*), i8* bitcast (i64 (%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"*, i32, i1)* @_ZN6Halide7Runtime8Internal15Synchronization22signal_parking_control6unparkEib to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control16requeue_callbackERKNS2_15validate_actionEbb to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [38 x i8] c"halide_set_num_threads: must be >= 0.\00", align 1
@_ZN6Halide7Runtime8Internal17custom_get_symbolE = linkonce local_unnamed_addr global i8* (i8*)* @halide_default_get_symbol, align 8
@_ZN6Halide7Runtime8Internal19custom_load_libraryE = linkonce local_unnamed_addr global i8* (i8*)* @halide_default_load_library, align 8
@_ZN6Halide7Runtime8Internal25custom_get_library_symbolE = linkonce local_unnamed_addr global i8* (i8*, i8*)* @halide_default_get_library_symbol, align 8
@_ZN6Halide7Runtime8Internal17halide_gpu_deviceE = linkonce local_unnamed_addr global i32 0, align 4
@_ZN6Halide7Runtime8Internal22halide_gpu_device_lockE = linkonce global i8 0, align 1
@_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE = linkonce local_unnamed_addr global i8 0, align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"HL_GPU_DEVICE\00", align 1
@_ZN6Halide7Runtime8Internal19halide_trace_bufferE = linkonce local_unnamed_addr global %"class.Halide::Runtime::Internal::TraceBuffer"* null, align 8
@_ZN6Halide7Runtime8Internal17halide_trace_fileE = linkonce local_unnamed_addr global i32 -1, align 4
@_ZN6Halide7Runtime8Internal22halide_trace_file_lockE = linkonce global i8 0, align 1
@_ZN6Halide7Runtime8Internal29halide_trace_file_initializedE = linkonce local_unnamed_addr global i8 0, align 1
@_ZN6Halide7Runtime8Internal35halide_trace_file_internally_openedE = linkonce local_unnamed_addr global i8* null, align 8
@_ZN6Halide7Runtime8Internal19halide_custom_traceE = linkonce local_unnamed_addr global i32 (i8*, %struct.halide_trace_event_t*)* @halide_default_trace, align 8
@_ZZ20halide_default_traceE3ids = internal global i32 1, align 4
@.str.32 = private unnamed_addr constant [172 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/tracing.cpp:115 halide_abort_if_false() failed: success && \22Could not write to trace file\22\0A\00", align 1
@.str.31 = private unnamed_addr constant [148 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/tracing.cpp:87 halide_abort_if_false() failed: size <= buffer_size\0A\00", align 1
@.str.1.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2.11 = private unnamed_addr constant [168 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/tracing.cpp:218 halide_abort_if_false() failed: print_bits <= 64 && \22Tracing bad type\22\0A\00", align 1
@__const.halide_default_trace.event_types = private unnamed_addr constant [11 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.12, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4.13, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5.14, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.15, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8.16, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.17, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i32 0, i32 0)], align 8
@.str.17 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c">)\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c">, <\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c" = <\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c" = \00", align 1
@.str.24 = private unnamed_addr constant [170 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/tracing.cpp:287 halide_abort_if_false() failed: print_bits >= 16 && \22Tracing a bad type\22\0A\00", align 1
@.str.25 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c" tag = \22\00", align 1
@.str.27 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.3.12 = private unnamed_addr constant [5 x i8] c"Load\00", align 1
@.str.4.13 = private unnamed_addr constant [6 x i8] c"Store\00", align 1
@.str.5.14 = private unnamed_addr constant [18 x i8] c"Begin realization\00", align 1
@.str.6.15 = private unnamed_addr constant [16 x i8] c"End realization\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"Produce\00", align 1
@.str.8.16 = private unnamed_addr constant [12 x i8] c"End produce\00", align 1
@.str.9.17 = private unnamed_addr constant [8 x i8] c"Consume\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"End consume\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"Begin pipeline\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"End pipeline\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"Tag\00", align 1
@.str.28 = private unnamed_addr constant [14 x i8] c"HL_TRACE_FILE\00", align 1
@.str.29 = private unnamed_addr constant [3 x i8] c"ab\00", align 1
@.str.30 = private unnamed_addr constant [167 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/tracing.cpp:351 halide_abort_if_false() failed: file && \22Failed to open trace file\\n\22\0A\00", align 1
@_ZN6Halide7Runtime8Internal30pixel_type_to_tiff_sample_typeE = linkonce local_unnamed_addr global [10 x i16] [i16 3, i16 3, i16 1, i16 2, i16 1, i16 2, i16 1, i16 2, i16 1, i16 2], align 2
@_ZN6Halide7Runtime8Internal31pixel_type_to_matlab_class_codeE = linkonce local_unnamed_addr global [10 x i8] c"\07\06\09\08\0B\0A\0D\0C\0F\0E", align 1
@_ZN6Halide7Runtime8Internal30pixel_type_to_matlab_type_codeE = linkonce local_unnamed_addr global [10 x i8] c"\07\09\02\01\04\03\06\05\0D\0C", align 1
@.str.34 = private unnamed_addr constant [51 x i8] c"Bounds query buffer passed to halide_debug_to_file\00", align 1
@.str.1.35 = private unnamed_addr constant [59 x i8] c"Can't debug_to_file a Func with more than four dimensions\0A\00", align 1
@.str.2.36 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.3.37 = private unnamed_addr constant [6 x i8] c".tiff\00", align 1
@.str.4.38 = private unnamed_addr constant [5 x i8] c".tif\00", align 1
@.str.5.39 = private unnamed_addr constant [5 x i8] c".mat\00", align 1
@__const.halide_debug_to_file.header = private unnamed_addr constant [129 x i8] c"MATLAB 5.0 MAT-file, produced by Halide                                                                                     \00\01IM\00", align 1
@.str.6.40 = private unnamed_addr constant [53 x i8] c"Can't debug_to_file to a .mat file greater than 4GB\0A\00", align 1
@_ZN6Halide7Runtime8Internal16memoization_lockE = linkonce global %struct.halide_mutex zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal13cache_entriesE = linkonce global [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*] zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal18most_recently_usedE = linkonce local_unnamed_addr global %"struct.Halide::Runtime::Internal::CacheEntry"* null, align 8
@_ZN6Halide7Runtime8Internal19least_recently_usedE = linkonce local_unnamed_addr global %"struct.Halide::Runtime::Internal::CacheEntry"* null, align 8
@_ZN6Halide7Runtime8Internal14max_cache_sizeE = linkonce local_unnamed_addr global i64 1048576, align 8
@_ZN6Halide7Runtime8Internal18current_cache_sizeE = linkonce local_unnamed_addr global i64 0, align 8
@.str.2.42 = private unnamed_addr constant [154 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/cache.cpp:284 halide_abort_if_false() failed: prev_hash_entry != nullptr\0A\00", align 1
@.str.3.43 = private unnamed_addr constant [157 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/cache.cpp:373 halide_abort_if_false() failed: entry->more_recent != nullptr\0A\00", align 1
@.str.4.44 = private unnamed_addr constant [156 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/cache.cpp:377 halide_abort_if_false() failed: least_recently_used == entry\0A\00", align 1
@.str.5.45 = private unnamed_addr constant [157 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/cache.cpp:380 halide_abort_if_false() failed: entry->more_recent != nullptr\0A\00", align 1
@.str.9.46 = private unnamed_addr constant [150 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/cache.cpp:472 halide_abort_if_false() failed: no_host_pointers_equal\0A\00", align 1
@.str.12.47 = private unnamed_addr constant [151 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/cache.cpp:550 halide_abort_if_false() failed: entry->in_use_count > 0\0A\00", align 1
@.str.50 = private unnamed_addr constant [10 x i8] c"<nullptr>\00", align 1
@.str.1.57 = private unnamed_addr constant [5 x i8] c"-nan\00", align 1
@.str.2.58 = private unnamed_addr constant [4 x i8] c"nan\00", align 1
@.str.3.59 = private unnamed_addr constant [5 x i8] c"-inf\00", align 1
@.str.4.60 = private unnamed_addr constant [4 x i8] c"inf\00", align 1
@.str.5.61 = private unnamed_addr constant [14 x i8] c"-0.000000e+00\00", align 1
@.str.6.62 = private unnamed_addr constant [13 x i8] c"0.000000e+00\00", align 1
@.str.7.63 = private unnamed_addr constant [10 x i8] c"-0.000000\00", align 1
@.str.8.64 = private unnamed_addr constant [9 x i8] c"0.000000\00", align 1
@.str.9.65 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.11.67 = private unnamed_addr constant [3 x i8] c"e+\00", align 1
@.str.12.68 = private unnamed_addr constant [3 x i8] c"e-\00", align 1
@.str.13.71 = private unnamed_addr constant [17 x i8] c"0123456789abcdef\00", align 1
@.str.18.72 = private unnamed_addr constant [14 x i8] c"bad_type_code\00", align 1
@.str.17.73 = private unnamed_addr constant [7 x i8] c"handle\00", align 1
@.str.16.74 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@.str.15.75 = private unnamed_addr constant [5 x i8] c"uint\00", align 1
@.str.14.76 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.19.77 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.20.78 = private unnamed_addr constant [8 x i8] c"nullptr\00", align 1
@.str.21.79 = private unnamed_addr constant [8 x i8] c"buffer(\00", align 1
@.str.23.82 = private unnamed_addr constant [4 x i8] c", {\00", align 1
@.str.24.83 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@_ZN6Halide7Runtime8Internal36halide_reuse_device_allocations_flagE = linkonce local_unnamed_addr global i8 1, align 1
@_ZN6Halide7Runtime8Internal21allocation_pools_lockE = linkonce global %struct.halide_mutex zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal23device_allocation_poolsE = linkonce local_unnamed_addr global %struct.halide_device_allocation_pool* null, align 8
@_ZN6Halide7Runtime8Internal17device_copy_mutexE = linkonce global %struct.halide_mutex zeroinitializer, align 8
@.str.6.88 = private unnamed_addr constant [20 x i8] c"halide_copy_to_host\00", align 1
@.str.7.89 = private unnamed_addr constant [22 x i8] c"halide_copy_to_device\00", align 1
@.str.9.90 = private unnamed_addr constant [61 x i8] c"halide_copy_to_device does not support switching interfaces\0A\00", align 1
@.str.17.91 = private unnamed_addr constant [21 x i8] c"halide_device_malloc\00", align 1
@.str.20.92 = private unnamed_addr constant [59 x i8] c"halide_device_malloc doesn't support switching interfaces\0A\00", align 1
@.str.16.93 = private unnamed_addr constant [19 x i8] c"halide_device_sync\00", align 1
@.str.21.96 = private unnamed_addr constant [19 x i8] c"halide_device_free\00", align 1
@.str.22.97 = private unnamed_addr constant [155 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/device_interface.cpp:252 halide_abort_if_false() failed: buf->device == 0\0A\00", align 1
@.str.23.98 = private unnamed_addr constant [30 x i8] c"halide_device_and_host_malloc\00", align 1
@.str.25.99 = private unnamed_addr constant [68 x i8] c"halide_device_and_host_malloc doesn't support switching interfaces\0A\00", align 1
@.str.26.100 = private unnamed_addr constant [42 x i8] c"allocating host and device memory failed\0A\00", align 1
@.str.27.101 = private unnamed_addr constant [28 x i8] c"halide_device_and_host_free\00", align 1
@.str.28.102 = private unnamed_addr constant [155 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/device_interface.cpp:317 halide_abort_if_false() failed: buf->device == 0\0A\00", align 1
@.str.29.103 = private unnamed_addr constant [38 x i8] c"halide_default_device_and_host_malloc\00", align 1
@.str.30.104 = private unnamed_addr constant [36 x i8] c"halide_default_device_and_host_free\00", align 1
@.str.31.105 = private unnamed_addr constant [26 x i8] c"halide_device_wrap_native\00", align 1
@.str.32.106 = private unnamed_addr constant [64 x i8] c"halide_device_wrap_native doesn't support switching interfaces\0A\00", align 1
@.str.33.107 = private unnamed_addr constant [28 x i8] c"halide_device_detach_native\00", align 1
@.str.34.108 = private unnamed_addr constant [155 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/device_interface.cpp:403 halide_abort_if_false() failed: buf->device == 0\0A\00", align 1
@.str.35 = private unnamed_addr constant [36 x i8] c"halide_default_device_detach_native\00", align 1
@.str.41 = private unnamed_addr constant [64 x i8] c"halide_buffer_copy does not support switching device interfaces\00", align 1
@.str.58 = private unnamed_addr constant [44 x i8] c"device_interface does not support cropping\0A\00", align 1
@.str.59 = private unnamed_addr constant [43 x i8] c"device_interface does not support slicing\0A\00", align 1
@.str.60 = private unnamed_addr constant [52 x i8] c"destination buffer already has a device allocation\0A\00", align 1
@.str.61 = private unnamed_addr constant [48 x i8] c"src and dst must have identical dimensionality\0A\00", align 1
@.str.64 = private unnamed_addr constant [52 x i8] c"dst must have exactly one fewer dimension than src\0A\00", align 1
@.str.111 = private unnamed_addr constant [41 x i8] c"Bounds inference call to external stage \00", align 1
@.str.1.112 = private unnamed_addr constant [27 x i8] c" returned non-zero value: \00", align 1
@.str.2.113 = private unnamed_addr constant [24 x i8] c"Call to external stage \00", align 1
@.str.3.114 = private unnamed_addr constant [18 x i8] c"Bounds given for \00", align 1
@.str.4.115 = private unnamed_addr constant [5 x i8] c" in \00", align 1
@.str.5.116 = private unnamed_addr constant [8 x i8] c" (from \00", align 1
@.str.6.117 = private unnamed_addr constant [5 x i8] c" to \00", align 1
@.str.7.118 = private unnamed_addr constant [38 x i8] c") do not cover required region (from \00", align 1
@.str.8.119 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.9.120 = private unnamed_addr constant [11 x i8] c" has type \00", align 1
@.str.10.121 = private unnamed_addr constant [38 x i8] c" but type of the buffer passed in is \00", align 1
@.str.11.122 = private unnamed_addr constant [31 x i8] c" requires a buffer of exactly \00", align 1
@.str.12.123 = private unnamed_addr constant [43 x i8] c" dimensions, but the buffer passed in has \00", align 1
@.str.13.124 = private unnamed_addr constant [12 x i8] c" dimensions\00", align 1
@.str.14.125 = private unnamed_addr constant [17 x i8] c" is accessed at \00", align 1
@.str.15.126 = private unnamed_addr constant [28 x i8] c", which is before the min (\00", align 1
@.str.16.127 = private unnamed_addr constant [16 x i8] c") in dimension \00", align 1
@.str.17.128 = private unnamed_addr constant [28 x i8] c", which is beyond the max (\00", align 1
@.str.18.129 = private unnamed_addr constant [29 x i8] c"Total allocation for buffer \00", align 1
@.str.19.130 = private unnamed_addr constant [5 x i8] c" is \00", align 1
@.str.20.131 = private unnamed_addr constant [37 x i8] c", which exceeds the maximum size of \00", align 1
@.str.21.132 = private unnamed_addr constant [24 x i8] c"The extents for buffer \00", align 1
@.str.22.133 = private unnamed_addr constant [12 x i8] c" dimension \00", align 1
@.str.23.134 = private unnamed_addr constant [15 x i8] c" is negative (\00", align 1
@.str.24.135 = private unnamed_addr constant [31 x i8] c"Product of extents for buffer \00", align 1
@.str.25.136 = private unnamed_addr constant [29 x i8] c"Applying the constraints on \00", align 1
@.str.26.137 = private unnamed_addr constant [54 x i8] c" to the required region made it smaller in dimension \00", align 1
@.str.27.138 = private unnamed_addr constant [3 x i8] c". \00", align 1
@.str.28.139 = private unnamed_addr constant [16 x i8] c"Required size: \00", align 1
@.str.29.140 = private unnamed_addr constant [19 x i8] c"Constrained size: \00", align 1
@.str.30.141 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.31.142 = private unnamed_addr constant [22 x i8] c"Constraint violated: \00", align 1
@.str.32.143 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.33.144 = private unnamed_addr constant [6 x i8] c") == \00", align 1
@.str.34.145 = private unnamed_addr constant [11 x i8] c"Parameter \00", align 1
@.str.35.146 = private unnamed_addr constant [23 x i8] c" but must be at least \00", align 1
@.str.36 = private unnamed_addr constant [22 x i8] c" but must be at most \00", align 1
@.str.37 = private unnamed_addr constant [47 x i8] c"Out of memory (halide_malloc returned nullptr)\00", align 1
@.str.38 = private unnamed_addr constant [17 x i8] c"Buffer argument \00", align 1
@.str.39 = private unnamed_addr constant [12 x i8] c" is nullptr\00", align 1
@.str.40 = private unnamed_addr constant [25 x i8] c"Failed to dump function \00", align 1
@.str.41.147 = private unnamed_addr constant [10 x i8] c" to file \00", align 1
@.str.42 = private unnamed_addr constant [13 x i8] c" with error \00", align 1
@.str.43 = private unnamed_addr constant [21 x i8] c"The host pointer of \00", align 1
@.str.44 = private unnamed_addr constant [22 x i8] c" is not aligned to a \00", align 1
@.str.45 = private unnamed_addr constant [17 x i8] c" bytes boundary.\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c"The buffer \00", align 1
@.str.47 = private unnamed_addr constant [53 x i8] c" is dirty on device, but this pipeline was compiled \00", align 1
@.str.48 = private unnamed_addr constant [43 x i8] c"with no support for device to host copies.\00", align 1
@.str.49 = private unnamed_addr constant [55 x i8] c" is null, but the pipeline will access it on the host.\00", align 1
@.str.50.148 = private unnamed_addr constant [30 x i8] c"The folded storage dimension \00", align 1
@.str.51 = private unnamed_addr constant [5 x i8] c" of \00", align 1
@.str.52 = private unnamed_addr constant [36 x i8] c" was accessed out of order by loop \00", align 1
@.str.53 = private unnamed_addr constant [23 x i8] c"Cannot fold dimension \00", align 1
@.str.54 = private unnamed_addr constant [36 x i8] c" because an extern stage accesses [\00", align 1
@.str.55 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.56 = private unnamed_addr constant [3 x i8] c"],\00", align 1
@.str.57 = private unnamed_addr constant [47 x i8] c" which is outside the range currently valid: [\00", align 1
@.str.58.149 = private unnamed_addr constant [3 x i8] c"].\00", align 1
@.str.59.150 = private unnamed_addr constant [47 x i8] c" which wraps around the boundary of the fold, \00", align 1
@.str.60.151 = private unnamed_addr constant [30 x i8] c"which occurs at multiples of \00", align 1
@.str.61.152 = private unnamed_addr constant [18 x i8] c"The fold factor (\00", align 1
@.str.62 = private unnamed_addr constant [16 x i8] c") of dimension \00", align 1
@.str.63 = private unnamed_addr constant [61 x i8] c" is too small to store the required region accessed by loop \00", align 1
@.str.64.153 = private unnamed_addr constant [3 x i8] c").\00", align 1
@.str.65 = private unnamed_addr constant [22 x i8] c"Requirement Failed: (\00", align 1
@.str.66 = private unnamed_addr constant [3 x i8] c") \00", align 1
@.str.67 = private unnamed_addr constant [59 x i8] c"A schedule specialized with specialize_fail() was chosen: \00", align 1
@.str.68 = private unnamed_addr constant [55 x i8] c"Buffer has a non-zero device but no device interface.\0A\00", align 1
@.str.69 = private unnamed_addr constant [57 x i8] c"Buffer has a non-null device_interface but device is 0.\0A\00", align 1
@.str.70 = private unnamed_addr constant [49 x i8] c"Buffer has both host and device dirty bits set.\0A\00", align 1
@.str.71 = private unnamed_addr constant [26 x i8] c"Buffer pointer passed to \00", align 1
@.str.72 = private unnamed_addr constant [11 x i8] c" is null.\0A\00", align 1
@.str.73 = private unnamed_addr constant [32 x i8] c"The explicit allocation bound (\00", align 1
@.str.74 = private unnamed_addr constant [45 x i8] c" is too small to store the required region (\00", align 1
@.str.75 = private unnamed_addr constant [77 x i8] c"Buffer could not be cropped (runtime error or unimplemented device option).\0A\00", align 1
@.str.29.163 = private unnamed_addr constant [35 x i8] c"Printer buffer allocation failed.\0A\00", align 1
@.str.7.164 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.8.165 = private unnamed_addr constant [14 x i8] c" total time: \00", align 1
@.str.9.166 = private unnamed_addr constant [4 x i8] c" ms\00", align 1
@.str.10.167 = private unnamed_addr constant [12 x i8] c"  samples: \00", align 1
@.str.11.168 = private unnamed_addr constant [9 x i8] c"  runs: \00", align 1
@.str.12.169 = private unnamed_addr constant [13 x i8] c"  time/run: \00", align 1
@.str.13.170 = private unnamed_addr constant [5 x i8] c" ms\0A\00", align 1
@.str.14.171 = private unnamed_addr constant [24 x i8] c" average threads used: \00", align 1
@.str.15.172 = private unnamed_addr constant [20 x i8] c" heap allocations: \00", align 1
@.str.16.173 = private unnamed_addr constant [20 x i8] c"  peak heap usage: \00", align 1
@.str.17.174 = private unnamed_addr constant [8 x i8] c" bytes\0A\00", align 1
@.str.18.175 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.19.176 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.20.177 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.21.178 = private unnamed_addr constant [3 x i8] c"ms\00", align 1
@.str.22.179 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.23.180 = private unnamed_addr constant [3 x i8] c"%)\00", align 1
@.str.24.181 = private unnamed_addr constant [10 x i8] c"threads: \00", align 1
@.str.25.182 = private unnamed_addr constant [8 x i8] c" peak: \00", align 1
@.str.26.183 = private unnamed_addr constant [7 x i8] c" num: \00", align 1
@.str.27.184 = private unnamed_addr constant [7 x i8] c" avg: \00", align 1
@.str.28.185 = private unnamed_addr constant [9 x i8] c" stack: \00", align 1
@_ZZ25halide_profiler_get_stateE1s = internal global %struct.halide_profiler_state { %struct.halide_mutex zeroinitializer, i32 1, i32 0, i32 0, i32 0, %struct.halide_profiler_pipeline_stats* null, void (i32*, i32*)* null, %struct.halide_thread* null }, align 8
@.str.186 = private unnamed_addr constant [156 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/profiler_common.cpp:246 halide_abort_if_false() failed: p_stats != nullptr\0A\00", align 1
@.str.1.187 = private unnamed_addr constant [156 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/profiler_common.cpp:273 halide_abort_if_false() failed: p_stats != nullptr\0A\00", align 1
@.str.2.188 = private unnamed_addr constant [150 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/profiler_common.cpp:274 halide_abort_if_false() failed: func_id >= 0\0A\00", align 1
@.str.3.189 = private unnamed_addr constant [166 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/profiler_common.cpp:275 halide_abort_if_false() failed: func_id < p_stats->num_funcs\0A\00", align 1
@.str.4.190 = private unnamed_addr constant [156 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/profiler_common.cpp:309 halide_abort_if_false() failed: p_stats != nullptr\0A\00", align 1
@.str.5.191 = private unnamed_addr constant [150 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/profiler_common.cpp:310 halide_abort_if_false() failed: func_id >= 0\0A\00", align 1
@.str.6.192 = private unnamed_addr constant [166 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/halide-hydride/src/runtime/profiler_common.cpp:311 halide_abort_if_false() failed: func_id < p_stats->num_funcs\0A\00", align 1
@_ZN6Halide7Runtime8Internal30custom_can_use_target_featuresE = linkonce local_unnamed_addr global i32 (i32, i64*)* @halide_default_can_use_target_features, align 8
@_ZN6Halide7Runtime8Internal36halide_cpu_features_initialized_lockE = linkonce global %struct.halide_mutex zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal31halide_cpu_features_initializedE = linkonce local_unnamed_addr global i8 0, align 1
@_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE = linkonce global [4 x i64] zeroinitializer, align 8
@.str.197 = private unnamed_addr constant [81 x i8] c"Internal error: wrong structure size passed to halide_can_use_target_features()\0A\00", align 1
@0 = private constant [4 x i64*] zeroinitializer
@str = private constant [6 x i8] c"input\00", align 32
@1 = private constant [4 x i64*] zeroinitializer
@str.200 = private constant [7 x i8] c"output\00", align 32
@2 = private constant [2 x %struct.halide_filter_argument_t] [%struct.halide_filter_argument_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str, i32 0, i32 0), i32 1, i32 2, %struct.halide_type_t { i8 1, i8 8, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** getelementptr inbounds ([4 x i64*], [4 x i64*]* @0, i32 0, i32 0) }, %struct.halide_filter_argument_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i32 0, i32 0), i32 2, i32 2, %struct.halide_type_t { i8 1, i8 8, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** getelementptr inbounds ([4 x i64*], [4 x i64*]* @1, i32 0, i32 0) }]
@str.201 = private constant [99 x i8] c"x86-64-linux-avx-avx2-avx512-avx512_cannonlake-avx512_sapphirerapids-avx512_skylake-f16c-fma-sse41\00", align 64
@str.202 = private constant [9 x i8] c"sobel3x3\00", align 32
@sobel3x3_metadata_storage = private constant %struct.halide_filter_metadata_t { i32 1, i32 2, %struct.halide_filter_argument_t* getelementptr inbounds ([2 x %struct.halide_filter_argument_t], [2 x %struct.halide_filter_argument_t]* @2, i32 0, i32 0), i8* getelementptr inbounds ([99 x i8], [99 x i8]* @str.201, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.202, i32 0, i32 0) }
@str.203 = private constant [19 x i8] c"Input buffer input\00", align 32
@str.204 = private constant [21 x i8] c"Output buffer output\00", align 32
@str.205 = private constant [15 x i8] c"input.stride.0\00", align 32
@str.206 = private constant [2 x i8] c"1\00", align 32
@str.207 = private constant [16 x i8] c"output.stride.0\00", align 32
@switch.table.halide_type_to_string = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.76, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.75, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.74, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17.73, i64 0, i64 0)], align 8

; Function Attrs: nounwind mustprogress
define weak i8* @halide_default_malloc(i8* %user_context, i64 %x) #0 {
entry:
  %add = add i64 %x, 64
  %call1 = tail call i8* @malloc(i64 %add) #15
  %cmp = icmp eq i8* %call1, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %0 = ptrtoint i8* %call1 to i64
  %sub = add i64 %0, 71
  %and = and i64 %sub, -64
  %1 = inttoptr i64 %and to i8*
  %2 = inttoptr i64 %and to i8**
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 -1
  store i8* %call1, i8** %arrayidx, align 8, !tbaa !10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i8* [ %1, %if.end ], [ null, %entry ]
  ret i8* %retval.0
}

declare i8* @malloc(i64) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak void @halide_default_free(i8* %user_context, i8* %ptr) #0 {
entry:
  %arrayidx = getelementptr inbounds i8, i8* %ptr, i64 -8
  %0 = bitcast i8* %arrayidx to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !10
  tail call void @free(i8* %1) #15
  ret void
}

declare void @free(i8*) local_unnamed_addr #1

; Function Attrs: nounwind willreturn mustprogress
define weak i8* (i8*, i64)* @halide_set_custom_malloc(i8* (i8*, i64)* %user_malloc) local_unnamed_addr #2 {
entry:
  %0 = load i8* (i8*, i64)*, i8* (i8*, i64)** @_ZN6Halide7Runtime8Internal13custom_mallocE, align 8, !tbaa !10
  store i8* (i8*, i64)* %user_malloc, i8* (i8*, i64)** @_ZN6Halide7Runtime8Internal13custom_mallocE, align 8, !tbaa !10
  ret i8* (i8*, i64)* %0
}

; Function Attrs: nounwind willreturn mustprogress
define weak void (i8*, i8*)* @halide_set_custom_free(void (i8*, i8*)* %user_free) local_unnamed_addr #2 {
entry:
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal11custom_freeE, align 8, !tbaa !10
  store void (i8*, i8*)* %user_free, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal11custom_freeE, align 8, !tbaa !10
  ret void (i8*, i8*)* %0
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_malloc(i8* %user_context, i64 %x) local_unnamed_addr #0 {
entry:
  %0 = load i8* (i8*, i64)*, i8* (i8*, i64)** @_ZN6Halide7Runtime8Internal13custom_mallocE, align 8, !tbaa !10
  %call = tail call i8* %0(i8* %user_context, i64 %x) #15
  ret i8* %call
}

; Function Attrs: nounwind mustprogress
define weak void @halide_free(i8* %user_context, i8* %ptr) local_unnamed_addr #0 {
entry:
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal11custom_freeE, align 8, !tbaa !10
  tail call void %0(i8* %user_context, i8* %ptr) #15
  ret void
}

; Function Attrs: nounwind mustprogress
define weak void @halide_default_error(i8* %user_context, i8* %msg) #0 {
entry:
  %buf = alloca [4096 x i8], align 1
  %0 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %0) #10
  %add.ptr = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i64 0, i64 4094
  %call = call i8* @halide_string_to_string(i8* nonnull %0, i8* nonnull %add.ptr, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)) #15
  %add.ptr2 = getelementptr inbounds i8, i8* %call, i64 4094
  %call3 = call i8* @halide_string_to_string(i8* %call, i8* nonnull %add.ptr2, i8* %msg) #15
  %arrayidx = getelementptr inbounds i8, i8* %call3, i64 -1
  %1 = load i8, i8* %arrayidx, align 1, !tbaa !14
  %cmp.not = icmp eq i8 %1, 10
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8 10, i8* %call3, align 1, !tbaa !14
  %arrayidx5 = getelementptr inbounds i8, i8* %call3, i64 1
  store i8 0, i8* %arrayidx5, align 1, !tbaa !14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %dst.0 = phi i8* [ %arrayidx5, %if.then ], [ %call3, %entry ]
  %sub.ptr.lhs.cast = ptrtoint i8* %dst.0 to i64
  %sub.ptr.rhs.cast = ptrtoint [4096 x i8]* %buf to i64
  %sub.ptr.sub = sub i64 1, %sub.ptr.rhs.cast
  %add = add i64 %sub.ptr.sub, %sub.ptr.lhs.cast
  %call9 = call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %0, i64 %add) #15
  call void @halide_print(i8* %user_context, i8* nonnull %0) #15
  call void @abort() #15
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %0) #10
  ret void
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @abort() local_unnamed_addr #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind mustprogress
define weak void @halide_error(i8* %user_context, i8* %msg) local_unnamed_addr #0 {
entry:
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal13error_handlerE, align 8, !tbaa !10
  tail call void %0(i8* %user_context, i8* %msg) #15
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void (i8*, i8*)* @halide_set_error_handler(void (i8*, i8*)* %handler) local_unnamed_addr #2 {
entry:
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal13error_handlerE, align 8, !tbaa !10
  store void (i8*, i8*)* %handler, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal13error_handlerE, align 8, !tbaa !10
  ret void (i8*, i8*)* %0
}

; Function Attrs: nounwind mustprogress
define weak void @halide_print(i8* %user_context, i8* %msg) local_unnamed_addr #0 {
entry:
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal12custom_printE, align 8, !tbaa !10
  tail call void %0(i8* %user_context, i8* %msg) #15
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void (i8*, i8*)* @halide_set_custom_print(void (i8*, i8*)* %print) local_unnamed_addr #2 {
entry:
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal12custom_printE, align 8, !tbaa !10
  store void (i8*, i8*)* %print, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal12custom_printE, align 8, !tbaa !10
  ret void (i8*, i8*)* %0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_start_clock(i8* %user_context) local_unnamed_addr #0 {
entry:
  %0 = load i8, i8* @halide_reference_clock_inited, align 1, !tbaa !15, !range !17
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i32 (i32, ...) @syscall(i32 228, i32 0, %struct.timespec* nonnull @halide_reference_clock) #15
  store i8 1, i8* @halide_reference_clock_inited, align 1, !tbaa !15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i32 0
}

declare i32 @syscall(i32, ...) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i64 @halide_current_time_ns(i8* %user_context) local_unnamed_addr #0 {
entry:
  %now = alloca <2 x i64>, align 16
  %0 = bitcast <2 x i64>* %now to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #10
  %call = call i32 (i32, ...) @syscall(i32 228, i32 0, <2 x i64>* nonnull %now) #15
  %1 = load <2 x i64>, <2 x i64>* %now, align 16, !tbaa !18
  %2 = load <2 x i64>, <2 x i64>* bitcast (%struct.timespec* @halide_reference_clock to <2 x i64>*), align 8, !tbaa !18
  %3 = sub <2 x i64> %1, %2
  %4 = extractelement <2 x i64> %3, i32 0
  %mul = mul nsw i64 %4, 1000000000
  %5 = extractelement <2 x i64> %3, i32 1
  %add = add nsw i64 %mul, %5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #10
  ret i64 %add
}

; Function Attrs: nounwind mustprogress
define weak void @halide_sleep_ms(i8* %user_context, i32 %ms) local_unnamed_addr #0 {
entry:
  %mul = mul nsw i32 %ms, 1000
  %call = tail call i32 @usleep(i32 %mul) #15
  ret void
}

declare i32 @usleep(i32) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak void @halide_default_print(i8* %user_context, i8* %str) #0 {
entry:
  %call = tail call i64 @strlen(i8* %str) #15
  %call1 = tail call i64 @write(i32 1, i8* %str, i64 %call) #15
  ret void
}

declare i64 @strlen(i8*) local_unnamed_addr #1

declare i64 @write(i32, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i32 @halide_host_cpu_count() local_unnamed_addr #0 {
entry:
  %call = tail call i64 @sysconf(i32 84) #15
  %conv = trunc i64 %call to i32
  ret i32 %conv
}

declare i64 @sysconf(i32) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak void @halide_thread_yield() local_unnamed_addr #0 {
entry:
  %call = tail call i32 @sched_yield() #15
  ret void
}

declare i32 @sched_yield() local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_do_task(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %idx, i8* %closure) #0 {
entry:
  %call = tail call i32 %f(i8* %user_context, i32 %idx, i8* %closure) #15
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_do_loop_task(i8* %user_context, i32 (i8*, i32, i32, i8*, i8*)* %f, i32 %min, i32 %extent, i8* %closure, i8* %task_parent) #0 {
entry:
  %call = tail call i32 %f(i8* %user_context, i32 %min, i32 %extent, i8* %closure, i8* %task_parent) #15
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_do_par_for(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %min, i32 %size, i8* %closure) #0 {
entry:
  %job = alloca %"struct.Halide::Runtime::Internal::work", align 8
  %cmp = icmp slt i32 %size, 1
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = bitcast %"struct.Halide::Runtime::Internal::work"* %job to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %0) #10
  %fn = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 0
  store i32 (i8*, i32, i32, i8*, i8*)* null, i32 (i8*, i32, i32, i8*, i8*)** %fn, align 8, !tbaa !20
  %min2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 5
  store i32 %min, i32* %min2, align 4, !tbaa !24
  %extent = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 6
  store i32 %size, i32* %extent, align 8, !tbaa !25
  %serial = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 8
  store i8 0, i8* %serial, align 8, !tbaa !26
  %semaphores = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 3
  store %struct.halide_semaphore_acquire_t* null, %struct.halide_semaphore_acquire_t** %semaphores, align 8, !tbaa !27
  %num_semaphores = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 4
  store i32 0, i32* %num_semaphores, align 8, !tbaa !28
  %closure8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 1
  store i8* %closure, i8** %closure8, align 8, !tbaa !29
  %min_threads = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 7
  store i32 0, i32* %min_threads, align 4, !tbaa !30
  %name = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 2
  store i8* null, i8** %name, align 8, !tbaa !31
  %task_fn = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 1
  store i32 (i8*, i32, i8*)* %f, i32 (i8*, i32, i8*)** %task_fn, align 8, !tbaa !32
  %user_context11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 7
  store i8* %user_context, i8** %user_context11, align 8, !tbaa !33
  %exit_status = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 9
  store i32 0, i32* %exit_status, align 4, !tbaa !34
  %active_workers = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 8
  store i32 0, i32* %active_workers, align 8, !tbaa !35
  %next_semaphore = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 10
  store i32 0, i32* %next_semaphore, align 8, !tbaa !36
  %owner_is_sleeping = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 11
  store i8 0, i8* %owner_is_sleeping, align 4, !tbaa !37
  %siblings = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 3
  store %"struct.Halide::Runtime::Internal::work"* %job, %"struct.Halide::Runtime::Internal::work"** %siblings, align 8, !tbaa !38
  %sibling_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 4
  store i32 0, i32* %sibling_count, align 8, !tbaa !39
  %parent_job = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 5
  store %"struct.Halide::Runtime::Internal::work"* null, %"struct.Halide::Runtime::Internal::work"** %parent_job, align 8, !tbaa !40
  call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  call void @_ZN6Halide7Runtime8Internal27enqueue_work_already_lockedEiPNS1_4workES3_(i32 1, %"struct.Halide::Runtime::Internal::work"* nonnull %job, %"struct.Halide::Runtime::Internal::work"* null) #16
  call void @_ZN6Halide7Runtime8Internal28worker_thread_already_lockedEPNS1_4workE(%"struct.Halide::Runtime::Internal::work"* nonnull %job) #16
  call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  %1 = load i32, i32* %exit_status, align 4, !tbaa !34
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %0) #10
  br label %return

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %1, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind
define weak void @halide_mutex_lock(%struct.halide_mutex* %mutex) local_unnamed_addr #4 {
entry:
  %control.i.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", align 8
  %state.i = getelementptr %struct.halide_mutex, %struct.halide_mutex* %mutex, i64 0, i32 0, i64 0
  %0 = cmpxchg weak i64* %state.i, i64 0, i64 1 acquire monotonic
  %1 = extractvalue { i64, i1 } %0, 1
  br i1 %1, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex4lockEv.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %2 = load atomic i64, i64* %state.i monotonic, align 8
  %3 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i to i8*
  %4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 0, i32 0
  %lock_state2.i.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 0
  %6 = ptrtoint %struct.halide_mutex* %mutex to i64
  br label %while.cond.outer.i.i

while.cond.outer.i.i:                             ; preds = %while.cond.outer.i.i.backedge, %if.then.i
  %expected.0.ph.i.i = phi i64 [ %2, %if.then.i ], [ %expected.0.ph.i.i.be, %while.cond.outer.i.i.backedge ]
  %spinner.sroa.0.0.ph.i.i = phi i32 [ 40, %if.then.i ], [ %spinner.sroa.0.0.ph.i.i.be, %while.cond.outer.i.i.backedge ]
  %and55.i.i = and i64 %expected.0.ph.i.i, 1
  %tobool.not56.i.i = icmp eq i64 %and55.i.i, 0
  br i1 %tobool.not56.i.i, label %if.then.i.i, label %if.end4.i.i

if.then.i.i:                                      ; preds = %while.cond.outer.i.i, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i
  %expected.057.i.i = phi i64 [ %9, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i ], [ %expected.0.ph.i.i, %while.cond.outer.i.i ]
  %or.i.i = or i64 %expected.057.i.i, 1
  %7 = cmpxchg weak i64* %state.i, i64 %expected.057.i.i, i64 %or.i.i acquire monotonic
  %8 = extractvalue { i64, i1 } %7, 1
  br i1 %8, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex4lockEv.exit, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i: ; preds = %if.then.i.i
  %9 = extractvalue { i64, i1 } %7, 0
  %and.i.i = and i64 %9, 1
  %tobool.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.end4.i.i.loopexit

if.end4.i.i.loopexit:                             ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i
  %10 = extractvalue { i64, i1 } %7, 0
  br label %if.end4.i.i

if.end4.i.i:                                      ; preds = %if.end4.i.i.loopexit, %while.cond.outer.i.i
  %expected.0.lcssa.i.i = phi i64 [ %expected.0.ph.i.i, %while.cond.outer.i.i ], [ %10, %if.end4.i.i.loopexit ]
  %cmp.i.i.i = icmp sgt i32 %spinner.sroa.0.0.ph.i.i, 0
  br i1 %cmp.i.i.i, label %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i, label %if.end8.i.i

_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i: ; preds = %if.end4.i.i
  %cmp4.i.not.i.i = icmp eq i32 %spinner.sroa.0.0.ph.i.i, 1
  br i1 %cmp4.i.not.i.i, label %if.end8.i.i, label %if.then6.i.i

if.then6.i.i:                                     ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i
  %dec.i.i.i = add nsw i32 %spinner.sroa.0.0.ph.i.i, -1
  call void @halide_thread_yield() #15
  %11 = load atomic i64, i64* %state.i monotonic, align 8
  br label %while.cond.outer.i.i.backedge

if.end8.i.i:                                      ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i, %if.end4.i.i
  %spinner.sroa.0.152.i.i = phi i32 [ 0, %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i ], [ %spinner.sroa.0.0.ph.i.i, %if.end4.i.i ]
  %and9.i.i = and i64 %expected.0.lcssa.i.i, 2
  %cmp.i.i = icmp eq i64 %and9.i.i, 0
  br i1 %cmp.i.i, label %if.then10.i.i, label %if.end19.i.i

if.then10.i.i:                                    ; preds = %if.end8.i.i
  %or12.i.i = or i64 %expected.0.lcssa.i.i, 2
  %12 = cmpxchg weak i64* %state.i, i64 %expected.0.lcssa.i.i, i64 %or12.i.i monotonic monotonic
  %13 = extractvalue { i64, i1 } %12, 1
  br i1 %13, label %if.end19.i.i, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i: ; preds = %if.then10.i.i
  %14 = extractvalue { i64, i1 } %12, 0
  br label %while.cond.outer.i.i.backedge

if.end19.i.i:                                     ; preds = %if.then10.i.i, %if.end8.i.i
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8, !tbaa !41
  store i64* %state.i, i64** %lock_state2.i.i.i, align 8, !tbaa !43
  %call21.i.i = call i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control4parkEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %5, i64 %6) #15
  %cmp22.i.i = icmp eq i64 %call21.i.i, %6
  br i1 %cmp22.i.i, label %cleanup30.critedge.i.i, label %if.end24.i.i

if.end24.i.i:                                     ; preds = %if.end19.i.i
  %15 = load atomic i64, i64* %state.i monotonic, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #10
  br label %while.cond.outer.i.i.backedge

while.cond.outer.i.i.backedge:                    ; preds = %if.end24.i.i, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i, %if.then6.i.i
  %expected.0.ph.i.i.be = phi i64 [ %14, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i ], [ %15, %if.end24.i.i ], [ %11, %if.then6.i.i ]
  %spinner.sroa.0.0.ph.i.i.be = phi i32 [ %spinner.sroa.0.152.i.i, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i ], [ 40, %if.end24.i.i ], [ %dec.i.i.i, %if.then6.i.i ]
  br label %while.cond.outer.i.i

cleanup30.critedge.i.i:                           ; preds = %if.end19.i.i
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #10
  br label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex4lockEv.exit

_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex4lockEv.exit: ; preds = %if.then.i.i, %cleanup30.critedge.i.i, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal27enqueue_work_already_lockedEiPNS1_4workES3_(i32 %num_jobs, %"struct.Halide::Runtime::Internal::work"* %jobs, %"struct.Halide::Runtime::Internal::work"* %task_parent) local_unnamed_addr #0 {
entry:
  %0 = load i8, i8* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 15), align 1, !tbaa !45, !range !17
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %land.rhs.i, label %if.end4

land.rhs.i:                                       ; preds = %entry, %while.body.i
  %bytes.011.i = phi i8* [ %incdec.ptr.i, %while.body.i ], [ bitcast (i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 2) to i8*), %entry ]
  %1 = load i8, i8* %bytes.011.i, align 1, !tbaa !14
  %cmp2.i = icmp eq i8 %1, 0
  br i1 %cmp2.i, label %while.body.i, label %do.body.i

while.body.i:                                     ; preds = %land.rhs.i
  %incdec.ptr.i = getelementptr inbounds i8, i8* %bytes.011.i, i64 1
  %exitcond.not.i = icmp eq i8* %incdec.ptr.i, bitcast (%"struct.Halide::Runtime::Internal::work_queue_t"* select (i1 icmp ugt (i8* bitcast (%"struct.Halide::Runtime::Internal::work_queue_t"* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 1) to i8*), i8* getelementptr (i8, i8* bitcast (i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 2) to i8*), i64 1)), %"struct.Halide::Runtime::Internal::work_queue_t"* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 1), %"struct.Halide::Runtime::Internal::work_queue_t"* bitcast (i8* getelementptr (i8, i8* bitcast (i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 2) to i8*), i64 1) to %"struct.Halide::Runtime::Internal::work_queue_t"*)) to i8*)
  br i1 %exitcond.not.i, label %do.body.i, label %land.rhs.i, !llvm.loop !49

do.body.i:                                        ; preds = %while.body.i, %land.rhs.i
  %bytes.0.lcssa.i = phi i8* [ %bytes.011.i, %land.rhs.i ], [ bitcast (%"struct.Halide::Runtime::Internal::work_queue_t"* select (i1 icmp ugt (i8* bitcast (%"struct.Halide::Runtime::Internal::work_queue_t"* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 1) to i8*), i8* getelementptr (i8, i8* bitcast (i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 2) to i8*), i64 1)), %"struct.Halide::Runtime::Internal::work_queue_t"* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 1), %"struct.Halide::Runtime::Internal::work_queue_t"* bitcast (i8* getelementptr (i8, i8* bitcast (i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 2) to i8*), i64 1) to %"struct.Halide::Runtime::Internal::work_queue_t"*)) to i8*), %while.body.i ]
  %cmp3.i = icmp eq i8* %bytes.0.lcssa.i, bitcast (%"struct.Halide::Runtime::Internal::work_queue_t"* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 1) to i8*)
  br i1 %cmp3.i, label %_ZNK6Halide7Runtime8Internal12work_queue_t13assert_zeroedEv.exit, label %if.then.i

if.then.i:                                        ; preds = %do.body.i
  tail call void @halide_print(i8* null, i8* getelementptr inbounds ([214 x i8], [214 x i8]* @.str.6, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %_ZNK6Halide7Runtime8Internal12work_queue_t13assert_zeroedEv.exit

_ZNK6Halide7Runtime8Internal12work_queue_t13assert_zeroedEv.exit: ; preds = %if.then.i, %do.body.i
  %2 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 1), align 8, !tbaa !51
  %tobool1.not = icmp eq i32 %2, 0
  br i1 %tobool1.not, label %if.then2, label %if.end

if.then2:                                         ; preds = %_ZNK6Halide7Runtime8Internal12work_queue_t13assert_zeroedEv.exit
  %call = tail call i32 @_ZN6Halide7Runtime8Internal27default_desired_num_threadsEv() #16
  br label %if.end

if.end:                                           ; preds = %if.then2, %_ZNK6Halide7Runtime8Internal12work_queue_t13assert_zeroedEv.exit
  %3 = phi i32 [ %call, %if.then2 ], [ %2, %_ZNK6Halide7Runtime8Internal12work_queue_t13assert_zeroedEv.exit ]
  %4 = icmp sgt i32 %3, 1
  %spec.select.i = select i1 %4, i32 %3, i32 1
  %5 = icmp slt i32 %spec.select.i, 256
  %call3176 = select i1 %5, i32 %spec.select.i, i32 256
  store i32 %call3176, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 1), align 8, !tbaa !51
  store i8 1, i8* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 15), align 1, !tbaa !45
  br label %if.end4

if.end4:                                          ; preds = %if.end, %entry
  %cmp181 = icmp sgt i32 %num_jobs, 0
  br i1 %cmp181, label %for.body.preheader, label %for.cond.cleanup

for.body.preheader:                               ; preds = %if.end4
  %wide.trip.count = zext i32 %num_jobs to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %6 = icmp eq i32 %num_jobs, 1
  br i1 %6, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %for.body

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.inc.1, %for.body.preheader
  %workers_to_wake.1.lcssa.ph = phi i32 [ undef, %for.body.preheader ], [ %workers_to_wake.1.1, %for.inc.1 ]
  %add.lcssa.ph = phi i32 [ undef, %for.body.preheader ], [ %add.1, %for.inc.1 ]
  %stealable_jobs.1.lcssa.ph = phi i8 [ undef, %for.body.preheader ], [ %stealable_jobs.1.1, %for.inc.1 ]
  %job_may_block.1.lcssa.ph = phi i8 [ undef, %for.body.preheader ], [ %job_may_block.1.1, %for.inc.1 ]
  %spec.select.lcssa.ph = phi i8 [ undef, %for.body.preheader ], [ %spec.select.1, %for.inc.1 ]
  %indvars.iv193.unr = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next194.1, %for.inc.1 ]
  %min_threads.0187.unr = phi i32 [ 0, %for.body.preheader ], [ %add.1, %for.inc.1 ]
  %job_may_block.0185.unr = phi i8 [ 0, %for.body.preheader ], [ %job_may_block.1.1, %for.inc.1 ]
  %job_has_acquires.0184.unr = phi i8 [ 0, %for.body.preheader ], [ %spec.select.1, %for.inc.1 ]
  %stealable_jobs.0183.unr = phi i8 [ 0, %for.body.preheader ], [ %stealable_jobs.1.1, %for.inc.1 ]
  %workers_to_wake.0182.unr = phi i32 [ -1, %for.body.preheader ], [ %workers_to_wake.1.1, %for.inc.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond.cleanup.loopexit, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond.cleanup.loopexit.unr-lcssa
  %min_threads5.epil = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv193.unr, i32 0, i32 7
  %7 = load i32, i32* %min_threads5.epil, align 4, !tbaa !30
  %cmp6.epil = icmp eq i32 %7, 0
  %add.epil = add i32 %7, %min_threads.0187.unr
  %stealable_jobs.1.epil = select i1 %cmp6.epil, i8 1, i8 %stealable_jobs.0183.unr
  %job_may_block.1.epil = select i1 %cmp6.epil, i8 %job_may_block.0185.unr, i8 1
  %num_semaphores.epil = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv193.unr, i32 0, i32 4
  %8 = load i32, i32* %num_semaphores.epil, align 8, !tbaa !28
  %cmp16.not.epil = icmp eq i32 %8, 0
  %spec.select.epil = select i1 %cmp16.not.epil, i8 %job_has_acquires.0184.unr, i8 1
  %serial.epil = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv193.unr, i32 0, i32 8
  %9 = load i8, i8* %serial.epil, align 8, !tbaa !26, !range !17
  %tobool22.not.epil = icmp eq i8 %9, 0
  br i1 %tobool22.not.epil, label %if.else24.epil, label %if.then23.epil

if.then23.epil:                                   ; preds = %for.body.epil
  %inc.epil = add nsw i32 %workers_to_wake.0182.unr, 1
  br label %for.cond.cleanup.loopexit

if.else24.epil:                                   ; preds = %for.body.epil
  %extent.epil = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv193.unr, i32 0, i32 6
  %10 = load i32, i32* %extent.epil, align 8, !tbaa !25
  %add28.epil = add nsw i32 %10, %workers_to_wake.0182.unr
  br label %for.cond.cleanup.loopexit

for.cond.cleanup.loopexit:                        ; preds = %if.else24.epil, %if.then23.epil, %for.cond.cleanup.loopexit.unr-lcssa
  %workers_to_wake.1.lcssa = phi i32 [ %workers_to_wake.1.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %inc.epil, %if.then23.epil ], [ %add28.epil, %if.else24.epil ]
  %add.lcssa = phi i32 [ %add.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %add.epil, %if.then23.epil ], [ %add.epil, %if.else24.epil ]
  %stealable_jobs.1.lcssa = phi i8 [ %stealable_jobs.1.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %stealable_jobs.1.epil, %if.then23.epil ], [ %stealable_jobs.1.epil, %if.else24.epil ]
  %job_may_block.1.lcssa = phi i8 [ %job_may_block.1.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %job_may_block.1.epil, %if.then23.epil ], [ %job_may_block.1.epil, %if.else24.epil ]
  %spec.select.lcssa = phi i8 [ %spec.select.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %spec.select.epil, %if.then23.epil ], [ %spec.select.epil, %if.else24.epil ]
  %phi.bo = and i8 %stealable_jobs.1.lcssa, 1
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit, %if.end4
  %workers_to_wake.0.lcssa = phi i32 [ -1, %if.end4 ], [ %workers_to_wake.1.lcssa, %for.cond.cleanup.loopexit ]
  %stealable_jobs.0.lcssa = phi i8 [ 0, %if.end4 ], [ %phi.bo, %for.cond.cleanup.loopexit ]
  %job_has_acquires.0.lcssa = phi i8 [ 0, %if.end4 ], [ %spec.select.lcssa, %for.cond.cleanup.loopexit ]
  %job_may_block.0.lcssa = phi i8 [ 0, %if.end4 ], [ %job_may_block.1.lcssa, %for.cond.cleanup.loopexit ]
  %min_threads.0.lcssa = phi i32 [ 0, %if.end4 ], [ %add.lcssa, %for.cond.cleanup.loopexit ]
  %cmp31 = icmp eq %"struct.Halide::Runtime::Internal::work"* %task_parent, null
  br i1 %cmp31, label %if.then32, label %do.body61

for.body:                                         ; preds = %for.inc.1, %for.body.preheader.new
  %indvars.iv193 = phi i64 [ 0, %for.body.preheader.new ], [ %indvars.iv.next194.1, %for.inc.1 ]
  %min_threads.0187 = phi i32 [ 0, %for.body.preheader.new ], [ %add.1, %for.inc.1 ]
  %job_may_block.0185 = phi i8 [ 0, %for.body.preheader.new ], [ %job_may_block.1.1, %for.inc.1 ]
  %job_has_acquires.0184 = phi i8 [ 0, %for.body.preheader.new ], [ %spec.select.1, %for.inc.1 ]
  %stealable_jobs.0183 = phi i8 [ 0, %for.body.preheader.new ], [ %stealable_jobs.1.1, %for.inc.1 ]
  %workers_to_wake.0182 = phi i32 [ -1, %for.body.preheader.new ], [ %workers_to_wake.1.1, %for.inc.1 ]
  %niter = phi i64 [ %unroll_iter, %for.body.preheader.new ], [ %niter.nsub.1, %for.inc.1 ]
  %min_threads5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv193, i32 0, i32 7
  %11 = load i32, i32* %min_threads5, align 4, !tbaa !30
  %cmp6 = icmp eq i32 %11, 0
  %add = add i32 %11, %min_threads.0187
  %num_semaphores = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv193, i32 0, i32 4
  %12 = load i32, i32* %num_semaphores, align 8, !tbaa !28
  %serial = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv193, i32 0, i32 8
  %13 = load i8, i8* %serial, align 8, !tbaa !26, !range !17
  %tobool22.not = icmp eq i8 %13, 0
  br i1 %tobool22.not, label %if.else24, label %if.then23

if.then23:                                        ; preds = %for.body
  %inc = add nsw i32 %workers_to_wake.0182, 1
  br label %for.inc

if.else24:                                        ; preds = %for.body
  %extent = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv193, i32 0, i32 6
  %14 = load i32, i32* %extent, align 8, !tbaa !25
  %add28 = add nsw i32 %14, %workers_to_wake.0182
  br label %for.inc

for.inc:                                          ; preds = %if.else24, %if.then23
  %workers_to_wake.1 = phi i32 [ %inc, %if.then23 ], [ %add28, %if.else24 ]
  %indvars.iv.next194 = or i64 %indvars.iv193, 1
  %min_threads5.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next194, i32 0, i32 7
  %15 = load i32, i32* %min_threads5.1, align 4, !tbaa !30
  %cmp6.1 = icmp eq i32 %15, 0
  %add.1 = add i32 %15, %add
  %16 = or i1 %cmp6.1, %cmp6
  %stealable_jobs.1.1 = select i1 %16, i8 1, i8 %stealable_jobs.0183
  %17 = or i32 %15, %11
  %18 = icmp eq i32 %17, 0
  %job_may_block.1.1 = select i1 %18, i8 %job_may_block.0185, i8 1
  %num_semaphores.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next194, i32 0, i32 4
  %19 = load i32, i32* %num_semaphores.1, align 8, !tbaa !28
  %20 = or i32 %19, %12
  %21 = icmp eq i32 %20, 0
  %spec.select.1 = select i1 %21, i8 %job_has_acquires.0184, i8 1
  %serial.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next194, i32 0, i32 8
  %22 = load i8, i8* %serial.1, align 8, !tbaa !26, !range !17
  %tobool22.not.1 = icmp eq i8 %22, 0
  br i1 %tobool22.not.1, label %if.else24.1, label %if.then23.1

if.then32:                                        ; preds = %for.cond.cleanup
  %23 = or i8 %job_may_block.0.lcssa, %job_has_acquires.0.lcssa
  %24 = and i8 %23, 1
  %25 = icmp eq i8 %24, 0
  %not. = xor i1 %25, true
  %add36 = zext i1 %not. to i32
  %min_threads.2 = add nsw i32 %min_threads.0.lcssa, %add36
  %26 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !52
  %cmp38180 = icmp slt i32 %26, 256
  br i1 %cmp38180, label %land.rhs, label %do.end50

land.rhs:                                         ; preds = %if.then32, %while.body
  %27 = phi i32 [ %inc45, %while.body ], [ %26, %if.then32 ]
  %28 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 1), align 8, !tbaa !51
  %sub = add nsw i32 %28, -1
  %cmp39 = icmp slt i32 %27, %sub
  br i1 %cmp39, label %while.body, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %add40 = add nsw i32 %27, 1
  %29 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !53
  %sub41 = sub i32 %add40, %29
  %cmp42 = icmp slt i32 %sub41, %min_threads.2
  br i1 %cmp42, label %while.body, label %do.end50

while.body:                                       ; preds = %lor.rhs, %land.rhs
  %30 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !54
  %inc43 = add nsw i32 %30, 1
  store i32 %inc43, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !54
  %call44 = tail call %struct.halide_thread* @halide_spawn_thread(void (i8*)* nonnull @_ZN6Halide7Runtime8Internal13worker_threadEPv, i8* null) #16
  %31 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !52
  %inc45 = add nsw i32 %31, 1
  store i32 %inc45, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !52
  %idxprom46 = sext i32 %31 to i64
  %arrayidx47 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 13, i64 %idxprom46
  store %struct.halide_thread* %call44, %struct.halide_thread** %arrayidx47, align 8, !tbaa !10
  %cmp38 = icmp slt i32 %31, 255
  br i1 %cmp38, label %land.rhs, label %do.end50, !llvm.loop !55

do.end50:                                         ; preds = %while.body, %lor.rhs, %if.then32
  br i1 %25, label %if.end77, label %if.then54

if.then54:                                        ; preds = %do.end50
  %32 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !53
  %inc55 = add nsw i32 %32, 1
  store i32 %inc55, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !53
  br label %if.end77

do.body61:                                        ; preds = %for.cond.cleanup
  %min_threads63 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %task_parent, i64 0, i32 0, i32 7
  %33 = load i32, i32* %min_threads63, align 4, !tbaa !30
  %active_workers = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %task_parent, i64 0, i32 8
  %34 = load i32, i32* %active_workers, align 8, !tbaa !35
  %mul = mul nsw i32 %34, %33
  %threads_reserved = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %task_parent, i64 0, i32 6
  %35 = load i32, i32* %threads_reserved, align 8, !tbaa !56
  %sub64 = sub nsw i32 %mul, %35
  %cmp65.not = icmp sgt i32 %min_threads.0.lcssa, %sub64
  br i1 %cmp65.not, label %if.then66, label %do.end69

if.then66:                                        ; preds = %do.body61
  tail call void @halide_print(i8* null, i8* getelementptr inbounds ([291 x i8], [291 x i8]* @.str.3, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end69

do.end69:                                         ; preds = %if.then66, %do.body61
  %36 = or i8 %job_may_block.0.lcssa, %job_has_acquires.0.lcssa
  %37 = and i8 %36, 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %if.end77, label %if.then73

if.then73:                                        ; preds = %do.end69
  %39 = load i32, i32* %threads_reserved, align 8, !tbaa !56
  %inc75 = add nsw i32 %39, 1
  store i32 %inc75, i32* %threads_reserved, align 8, !tbaa !56
  br label %if.end77

if.end77:                                         ; preds = %if.then73, %do.end69, %if.then54, %do.end50
  br i1 %cmp181, label %for.body83.lr.ph, label %for.cond.cleanup82

for.body83.lr.ph:                                 ; preds = %if.end77
  %.promoted = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), align 8, !tbaa !57
  %40 = zext i32 %num_jobs to i64
  %xtraiter3 = and i64 %40, 1
  %lcmp.mod4.not = icmp eq i64 %xtraiter3, 0
  br i1 %lcmp.mod4.not, label %for.body83.prol.loopexit, label %for.body83.prol

for.body83.prol:                                  ; preds = %for.body83.lr.ph
  %indvars.iv.next.prol = add nsw i64 %40, -1
  %arrayidx85.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next.prol
  %next_job.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next.prol, i32 2
  store %"struct.Halide::Runtime::Internal::work"* %.promoted, %"struct.Halide::Runtime::Internal::work"** %next_job.prol, align 8, !tbaa !58
  %siblings.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next.prol, i32 3
  store %"struct.Halide::Runtime::Internal::work"* %jobs, %"struct.Halide::Runtime::Internal::work"** %siblings.prol, align 8, !tbaa !38
  %sibling_count.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next.prol, i32 4
  store i32 %num_jobs, i32* %sibling_count.prol, align 8, !tbaa !39
  %threads_reserved93.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next.prol, i32 6
  store i32 0, i32* %threads_reserved93.prol, align 8, !tbaa !56
  br label %for.body83.prol.loopexit

for.body83.prol.loopexit:                         ; preds = %for.body83.prol, %for.body83.lr.ph
  %indvars.iv.unr = phi i64 [ %40, %for.body83.lr.ph ], [ %indvars.iv.next.prol, %for.body83.prol ]
  %arrayidx85192.unr = phi %"struct.Halide::Runtime::Internal::work"* [ %.promoted, %for.body83.lr.ph ], [ %arrayidx85.prol, %for.body83.prol ]
  %41 = icmp eq i32 %num_jobs, 1
  br i1 %41, label %for.cond80.for.cond.cleanup82_crit_edge, label %for.body83

for.cond80.for.cond.cleanup82_crit_edge:          ; preds = %for.body83, %for.body83.prol.loopexit
  store %"struct.Halide::Runtime::Internal::work"* %jobs, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), align 8, !tbaa !57
  br label %for.cond.cleanup82

for.cond.cleanup82:                               ; preds = %for.cond80.for.cond.cleanup82_crit_edge, %if.end77
  %42 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 12), align 4, !tbaa !59
  %tobool96 = icmp ne i32 %42, 0
  %43 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 11), align 8
  %44 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8
  %cmp98 = icmp slt i32 %43, %44
  %45 = or i1 %tobool96, %cmp98
  %cmp102 = icmp sgt i32 %workers_to_wake.0.lcssa, %43
  %or.cond174 = or i1 %cmp102, %45
  %storemerge = select i1 %or.cond174, i32 %44, i32 %workers_to_wake.0.lcssa
  store i32 %storemerge, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 6), align 8, !tbaa !60
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 8)) #16
  %46 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 6), align 8, !tbaa !60
  %47 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !54
  %cmp106 = icmp sgt i32 %46, %47
  br i1 %cmp106, label %if.then107, label %if.end111

for.body83:                                       ; preds = %for.body83.prol.loopexit, %for.body83
  %indvars.iv = phi i64 [ %indvars.iv.next.1, %for.body83 ], [ %indvars.iv.unr, %for.body83.prol.loopexit ]
  %arrayidx85192 = phi %"struct.Halide::Runtime::Internal::work"* [ %arrayidx85.1, %for.body83 ], [ %arrayidx85192.unr, %for.body83.prol.loopexit ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %arrayidx85 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next
  %next_job = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next, i32 2
  store %"struct.Halide::Runtime::Internal::work"* %arrayidx85192, %"struct.Halide::Runtime::Internal::work"** %next_job, align 8, !tbaa !58
  %siblings = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next, i32 3
  store %"struct.Halide::Runtime::Internal::work"* %jobs, %"struct.Halide::Runtime::Internal::work"** %siblings, align 8, !tbaa !38
  %sibling_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next, i32 4
  store i32 %num_jobs, i32* %sibling_count, align 8, !tbaa !39
  %threads_reserved93 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next, i32 6
  store i32 0, i32* %threads_reserved93, align 8, !tbaa !56
  %indvars.iv.next.1 = add nsw i64 %indvars.iv, -2
  %arrayidx85.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next.1
  %next_job.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next.1, i32 2
  store %"struct.Halide::Runtime::Internal::work"* %arrayidx85, %"struct.Halide::Runtime::Internal::work"** %next_job.1, align 8, !tbaa !58
  %siblings.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next.1, i32 3
  store %"struct.Halide::Runtime::Internal::work"* %jobs, %"struct.Halide::Runtime::Internal::work"** %siblings.1, align 8, !tbaa !38
  %sibling_count.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next.1, i32 4
  store i32 %num_jobs, i32* %sibling_count.1, align 8, !tbaa !39
  %threads_reserved93.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next.1, i32 6
  store i32 0, i32* %threads_reserved93.1, align 8, !tbaa !56
  %cmp81.1 = icmp sgt i64 %indvars.iv, 2
  br i1 %cmp81.1, label %for.body83, label %for.cond80.for.cond.cleanup82_crit_edge, !llvm.loop !61

if.then107:                                       ; preds = %for.cond.cleanup82
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 9)) #16
  %tobool108.not = icmp eq i8 %stealable_jobs.0.lcssa, 0
  br i1 %tobool108.not, label %if.end111, label %if.then109

if.then109:                                       ; preds = %if.then107
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 10)) #16
  br label %if.end111

if.end111:                                        ; preds = %if.then109, %if.then107, %for.cond.cleanup82
  %48 = or i8 %job_may_block.0.lcssa, %job_has_acquires.0.lcssa
  %49 = and i8 %48, 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %if.end123, label %if.then115

if.then115:                                       ; preds = %if.end111
  br i1 %cmp31, label %if.else120, label %if.then117

if.then117:                                       ; preds = %if.then115
  %threads_reserved118 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %task_parent, i64 0, i32 6
  %51 = load i32, i32* %threads_reserved118, align 8, !tbaa !56
  %dec119 = add nsw i32 %51, -1
  store i32 %dec119, i32* %threads_reserved118, align 8, !tbaa !56
  br label %if.end123

if.else120:                                       ; preds = %if.then115
  %52 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !53
  %dec121 = add nsw i32 %52, -1
  store i32 %dec121, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !53
  br label %if.end123

if.end123:                                        ; preds = %if.else120, %if.then117, %if.end111
  ret void

if.then23.1:                                      ; preds = %for.inc
  %inc.1 = add nsw i32 %workers_to_wake.1, 1
  br label %for.inc.1

if.else24.1:                                      ; preds = %for.inc
  %extent.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next194, i32 0, i32 6
  %53 = load i32, i32* %extent.1, align 8, !tbaa !25
  %add28.1 = add nsw i32 %53, %workers_to_wake.1
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.else24.1, %if.then23.1
  %workers_to_wake.1.1 = phi i32 [ %inc.1, %if.then23.1 ], [ %add28.1, %if.else24.1 ]
  %indvars.iv.next194.1 = add nuw nsw i64 %indvars.iv193, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body, !llvm.loop !62
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal28worker_thread_already_lockedEPNS1_4workE(%"struct.Halide::Runtime::Internal::work"* %owned_job) local_unnamed_addr #0 {
entry:
  %active_workers.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 8
  %tobool.not = icmp eq %"struct.Halide::Runtime::Internal::work"* %owned_job, null
  %extent.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 0, i32 6
  %exit_status = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 9
  %parent_job = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 5
  %siblings56 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 3
  %owner_is_sleeping = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 11
  %next_job10 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 2
  br label %while.cond

while.cond:                                       ; preds = %while.cond.backedge, %entry
  %spin_count.0 = phi i32 [ 0, %entry ], [ %spin_count.0.be, %while.cond.backedge ]
  br i1 %tobool.not, label %cond.false, label %cond.true

cond.true:                                        ; preds = %while.cond
  %0 = load i32, i32* %extent.i, align 8, !tbaa !25
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %cond.end, label %if.then

cond.false:                                       ; preds = %while.cond
  %1 = load i8, i8* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 14), align 8, !tbaa !63, !range !17
  %tobool1.not = icmp eq i8 %1, 0
  br i1 %tobool1.not, label %do.end.thread, label %while.end316

cond.end:                                         ; preds = %cond.true
  %2 = load i32, i32* %active_workers.i, align 8, !tbaa !35
  %tobool2.i.not = icmp eq i32 %2, 0
  br i1 %tobool2.i.not, label %while.end316, label %if.then

if.then:                                          ; preds = %cond.end, %cond.true
  %3 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), align 8, !tbaa !57
  %4 = load i32, i32* %exit_status, align 4, !tbaa !34
  %cmp.not = icmp eq i32 %4, 0
  br i1 %cmp.not, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.then
  %5 = load i32, i32* %active_workers.i, align 8, !tbaa !35
  %cmp4 = icmp eq i32 %5, 0
  br i1 %cmp4, label %while.cond6.preheader, label %do.end

while.cond6.preheader:                            ; preds = %if.then3
  %cmp7.not524 = icmp eq %"struct.Halide::Runtime::Internal::work"* %3, %owned_job
  br i1 %cmp7.not524, label %while.end, label %while.body8

while.body8:                                      ; preds = %while.cond6.preheader, %while.body8
  %job.0525 = phi %"struct.Halide::Runtime::Internal::work"* [ %6, %while.body8 ], [ %3, %while.cond6.preheader ]
  %next_job = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.0525, i64 0, i32 2
  %6 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %next_job, align 8, !tbaa !58
  %cmp7.not = icmp eq %"struct.Halide::Runtime::Internal::work"* %6, %owned_job
  br i1 %cmp7.not, label %while.end.loopexit, label %while.body8, !llvm.loop !64

while.end.loopexit:                               ; preds = %while.body8
  %next_job.le = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.0525, i64 0, i32 2
  br label %while.end

while.end:                                        ; preds = %while.end.loopexit, %while.cond6.preheader
  %prev_ptr.0.lcssa = phi %"struct.Halide::Runtime::Internal::work"** [ getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), %while.cond6.preheader ], [ %next_job.le, %while.end.loopexit ]
  %7 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %next_job10, align 8, !tbaa !58
  store %"struct.Halide::Runtime::Internal::work"* %7, %"struct.Halide::Runtime::Internal::work"** %prev_ptr.0.lcssa, align 8, !tbaa !10
  store i32 0, i32* %extent.i, align 8, !tbaa !25
  br label %while.cond.backedge

if.else:                                          ; preds = %if.then
  %8 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %parent_job, align 8, !tbaa !40
  %tobool11.not = icmp eq %"struct.Halide::Runtime::Internal::work"* %8, null
  br i1 %tobool11.not, label %do.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.else
  %exit_status13 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %8, i64 0, i32 9
  %9 = load i32, i32* %exit_status13, align 4, !tbaa !34
  %cmp14.not = icmp eq i32 %9, 0
  br i1 %cmp14.not, label %do.end, label %if.then15

if.then15:                                        ; preds = %land.lhs.true
  store i32 %9, i32* %exit_status, align 4, !tbaa !34
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 10)) #16
  br label %while.cond.backedge

do.end:                                           ; preds = %land.lhs.true, %if.else, %if.then3
  %tobool23.not527 = icmp eq %"struct.Halide::Runtime::Internal::work"* %3, null
  br i1 %tobool23.not527, label %if.then105, label %do.end27

do.end.thread:                                    ; preds = %cond.false
  %10 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), align 8, !tbaa !57
  %tobool23.not527563 = icmp eq %"struct.Halide::Runtime::Internal::work"* %10, null
  br i1 %tobool23.not527563, label %if.else112, label %do.end27.us

do.end27.us:                                      ; preds = %do.end.thread, %cleanup.us
  %job.1529.us = phi %"struct.Halide::Runtime::Internal::work"* [ %29, %cleanup.us ], [ %10, %do.end.thread ]
  %prev_ptr.1528.us = phi %"struct.Halide::Runtime::Internal::work"** [ %next_job95.us, %cleanup.us ], [ getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), %do.end.thread ]
  %parent_job29.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 5
  %11 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %parent_job29.us, align 8, !tbaa !40
  %cmp30.us = icmp eq %"struct.Halide::Runtime::Internal::work"* %11, null
  br i1 %cmp30.us, label %if.then31.us, label %if.else32.us

if.else32.us:                                     ; preds = %do.end27.us
  %active_workers33.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %11, i64 0, i32 8
  %12 = load i32, i32* %active_workers33.us, align 8, !tbaa !35
  %cmp34.us = icmp eq i32 %12, 0
  %min_threads.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %11, i64 0, i32 0, i32 7
  %13 = load i32, i32* %min_threads.us, align 4, !tbaa !30
  br i1 %cmp34.us, label %if.then35.us, label %if.else38.us

if.else38.us:                                     ; preds = %if.else32.us
  %mul.us = mul nsw i32 %13, %12
  %threads_reserved42.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %11, i64 0, i32 6
  %14 = load i32, i32* %threads_reserved42.us, align 8, !tbaa !56
  %sub43.us = sub nsw i32 %mul.us, %14
  br label %if.end45.us

if.then35.us:                                     ; preds = %if.else32.us
  %threads_reserved.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %11, i64 0, i32 6
  %15 = load i32, i32* %threads_reserved.us, align 8, !tbaa !56
  %sub37.us = sub nsw i32 %13, %15
  br label %if.end45.us

if.then31.us:                                     ; preds = %do.end27.us
  %16 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !52
  %add.us = add nsw i32 %16, 1
  %17 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !53
  %sub.us = sub i32 %add.us, %17
  br label %if.end45.us

if.end45.us:                                      ; preds = %if.then31.us, %if.then35.us, %if.else38.us
  %threads_available.0.us = phi i32 [ %sub.us, %if.then31.us ], [ %sub37.us, %if.then35.us ], [ %sub43.us, %if.else38.us ]
  %min_threads47.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 0, i32 7
  %18 = load i32, i32* %min_threads47.us, align 4, !tbaa !30
  %cmp48.not.us = icmp sge i32 %threads_available.0.us, %18
  %serial.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 0, i32 8
  %19 = load i8, i8* %serial.us, align 8, !tbaa !26, !range !17
  %tobool69.not.us = icmp eq i8 %19, 0
  br i1 %tobool69.not.us, label %if.end45.us.lor.end73.us_crit_edge, label %lor.rhs70.us

if.end45.us.lor.end73.us_crit_edge:               ; preds = %if.end45.us
  %.0 = and i1 %cmp48.not.us, true
  br label %lor.end73.us

lor.rhs70.us:                                     ; preds = %if.end45.us
  %active_workers71.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 8
  %20 = load i32, i32* %active_workers71.us, align 8, !tbaa !35
  %cmp72.us = icmp eq i32 %20, 0
  %.1 = and i1 %cmp48.not.us, %cmp72.us
  br label %lor.end73.us

lor.end73.us:                                     ; preds = %if.end45.us.lor.end73.us_crit_edge, %lor.rhs70.us
  %.phi = phi i1 [ %.0, %if.end45.us.lor.end73.us_crit_edge ], [ %.1, %lor.rhs70.us ]
  br i1 %.phi, label %if.then86.us, label %cleanup.us

if.then86.us:                                     ; preds = %lor.end73.us
  %next_semaphore.i.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 10
  %21 = load i32, i32* %next_semaphore.i.us, align 8, !tbaa !36
  %num_semaphores.i.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 0, i32 4
  %22 = load i32, i32* %num_semaphores.i.us, align 8, !tbaa !28
  %cmp14.i.us = icmp slt i32 %21, %22
  br i1 %cmp14.i.us, label %for.body.lr.ph.i.us, label %if.else127

for.body.lr.ph.i.us:                              ; preds = %if.then86.us
  %semaphores.i.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 0, i32 3
  br label %for.body.i.us

for.body.i.us:                                    ; preds = %for.inc.i.us, %for.body.lr.ph.i.us
  %23 = phi i32 [ %21, %for.body.lr.ph.i.us ], [ %inc.i.us, %for.inc.i.us ]
  %24 = load %struct.halide_semaphore_acquire_t*, %struct.halide_semaphore_acquire_t** %semaphores.i.us, align 8, !tbaa !27
  %idxprom.i.us = sext i32 %23 to i64
  %semaphore.i.us = getelementptr inbounds %struct.halide_semaphore_acquire_t, %struct.halide_semaphore_acquire_t* %24, i64 %idxprom.i.us, i32 0
  %25 = load %struct.halide_semaphore_t*, %struct.halide_semaphore_t** %semaphore.i.us, align 8, !tbaa !65
  %count.i.us = getelementptr inbounds %struct.halide_semaphore_acquire_t, %struct.halide_semaphore_acquire_t* %24, i64 %idxprom.i.us, i32 1
  %26 = load i32, i32* %count.i.us, align 8, !tbaa !67
  %call.i.us = tail call zeroext i1 @halide_default_semaphore_try_acquire(%struct.halide_semaphore_t* %25, i32 %26) #15
  br i1 %call.i.us, label %for.inc.i.us, label %cleanup.us

for.inc.i.us:                                     ; preds = %for.body.i.us
  %27 = load i32, i32* %next_semaphore.i.us, align 8, !tbaa !36
  %inc.i.us = add nsw i32 %27, 1
  store i32 %inc.i.us, i32* %next_semaphore.i.us, align 8, !tbaa !36
  %28 = load i32, i32* %num_semaphores.i.us, align 8, !tbaa !28
  %cmp.i.us = icmp slt i32 %inc.i.us, %28
  br i1 %cmp.i.us, label %for.body.i.us, label %if.else127, !llvm.loop !68

cleanup.us:                                       ; preds = %for.body.i.us, %lor.end73.us
  %next_job95.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 2
  %29 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %next_job95.us, align 8, !tbaa !58
  %tobool23.not.us = icmp eq %"struct.Halide::Runtime::Internal::work"* %29, null
  br i1 %tobool23.not.us, label %if.then103, label %do.end27.us

do.end27:                                         ; preds = %do.end, %cleanup
  %job.1529 = phi %"struct.Halide::Runtime::Internal::work"* [ %50, %cleanup ], [ %3, %do.end ]
  %prev_ptr.1528 = phi %"struct.Halide::Runtime::Internal::work"** [ %next_job95, %cleanup ], [ getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), %do.end ]
  %parent_job29 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 5
  %30 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %parent_job29, align 8, !tbaa !40
  %cmp30 = icmp eq %"struct.Halide::Runtime::Internal::work"* %30, null
  br i1 %cmp30, label %if.then31, label %if.else32

if.then31:                                        ; preds = %do.end27
  %31 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !52
  %add = add nsw i32 %31, 1
  %32 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !53
  %sub = sub i32 %add, %32
  br label %if.end45

if.else32:                                        ; preds = %do.end27
  %active_workers33 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %30, i64 0, i32 8
  %33 = load i32, i32* %active_workers33, align 8, !tbaa !35
  %cmp34 = icmp eq i32 %33, 0
  %min_threads = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %30, i64 0, i32 0, i32 7
  %34 = load i32, i32* %min_threads, align 4, !tbaa !30
  br i1 %cmp34, label %if.then35, label %if.else38

if.then35:                                        ; preds = %if.else32
  %threads_reserved = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %30, i64 0, i32 6
  %35 = load i32, i32* %threads_reserved, align 8, !tbaa !56
  %sub37 = sub nsw i32 %34, %35
  br label %if.end45

if.else38:                                        ; preds = %if.else32
  %mul = mul nsw i32 %34, %33
  %threads_reserved42 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %30, i64 0, i32 6
  %36 = load i32, i32* %threads_reserved42, align 8, !tbaa !56
  %sub43 = sub nsw i32 %mul, %36
  br label %if.end45

if.end45:                                         ; preds = %if.else38, %if.then35, %if.then31
  %threads_available.0 = phi i32 [ %sub, %if.then31 ], [ %sub37, %if.then35 ], [ %sub43, %if.else38 ]
  %min_threads47 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 0, i32 7
  %37 = load i32, i32* %min_threads47, align 4, !tbaa !30
  %cmp48.not = icmp slt i32 %threads_available.0, %37
  %siblings = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 3
  %38 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %siblings, align 8, !tbaa !38
  %39 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %siblings56, align 8, !tbaa !38
  %cmp57 = icmp ne %"struct.Halide::Runtime::Internal::work"* %38, %39
  %cmp60 = icmp ne i32 %37, 0
  %serial = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 0, i32 8
  %40 = load i8, i8* %serial, align 8, !tbaa !26, !range !17
  %tobool69.not = icmp eq i8 %40, 0
  br i1 %tobool69.not, label %if.end45.lor.end73_crit_edge, label %lor.rhs70

if.end45.lor.end73_crit_edge:                     ; preds = %if.end45
  %.not472.0 = xor i1 true, true
  br label %lor.end73

lor.rhs70:                                        ; preds = %if.end45
  %active_workers71 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 8
  %41 = load i32, i32* %active_workers71, align 8, !tbaa !35
  %cmp72 = icmp eq i32 %41, 0
  %.not472.1 = xor i1 %cmp72, true
  br label %lor.end73

lor.end73:                                        ; preds = %if.end45.lor.end73_crit_edge, %lor.rhs70
  %.not472.phi = phi i1 [ %.not472.0, %if.end45.lor.end73_crit_edge ], [ %.not472.1, %lor.rhs70 ]
  %.not = and i1 %cmp60, %cmp57
  %brmerge = or i1 %cmp48.not, %.not
  %brmerge473 = or i1 %brmerge, %.not472.phi
  br i1 %brmerge473, label %cleanup, label %if.then86

if.then86:                                        ; preds = %lor.end73
  %next_semaphore.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 10
  %42 = load i32, i32* %next_semaphore.i, align 8, !tbaa !36
  %num_semaphores.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 0, i32 4
  %43 = load i32, i32* %num_semaphores.i, align 8, !tbaa !28
  %cmp14.i = icmp slt i32 %42, %43
  br i1 %cmp14.i, label %for.body.lr.ph.i, label %if.else127

for.body.lr.ph.i:                                 ; preds = %if.then86
  %semaphores.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 0, i32 3
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %44 = phi i32 [ %42, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i ]
  %45 = load %struct.halide_semaphore_acquire_t*, %struct.halide_semaphore_acquire_t** %semaphores.i, align 8, !tbaa !27
  %idxprom.i = sext i32 %44 to i64
  %semaphore.i = getelementptr inbounds %struct.halide_semaphore_acquire_t, %struct.halide_semaphore_acquire_t* %45, i64 %idxprom.i, i32 0
  %46 = load %struct.halide_semaphore_t*, %struct.halide_semaphore_t** %semaphore.i, align 8, !tbaa !65
  %count.i = getelementptr inbounds %struct.halide_semaphore_acquire_t, %struct.halide_semaphore_acquire_t* %45, i64 %idxprom.i, i32 1
  %47 = load i32, i32* %count.i, align 8, !tbaa !67
  %call.i = tail call zeroext i1 @halide_default_semaphore_try_acquire(%struct.halide_semaphore_t* %46, i32 %47) #15
  br i1 %call.i, label %for.inc.i, label %cleanup

for.inc.i:                                        ; preds = %for.body.i
  %48 = load i32, i32* %next_semaphore.i, align 8, !tbaa !36
  %inc.i = add nsw i32 %48, 1
  store i32 %inc.i, i32* %next_semaphore.i, align 8, !tbaa !36
  %49 = load i32, i32* %num_semaphores.i, align 8, !tbaa !28
  %cmp.i = icmp slt i32 %inc.i, %49
  br i1 %cmp.i, label %for.body.i, label %if.else127, !llvm.loop !68

cleanup:                                          ; preds = %for.body.i, %lor.end73
  %next_job95 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 2
  %50 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %next_job95, align 8, !tbaa !58
  %tobool23.not = icmp eq %"struct.Halide::Runtime::Internal::work"* %50, null
  br i1 %tobool23.not, label %if.then103, label %do.end27

if.then103:                                       ; preds = %cleanup, %cleanup.us
  br i1 %tobool.not, label %if.else112, label %if.then105

if.then105:                                       ; preds = %do.end, %if.then103
  %inc = add nsw i32 %spin_count.0, 1
  %cmp106 = icmp slt i32 %spin_count.0, 40
  br i1 %cmp106, label %if.then107, label %if.else108

if.then107:                                       ; preds = %if.then105
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  tail call void @halide_thread_yield() #15
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  br label %while.cond.backedge

if.else108:                                       ; preds = %if.then105
  %51 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 12), align 4, !tbaa !59
  %inc109 = add nsw i32 %51, 1
  store i32 %inc109, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 12), align 4, !tbaa !59
  store i8 1, i8* %owner_is_sleeping, align 4, !tbaa !37
  tail call void @halide_cond_wait(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 10), %struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  store i8 0, i8* %owner_is_sleeping, align 4, !tbaa !37
  %52 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 12), align 4, !tbaa !59
  %dec = add nsw i32 %52, -1
  store i32 %dec, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 12), align 4, !tbaa !59
  br label %while.cond.backedge

if.else112:                                       ; preds = %if.then103, %do.end.thread
  %53 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 11), align 8, !tbaa !69
  %inc113 = add nsw i32 %53, 1
  store i32 %inc113, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 11), align 8, !tbaa !69
  %54 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !54
  %55 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 6), align 8, !tbaa !60
  %cmp114 = icmp sgt i32 %54, %55
  br i1 %cmp114, label %if.then115, label %if.else118

if.then115:                                       ; preds = %if.else112
  %dec116 = add nsw i32 %54, -1
  store i32 %dec116, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !54
  tail call void @halide_cond_wait(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 9), %struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  %56 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !54
  %inc117 = add nsw i32 %56, 1
  store i32 %inc117, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !54
  br label %if.end124

if.else118:                                       ; preds = %if.else112
  %inc119 = add nsw i32 %spin_count.0, 1
  %cmp120 = icmp slt i32 %spin_count.0, 40
  br i1 %cmp120, label %if.then121, label %if.else122

if.then121:                                       ; preds = %if.else118
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  tail call void @halide_thread_yield() #15
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  br label %if.end124

if.else122:                                       ; preds = %if.else118
  tail call void @halide_cond_wait(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 8), %struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  br label %if.end124

if.end124:                                        ; preds = %if.else122, %if.then121, %if.then115
  %spin_count.1 = phi i32 [ %spin_count.0, %if.then115 ], [ %inc119, %if.then121 ], [ %inc119, %if.else122 ]
  %57 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 11), align 8, !tbaa !69
  %dec125 = add nsw i32 %57, -1
  store i32 %dec125, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 11), align 8, !tbaa !69
  br label %while.cond.backedge

if.else127:                                       ; preds = %if.then86, %if.then86.us, %for.inc.i, %for.inc.i.us
  %next_semaphore.i521 = phi i32* [ %next_semaphore.i.us, %for.inc.i.us ], [ %next_semaphore.i, %for.inc.i ], [ %next_semaphore.i.us, %if.then86.us ], [ %next_semaphore.i, %if.then86 ]
  %prev_ptr.1519 = phi %"struct.Halide::Runtime::Internal::work"** [ %prev_ptr.1528.us, %for.inc.i.us ], [ %prev_ptr.1528, %for.inc.i ], [ %prev_ptr.1528.us, %if.then86.us ], [ %prev_ptr.1528, %if.then86 ]
  %job.1515 = phi %"struct.Halide::Runtime::Internal::work"* [ %job.1529.us, %for.inc.i.us ], [ %job.1529, %for.inc.i ], [ %job.1529.us, %if.then86.us ], [ %job.1529, %if.then86 ]
  store i32 0, i32* %next_semaphore.i521, align 8, !tbaa !36
  %active_workers132 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 8
  %58 = load i32, i32* %active_workers132, align 8, !tbaa !35
  %inc133 = add nsw i32 %58, 1
  store i32 %inc133, i32* %active_workers132, align 8, !tbaa !35
  %parent_job134 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 5
  %59 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %parent_job134, align 8, !tbaa !40
  %cmp135 = icmp eq %"struct.Halide::Runtime::Internal::work"* %59, null
  %min_threads138 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 7
  %60 = load i32, i32* %min_threads138, align 4, !tbaa !30
  br i1 %cmp135, label %if.then136, label %if.else143

if.then136:                                       ; preds = %if.else127
  %61 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !53
  %add139 = add nsw i32 %61, %60
  store i32 %add139, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !53
  br label %if.end152

if.else143:                                       ; preds = %if.else127
  %threads_reserved147 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %59, i64 0, i32 6
  %62 = load i32, i32* %threads_reserved147, align 8, !tbaa !56
  %add148 = add nsw i32 %62, %60
  store i32 %add148, i32* %threads_reserved147, align 8, !tbaa !56
  br label %if.end152

if.end152:                                        ; preds = %if.else143, %if.then136
  %serial154 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 8
  %63 = load i8, i8* %serial154, align 8, !tbaa !26, !range !17
  %tobool155.not = icmp eq i8 %63, 0
  br i1 %tobool155.not, label %if.else198, label %if.then156

if.then156:                                       ; preds = %if.end152
  %next_job157 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 2
  %64 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %next_job157, align 8, !tbaa !58
  store %"struct.Halide::Runtime::Internal::work"* %64, %"struct.Halide::Runtime::Internal::work"** %prev_ptr.1519, align 8, !tbaa !10
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  %extent163 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 6
  %next_semaphore.i474 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 10
  %num_semaphores.i475 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 4
  %semaphores.i477 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 3
  %user_context = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 7
  %fn = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 0
  %min = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 5
  %closure = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 1
  %65 = bitcast %"struct.Halide::Runtime::Internal::work"* %job.1515 to i8*
  br label %while.cond161.preheader

while.cond161.preheader:                          ; preds = %if.end172, %if.then156
  %iters.0538 = phi i32 [ 1, %if.then156 ], [ 0, %if.end172 ]
  %total_iters.0537 = phi i32 [ 0, %if.then156 ], [ %add178, %if.end172 ]
  %66 = load i32, i32* %extent163, align 8, !tbaa !25
  %sub164531 = sub nsw i32 %66, %total_iters.0537
  %cmp165532 = icmp sgt i32 %sub164531, %iters.0538
  br i1 %cmp165532, label %land.rhs.preheader, label %while.end169

land.rhs.preheader:                               ; preds = %while.cond161.preheader
  %.pre = load i32, i32* %next_semaphore.i474, align 8, !tbaa !36
  %.pre560 = load i32, i32* %num_semaphores.i475, align 8, !tbaa !28
  br label %land.rhs

land.rhs:                                         ; preds = %while.body167, %land.rhs.preheader
  %67 = phi i32 [ %76, %while.body167 ], [ %66, %land.rhs.preheader ]
  %68 = phi i32 [ %77, %while.body167 ], [ %.pre560, %land.rhs.preheader ]
  %69 = phi i32 [ 0, %while.body167 ], [ %.pre, %land.rhs.preheader ]
  %iters.1533 = phi i32 [ %inc168, %while.body167 ], [ %iters.0538, %land.rhs.preheader ]
  %cmp14.i476 = icmp slt i32 %69, %68
  br i1 %cmp14.i476, label %for.body.i483, label %while.body167

for.body.i483:                                    ; preds = %land.rhs, %for.inc.i486
  %70 = phi i32 [ %inc.i484, %for.inc.i486 ], [ %69, %land.rhs ]
  %71 = load %struct.halide_semaphore_acquire_t*, %struct.halide_semaphore_acquire_t** %semaphores.i477, align 8, !tbaa !27
  %idxprom.i479 = sext i32 %70 to i64
  %semaphore.i480 = getelementptr inbounds %struct.halide_semaphore_acquire_t, %struct.halide_semaphore_acquire_t* %71, i64 %idxprom.i479, i32 0
  %72 = load %struct.halide_semaphore_t*, %struct.halide_semaphore_t** %semaphore.i480, align 8, !tbaa !65
  %count.i481 = getelementptr inbounds %struct.halide_semaphore_acquire_t, %struct.halide_semaphore_acquire_t* %71, i64 %idxprom.i479, i32 1
  %73 = load i32, i32* %count.i481, align 8, !tbaa !67
  %call.i482 = tail call zeroext i1 @halide_default_semaphore_try_acquire(%struct.halide_semaphore_t* %72, i32 %73) #15
  br i1 %call.i482, label %for.inc.i486, label %while.end169

for.inc.i486:                                     ; preds = %for.body.i483
  %74 = load i32, i32* %next_semaphore.i474, align 8, !tbaa !36
  %inc.i484 = add nsw i32 %74, 1
  store i32 %inc.i484, i32* %next_semaphore.i474, align 8, !tbaa !36
  %75 = load i32, i32* %num_semaphores.i475, align 8, !tbaa !28
  %cmp.i485 = icmp slt i32 %inc.i484, %75
  br i1 %cmp.i485, label %for.body.i483, label %while.body167.loopexit, !llvm.loop !68

while.body167.loopexit:                           ; preds = %for.inc.i486
  %.pre561 = load i32, i32* %extent163, align 8, !tbaa !25
  br label %while.body167

while.body167:                                    ; preds = %while.body167.loopexit, %land.rhs
  %76 = phi i32 [ %.pre561, %while.body167.loopexit ], [ %67, %land.rhs ]
  %77 = phi i32 [ %75, %while.body167.loopexit ], [ %68, %land.rhs ]
  store i32 0, i32* %next_semaphore.i474, align 8, !tbaa !36
  %inc168 = add nuw nsw i32 %iters.1533, 1
  %sub164 = sub nsw i32 %76, %total_iters.0537
  %cmp165 = icmp sgt i32 %sub164, %inc168
  br i1 %cmp165, label %land.rhs, label %if.end172, !llvm.loop !70

while.end169:                                     ; preds = %for.body.i483, %while.cond161.preheader
  %iters.1523 = phi i32 [ %iters.0538, %while.cond161.preheader ], [ %iters.1533, %for.body.i483 ]
  %cmp170 = icmp eq i32 %iters.1523, 0
  br i1 %cmp170, label %while.end179, label %if.end172

if.end172:                                        ; preds = %while.body167, %while.end169
  %iters.1523566 = phi i32 [ %iters.1523, %while.end169 ], [ %inc168, %while.body167 ]
  %78 = load i8*, i8** %user_context, align 8, !tbaa !33
  %79 = load i32 (i8*, i32, i32, i8*, i8*)*, i32 (i8*, i32, i32, i8*, i8*)** %fn, align 8, !tbaa !20
  %80 = load i32, i32* %min, align 4, !tbaa !24
  %add175 = add nsw i32 %80, %total_iters.0537
  %81 = load i8*, i8** %closure, align 8, !tbaa !29
  %call177 = tail call i32 @halide_do_loop_task(i8* %78, i32 (i8*, i32, i32, i8*, i8*)* %79, i32 %add175, i32 %iters.1523566, i8* %81, i8* nonnull %65) #16
  %add178 = add nuw nsw i32 %iters.1523566, %total_iters.0537
  %cmp159 = icmp eq i32 %call177, 0
  br i1 %cmp159, label %while.cond161.preheader, label %while.end179, !llvm.loop !71

while.end179:                                     ; preds = %if.end172, %while.end169
  %cmp170568 = phi i1 [ true, %while.end169 ], [ false, %if.end172 ]
  %result.0.lcssa = phi i32 [ 0, %while.end169 ], [ %call177, %if.end172 ]
  %total_iters.0.lcssa = phi i32 [ %total_iters.0537, %while.end169 ], [ %add178, %if.end172 ]
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  %82 = load i32, i32* %min, align 4, !tbaa !24
  %add182 = add nsw i32 %82, %total_iters.0.lcssa
  store i32 %add182, i32* %min, align 4, !tbaa !24
  %83 = load i32, i32* %extent163, align 8, !tbaa !25
  %sub185 = sub nsw i32 %83, %total_iters.0.lcssa
  store i32 %sub185, i32* %extent163, align 8, !tbaa !25
  br i1 %cmp170568, label %if.else190, label %if.end230.thread505

if.end230.thread505:                              ; preds = %while.end179
  store i32 0, i32* %extent163, align 8, !tbaa !25
  br label %if.then238

if.else190:                                       ; preds = %while.end179
  %cmp193 = icmp sgt i32 %sub185, 0
  br i1 %cmp193, label %if.then194, label %if.end271

if.then194:                                       ; preds = %if.else190
  %84 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), align 8, !tbaa !57
  store %"struct.Halide::Runtime::Internal::work"* %84, %"struct.Halide::Runtime::Internal::work"** %next_job157, align 8, !tbaa !58
  store %"struct.Halide::Runtime::Internal::work"* %job.1515, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), align 8, !tbaa !57
  br label %if.end271

if.else198:                                       ; preds = %if.end152
  %myjob.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 0
  %myjob.sroa.0.0.copyload = load i32 (i8*, i32, i32, i8*, i8*)*, i32 (i8*, i32, i32, i8*, i8*)** %myjob.sroa.0.0..sroa_idx, align 8, !tbaa.struct !72
  %myjob.sroa.4.0..sroa_idx327 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 1
  %myjob.sroa.4.0.copyload = load i8*, i8** %myjob.sroa.4.0..sroa_idx327, align 8, !tbaa.struct !74
  %myjob.sroa.6333.0..sroa_idx334 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 5
  %myjob.sroa.6333.0.copyload = load i32, i32* %myjob.sroa.6333.0..sroa_idx334, align 4
  %myjob.sroa.8340.0..sroa_idx341 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 1
  %myjob.sroa.8340.0.copyload = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %myjob.sroa.8340.0..sroa_idx341, align 8, !tbaa.struct !75
  %myjob.sroa.10347.0..sroa_idx348 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 7
  %myjob.sroa.10347.0.copyload = load i8*, i8** %myjob.sroa.10347.0..sroa_idx348, align 8, !tbaa.struct !76
  %inc201 = add nsw i32 %myjob.sroa.6333.0.copyload, 1
  store i32 %inc201, i32* %myjob.sroa.6333.0..sroa_idx334, align 4, !tbaa !24
  %extent203 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 6
  %85 = load i32, i32* %extent203, align 8, !tbaa !25
  %dec204 = add nsw i32 %85, -1
  store i32 %dec204, i32* %extent203, align 8, !tbaa !25
  %cmp207 = icmp eq i32 %dec204, 0
  br i1 %cmp207, label %if.then208, label %if.end210

if.then208:                                       ; preds = %if.else198
  %next_job209 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 2
  %86 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %next_job209, align 8, !tbaa !58
  store %"struct.Halide::Runtime::Internal::work"* %86, %"struct.Halide::Runtime::Internal::work"** %prev_ptr.1519, align 8, !tbaa !10
  br label %if.end210

if.end210:                                        ; preds = %if.then208, %if.else198
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  %tobool211.not = icmp eq i32 (i8*, i32, i8*)* %myjob.sroa.8340.0.copyload, null
  br i1 %tobool211.not, label %if.else220, label %if.then212

if.then212:                                       ; preds = %if.end210
  %call219 = tail call i32 @halide_do_task(i8* %myjob.sroa.10347.0.copyload, i32 (i8*, i32, i8*)* nonnull %myjob.sroa.8340.0.copyload, i32 %myjob.sroa.6333.0.copyload, i8* %myjob.sroa.4.0.copyload) #16
  br label %if.end230

if.else220:                                       ; preds = %if.end210
  %87 = bitcast %"struct.Halide::Runtime::Internal::work"* %job.1515 to i8*
  %call228 = tail call i32 @halide_do_loop_task(i8* %myjob.sroa.10347.0.copyload, i32 (i8*, i32, i32, i8*, i8*)* %myjob.sroa.0.0.copyload, i32 %myjob.sroa.6333.0.copyload, i32 1, i8* %myjob.sroa.4.0.copyload, i8* %87) #16
  br label %if.end230

if.end230:                                        ; preds = %if.else220, %if.then212
  %result.1 = phi i32 [ %call219, %if.then212 ], [ %call228, %if.else220 ]
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  %cmp237.not = icmp eq i32 %result.1, 0
  br i1 %cmp237.not, label %if.end271, label %if.then238

if.then238:                                       ; preds = %if.end230, %if.end230.thread505
  %result.2510 = phi i32 [ %result.0.lcssa, %if.end230.thread505 ], [ %result.1, %if.end230 ]
  %exit_status239 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 9
  store i32 %result.2510, i32* %exit_status239, align 4, !tbaa !34
  %sibling_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 4
  %88 = load i32, i32* %sibling_count, align 8, !tbaa !39
  %cmp240540 = icmp sgt i32 %88, 0
  br i1 %cmp240540, label %do.end243.lr.ph, label %if.end271

do.end243.lr.ph:                                  ; preds = %if.then238
  %siblings244 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 3
  %89 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %siblings244, align 8, !tbaa !38
  %wide.trip.count = zext i32 %88 to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %90 = icmp eq i32 %88, 1
  br i1 %90, label %if.end271.loopexit.unr-lcssa, label %do.end243.lr.ph.new

do.end243.lr.ph.new:                              ; preds = %do.end243.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %do.end243

do.end243:                                        ; preds = %for.inc.1, %do.end243.lr.ph.new
  %indvars.iv = phi i64 [ 0, %do.end243.lr.ph.new ], [ %indvars.iv.next.1, %for.inc.1 ]
  %wake_owners.0541 = phi i8 [ 0, %do.end243.lr.ph.new ], [ %wake_owners.1.1, %for.inc.1 ]
  %niter = phi i64 [ %unroll_iter, %do.end243.lr.ph.new ], [ %niter.nsub.1, %for.inc.1 ]
  %exit_status245 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %89, i64 %indvars.iv, i32 9
  %91 = load i32, i32* %exit_status245, align 4, !tbaa !34
  %cmp246 = icmp eq i32 %91, 0
  br i1 %cmp246, label %if.then247, label %for.inc

if.then247:                                       ; preds = %do.end243
  store i32 %result.2510, i32* %exit_status245, align 4, !tbaa !34
  %92 = load i32, i32* %active_workers132, align 8, !tbaa !35
  %cmp253 = icmp eq i32 %92, 0
  br i1 %cmp253, label %land.rhs254, label %land.end260

land.rhs254:                                      ; preds = %if.then247
  %owner_is_sleeping258 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %89, i64 %indvars.iv, i32 11
  %93 = load i8, i8* %owner_is_sleeping258, align 4, !tbaa !37, !range !17
  br label %land.end260

land.end260:                                      ; preds = %land.rhs254, %if.then247
  %94 = phi i8 [ 0, %if.then247 ], [ %93, %land.rhs254 ]
  %95 = and i8 %wake_owners.0541, 1
  %or = or i8 %94, %95
  br label %for.inc

for.inc:                                          ; preds = %land.end260, %do.end243
  %wake_owners.1 = phi i8 [ %or, %land.end260 ], [ %wake_owners.0541, %do.end243 ]
  %indvars.iv.next = or i64 %indvars.iv, 1
  %exit_status245.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %89, i64 %indvars.iv.next, i32 9
  %96 = load i32, i32* %exit_status245.1, align 4, !tbaa !34
  %cmp246.1 = icmp eq i32 %96, 0
  br i1 %cmp246.1, label %if.then247.1, label %for.inc.1

if.end271.loopexit.unr-lcssa:                     ; preds = %for.inc.1, %do.end243.lr.ph
  %wake_owners.1.lcssa.ph = phi i8 [ undef, %do.end243.lr.ph ], [ %wake_owners.1.1, %for.inc.1 ]
  %indvars.iv.unr = phi i64 [ 0, %do.end243.lr.ph ], [ %indvars.iv.next.1, %for.inc.1 ]
  %wake_owners.0541.unr = phi i8 [ 0, %do.end243.lr.ph ], [ %wake_owners.1.1, %for.inc.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %if.end271, label %do.end243.epil

do.end243.epil:                                   ; preds = %if.end271.loopexit.unr-lcssa
  %exit_status245.epil = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %89, i64 %indvars.iv.unr, i32 9
  %97 = load i32, i32* %exit_status245.epil, align 4, !tbaa !34
  %cmp246.epil = icmp eq i32 %97, 0
  br i1 %cmp246.epil, label %if.then247.epil, label %if.end271

if.then247.epil:                                  ; preds = %do.end243.epil
  store i32 %result.2510, i32* %exit_status245.epil, align 4, !tbaa !34
  %98 = load i32, i32* %active_workers132, align 8, !tbaa !35
  %cmp253.epil = icmp eq i32 %98, 0
  br i1 %cmp253.epil, label %land.rhs254.epil, label %land.end260.epil

land.rhs254.epil:                                 ; preds = %if.then247.epil
  %owner_is_sleeping258.epil = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %89, i64 %indvars.iv.unr, i32 11
  %99 = load i8, i8* %owner_is_sleeping258.epil, align 4, !tbaa !37, !range !17
  br label %land.end260.epil

land.end260.epil:                                 ; preds = %land.rhs254.epil, %if.then247.epil
  %100 = phi i8 [ 0, %if.then247.epil ], [ %99, %land.rhs254.epil ]
  %101 = and i8 %wake_owners.0541.unr, 1
  %or.epil = or i8 %100, %101
  br label %if.end271

if.end271:                                        ; preds = %if.end271.loopexit.unr-lcssa, %do.end243.epil, %land.end260.epil, %if.then238, %if.end230, %if.then194, %if.else190
  %wake_owners.2 = phi i8 [ 0, %if.end230 ], [ 0, %if.else190 ], [ 0, %if.then194 ], [ 0, %if.then238 ], [ %wake_owners.1.lcssa.ph, %if.end271.loopexit.unr-lcssa ], [ %or.epil, %land.end260.epil ], [ %wake_owners.0541.unr, %do.end243.epil ]
  %102 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %parent_job134, align 8, !tbaa !40
  %cmp273 = icmp eq %"struct.Halide::Runtime::Internal::work"* %102, null
  %103 = load i32, i32* %min_threads138, align 4, !tbaa !30
  br i1 %cmp273, label %if.then274, label %if.else281

if.then274:                                       ; preds = %if.end271
  %104 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !53
  %sub277 = sub nsw i32 %104, %103
  store i32 %sub277, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !53
  br label %if.end290

if.else281:                                       ; preds = %if.end271
  %threads_reserved285 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %102, i64 0, i32 6
  %105 = load i32, i32* %threads_reserved285, align 8, !tbaa !56
  %sub286 = sub nsw i32 %105, %103
  store i32 %sub286, i32* %threads_reserved285, align 8, !tbaa !56
  br label %if.end290

if.end290:                                        ; preds = %if.else281, %if.then274
  %106 = load i32, i32* %active_workers132, align 8, !tbaa !35
  %dec292 = add nsw i32 %106, -1
  store i32 %dec292, i32* %active_workers132, align 8, !tbaa !35
  %107 = and i8 %wake_owners.2, 1
  %tobool296.not = icmp eq i8 %107, 0
  br i1 %tobool296.not, label %lor.lhs.false297, label %if.then310

lor.lhs.false297:                                 ; preds = %if.end290
  %cmp299 = icmp eq i32 %dec292, 0
  br i1 %cmp299, label %land.lhs.true300, label %while.cond.backedge

land.lhs.true300:                                 ; preds = %lor.lhs.false297
  %extent302 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 6
  %108 = load i32, i32* %extent302, align 8, !tbaa !25
  %cmp303 = icmp eq i32 %108, 0
  br i1 %cmp303, label %land.lhs.true307, label %lor.lhs.false304

lor.lhs.false304:                                 ; preds = %land.lhs.true300
  %exit_status305 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 9
  %109 = load i32, i32* %exit_status305, align 4, !tbaa !34
  %cmp306.not = icmp eq i32 %109, 0
  br i1 %cmp306.not, label %while.cond.backedge, label %land.lhs.true307

land.lhs.true307:                                 ; preds = %lor.lhs.false304, %land.lhs.true300
  %owner_is_sleeping308 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 11
  %110 = load i8, i8* %owner_is_sleeping308, align 4, !tbaa !37, !range !17
  %tobool309.not = icmp eq i8 %110, 0
  br i1 %tobool309.not, label %while.cond.backedge, label %if.then310

if.then310:                                       ; preds = %land.lhs.true307, %if.end290
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 10)) #16
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.then310, %land.lhs.true307, %lor.lhs.false304, %lor.lhs.false297, %if.end124, %if.else108, %if.then107, %if.then15, %while.end
  %spin_count.0.be = phi i32 [ %spin_count.0, %while.end ], [ %spin_count.0, %if.then15 ], [ %inc, %if.then107 ], [ %inc, %if.else108 ], [ %spin_count.1, %if.end124 ], [ 0, %if.then310 ], [ 0, %land.lhs.true307 ], [ 0, %lor.lhs.false304 ], [ 0, %lor.lhs.false297 ]
  br label %while.cond, !llvm.loop !77

while.end316:                                     ; preds = %cond.end, %cond.false
  ret void

if.then247.1:                                     ; preds = %for.inc
  store i32 %result.2510, i32* %exit_status245.1, align 4, !tbaa !34
  %111 = load i32, i32* %active_workers132, align 8, !tbaa !35
  %cmp253.1 = icmp eq i32 %111, 0
  br i1 %cmp253.1, label %land.rhs254.1, label %land.end260.1

land.rhs254.1:                                    ; preds = %if.then247.1
  %owner_is_sleeping258.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %89, i64 %indvars.iv.next, i32 11
  %112 = load i8, i8* %owner_is_sleeping258.1, align 4, !tbaa !37, !range !17
  br label %land.end260.1

land.end260.1:                                    ; preds = %land.rhs254.1, %if.then247.1
  %113 = phi i8 [ 0, %if.then247.1 ], [ %112, %land.rhs254.1 ]
  %114 = and i8 %wake_owners.1, 1
  %or.1 = or i8 %113, %114
  br label %for.inc.1

for.inc.1:                                        ; preds = %land.end260.1, %for.inc
  %wake_owners.1.1 = phi i8 [ %or.1, %land.end260.1 ], [ %wake_owners.1, %for.inc ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %if.end271.loopexit.unr-lcssa, label %do.end243, !llvm.loop !78
}

; Function Attrs: nounwind
define weak void @halide_mutex_unlock(%struct.halide_mutex* %mutex) local_unnamed_addr #4 {
entry:
  %control.i.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", align 8
  %state.i = getelementptr %struct.halide_mutex, %struct.halide_mutex* %mutex, i64 0, i32 0, i64 0
  %0 = cmpxchg weak i64* %state.i, i64 1, i64 0 release monotonic
  %1 = extractvalue { i64, i1 } %0, 1
  br i1 %1, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %2 = cmpxchg i64* %state.i, i64 1, i64 0 release monotonic
  %3 = extractvalue { i64, i1 } %2, 1
  br i1 %3, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit, label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i
  %4 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !41
  %lock_state2.i.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 1
  store i64* %state.i, i64** %lock_state2.i.i.i, align 8, !tbaa !43
  %6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 0
  %7 = ptrtoint %struct.halide_mutex* %mutex to i64
  %call3.i.i = call i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control10unpark_oneEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %6, i64 %7) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #10
  br label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit

_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit: ; preds = %if.end.i.i, %if.then.i, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control10unpark_oneEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, i64 %addr) local_unnamed_addr #0 align 2 {
entry:
  %call = tail call nonnull align 8 dereferenceable(24) %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* @_ZN6Halide7Runtime8Internal15Synchronization11lock_bucketEy(i64 %addr) #16
  %head = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 1
  %0 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %head, align 8, !tbaa !10
  %tail = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 2
  %1 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::parking_control"* %this to i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)***
  %state.i60 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 0, i32 0
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 0
  br label %while.cond

while.cond:                                       ; preds = %cleanup, %entry
  %data_location.0 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** [ %head, %entry ], [ %data_location.1, %cleanup ]
  %prev.0 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ null, %entry ], [ %prev.1, %cleanup ]
  %data.0 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %0, %entry ], [ %data.1, %cleanup ]
  %retval.0 = phi i64 [ undef, %entry ], [ %retval.1, %cleanup ]
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, null
  br i1 %cmp.not, label %while.end22, label %while.body

while.body:                                       ; preds = %while.cond
  %sleep_address = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, i64 0, i32 1
  %2 = load atomic i64, i64* %sleep_address monotonic, align 8
  %cmp2 = icmp eq i64 %2, %addr
  %next3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, i64 0, i32 2
  %3 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next3, align 8, !tbaa !79
  br i1 %cmp2, label %if.then, label %cleanup

if.then:                                          ; preds = %while.body
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %3, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %data_location.0, align 8, !tbaa !10
  %4 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail, align 8, !tbaa !85
  %cmp4 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %4, %data.0
  br i1 %cmp4, label %if.then5, label %while.cond7.preheader

while.cond7.preheader:                            ; preds = %if.then
  %cmp872.not = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %3, null
  br i1 %cmp872.not, label %if.end, label %while.body9

if.then5:                                         ; preds = %if.then
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %prev.0, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail, align 8, !tbaa !85
  br label %if.end

while.body9:                                      ; preds = %while.cond7.preheader, %while.body9
  %data2.073 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %6, %while.body9 ], [ %3, %while.cond7.preheader ]
  %sleep_address10 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data2.073, i64 0, i32 1
  %5 = load atomic i64, i64* %sleep_address10 monotonic, align 8
  %cmp11 = icmp eq i64 %5, %addr
  %next12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data2.073, i64 0, i32 2
  %6 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next12, align 8, !tbaa !79
  %cmp8 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %6, null
  %7 = or i1 %cmp11, %cmp8
  br i1 %7, label %if.end.loopexit, label %while.body9, !llvm.loop !88

if.end.loopexit:                                  ; preds = %while.body9
  %frombool = zext i1 %cmp11 to i8
  br label %if.end

if.end:                                           ; preds = %if.end.loopexit, %if.then5, %while.cond7.preheader
  %more_waiters.1 = phi i8 [ 0, %if.then5 ], [ 0, %while.cond7.preheader ], [ %frombool, %if.end.loopexit ]
  %tobool13 = icmp ne i8 %more_waiters.1, 0
  %vtable = load i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)**, i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)*** %1, align 8, !tbaa !41
  %vfn = getelementptr inbounds i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)*, i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)** %vtable, i64 2
  %8 = load i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)*, i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)** %vfn, align 8
  %call14 = tail call i64 %8(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, i32 1, i1 zeroext %tobool13) #15
  %unpark_info = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, i64 0, i32 3
  store i64 %call14, i64* %unpark_info, align 8, !tbaa !89
  %mutex.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, i64 0, i32 0, i32 0
  %call.i = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* nonnull %mutex.i) #15
  %9 = atomicrmw and i64* %state.i60, i64 -2 release
  %and.i61 = and i64 %9, 2
  %cmp.i62 = icmp ne i64 %and.i61, 0
  %cmp3.not.i63 = icmp ult i64 %9, 4
  %or.cond.i64 = or i1 %cmp3.not.i63, %cmp.i62
  br i1 %or.cond.i64, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66, label %if.then.i65

if.then.i65:                                      ; preds = %if.end
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex) #15
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66

_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66: ; preds = %if.then.i65, %if.end
  %should_park.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, i64 0, i32 0, i32 2
  store i8 0, i8* %should_park.i, align 8, !tbaa !90
  %condvar.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, i64 0, i32 0, i32 1
  %call.i67 = tail call i32 @pthread_cond_signal(%struct.pthread_mutex_t* nonnull %condvar.i) #15
  %call.i69 = tail call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* nonnull %mutex.i) #15
  %10 = zext i8 %more_waiters.1 to i64
  br label %cleanup

cleanup:                                          ; preds = %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66, %while.body
  %data_location.1 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** [ %data_location.0, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66 ], [ %next3, %while.body ]
  %prev.1 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %prev.0, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66 ], [ %data.0, %while.body ]
  %data.1 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %data.0, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66 ], [ %3, %while.body ]
  %retval.1 = phi i64 [ %10, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66 ], [ %retval.0, %while.body ]
  br i1 %cmp2, label %cleanup27, label %while.cond, !llvm.loop !91

while.end22:                                      ; preds = %while.cond
  %vtable23 = load i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)**, i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)*** %1, align 8, !tbaa !41
  %vfn24 = getelementptr inbounds i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)*, i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)** %vtable23, i64 2
  %11 = load i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)*, i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)** %vfn24, align 8
  %call25 = tail call i64 %11(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, i32 0, i1 zeroext false) #15
  %12 = atomicrmw and i64* %state.i60, i64 -2 release
  %and.i = and i64 %12, 2
  %cmp.i = icmp ne i64 %and.i, 0
  %cmp3.not.i = icmp ult i64 %12, 4
  %or.cond.i = or i1 %cmp3.not.i, %cmp.i
  br i1 %or.cond.i, label %cleanup27, label %if.then.i

if.then.i:                                        ; preds = %while.end22
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex) #15
  br label %cleanup27

cleanup27:                                        ; preds = %cleanup, %if.then.i, %while.end22
  %retval.2 = phi i64 [ 0, %while.end22 ], [ 0, %if.then.i ], [ %retval.1, %cleanup ]
  ret i64 %retval.2
}

; Function Attrs: nounwind mustprogress
define linkonce nonnull align 8 dereferenceable(24) %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* @_ZN6Halide7Runtime8Internal15Synchronization11lock_bucketEy(i64 %addr) local_unnamed_addr #0 {
entry:
  %mul.i = mul i64 %addr, -7046029254386353131
  %shr.i = lshr i64 %mul.i, 54
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_table", %"struct.Halide::Runtime::Internal::Synchronization::hash_table"* @_ZN6Halide7Runtime8Internal15Synchronization5tableE, i64 0, i32 0, i64 %shr.i
  %state.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx, i64 0, i32 0, i32 0
  %0 = cmpxchg weak i64* %state.i, i64 0, i64 1 acquire monotonic
  %1 = extractvalue { i64, i1 } %0, 1
  br i1 %1, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex) #15
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit

_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit: ; preds = %if.then.i, %entry
  ret %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx
}

declare i32 @pthread_mutex_lock(%struct.pthread_mutex_t*) local_unnamed_addr #1

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %this) local_unnamed_addr #4 align 2 {
entry:
  %state = getelementptr inbounds %"class.Halide::Runtime::Internal::Synchronization::word_lock", %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %this, i64 0, i32 0
  %0 = load atomic i64, i64* %state monotonic, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %expected.0 = phi i64 [ %0, %entry ], [ %3, %if.end ]
  %and = and i64 %expected.0, 2
  %tobool.not = icmp ne i64 %and, 0
  %cmp = icmp ult i64 %expected.0, 4
  %or.cond = or i1 %cmp, %tobool.not
  br i1 %or.cond, label %cleanup75, label %if.end

if.end:                                           ; preds = %while.cond
  %or = or i64 %expected.0, 2
  %1 = cmpxchg weak i64* %state, i64 %expected.0, i64 %or acquire monotonic
  %2 = extractvalue { i64, i1 } %1, 1
  %3 = extractvalue { i64, i1 } %1, 0
  br i1 %2, label %while.cond11, label %while.cond

while.cond11:                                     ; preds = %if.end, %cleanup70
  %.pn.pn = phi { i64, i1 } [ %.pn, %cleanup70 ], [ %1, %if.end ]
  %expected.3 = extractvalue { i64, i1 } %.pn.pn, 0
  %and13 = and i64 %expected.3, -4
  %4 = inttoptr i64 %and13 to %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*
  %tail14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %4, i64 0, i32 3
  %tail.0143 = load %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %tail14, align 8, !tbaa !92
  %cmp16144 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0143, null
  br i1 %cmp16144, label %while.body17, label %while.end23

while.body17:                                     ; preds = %while.cond11, %do.end
  %current.0145 = phi %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* [ %5, %do.end ], [ %4, %while.cond11 ]
  %next18 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %current.0145, i64 0, i32 1
  %5 = load %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %next18, align 8, !tbaa !94
  %cmp19.not = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %5, null
  br i1 %cmp19.not, label %if.then20, label %do.end

if.then20:                                        ; preds = %while.body17
  tail call void @halide_print(i8* null, i8* getelementptr inbounds ([158 x i8], [158 x i8]* @.str.5, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end

do.end:                                           ; preds = %if.then20, %while.body17
  %prev = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %5, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %current.0145, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %prev, align 8, !tbaa !95
  %tail22 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %5, i64 0, i32 3
  %tail.0 = load %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %tail22, align 8, !tbaa !92
  %cmp16 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0, null
  br i1 %cmp16, label %while.body17, label %while.end23, !llvm.loop !96

while.end23:                                      ; preds = %do.end, %while.cond11
  %tail.0.lcssa = phi %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* [ %tail.0143, %while.cond11 ], [ %tail.0, %do.end ]
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0.lcssa, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %tail14, align 8, !tbaa !92
  %and25 = and i64 %expected.3, 1
  %tobool26.not = icmp eq i64 %and25, 0
  br i1 %tobool26.not, label %if.end35, label %if.then27

if.then27:                                        ; preds = %while.end23
  %and29 = and i64 %expected.3, -3
  %6 = cmpxchg weak i64* %state, i64 %expected.3, i64 %and29 acq_rel monotonic
  %7 = extractvalue { i64, i1 } %6, 1
  br i1 %7, label %cleanup75, label %cleanup70

if.end35:                                         ; preds = %while.end23
  %prev36 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0.lcssa, i64 0, i32 2
  %8 = load %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %prev36, align 8, !tbaa !95
  %cmp37 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %8, null
  br i1 %cmp37, label %while.body41, label %if.else62

while.body41:                                     ; preds = %if.end35, %if.end47
  %expected.5146 = phi i64 [ %11, %if.end47 ], [ %expected.3, %if.end35 ]
  %and43 = and i64 %expected.5146, 1
  %9 = cmpxchg weak i64* %state, i64 %expected.5146, i64 %and43 acq_rel monotonic
  %10 = extractvalue { i64, i1 } %9, 1
  br i1 %10, label %if.end66, label %if.end47

if.end47:                                         ; preds = %while.body41
  %11 = extractvalue { i64, i1 } %9, 0
  %cmp49 = icmp ult i64 %11, 4
  br i1 %cmp49, label %while.body41, label %cleanup70, !llvm.loop !97

if.else62:                                        ; preds = %if.end35
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %8, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %tail14, align 8, !tbaa !92
  %12 = atomicrmw and i64* %state, i64 -3 release
  br label %if.end66

if.end66:                                         ; preds = %while.body41, %if.else62
  %mutex.i103 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0.lcssa, i64 0, i32 0, i32 0
  %call.i104 = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* nonnull %mutex.i103) #15
  %should_park.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0.lcssa, i64 0, i32 0, i32 2
  store i8 0, i8* %should_park.i, align 8, !tbaa !90
  %condvar.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0.lcssa, i64 0, i32 0, i32 1
  %call.i101 = tail call i32 @pthread_cond_signal(%struct.pthread_mutex_t* nonnull %condvar.i) #15
  %call.i = tail call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* nonnull %mutex.i103) #15
  br label %cleanup75

cleanup70:                                        ; preds = %if.end47, %if.then27
  %.pn = phi { i64, i1 } [ %6, %if.then27 ], [ %9, %if.end47 ]
  fence acquire
  br label %while.cond11

cleanup75:                                        ; preds = %while.cond, %if.then27, %if.end66
  ret void
}

declare i32 @pthread_cond_signal(%struct.pthread_mutex_t*) local_unnamed_addr #1

declare i32 @pthread_mutex_unlock(%struct.pthread_mutex_t*) local_unnamed_addr #1

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %this) local_unnamed_addr #4 align 2 {
entry:
  %node = alloca %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", align 8
  %state = getelementptr inbounds %"class.Halide::Runtime::Internal::Synchronization::word_lock", %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %this, i64 0, i32 0
  %0 = load atomic i64, i64* %state monotonic, align 8
  %1 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node to i8*
  %should_park.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node, i64 0, i32 0, i32 2
  %mutex2.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node, i64 0, i32 0, i32 0
  %condvar3.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node, i64 0, i32 0, i32 1
  %next.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node, i64 0, i32 1
  %tail.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node, i64 0, i32 3
  %2 = ptrtoint %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node to i64
  %3 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %next.i to <2 x %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*>*
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %while.cond.outer.backedge, %entry
  %expected.0.ph = phi i64 [ %0, %entry ], [ %expected.0.ph.be, %while.cond.outer.backedge ]
  %spinner.sroa.0.0.ph = phi i32 [ 40, %entry ], [ %spinner.sroa.0.0.ph.be, %while.cond.outer.backedge ]
  %and46 = and i64 %expected.0.ph, 1
  %tobool.not47 = icmp eq i64 %and46, 0
  br i1 %tobool.not47, label %if.then, label %if.end4

if.then:                                          ; preds = %while.cond.outer, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit
  %expected.048 = phi i64 [ %6, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit ], [ %expected.0.ph, %while.cond.outer ]
  %or = or i64 %expected.048, 1
  %4 = cmpxchg weak i64* %state, i64 %expected.048, i64 %or acquire monotonic
  %5 = extractvalue { i64, i1 } %4, 1
  br i1 %5, label %cleanup23, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit: ; preds = %if.then
  %6 = extractvalue { i64, i1 } %4, 0
  %and = and i64 %6, 1
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %if.then, label %if.end4.loopexit

if.end4.loopexit:                                 ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit
  %7 = extractvalue { i64, i1 } %4, 0
  br label %if.end4

if.end4:                                          ; preds = %if.end4.loopexit, %while.cond.outer
  %expected.0.lcssa = phi i64 [ %expected.0.ph, %while.cond.outer ], [ %7, %if.end4.loopexit ]
  %cmp.not = icmp ugt i64 %expected.0.lcssa, 3
  %cmp.i = icmp sgt i32 %spinner.sroa.0.0.ph, 0
  %or.cond = and i1 %cmp.i, %cmp.not
  br i1 %or.cond, label %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit, label %if.end9

_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit: ; preds = %if.end4
  %cmp4.i = icmp sgt i32 %spinner.sroa.0.0.ph, 1
  br i1 %cmp4.i, label %if.then7, label %if.end9

if.then7:                                         ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit
  %dec.i = add nsw i32 %spinner.sroa.0.0.ph, -1
  call void @halide_thread_yield() #15
  %8 = load atomic i64, i64* %state monotonic, align 8
  br label %while.cond.outer.backedge

if.end9:                                          ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit, %if.end4
  %spinner.sroa.0.2 = phi i32 [ %spinner.sroa.0.0.ph, %if.end4 ], [ 0, %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit ]
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1) #10
  store i8 0, i8* %should_park.i.i, align 8, !tbaa !90
  %call.i.i29 = call i32 @pthread_mutex_init(%struct.pthread_mutex_t* nonnull %mutex2.i.i, i8* null) #15
  %call4.i.i = call i32 @pthread_cond_init(%struct.pthread_mutex_t* nonnull %condvar3.i.i, i8* null) #15
  store <2 x %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*> zeroinitializer, <2 x %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*>* %3, align 8, !tbaa !10
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* null, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %tail.i, align 8, !tbaa !92
  store i8 1, i8* %should_park.i.i, align 8, !tbaa !90
  %and10 = and i64 %expected.0.lcssa, -4
  %cmp11 = icmp eq i64 %and10, 0
  br i1 %cmp11, label %if.then12, label %if.else

if.then12:                                        ; preds = %if.end9
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %tail.i, align 8, !tbaa !92
  br label %if.end13

if.else:                                          ; preds = %if.end9
  %9 = inttoptr i64 %and10 to %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %9, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %next.i, align 8, !tbaa !94
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then12
  %and15 = and i64 %expected.0.lcssa, 3
  %or16 = or i64 %and15, %2
  %10 = cmpxchg weak i64* %state, i64 %expected.0.lcssa, i64 %or16 release monotonic
  %11 = extractvalue { i64, i1 } %10, 1
  br i1 %11, label %if.then19, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_release_relaxedEPyS4_S4_.exit

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_release_relaxedEPyS4_S4_.exit: ; preds = %if.end13
  %12 = extractvalue { i64, i1 } %10, 0
  br label %if.end22

if.then19:                                        ; preds = %if.end13
  %call.i = call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* nonnull %mutex2.i.i) #15
  %13 = load i8, i8* %should_park.i.i, align 8, !tbaa !90, !range !17
  %tobool.not6.i = icmp eq i8 %13, 0
  br i1 %tobool.not6.i, label %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit, label %while.body.i

while.body.i:                                     ; preds = %if.then19, %while.body.i
  %call3.i = call i32 @pthread_cond_wait(%struct.pthread_mutex_t* nonnull %condvar3.i.i, %struct.pthread_mutex_t* nonnull %mutex2.i.i) #15
  %14 = load i8, i8* %should_park.i.i, align 8, !tbaa !90, !range !17
  %tobool.not.i = icmp eq i8 %14, 0
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit, label %while.body.i, !llvm.loop !98

_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit: ; preds = %while.body.i, %if.then19
  %call5.i = call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* nonnull %mutex2.i.i) #15
  %15 = load atomic i64, i64* %state monotonic, align 8
  br label %if.end22

if.end22:                                         ; preds = %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_release_relaxedEPyS4_S4_.exit
  %expected.3 = phi i64 [ %15, %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit ], [ %12, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_release_relaxedEPyS4_S4_.exit ]
  %spinner.sroa.0.3 = phi i32 [ 40, %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit ], [ %spinner.sroa.0.2, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_release_relaxedEPyS4_S4_.exit ]
  %call.i.i = call i32 @pthread_cond_destroy(%struct.pthread_mutex_t* nonnull %condvar3.i.i) #15
  %call2.i.i = call i32 @pthread_mutex_destroy(%struct.pthread_mutex_t* nonnull %mutex2.i.i) #15
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1) #10
  br label %while.cond.outer.backedge

while.cond.outer.backedge:                        ; preds = %if.end22, %if.then7
  %expected.0.ph.be = phi i64 [ %8, %if.then7 ], [ %expected.3, %if.end22 ]
  %spinner.sroa.0.0.ph.be = phi i32 [ %dec.i, %if.then7 ], [ %spinner.sroa.0.3, %if.end22 ]
  br label %while.cond.outer

cleanup23:                                        ; preds = %if.then
  ret void
}

declare i32 @pthread_mutex_init(%struct.pthread_mutex_t*, i8*) local_unnamed_addr #1

declare i32 @pthread_cond_init(%struct.pthread_mutex_t*, i8*) local_unnamed_addr #1

declare i32 @pthread_cond_wait(%struct.pthread_mutex_t*, %struct.pthread_mutex_t*) local_unnamed_addr #1

declare i32 @pthread_cond_destroy(%struct.pthread_mutex_t*) local_unnamed_addr #1

declare i32 @pthread_mutex_destroy(%struct.pthread_mutex_t*) local_unnamed_addr #1

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr zeroext i1 @_ZN6Halide7Runtime8Internal15Synchronization21mutex_parking_control8validateERNS2_15validate_actionE(%"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* nonnull dereferenceable(16) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action) unnamed_addr #2 comdat align 2 {
entry:
  %lock_state = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %this, i64 0, i32 1
  %0 = load i64*, i64** %lock_state, align 8, !tbaa !43
  %1 = load atomic i64, i64* %0 monotonic, align 8
  %cmp = icmp eq i64 %1, 3
  ret i1 %cmp
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr void @_ZN6Halide7Runtime8Internal15Synchronization15parking_control12before_sleepEv(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this) unnamed_addr #2 comdat align 2 {
entry:
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr i64 @_ZN6Halide7Runtime8Internal15Synchronization21mutex_parking_control6unparkEib(%"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* nonnull dereferenceable(16) %this, i32 %unparked, i1 zeroext %more_waiters) unnamed_addr #2 comdat align 2 {
entry:
  %0 = select i1 %more_waiters, i64 2, i64 0
  %lock_state = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %this, i64 0, i32 1
  %1 = load i64*, i64** %lock_state, align 8, !tbaa !43
  store atomic i64 %0, i64* %1 release, align 8
  ret i64 0
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr void @_ZN6Halide7Runtime8Internal15Synchronization15parking_control16requeue_callbackERKNS2_15validate_actionEbb(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action, i1 zeroext %one_to_wake, i1 zeroext %some_requeued) unnamed_addr #2 comdat align 2 {
entry:
  ret void
}

; Function Attrs: nounwind
define weak void @halide_cond_broadcast(%struct.halide_mutex* %cond) local_unnamed_addr #4 {
entry:
  %control.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", align 8
  %state.i = getelementptr %struct.halide_mutex, %struct.halide_mutex* %cond, i64 0, i32 0, i64 0
  %0 = load atomic i64, i64* %state.i monotonic, align 8
  %cmp.i = icmp eq i64 %0, 0
  br i1 %cmp.i, label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond9broadcastEv.exit, label %if.end.i

if.end.i:                                         ; preds = %entry
  %1 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #10
  %2 = inttoptr i64 %0 to %"class.Halide::Runtime::Internal::Synchronization::word_lock"*
  %3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization25broadcast_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8, !tbaa !41
  %cond_state2.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 1
  store i64* %state.i, i64** %cond_state2.i.i, align 8, !tbaa !99
  %mutex3.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 2
  store %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %2, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex3.i.i, align 8, !tbaa !101
  %4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 0
  %5 = ptrtoint %struct.halide_mutex* %cond to i64
  %call.i = call i32 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control14unpark_requeueEyyy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %4, i64 %5, i64 %0, i64 0) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #10
  br label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond9broadcastEv.exit

_ZN6Halide7Runtime8Internal15Synchronization9fast_cond9broadcastEv.exit: ; preds = %if.end.i, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define weak zeroext i1 @halide_default_semaphore_try_acquire(%struct.halide_semaphore_t* %s, i32 %n) #0 {
entry:
  %cmp = icmp eq i32 %n, 0
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %value = bitcast %struct.halide_semaphore_t* %s to i32*
  %0 = load atomic i32, i32* %value acquire, align 4
  %sub12 = sub nsw i32 %0, %n
  %cmp113 = icmp sgt i32 %sub12, -1
  br i1 %cmp113, label %land.rhs, label %return

land.rhs:                                         ; preds = %if.end, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_130atomic_cas_weak_relacq_relaxedIiEEbPT_S6_S6_.exit
  %sub15 = phi i32 [ %sub, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_130atomic_cas_weak_relacq_relaxedIiEEbPT_S6_S6_.exit ], [ %sub12, %if.end ]
  %expected.014 = phi i32 [ %3, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_130atomic_cas_weak_relacq_relaxedIiEEbPT_S6_S6_.exit ], [ %0, %if.end ]
  %1 = cmpxchg weak i32* %value, i32 %expected.014, i32 %sub15 acq_rel monotonic
  %2 = extractvalue { i32, i1 } %1, 1
  br i1 %2, label %return.loopexit, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_130atomic_cas_weak_relacq_relaxedIiEEbPT_S6_S6_.exit

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_130atomic_cas_weak_relacq_relaxedIiEEbPT_S6_S6_.exit: ; preds = %land.rhs
  %3 = extractvalue { i32, i1 } %1, 0
  %sub = sub nsw i32 %3, %n
  %cmp1 = icmp sgt i32 %sub, -1
  br i1 %cmp1, label %land.rhs, label %return.loopexit

return.loopexit:                                  ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_130atomic_cas_weak_relacq_relaxedIiEEbPT_S6_S6_.exit, %land.rhs
  %4 = extractvalue { i32, i1 } %1, 1
  br label %return

return:                                           ; preds = %return.loopexit, %if.end, %entry
  %retval.0 = phi i1 [ true, %entry ], [ false, %if.end ], [ %4, %return.loopexit ]
  ret i1 %retval.0
}

; Function Attrs: nounwind
define weak void @halide_cond_wait(%struct.halide_mutex* %cond, %struct.halide_mutex* %mutex) local_unnamed_addr #4 {
entry:
  %control.i.i.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", align 8
  %control.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", align 8
  %0 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #10
  %state.i = getelementptr %struct.halide_mutex, %struct.halide_mutex* %cond, i64 0, i32 0, i64 0
  %1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization20wait_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1, align 8, !tbaa !41
  %cond_state2.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 1
  store i64* %state.i, i64** %cond_state2.i.i, align 8, !tbaa !102
  %mutex3.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 2
  %2 = bitcast %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex3.i.i to %struct.halide_mutex**
  store %struct.halide_mutex* %mutex, %struct.halide_mutex** %2, align 8, !tbaa !104
  %3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 0
  %4 = ptrtoint %struct.halide_mutex* %cond to i64
  %call.i = call i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control4parkEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %3, i64 %4) #15
  %5 = ptrtoint %struct.halide_mutex* %mutex to i64
  %cmp.not.i = icmp eq i64 %call.i, %5
  %6 = getelementptr %struct.halide_mutex, %struct.halide_mutex* %mutex, i64 0, i32 0, i64 0
  br i1 %cmp.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  %7 = cmpxchg weak i64* %6, i64 0, i64 1 acquire monotonic
  %8 = extractvalue { i64, i1 } %7, 1
  br i1 %8, label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond4waitEPNS2_10fast_mutexE.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then.i
  %9 = load atomic i64, i64* %6 monotonic, align 8
  %10 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i.i to i8*
  %11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i.i, i64 0, i32 0, i32 0
  %lock_state2.i.i.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i.i, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i.i, i64 0, i32 0
  br label %while.cond.outer.i.i.i

while.cond.outer.i.i.i:                           ; preds = %while.cond.outer.i.i.i.backedge, %if.then.i.i
  %expected.0.ph.i.i.i = phi i64 [ %9, %if.then.i.i ], [ %expected.0.ph.i.i.i.be, %while.cond.outer.i.i.i.backedge ]
  %spinner.sroa.0.0.ph.i.i.i = phi i32 [ 40, %if.then.i.i ], [ %spinner.sroa.0.0.ph.i.i.i.be, %while.cond.outer.i.i.i.backedge ]
  %and55.i.i.i = and i64 %expected.0.ph.i.i.i, 1
  %tobool.not56.i.i.i = icmp eq i64 %and55.i.i.i, 0
  br i1 %tobool.not56.i.i.i, label %if.then.i.i.i, label %if.end4.i.i.i

if.then.i.i.i:                                    ; preds = %while.cond.outer.i.i.i, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i.i
  %expected.057.i.i.i = phi i64 [ %15, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i.i ], [ %expected.0.ph.i.i.i, %while.cond.outer.i.i.i ]
  %or.i.i.i = or i64 %expected.057.i.i.i, 1
  %13 = cmpxchg weak i64* %6, i64 %expected.057.i.i.i, i64 %or.i.i.i acquire monotonic
  %14 = extractvalue { i64, i1 } %13, 1
  br i1 %14, label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond4waitEPNS2_10fast_mutexE.exit, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i.i

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i.i: ; preds = %if.then.i.i.i
  %15 = extractvalue { i64, i1 } %13, 0
  %and.i.i.i = and i64 %15, 1
  %tobool.not.i.i.i = icmp eq i64 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.end4.i.i.i.loopexit

if.end4.i.i.i.loopexit:                           ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i.i
  %16 = extractvalue { i64, i1 } %13, 0
  br label %if.end4.i.i.i

if.end4.i.i.i:                                    ; preds = %if.end4.i.i.i.loopexit, %while.cond.outer.i.i.i
  %expected.0.lcssa.i.i.i = phi i64 [ %expected.0.ph.i.i.i, %while.cond.outer.i.i.i ], [ %16, %if.end4.i.i.i.loopexit ]
  %cmp.i.i.i.i = icmp sgt i32 %spinner.sroa.0.0.ph.i.i.i, 0
  br i1 %cmp.i.i.i.i, label %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i.i, label %if.end8.i.i.i

_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i.i: ; preds = %if.end4.i.i.i
  %cmp4.i.not.i.i.i = icmp eq i32 %spinner.sroa.0.0.ph.i.i.i, 1
  br i1 %cmp4.i.not.i.i.i, label %if.end8.i.i.i, label %if.then6.i.i.i

if.then6.i.i.i:                                   ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i.i
  %dec.i.i.i.i = add nsw i32 %spinner.sroa.0.0.ph.i.i.i, -1
  call void @halide_thread_yield() #15
  %17 = load atomic i64, i64* %6 monotonic, align 8
  br label %while.cond.outer.i.i.i.backedge

if.end8.i.i.i:                                    ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i.i, %if.end4.i.i.i
  %spinner.sroa.0.152.i.i.i = phi i32 [ 0, %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i.i ], [ %spinner.sroa.0.0.ph.i.i.i, %if.end4.i.i.i ]
  %and9.i.i.i = and i64 %expected.0.lcssa.i.i.i, 2
  %cmp.i.i.i = icmp eq i64 %and9.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then10.i.i.i, label %if.end19.i.i.i

if.then10.i.i.i:                                  ; preds = %if.end8.i.i.i
  %or12.i.i.i = or i64 %expected.0.lcssa.i.i.i, 2
  %18 = cmpxchg weak i64* %6, i64 %expected.0.lcssa.i.i.i, i64 %or12.i.i.i monotonic monotonic
  %19 = extractvalue { i64, i1 } %18, 1
  br i1 %19, label %if.end19.i.i.i, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i.i

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i.i: ; preds = %if.then10.i.i.i
  %20 = extractvalue { i64, i1 } %18, 0
  br label %while.cond.outer.i.i.i.backedge

if.end19.i.i.i:                                   ; preds = %if.then10.i.i.i, %if.end8.i.i.i
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8, !tbaa !41
  store i64* %6, i64** %lock_state2.i.i.i.i, align 8, !tbaa !43
  %call21.i.i.i = call i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control4parkEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %12, i64 %5) #15
  %cmp22.i.i.i = icmp eq i64 %call21.i.i.i, %5
  br i1 %cmp22.i.i.i, label %cleanup30.critedge.i.i.i, label %if.end24.i.i.i

if.end24.i.i.i:                                   ; preds = %if.end19.i.i.i
  %21 = load atomic i64, i64* %6 monotonic, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  br label %while.cond.outer.i.i.i.backedge

while.cond.outer.i.i.i.backedge:                  ; preds = %if.end24.i.i.i, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i.i, %if.then6.i.i.i
  %expected.0.ph.i.i.i.be = phi i64 [ %20, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i.i ], [ %21, %if.end24.i.i.i ], [ %17, %if.then6.i.i.i ]
  %spinner.sroa.0.0.ph.i.i.i.be = phi i32 [ %spinner.sroa.0.152.i.i.i, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i.i ], [ 40, %if.end24.i.i.i ], [ %dec.i.i.i.i, %if.then6.i.i.i ]
  br label %while.cond.outer.i.i.i

cleanup30.critedge.i.i.i:                         ; preds = %if.end19.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  br label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond4waitEPNS2_10fast_mutexE.exit

if.else.i:                                        ; preds = %entry
  %22 = load atomic i64, i64* %6 monotonic, align 8
  %and.i = and i64 %22, 1
  %tobool.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool.not.i, label %if.then2.i, label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond4waitEPNS2_10fast_mutexE.exit

if.then2.i:                                       ; preds = %if.else.i
  call void @halide_print(i8* null, i8* getelementptr inbounds ([152 x i8], [152 x i8]* @.str.5.6, i64 0, i64 0)) #15
  call void @abort() #15
  br label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond4waitEPNS2_10fast_mutexE.exit

_ZN6Halide7Runtime8Internal15Synchronization9fast_cond4waitEPNS2_10fast_mutexE.exit: ; preds = %if.then.i.i.i, %if.then2.i, %if.else.i, %cleanup30.critedge.i.i.i, %if.then.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #10
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_do_loop_task(i8* %user_context, i32 (i8*, i32, i32, i8*, i8*)* %f, i32 %min, i32 %size, i8* %closure, i8* %task_parent) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)*, i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)** @_ZN6Halide7Runtime8Internal19custom_do_loop_taskE, align 8, !tbaa !10
  %call = tail call i32 %0(i8* %user_context, i32 (i8*, i32, i32, i8*, i8*)* %f, i32 %min, i32 %size, i8* %closure, i8* %task_parent) #15
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_do_task(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %idx, i8* %closure) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)*, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)** @_ZN6Halide7Runtime8Internal14custom_do_taskE, align 8, !tbaa !10
  %call = tail call i32 %0(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %idx, i8* %closure) #15
  ret i32 %call
}

; Function Attrs: nounwind
define linkonce i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control4parkEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, i64 %addr) local_unnamed_addr #4 align 2 {
entry:
  %queue_data = alloca %"struct.Halide::Runtime::Internal::Synchronization::queue_data", align 8
  %action = alloca %"struct.Halide::Runtime::Internal::Synchronization::validate_action", align 8
  %0 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %0) #10
  %should_park.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, i64 0, i32 0, i32 2
  store i8 0, i8* %should_park.i.i, align 8, !tbaa !90
  %mutex2.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, i64 0, i32 0, i32 0
  %call.i.i = call i32 @pthread_mutex_init(%struct.pthread_mutex_t* nonnull %mutex2.i.i, i8* null) #15
  %condvar3.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, i64 0, i32 0, i32 1
  %call4.i.i = call i32 @pthread_cond_init(%struct.pthread_mutex_t* nonnull %condvar3.i.i, i8* null) #15
  %sleep_address.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, i64 0, i32 1
  store i64 0, i64* %sleep_address.i, align 8, !tbaa !105
  %next.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* null, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next.i, align 8, !tbaa !79
  %unpark_info.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, i64 0, i32 3
  store i64 0, i64* %unpark_info.i, align 8, !tbaa !89
  %call = call nonnull align 8 dereferenceable(24) %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* @_ZN6Halide7Runtime8Internal15Synchronization11lock_bucketEy(i64 %addr) #16
  %1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #10
  store i8 0, i8* %1, align 8, !tbaa !106
  %invalid_unpark_info.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 2
  store i64 0, i64* %invalid_unpark_info.i, align 8, !tbaa !108
  %2 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::parking_control"* %this to i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)***
  %vtable = load i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)**, i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)*** %2, align 8, !tbaa !41
  %3 = load i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)*, i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)** %vtable, align 8
  %call2 = call zeroext i1 %3(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action) #15
  br i1 %call2, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %state.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 0, i32 0
  %4 = atomicrmw and i64* %state.i, i64 -2 release
  %and.i = and i64 %4, 2
  %cmp.i = icmp ne i64 %and.i, 0
  %cmp3.not.i = icmp ult i64 %4, 4
  %or.cond.i = or i1 %cmp3.not.i, %cmp.i
  br i1 %or.cond.i, label %cleanup, label %if.then.i

if.then.i:                                        ; preds = %if.then
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 0
  call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex) #15
  br label %cleanup

if.end:                                           ; preds = %entry
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* null, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next.i, align 8, !tbaa !79
  store i64 %addr, i64* %sleep_address.i, align 8, !tbaa !105
  store i8 1, i8* %should_park.i.i, align 8, !tbaa !90
  %head = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 1
  %5 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %head, align 8, !tbaa !109
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %5, null
  %tail = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 2
  %6 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail, align 8
  %next4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %6, i64 0, i32 2
  %head.sink = select i1 %cmp.not, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %head, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next4
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %head.sink, align 8, !tbaa !10
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail, align 8, !tbaa !85
  %state.i23 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 0, i32 0
  %7 = atomicrmw and i64* %state.i23, i64 -2 release
  %and.i24 = and i64 %7, 2
  %cmp.i25 = icmp ne i64 %and.i24, 0
  %cmp3.not.i26 = icmp ult i64 %7, 4
  %or.cond.i27 = or i1 %cmp3.not.i26, %cmp.i25
  br i1 %or.cond.i27, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit29, label %if.then.i28

if.then.i28:                                      ; preds = %if.end
  %mutex8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 0
  call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex8) #15
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit29

_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit29: ; preds = %if.then.i28, %if.end
  %8 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::parking_control"* %this to void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)***
  %vtable9 = load void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)**, void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)*** %8, align 8, !tbaa !41
  %vfn10 = getelementptr inbounds void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)*, void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)** %vtable9, i64 1
  %9 = load void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)*, void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)** %vfn10, align 8
  call void %9(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this) #15
  %call.i = call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* nonnull %mutex2.i.i) #15
  %10 = load i8, i8* %should_park.i.i, align 8, !tbaa !90, !range !17
  %tobool.not6.i = icmp eq i8 %10, 0
  br i1 %tobool.not6.i, label %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit, label %while.body.i

while.body.i:                                     ; preds = %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit29, %while.body.i
  %call3.i = call i32 @pthread_cond_wait(%struct.pthread_mutex_t* nonnull %condvar3.i.i, %struct.pthread_mutex_t* nonnull %mutex2.i.i) #15
  %11 = load i8, i8* %should_park.i.i, align 8, !tbaa !90, !range !17
  %tobool.not.i = icmp eq i8 %11, 0
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit, label %while.body.i, !llvm.loop !98

_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit: ; preds = %while.body.i, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit29
  %call5.i = call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* nonnull %mutex2.i.i) #15
  br label %cleanup

cleanup:                                          ; preds = %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit, %if.then.i, %if.then
  %unpark_info.i.sink = phi i64* [ %unpark_info.i, %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit ], [ %invalid_unpark_info.i, %if.then ], [ %invalid_unpark_info.i, %if.then.i ]
  %12 = load i64, i64* %unpark_info.i.sink, align 8, !tbaa !110
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #10
  %call.i.i22 = call i32 @pthread_cond_destroy(%struct.pthread_mutex_t* nonnull %condvar3.i.i) #15
  %call2.i.i = call i32 @pthread_mutex_destroy(%struct.pthread_mutex_t* nonnull %mutex2.i.i) #15
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %0) #10
  ret i64 %12
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr zeroext i1 @_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control8validateERNS2_15validate_actionE(%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* nonnull dereferenceable(24) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action) unnamed_addr #2 comdat align 2 {
entry:
  %cond_state = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 1
  %0 = load i64*, i64** %cond_state, align 8, !tbaa !102
  %1 = load atomic i64, i64* %0 monotonic, align 8
  %cmp = icmp eq i64 %1, 0
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 2
  %2 = load %"class.Halide::Runtime::Internal::Synchronization::word_lock"*, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex, align 8, !tbaa !104
  %3 = ptrtoint %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %2 to i64
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store atomic i64 %3, i64* %0 monotonic, align 8
  br label %cleanup

if.else:                                          ; preds = %entry
  %cmp4.not = icmp eq i64 %1, %3
  br i1 %cmp4.not, label %cleanup, label %if.then5

if.then5:                                         ; preds = %if.else
  %invalid_unpark_info = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 2
  store i64 %3, i64* %invalid_unpark_info, align 8, !tbaa !108
  br label %cleanup

cleanup:                                          ; preds = %if.then5, %if.else, %if.then
  %retval.0 = phi i1 [ false, %if.then5 ], [ true, %if.else ], [ true, %if.then ]
  ret i1 %retval.0
}

; Function Attrs: nounwind
define linkonce_odr void @_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control12before_sleepEv(%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* nonnull dereferenceable(24) %this) unnamed_addr #4 comdat align 2 {
entry:
  %control.i.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", align 8
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 2
  %0 = load %"class.Halide::Runtime::Internal::Synchronization::word_lock"*, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex, align 8, !tbaa !104
  %state.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Synchronization::word_lock", %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %0, i64 0, i32 0
  %1 = cmpxchg weak i64* %state.i, i64 1, i64 0 release monotonic
  %2 = extractvalue { i64, i1 } %1, 1
  br i1 %2, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %3 = cmpxchg i64* %state.i, i64 1, i64 0 release monotonic
  %4 = extractvalue { i64, i1 } %3, 1
  br i1 %4, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit, label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i
  %5 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !41
  %lock_state2.i.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 1
  store i64* %state.i, i64** %lock_state2.i.i.i, align 8, !tbaa !43
  %7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 0
  %8 = ptrtoint %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %0 to i64
  %call3.i.i = call i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control10unpark_oneEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %7, i64 %8) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  br label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit

_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit: ; preds = %if.end.i.i, %if.then.i, %entry
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr i64 @_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control6unparkEib(%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* nonnull dereferenceable(24) %this, i32 %unparked, i1 zeroext %more_waiters) unnamed_addr #2 comdat align 2 {
entry:
  br i1 %more_waiters, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %cond_state = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 1
  %0 = load i64*, i64** %cond_state, align 8, !tbaa !102
  store atomic i64 0, i64* %0 monotonic, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i64 0
}

; Function Attrs: nounwind
define linkonce i32 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control14unpark_requeueEyyy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, i64 %addr_from, i64 %addr_to, i64 %unpark_info) local_unnamed_addr #4 align 2 {
entry:
  %buckets = alloca %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", align 8
  %action = alloca %"struct.Halide::Runtime::Internal::Synchronization::validate_action", align 8
  %0 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %buckets to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #10
  call void @_ZN6Halide7Runtime8Internal15Synchronization16lock_bucket_pairEyy(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* nonnull sret(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair") align 8 %buckets, i64 %addr_from, i64 %addr_to) #16
  %1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #10
  store i8 0, i8* %1, align 8, !tbaa !106
  %invalid_unpark_info.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 2
  store i64 0, i64* %invalid_unpark_info.i, align 8, !tbaa !108
  %2 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::parking_control"* %this to i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)***
  %vtable = load i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)**, i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)*** %2, align 8, !tbaa !41
  %3 = load i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)*, i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)** %vtable, align 8
  %call = call zeroext i1 %3(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action) #15
  br i1 %call, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @_ZN6Halide7Runtime8Internal15Synchronization18unlock_bucket_pairERNS2_11bucket_pairE(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* nonnull align 8 dereferenceable(16) %buckets) #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %from = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %buckets, i64 0, i32 0
  %4 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %from, align 8, !tbaa !111
  %head = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %4, i64 0, i32 1
  %5 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %head, align 8, !tbaa !10
  %cmp.not92 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %5, null
  br i1 %cmp.not92, label %if.end38, label %while.body

while.body:                                       ; preds = %if.end, %if.end22
  %wakeup.098 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %wakeup.2, %if.end22 ], [ null, %if.end ]
  %requeue_tail.097 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %requeue_tail.2, %if.end22 ], [ null, %if.end ]
  %requeue.096 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %requeue.3, %if.end22 ], [ null, %if.end ]
  %data.095 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %7, %if.end22 ], [ %5, %if.end ]
  %prev.094 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %prev.1, %if.end22 ], [ null, %if.end ]
  %data_location.093 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** [ %data_location.1, %if.end22 ], [ %head, %if.end ]
  %sleep_address = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.095, i64 0, i32 1
  %6 = load atomic i64, i64* %sleep_address monotonic, align 8
  %next2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.095, i64 0, i32 2
  %7 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next2, align 8, !tbaa !79
  %cmp3 = icmp eq i64 %6, %addr_from
  br i1 %cmp3, label %if.then4, label %if.end22

if.then4:                                         ; preds = %while.body
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %7, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %data_location.093, align 8, !tbaa !10
  %8 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %from, align 8, !tbaa !111
  %tail = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %8, i64 0, i32 2
  %9 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail, align 8, !tbaa !85
  %cmp6 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %9, %data.095
  br i1 %cmp6, label %if.then7, label %if.end10

if.then7:                                         ; preds = %if.then4
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %prev.094, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail, align 8, !tbaa !85
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %if.then4
  %10 = load i8, i8* %1, align 8, !tbaa !106, !range !17
  %tobool = icmp ne i8 %10, 0
  %cmp11 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %wakeup.098, null
  %or.cond = and i1 %cmp11, %tobool
  br i1 %or.cond, label %if.end22, label %if.else

if.else:                                          ; preds = %if.end10
  %cmp13 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %requeue.096, null
  br i1 %cmp13, label %if.end17, label %if.else15

if.else15:                                        ; preds = %if.else
  %next16 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %requeue_tail.097, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.095, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next16, align 8, !tbaa !79
  br label %if.end17

if.end17:                                         ; preds = %if.else15, %if.else
  %requeue.1 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %requeue.096, %if.else15 ], [ %data.095, %if.else ]
  store atomic i64 %addr_to, i64* %sleep_address monotonic, align 8
  br label %if.end22

if.end22:                                         ; preds = %if.end17, %if.end10, %while.body
  %data_location.1 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** [ %data_location.093, %if.end10 ], [ %data_location.093, %if.end17 ], [ %next2, %while.body ]
  %prev.1 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %prev.094, %if.end10 ], [ %prev.094, %if.end17 ], [ %data.095, %while.body ]
  %requeue.3 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %requeue.096, %if.end10 ], [ %requeue.1, %if.end17 ], [ %requeue.096, %while.body ]
  %requeue_tail.2 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %requeue_tail.097, %if.end10 ], [ %data.095, %if.end17 ], [ %requeue_tail.097, %while.body ]
  %wakeup.2 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %data.095, %if.end10 ], [ %wakeup.098, %if.end17 ], [ %wakeup.098, %while.body ]
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %7, null
  br i1 %cmp.not, label %while.end, label %while.body, !llvm.loop !113

while.end:                                        ; preds = %if.end22
  %cmp23.not = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %requeue.3, null
  br i1 %cmp23.not, label %if.end38, label %if.then24

if.then24:                                        ; preds = %while.end
  %next25 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %requeue_tail.2, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* null, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next25, align 8, !tbaa !79
  %to = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %buckets, i64 0, i32 1
  %11 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %to, align 8, !tbaa !114
  %head26 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %11, i64 0, i32 1
  %12 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %head26, align 8, !tbaa !109
  %cmp27 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %12, null
  br i1 %cmp27, label %if.end35, label %if.else31

if.else31:                                        ; preds = %if.then24
  %tail33 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %11, i64 0, i32 2
  %13 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail33, align 8, !tbaa !85
  %next34 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %13, i64 0, i32 2
  br label %if.end35

if.end35:                                         ; preds = %if.else31, %if.then24
  %next34.sink = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** [ %next34, %if.else31 ], [ %head26, %if.then24 ]
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %requeue.3, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next34.sink, align 8, !tbaa !10
  %tail37 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %11, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %requeue_tail.2, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail37, align 8, !tbaa !85
  br label %if.end38

if.end38:                                         ; preds = %if.end35, %while.end, %if.end
  %cmp23106 = phi i1 [ true, %if.end35 ], [ false, %while.end ], [ false, %if.end ]
  %wakeup.0.lcssa105 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %wakeup.2, %if.end35 ], [ %wakeup.2, %while.end ], [ null, %if.end ]
  %cmp39 = icmp ne %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %wakeup.0.lcssa105, null
  %14 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::parking_control"* %this to void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)***
  %vtable41 = load void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)**, void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)*** %14, align 8, !tbaa !41
  %vfn42 = getelementptr inbounds void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)*, void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)** %vtable41, i64 3
  %15 = load void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)*, void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)** %vfn42, align 8
  call void %15(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action, i1 zeroext %cmp39, i1 zeroext %cmp23106) #15
  br i1 %cmp39, label %if.then44, label %if.else48

if.then44:                                        ; preds = %if.end38
  %unpark_info45 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %wakeup.0.lcssa105, i64 0, i32 3
  store i64 %unpark_info, i64* %unpark_info45, align 8, !tbaa !89
  %mutex.i89 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %wakeup.0.lcssa105, i64 0, i32 0, i32 0
  %call.i90 = call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* nonnull %mutex.i89) #15
  call void @_ZN6Halide7Runtime8Internal15Synchronization18unlock_bucket_pairERNS2_11bucket_pairE(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* nonnull align 8 dereferenceable(16) %buckets) #16
  %should_park.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %wakeup.0.lcssa105, i64 0, i32 0, i32 2
  store i8 0, i8* %should_park.i, align 8, !tbaa !90
  %condvar.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %wakeup.0.lcssa105, i64 0, i32 0, i32 1
  %call.i88 = call i32 @pthread_cond_signal(%struct.pthread_mutex_t* nonnull %condvar.i) #15
  %call.i = call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* nonnull %mutex.i89) #15
  br label %if.end49

if.else48:                                        ; preds = %if.end38
  call void @_ZN6Halide7Runtime8Internal15Synchronization18unlock_bucket_pairERNS2_11bucket_pairE(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* nonnull align 8 dereferenceable(16) %buckets) #16
  br label %if.end49

if.end49:                                         ; preds = %if.else48, %if.then44
  %16 = load i8, i8* %1, align 8
  %17 = and i8 %16, 1
  %tobool52 = icmp ne i8 %17, 0
  %18 = and i1 %cmp39, %tobool52
  %conv = zext i1 %18 to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end49, %if.then
  %retval.0 = phi i32 [ %conv, %if.end49 ], [ 0, %if.then ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #10
  ret i32 %retval.0
}

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal15Synchronization16lock_bucket_pairEyy(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* noalias sret(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair") align 8 %agg.result, i64 %addr_from, i64 %addr_to) local_unnamed_addr #4 {
entry:
  %mul.i = mul i64 %addr_from, -7046029254386353131
  %shr.i = lshr i64 %mul.i, 54
  %mul.i37 = mul i64 %addr_to, -7046029254386353131
  %shr.i38 = lshr i64 %mul.i37, 54
  %cmp = icmp eq i64 %shr.i, %shr.i38
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_table", %"struct.Halide::Runtime::Internal::Synchronization::hash_table"* @_ZN6Halide7Runtime8Internal15Synchronization5tableE, i64 0, i32 0, i64 %shr.i
  %state.i42 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx, i64 0, i32 0, i32 0
  %0 = cmpxchg weak i64* %state.i42, i64 0, i64 1 acquire monotonic
  %1 = extractvalue { i64, i1 } %0, 1
  br i1 %1, label %cleanup, label %if.then.i43

if.then.i43:                                      ; preds = %if.then
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex) #15
  br label %cleanup

if.else:                                          ; preds = %entry
  %cmp2 = icmp ult i64 %shr.i, %shr.i38
  br i1 %cmp2, label %if.then3, label %if.else9

if.then3:                                         ; preds = %if.else
  %arrayidx5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_table", %"struct.Halide::Runtime::Internal::Synchronization::hash_table"* @_ZN6Halide7Runtime8Internal15Synchronization5tableE, i64 0, i32 0, i64 %shr.i
  %arrayidx6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_table", %"struct.Halide::Runtime::Internal::Synchronization::hash_table"* @_ZN6Halide7Runtime8Internal15Synchronization5tableE, i64 0, i32 0, i64 %shr.i38
  %state.i52 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx5, i64 0, i32 0, i32 0
  %2 = cmpxchg weak i64* %state.i52, i64 0, i64 1 acquire monotonic
  %3 = extractvalue { i64, i1 } %2, 1
  br i1 %3, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54, label %if.then.i53

if.then.i53:                                      ; preds = %if.then3
  %mutex7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx5, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex7) #15
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54

_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54: ; preds = %if.then.i53, %if.then3
  %state.i49 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx6, i64 0, i32 0, i32 0
  %4 = cmpxchg weak i64* %state.i49, i64 0, i64 1 acquire monotonic
  %5 = extractvalue { i64, i1 } %4, 1
  br i1 %5, label %cleanup, label %if.then.i50

if.then.i50:                                      ; preds = %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54
  %mutex8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx6, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex8) #15
  br label %cleanup

if.else9:                                         ; preds = %if.else
  %arrayidx11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_table", %"struct.Halide::Runtime::Internal::Synchronization::hash_table"* @_ZN6Halide7Runtime8Internal15Synchronization5tableE, i64 0, i32 0, i64 %shr.i38
  %arrayidx13 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_table", %"struct.Halide::Runtime::Internal::Synchronization::hash_table"* @_ZN6Halide7Runtime8Internal15Synchronization5tableE, i64 0, i32 0, i64 %shr.i
  %state.i39 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx11, i64 0, i32 0, i32 0
  %6 = cmpxchg weak i64* %state.i39, i64 0, i64 1 acquire monotonic
  %7 = extractvalue { i64, i1 } %6, 1
  br i1 %7, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41, label %if.then.i40

if.then.i40:                                      ; preds = %if.else9
  %mutex14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx11, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex14) #15
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41

_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41: ; preds = %if.then.i40, %if.else9
  %state.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx13, i64 0, i32 0, i32 0
  %8 = cmpxchg weak i64* %state.i, i64 0, i64 1 acquire monotonic
  %9 = extractvalue { i64, i1 } %8, 1
  br i1 %9, label %cleanup, label %if.then.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41
  %mutex15 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx13, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex15) #15
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41, %if.then.i50, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54, %if.then.i43, %if.then
  %arrayidx13.sink = phi %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* [ %arrayidx, %if.then ], [ %arrayidx, %if.then.i43 ], [ %arrayidx5, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54 ], [ %arrayidx5, %if.then.i50 ], [ %arrayidx13, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41 ], [ %arrayidx13, %if.then.i ]
  %arrayidx11.sink = phi %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* [ %arrayidx, %if.then ], [ %arrayidx, %if.then.i43 ], [ %arrayidx6, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54 ], [ %arrayidx6, %if.then.i50 ], [ %arrayidx11, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41 ], [ %arrayidx11, %if.then.i ]
  %from2.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %agg.result, i64 0, i32 0
  store %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx13.sink, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %from2.i, align 8, !tbaa !10
  %to3.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %agg.result, i64 0, i32 1
  store %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx11.sink, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %to3.i, align 8, !tbaa !10
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal15Synchronization18unlock_bucket_pairERNS2_11bucket_pairE(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* nonnull align 8 dereferenceable(16) %buckets) local_unnamed_addr #0 {
entry:
  %from = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %buckets, i64 0, i32 0
  %0 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %from, align 8, !tbaa !111
  %to = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %buckets, i64 0, i32 1
  %1 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %to, align 8, !tbaa !114
  %cmp = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %0, %1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %state.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %0, i64 0, i32 0, i32 0
  %2 = atomicrmw and i64* %state.i, i64 -2 release
  %and.i = and i64 %2, 2
  %cmp.i = icmp ne i64 %and.i, 0
  %cmp3.not.i = icmp ult i64 %2, 4
  %or.cond.i = or i1 %cmp3.not.i, %cmp.i
  br i1 %or.cond.i, label %if.end15, label %if.then.i

if.then.i:                                        ; preds = %if.then
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %0, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex) #15
  br label %if.end15

if.else:                                          ; preds = %entry
  %cmp4 = icmp ugt %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %0, %1
  br i1 %cmp4, label %if.then5, label %if.else10

if.then5:                                         ; preds = %if.else
  %state.i25 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %0, i64 0, i32 0, i32 0
  %3 = atomicrmw and i64* %state.i25, i64 -2 release
  %and.i26 = and i64 %3, 2
  %cmp.i27 = icmp ne i64 %and.i26, 0
  %cmp3.not.i28 = icmp ult i64 %3, 4
  %or.cond.i29 = or i1 %cmp3.not.i28, %cmp.i27
  br i1 %or.cond.i29, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit31, label %if.then.i30

if.then.i30:                                      ; preds = %if.then5
  %mutex7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %0, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex7) #15
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit31

_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit31: ; preds = %if.then.i30, %if.then5
  %4 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %to, align 8, !tbaa !114
  %state.i32 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %4, i64 0, i32 0, i32 0
  %5 = atomicrmw and i64* %state.i32, i64 -2 release
  %and.i33 = and i64 %5, 2
  %cmp.i34 = icmp ne i64 %and.i33, 0
  %cmp3.not.i35 = icmp ult i64 %5, 4
  %or.cond.i36 = or i1 %cmp3.not.i35, %cmp.i34
  br i1 %or.cond.i36, label %if.end15, label %if.then.i37

if.then.i37:                                      ; preds = %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit31
  %mutex9 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %4, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex9) #15
  br label %if.end15

if.else10:                                        ; preds = %if.else
  %state.i39 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %1, i64 0, i32 0, i32 0
  %6 = atomicrmw and i64* %state.i39, i64 -2 release
  %and.i40 = and i64 %6, 2
  %cmp.i41 = icmp ne i64 %and.i40, 0
  %cmp3.not.i42 = icmp ult i64 %6, 4
  %or.cond.i43 = or i1 %cmp3.not.i42, %cmp.i41
  br i1 %or.cond.i43, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit45, label %if.then.i44

if.then.i44:                                      ; preds = %if.else10
  %mutex12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %1, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex12) #15
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit45

_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit45: ; preds = %if.then.i44, %if.else10
  %7 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %from, align 8, !tbaa !111
  %state.i46 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %7, i64 0, i32 0, i32 0
  %8 = atomicrmw and i64* %state.i46, i64 -2 release
  %and.i47 = and i64 %8, 2
  %cmp.i48 = icmp ne i64 %and.i47, 0
  %cmp3.not.i49 = icmp ult i64 %8, 4
  %or.cond.i50 = or i1 %cmp3.not.i49, %cmp.i48
  br i1 %or.cond.i50, label %if.end15, label %if.then.i51

if.then.i51:                                      ; preds = %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit45
  %mutex14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %7, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex14) #15
  br label %if.end15

if.end15:                                         ; preds = %if.then.i51, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit45, %if.then.i37, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit31, %if.then.i, %if.then
  ret void
}

; Function Attrs: nounwind
define linkonce_odr zeroext i1 @_ZN6Halide7Runtime8Internal15Synchronization25broadcast_parking_control8validateERNS2_15validate_actionE(%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* nonnull dereferenceable(24) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action) unnamed_addr #4 comdat align 2 {
entry:
  %cond_state = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 1
  %0 = load i64*, i64** %cond_state, align 8, !tbaa !99
  %1 = load atomic i64, i64* %0 monotonic, align 8
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 2
  %2 = load %"class.Halide::Runtime::Internal::Synchronization::word_lock"*, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex, align 8, !tbaa !101
  %3 = ptrtoint %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %2 to i64
  %cmp.not = icmp eq i64 %1, %3
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  store atomic i64 0, i64* %0 monotonic, align 8
  %4 = load %"class.Halide::Runtime::Internal::Synchronization::word_lock"*, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex, align 8, !tbaa !101
  %state.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Synchronization::word_lock", %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %4, i64 0, i32 0
  %5 = load atomic i64, i64* %state.i monotonic, align 8
  %and11.i = and i64 %5, 1
  %tobool.not12.i = icmp eq i64 %and11.i, 0
  br i1 %tobool.not12.i, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex21make_parked_if_lockedEv.exit, label %if.end.i

if.end.i:                                         ; preds = %if.end, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i
  %val.013.i = phi i64 [ %8, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i ], [ %5, %if.end ]
  %or.i = or i64 %val.013.i, 2
  %6 = cmpxchg weak i64* %state.i, i64 %val.013.i, i64 %or.i monotonic monotonic
  %7 = extractvalue { i64, i1 } %6, 1
  br i1 %7, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex21make_parked_if_lockedEv.exit, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i: ; preds = %if.end.i
  %8 = extractvalue { i64, i1 } %6, 0
  %and.i = and i64 %8, 1
  %tobool.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex21make_parked_if_lockedEv.exit, label %if.end.i

_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex21make_parked_if_lockedEv.exit: ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i, %if.end.i, %if.end
  %tobool.not.lcssa.i = phi i8 [ 1, %if.end ], [ 1, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i ], [ 0, %if.end.i ]
  %unpark_one = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 0
  store i8 %tobool.not.lcssa.i, i8* %unpark_one, align 8, !tbaa !106
  br label %cleanup

cleanup:                                          ; preds = %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex21make_parked_if_lockedEv.exit, %entry
  ret i1 %cmp.not
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control6unparkEib(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, i32 %unparked, i1 zeroext %more_waiters) unnamed_addr #2 comdat align 2 {
entry:
  ret i64 0
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr void @_ZN6Halide7Runtime8Internal15Synchronization25broadcast_parking_control16requeue_callbackERKNS2_15validate_actionEbb(%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* nonnull dereferenceable(24) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action, i1 zeroext %one_to_wake, i1 zeroext %some_requeued) unnamed_addr #2 comdat align 2 {
entry:
  %unpark_one = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 0
  %0 = load i8, i8* %unpark_one, align 8, !tbaa !106, !range !17
  %tobool.not = icmp ne i8 %0, 0
  %1 = and i1 %tobool.not, %some_requeued
  br i1 %1, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 2
  %2 = load %"class.Halide::Runtime::Internal::Synchronization::word_lock"*, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex, align 8, !tbaa !101
  %state.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Synchronization::word_lock", %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %2, i64 0, i32 0
  %3 = atomicrmw or i64* %state.i, i64 2 monotonic
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce i32 @_ZN6Halide7Runtime8Internal27default_desired_num_threadsEv() local_unnamed_addr #0 {
entry:
  %call = tail call i8* @getenv(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #15
  %tobool.not = icmp eq i8* %call, null
  br i1 %tobool.not, label %if.end, label %cond.true

if.end:                                           ; preds = %entry
  %call1 = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0)) #15
  %tobool2.not = icmp eq i8* %call1, null
  br i1 %tobool2.not, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.end, %entry
  %threads_str.010 = phi i8* [ %call1, %if.end ], [ %call, %entry ]
  %call3 = tail call i32 @atoi(i8* nonnull %threads_str.010) #15
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %call4 = tail call i32 @halide_host_cpu_count() #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call3, %cond.true ], [ %call4, %cond.false ]
  ret i32 %cond
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal13worker_threadEPv(i8* %arg) #0 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  %0 = bitcast i8* %arg to %"struct.Halide::Runtime::Internal::work"*
  tail call void @_ZN6Halide7Runtime8Internal28worker_thread_already_lockedEPNS1_4workE(%"struct.Halide::Runtime::Internal::work"* %0) #16
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  ret void
}

; Function Attrs: nounwind mustprogress
define weak %struct.halide_thread* @halide_spawn_thread(void (i8*)* %f, i8* %closure) local_unnamed_addr #0 {
entry:
  %call = tail call i8* @malloc(i64 24) #15
  %f1 = bitcast i8* %call to void (i8*)**
  store void (i8*)* %f, void (i8*)** %f1, align 8, !tbaa !115
  %closure2 = getelementptr inbounds i8, i8* %call, i64 8
  %0 = bitcast i8* %closure2 to i8**
  store i8* %closure, i8** %0, align 8, !tbaa !117
  %handle = getelementptr inbounds i8, i8* %call, i64 16
  %1 = bitcast i8* %handle to i64*
  store i64 0, i64* %1, align 8, !tbaa !118
  %call4 = tail call i32 @pthread_create(i64* nonnull %1, i8* null, i8* (i8*)* nonnull @_ZN6Halide7Runtime8Internal19spawn_thread_helperEPv, i8* %call) #15
  %2 = bitcast i8* %call to %struct.halide_thread*
  ret %struct.halide_thread* %2
}

; Function Attrs: nounwind mustprogress
define linkonce i8* @_ZN6Halide7Runtime8Internal19spawn_thread_helperEPv(i8* %arg) #0 {
entry:
  %f = bitcast i8* %arg to void (i8*)**
  %0 = load void (i8*)*, void (i8*)** %f, align 8, !tbaa !115
  %closure = getelementptr inbounds i8, i8* %arg, i64 8
  %1 = bitcast i8* %closure to i8**
  %2 = load i8*, i8** %1, align 8, !tbaa !117
  tail call void %0(i8* %2) #15
  ret i8* null
}

declare i32 @pthread_create(i64*, i8*, i8* (i8*)*, i8*) local_unnamed_addr #1

declare i8* @getenv(i8*) local_unnamed_addr #1

declare i32 @atoi(i8*) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_do_parallel_tasks(i8* %user_context, i32 %num_tasks, %struct.halide_parallel_task_t* %tasks, i8* %task_parent) #0 {
entry:
  %conv = sext i32 %num_tasks to i64
  %0 = alloca %"struct.Halide::Runtime::Internal::work", i64 %conv, align 8
  %cmp76 = icmp sgt i32 %num_tasks, 0
  br i1 %cmp76, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.inc, %entry
  %num_tasks.addr.0.lcssa = phi i32 [ %num_tasks, %entry ], [ %num_tasks.addr.1, %for.inc ]
  %cmp17 = icmp eq i32 %num_tasks.addr.0.lcssa, 0
  br i1 %cmp17, label %cleanup, label %if.end19

for.body:                                         ; preds = %entry, %for.inc
  %indvars.iv82 = phi i64 [ %indvars.iv.next83, %for.inc ], [ 0, %entry ]
  %num_tasks.addr.078 = phi i32 [ %num_tasks.addr.1, %for.inc ], [ %num_tasks, %entry ]
  %tasks.addr.077 = phi %struct.halide_parallel_task_t* [ %tasks.addr.1, %for.inc ], [ %tasks, %entry ]
  %extent = getelementptr inbounds %struct.halide_parallel_task_t, %struct.halide_parallel_task_t* %tasks.addr.077, i64 0, i32 6
  %1 = load i32, i32* %extent, align 8, !tbaa !119
  %cmp1 = icmp slt i32 %1, 1
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %dec = add nsw i32 %num_tasks.addr.078, -1
  br label %for.inc

if.end:                                           ; preds = %for.body
  %incdec.ptr = getelementptr inbounds %struct.halide_parallel_task_t, %struct.halide_parallel_task_t* %tasks.addr.077, i64 1
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82
  %2 = bitcast %"struct.Halide::Runtime::Internal::work"* %arrayidx to i8*
  %3 = bitcast %struct.halide_parallel_task_t* %tasks.addr.077 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(56) %2, i8* nonnull align 8 dereferenceable(56) %3, i64 56, i1 false), !tbaa.struct !120
  %task_fn = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 1
  store i32 (i8*, i32, i8*)* null, i32 (i8*, i32, i8*)** %task_fn, align 8, !tbaa !32
  %user_context6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 7
  store i8* %user_context, i8** %user_context6, align 8, !tbaa !33
  %exit_status = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 9
  store i32 0, i32* %exit_status, align 4, !tbaa !34
  %active_workers = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 8
  store i32 0, i32* %active_workers, align 8, !tbaa !35
  %next_semaphore = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 10
  store i32 0, i32* %next_semaphore, align 8, !tbaa !36
  %owner_is_sleeping = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 11
  store i8 0, i8* %owner_is_sleeping, align 4, !tbaa !37
  %parent_job = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 5
  %4 = bitcast %"struct.Halide::Runtime::Internal::work"** %parent_job to i8**
  store i8* %task_parent, i8** %4, align 8, !tbaa !40
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.then
  %tasks.addr.1 = phi %struct.halide_parallel_task_t* [ %tasks.addr.077, %if.then ], [ %incdec.ptr, %if.end ]
  %num_tasks.addr.1 = phi i32 [ %dec, %if.then ], [ %num_tasks.addr.078, %if.end ]
  %indvars.iv.next83 = add nuw nsw i64 %indvars.iv82, 1
  %5 = sext i32 %num_tasks.addr.1 to i64
  %cmp = icmp slt i64 %indvars.iv.next83, %5
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !121

if.end19:                                         ; preds = %for.cond.cleanup
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  %6 = bitcast i8* %task_parent to %"struct.Halide::Runtime::Internal::work"*
  call void @_ZN6Halide7Runtime8Internal27enqueue_work_already_lockedEiPNS1_4workES3_(i32 %num_tasks.addr.0.lcssa, %"struct.Halide::Runtime::Internal::work"* nonnull %0, %"struct.Halide::Runtime::Internal::work"* %6) #16
  %cmp2373 = icmp sgt i32 %num_tasks.addr.0.lcssa, 0
  br i1 %cmp2373, label %for.body25.preheader, label %for.cond.cleanup24

for.body25.preheader:                             ; preds = %if.end19
  %wide.trip.count = zext i32 %num_tasks.addr.0.lcssa to i64
  br label %for.body25

for.cond.cleanup24:                               ; preds = %for.body25, %if.end19
  %exit_status20.0.lcssa = phi i32 [ 0, %if.end19 ], [ %spec.select, %for.body25 ]
  call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  br label %cleanup

for.body25:                                       ; preds = %for.body25, %for.body25.preheader
  %indvars.iv = phi i64 [ 0, %for.body25.preheader ], [ %indvars.iv.next, %for.body25 ]
  %exit_status20.074 = phi i32 [ 0, %for.body25.preheader ], [ %spec.select, %for.body25 ]
  %add.ptr = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv
  call void @_ZN6Halide7Runtime8Internal28worker_thread_already_lockedEPNS1_4workE(%"struct.Halide::Runtime::Internal::work"* nonnull %add.ptr) #16
  %exit_status28 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv, i32 9
  %7 = load i32, i32* %exit_status28, align 4, !tbaa !34
  %cmp29.not = icmp eq i32 %7, 0
  %spec.select = select i1 %cmp29.not, i32 %exit_status20.074, i32 %7
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup24, label %for.body25, !llvm.loop !122

cleanup:                                          ; preds = %for.cond.cleanup24, %for.cond.cleanup
  %retval.0 = phi i32 [ %exit_status20.0.lcssa, %for.cond.cleanup24 ], [ 0, %for.cond.cleanup ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_default_semaphore_init(%struct.halide_semaphore_t* %s, i32 %n) #2 {
entry:
  %value = bitcast %struct.halide_semaphore_t* %s to i32*
  store atomic i32 %n, i32* %value release, align 4
  ret i32 %n
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_semaphore_release(%struct.halide_semaphore_t* %s, i32 %n) #0 {
entry:
  %value = bitcast %struct.halide_semaphore_t* %s to i32*
  %0 = atomicrmw add i32* %value, i32 %n acq_rel
  %cmp = icmp eq i32 %0, 0
  %cmp1 = icmp ne i32 %n, 0
  %or.cond = and i1 %cmp1, %cmp
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 8)) #16
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 10)) #16
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %add = add nsw i32 %0, %n
  ret i32 %add
}

; Function Attrs: nounwind mustprogress
define weak void @halide_thread_pool_cleanup() #0 {
entry:
  tail call void @halide_shutdown_thread_pool() #16
  ret void
}

; Function Attrs: nounwind mustprogress
define weak void @halide_shutdown_thread_pool() local_unnamed_addr #0 {
entry:
  %0 = load i8, i8* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 15), align 1, !tbaa !45, !range !17
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  store i8 1, i8* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 14), align 8, !tbaa !63
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 10)) #16
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 8)) #16
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 9)) #16
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  %1 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !52
  %cmp4 = icmp sgt i32 %1, 0
  br i1 %cmp4, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.body, %if.then
  %call.i = tail call i8* @memset(i8* nonnull bitcast (i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 2) to i8*), i32 0, i64 2116) #15
  br label %if.end

for.body:                                         ; preds = %if.then, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.then ]
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 13, i64 %indvars.iv
  %2 = load %struct.halide_thread*, %struct.halide_thread** %arrayidx, align 8, !tbaa !10
  tail call void @halide_join_thread(%struct.halide_thread* %2) #16
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %3 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !52
  %4 = sext i32 %3 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %4
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !123

if.end:                                           ; preds = %for.cond.cleanup, %entry
  ret void
}

declare i8* @memset(i8*, i32, i64) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak void @halide_join_thread(%struct.halide_thread* %thread_arg) local_unnamed_addr #0 {
entry:
  %ret = alloca i8*, align 8
  %0 = bitcast %struct.halide_thread* %thread_arg to %"struct.Halide::Runtime::Internal::spawned_thread"*
  %1 = bitcast i8** %ret to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #10
  store i8* null, i8** %ret, align 8, !tbaa !10
  %handle = getelementptr inbounds %"struct.Halide::Runtime::Internal::spawned_thread", %"struct.Halide::Runtime::Internal::spawned_thread"* %0, i64 0, i32 2
  %2 = load i64, i64* %handle, align 8, !tbaa !118
  %call = call i32 @pthread_join(i64 %2, i8** nonnull %ret) #15
  %3 = bitcast %struct.halide_thread* %thread_arg to i8*
  call void @free(i8* %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #10
  ret void
}

declare i32 @pthread_join(i64, i8**) local_unnamed_addr #1

; Function Attrs: nounwind
define weak void @halide_cond_signal(%struct.halide_mutex* %cond) local_unnamed_addr #4 {
entry:
  %control.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", align 8
  %state.i = getelementptr %struct.halide_mutex, %struct.halide_mutex* %cond, i64 0, i32 0, i64 0
  %0 = load atomic i64, i64* %state.i monotonic, align 8
  %cmp.i = icmp eq i64 %0, 0
  br i1 %cmp.i, label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond6signalEv.exit, label %if.end.i

if.end.i:                                         ; preds = %entry
  %1 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #10
  %2 = inttoptr i64 %0 to %"class.Halide::Runtime::Internal::Synchronization::word_lock"*
  %3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization22signal_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8, !tbaa !41
  %cond_state2.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 1
  store i64* %state.i, i64** %cond_state2.i.i, align 8, !tbaa !124
  %mutex3.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 2
  store %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %2, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex3.i.i, align 8, !tbaa !126
  %4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 0
  %5 = ptrtoint %struct.halide_mutex* %cond to i64
  %call.i = call i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control10unpark_oneEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %4, i64 %5) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #10
  br label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond6signalEv.exit

_ZN6Halide7Runtime8Internal15Synchronization9fast_cond6signalEv.exit: ; preds = %if.end.i, %entry
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr zeroext i1 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control8validateERNS2_15validate_actionE(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action) unnamed_addr #2 comdat align 2 {
entry:
  ret i1 true
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr i64 @_ZN6Halide7Runtime8Internal15Synchronization22signal_parking_control6unparkEib(%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* nonnull dereferenceable(24) %this, i32 %unparked, i1 zeroext %more_waiters) unnamed_addr #2 comdat align 2 {
entry:
  br i1 %more_waiters, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %cond_state = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 1
  %0 = load i64*, i64** %cond_state, align 8, !tbaa !124
  store atomic i64 0, i64* %0 monotonic, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i64 0
}

; Function Attrs: nounwind mustprogress
define weak %struct.halide_mutex_array* @halide_mutex_array_create(i32 %sz) local_unnamed_addr #0 {
entry:
  %call = tail call i8* @halide_malloc(i8* null, i64 8) #15
  %0 = bitcast i8* %call to %struct.halide_mutex_array*
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %conv = sext i32 %sz to i64
  %mul = shl nsw i64 %conv, 3
  %call1 = tail call i8* @halide_malloc(i8* null, i64 %mul) #15
  %1 = bitcast i8* %call to i8**
  store i8* %call1, i8** %1, align 8, !tbaa !127
  %cmp4 = icmp eq i8* %call1, null
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  tail call void @halide_free(i8* null, i8* nonnull %call) #15
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %call10 = tail call i8* @memset(i8* nonnull %call1, i32 0, i64 %mul) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.then5, %entry
  %retval.0 = phi %struct.halide_mutex_array* [ null, %if.then5 ], [ %0, %if.end6 ], [ null, %entry ]
  ret %struct.halide_mutex_array* %retval.0
}

; Function Attrs: nounwind mustprogress
define weak void @halide_mutex_array_destroy(i8* %user_context, i8* %array) local_unnamed_addr #0 {
entry:
  %0 = bitcast i8* %array to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !127
  tail call void @halide_free(i8* %user_context, i8* %1) #15
  tail call void @halide_free(i8* %user_context, i8* %array) #15
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_mutex_array_lock(%struct.halide_mutex_array* %array, i32 %entry1) local_unnamed_addr #0 {
entry:
  %array2 = getelementptr inbounds %struct.halide_mutex_array, %struct.halide_mutex_array* %array, i64 0, i32 0
  %0 = load %struct.halide_mutex*, %struct.halide_mutex** %array2, align 8, !tbaa !127
  %idxprom = sext i32 %entry1 to i64
  %arrayidx = getelementptr inbounds %struct.halide_mutex, %struct.halide_mutex* %0, i64 %idxprom
  tail call void @halide_mutex_lock(%struct.halide_mutex* %arrayidx) #16
  ret i32 0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_mutex_array_unlock(%struct.halide_mutex_array* %array, i32 %entry1) local_unnamed_addr #0 {
entry:
  %array2 = getelementptr inbounds %struct.halide_mutex_array, %struct.halide_mutex_array* %array, i64 0, i32 0
  %0 = load %struct.halide_mutex*, %struct.halide_mutex** %array2, align 8, !tbaa !127
  %idxprom = sext i32 %entry1 to i64
  %arrayidx = getelementptr inbounds %struct.halide_mutex, %struct.halide_mutex* %0, i64 %idxprom
  tail call void @halide_mutex_unlock(%struct.halide_mutex* %arrayidx) #16
  ret i32 0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_set_num_threads(i32 %n) local_unnamed_addr #0 {
entry:
  %cmp = icmp slt i32 %n, 0
  br i1 %cmp, label %if.end3.thread, label %if.end

if.end3.thread:                                   ; preds = %entry
  tail call void @halide_error(i8* null, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #15
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  %0 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 1), align 8, !tbaa !51
  br label %if.else.i

if.end:                                           ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  %cmp1 = icmp eq i32 %n, 0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %call = tail call i32 @_ZN6Halide7Runtime8Internal27default_desired_num_threadsEv() #16
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %n.addr.0 = phi i32 [ %call, %if.then2 ], [ %n, %if.end ]
  %1 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 1), align 8, !tbaa !51
  %cmp.i = icmp sgt i32 %n.addr.0, 256
  br i1 %cmp.i, label %_ZN6Halide7Runtime8Internal17clamp_num_threadsEi.exit, label %if.else.i

if.else.i:                                        ; preds = %if.end3, %if.end3.thread
  %2 = phi i32 [ %0, %if.end3.thread ], [ %1, %if.end3 ]
  %n.addr.012 = phi i32 [ %n, %if.end3.thread ], [ %n.addr.0, %if.end3 ]
  %3 = icmp sgt i32 %n.addr.012, 1
  %spec.select.i = select i1 %3, i32 %n.addr.012, i32 1
  br label %_ZN6Halide7Runtime8Internal17clamp_num_threadsEi.exit

_ZN6Halide7Runtime8Internal17clamp_num_threadsEi.exit: ; preds = %if.else.i, %if.end3
  %4 = phi i32 [ %2, %if.else.i ], [ %1, %if.end3 ]
  %call48 = phi i32 [ %spec.select.i, %if.else.i ], [ 256, %if.end3 ]
  store i32 %call48, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 1), align 8, !tbaa !51
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  ret i32 %4
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* @halide_set_custom_do_task(i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)*, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)** @_ZN6Halide7Runtime8Internal14custom_do_taskE, align 8, !tbaa !10
  store i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %f, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)** @_ZN6Halide7Runtime8Internal14custom_do_taskE, align 8, !tbaa !10
  ret i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* @halide_set_custom_do_loop_task(i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)*, i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)** @_ZN6Halide7Runtime8Internal19custom_do_loop_taskE, align 8, !tbaa !10
  store i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* %f, i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)** @_ZN6Halide7Runtime8Internal19custom_do_loop_taskE, align 8, !tbaa !10
  ret i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* %0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* @halide_set_custom_do_par_for(i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)*, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)** @_ZN6Halide7Runtime8Internal17custom_do_par_forE, align 8, !tbaa !10
  store i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %f, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)** @_ZN6Halide7Runtime8Internal17custom_do_par_forE, align 8, !tbaa !10
  ret i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %0
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_set_custom_parallel_runtime(i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %do_par_for, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %do_task, i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* %do_loop_task, i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)* %do_parallel_tasks, i32 (%struct.halide_semaphore_t*, i32)* %semaphore_init, i1 (%struct.halide_semaphore_t*, i32)* %semaphore_try_acquire, i32 (%struct.halide_semaphore_t*, i32)* %semaphore_release) local_unnamed_addr #2 {
entry:
  store i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %do_par_for, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)** @_ZN6Halide7Runtime8Internal17custom_do_par_forE, align 8, !tbaa !10
  store i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %do_task, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)** @_ZN6Halide7Runtime8Internal14custom_do_taskE, align 8, !tbaa !10
  store i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* %do_loop_task, i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)** @_ZN6Halide7Runtime8Internal19custom_do_loop_taskE, align 8, !tbaa !10
  store i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)* %do_parallel_tasks, i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)** @_ZN6Halide7Runtime8Internal24custom_do_parallel_tasksE, align 8, !tbaa !10
  store i32 (%struct.halide_semaphore_t*, i32)* %semaphore_init, i32 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal21custom_semaphore_initE, align 8, !tbaa !10
  store i1 (%struct.halide_semaphore_t*, i32)* %semaphore_try_acquire, i1 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal28custom_semaphore_try_acquireE, align 8, !tbaa !10
  store i32 (%struct.halide_semaphore_t*, i32)* %semaphore_release, i32 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal24custom_semaphore_releaseE, align 8, !tbaa !10
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_do_par_for(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %min, i32 %size, i8* %closure) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)*, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)** @_ZN6Halide7Runtime8Internal17custom_do_par_forE, align 8, !tbaa !10
  %call = tail call i32 %0(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %min, i32 %size, i8* %closure) #15
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_do_parallel_tasks(i8* %user_context, i32 %num_tasks, %struct.halide_parallel_task_t* %tasks, i8* %task_parent) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)*, i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)** @_ZN6Halide7Runtime8Internal24custom_do_parallel_tasksE, align 8, !tbaa !10
  %call = tail call i32 %0(i8* %user_context, i32 %num_tasks, %struct.halide_parallel_task_t* %tasks, i8* %task_parent) #15
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_semaphore_init(%struct.halide_semaphore_t* %sema, i32 %count) local_unnamed_addr #0 {
entry:
  %0 = load i32 (%struct.halide_semaphore_t*, i32)*, i32 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal21custom_semaphore_initE, align 8, !tbaa !10
  %call = tail call i32 %0(%struct.halide_semaphore_t* %sema, i32 %count) #15
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_semaphore_release(%struct.halide_semaphore_t* %sema, i32 %count) local_unnamed_addr #0 {
entry:
  %0 = load i32 (%struct.halide_semaphore_t*, i32)*, i32 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal24custom_semaphore_releaseE, align 8, !tbaa !10
  %call = tail call i32 %0(%struct.halide_semaphore_t* %sema, i32 %count) #15
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak zeroext i1 @halide_semaphore_try_acquire(%struct.halide_semaphore_t* %sema, i32 %count) local_unnamed_addr #0 {
entry:
  %0 = load i1 (%struct.halide_semaphore_t*, i32)*, i1 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal28custom_semaphore_try_acquireE, align 8, !tbaa !10
  %call = tail call zeroext i1 %0(%struct.halide_semaphore_t* %sema, i32 %count) #15
  ret i1 %call
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_default_get_symbol(i8* %name) #0 {
entry:
  %call = tail call i8* @dlsym(i8* null, i8* %name) #15
  ret i8* %call
}

declare i8* @dlsym(i8*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i8* @halide_default_load_library(i8* %name) #0 {
entry:
  %call = tail call i8* @dlopen(i8* %name, i32 1) #15
  %tobool.not = icmp eq i8* %call, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call3 = tail call i8* @dlerror() #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i8* %call
}

declare i8* @dlopen(i8*, i32) local_unnamed_addr #1

declare i8* @dlerror() local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i8* @halide_default_get_library_symbol(i8* %lib, i8* %name) #0 {
entry:
  %call = tail call i8* @dlsym(i8* %lib, i8* %name) #15
  ret i8* %call
}

; Function Attrs: nounwind willreturn mustprogress
define weak i8* (i8*)* @halide_set_custom_get_symbol(i8* (i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i8* (i8*)*, i8* (i8*)** @_ZN6Halide7Runtime8Internal17custom_get_symbolE, align 8, !tbaa !10
  store i8* (i8*)* %f, i8* (i8*)** @_ZN6Halide7Runtime8Internal17custom_get_symbolE, align 8, !tbaa !10
  ret i8* (i8*)* %0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i8* (i8*)* @halide_set_custom_load_library(i8* (i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i8* (i8*)*, i8* (i8*)** @_ZN6Halide7Runtime8Internal19custom_load_libraryE, align 8, !tbaa !10
  store i8* (i8*)* %f, i8* (i8*)** @_ZN6Halide7Runtime8Internal19custom_load_libraryE, align 8, !tbaa !10
  ret i8* (i8*)* %0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i8* (i8*, i8*)* @halide_set_custom_get_library_symbol(i8* (i8*, i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** @_ZN6Halide7Runtime8Internal25custom_get_library_symbolE, align 8, !tbaa !10
  store i8* (i8*, i8*)* %f, i8* (i8*, i8*)** @_ZN6Halide7Runtime8Internal25custom_get_library_symbolE, align 8, !tbaa !10
  ret i8* (i8*, i8*)* %0
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_get_symbol(i8* %name) local_unnamed_addr #0 {
entry:
  %0 = load i8* (i8*)*, i8* (i8*)** @_ZN6Halide7Runtime8Internal17custom_get_symbolE, align 8, !tbaa !10
  %call = tail call i8* %0(i8* %name) #15
  ret i8* %call
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_load_library(i8* %name) local_unnamed_addr #0 {
entry:
  %0 = load i8* (i8*)*, i8* (i8*)** @_ZN6Halide7Runtime8Internal19custom_load_libraryE, align 8, !tbaa !10
  %call = tail call i8* %0(i8* %name) #15
  ret i8* %call
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_get_library_symbol(i8* %lib, i8* %name) local_unnamed_addr #0 {
entry:
  %0 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** @_ZN6Halide7Runtime8Internal25custom_get_library_symbolE, align 8, !tbaa !10
  %call = tail call i8* %0(i8* %lib, i8* %name) #15
  ret i8* %call
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_set_gpu_device(i32 %d) local_unnamed_addr #2 {
entry:
  store i32 %d, i32* @_ZN6Halide7Runtime8Internal17halide_gpu_deviceE, align 4, !tbaa !73
  store i8 1, i8* @_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE, align 1, !tbaa !15
  ret void
}

; Function Attrs: nounwind
define weak i32 @halide_get_gpu_device(i8* %user_context) local_unnamed_addr #4 {
entry:
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i, %entry
  %0 = atomicrmw volatile xchg i8* @_ZN6Halide7Runtime8Internal22halide_gpu_device_lockE, i8 1 acquire
  %tobool.not.i = icmp eq i8 %0, 0
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit, label %while.cond.i, !llvm.loop !129

_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit: ; preds = %while.cond.i
  %1 = load i8, i8* @_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE, align 1, !tbaa !15, !range !17
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %if.then, label %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit.if.end4_crit_edge

_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit.if.end4_crit_edge: ; preds = %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  %.pre = load i32, i32* @_ZN6Halide7Runtime8Internal17halide_gpu_deviceE, align 4, !tbaa !73
  br label %if.end4

if.then:                                          ; preds = %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  %call = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0)) #15
  %tobool1.not = icmp eq i8* %call, null
  br i1 %tobool1.not, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  %call3 = tail call i32 @atoi(i8* nonnull %call) #15
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %storemerge = phi i32 [ %call3, %if.then2 ], [ -1, %if.then ]
  store i32 %storemerge, i32* @_ZN6Halide7Runtime8Internal17halide_gpu_deviceE, align 4, !tbaa !73
  store i8 1, i8* @_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE, align 1, !tbaa !15
  br label %if.end4

if.end4:                                          ; preds = %if.end, %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit.if.end4_crit_edge
  %2 = phi i32 [ %.pre, %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit.if.end4_crit_edge ], [ %storemerge, %if.end ]
  store atomic volatile i8 0, i8* @_ZN6Halide7Runtime8Internal22halide_gpu_device_lockE release, align 1
  ret i32 %2
}

; Function Attrs: nounwind
define weak i32 @halide_default_trace(i8* %user_context, %struct.halide_trace_event_t* %e) #4 {
entry:
  %0 = atomicrmw add i32* @_ZZ20halide_default_traceE3ids, i32 1 seq_cst
  %call = tail call i32 @halide_get_trace_file(i8* %user_context) #16
  %cmp = icmp sgt i32 %call, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %type = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 4
  %lanes = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 4, i32 2
  %1 = load i16, i16* %lanes, align 2, !tbaa !130
  %conv = zext i16 %1 to i32
  %bits.i = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 4, i32 1
  %2 = load i8, i8* %bits.i, align 1, !tbaa !136
  %conv.i = zext i8 %2 to i32
  %add.i = add nuw nsw i32 %conv.i, 7
  %div.i = lshr i32 %add.i, 3
  %mul = mul nuw nsw i32 %div.i, %conv
  %dimensions = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 8
  %3 = load i32, i32* %dimensions, align 8, !tbaa !137
  %mul3 = shl i32 %3, 2
  %func = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 0
  %4 = load i8*, i8** %func, align 8, !tbaa !138
  %call4 = tail call i64 @strlen(i8* %4) #15
  %5 = trunc i64 %call4 to i32
  %conv5 = add i32 %5, 1
  %trace_tag = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 3
  %6 = load i8*, i8** %trace_tag, align 8, !tbaa !139
  %tobool.not = icmp eq i8* %6, null
  br i1 %tobool.not, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.then
  %call7 = tail call i64 @strlen(i8* nonnull %6) #15
  %7 = trunc i64 %call7 to i32
  %phi.cast = add i32 %7, 1
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.then
  %cond = phi i32 [ %phi.cast, %cond.true ], [ 1, %if.then ]
  %add11 = add i32 %mul3, 31
  %add12 = add i32 %add11, %mul
  %add13 = add i32 %add12, %conv5
  %add14 = add i32 %add13, %cond
  %and = and i32 %add14, -4
  %8 = load %"class.Halide::Runtime::Internal::TraceBuffer"*, %"class.Halide::Runtime::Internal::TraceBuffer"** @_ZN6Halide7Runtime8Internal19halide_trace_bufferE, align 8, !tbaa !10
  %lock.i.i.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %8, i64 0, i32 0, i32 0
  %cmp.i.i = icmp ult i32 %and, 1048577
  %cursor.i.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %8, i64 0, i32 1
  %overage.i.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %8, i64 0, i32 2
  %arraydecay.i.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %8, i64 0, i32 3, i64 0
  br i1 %cmp.i.i, label %while.body.i.i.us.i, label %while.body.i.i.i

while.body.i.i.us.i:                              ; preds = %cond.end, %while.body.i.i.us.i.backedge
  %9 = load volatile i32, i32* %lock.i.i.i, align 4, !tbaa !140
  %and.i.i.us.i = and i32 %9, 1073741823
  %add.i.i.us.i = add nuw nsw i32 %and.i.i.us.i, 1
  %10 = cmpxchg i32* %lock.i.i.i, i32 %and.i.i.us.i, i32 %add.i.i.us.i seq_cst seq_cst
  %11 = extractvalue { i32, i1 } %10, 1
  br i1 %11, label %do.end.i.us.i, label %while.body.i.i.us.i.backedge

do.end.i.us.i:                                    ; preds = %while.body.i.i.us.i
  %12 = atomicrmw add i32* %cursor.i.i, i32 %and seq_cst
  %add.i.us.i = add i32 %12, %and
  %cmp2.i.us.i = icmp ugt i32 %add.i.us.i, 1048576
  br i1 %cmp2.i.us.i, label %while.body.us.i, label %_ZN6Halide7Runtime8Internal11TraceBuffer14acquire_packetEPvij.exit

while.body.us.i:                                  ; preds = %do.end.i.us.i
  %13 = atomicrmw add i32* %overage.i.i, i32 %and seq_cst
  %14 = atomicrmw sub i32* %lock.i.i.i, i32 1 seq_cst
  br label %while.body.i.i5.us.i

while.body.i.i5.us.i:                             ; preds = %while.body.i.i5.us.i, %while.body.us.i
  %15 = atomicrmw or i32* %lock.i.i.i, i32 1073741824 seq_cst
  %16 = cmpxchg i32* %lock.i.i.i, i32 1073741824, i32 -2147483648 seq_cst seq_cst
  %17 = extractvalue { i32, i1 } %16, 1
  br i1 %17, label %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.us.i, label %while.body.i.i5.us.i

_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.us.i: ; preds = %while.body.i.i5.us.i
  %18 = load i32, i32* %cursor.i.i, align 4, !tbaa !142
  %tobool.not.i.us.i = icmp eq i32 %18, 0
  br i1 %tobool.not.i.us.i, label %do.end.critedge.i.us.i, label %if.then.i9.us.i

if.then.i9.us.i:                                  ; preds = %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.us.i
  %19 = load i32, i32* %overage.i.i, align 4, !tbaa !144
  %sub.i.us.i = sub i32 %18, %19
  store i32 %sub.i.us.i, i32* %cursor.i.i, align 4, !tbaa !142
  %conv.i.us.i = zext i32 %sub.i.us.i to i64
  %call.i.us.i = tail call i64 @write(i32 %call, i8* nonnull %arraydecay.i.i, i64 %conv.i.us.i) #15
  %conv5.i.us.i = trunc i64 %call.i.us.i to i32
  %cmp.i8.us.i = icmp eq i32 %sub.i.us.i, %conv5.i.us.i
  store i32 0, i32* %cursor.i.i, align 4, !tbaa !142
  store i32 0, i32* %overage.i.i, align 4, !tbaa !144
  %20 = atomicrmw and i32* %lock.i.i.i, i32 2147483647 seq_cst
  br i1 %cmp.i8.us.i, label %while.body.i.i.us.i.backedge, label %if.then10.i.us.i

if.then10.i.us.i:                                 ; preds = %if.then.i9.us.i
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([172 x i8], [172 x i8]* @.str.32, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %while.body.i.i.us.i.backedge

do.end.critedge.i.us.i:                           ; preds = %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.us.i
  %21 = atomicrmw and i32* %lock.i.i.i, i32 2147483647 seq_cst
  br label %while.body.i.i.us.i.backedge

while.body.i.i.us.i.backedge:                     ; preds = %do.end.critedge.i.us.i, %if.then10.i.us.i, %if.then.i9.us.i, %while.body.i.i.us.i
  br label %while.body.i.i.us.i, !llvm.loop !145

while.body.i.i.i:                                 ; preds = %cond.end, %while.body.i.i.i.backedge
  %22 = load volatile i32, i32* %lock.i.i.i, align 4, !tbaa !140
  %and.i.i.i = and i32 %22, 1073741823
  %add.i.i.i = add nuw nsw i32 %and.i.i.i, 1
  %23 = cmpxchg i32* %lock.i.i.i, i32 %and.i.i.i, i32 %add.i.i.i seq_cst seq_cst
  %24 = extractvalue { i32, i1 } %23, 1
  br i1 %24, label %if.then.i.i, label %while.body.i.i.i.backedge

if.then.i.i:                                      ; preds = %while.body.i.i.i
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([148 x i8], [148 x i8]* @.str.31, i64 0, i64 0)) #15
  tail call void @abort() #15
  %25 = atomicrmw add i32* %cursor.i.i, i32 %and seq_cst
  %add.i.i400 = add i32 %25, %and
  %cmp2.i.i = icmp ugt i32 %add.i.i400, 1048576
  br i1 %cmp2.i.i, label %while.body.i, label %_ZN6Halide7Runtime8Internal11TraceBuffer14acquire_packetEPvij.exit

while.body.i:                                     ; preds = %if.then.i.i
  %26 = atomicrmw add i32* %overage.i.i, i32 %and seq_cst
  %27 = atomicrmw sub i32* %lock.i.i.i, i32 1 seq_cst
  br label %while.body.i.i5.i

while.body.i.i5.i:                                ; preds = %while.body.i.i5.i, %while.body.i
  %28 = atomicrmw or i32* %lock.i.i.i, i32 1073741824 seq_cst
  %29 = cmpxchg i32* %lock.i.i.i, i32 1073741824, i32 -2147483648 seq_cst seq_cst
  %30 = extractvalue { i32, i1 } %29, 1
  br i1 %30, label %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.i, label %while.body.i.i5.i

_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.i: ; preds = %while.body.i.i5.i
  %31 = load i32, i32* %cursor.i.i, align 4, !tbaa !142
  %tobool.not.i.i = icmp eq i32 %31, 0
  br i1 %tobool.not.i.i, label %do.end.critedge.i.i, label %if.then.i9.i

if.then.i9.i:                                     ; preds = %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.i
  %32 = load i32, i32* %overage.i.i, align 4, !tbaa !144
  %sub.i.i = sub i32 %31, %32
  store i32 %sub.i.i, i32* %cursor.i.i, align 4, !tbaa !142
  %conv.i.i = zext i32 %sub.i.i to i64
  %call.i.i401 = tail call i64 @write(i32 %call, i8* nonnull %arraydecay.i.i, i64 %conv.i.i) #15
  %conv5.i.i = trunc i64 %call.i.i401 to i32
  %cmp.i8.i = icmp eq i32 %sub.i.i, %conv5.i.i
  store i32 0, i32* %cursor.i.i, align 4, !tbaa !142
  store i32 0, i32* %overage.i.i, align 4, !tbaa !144
  %33 = atomicrmw and i32* %lock.i.i.i, i32 2147483647 seq_cst
  br i1 %cmp.i8.i, label %while.body.i.i.i.backedge, label %if.then10.i.i

if.then10.i.i:                                    ; preds = %if.then.i9.i
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([172 x i8], [172 x i8]* @.str.32, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %while.body.i.i.i.backedge

do.end.critedge.i.i:                              ; preds = %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.i
  %34 = atomicrmw and i32* %lock.i.i.i, i32 2147483647 seq_cst
  br label %while.body.i.i.i.backedge

while.body.i.i.i.backedge:                        ; preds = %do.end.critedge.i.i, %if.then10.i.i, %if.then.i9.i, %while.body.i.i.i
  br label %while.body.i.i.i, !llvm.loop !145

_ZN6Halide7Runtime8Internal11TraceBuffer14acquire_packetEPvij.exit: ; preds = %if.then.i.i, %do.end.i.us.i
  %.lcssa.i = phi i32 [ %12, %do.end.i.us.i ], [ %25, %if.then.i.i ]
  %idx.ext.i.i = zext i32 %.lcssa.i to i64
  %add.ptr.i.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %8, i64 0, i32 3, i64 %idx.ext.i.i
  %cmp16 = icmp ugt i32 %and, 4096
  br i1 %cmp16, label %if.then17, label %if.end

if.then17:                                        ; preds = %_ZN6Halide7Runtime8Internal11TraceBuffer14acquire_packetEPvij.exit
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i404 = icmp eq i8* %call.i, null
  br i1 %tobool.not.i404, label %if.then.i415, label %if.else.i421

if.then.i415:                                     ; preds = %if.then17
  %conv.i4071 = zext i32 %and to i64
  %call.i4082 = tail call i8* @halide_uint64_to_string(i8* null, i8* null, i64 %conv.i4071, i32 1) #15
  %call.i41117 = tail call i8* @halide_string_to_string(i8* %call.i4082, i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.164, i64 0, i64 0)) #15
  tail call void @halide_error(i8* null, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE0ELy1024EED2Ev.exit

if.else.i421:                                     ; preds = %if.then17
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %conv.i4073 = zext i32 %and to i64
  %call.i4084 = tail call i8* @halide_uint64_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i64 %conv.i4073, i32 1) #15
  %call.i411 = tail call i8* @halide_string_to_string(i8* %call.i4084, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.164, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i.i416 = ptrtoint i8* %call.i411 to i64
  %sub.ptr.rhs.cast.i.i417 = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i418 = sub i64 1, %sub.ptr.rhs.cast.i.i417
  %add.i.i419 = add i64 %sub.ptr.sub.i.i418, %sub.ptr.lhs.cast.i.i416
  %call.i.i420 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* null, i8* nonnull %call.i, i64 %add.i.i419) #15
  tail call void @halide_print(i8* null, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE0ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE0ELy1024EED2Ev.exit: ; preds = %if.else.i421, %if.then.i415
  tail call void @free(i8* %call.i) #15
  br label %if.end

if.end:                                           ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE0ELy1024EED2Ev.exit, %_ZN6Halide7Runtime8Internal11TraceBuffer14acquire_packetEPvij.exit
  %size = bitcast i8* %add.ptr.i.i to i32*
  store i32 %and, i32* %size, align 4, !tbaa !146
  %id = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 4
  %35 = bitcast i8* %id to i32*
  store i32 %0, i32* %35, align 4, !tbaa !148
  %36 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 8
  %37 = bitcast %struct.halide_type_t* %type to i32*
  %38 = bitcast i8* %36 to i32*
  %39 = load i32, i32* %37, align 8
  store i32 %39, i32* %38, align 4
  %event = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 5
  %event22 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 12
  %40 = bitcast i32* %event to <4 x i32>*
  %41 = load <4 x i32>, <4 x i32>* %40, align 4, !tbaa !14
  %dimensions26 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 24
  %42 = bitcast i8* %dimensions26 to i32*
  %43 = bitcast i8* %event22 to <4 x i32>*
  store <4 x i32> %41, <4 x i32>* %43, align 4, !tbaa !14
  %coordinates = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 2
  %44 = load i32*, i32** %coordinates, align 8, !tbaa !149
  %tobool27.not = icmp eq i32* %44, null
  br i1 %tobool27.not, label %if.end33, label %if.then28

if.then28:                                        ; preds = %if.end
  %45 = bitcast i32* %44 to i8*
  %46 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 28
  %conv31 = zext i32 %mul3 to i64
  %call32 = tail call i8* @memcpy(i8* nonnull %46, i8* nonnull %45, i64 %conv31) #15
  br label %if.end33

if.end33:                                         ; preds = %if.then28, %if.end
  %value = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 1
  %47 = load i8*, i8** %value, align 8, !tbaa !150
  %tobool34.not = icmp eq i8* %47, null
  br i1 %tobool34.not, label %if.end40, label %if.then35

if.then35:                                        ; preds = %if.end33
  %48 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 28
  %49 = bitcast i8* %48 to i32*
  %50 = load i32, i32* %42, align 4, !tbaa !151
  %idx.ext.i = sext i32 %50 to i64
  %add.ptr.i424 = getelementptr inbounds i32, i32* %49, i64 %idx.ext.i
  %51 = bitcast i32* %add.ptr.i424 to i8*
  %conv38 = zext i32 %mul to i64
  %call39 = tail call i8* @memcpy(i8* nonnull %51, i8* nonnull %47, i64 %conv38) #15
  br label %if.end40

if.end40:                                         ; preds = %if.end33, %if.then35
  %52 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 28
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %42, align 4, !tbaa !151
  %idx.ext.i.i425 = sext i32 %54 to i64
  %add.ptr.i.i426 = getelementptr inbounds i32, i32* %53, i64 %idx.ext.i.i425
  %55 = bitcast i32* %add.ptr.i.i426 to i8*
  %lanes.i = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 10
  %56 = bitcast i8* %lanes.i to i16*
  %57 = load i16, i16* %56, align 2, !tbaa !152
  %conv.i427 = zext i16 %57 to i32
  %58 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 9
  %59 = load i8, i8* %58, align 1, !tbaa !136
  %conv.i.i428 = zext i8 %59 to i32
  %add.i.i429 = add nuw nsw i32 %conv.i.i428, 7
  %div.i.i = lshr i32 %add.i.i429, 3
  %mul.i = mul nuw nsw i32 %div.i.i, %conv.i427
  %idx.ext.i430 = zext i32 %mul.i to i64
  %add.ptr.i431 = getelementptr inbounds i8, i8* %55, i64 %idx.ext.i430
  %60 = load i8*, i8** %func, align 8, !tbaa !138
  %conv43 = zext i32 %conv5 to i64
  %call44 = tail call i8* @memcpy(i8* nonnull %add.ptr.i431, i8* %60, i64 %conv43) #15
  %61 = load i32, i32* %42, align 4, !tbaa !151
  %idx.ext.i.i.i = sext i32 %61 to i64
  %add.ptr.i.i.i = getelementptr inbounds i32, i32* %53, i64 %idx.ext.i.i.i
  %62 = bitcast i32* %add.ptr.i.i.i to i8*
  %63 = load i16, i16* %56, align 2, !tbaa !152
  %conv.i.i432 = zext i16 %63 to i32
  %64 = load i8, i8* %58, align 1, !tbaa !136
  %conv.i.i.i = zext i8 %64 to i32
  %add.i.i.i433 = add nuw nsw i32 %conv.i.i.i, 7
  %div.i.i.i = lshr i32 %add.i.i.i433, 3
  %mul.i.i = mul nuw nsw i32 %div.i.i.i, %conv.i.i432
  %idx.ext.i.i434 = zext i32 %mul.i.i to i64
  %add.ptr.i.i435 = getelementptr inbounds i8, i8* %62, i64 %idx.ext.i.i434
  br label %while.cond.i437

while.cond.i437:                                  ; preds = %while.cond.i437, %if.end40
  %f.0.i = phi i8* [ %add.ptr.i.i435, %if.end40 ], [ %incdec.ptr.i, %while.cond.i437 ]
  %incdec.ptr.i = getelementptr inbounds i8, i8* %f.0.i, i64 1
  %65 = load i8, i8* %f.0.i, align 1, !tbaa !14
  %tobool.not.i436 = icmp eq i8 %65, 0
  br i1 %tobool.not.i436, label %_ZN21halide_trace_packet_t9trace_tagEv.exit, label %while.cond.i437, !llvm.loop !153

_ZN21halide_trace_packet_t9trace_tagEv.exit:      ; preds = %while.cond.i437
  %66 = load i8*, i8** %trace_tag, align 8, !tbaa !139
  %tobool47.not = icmp eq i8* %66, null
  %spec.select = select i1 %tobool47.not, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.10, i64 0, i64 0), i8* %66
  %conv53 = zext i32 %cond to i64
  %call54 = tail call i8* @memcpy(i8* nonnull %incdec.ptr.i, i8* %spec.select, i64 %conv53) #15
  %67 = load %"class.Halide::Runtime::Internal::TraceBuffer"*, %"class.Halide::Runtime::Internal::TraceBuffer"** @_ZN6Halide7Runtime8Internal19halide_trace_bufferE, align 8, !tbaa !10
  fence seq_cst
  %lock.i.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %67, i64 0, i32 0, i32 0
  %68 = atomicrmw sub i32* %lock.i.i, i32 1 seq_cst
  %69 = load i32, i32* %event, align 4, !tbaa !154
  %cmp56 = icmp eq i32 %69, 9
  br i1 %cmp56, label %if.then57, label %if.end277

if.then57:                                        ; preds = %_ZN21halide_trace_packet_t9trace_tagEv.exit
  %70 = load %"class.Halide::Runtime::Internal::TraceBuffer"*, %"class.Halide::Runtime::Internal::TraceBuffer"** @_ZN6Halide7Runtime8Internal19halide_trace_bufferE, align 8, !tbaa !10
  %lock.i.i438 = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %70, i64 0, i32 0, i32 0
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %while.body.i.i, %if.then57
  %71 = atomicrmw or i32* %lock.i.i438, i32 1073741824 seq_cst
  %72 = cmpxchg i32* %lock.i.i438, i32 1073741824, i32 -2147483648 seq_cst seq_cst
  %73 = extractvalue { i32, i1 } %72, 1
  br i1 %73, label %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i, label %while.body.i.i

_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i: ; preds = %while.body.i.i
  %cursor.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %70, i64 0, i32 1
  %74 = load i32, i32* %cursor.i, align 4, !tbaa !142
  %tobool.not.i439 = icmp eq i32 %74, 0
  br i1 %tobool.not.i439, label %do.end.critedge.i, label %if.then.i442

if.then.i442:                                     ; preds = %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i
  %overage.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %70, i64 0, i32 2
  %75 = load i32, i32* %overage.i, align 4, !tbaa !144
  %sub.i = sub i32 %74, %75
  store i32 %sub.i, i32* %cursor.i, align 4, !tbaa !142
  %arraydecay.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %70, i64 0, i32 3, i64 0
  %conv.i440 = zext i32 %sub.i to i64
  %call.i441 = tail call i64 @write(i32 %call, i8* nonnull %arraydecay.i, i64 %conv.i440) #15
  %conv5.i = trunc i64 %call.i441 to i32
  %cmp.i = icmp eq i32 %sub.i, %conv5.i
  store i32 0, i32* %cursor.i, align 4, !tbaa !142
  store i32 0, i32* %overage.i, align 4, !tbaa !144
  %76 = atomicrmw and i32* %lock.i.i438, i32 2147483647 seq_cst
  br i1 %cmp.i, label %if.end277, label %if.then10.i

if.then10.i:                                      ; preds = %if.then.i442
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([172 x i8], [172 x i8]* @.str.32, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %if.end277

do.end.critedge.i:                                ; preds = %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i
  %77 = atomicrmw and i32* %lock.i.i438, i32 2147483647 seq_cst
  br label %if.end277

if.else:                                          ; preds = %entry
  %call.i445 = tail call i8* @malloc(i64 4096) #15
  %tobool.not.i448 = icmp eq i8* %call.i445, null
  br i1 %tobool.not.i448, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EEC2EPvPc.exit, label %if.then6.i451

if.then6.i451:                                    ; preds = %if.else
  %add.ptr.i449 = getelementptr inbounds i8, i8* %call.i445, i64 4095
  store i8 0, i8* %add.ptr.i449, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EEC2EPvPc.exit: ; preds = %if.then6.i451, %if.else
  %ss.sroa.74.0 = phi i8* [ %add.ptr.i449, %if.then6.i451 ], [ null, %if.else ]
  %bits = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 4, i32 1
  %78 = load i8, i8* %bits, align 1, !tbaa !155
  %conv60 = zext i8 %78 to i32
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EEC2EPvPc.exit
  %print_bits.0 = phi i32 [ 8, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EEC2EPvPc.exit ], [ %shl, %while.cond ]
  %cmp61 = icmp slt i32 %print_bits.0, %conv60
  %shl = shl i32 %print_bits.0, 1
  br i1 %cmp61, label %while.cond, label %do.body, !llvm.loop !156

do.body:                                          ; preds = %while.cond
  %cmp62 = icmp slt i32 %print_bits.0, 65
  br i1 %cmp62, label %do.end, label %if.then63

if.then63:                                        ; preds = %do.body
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([168 x i8], [168 x i8]* @.str.2.11, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end

do.end:                                           ; preds = %if.then63, %do.body
  %event65 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 5
  %79 = load i32, i32* %event65, align 4, !tbaa !154
  %cmp66 = icmp slt i32 %79, 2
  %idxprom = zext i32 %79 to i64
  %arrayidx = getelementptr inbounds [11 x i8*], [11 x i8*]* @__const.halide_default_trace.event_types, i64 0, i64 %idxprom
  %80 = load i8*, i8** %arrayidx, align 8, !tbaa !10
  %call.i456 = tail call i8* @halide_string_to_string(i8* %call.i445, i8* %ss.sroa.74.0, i8* %80) #15
  %call.i459 = tail call i8* @halide_string_to_string(i8* %call.i456, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #15
  %func70 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 0
  %81 = load i8*, i8** %func70, align 8, !tbaa !138
  %call.i462 = tail call i8* @halide_string_to_string(i8* %call.i459, i8* %ss.sroa.74.0, i8* %81) #15
  %call.i465 = tail call i8* @halide_string_to_string(i8* %call.i462, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.141, i64 0, i64 0)) #15
  %value_index73 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 7
  %82 = load i32, i32* %value_index73, align 4, !tbaa !157
  %conv.i468 = sext i32 %82 to i64
  %call.i469 = tail call i8* @halide_int64_to_string(i8* %call.i465, i8* %ss.sroa.74.0, i64 %conv.i468, i32 1) #15
  %call.i472 = tail call i8* @halide_string_to_string(i8* %call.i469, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22.179, i64 0, i64 0)) #15
  %lanes77 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 4, i32 2
  %83 = load i16, i16* %lanes77, align 2, !tbaa !130
  %cmp79 = icmp ugt i16 %83, 1
  br i1 %cmp79, label %if.then80, label %if.end82

if.then80:                                        ; preds = %do.end
  %call.i475 = tail call i8* @halide_string_to_string(i8* %call.i472, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #15
  br label %if.end82

if.end82:                                         ; preds = %if.then80, %do.end
  %ss.sroa.7.0 = phi i8* [ %call.i475, %if.then80 ], [ %call.i472, %do.end ]
  %dimensions83 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 8
  %84 = load i32, i32* %dimensions83, align 8, !tbaa !137
  %cmp84660 = icmp sgt i32 %84, 0
  br i1 %cmp84660, label %if.end100.peel, label %for.cond.cleanup

if.end100.peel:                                   ; preds = %if.end82
  %coordinates101 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 2
  %.pre = load i32*, i32** %coordinates101, align 8, !tbaa !149
  %.pre673 = load i32, i32* %.pre, align 4, !tbaa !73
  %conv.i484.peel = sext i32 %.pre673 to i64
  %call.i485.peel = tail call i8* @halide_int64_to_string(i8* %ss.sroa.7.0, i8* %ss.sroa.74.0, i64 %conv.i484.peel, i32 1) #15
  %85 = load i32, i32* %dimensions83, align 8, !tbaa !137
  %cmp84.peel = icmp sgt i32 %85, 1
  br i1 %cmp84.peel, label %if.then86, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %if.end100, %if.end100.peel, %if.end82
  %ss.sroa.7.1.lcssa = phi i8* [ %ss.sroa.7.0, %if.end82 ], [ %call.i485.peel, %if.end100.peel ], [ %call.i485, %if.end100 ]
  %86 = load i16, i16* %lanes77, align 2, !tbaa !130
  %cmp108 = icmp ugt i16 %86, 1
  %.sink684 = select i1 %cmp108, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.119, i64 0, i64 0)
  %call.i491 = tail call i8* @halide_string_to_string(i8* %ss.sroa.7.1.lcssa, i8* %ss.sroa.74.0, i8* %.sink684) #15
  br i1 %cmp66, label %if.then115, label %if.end263

if.then86:                                        ; preds = %if.end100.peel, %if.end100
  %indvars.iv670 = phi i64 [ %indvars.iv.next671, %if.end100 ], [ 1, %if.end100.peel ]
  %ss.sroa.7.1661 = phi i8* [ %call.i485, %if.end100 ], [ %call.i485.peel, %if.end100.peel ]
  %87 = load i16, i16* %lanes77, align 2, !tbaa !130
  %cmp90 = icmp ugt i16 %87, 1
  br i1 %cmp90, label %land.lhs.true, label %if.else97.split

land.lhs.true:                                    ; preds = %if.then86
  %conv89 = zext i16 %87 to i32
  %88 = trunc i64 %indvars.iv670 to i32
  %rem = urem i32 %88, %conv89
  %cmp94 = icmp eq i32 %rem, 0
  br i1 %cmp94, label %if.end100, label %if.else97.split

if.else97.split:                                  ; preds = %if.then86, %land.lhs.true
  br label %if.end100

if.end100:                                        ; preds = %land.lhs.true, %if.else97.split
  %.sink = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0), %if.else97.split ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0), %land.lhs.true ]
  %call.i4786 = tail call i8* @halide_string_to_string(i8* %ss.sroa.7.1661, i8* %ss.sroa.74.0, i8* %.sink) #15
  %89 = load i32*, i32** %coordinates101, align 8, !tbaa !149
  %arrayidx103 = getelementptr inbounds i32, i32* %89, i64 %indvars.iv670
  %90 = load i32, i32* %arrayidx103, align 4, !tbaa !73
  %conv.i484 = sext i32 %90 to i64
  %call.i485 = tail call i8* @halide_int64_to_string(i8* %call.i4786, i8* %ss.sroa.74.0, i64 %conv.i484, i32 1) #15
  %indvars.iv.next671 = add nuw nsw i64 %indvars.iv670, 1
  %91 = load i32, i32* %dimensions83, align 8, !tbaa !137
  %92 = sext i32 %91 to i64
  %cmp84 = icmp slt i64 %indvars.iv.next671, %92
  br i1 %cmp84, label %if.then86, label %for.cond.cleanup, !llvm.loop !158

if.then115:                                       ; preds = %for.cond.cleanup
  %93 = load i16, i16* %lanes77, align 2, !tbaa !130
  %cmp119 = icmp ugt i16 %93, 1
  %.sink685 = select i1 %cmp119, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i64 0, i64 0)
  %call.i497 = tail call i8* @halide_string_to_string(i8* %call.i491, i8* %ss.sroa.74.0, i8* %.sink685) #15
  %94 = load i16, i16* %lanes77, align 2, !tbaa !130
  %cmp130655.not = icmp eq i16 %94, 0
  br i1 %cmp130655.not, label %if.end263, label %if.end136.peel

if.end136.peel:                                   ; preds = %if.then115
  %code = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 4, i32 0
  %value245 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 1
  %95 = bitcast i8** %value245 to i8***
  %cmp214 = icmp sgt i32 %print_bits.0, 15
  %96 = bitcast i8** %value245 to i16**
  %97 = bitcast i8** %value245 to float**
  %98 = bitcast i8** %value245 to double**
  %99 = bitcast i8** %value245 to i32**
  %100 = bitcast i8** %value245 to i64**
  %.pre674 = load i8, i8* %code, align 8, !tbaa !160
  switch i8 %.pre674, label %for.inc253.peel [
    i8 0, label %if.then140.peel
    i8 1, label %if.then176.peel
    i8 2, label %do.body213.peel
    i8 3, label %if.then244.peel
  ]

if.then244.peel:                                  ; preds = %if.end136.peel
  %101 = load i8**, i8*** %95, align 8, !tbaa !150
  %102 = load i8*, i8** %101, align 8, !tbaa !10
  %call.i543.peel = tail call i8* @halide_pointer_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i8* %102) #15
  br label %for.inc253.peel

do.body213.peel:                                  ; preds = %if.end136.peel
  br i1 %cmp214, label %do.end218.peel, label %if.then215.peel

if.then215.peel:                                  ; preds = %do.body213.peel
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([170 x i8], [170 x i8]* @.str.24, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end218.peel

do.end218.peel:                                   ; preds = %if.then215.peel, %do.body213.peel
  switch i32 %print_bits.0, label %if.else232.peel [
    i32 32, label %if.then220.peel
    i32 16, label %if.then227.peel
  ]

if.then227.peel:                                  ; preds = %do.end218.peel
  %103 = load i16*, i16** %96, align 8, !tbaa !150
  %104 = load i16, i16* %103, align 2, !tbaa !161
  %call.i535.peel = tail call double @halide_float16_bits_to_double(i16 zeroext %104) #15
  %call2.i.peel = tail call i8* @halide_double_to_string(i8* %call.i497, i8* %ss.sroa.74.0, double %call.i535.peel, i32 1) #15
  br label %for.inc253.peel

if.then220.peel:                                  ; preds = %do.end218.peel
  %105 = load float*, float** %97, align 8, !tbaa !150
  %106 = load float, float* %105, align 4, !tbaa !162
  %conv.i533.peel = fpext float %106 to double
  %call.i534.peel = tail call i8* @halide_double_to_string(i8* %call.i497, i8* %ss.sroa.74.0, double %conv.i533.peel, i32 0) #15
  br label %for.inc253.peel

if.else232.peel:                                  ; preds = %do.end218.peel
  %107 = load double*, double** %98, align 8, !tbaa !150
  %108 = load double, double* %107, align 8, !tbaa !164
  %call.i540.peel = tail call i8* @halide_double_to_string(i8* %call.i497, i8* %ss.sroa.74.0, double %108, i32 1) #15
  br label %for.inc253.peel

if.then176.peel:                                  ; preds = %if.end136.peel
  switch i32 %print_bits.0, label %if.else199.peel [
    i32 8, label %if.then178.peel
    i32 16, label %if.then186.peel
    i32 32, label %if.then194.peel
  ]

if.then194.peel:                                  ; preds = %if.then176.peel
  %109 = load i32*, i32** %99, align 8, !tbaa !150
  %110 = load i32, i32* %109, align 4, !tbaa !73
  %conv.i526.peel = zext i32 %110 to i64
  %call.i527.peel = tail call i8* @halide_uint64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %conv.i526.peel, i32 1) #15
  br label %for.inc253.peel

if.then186.peel:                                  ; preds = %if.then176.peel
  %111 = load i16*, i16** %96, align 8, !tbaa !150
  %112 = load i16, i16* %111, align 2, !tbaa !161
  %conv.i522.peel = zext i16 %112 to i64
  %call.i523.peel = tail call i8* @halide_int64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %conv.i522.peel, i32 1) #15
  br label %for.inc253.peel

if.then178.peel:                                  ; preds = %if.then176.peel
  %113 = load i8*, i8** %value245, align 8, !tbaa !150
  %114 = load i8, i8* %113, align 1, !tbaa !14
  %conv.i518.peel = zext i8 %114 to i64
  %call.i519.peel = tail call i8* @halide_int64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %conv.i518.peel, i32 1) #15
  br label %for.inc253.peel

if.else199.peel:                                  ; preds = %if.then176.peel
  %115 = load i64*, i64** %100, align 8, !tbaa !150
  %116 = load i64, i64* %115, align 8, !tbaa !110
  %call.i530.peel = tail call i8* @halide_uint64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %116, i32 1) #15
  br label %for.inc253.peel

if.then140.peel:                                  ; preds = %if.end136.peel
  switch i32 %print_bits.0, label %if.else163.peel [
    i32 8, label %if.then142.peel
    i32 16, label %if.then150.peel
    i32 32, label %if.then158.peel
  ]

if.then158.peel:                                  ; preds = %if.then140.peel
  %117 = load i32*, i32** %99, align 8, !tbaa !150
  %118 = load i32, i32* %117, align 4, !tbaa !73
  %conv.i511.peel = sext i32 %118 to i64
  %call.i512.peel = tail call i8* @halide_int64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %conv.i511.peel, i32 1) #15
  br label %for.inc253.peel

if.then150.peel:                                  ; preds = %if.then140.peel
  %119 = load i16*, i16** %96, align 8, !tbaa !150
  %120 = load i16, i16* %119, align 2, !tbaa !161
  %conv.i507.peel = sext i16 %120 to i64
  %call.i508.peel = tail call i8* @halide_int64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %conv.i507.peel, i32 1) #15
  br label %for.inc253.peel

if.then142.peel:                                  ; preds = %if.then140.peel
  %121 = load i8*, i8** %value245, align 8, !tbaa !150
  %122 = load i8, i8* %121, align 1, !tbaa !14
  %conv.i503.peel = sext i8 %122 to i64
  %call.i504.peel = tail call i8* @halide_int64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %conv.i503.peel, i32 1) #15
  br label %for.inc253.peel

if.else163.peel:                                  ; preds = %if.then140.peel
  %123 = load i64*, i64** %100, align 8, !tbaa !150
  %124 = load i64, i64* %123, align 8, !tbaa !110
  %call.i515.peel = tail call i8* @halide_int64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %124, i32 1) #15
  br label %for.inc253.peel

for.inc253.peel:                                  ; preds = %if.else163.peel, %if.then142.peel, %if.then150.peel, %if.then158.peel, %if.else199.peel, %if.then178.peel, %if.then186.peel, %if.then194.peel, %if.else232.peel, %if.then220.peel, %if.then227.peel, %if.then244.peel, %if.end136.peel
  %ss.sroa.7.7.peel = phi i8* [ %call.i497, %if.end136.peel ], [ %call.i543.peel, %if.then244.peel ], [ %call.i540.peel, %if.else232.peel ], [ %call2.i.peel, %if.then227.peel ], [ %call.i534.peel, %if.then220.peel ], [ %call.i530.peel, %if.else199.peel ], [ %call.i527.peel, %if.then194.peel ], [ %call.i523.peel, %if.then186.peel ], [ %call.i519.peel, %if.then178.peel ], [ %call.i515.peel, %if.else163.peel ], [ %call.i512.peel, %if.then158.peel ], [ %call.i508.peel, %if.then150.peel ], [ %call.i504.peel, %if.then142.peel ]
  %125 = load i16, i16* %lanes77, align 2, !tbaa !130
  %cmp130.peel = icmp ugt i16 %125, 1
  br i1 %cmp130.peel, label %if.end136, label %if.end263

for.cond.cleanup131:                              ; preds = %for.inc253
  %cmp259 = icmp ugt i16 %151, 1
  br i1 %cmp259, label %if.then260, label %if.end263

if.end136:                                        ; preds = %for.inc253.peel, %for.inc253
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc253 ], [ 1, %for.inc253.peel ]
  %ss.sroa.7.5656 = phi i8* [ %ss.sroa.7.7, %for.inc253 ], [ %ss.sroa.7.7.peel, %for.inc253.peel ]
  %call.i500 = tail call i8* @halide_string_to_string(i8* %ss.sroa.7.5656, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #15
  %126 = load i8, i8* %code, align 8, !tbaa !160
  switch i8 %126, label %for.inc253 [
    i8 0, label %if.then140
    i8 1, label %if.then176
    i8 2, label %do.body213
    i8 3, label %if.then244
  ]

if.then140:                                       ; preds = %if.end136
  switch i32 %print_bits.0, label %if.else163 [
    i32 8, label %if.then142
    i32 16, label %if.then150
    i32 32, label %if.then158
  ]

if.then142:                                       ; preds = %if.then140
  %127 = load i8*, i8** %value245, align 8, !tbaa !150
  %arrayidx145 = getelementptr inbounds i8, i8* %127, i64 %indvars.iv
  %128 = load i8, i8* %arrayidx145, align 1, !tbaa !14
  %conv.i503 = sext i8 %128 to i64
  %call.i504 = tail call i8* @halide_int64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %conv.i503, i32 1) #15
  br label %for.inc253

if.then150:                                       ; preds = %if.then140
  %129 = load i16*, i16** %96, align 8, !tbaa !150
  %arrayidx153 = getelementptr inbounds i16, i16* %129, i64 %indvars.iv
  %130 = load i16, i16* %arrayidx153, align 2, !tbaa !161
  %conv.i507 = sext i16 %130 to i64
  %call.i508 = tail call i8* @halide_int64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %conv.i507, i32 1) #15
  br label %for.inc253

if.then158:                                       ; preds = %if.then140
  %131 = load i32*, i32** %99, align 8, !tbaa !150
  %arrayidx161 = getelementptr inbounds i32, i32* %131, i64 %indvars.iv
  %132 = load i32, i32* %arrayidx161, align 4, !tbaa !73
  %conv.i511 = sext i32 %132 to i64
  %call.i512 = tail call i8* @halide_int64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %conv.i511, i32 1) #15
  br label %for.inc253

if.else163:                                       ; preds = %if.then140
  %133 = load i64*, i64** %100, align 8, !tbaa !150
  %arrayidx166 = getelementptr inbounds i64, i64* %133, i64 %indvars.iv
  %134 = load i64, i64* %arrayidx166, align 8, !tbaa !110
  %call.i515 = tail call i8* @halide_int64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %134, i32 1) #15
  br label %for.inc253

if.then176:                                       ; preds = %if.end136
  switch i32 %print_bits.0, label %if.else199 [
    i32 8, label %if.then178
    i32 16, label %if.then186
    i32 32, label %if.then194
  ]

if.then178:                                       ; preds = %if.then176
  %135 = load i8*, i8** %value245, align 8, !tbaa !150
  %arrayidx181 = getelementptr inbounds i8, i8* %135, i64 %indvars.iv
  %136 = load i8, i8* %arrayidx181, align 1, !tbaa !14
  %conv.i518 = zext i8 %136 to i64
  %call.i519 = tail call i8* @halide_int64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %conv.i518, i32 1) #15
  br label %for.inc253

if.then186:                                       ; preds = %if.then176
  %137 = load i16*, i16** %96, align 8, !tbaa !150
  %arrayidx189 = getelementptr inbounds i16, i16* %137, i64 %indvars.iv
  %138 = load i16, i16* %arrayidx189, align 2, !tbaa !161
  %conv.i522 = zext i16 %138 to i64
  %call.i523 = tail call i8* @halide_int64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %conv.i522, i32 1) #15
  br label %for.inc253

if.then194:                                       ; preds = %if.then176
  %139 = load i32*, i32** %99, align 8, !tbaa !150
  %arrayidx197 = getelementptr inbounds i32, i32* %139, i64 %indvars.iv
  %140 = load i32, i32* %arrayidx197, align 4, !tbaa !73
  %conv.i526 = zext i32 %140 to i64
  %call.i527 = tail call i8* @halide_uint64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %conv.i526, i32 1) #15
  br label %for.inc253

if.else199:                                       ; preds = %if.then176
  %141 = load i64*, i64** %100, align 8, !tbaa !150
  %arrayidx202 = getelementptr inbounds i64, i64* %141, i64 %indvars.iv
  %142 = load i64, i64* %arrayidx202, align 8, !tbaa !110
  %call.i530 = tail call i8* @halide_uint64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %142, i32 1) #15
  br label %for.inc253

do.body213:                                       ; preds = %if.end136
  br i1 %cmp214, label %do.end218, label %if.then215

if.then215:                                       ; preds = %do.body213
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([170 x i8], [170 x i8]* @.str.24, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end218

do.end218:                                        ; preds = %if.then215, %do.body213
  switch i32 %print_bits.0, label %if.else232 [
    i32 32, label %if.then220
    i32 16, label %if.then227
  ]

if.then220:                                       ; preds = %do.end218
  %143 = load float*, float** %97, align 8, !tbaa !150
  %arrayidx223 = getelementptr inbounds float, float* %143, i64 %indvars.iv
  %144 = load float, float* %arrayidx223, align 4, !tbaa !162
  %conv.i533 = fpext float %144 to double
  %call.i534 = tail call i8* @halide_double_to_string(i8* %call.i500, i8* %ss.sroa.74.0, double %conv.i533, i32 0) #15
  br label %for.inc253

if.then227:                                       ; preds = %do.end218
  %145 = load i16*, i16** %96, align 8, !tbaa !150
  %arrayidx230 = getelementptr inbounds i16, i16* %145, i64 %indvars.iv
  %146 = load i16, i16* %arrayidx230, align 2, !tbaa !161
  %call.i535 = tail call double @halide_float16_bits_to_double(i16 zeroext %146) #15
  %call2.i = tail call i8* @halide_double_to_string(i8* %call.i500, i8* %ss.sroa.74.0, double %call.i535, i32 1) #15
  br label %for.inc253

if.else232:                                       ; preds = %do.end218
  %147 = load double*, double** %98, align 8, !tbaa !150
  %arrayidx235 = getelementptr inbounds double, double* %147, i64 %indvars.iv
  %148 = load double, double* %arrayidx235, align 8, !tbaa !164
  %call.i540 = tail call i8* @halide_double_to_string(i8* %call.i500, i8* %ss.sroa.74.0, double %148, i32 1) #15
  br label %for.inc253

if.then244:                                       ; preds = %if.end136
  %149 = load i8**, i8*** %95, align 8, !tbaa !150
  %arrayidx247 = getelementptr inbounds i8*, i8** %149, i64 %indvars.iv
  %150 = load i8*, i8** %arrayidx247, align 8, !tbaa !10
  %call.i543 = tail call i8* @halide_pointer_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i8* %150) #15
  br label %for.inc253

for.inc253:                                       ; preds = %if.then244, %if.else232, %if.then227, %if.then220, %if.else199, %if.then194, %if.then186, %if.then178, %if.else163, %if.then158, %if.then150, %if.then142, %if.end136
  %ss.sroa.7.7 = phi i8* [ %call.i500, %if.end136 ], [ %call.i543, %if.then244 ], [ %call.i540, %if.else232 ], [ %call2.i, %if.then227 ], [ %call.i534, %if.then220 ], [ %call.i530, %if.else199 ], [ %call.i527, %if.then194 ], [ %call.i523, %if.then186 ], [ %call.i519, %if.then178 ], [ %call.i515, %if.else163 ], [ %call.i512, %if.then158 ], [ %call.i508, %if.then150 ], [ %call.i504, %if.then142 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %151 = load i16, i16* %lanes77, align 2, !tbaa !130
  %152 = zext i16 %151 to i64
  %cmp130 = icmp ult i64 %indvars.iv.next, %152
  br i1 %cmp130, label %if.end136, label %for.cond.cleanup131, !llvm.loop !166

if.then260:                                       ; preds = %for.cond.cleanup131
  %call.i546 = tail call i8* @halide_string_to_string(i8* %ss.sroa.7.7, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0)) #15
  br label %if.end263

if.end263:                                        ; preds = %if.then260, %for.cond.cleanup131, %for.inc253.peel, %if.then115, %for.cond.cleanup
  %ss.sroa.7.8 = phi i8* [ %call.i546, %if.then260 ], [ %ss.sroa.7.7, %for.cond.cleanup131 ], [ %call.i491, %for.cond.cleanup ], [ %ss.sroa.7.7.peel, %for.inc253.peel ], [ %call.i497, %if.then115 ]
  %trace_tag264 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 3
  %153 = load i8*, i8** %trace_tag264, align 8, !tbaa !139
  %tobool265.not = icmp eq i8* %153, null
  br i1 %tobool265.not, label %if.end274, label %land.lhs.true266

land.lhs.true266:                                 ; preds = %if.end263
  %154 = load i8, i8* %153, align 1, !tbaa !14
  %tobool268.not = icmp eq i8 %154, 0
  br i1 %tobool268.not, label %if.end274, label %if.then269

if.then269:                                       ; preds = %land.lhs.true266
  %call.i549 = tail call i8* @halide_string_to_string(i8* %ss.sroa.7.8, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i64 0, i64 0)) #15
  %155 = load i8*, i8** %trace_tag264, align 8, !tbaa !139
  %call.i552 = tail call i8* @halide_string_to_string(i8* %call.i549, i8* %ss.sroa.74.0, i8* %155) #15
  %call.i555 = tail call i8* @halide_string_to_string(i8* %call.i552, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i64 0, i64 0)) #15
  br label %if.end274

if.end274:                                        ; preds = %if.then269, %land.lhs.true266, %if.end263
  %ss.sroa.7.9 = phi i8* [ %ss.sroa.7.8, %if.end263 ], [ %ss.sroa.7.8, %land.lhs.true266 ], [ %call.i555, %if.then269 ]
  %call.i558 = tail call i8* @halide_string_to_string(i8* %ss.sroa.7.9, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.164, i64 0, i64 0)) #15
  br label %while.cond.i560

while.cond.i560:                                  ; preds = %while.cond.i560, %if.end274
  %156 = atomicrmw volatile xchg i8* @_ZN6Halide7Runtime8Internal22halide_trace_file_lockE, i8 1 acquire
  %tobool.not.i559 = icmp eq i8 %156, 0
  br i1 %tobool.not.i559, label %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit, label %while.cond.i560, !llvm.loop !167

_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit: ; preds = %while.cond.i560
  br i1 %tobool.not.i448, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  store atomic volatile i8 0, i8* @_ZN6Halide7Runtime8Internal22halide_trace_file_lockE release, align 1
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  %sub.ptr.lhs.cast.i.i563 = ptrtoint i8* %call.i558 to i64
  %sub.ptr.rhs.cast.i.i564 = ptrtoint i8* %call.i445 to i64
  %sub.ptr.sub.i.i565 = sub i64 1, %sub.ptr.rhs.cast.i.i564
  %add.i.i566 = add i64 %sub.ptr.sub.i.i565, %sub.ptr.lhs.cast.i.i563
  %call.i.i567 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i445, i64 %add.i.i566) #15
  tail call void @halide_print(i8* %user_context, i8* nonnull %call.i445) #15
  store atomic volatile i8 0, i8* @_ZN6Halide7Runtime8Internal22halide_trace_file_lockE release, align 1
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i445, i64 %add.i.i566) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i445) #15
  br label %if.end277

if.end277:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EED2Ev.exit, %do.end.critedge.i, %if.then10.i, %if.then.i442, %_ZN21halide_trace_packet_t9trace_tagEv.exit
  ret i32 %0
}

; Function Attrs: nounwind
define weak i32 @halide_get_trace_file(i8* %user_context) local_unnamed_addr #4 {
entry:
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i, %entry
  %0 = atomicrmw volatile xchg i8* @_ZN6Halide7Runtime8Internal22halide_trace_file_lockE, i8 1 acquire
  %tobool.not.i = icmp eq i8 %0, 0
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit, label %while.cond.i, !llvm.loop !167

_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit: ; preds = %while.cond.i
  %1 = load i32, i32* @_ZN6Halide7Runtime8Internal17halide_trace_fileE, align 4, !tbaa !73
  %cmp = icmp slt i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end11

if.then:                                          ; preds = %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  %call = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i64 0, i64 0)) #15
  %tobool.not = icmp eq i8* %call, null
  br i1 %tobool.not, label %if.else, label %if.then1

if.then1:                                         ; preds = %if.then
  %call2 = tail call i8* @fopen(i8* nonnull %call, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0)) #15
  %tobool3.not = icmp eq i8* %call2, null
  br i1 %tobool3.not, label %if.then4, label %do.end

if.then4:                                         ; preds = %if.then1
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @.str.30, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end

do.end:                                           ; preds = %if.then4, %if.then1
  %call5 = tail call i32 @fileno(i8* %call2) #15
  tail call void @halide_set_trace_file(i32 %call5) #16
  store i8* %call2, i8** @_ZN6Halide7Runtime8Internal35halide_trace_file_internally_openedE, align 8, !tbaa !10
  %2 = load %"class.Halide::Runtime::Internal::TraceBuffer"*, %"class.Halide::Runtime::Internal::TraceBuffer"** @_ZN6Halide7Runtime8Internal19halide_trace_bufferE, align 8, !tbaa !10
  %tobool6.not = icmp eq %"class.Halide::Runtime::Internal::TraceBuffer"* %2, null
  br i1 %tobool6.not, label %if.then7, label %if.end11

if.then7:                                         ; preds = %do.end
  %call8 = tail call i8* @malloc(i64 1048588) #15
  store i8* %call8, i8** bitcast (%"class.Halide::Runtime::Internal::TraceBuffer"** @_ZN6Halide7Runtime8Internal19halide_trace_bufferE to i8**), align 8, !tbaa !10
  %cursor.i = getelementptr inbounds i8, i8* %call8, i64 4
  %3 = bitcast i8* %cursor.i to i32*
  store i32 0, i32* %3, align 4, !tbaa !142
  %overage.i = getelementptr inbounds i8, i8* %call8, i64 8
  %4 = bitcast i8* %overage.i to i32*
  store i32 0, i32* %4, align 4, !tbaa !144
  %lock.i.i = bitcast i8* %call8 to i32*
  store volatile i32 0, i32* %lock.i.i, align 4, !tbaa !140
  br label %if.end11

if.else:                                          ; preds = %if.then
  tail call void @halide_set_trace_file(i32 0) #16
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then7, %do.end, %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  %5 = load i32, i32* @_ZN6Halide7Runtime8Internal17halide_trace_fileE, align 4, !tbaa !73
  store atomic volatile i8 0, i8* @_ZN6Halide7Runtime8Internal22halide_trace_file_lockE release, align 1
  ret i32 %5
}

declare i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #1

declare i8* @fopen(i8*, i8*) local_unnamed_addr #1

declare i32 @fileno(i8*) local_unnamed_addr #1

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_set_trace_file(i32 %fd) local_unnamed_addr #2 {
entry:
  store i32 %fd, i32* @_ZN6Halide7Runtime8Internal17halide_trace_fileE, align 4, !tbaa !73
  ret void
}

; Function Attrs: nounwind mustprogress
define weak void @halide_trace_cleanup() #0 {
entry:
  %call = tail call i32 @halide_shutdown_trace() #16
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_shutdown_trace() local_unnamed_addr #0 {
entry:
  %0 = load i8*, i8** @_ZN6Halide7Runtime8Internal35halide_trace_file_internally_openedE, align 8, !tbaa !10
  %tobool.not = icmp eq i8* %0, null
  br i1 %tobool.not, label %return, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call i32 @fclose(i8* nonnull %0) #15
  store i32 0, i32* @_ZN6Halide7Runtime8Internal17halide_trace_fileE, align 4, !tbaa !73
  store i8 0, i8* @_ZN6Halide7Runtime8Internal29halide_trace_file_initializedE, align 1, !tbaa !15
  store i8* null, i8** @_ZN6Halide7Runtime8Internal35halide_trace_file_internally_openedE, align 8, !tbaa !10
  %1 = load %"class.Halide::Runtime::Internal::TraceBuffer"*, %"class.Halide::Runtime::Internal::TraceBuffer"** @_ZN6Halide7Runtime8Internal19halide_trace_bufferE, align 8, !tbaa !10
  %tobool1.not = icmp eq %"class.Halide::Runtime::Internal::TraceBuffer"* %1, null
  br i1 %tobool1.not, label %return, label %if.then2

if.then2:                                         ; preds = %if.then
  %2 = bitcast %"class.Halide::Runtime::Internal::TraceBuffer"* %1 to i8*
  tail call void @free(i8* nonnull %2) #15
  br label %return

return:                                           ; preds = %if.then2, %if.then, %entry
  %retval.0 = phi i32 [ %call, %if.then2 ], [ %call, %if.then ], [ 0, %entry ]
  ret i32 %retval.0
}

declare i32 @fclose(i8*) local_unnamed_addr #1

; Function Attrs: nounwind willreturn mustprogress
define weak i32 (i8*, %struct.halide_trace_event_t*)* @halide_set_custom_trace(i32 (i8*, %struct.halide_trace_event_t*)* %t) local_unnamed_addr #2 {
entry:
  %0 = load i32 (i8*, %struct.halide_trace_event_t*)*, i32 (i8*, %struct.halide_trace_event_t*)** @_ZN6Halide7Runtime8Internal19halide_custom_traceE, align 8, !tbaa !10
  store i32 (i8*, %struct.halide_trace_event_t*)* %t, i32 (i8*, %struct.halide_trace_event_t*)** @_ZN6Halide7Runtime8Internal19halide_custom_traceE, align 8, !tbaa !10
  ret i32 (i8*, %struct.halide_trace_event_t*)* %0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_trace(i8* %user_context, %struct.halide_trace_event_t* %e) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i8*, %struct.halide_trace_event_t*)*, i32 (i8*, %struct.halide_trace_event_t*)** @_ZN6Halide7Runtime8Internal19halide_custom_traceE, align 8, !tbaa !10
  %call = tail call i32 %0(i8* %user_context, %struct.halide_trace_event_t* %e) #15
  ret i32 %call
}

; Function Attrs: nounwind
define weak i32 @halide_trace_helper(i8* %user_context, i8* %func, i8* %value, i32* %coords, i32 %type_code, i32 %type_bits, i32 %type_lanes, i32 %code, i32 %parent_id, i32 %value_index, i32 %dimensions, i8* %trace_tag) local_unnamed_addr #4 {
entry:
  %event = alloca %struct.halide_trace_event_t, align 8
  %0 = bitcast %struct.halide_trace_event_t* %event to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #10
  %code.i.i = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 4, i32 0
  %bits.i.i = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 4, i32 1
  %lanes.i.i = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 4, i32 2
  %func1 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 0
  store i8* %func, i8** %func1, align 8, !tbaa !138
  %value2 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 1
  store i8* %value, i8** %value2, align 8, !tbaa !150
  %coordinates = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 2
  store i32* %coords, i32** %coordinates, align 8, !tbaa !149
  %trace_tag3 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 3
  store i8* %trace_tag, i8** %trace_tag3, align 8, !tbaa !139
  %conv = trunc i32 %type_code to i8
  store i8 %conv, i8* %code.i.i, align 8, !tbaa !160
  %conv5 = trunc i32 %type_bits to i8
  store i8 %conv5, i8* %bits.i.i, align 1, !tbaa !155
  %conv7 = trunc i32 %type_lanes to i16
  store i16 %conv7, i16* %lanes.i.i, align 2, !tbaa !130
  %event9 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 5
  store i32 %code, i32* %event9, align 4, !tbaa !154
  %parent_id10 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 6
  store i32 %parent_id, i32* %parent_id10, align 8, !tbaa !168
  %value_index11 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 7
  store i32 %value_index, i32* %value_index11, align 4, !tbaa !157
  %dimensions12 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 8
  store i32 %dimensions, i32* %dimensions12, align 8, !tbaa !137
  %call = call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %0, i64 56) #15
  %add = add nsw i32 %type_bits, 7
  %div = sdiv i32 %add, 8
  %mul = mul nsw i32 %div, %type_lanes
  %conv13 = sext i32 %mul to i64
  %call14 = call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* %value, i64 %conv13) #15
  %1 = bitcast i32* %coords to i8*
  %conv15 = sext i32 %dimensions to i64
  %mul16 = shl nsw i64 %conv15, 2
  %call17 = call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* %1, i64 %mul16) #15
  %call18 = call i32 @halide_trace(i8* %user_context, %struct.halide_trace_event_t* nonnull %event) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #10
  ret i32 %call18
}

; Function Attrs: nounwind mustprogress
define linkonce zeroext i1 @_ZN6Halide7Runtime8Internal9ends_withEPKcS3_(i8* %filename, i8* %suffix) local_unnamed_addr #0 {
entry:
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %entry
  %f.0 = phi i8* [ %filename, %entry ], [ %incdec.ptr, %while.cond ]
  %0 = load i8, i8* %f.0, align 1, !tbaa !14
  %tobool.not = icmp eq i8 %0, 0
  %incdec.ptr = getelementptr inbounds i8, i8* %f.0, i64 1
  br i1 %tobool.not, label %while.cond1, label %while.cond, !llvm.loop !169

while.cond1:                                      ; preds = %while.cond, %while.cond1
  %s.0 = phi i8* [ %incdec.ptr4, %while.cond1 ], [ %suffix, %while.cond ]
  %1 = load i8, i8* %s.0, align 1, !tbaa !14
  %tobool2.not = icmp eq i8 %1, 0
  %incdec.ptr4 = getelementptr inbounds i8, i8* %s.0, i64 1
  br i1 %tobool2.not, label %while.cond6.preheader, label %while.cond1, !llvm.loop !170

while.cond6.preheader:                            ; preds = %while.cond1
  %cmp34 = icmp ne i8* %s.0, %suffix
  %cmp735 = icmp ne i8* %f.0, %filename
  %2 = and i1 %cmp735, %cmp34
  br i1 %2, label %if.end, label %while.end13

if.end:                                           ; preds = %while.cond6.preheader, %if.end.while.body8_crit_edge
  %f.13649 = phi i8* [ %incdec.ptr11, %if.end.while.body8_crit_edge ], [ %f.0, %while.cond6.preheader ]
  %s.13748 = phi i8* [ %incdec.ptr12, %if.end.while.body8_crit_edge ], [ %s.0, %while.cond6.preheader ]
  %incdec.ptr11 = getelementptr inbounds i8, i8* %f.13649, i64 -1
  %incdec.ptr12 = getelementptr inbounds i8, i8* %s.13748, i64 -1
  %cmp = icmp ne i8* %incdec.ptr12, %suffix
  %cmp7 = icmp ne i8* %incdec.ptr11, %filename
  %3 = and i1 %cmp7, %cmp
  %.pre = load i8, i8* %incdec.ptr11, align 1, !tbaa !14
  %.pre45 = load i8, i8* %incdec.ptr12, align 1, !tbaa !14
  br i1 %3, label %if.end.while.body8_crit_edge, label %while.end13, !llvm.loop !171

if.end.while.body8_crit_edge:                     ; preds = %if.end
  %cmp10.not = icmp eq i8 %.pre, %.pre45
  br i1 %cmp10.not, label %if.end, label %cleanup

while.end13:                                      ; preds = %if.end, %while.cond6.preheader
  %4 = phi i8 [ 0, %while.cond6.preheader ], [ %.pre45, %if.end ]
  %5 = phi i8 [ 0, %while.cond6.preheader ], [ %.pre, %if.end ]
  %cmp16 = icmp eq i8 %5, %4
  br label %cleanup

cleanup:                                          ; preds = %if.end.while.body8_crit_edge, %while.end13
  %retval.0 = phi i1 [ %cmp16, %while.end13 ], [ false, %if.end.while.body8_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind
define weak i32 @halide_debug_to_file(i8* %user_context, i8* %filename, i32 %type_code, %struct.halide_buffer_t* %buf) local_unnamed_addr #4 {
entry:
  %shape = alloca [4 x %struct.halide_dimension_t], align 4
  %header = alloca %"struct.Halide::Runtime::Internal::halide_tiff_header", align 2
  %offset = alloca i32, align 4
  %count = alloca i32, align 4
  %array_name = alloca [256 x i8], align 1
  %array_name42 = getelementptr inbounds [256 x i8], [256 x i8]* %array_name, i64 0, i64 0
  %header198 = alloca [129 x i8], align 1
  %tags = alloca [8 x i32], align 4
  %extents = alloca [4 x i32], align 4
  %name_header = alloca [2 x i32], align 4
  %payload_header = alloca [2 x i32], align 4
  %header289 = alloca [5 x i32], align 4
  %temp = alloca [4096 x i8], align 1
  %idx = alloca [4 x i32], align 4
  %zero = alloca i64, align 8
  %host.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 2
  %0 = load i8*, i8** %host.i, align 8, !tbaa !172
  %cmp.i = icmp eq i8* %0, null
  br i1 %cmp.i, label %_ZNK15halide_buffer_t15is_bounds_queryEv.exit, label %if.end

_ZNK15halide_buffer_t15is_bounds_queryEv.exit:    ; preds = %entry
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp2.i = icmp eq i64 %1, 0
  br i1 %cmp2.i, label %if.then, label %if.end

if.then:                                          ; preds = %_ZNK15halide_buffer_t15is_bounds_queryEv.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.34, i64 0, i64 0)) #15
  br label %return

if.end:                                           ; preds = %_ZNK15halide_buffer_t15is_bounds_queryEv.exit, %entry
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 5
  %2 = load i32, i32* %dimensions, align 4, !tbaa !175
  %cmp = icmp sgt i32 %2, 4
  br i1 %cmp, label %if.then1, label %if.end2

if.then1:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1.35, i64 0, i64 0)) #15
  br label %return

if.end2:                                          ; preds = %if.end
  %call3 = tail call i32 @halide_copy_to_host(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  %cmp4.not = icmp eq i32 %call3, 0
  br i1 %cmp4.not, label %if.end6, label %return

if.end6:                                          ; preds = %if.end2
  %call.i598 = tail call i8* @fopen(i8* %filename, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.36, i64 0, i64 0)) #15
  %cmp.i601.not = icmp eq i8* %call.i598, null
  br i1 %cmp.i601.not, label %return, label %if.end9

if.end9:                                          ; preds = %if.end6
  %3 = bitcast [4 x %struct.halide_dimension_t]* %shape to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %3) #10
  %min.i = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 0, i32 0
  %extent.i = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 0, i32 1
  %min.i.1 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 1, i32 0
  %extent.i.1 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 1, i32 1
  %4 = bitcast [4 x %struct.halide_dimension_t]* %shape to <8 x i32>*
  store <8 x i32> zeroinitializer, <8 x i32>* %4, align 4, !tbaa !73
  %min.i.2 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 2, i32 0
  %extent.i.2 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 2, i32 1
  %min.i.3 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 3, i32 0
  %extent.i.3 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 3, i32 1
  %5 = bitcast i32* %min.i.2 to <8 x i32>*
  store <8 x i32> zeroinitializer, <8 x i32>* %5, align 4, !tbaa !73
  %6 = load i32, i32* %dimensions, align 4, !tbaa !175
  %cmp11875 = icmp sgt i32 %6, 0
  br i1 %cmp11875, label %for.body.lr.ph, label %for.body22.preheader

for.body.lr.ph:                                   ; preds = %if.end9
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %7 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !176
  %8 = zext i32 %6 to i64
  %9 = add nsw i64 %8, -1
  %10 = icmp ult i64 %9, 3
  %11 = select i1 %10, i64 %8, i64 4
  %12 = bitcast [4 x %struct.halide_dimension_t]* %shape to i8*
  %13 = bitcast %struct.halide_dimension_t* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %12, i8* nonnull align 4 dereferenceable(16) %13, i64 16, i1 false), !tbaa.struct !177
  %extent = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 0, i32 1
  %14 = load i32, i32* %extent, align 4, !tbaa !178
  %conv903 = zext i32 %14 to i64
  %exitcond.not17 = icmp eq i64 %11, 1
  br i1 %exitcond.not17, label %for.cond19.preheader, label %for.body.1, !llvm.loop !180

for.cond19.preheader:                             ; preds = %for.body.3, %for.body.2, %for.body.1, %for.body.lr.ph
  %mul.lcssa = phi i64 [ %conv903, %for.body.lr.ph ], [ %mul.1, %for.body.1 ], [ %mul.2, %for.body.2 ], [ %mul.3, %for.body.3 ]
  %cmp20873 = icmp slt i32 %6, 4
  br i1 %cmp20873, label %for.body22.preheader, label %for.cond.cleanup21

for.body22.preheader:                             ; preds = %for.cond19.preheader, %if.end9
  %elts.0.lcssa907 = phi i64 [ %mul.lcssa, %for.cond19.preheader ], [ 1, %if.end9 ]
  %15 = sext i32 %6 to i64
  %16 = sub i32 3, %6
  %17 = zext i32 %16 to i64
  %18 = add nuw nsw i64 %17, 1
  %min.iters.check = icmp ult i32 %16, 7
  br i1 %min.iters.check, label %for.body22.preheader214, label %vector.ph

vector.ph:                                        ; preds = %for.body22.preheader
  %n.vec = and i64 %18, 8589934584
  %ind.end = add nsw i64 %n.vec, %15
  %.splatinsert = insertelement <8 x i64> poison, i64 %15, i32 0
  %.splat = shufflevector <8 x i64> %.splatinsert, <8 x i64> poison, <8 x i32> zeroinitializer
  %induction = add <8 x i64> %.splat, <i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7>
  %19 = add nsw i64 %n.vec, -8
  %20 = lshr exact i64 %19, 3
  %21 = add nuw nsw i64 %20, 1
  %xtraiter = and i64 %21, 3
  %22 = icmp ult i64 %19, 24
  br i1 %22, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = and i64 %21, 4611686018427387900
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %vec.ind = phi <8 x i64> [ %induction, %vector.ph.new ], [ %vec.ind.next.3, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.3, %vector.body ]
  %23 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind, i32 0
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> zeroinitializer, <8 x i32*> %23, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !181
  %24 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind, i32 1
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, <8 x i32*> %24, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !178
  %25 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind, i32 2
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> zeroinitializer, <8 x i32*> %25, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !182
  %vec.ind.next = add <8 x i64> %vec.ind, <i64 8, i64 8, i64 8, i64 8, i64 8, i64 8, i64 8, i64 8>
  %26 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind.next, i32 0
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> zeroinitializer, <8 x i32*> %26, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !181
  %27 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind.next, i32 1
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, <8 x i32*> %27, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !178
  %28 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind.next, i32 2
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> zeroinitializer, <8 x i32*> %28, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !182
  %vec.ind.next.1 = add <8 x i64> %vec.ind, <i64 16, i64 16, i64 16, i64 16, i64 16, i64 16, i64 16, i64 16>
  %29 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind.next.1, i32 0
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> zeroinitializer, <8 x i32*> %29, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !181
  %30 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind.next.1, i32 1
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, <8 x i32*> %30, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !178
  %31 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind.next.1, i32 2
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> zeroinitializer, <8 x i32*> %31, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !182
  %vec.ind.next.2 = add <8 x i64> %vec.ind, <i64 24, i64 24, i64 24, i64 24, i64 24, i64 24, i64 24, i64 24>
  %32 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind.next.2, i32 0
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> zeroinitializer, <8 x i32*> %32, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !181
  %33 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind.next.2, i32 1
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, <8 x i32*> %33, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !178
  %34 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind.next.2, i32 2
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> zeroinitializer, <8 x i32*> %34, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !182
  %vec.ind.next.3 = add <8 x i64> %vec.ind, <i64 32, i64 32, i64 32, i64 32, i64 32, i64 32, i64 32, i64 32>
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !183

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %vec.ind.unr = phi <8 x i64> [ %induction, %vector.ph ], [ %vec.ind.next.3, %vector.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa, %vector.body.epil
  %vec.ind.epil = phi <8 x i64> [ %vec.ind.next.epil, %vector.body.epil ], [ %vec.ind.unr, %middle.block.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %vector.body.epil ], [ %xtraiter, %middle.block.unr-lcssa ]
  %35 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind.epil, i32 0
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> zeroinitializer, <8 x i32*> %35, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !181
  %36 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind.epil, i32 1
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, <8 x i32*> %36, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !178
  %37 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind.epil, i32 2
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> zeroinitializer, <8 x i32*> %37, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !182
  %vec.ind.next.epil = add <8 x i64> %vec.ind.epil, <i64 8, i64 8, i64 8, i64 8, i64 8, i64 8, i64 8, i64 8>
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp.not, label %middle.block, label %vector.body.epil, !llvm.loop !185

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %18, %n.vec
  br i1 %cmp.n, label %for.cond.cleanup21, label %for.body22.preheader214

for.body22.preheader214:                          ; preds = %for.body22.preheader, %middle.block
  %indvars.iv.ph = phi i64 [ %15, %for.body22.preheader ], [ %ind.end, %middle.block ]
  br label %for.body22

for.cond.cleanup21:                               ; preds = %for.body22, %middle.block, %for.cond19.preheader
  %elts.0.lcssa906 = phi i64 [ %mul.lcssa, %for.cond19.preheader ], [ %elts.0.lcssa907, %middle.block ], [ %elts.0.lcssa907, %for.body22 ]
  %bits.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 4, i32 1
  %38 = load i8, i8* %bits.i, align 1, !tbaa !136
  %conv.i = zext i8 %38 to i32
  %add.i = add nuw nsw i32 %conv.i, 7
  %div.i = lshr i32 %add.i, 3
  %call34 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal9ends_withEPKcS3_(i8* %filename, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.37, i64 0, i64 0)) #16
  br i1 %call34, label %if.then36, label %lor.lhs.false

for.body22:                                       ; preds = %for.body22.preheader214, %for.body22
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body22 ], [ %indvars.iv.ph, %for.body22.preheader214 ]
  %min = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 %indvars.iv, i32 0
  store i32 0, i32* %min, align 4, !tbaa !181
  %extent27 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 %indvars.iv, i32 1
  store i32 1, i32* %extent27, align 4, !tbaa !178
  %stride = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 %indvars.iv, i32 2
  store i32 0, i32* %stride, align 4, !tbaa !182
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond886.not = icmp eq i32 %lftr.wideiv, 4
  br i1 %exitcond886.not, label %for.cond.cleanup21, label %for.body22, !llvm.loop !187

lor.lhs.false:                                    ; preds = %for.cond.cleanup21
  %call35 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal9ends_withEPKcS3_(i8* %filename, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.38, i64 0, i64 0)) #16
  br i1 %call35, label %if.then36, label %if.else164

if.then36:                                        ; preds = %lor.lhs.false, %for.cond.cleanup21
  %39 = load i32, i32* %extent.i, align 4, !tbaa !178
  %40 = load i32, i32* %extent.i.1, align 4, !tbaa !178
  %41 = load i32, i32* %extent.i.3, align 4, !tbaa !178
  %switch = icmp ult i32 %41, 2
  %42 = load i32, i32* %extent.i.2, align 4, !tbaa !178
  %cmp50 = icmp slt i32 %42, 5
  %or.cond = and i1 %switch, %cmp50
  %depth.0 = select i1 %or.cond, i32 1, i32 %42
  %channels.0 = select i1 %or.cond, i32 %42, i32 %41
  %43 = bitcast %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header to i8*
  call void @llvm.lifetime.start.p0i8(i64 210, i8* nonnull %43) #10
  %byte_order_marker = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 0
  store i16 18761, i16* %byte_order_marker, align 2, !tbaa !189
  %version = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 1
  store i16 42, i16* %version, align 2, !tbaa !191
  %ifd0_offset = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 2
  store i32 8, i32* %ifd0_offset, align 2, !tbaa !192
  %entry_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 3
  store i16 15, i16* %entry_count, align 2, !tbaa !193
  %tag_code2.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 0, i32 0
  store i16 256, i16* %tag_code2.i, align 2, !tbaa !194
  %type_code.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 0, i32 1
  store i16 4, i16* %type_code.i, align 2, !tbaa !196
  %count3.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 0, i32 2
  store i32 1, i32* %count3.i, align 2, !tbaa !197
  %i32.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 0, i32 3, i32 0
  store i32 %39, i32* %i32.i, align 2, !tbaa !14
  %tag_code2.i632 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 1, i32 0
  store i16 257, i16* %tag_code2.i632, align 2, !tbaa !194
  %type_code.i633 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 1, i32 1
  store i16 4, i16* %type_code.i633, align 2, !tbaa !196
  %count3.i634 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 1, i32 2
  store i32 1, i32* %count3.i634, align 2, !tbaa !197
  %i32.i635 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 1, i32 3, i32 0
  store i32 %40, i32* %i32.i635, align 2, !tbaa !14
  %44 = trunc i32 %add.i to i16
  %conv68 = and i16 %44, 504
  %tag_code2.i643 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 2, i32 0
  store i16 258, i16* %tag_code2.i643, align 2, !tbaa !194
  %type_code.i644 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 2, i32 1
  store i16 3, i16* %type_code.i644, align 2, !tbaa !196
  %count3.i645 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 2, i32 2
  store i32 1, i32* %count3.i645, align 2, !tbaa !197
  %value4.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 2, i32 3
  %i16.i = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i to i16*
  store i16 %conv68, i16* %i16.i, align 2, !tbaa !14
  %tag_code2.i653 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 3, i32 0
  store i16 259, i16* %tag_code2.i653, align 2, !tbaa !194
  %type_code.i654 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 3, i32 1
  store i16 3, i16* %type_code.i654, align 2, !tbaa !196
  %count3.i655 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 3, i32 2
  store i32 1, i32* %count3.i655, align 2, !tbaa !197
  %value4.i656 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 3, i32 3
  %i16.i657 = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i656 to i16*
  store i16 1, i16* %i16.i657, align 2, !tbaa !14
  %cmp71 = icmp sgt i32 %channels.0, 2
  %conv72 = select i1 %cmp71, i16 2, i16 1
  %tag_code2.i665 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 4, i32 0
  store i16 262, i16* %tag_code2.i665, align 2, !tbaa !194
  %type_code.i666 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 4, i32 1
  store i16 3, i16* %type_code.i666, align 2, !tbaa !196
  %count3.i667 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 4, i32 2
  store i32 1, i32* %count3.i667, align 2, !tbaa !197
  %value4.i668 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 4, i32 3
  %i16.i669 = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i668 to i16*
  store i16 %conv72, i16* %i16.i669, align 2, !tbaa !14
  %tag_code2.i677 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 5, i32 0
  store i16 273, i16* %tag_code2.i677, align 2, !tbaa !194
  %type_code.i678 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 5, i32 1
  store i16 4, i16* %type_code.i678, align 2, !tbaa !196
  %count3.i679 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 5, i32 2
  store i32 %channels.0, i32* %count3.i679, align 2, !tbaa !197
  %i32.i680 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 5, i32 3, i32 0
  store i32 210, i32* %i32.i680, align 2, !tbaa !14
  %conv75 = trunc i32 %channels.0 to i16
  %tag_code2.i688 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 6, i32 0
  store i16 277, i16* %tag_code2.i688, align 2, !tbaa !194
  %type_code.i689 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 6, i32 1
  store i16 3, i16* %type_code.i689, align 2, !tbaa !196
  %count3.i690 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 6, i32 2
  store i32 1, i32* %count3.i690, align 2, !tbaa !197
  %value4.i691 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 6, i32 3
  %i16.i692 = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i691 to i16*
  store i16 %conv75, i16* %i16.i692, align 2, !tbaa !14
  %tag_code2.i706 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 7, i32 0
  store i16 278, i16* %tag_code2.i706, align 2, !tbaa !194
  %type_code.i707 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 7, i32 1
  store i16 4, i16* %type_code.i707, align 2, !tbaa !196
  %count3.i708 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 7, i32 2
  store i32 1, i32* %count3.i708, align 2, !tbaa !197
  %i32.i709 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 7, i32 3, i32 0
  store i32 %40, i32* %i32.i709, align 2, !tbaa !14
  %cmp80 = icmp eq i32 %channels.0, 1
  %45 = trunc i64 %elts.0.lcssa906 to i32
  %conv86595 = mul i32 %div.i, %45
  %mul84 = shl i32 %channels.0, 2
  %add = add i32 %mul84, 210
  %add.sink = select i1 %cmp80, i32 %conv86595, i32 %add
  %46 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 8, i32 0
  store i16 279, i16* %46, align 2
  %47 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 8, i32 1
  store i16 4, i16* %47, align 2
  %48 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 8, i32 2
  store i32 %channels.0, i32* %48, align 2
  %49 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 8, i32 3, i32 0
  store i32 %add.sink, i32* %49, align 2
  %tag_code2.i732 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 9, i32 0
  store i16 282, i16* %tag_code2.i732, align 2, !tbaa !194
  %type_code3.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 9, i32 1
  store i16 5, i16* %type_code3.i, align 2, !tbaa !196
  %count4.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 9, i32 2
  store i32 1, i32* %count4.i, align 2, !tbaa !197
  %i32.i733 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 9, i32 3, i32 0
  store i32 194, i32* %i32.i733, align 2, !tbaa !14
  %tag_code2.i741 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 10, i32 0
  store i16 283, i16* %tag_code2.i741, align 2, !tbaa !194
  %type_code3.i742 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 10, i32 1
  store i16 5, i16* %type_code3.i742, align 2, !tbaa !196
  %count4.i743 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 10, i32 2
  store i32 1, i32* %count4.i743, align 2, !tbaa !197
  %i32.i744 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 10, i32 3, i32 0
  store i32 202, i32* %i32.i744, align 2, !tbaa !14
  %tag_code2.i759 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 11, i32 0
  store i16 284, i16* %tag_code2.i759, align 2, !tbaa !194
  %type_code.i760 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 11, i32 1
  store i16 3, i16* %type_code.i760, align 2, !tbaa !196
  %count3.i761 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 11, i32 2
  store i32 1, i32* %count3.i761, align 2, !tbaa !197
  %value4.i762 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 11, i32 3
  %i16.i763 = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i762 to i16*
  store i16 2, i16* %i16.i763, align 2, !tbaa !14
  %tag_code2.i754 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 12, i32 0
  store i16 296, i16* %tag_code2.i754, align 2, !tbaa !194
  %type_code.i755 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 12, i32 1
  store i16 3, i16* %type_code.i755, align 2, !tbaa !196
  %count3.i756 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 12, i32 2
  store i32 1, i32* %count3.i756, align 2, !tbaa !197
  %value4.i757 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 12, i32 3
  %i16.i758 = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i757 to i16*
  store i16 1, i16* %i16.i758, align 2, !tbaa !14
  %idxprom92 = sext i32 %type_code to i64
  %arrayidx93 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZN6Halide7Runtime8Internal30pixel_type_to_tiff_sample_typeE, i64 0, i64 %idxprom92
  %50 = load i16, i16* %arrayidx93, align 2, !tbaa !161
  %tag_code2.i749 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 13, i32 0
  store i16 339, i16* %tag_code2.i749, align 2, !tbaa !194
  %type_code.i750 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 13, i32 1
  store i16 3, i16* %type_code.i750, align 2, !tbaa !196
  %count3.i751 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 13, i32 2
  store i32 1, i32* %count3.i751, align 2, !tbaa !197
  %value4.i752 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 13, i32 3
  %i16.i753 = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i752 to i16*
  store i16 %50, i16* %i16.i753, align 2, !tbaa !14
  %tag_code2.i745 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 14, i32 0
  store i16 -32539, i16* %tag_code2.i745, align 2, !tbaa !194
  %type_code.i746 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 14, i32 1
  store i16 4, i16* %type_code.i746, align 2, !tbaa !196
  %count3.i747 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 14, i32 2
  store i32 1, i32* %count3.i747, align 2, !tbaa !197
  %i32.i748 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 14, i32 3, i32 0
  store i32 %depth.0, i32* %i32.i748, align 2, !tbaa !14
  %ifd0_end = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 5
  %51 = bitcast i32* %ifd0_end to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 2, !tbaa !73
  %arrayidx100 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 7, i64 1
  store i32 1, i32* %arrayidx100, align 2, !tbaa !73
  %call.i736 = call i64 @fwrite(i8* nonnull %43, i64 210, i64 1, i8* nonnull %call.i598) #15
  %cmp.i737.not = icmp eq i64 %call.i736, 0
  br i1 %cmp.i737.not, label %cleanup154, label %if.end103

if.end103:                                        ; preds = %if.then36
  %cmp104 = icmp sgt i32 %channels.0, 1
  br i1 %cmp104, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731.lr.ph, label %cleanup154.thread

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731.lr.ph: ; preds = %if.end103
  %52 = bitcast i32* %offset to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52) #10
  %mul108 = shl i32 %channels.0, 3
  %add109 = add i32 %mul108, 210
  store i32 %add109, i32* %offset, align 4, !tbaa !73
  %mul123 = mul i32 %depth.0, %div.i
  br label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731: ; preds = %if.end118, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731.lr.ph
  %i111.0865 = phi i32 [ 0, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731.lr.ph ], [ %inc128, %if.end118 ]
  %call.i727 = call i64 @fwrite(i8* nonnull %52, i64 4, i64 1, i8* nonnull %call.i598) #15
  %cmp.i728.not = icmp eq i64 %call.i727, 0
  br i1 %cmp.i728.not, label %cleanup151.thread, label %if.end118

if.end118:                                        ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731
  %53 = load i32, i32* %extent.i, align 4, !tbaa !178
  %54 = load i32, i32* %extent.i.1, align 4, !tbaa !178
  %mul124 = mul i32 %mul123, %53
  %mul125 = mul i32 %mul124, %54
  %55 = load i32, i32* %offset, align 4, !tbaa !73
  %add126 = add nsw i32 %mul125, %55
  store i32 %add126, i32* %offset, align 4, !tbaa !73
  %inc128 = add nuw nsw i32 %i111.0865, 1
  %exitcond881.not = icmp eq i32 %inc128, %channels.0
  br i1 %exitcond881.not, label %for.end129, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731, !llvm.loop !198

for.end129:                                       ; preds = %if.end118
  %56 = bitcast i32* %count to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56) #10
  store i32 %mul125, i32* %count, align 4, !tbaa !73
  br label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit720

for.cond138:                                      ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit720
  %exitcond.not = icmp eq i32 %inc146, %channels.0
  br i1 %exitcond.not, label %cleanup151, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit720, !llvm.loop !199

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit720: ; preds = %for.end129, %for.cond138
  %i137.0863 = phi i32 [ %inc146, %for.cond138 ], [ 0, %for.end129 ]
  %call.i716 = call i64 @fwrite(i8* nonnull %56, i64 4, i64 1, i8* nonnull %call.i598) #15
  %cmp.i717.not = icmp eq i64 %call.i716, 0
  %inc146 = add nuw nsw i32 %i137.0863, 1
  br i1 %cmp.i717.not, label %select.unfold, label %for.cond138

select.unfold:                                    ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit720
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #10
  br label %cleanup151.thread

cleanup151.thread:                                ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731, %select.unfold
  %retval.2.ph = phi i32 [ -5, %select.unfold ], [ -4, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52) #10
  br label %cleanup154

cleanup151:                                       ; preds = %for.cond138
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52) #10
  br label %cleanup154.thread

cleanup154.thread:                                ; preds = %cleanup151, %if.end103
  call void @llvm.lifetime.end.p0i8(i64 210, i8* nonnull %43) #10
  br label %if.end311

cleanup154:                                       ; preds = %cleanup151.thread, %if.then36
  %retval.4 = phi i32 [ -3, %if.then36 ], [ %retval.2.ph, %cleanup151.thread ]
  call void @llvm.lifetime.end.p0i8(i64 210, i8* nonnull %43) #10
  br label %cleanup433

if.else164:                                       ; preds = %lor.lhs.false
  %call165 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal9ends_withEPKcS3_(i8* %filename, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.39, i64 0, i64 0)) #16
  br i1 %call165, label %while.cond, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit631

while.cond:                                       ; preds = %if.else164, %while.cond
  %end.0 = phi i8* [ %incdec.ptr167, %while.cond ], [ %filename, %if.else164 ]
  %57 = load i8, i8* %end.0, align 1, !tbaa !14
  %tobool.not = icmp eq i8 %57, 0
  %incdec.ptr167 = getelementptr inbounds i8, i8* %end.0, i64 1
  br i1 %tobool.not, label %while.body171, label %while.cond, !llvm.loop !200

while.cond174.preheader:                          ; preds = %while.body171
  %end.1872.lcssa883 = ptrtoint i8* %end.1872 to i64
  %58 = ptrtoint i8* %filename to i64
  %59 = sub i64 %58, %end.1872.lcssa883
  br label %while.cond174

while.body171:                                    ; preds = %while.cond, %while.body171
  %end.1872 = phi i8* [ %incdec.ptr172.ptr, %while.body171 ], [ %end.0, %while.cond ]
  %incdec.ptr172.ptr = getelementptr inbounds i8, i8* %end.1872, i64 -1
  %.pr = load i8, i8* %incdec.ptr172.ptr, align 1, !tbaa !14
  %cmp170.not = icmp eq i8 %.pr, 46
  br i1 %cmp170.not, label %while.cond174.preheader, label %while.body171, !llvm.loop !201

while.cond174:                                    ; preds = %land.rhs176, %while.cond174.preheader
  %start.0.idx = phi i64 [ %start.0.add, %land.rhs176 ], [ -1, %while.cond174.preheader ]
  %start.0.ptr.ptr = getelementptr inbounds i8, i8* %end.1872, i64 %start.0.idx
  %cmp175.not = icmp eq i8* %start.0.ptr.ptr, %filename
  br i1 %cmp175.not, label %while.end183, label %land.rhs176

land.rhs176:                                      ; preds = %while.cond174
  %start.0.add = add nsw i64 %start.0.idx, -1
  %arrayidx177.ptr = getelementptr inbounds i8, i8* %end.1872, i64 %start.0.add
  %60 = load i8, i8* %arrayidx177.ptr, align 1, !tbaa !14
  %cmp179.not = icmp eq i8 %60, 47
  br i1 %cmp179.not, label %while.end183, label %while.cond174, !llvm.loop !202

while.end183:                                     ; preds = %land.rhs176, %while.cond174
  %start.0.idx.lcssa = phi i64 [ %59, %while.cond174 ], [ %start.0.idx, %land.rhs176 ]
  %61 = trunc i64 %start.0.idx.lcssa to i32
  %conv184 = xor i32 %61, -1
  %62 = getelementptr inbounds [256 x i8], [256 x i8]* %array_name, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %62) #10
  %cmp186.not868 = icmp eq i64 %start.0.idx.lcssa, -1
  br i1 %cmp186.not868, label %iter.check, label %while.body187.preheader

while.body187.preheader:                          ; preds = %while.end183
  %63 = xor i64 %start.0.idx.lcssa, -1
  %min.iters.check39 = icmp ugt i64 %start.0.idx.lcssa, -129
  br i1 %min.iters.check39, label %while.body187.preheader212, label %vector.memcheck

vector.memcheck:                                  ; preds = %while.body187.preheader
  %64 = xor i64 %start.0.idx.lcssa, -1
  %scevgep43 = getelementptr [256 x i8], [256 x i8]* %array_name, i64 0, i64 %64
  %scevgep44 = getelementptr i8, i8* %end.1872, i64 %start.0.idx.lcssa
  %scevgep45 = getelementptr i8, i8* %end.1872, i64 -1
  %bound0 = icmp ult i8* %array_name42, %scevgep45
  %bound1 = icmp ult i8* %scevgep44, %scevgep43
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %while.body187.preheader212, label %vector.ph41

vector.ph41:                                      ; preds = %vector.memcheck
  %n.vec47 = and i64 %63, -128
  %ind.end51 = getelementptr [256 x i8], [256 x i8]* %array_name, i64 0, i64 %n.vec47
  %ind.end53 = add i64 %start.0.idx.lcssa, %n.vec47
  %65 = add i64 %n.vec47, -128
  %66 = lshr exact i64 %65, 7
  %67 = add nuw nsw i64 %66, 1
  %xtraiter215 = and i64 %67, 3
  %68 = icmp ult i64 %65, 384
  br i1 %68, label %middle.block36.unr-lcssa, label %vector.ph41.new

vector.ph41.new:                                  ; preds = %vector.ph41
  %unroll_iter218 = and i64 %67, 288230376151711740
  br label %vector.body38

vector.body38:                                    ; preds = %vector.body38, %vector.ph41.new
  %index48 = phi i64 [ 0, %vector.ph41.new ], [ %index.next49.3, %vector.body38 ]
  %niter219 = phi i64 [ %unroll_iter218, %vector.ph41.new ], [ %niter219.nsub.3, %vector.body38 ]
  %next.gep = getelementptr [256 x i8], [256 x i8]* %array_name, i64 0, i64 %index48
  %offset.idx = add i64 %start.0.idx.lcssa, %index48
  %69 = getelementptr inbounds i8, i8* %end.1872, i64 %offset.idx
  %70 = bitcast i8* %69 to <32 x i8>*
  %wide.load = load <32 x i8>, <32 x i8>* %70, align 1, !tbaa !14, !alias.scope !203
  %71 = getelementptr inbounds i8, i8* %69, i64 32
  %72 = bitcast i8* %71 to <32 x i8>*
  %wide.load58 = load <32 x i8>, <32 x i8>* %72, align 1, !tbaa !14, !alias.scope !203
  %73 = getelementptr inbounds i8, i8* %69, i64 64
  %74 = bitcast i8* %73 to <32 x i8>*
  %wide.load59 = load <32 x i8>, <32 x i8>* %74, align 1, !tbaa !14, !alias.scope !203
  %75 = getelementptr inbounds i8, i8* %69, i64 96
  %76 = bitcast i8* %75 to <32 x i8>*
  %wide.load60 = load <32 x i8>, <32 x i8>* %76, align 1, !tbaa !14, !alias.scope !203
  %77 = bitcast i8* %next.gep to <32 x i8>*
  store <32 x i8> %wide.load, <32 x i8>* %77, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %78 = getelementptr i8, i8* %next.gep, i64 32
  %79 = bitcast i8* %78 to <32 x i8>*
  store <32 x i8> %wide.load58, <32 x i8>* %79, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %80 = getelementptr i8, i8* %next.gep, i64 64
  %81 = bitcast i8* %80 to <32 x i8>*
  store <32 x i8> %wide.load59, <32 x i8>* %81, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %82 = getelementptr i8, i8* %next.gep, i64 96
  %83 = bitcast i8* %82 to <32 x i8>*
  store <32 x i8> %wide.load60, <32 x i8>* %83, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %index.next49 = or i64 %index48, 128
  %next.gep.1 = getelementptr [256 x i8], [256 x i8]* %array_name, i64 0, i64 %index.next49
  %offset.idx.1 = add i64 %start.0.idx.lcssa, %index.next49
  %84 = getelementptr inbounds i8, i8* %end.1872, i64 %offset.idx.1
  %85 = bitcast i8* %84 to <32 x i8>*
  %wide.load.1 = load <32 x i8>, <32 x i8>* %85, align 1, !tbaa !14, !alias.scope !203
  %86 = getelementptr inbounds i8, i8* %84, i64 32
  %87 = bitcast i8* %86 to <32 x i8>*
  %wide.load58.1 = load <32 x i8>, <32 x i8>* %87, align 1, !tbaa !14, !alias.scope !203
  %88 = getelementptr inbounds i8, i8* %84, i64 64
  %89 = bitcast i8* %88 to <32 x i8>*
  %wide.load59.1 = load <32 x i8>, <32 x i8>* %89, align 1, !tbaa !14, !alias.scope !203
  %90 = getelementptr inbounds i8, i8* %84, i64 96
  %91 = bitcast i8* %90 to <32 x i8>*
  %wide.load60.1 = load <32 x i8>, <32 x i8>* %91, align 1, !tbaa !14, !alias.scope !203
  %92 = bitcast i8* %next.gep.1 to <32 x i8>*
  store <32 x i8> %wide.load.1, <32 x i8>* %92, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %93 = getelementptr i8, i8* %next.gep.1, i64 32
  %94 = bitcast i8* %93 to <32 x i8>*
  store <32 x i8> %wide.load58.1, <32 x i8>* %94, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %95 = getelementptr i8, i8* %next.gep.1, i64 64
  %96 = bitcast i8* %95 to <32 x i8>*
  store <32 x i8> %wide.load59.1, <32 x i8>* %96, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %97 = getelementptr i8, i8* %next.gep.1, i64 96
  %98 = bitcast i8* %97 to <32 x i8>*
  store <32 x i8> %wide.load60.1, <32 x i8>* %98, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %index.next49.1 = or i64 %index48, 256
  %next.gep.2 = getelementptr [256 x i8], [256 x i8]* %array_name, i64 0, i64 %index.next49.1
  %offset.idx.2 = add i64 %start.0.idx.lcssa, %index.next49.1
  %99 = getelementptr inbounds i8, i8* %end.1872, i64 %offset.idx.2
  %100 = bitcast i8* %99 to <32 x i8>*
  %wide.load.2 = load <32 x i8>, <32 x i8>* %100, align 1, !tbaa !14, !alias.scope !203
  %101 = getelementptr inbounds i8, i8* %99, i64 32
  %102 = bitcast i8* %101 to <32 x i8>*
  %wide.load58.2 = load <32 x i8>, <32 x i8>* %102, align 1, !tbaa !14, !alias.scope !203
  %103 = getelementptr inbounds i8, i8* %99, i64 64
  %104 = bitcast i8* %103 to <32 x i8>*
  %wide.load59.2 = load <32 x i8>, <32 x i8>* %104, align 1, !tbaa !14, !alias.scope !203
  %105 = getelementptr inbounds i8, i8* %99, i64 96
  %106 = bitcast i8* %105 to <32 x i8>*
  %wide.load60.2 = load <32 x i8>, <32 x i8>* %106, align 1, !tbaa !14, !alias.scope !203
  %107 = bitcast i8* %next.gep.2 to <32 x i8>*
  store <32 x i8> %wide.load.2, <32 x i8>* %107, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %108 = getelementptr i8, i8* %next.gep.2, i64 32
  %109 = bitcast i8* %108 to <32 x i8>*
  store <32 x i8> %wide.load58.2, <32 x i8>* %109, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %110 = getelementptr i8, i8* %next.gep.2, i64 64
  %111 = bitcast i8* %110 to <32 x i8>*
  store <32 x i8> %wide.load59.2, <32 x i8>* %111, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %112 = getelementptr i8, i8* %next.gep.2, i64 96
  %113 = bitcast i8* %112 to <32 x i8>*
  store <32 x i8> %wide.load60.2, <32 x i8>* %113, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %index.next49.2 = or i64 %index48, 384
  %next.gep.3 = getelementptr [256 x i8], [256 x i8]* %array_name, i64 0, i64 %index.next49.2
  %offset.idx.3 = add i64 %start.0.idx.lcssa, %index.next49.2
  %114 = getelementptr inbounds i8, i8* %end.1872, i64 %offset.idx.3
  %115 = bitcast i8* %114 to <32 x i8>*
  %wide.load.3 = load <32 x i8>, <32 x i8>* %115, align 1, !tbaa !14, !alias.scope !203
  %116 = getelementptr inbounds i8, i8* %114, i64 32
  %117 = bitcast i8* %116 to <32 x i8>*
  %wide.load58.3 = load <32 x i8>, <32 x i8>* %117, align 1, !tbaa !14, !alias.scope !203
  %118 = getelementptr inbounds i8, i8* %114, i64 64
  %119 = bitcast i8* %118 to <32 x i8>*
  %wide.load59.3 = load <32 x i8>, <32 x i8>* %119, align 1, !tbaa !14, !alias.scope !203
  %120 = getelementptr inbounds i8, i8* %114, i64 96
  %121 = bitcast i8* %120 to <32 x i8>*
  %wide.load60.3 = load <32 x i8>, <32 x i8>* %121, align 1, !tbaa !14, !alias.scope !203
  %122 = bitcast i8* %next.gep.3 to <32 x i8>*
  store <32 x i8> %wide.load.3, <32 x i8>* %122, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %123 = getelementptr i8, i8* %next.gep.3, i64 32
  %124 = bitcast i8* %123 to <32 x i8>*
  store <32 x i8> %wide.load58.3, <32 x i8>* %124, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %125 = getelementptr i8, i8* %next.gep.3, i64 64
  %126 = bitcast i8* %125 to <32 x i8>*
  store <32 x i8> %wide.load59.3, <32 x i8>* %126, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %127 = getelementptr i8, i8* %next.gep.3, i64 96
  %128 = bitcast i8* %127 to <32 x i8>*
  store <32 x i8> %wide.load60.3, <32 x i8>* %128, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %index.next49.3 = add i64 %index48, 512
  %niter219.nsub.3 = add i64 %niter219, -4
  %niter219.ncmp.3 = icmp eq i64 %niter219.nsub.3, 0
  br i1 %niter219.ncmp.3, label %middle.block36.unr-lcssa, label %vector.body38, !llvm.loop !208

middle.block36.unr-lcssa:                         ; preds = %vector.body38, %vector.ph41
  %index48.unr = phi i64 [ 0, %vector.ph41 ], [ %index.next49.3, %vector.body38 ]
  %lcmp.mod217.not = icmp eq i64 %xtraiter215, 0
  br i1 %lcmp.mod217.not, label %middle.block36, label %vector.body38.epil

vector.body38.epil:                               ; preds = %middle.block36.unr-lcssa, %vector.body38.epil
  %index48.epil = phi i64 [ %index.next49.epil, %vector.body38.epil ], [ %index48.unr, %middle.block36.unr-lcssa ]
  %epil.iter216 = phi i64 [ %epil.iter216.sub, %vector.body38.epil ], [ %xtraiter215, %middle.block36.unr-lcssa ]
  %next.gep.epil = getelementptr [256 x i8], [256 x i8]* %array_name, i64 0, i64 %index48.epil
  %offset.idx.epil = add i64 %start.0.idx.lcssa, %index48.epil
  %129 = getelementptr inbounds i8, i8* %end.1872, i64 %offset.idx.epil
  %130 = bitcast i8* %129 to <32 x i8>*
  %wide.load.epil = load <32 x i8>, <32 x i8>* %130, align 1, !tbaa !14, !alias.scope !203
  %131 = getelementptr inbounds i8, i8* %129, i64 32
  %132 = bitcast i8* %131 to <32 x i8>*
  %wide.load58.epil = load <32 x i8>, <32 x i8>* %132, align 1, !tbaa !14, !alias.scope !203
  %133 = getelementptr inbounds i8, i8* %129, i64 64
  %134 = bitcast i8* %133 to <32 x i8>*
  %wide.load59.epil = load <32 x i8>, <32 x i8>* %134, align 1, !tbaa !14, !alias.scope !203
  %135 = getelementptr inbounds i8, i8* %129, i64 96
  %136 = bitcast i8* %135 to <32 x i8>*
  %wide.load60.epil = load <32 x i8>, <32 x i8>* %136, align 1, !tbaa !14, !alias.scope !203
  %137 = bitcast i8* %next.gep.epil to <32 x i8>*
  store <32 x i8> %wide.load.epil, <32 x i8>* %137, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %138 = getelementptr i8, i8* %next.gep.epil, i64 32
  %139 = bitcast i8* %138 to <32 x i8>*
  store <32 x i8> %wide.load58.epil, <32 x i8>* %139, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %140 = getelementptr i8, i8* %next.gep.epil, i64 64
  %141 = bitcast i8* %140 to <32 x i8>*
  store <32 x i8> %wide.load59.epil, <32 x i8>* %141, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %142 = getelementptr i8, i8* %next.gep.epil, i64 96
  %143 = bitcast i8* %142 to <32 x i8>*
  store <32 x i8> %wide.load60.epil, <32 x i8>* %143, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %index.next49.epil = add i64 %index48.epil, 128
  %epil.iter216.sub = add i64 %epil.iter216, -1
  %epil.iter216.cmp.not = icmp eq i64 %epil.iter216.sub, 0
  br i1 %epil.iter216.cmp.not, label %middle.block36, label %vector.body38.epil, !llvm.loop !209

middle.block36:                                   ; preds = %vector.body38.epil, %middle.block36.unr-lcssa
  %cmp.n54 = icmp eq i64 %n.vec47, %63
  br i1 %cmp.n54, label %while.cond191.preheader, label %while.body187.preheader212

while.body187.preheader212:                       ; preds = %vector.memcheck, %while.body187.preheader, %middle.block36
  %dst.0870.ph = phi i8* [ %62, %vector.memcheck ], [ %62, %while.body187.preheader ], [ %ind.end51, %middle.block36 ]
  %start.1869.idx.ph = phi i64 [ %start.0.idx.lcssa, %vector.memcheck ], [ %start.0.idx.lcssa, %while.body187.preheader ], [ %ind.end53, %middle.block36 ]
  %144 = sub i64 -2, %start.1869.idx.ph
  %145 = and i64 %start.1869.idx.ph, 7
  %xtraiter220 = xor i64 %145, 7
  %lcmp.mod221.not = icmp eq i64 %xtraiter220, 0
  br i1 %lcmp.mod221.not, label %while.body187.prol.loopexit, label %while.body187.prol

while.body187.prol:                               ; preds = %while.body187.preheader212, %while.body187.prol
  %dst.0870.prol = phi i8* [ %incdec.ptr189.prol, %while.body187.prol ], [ %dst.0870.ph, %while.body187.preheader212 ]
  %start.1869.idx.prol = phi i64 [ %start.1869.add.prol, %while.body187.prol ], [ %start.1869.idx.ph, %while.body187.preheader212 ]
  %prol.iter = phi i64 [ %prol.iter.sub, %while.body187.prol ], [ %xtraiter220, %while.body187.preheader212 ]
  %start.1869.ptr.prol = getelementptr inbounds i8, i8* %end.1872, i64 %start.1869.idx.prol
  %start.1869.add.prol = add nuw nsw i64 %start.1869.idx.prol, 1
  %146 = load i8, i8* %start.1869.ptr.prol, align 1, !tbaa !14
  %incdec.ptr189.prol = getelementptr inbounds i8, i8* %dst.0870.prol, i64 1
  store i8 %146, i8* %dst.0870.prol, align 1, !tbaa !14
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp.not, label %while.body187.prol.loopexit, label %while.body187.prol, !llvm.loop !210

while.body187.prol.loopexit:                      ; preds = %while.body187.prol, %while.body187.preheader212
  %incdec.ptr189.lcssa213.unr = phi i8* [ undef, %while.body187.preheader212 ], [ %incdec.ptr189.prol, %while.body187.prol ]
  %dst.0870.unr = phi i8* [ %dst.0870.ph, %while.body187.preheader212 ], [ %incdec.ptr189.prol, %while.body187.prol ]
  %start.1869.idx.unr = phi i64 [ %start.1869.idx.ph, %while.body187.preheader212 ], [ %start.1869.add.prol, %while.body187.prol ]
  %147 = icmp ult i64 %144, 7
  br i1 %147, label %while.cond191.preheader, label %while.body187

while.cond191.preheader:                          ; preds = %while.body187.prol.loopexit, %while.body187, %middle.block36
  %incdec.ptr189.lcssa = phi i8* [ %ind.end51, %middle.block36 ], [ %incdec.ptr189.lcssa213.unr, %while.body187.prol.loopexit ], [ %incdec.ptr189.7, %while.body187 ]
  %add.ptr = getelementptr inbounds [256 x i8], [256 x i8]* %array_name, i64 0, i64 256
  %cmp193866 = icmp ult i8* %incdec.ptr189.lcssa, %add.ptr
  br i1 %cmp193866, label %iter.check, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705

iter.check:                                       ; preds = %while.cond191.preheader, %while.end183
  %dst.0.lcssa911 = phi i8* [ %incdec.ptr189.lcssa, %while.cond191.preheader ], [ %62, %while.end183 ]
  %dst.0.lcssa91164 = ptrtoint i8* %dst.0.lcssa911 to i64
  %scevgep = getelementptr inbounds [256 x i8], [256 x i8]* %array_name, i64 1, i64 0
  %148 = sub i64 0, %dst.0.lcssa91164
  %scevgep65 = getelementptr [256 x i8], [256 x i8]* %array_name, i64 1, i64 %148
  %exitcount.ptrcnt.to.int = ptrtoint i8* %scevgep65 to i64
  %min.iters.check67 = icmp ult i8* %scevgep65, inttoptr (i64 4 to i8*)
  br i1 %min.iters.check67, label %while.body194.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %iter.check
  %min.iters.check69 = icmp ult i8* %scevgep65, inttoptr (i64 128 to i8*)
  br i1 %min.iters.check69, label %vec.epilog.ph, label %vector.ph70

vector.ph70:                                      ; preds = %vector.main.loop.iter.check
  %n.vec72 = and i64 %exitcount.ptrcnt.to.int, -128
  %149 = add i64 %n.vec72, -128
  %150 = lshr exact i64 %149, 7
  %151 = add nuw nsw i64 %150, 1
  %xtraiter222 = and i64 %151, 7
  %152 = icmp ult i64 %149, 896
  br i1 %152, label %middle.block61.unr-lcssa, label %vector.ph70.new

vector.ph70.new:                                  ; preds = %vector.ph70
  %unroll_iter225 = and i64 %151, 288230376151711736
  br label %vector.body63

vector.body63:                                    ; preds = %vector.body63, %vector.ph70.new
  %index73 = phi i64 [ 0, %vector.ph70.new ], [ %index.next74.7, %vector.body63 ]
  %niter226 = phi i64 [ %unroll_iter225, %vector.ph70.new ], [ %niter226.nsub.7, %vector.body63 ]
  %next.gep76 = getelementptr i8, i8* %dst.0.lcssa911, i64 %index73
  %153 = bitcast i8* %next.gep76 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %153, align 1, !tbaa !14
  %154 = getelementptr i8, i8* %next.gep76, i64 32
  %155 = bitcast i8* %154 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %155, align 1, !tbaa !14
  %156 = getelementptr i8, i8* %next.gep76, i64 64
  %157 = bitcast i8* %156 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %157, align 1, !tbaa !14
  %158 = getelementptr i8, i8* %next.gep76, i64 96
  %159 = bitcast i8* %158 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %159, align 1, !tbaa !14
  %index.next74 = or i64 %index73, 128
  %next.gep76.1 = getelementptr i8, i8* %dst.0.lcssa911, i64 %index.next74
  %160 = bitcast i8* %next.gep76.1 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %160, align 1, !tbaa !14
  %161 = getelementptr i8, i8* %next.gep76.1, i64 32
  %162 = bitcast i8* %161 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %162, align 1, !tbaa !14
  %163 = getelementptr i8, i8* %next.gep76.1, i64 64
  %164 = bitcast i8* %163 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %164, align 1, !tbaa !14
  %165 = getelementptr i8, i8* %next.gep76.1, i64 96
  %166 = bitcast i8* %165 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %166, align 1, !tbaa !14
  %index.next74.1 = or i64 %index73, 256
  %next.gep76.2 = getelementptr i8, i8* %dst.0.lcssa911, i64 %index.next74.1
  %167 = bitcast i8* %next.gep76.2 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %167, align 1, !tbaa !14
  %168 = getelementptr i8, i8* %next.gep76.2, i64 32
  %169 = bitcast i8* %168 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %169, align 1, !tbaa !14
  %170 = getelementptr i8, i8* %next.gep76.2, i64 64
  %171 = bitcast i8* %170 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %171, align 1, !tbaa !14
  %172 = getelementptr i8, i8* %next.gep76.2, i64 96
  %173 = bitcast i8* %172 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %173, align 1, !tbaa !14
  %index.next74.2 = or i64 %index73, 384
  %next.gep76.3 = getelementptr i8, i8* %dst.0.lcssa911, i64 %index.next74.2
  %174 = bitcast i8* %next.gep76.3 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %174, align 1, !tbaa !14
  %175 = getelementptr i8, i8* %next.gep76.3, i64 32
  %176 = bitcast i8* %175 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %176, align 1, !tbaa !14
  %177 = getelementptr i8, i8* %next.gep76.3, i64 64
  %178 = bitcast i8* %177 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %178, align 1, !tbaa !14
  %179 = getelementptr i8, i8* %next.gep76.3, i64 96
  %180 = bitcast i8* %179 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %180, align 1, !tbaa !14
  %index.next74.3 = or i64 %index73, 512
  %next.gep76.4 = getelementptr i8, i8* %dst.0.lcssa911, i64 %index.next74.3
  %181 = bitcast i8* %next.gep76.4 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %181, align 1, !tbaa !14
  %182 = getelementptr i8, i8* %next.gep76.4, i64 32
  %183 = bitcast i8* %182 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %183, align 1, !tbaa !14
  %184 = getelementptr i8, i8* %next.gep76.4, i64 64
  %185 = bitcast i8* %184 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %185, align 1, !tbaa !14
  %186 = getelementptr i8, i8* %next.gep76.4, i64 96
  %187 = bitcast i8* %186 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %187, align 1, !tbaa !14
  %index.next74.4 = or i64 %index73, 640
  %next.gep76.5 = getelementptr i8, i8* %dst.0.lcssa911, i64 %index.next74.4
  %188 = bitcast i8* %next.gep76.5 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %188, align 1, !tbaa !14
  %189 = getelementptr i8, i8* %next.gep76.5, i64 32
  %190 = bitcast i8* %189 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %190, align 1, !tbaa !14
  %191 = getelementptr i8, i8* %next.gep76.5, i64 64
  %192 = bitcast i8* %191 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %192, align 1, !tbaa !14
  %193 = getelementptr i8, i8* %next.gep76.5, i64 96
  %194 = bitcast i8* %193 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %194, align 1, !tbaa !14
  %index.next74.5 = or i64 %index73, 768
  %next.gep76.6 = getelementptr i8, i8* %dst.0.lcssa911, i64 %index.next74.5
  %195 = bitcast i8* %next.gep76.6 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %195, align 1, !tbaa !14
  %196 = getelementptr i8, i8* %next.gep76.6, i64 32
  %197 = bitcast i8* %196 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %197, align 1, !tbaa !14
  %198 = getelementptr i8, i8* %next.gep76.6, i64 64
  %199 = bitcast i8* %198 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %199, align 1, !tbaa !14
  %200 = getelementptr i8, i8* %next.gep76.6, i64 96
  %201 = bitcast i8* %200 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %201, align 1, !tbaa !14
  %index.next74.6 = or i64 %index73, 896
  %next.gep76.7 = getelementptr i8, i8* %dst.0.lcssa911, i64 %index.next74.6
  %202 = bitcast i8* %next.gep76.7 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %202, align 1, !tbaa !14
  %203 = getelementptr i8, i8* %next.gep76.7, i64 32
  %204 = bitcast i8* %203 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %204, align 1, !tbaa !14
  %205 = getelementptr i8, i8* %next.gep76.7, i64 64
  %206 = bitcast i8* %205 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %206, align 1, !tbaa !14
  %207 = getelementptr i8, i8* %next.gep76.7, i64 96
  %208 = bitcast i8* %207 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %208, align 1, !tbaa !14
  %index.next74.7 = add i64 %index73, 1024
  %niter226.nsub.7 = add i64 %niter226, -8
  %niter226.ncmp.7 = icmp eq i64 %niter226.nsub.7, 0
  br i1 %niter226.ncmp.7, label %middle.block61.unr-lcssa, label %vector.body63, !llvm.loop !211

middle.block61.unr-lcssa:                         ; preds = %vector.body63, %vector.ph70
  %index73.unr = phi i64 [ 0, %vector.ph70 ], [ %index.next74.7, %vector.body63 ]
  %lcmp.mod224.not = icmp eq i64 %xtraiter222, 0
  br i1 %lcmp.mod224.not, label %middle.block61, label %vector.body63.epil

vector.body63.epil:                               ; preds = %middle.block61.unr-lcssa, %vector.body63.epil
  %index73.epil = phi i64 [ %index.next74.epil, %vector.body63.epil ], [ %index73.unr, %middle.block61.unr-lcssa ]
  %epil.iter223 = phi i64 [ %epil.iter223.sub, %vector.body63.epil ], [ %xtraiter222, %middle.block61.unr-lcssa ]
  %next.gep76.epil = getelementptr i8, i8* %dst.0.lcssa911, i64 %index73.epil
  %209 = bitcast i8* %next.gep76.epil to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %209, align 1, !tbaa !14
  %210 = getelementptr i8, i8* %next.gep76.epil, i64 32
  %211 = bitcast i8* %210 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %211, align 1, !tbaa !14
  %212 = getelementptr i8, i8* %next.gep76.epil, i64 64
  %213 = bitcast i8* %212 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %213, align 1, !tbaa !14
  %214 = getelementptr i8, i8* %next.gep76.epil, i64 96
  %215 = bitcast i8* %214 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %215, align 1, !tbaa !14
  %index.next74.epil = add i64 %index73.epil, 128
  %epil.iter223.sub = add i64 %epil.iter223, -1
  %epil.iter223.cmp.not = icmp eq i64 %epil.iter223.sub, 0
  br i1 %epil.iter223.cmp.not, label %middle.block61, label %vector.body63.epil, !llvm.loop !212

middle.block61:                                   ; preds = %vector.body63.epil, %middle.block61.unr-lcssa
  %cmp.n75 = icmp eq i64 %n.vec72, %exitcount.ptrcnt.to.int
  br i1 %cmp.n75, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block61
  %ind.end89 = getelementptr i8, i8* %dst.0.lcssa911, i64 %n.vec72
  %n.vec.remaining = and i64 %exitcount.ptrcnt.to.int, 124
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  br i1 %min.epilog.iters.check, label %while.body194.preheader, label %vec.epilog.ph

vec.epilog.ph:                                    ; preds = %vector.main.loop.iter.check, %vec.epilog.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec72, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  %216 = sub i64 0, %dst.0.lcssa91164
  %scevgep80 = getelementptr [256 x i8], [256 x i8]* %array_name, i64 1, i64 %216
  %exitcount.ptrcnt.to.int82 = ptrtoint i8* %scevgep80 to i64
  %n.vec84 = and i64 %exitcount.ptrcnt.to.int82, -4
  %ind.end88 = getelementptr i8, i8* %dst.0.lcssa911, i64 %n.vec84
  br label %vec.epilog.vector.body

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %index85 = phi i64 [ %vec.epilog.resume.val, %vec.epilog.ph ], [ %index.next86, %vec.epilog.vector.body ]
  %next.gep91 = getelementptr i8, i8* %dst.0.lcssa911, i64 %index85
  %217 = bitcast i8* %next.gep91 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %217, align 1, !tbaa !14
  %index.next86 = add i64 %index85, 4
  %218 = icmp eq i64 %index.next86, %n.vec84
  br i1 %218, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !llvm.loop !213

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  %cmp.n90 = icmp eq i64 %n.vec84, %exitcount.ptrcnt.to.int82
  br i1 %cmp.n90, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705, label %while.body194.preheader

while.body194.preheader:                          ; preds = %iter.check, %vec.epilog.iter.check, %vec.epilog.middle.block
  %dst.1867.ph = phi i8* [ %dst.0.lcssa911, %iter.check ], [ %ind.end89, %vec.epilog.iter.check ], [ %ind.end88, %vec.epilog.middle.block ]
  br label %while.body194

while.body187:                                    ; preds = %while.body187.prol.loopexit, %while.body187
  %dst.0870 = phi i8* [ %incdec.ptr189.7, %while.body187 ], [ %dst.0870.unr, %while.body187.prol.loopexit ]
  %start.1869.idx = phi i64 [ %start.1869.add.7, %while.body187 ], [ %start.1869.idx.unr, %while.body187.prol.loopexit ]
  %start.1869.ptr = getelementptr inbounds i8, i8* %end.1872, i64 %start.1869.idx
  %start.1869.add = add nuw nsw i64 %start.1869.idx, 1
  %219 = load i8, i8* %start.1869.ptr, align 1, !tbaa !14
  %incdec.ptr189 = getelementptr inbounds i8, i8* %dst.0870, i64 1
  store i8 %219, i8* %dst.0870, align 1, !tbaa !14
  %start.1869.ptr.1 = getelementptr inbounds i8, i8* %end.1872, i64 %start.1869.add
  %start.1869.add.1 = add nuw nsw i64 %start.1869.idx, 2
  %220 = load i8, i8* %start.1869.ptr.1, align 1, !tbaa !14
  %incdec.ptr189.1 = getelementptr inbounds i8, i8* %dst.0870, i64 2
  store i8 %220, i8* %incdec.ptr189, align 1, !tbaa !14
  %start.1869.ptr.2 = getelementptr inbounds i8, i8* %end.1872, i64 %start.1869.add.1
  %start.1869.add.2 = add nuw nsw i64 %start.1869.idx, 3
  %221 = load i8, i8* %start.1869.ptr.2, align 1, !tbaa !14
  %incdec.ptr189.2 = getelementptr inbounds i8, i8* %dst.0870, i64 3
  store i8 %221, i8* %incdec.ptr189.1, align 1, !tbaa !14
  %start.1869.ptr.3 = getelementptr inbounds i8, i8* %end.1872, i64 %start.1869.add.2
  %start.1869.add.3 = add nuw nsw i64 %start.1869.idx, 4
  %222 = load i8, i8* %start.1869.ptr.3, align 1, !tbaa !14
  %incdec.ptr189.3 = getelementptr inbounds i8, i8* %dst.0870, i64 4
  store i8 %222, i8* %incdec.ptr189.2, align 1, !tbaa !14
  %start.1869.ptr.4 = getelementptr inbounds i8, i8* %end.1872, i64 %start.1869.add.3
  %start.1869.add.4 = add nuw nsw i64 %start.1869.idx, 5
  %223 = load i8, i8* %start.1869.ptr.4, align 1, !tbaa !14
  %incdec.ptr189.4 = getelementptr inbounds i8, i8* %dst.0870, i64 5
  store i8 %223, i8* %incdec.ptr189.3, align 1, !tbaa !14
  %start.1869.ptr.5 = getelementptr inbounds i8, i8* %end.1872, i64 %start.1869.add.4
  %start.1869.add.5 = add nuw nsw i64 %start.1869.idx, 6
  %224 = load i8, i8* %start.1869.ptr.5, align 1, !tbaa !14
  %incdec.ptr189.5 = getelementptr inbounds i8, i8* %dst.0870, i64 6
  store i8 %224, i8* %incdec.ptr189.4, align 1, !tbaa !14
  %start.1869.ptr.6 = getelementptr inbounds i8, i8* %end.1872, i64 %start.1869.add.5
  %start.1869.add.6 = add nuw nsw i64 %start.1869.idx, 7
  %225 = load i8, i8* %start.1869.ptr.6, align 1, !tbaa !14
  %incdec.ptr189.6 = getelementptr inbounds i8, i8* %dst.0870, i64 7
  store i8 %225, i8* %incdec.ptr189.5, align 1, !tbaa !14
  %start.1869.ptr.7 = getelementptr inbounds i8, i8* %end.1872, i64 %start.1869.add.6
  %start.1869.add.7 = add nuw nsw i64 %start.1869.idx, 8
  %226 = load i8, i8* %start.1869.ptr.7, align 1, !tbaa !14
  %incdec.ptr189.7 = getelementptr inbounds i8, i8* %dst.0870, i64 8
  store i8 %226, i8* %incdec.ptr189.6, align 1, !tbaa !14
  %cmp186.not.7 = icmp eq i64 %start.1869.add.7, -1
  br i1 %cmp186.not.7, label %while.cond191.preheader, label %while.body187, !llvm.loop !214

while.body194:                                    ; preds = %while.body194.preheader, %while.body194
  %dst.1867 = phi i8* [ %incdec.ptr195, %while.body194 ], [ %dst.1867.ph, %while.body194.preheader ]
  %incdec.ptr195 = getelementptr inbounds i8, i8* %dst.1867, i64 1
  store i8 0, i8* %dst.1867, align 1, !tbaa !14
  %exitcond882.not = icmp eq i8* %incdec.ptr195, %scevgep
  br i1 %exitcond882.not, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705, label %while.body194, !llvm.loop !215

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705: ; preds = %while.body194, %middle.block61, %vec.epilog.middle.block, %while.cond191.preheader
  %add197 = sub i32 6, %61
  %and = and i32 %add197, -8
  %227 = getelementptr inbounds [129 x i8], [129 x i8]* %header198, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 129, i8* nonnull %227) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(129) %227, i8* nonnull align 1 dereferenceable(129) getelementptr inbounds ([129 x i8], [129 x i8]* @__const.halide_debug_to_file.header, i64 0, i64 0), i64 129, i1 false)
  %call.i701 = call i64 @fwrite(i8* nonnull %227, i64 128, i64 1, i8* nonnull %call.i598) #15
  %228 = load i32, i32* %dimensions, align 4, !tbaa !175
  %cmp19.i.i = icmp sgt i32 %228, 0
  br i1 %cmp19.i.i, label %for.body.lr.ph.i.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

for.body.lr.ph.i.i:                               ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705
  %dim.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %229 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i.i, align 8, !tbaa !176
  %wide.trip.count.i.i = zext i32 %228 to i64
  %min.iters.check95 = icmp ult i32 %228, 17
  br i1 %min.iters.check95, label %for.body.i.i.preheader, label %vector.ph96

vector.ph96:                                      ; preds = %for.body.lr.ph.i.i
  %n.mod.vf97 = and i64 %wide.trip.count.i.i, 15
  %230 = icmp eq i64 %n.mod.vf97, 0
  %231 = select i1 %230, i64 16, i64 %n.mod.vf97
  %n.vec98 = sub nsw i64 %wide.trip.count.i.i, %231
  br label %vector.body94

vector.body94:                                    ; preds = %vector.body94, %vector.ph96
  %index99 = phi i64 [ 0, %vector.ph96 ], [ %index.next100, %vector.body94 ]
  %vec.ind103 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %vector.ph96 ], [ %vec.ind.next107, %vector.body94 ]
  %vec.phi = phi <4 x i64> [ zeroinitializer, %vector.ph96 ], [ %predphi, %vector.body94 ]
  %vec.phi108 = phi <4 x i64> [ zeroinitializer, %vector.ph96 ], [ %predphi120, %vector.body94 ]
  %vec.phi109 = phi <4 x i64> [ zeroinitializer, %vector.ph96 ], [ %predphi121, %vector.body94 ]
  %vec.phi110 = phi <4 x i64> [ zeroinitializer, %vector.ph96 ], [ %predphi122, %vector.body94 ]
  %step.add = add <4 x i64> %vec.ind103, <i64 4, i64 4, i64 4, i64 4>
  %step.add104 = add <4 x i64> %vec.ind103, <i64 8, i64 8, i64 8, i64 8>
  %step.add105 = add <4 x i64> %vec.ind103, <i64 12, i64 12, i64 12, i64 12>
  %232 = or i64 %index99, 4
  %233 = or i64 %index99, 8
  %234 = or i64 %index99, 12
  %235 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, i64 %index99, i32 2
  %236 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, i64 %232, i32 2
  %237 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, i64 %233, i32 2
  %238 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, i64 %234, i32 2
  %239 = bitcast i32* %235 to <16 x i32>*
  %240 = bitcast i32* %236 to <16 x i32>*
  %241 = bitcast i32* %237 to <16 x i32>*
  %242 = bitcast i32* %238 to <16 x i32>*
  %wide.vec = load <16 x i32>, <16 x i32>* %239, align 4, !tbaa !182
  %wide.vec111 = load <16 x i32>, <16 x i32>* %240, align 4, !tbaa !182
  %wide.vec112 = load <16 x i32>, <16 x i32>* %241, align 4, !tbaa !182
  %wide.vec113 = load <16 x i32>, <16 x i32>* %242, align 4, !tbaa !182
  %strided.vec = shufflevector <16 x i32> %wide.vec, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec114 = shufflevector <16 x i32> %wide.vec111, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec115 = shufflevector <16 x i32> %wide.vec112, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec116 = shufflevector <16 x i32> %wide.vec113, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %243 = icmp sgt <4 x i32> %strided.vec, zeroinitializer
  %244 = icmp sgt <4 x i32> %strided.vec114, zeroinitializer
  %245 = icmp sgt <4 x i32> %strided.vec115, zeroinitializer
  %246 = icmp sgt <4 x i32> %strided.vec116, zeroinitializer
  %247 = zext <4 x i32> %strided.vec to <4 x i64>
  %248 = zext <4 x i32> %strided.vec114 to <4 x i64>
  %249 = zext <4 x i32> %strided.vec115 to <4 x i64>
  %250 = zext <4 x i32> %strided.vec116 to <4 x i64>
  %251 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, <4 x i64> %vec.ind103, i32 1
  %252 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, <4 x i64> %step.add, i32 1
  %253 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, <4 x i64> %step.add104, i32 1
  %254 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, <4 x i64> %step.add105, i32 1
  %wide.masked.gather = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %251, i32 4, <4 x i1> %243, <4 x i32> undef), !tbaa !178
  %wide.masked.gather117 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %252, i32 4, <4 x i1> %244, <4 x i32> undef), !tbaa !178
  %wide.masked.gather118 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %253, i32 4, <4 x i1> %245, <4 x i32> undef), !tbaa !178
  %wide.masked.gather119 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %254, i32 4, <4 x i1> %246, <4 x i32> undef), !tbaa !178
  %255 = add nsw <4 x i32> %wide.masked.gather, <i32 -1, i32 -1, i32 -1, i32 -1>
  %256 = add nsw <4 x i32> %wide.masked.gather117, <i32 -1, i32 -1, i32 -1, i32 -1>
  %257 = add nsw <4 x i32> %wide.masked.gather118, <i32 -1, i32 -1, i32 -1, i32 -1>
  %258 = add nsw <4 x i32> %wide.masked.gather119, <i32 -1, i32 -1, i32 -1, i32 -1>
  %259 = sext <4 x i32> %255 to <4 x i64>
  %260 = sext <4 x i32> %256 to <4 x i64>
  %261 = sext <4 x i32> %257 to <4 x i64>
  %262 = sext <4 x i32> %258 to <4 x i64>
  %263 = mul nsw <4 x i64> %259, %247
  %264 = mul nsw <4 x i64> %260, %248
  %265 = mul nsw <4 x i64> %261, %249
  %266 = mul nsw <4 x i64> %262, %250
  %267 = select <4 x i1> %243, <4 x i64> %263, <4 x i64> zeroinitializer
  %predphi = add <4 x i64> %vec.phi, %267
  %268 = select <4 x i1> %244, <4 x i64> %264, <4 x i64> zeroinitializer
  %predphi120 = add <4 x i64> %vec.phi108, %268
  %269 = select <4 x i1> %245, <4 x i64> %265, <4 x i64> zeroinitializer
  %predphi121 = add <4 x i64> %vec.phi109, %269
  %270 = select <4 x i1> %246, <4 x i64> %266, <4 x i64> zeroinitializer
  %predphi122 = add <4 x i64> %vec.phi110, %270
  %index.next100 = add i64 %index99, 16
  %vec.ind.next107 = add <4 x i64> %vec.ind103, <i64 16, i64 16, i64 16, i64 16>
  %271 = icmp eq i64 %index.next100, %n.vec98
  br i1 %271, label %middle.block92, label %vector.body94, !llvm.loop !216

middle.block92:                                   ; preds = %vector.body94
  %bin.rdx = add <4 x i64> %predphi120, %predphi
  %bin.rdx123 = add <4 x i64> %predphi121, %bin.rdx
  %bin.rdx124 = add <4 x i64> %predphi122, %bin.rdx123
  %272 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %bin.rdx124)
  br label %for.body.i.i.preheader

for.body.i.i.preheader:                           ; preds = %middle.block92, %for.body.lr.ph.i.i
  %indvars.iv.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %n.vec98, %middle.block92 ]
  %index.021.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %272, %middle.block92 ]
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.preheader, %if.end.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %if.end.i.i ], [ %indvars.iv.i.i.ph, %for.body.i.i.preheader ]
  %index.021.i.i = phi i64 [ %index.1.i.i, %if.end.i.i ], [ %index.021.i.i.ph, %for.body.i.i.preheader ]
  %stride2.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, i64 %indvars.iv.i.i, i32 2
  %273 = load i32, i32* %stride2.i.i, align 4, !tbaa !182
  %cmp3.i.i = icmp sgt i32 %273, 0
  br i1 %cmp3.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  %conv18.i.i = zext i32 %273 to i64
  %extent.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, i64 %indvars.iv.i.i, i32 1
  %274 = load i32, i32* %extent.i.i, align 4, !tbaa !178
  %sub.i.i = add nsw i32 %274, -1
  %conv7.i.i = sext i32 %sub.i.i to i64
  %mul.i.i = mul nsw i64 %conv7.i.i, %conv18.i.i
  %add.i.i693 = add nsw i64 %mul.i.i, %index.021.i.i
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %for.body.i.i
  %index.1.i.i = phi i64 [ %add.i.i693, %if.then.i.i ], [ %index.021.i.i, %for.body.i.i ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %for.body.i13.i.preheader, label %for.body.i.i, !llvm.loop !217

for.body.i13.i.preheader:                         ; preds = %if.end.i.i
  %min.iters.check128 = icmp ult i32 %228, 17
  br i1 %min.iters.check128, label %for.body.i13.i.preheader211, label %vector.ph129

vector.ph129:                                     ; preds = %for.body.i13.i.preheader
  %n.mod.vf130 = and i64 %wide.trip.count.i.i, 15
  %275 = icmp eq i64 %n.mod.vf130, 0
  %276 = select i1 %275, i64 16, i64 %n.mod.vf130
  %n.vec131 = sub nsw i64 %wide.trip.count.i.i, %276
  br label %vector.body127

vector.body127:                                   ; preds = %vector.body127, %vector.ph129
  %index132 = phi i64 [ 0, %vector.ph129 ], [ %index.next133, %vector.body127 ]
  %vec.ind136 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %vector.ph129 ], [ %vec.ind.next141, %vector.body127 ]
  %vec.phi142 = phi <4 x i64> [ zeroinitializer, %vector.ph129 ], [ %predphi158, %vector.body127 ]
  %vec.phi143 = phi <4 x i64> [ zeroinitializer, %vector.ph129 ], [ %predphi159, %vector.body127 ]
  %vec.phi144 = phi <4 x i64> [ zeroinitializer, %vector.ph129 ], [ %predphi160, %vector.body127 ]
  %vec.phi145 = phi <4 x i64> [ zeroinitializer, %vector.ph129 ], [ %predphi161, %vector.body127 ]
  %step.add137 = add <4 x i64> %vec.ind136, <i64 4, i64 4, i64 4, i64 4>
  %step.add138 = add <4 x i64> %vec.ind136, <i64 8, i64 8, i64 8, i64 8>
  %step.add139 = add <4 x i64> %vec.ind136, <i64 12, i64 12, i64 12, i64 12>
  %277 = or i64 %index132, 4
  %278 = or i64 %index132, 8
  %279 = or i64 %index132, 12
  %280 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, i64 %index132, i32 2
  %281 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, i64 %277, i32 2
  %282 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, i64 %278, i32 2
  %283 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, i64 %279, i32 2
  %284 = bitcast i32* %280 to <16 x i32>*
  %285 = bitcast i32* %281 to <16 x i32>*
  %286 = bitcast i32* %282 to <16 x i32>*
  %287 = bitcast i32* %283 to <16 x i32>*
  %wide.vec146 = load <16 x i32>, <16 x i32>* %284, align 4, !tbaa !182
  %wide.vec147 = load <16 x i32>, <16 x i32>* %285, align 4, !tbaa !182
  %wide.vec148 = load <16 x i32>, <16 x i32>* %286, align 4, !tbaa !182
  %wide.vec149 = load <16 x i32>, <16 x i32>* %287, align 4, !tbaa !182
  %strided.vec150 = shufflevector <16 x i32> %wide.vec146, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec151 = shufflevector <16 x i32> %wide.vec147, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec152 = shufflevector <16 x i32> %wide.vec148, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec153 = shufflevector <16 x i32> %wide.vec149, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %288 = icmp slt <4 x i32> %strided.vec150, zeroinitializer
  %289 = icmp slt <4 x i32> %strided.vec151, zeroinitializer
  %290 = icmp slt <4 x i32> %strided.vec152, zeroinitializer
  %291 = icmp slt <4 x i32> %strided.vec153, zeroinitializer
  %292 = sext <4 x i32> %strided.vec150 to <4 x i64>
  %293 = sext <4 x i32> %strided.vec151 to <4 x i64>
  %294 = sext <4 x i32> %strided.vec152 to <4 x i64>
  %295 = sext <4 x i32> %strided.vec153 to <4 x i64>
  %296 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, <4 x i64> %vec.ind136, i32 1
  %297 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, <4 x i64> %step.add137, i32 1
  %298 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, <4 x i64> %step.add138, i32 1
  %299 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, <4 x i64> %step.add139, i32 1
  %wide.masked.gather154 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %296, i32 4, <4 x i1> %288, <4 x i32> undef), !tbaa !178
  %wide.masked.gather155 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %297, i32 4, <4 x i1> %289, <4 x i32> undef), !tbaa !178
  %wide.masked.gather156 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %298, i32 4, <4 x i1> %290, <4 x i32> undef), !tbaa !178
  %wide.masked.gather157 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %299, i32 4, <4 x i1> %291, <4 x i32> undef), !tbaa !178
  %300 = add nsw <4 x i32> %wide.masked.gather154, <i32 -1, i32 -1, i32 -1, i32 -1>
  %301 = add nsw <4 x i32> %wide.masked.gather155, <i32 -1, i32 -1, i32 -1, i32 -1>
  %302 = add nsw <4 x i32> %wide.masked.gather156, <i32 -1, i32 -1, i32 -1, i32 -1>
  %303 = add nsw <4 x i32> %wide.masked.gather157, <i32 -1, i32 -1, i32 -1, i32 -1>
  %304 = sext <4 x i32> %300 to <4 x i64>
  %305 = sext <4 x i32> %301 to <4 x i64>
  %306 = sext <4 x i32> %302 to <4 x i64>
  %307 = sext <4 x i32> %303 to <4 x i64>
  %308 = mul nsw <4 x i64> %304, %292
  %309 = mul nsw <4 x i64> %305, %293
  %310 = mul nsw <4 x i64> %306, %294
  %311 = mul nsw <4 x i64> %307, %295
  %312 = select <4 x i1> %288, <4 x i64> %308, <4 x i64> zeroinitializer
  %predphi158 = add <4 x i64> %vec.phi142, %312
  %313 = select <4 x i1> %289, <4 x i64> %309, <4 x i64> zeroinitializer
  %predphi159 = add <4 x i64> %vec.phi143, %313
  %314 = select <4 x i1> %290, <4 x i64> %310, <4 x i64> zeroinitializer
  %predphi160 = add <4 x i64> %vec.phi144, %314
  %315 = select <4 x i1> %291, <4 x i64> %311, <4 x i64> zeroinitializer
  %predphi161 = add <4 x i64> %vec.phi145, %315
  %index.next133 = add i64 %index132, 16
  %vec.ind.next141 = add <4 x i64> %vec.ind136, <i64 16, i64 16, i64 16, i64 16>
  %316 = icmp eq i64 %index.next133, %n.vec131
  br i1 %316, label %middle.block125, label %vector.body127, !llvm.loop !218

middle.block125:                                  ; preds = %vector.body127
  %bin.rdx162 = add <4 x i64> %predphi159, %predphi158
  %bin.rdx163 = add <4 x i64> %predphi160, %bin.rdx162
  %bin.rdx164 = add <4 x i64> %predphi161, %bin.rdx163
  %317 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %bin.rdx164)
  br label %for.body.i13.i.preheader211

for.body.i13.i.preheader211:                      ; preds = %middle.block125, %for.body.i13.i.preheader
  %indvars.iv.i10.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %n.vec131, %middle.block125 ]
  %index.018.i.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %317, %middle.block125 ]
  br label %for.body.i13.i

for.body.i13.i:                                   ; preds = %for.body.i13.i.preheader211, %if.end.i24.i
  %indvars.iv.i10.i = phi i64 [ %indvars.iv.next.i22.i, %if.end.i24.i ], [ %indvars.iv.i10.i.ph, %for.body.i13.i.preheader211 ]
  %index.018.i.i = phi i64 [ %index.1.i21.i, %if.end.i24.i ], [ %index.018.i.i.ph, %for.body.i13.i.preheader211 ]
  %stride2.i11.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, i64 %indvars.iv.i10.i, i32 2
  %318 = load i32, i32* %stride2.i11.i, align 4, !tbaa !182
  %cmp3.i12.i = icmp slt i32 %318, 0
  br i1 %cmp3.i12.i, label %if.then.i20.i, label %if.end.i24.i

if.then.i20.i:                                    ; preds = %for.body.i13.i
  %conv.i14.i = sext i32 %318 to i64
  %extent.i15.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, i64 %indvars.iv.i10.i, i32 1
  %319 = load i32, i32* %extent.i15.i, align 4, !tbaa !178
  %sub.i16.i = add nsw i32 %319, -1
  %conv7.i17.i = sext i32 %sub.i16.i to i64
  %mul.i18.i = mul nsw i64 %conv7.i17.i, %conv.i14.i
  %add.i19.i = add nsw i64 %mul.i18.i, %index.018.i.i
  br label %if.end.i24.i

if.end.i24.i:                                     ; preds = %if.then.i20.i, %for.body.i13.i
  %index.1.i21.i = phi i64 [ %add.i19.i, %if.then.i20.i ], [ %index.018.i.i, %for.body.i13.i ]
  %indvars.iv.next.i22.i = add nuw nsw i64 %indvars.iv.i10.i, 1
  %exitcond.not.i23.i = icmp eq i64 %indvars.iv.next.i22.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i23.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i13.i, !llvm.loop !219

_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit: ; preds = %if.end.i24.i
  %add8.i.i = add nsw i64 %index.1.i.i, 1
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

_ZNK15halide_buffer_t13size_in_bytesEv.exit:      ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705
  %add8.i27.i = phi i64 [ 1, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705 ], [ %add8.i.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %index.0.lcssa.i9.i = phi i64 [ 0, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705 ], [ %index.1.i21.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %sub.i694 = sub nsw i64 %add8.i27.i, %index.0.lcssa.i9.i
  %320 = load i8, i8* %bits.i, align 1, !tbaa !136
  %conv.i.i696 = zext i8 %320 to i64
  %add.i4.i = add nuw nsw i64 %conv.i.i696, 7
  %div.i.i697 = lshr i64 %add.i4.i, 3
  %mul.i698 = mul i64 %div.i.i697, %sub.i694
  %321 = trunc i64 %mul.i698 to i32
  %322 = add i32 %321, 7
  %323 = and i32 %322, 7
  %conv204 = xor i32 %323, 7
  %conv205 = zext i32 %conv204 to i64
  %add206 = add i64 %mul.i698, %conv205
  %tobool207.not = icmp ult i64 %add206, 4294967296
  br i1 %tobool207.not, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit687, label %cleanup278.thread

cleanup278.thread:                                ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6.40, i64 0, i64 0)) #15
  call void @llvm.lifetime.end.p0i8(i64 129, i8* nonnull %227) #10
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %62) #10
  br label %cleanup433

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit687: ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit
  %324 = icmp sgt i32 %228, 2
  %spec.store.select = select i1 %324, i32 %228, i32 2
  %325 = bitcast [8 x i32]* %tags to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %325) #10
  %arrayinit.begin = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 0
  store i32 14, i32* %arrayinit.begin, align 4, !tbaa !73
  %arrayinit.element = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 1
  %add214 = shl i32 %spec.store.select, 2
  %and215 = add i32 %add214, 4
  %mul216 = and i32 %and215, -8
  %add217 = add i32 %and, 40
  %add218 = add i32 %add217, %mul216
  %add220 = add i32 %add218, %321
  %add221 = add i32 %add220, %conv204
  store i32 %add221, i32* %arrayinit.element, align 4, !tbaa !73
  %arrayinit.element222 = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 2
  store i32 6, i32* %arrayinit.element222, align 4, !tbaa !73
  %arrayinit.element223 = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 3
  store i32 8, i32* %arrayinit.element223, align 4, !tbaa !73
  %arrayinit.element224 = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 4
  %idxprom225 = sext i32 %type_code to i64
  %arrayidx226 = getelementptr inbounds [10 x i8], [10 x i8]* @_ZN6Halide7Runtime8Internal31pixel_type_to_matlab_class_codeE, i64 0, i64 %idxprom225
  %326 = load i8, i8* %arrayidx226, align 1, !tbaa !14
  %conv227 = zext i8 %326 to i32
  store i32 %conv227, i32* %arrayinit.element224, align 4, !tbaa !73
  %arrayinit.element228 = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 5
  store i32 1, i32* %arrayinit.element228, align 4, !tbaa !73
  %arrayinit.element229 = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 6
  store i32 5, i32* %arrayinit.element229, align 4, !tbaa !73
  %arrayinit.element230 = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 7
  store i32 %add214, i32* %arrayinit.element230, align 4, !tbaa !73
  %call.i683 = call i64 @fwrite(i8* nonnull %325, i64 32, i64 1, i8* nonnull %call.i598) #15
  %cmp.i684.not = icmp eq i64 %call.i683, 0
  br i1 %cmp.i684.not, label %cleanup278, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit676

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit676: ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit687
  %327 = bitcast [4 x i32]* %extents to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %327) #10
  %arrayinit.begin235 = getelementptr inbounds [4 x i32], [4 x i32]* %extents, i64 0, i64 0
  %328 = load i32, i32* %extent.i, align 4, !tbaa !178
  store i32 %328, i32* %arrayinit.begin235, align 4, !tbaa !73
  %arrayinit.element238 = getelementptr inbounds [4 x i32], [4 x i32]* %extents, i64 0, i64 1
  %329 = load i32, i32* %extent.i.1, align 4, !tbaa !178
  store i32 %329, i32* %arrayinit.element238, align 4, !tbaa !73
  %arrayinit.element241 = getelementptr inbounds [4 x i32], [4 x i32]* %extents, i64 0, i64 2
  %330 = load i32, i32* %extent.i.2, align 4, !tbaa !178
  store i32 %330, i32* %arrayinit.element241, align 4, !tbaa !73
  %arrayinit.element244 = getelementptr inbounds [4 x i32], [4 x i32]* %extents, i64 0, i64 3
  %331 = load i32, i32* %extent.i.3, align 4, !tbaa !178
  store i32 %331, i32* %arrayinit.element244, align 4, !tbaa !73
  %conv248 = sext i32 %mul216 to i64
  %call.i672 = call i64 @fwrite(i8* nonnull %327, i64 %conv248, i64 1, i8* nonnull %call.i598) #15
  %cmp.i673.not = icmp eq i64 %call.i672, 0
  br i1 %cmp.i673.not, label %cleanup274, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit664

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit664: ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit676
  %332 = bitcast [2 x i32]* %name_header to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %332) #10
  %arrayinit.begin252 = getelementptr inbounds [2 x i32], [2 x i32]* %name_header, i64 0, i64 0
  store i32 1, i32* %arrayinit.begin252, align 4, !tbaa !73
  %arrayinit.element253 = getelementptr inbounds [2 x i32], [2 x i32]* %name_header, i64 0, i64 1
  store i32 %conv184, i32* %arrayinit.element253, align 4, !tbaa !73
  %call.i660 = call i64 @fwrite(i8* nonnull %332, i64 8, i64 1, i8* nonnull %call.i598) #15
  %cmp.i661.not = icmp eq i64 %call.i660, 0
  br i1 %cmp.i661.not, label %cleanup273, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit652

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit652: ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit664
  %conv258 = zext i32 %and to i64
  %call.i648 = call i64 @fwrite(i8* nonnull %62, i64 %conv258, i64 1, i8* nonnull %call.i598) #15
  %cmp.i649.not = icmp eq i64 %call.i648, 0
  br i1 %cmp.i649.not, label %cleanup273, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit642

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit642: ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit652
  %333 = bitcast [2 x i32]* %payload_header to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %333) #10
  %arrayinit.begin262 = getelementptr inbounds [2 x i32], [2 x i32]* %payload_header, i64 0, i64 0
  %arrayidx264 = getelementptr inbounds [10 x i8], [10 x i8]* @_ZN6Halide7Runtime8Internal30pixel_type_to_matlab_type_codeE, i64 0, i64 %idxprom225
  %334 = load i8, i8* %arrayidx264, align 1, !tbaa !14
  %conv265 = zext i8 %334 to i32
  store i32 %conv265, i32* %arrayinit.begin262, align 4, !tbaa !73
  %arrayinit.element266 = getelementptr inbounds [2 x i32], [2 x i32]* %payload_header, i64 0, i64 1
  store i32 %321, i32* %arrayinit.element266, align 4, !tbaa !73
  %call.i638 = call i64 @fwrite(i8* nonnull %333, i64 8, i64 1, i8* nonnull %call.i598) #15
  %cmp.i639.not = icmp eq i64 %call.i638, 0
  %cleanup.dest.slot.5 = zext i1 %cmp.i639.not to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %333) #10
  br label %cleanup273

cleanup273:                                       ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit642, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit652, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit664
  %cleanup.dest.slot.6 = phi i32 [ %cleanup.dest.slot.5, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit642 ], [ 1, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit664 ], [ 1, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit652 ]
  %retval.6 = phi i32 [ -11, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit642 ], [ -9, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit664 ], [ -10, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit652 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %332) #10
  br label %cleanup274

cleanup274:                                       ; preds = %cleanup273, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit676
  %cleanup.dest.slot.7 = phi i32 [ %cleanup.dest.slot.6, %cleanup273 ], [ 1, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit676 ]
  %retval.7 = phi i32 [ %retval.6, %cleanup273 ], [ -8, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit676 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %327) #10
  br label %cleanup278

cleanup278:                                       ; preds = %cleanup274, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit687
  %cleanup.dest.slot.8 = phi i32 [ %cleanup.dest.slot.7, %cleanup274 ], [ 1, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit687 ]
  %retval.8 = phi i32 [ %retval.7, %cleanup274 ], [ -7, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit687 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %325) #10
  call void @llvm.lifetime.end.p0i8(i64 129, i8* nonnull %227) #10
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %62) #10
  %cond442 = icmp eq i32 %cleanup.dest.slot.8, 0
  br i1 %cond442, label %if.end311, label %cleanup433

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit631: ; preds = %if.else164
  %335 = bitcast [5 x i32]* %header289 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %335) #10
  %arrayinit.begin290 = getelementptr inbounds [5 x i32], [5 x i32]* %header289, i64 0, i64 0
  %336 = load i32, i32* %extent.i, align 4, !tbaa !178
  store i32 %336, i32* %arrayinit.begin290, align 4, !tbaa !73
  %arrayinit.element293 = getelementptr inbounds [5 x i32], [5 x i32]* %header289, i64 0, i64 1
  %337 = load i32, i32* %extent.i.1, align 4, !tbaa !178
  store i32 %337, i32* %arrayinit.element293, align 4, !tbaa !73
  %arrayinit.element296 = getelementptr inbounds [5 x i32], [5 x i32]* %header289, i64 0, i64 2
  %338 = load i32, i32* %extent.i.2, align 4, !tbaa !178
  store i32 %338, i32* %arrayinit.element296, align 4, !tbaa !73
  %arrayinit.element299 = getelementptr inbounds [5 x i32], [5 x i32]* %header289, i64 0, i64 3
  %339 = load i32, i32* %extent.i.3, align 4, !tbaa !178
  store i32 %339, i32* %arrayinit.element299, align 4, !tbaa !73
  %arrayinit.element302 = getelementptr inbounds [5 x i32], [5 x i32]* %header289, i64 0, i64 4
  store i32 %type_code, i32* %arrayinit.element302, align 4, !tbaa !73
  %call.i627 = call i64 @fwrite(i8* nonnull %335, i64 20, i64 1, i8* nonnull %call.i598) #15
  %cmp.i628.not = icmp eq i64 %call.i627, 0
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %335) #10
  br i1 %cmp.i628.not, label %cleanup433, label %if.end311

if.end311:                                        ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit631, %cleanup278, %cleanup154.thread
  %final_padding_bytes.0 = phi i32 [ %conv204, %cleanup278 ], [ 0, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit631 ], [ 0, %cleanup154.thread ]
  %340 = getelementptr inbounds [4096 x i8], [4096 x i8]* %temp, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %340) #10
  %div = udiv i32 4096, %div.i
  %341 = load i32, i32* %extent.i.3, align 4, !tbaa !178
  %cmp320856 = icmp sgt i32 %341, 0
  br i1 %cmp320856, label %for.body322.lr.ph, label %if.end412

for.body322.lr.ph:                                ; preds = %if.end311
  %342 = load i32, i32* %min.i.3, align 4, !tbaa !181
  %343 = bitcast [4 x i32]* %idx to i8*
  %arrayinit.begin357 = getelementptr inbounds [4 x i32], [4 x i32]* %idx, i64 0, i64 0
  %arrayinit.element358 = getelementptr inbounds [4 x i32], [4 x i32]* %idx, i64 0, i64 1
  %arrayinit.element359 = getelementptr inbounds [4 x i32], [4 x i32]* %idx, i64 0, i64 2
  %arrayinit.element360 = getelementptr inbounds [4 x i32], [4 x i32]* %idx, i64 0, i64 3
  %dim.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %conv368 = zext i32 %div.i to i64
  %mul373 = mul nuw nsw i32 %div, %div.i
  %conv374 = zext i32 %mul373 to i64
  %.pre891 = load i32, i32* %min.i.2, align 4, !tbaa !181
  %.pre892 = load i32, i32* %extent.i.2, align 4, !tbaa !178
  br label %for.body322

for.body322:                                      ; preds = %for.inc399, %for.body322.lr.ph
  %344 = phi i32 [ %342, %for.body322.lr.ph ], [ %430, %for.inc399 ]
  %345 = phi i32 [ %341, %for.body322.lr.ph ], [ %431, %for.inc399 ]
  %346 = phi i32 [ %.pre891, %for.body322.lr.ph ], [ %432, %for.inc399 ]
  %347 = phi i32 [ %.pre892, %for.body322.lr.ph ], [ %433, %for.inc399 ]
  %348 = phi i32 [ %.pre892, %for.body322.lr.ph ], [ %434, %for.inc399 ]
  %349 = phi i32 [ %.pre891, %for.body322.lr.ph ], [ %435, %for.inc399 ]
  %dim3.0858 = phi i32 [ %342, %for.body322.lr.ph ], [ %inc400, %for.inc399 ]
  %counter.0857 = phi i32 [ 0, %for.body322.lr.ph ], [ %counter.1.lcssa, %for.inc399 ]
  %cmp331848 = icmp sgt i32 %348, 0
  br i1 %cmp331848, label %for.body333.preheader, label %for.inc399

for.body333.preheader:                            ; preds = %for.body322
  %.pre893 = load i32, i32* %min.i.1, align 4, !tbaa !181
  %.pre894 = load i32, i32* %extent.i.1, align 4, !tbaa !178
  br label %for.body333

for.body333:                                      ; preds = %for.inc394, %for.body333.preheader
  %350 = phi i32 [ %424, %for.inc394 ], [ %.pre893, %for.body333.preheader ]
  %351 = phi i32 [ %425, %for.inc394 ], [ %.pre894, %for.body333.preheader ]
  %352 = phi i32 [ %426, %for.inc394 ], [ %346, %for.body333.preheader ]
  %353 = phi i32 [ %427, %for.inc394 ], [ %347, %for.body333.preheader ]
  %354 = phi i32 [ %428, %for.inc394 ], [ %.pre894, %for.body333.preheader ]
  %355 = phi i32 [ %429, %for.inc394 ], [ %.pre893, %for.body333.preheader ]
  %dim2.0850 = phi i32 [ %inc395, %for.inc394 ], [ %349, %for.body333.preheader ]
  %counter.1849 = phi i32 [ %counter.2.lcssa, %for.inc394 ], [ %counter.0857, %for.body333.preheader ]
  %cmp342839 = icmp sgt i32 %354, 0
  br i1 %cmp342839, label %for.body344.preheader, label %for.inc394

for.body344.preheader:                            ; preds = %for.body333
  %.pre = load i32, i32* %extent.i, align 4, !tbaa !178
  br label %for.body344

for.body344:                                      ; preds = %for.body344.preheader, %for.inc389
  %356 = phi i32 [ %421, %for.inc389 ], [ %350, %for.body344.preheader ]
  %357 = phi i32 [ %422, %for.inc389 ], [ %351, %for.body344.preheader ]
  %358 = phi i32 [ %423, %for.inc389 ], [ %.pre, %for.body344.preheader ]
  %dim1.0841 = phi i32 [ %inc390, %for.inc389 ], [ %355, %for.body344.preheader ]
  %counter.2840 = phi i32 [ %counter.6797, %for.inc389 ], [ %counter.1849, %for.body344.preheader ]
  %cmp353834 = icmp sgt i32 %358, 0
  br i1 %cmp353834, label %for.body355.preheader, label %for.inc389

for.body355.preheader:                            ; preds = %for.body344
  %359 = load i32, i32* %min.i, align 4, !tbaa !181
  br label %for.body355

for.body355:                                      ; preds = %for.inc384, %for.body355.preheader
  %dim0.0836 = phi i32 [ %inc385, %for.inc384 ], [ %359, %for.body355.preheader ]
  %counter.3835 = phi i32 [ %counter.4, %for.inc384 ], [ %counter.2840, %for.body355.preheader ]
  %inc356 = add nsw i32 %counter.3835, 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %343) #10
  store i32 %dim0.0836, i32* %arrayinit.begin357, align 4, !tbaa !73
  store i32 %dim1.0841, i32* %arrayinit.element358, align 4, !tbaa !73
  store i32 %dim2.0850, i32* %arrayinit.element359, align 4, !tbaa !73
  store i32 %dim3.0858, i32* %arrayinit.element360, align 4, !tbaa !73
  %360 = load i32, i32* %dimensions, align 4, !tbaa !175
  %cmp17.i = icmp sgt i32 %360, 0
  br i1 %cmp17.i, label %for.body.lr.ph.i, label %_ZNK15halide_buffer_t10address_ofEPKi.exit

for.body.lr.ph.i:                                 ; preds = %for.body355
  %361 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i, align 8, !tbaa !176
  %wide.trip.count.i = zext i32 %360 to i64
  %stride.i621920 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %361, i64 0, i32 2
  %362 = load i32, i32* %stride.i621920, align 4, !tbaa !182
  %conv.i622921 = sext i32 %362 to i64
  %min.i623922 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %361, i64 0, i32 0
  %363 = load i32, i32* %min.i623922, align 4, !tbaa !181
  %sub.i923 = sub nsw i32 %dim0.0836, %363
  %conv7.i924 = sext i32 %sub.i923 to i64
  %mul.i925 = mul nsw i64 %conv7.i924, %conv.i622921
  %exitcond.not.i927 = icmp eq i32 %360, 1
  br i1 %exitcond.not.i927, label %_ZNK15halide_buffer_t10address_ofEPKi.exit, label %for.body.i.for.body.i_crit_edge.preheader, !llvm.loop !220

for.body.i.for.body.i_crit_edge.preheader:        ; preds = %for.body.lr.ph.i
  %stride.i62126 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %361, i64 1, i32 2
  %364 = load i32, i32* %stride.i62126, align 4, !tbaa !182
  %conv.i62227 = sext i32 %364 to i64
  %min.i62328 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %361, i64 1, i32 0
  %365 = load i32, i32* %min.i62328, align 4, !tbaa !181
  %sub.i29 = sub nsw i32 %dim1.0841, %365
  %conv7.i30 = sext i32 %sub.i29 to i64
  %mul.i31 = mul nsw i64 %conv7.i30, %conv.i62227
  %add.i62432 = add nsw i64 %mul.i31, %mul.i925
  %exitcond.not.i33 = icmp eq i32 %360, 2
  br i1 %exitcond.not.i33, label %_ZNK15halide_buffer_t10address_ofEPKi.exit, label %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.lr.ph, !llvm.loop !220

for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.lr.ph: ; preds = %for.body.i.for.body.i_crit_edge.preheader
  %366 = add nsw i64 %wide.trip.count.i, -2
  %min.iters.check169 = icmp ult i64 %366, 17
  br i1 %min.iters.check169, label %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.preheader, label %vector.ph170

vector.ph170:                                     ; preds = %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.lr.ph
  %n.mod.vf171 = and i64 %366, 15
  %367 = icmp eq i64 %n.mod.vf171, 0
  %368 = select i1 %367, i64 16, i64 %n.mod.vf171
  %n.vec172 = sub nsw i64 %366, %368
  %ind.end176 = add nsw i64 %n.vec172, 2
  %369 = insertelement <4 x i64> <i64 poison, i64 0, i64 0, i64 0>, i64 %add.i62432, i32 0
  br label %vector.body168

vector.body168:                                   ; preds = %vector.body168, %vector.ph170
  %index173 = phi i64 [ 0, %vector.ph170 ], [ %index.next174, %vector.body168 ]
  %vec.phi179 = phi <4 x i64> [ %369, %vector.ph170 ], [ %409, %vector.body168 ]
  %vec.phi180 = phi <4 x i64> [ zeroinitializer, %vector.ph170 ], [ %410, %vector.body168 ]
  %vec.phi181 = phi <4 x i64> [ zeroinitializer, %vector.ph170 ], [ %411, %vector.body168 ]
  %vec.phi182 = phi <4 x i64> [ zeroinitializer, %vector.ph170 ], [ %412, %vector.body168 ]
  %offset.idx178 = or i64 %index173, 2
  %370 = or i64 %index173, 6
  %371 = or i64 %index173, 10
  %372 = or i64 %index173, 14
  %373 = getelementptr inbounds [4 x i32], [4 x i32]* %idx, i64 0, i64 %offset.idx178
  %374 = bitcast i32* %373 to <4 x i32>*
  %wide.load183 = load <4 x i32>, <4 x i32>* %374, align 4, !tbaa !73
  %375 = getelementptr inbounds i32, i32* %373, i64 4
  %376 = bitcast i32* %375 to <4 x i32>*
  %wide.load184 = load <4 x i32>, <4 x i32>* %376, align 4, !tbaa !73
  %377 = getelementptr inbounds i32, i32* %373, i64 8
  %378 = bitcast i32* %377 to <4 x i32>*
  %wide.load185 = load <4 x i32>, <4 x i32>* %378, align 4, !tbaa !73
  %379 = getelementptr inbounds i32, i32* %373, i64 12
  %380 = bitcast i32* %379 to <4 x i32>*
  %wide.load186 = load <4 x i32>, <4 x i32>* %380, align 4, !tbaa !73
  %381 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %361, i64 %offset.idx178, i32 2
  %382 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %361, i64 %370, i32 2
  %383 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %361, i64 %371, i32 2
  %384 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %361, i64 %372, i32 2
  %385 = getelementptr inbounds i32, i32* %381, i64 -2
  %386 = bitcast i32* %385 to <16 x i32>*
  %387 = getelementptr inbounds i32, i32* %382, i64 -2
  %388 = bitcast i32* %387 to <16 x i32>*
  %389 = getelementptr inbounds i32, i32* %383, i64 -2
  %390 = bitcast i32* %389 to <16 x i32>*
  %391 = getelementptr inbounds i32, i32* %384, i64 -2
  %392 = bitcast i32* %391 to <16 x i32>*
  %wide.vec187 = load <16 x i32>, <16 x i32>* %386, align 4, !tbaa !73
  %wide.vec188 = load <16 x i32>, <16 x i32>* %388, align 4, !tbaa !73
  %wide.vec189 = load <16 x i32>, <16 x i32>* %390, align 4, !tbaa !73
  %wide.vec190 = load <16 x i32>, <16 x i32>* %392, align 4, !tbaa !73
  %strided.vec191 = shufflevector <16 x i32> %wide.vec187, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec192 = shufflevector <16 x i32> %wide.vec188, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec193 = shufflevector <16 x i32> %wide.vec189, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec194 = shufflevector <16 x i32> %wide.vec190, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec195 = shufflevector <16 x i32> %wide.vec187, <16 x i32> poison, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %strided.vec196 = shufflevector <16 x i32> %wide.vec188, <16 x i32> poison, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %strided.vec197 = shufflevector <16 x i32> %wide.vec189, <16 x i32> poison, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %strided.vec198 = shufflevector <16 x i32> %wide.vec190, <16 x i32> poison, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %393 = sext <4 x i32> %strided.vec195 to <4 x i64>
  %394 = sext <4 x i32> %strided.vec196 to <4 x i64>
  %395 = sext <4 x i32> %strided.vec197 to <4 x i64>
  %396 = sext <4 x i32> %strided.vec198 to <4 x i64>
  %397 = sub nsw <4 x i32> %wide.load183, %strided.vec191
  %398 = sub nsw <4 x i32> %wide.load184, %strided.vec192
  %399 = sub nsw <4 x i32> %wide.load185, %strided.vec193
  %400 = sub nsw <4 x i32> %wide.load186, %strided.vec194
  %401 = sext <4 x i32> %397 to <4 x i64>
  %402 = sext <4 x i32> %398 to <4 x i64>
  %403 = sext <4 x i32> %399 to <4 x i64>
  %404 = sext <4 x i32> %400 to <4 x i64>
  %405 = mul nsw <4 x i64> %401, %393
  %406 = mul nsw <4 x i64> %402, %394
  %407 = mul nsw <4 x i64> %403, %395
  %408 = mul nsw <4 x i64> %404, %396
  %409 = add <4 x i64> %405, %vec.phi179
  %410 = add <4 x i64> %406, %vec.phi180
  %411 = add <4 x i64> %407, %vec.phi181
  %412 = add <4 x i64> %408, %vec.phi182
  %index.next174 = add i64 %index173, 16
  %413 = icmp eq i64 %index.next174, %n.vec172
  br i1 %413, label %middle.block166, label %vector.body168, !llvm.loop !221

middle.block166:                                  ; preds = %vector.body168
  %bin.rdx199 = add <4 x i64> %410, %409
  %bin.rdx200 = add <4 x i64> %411, %bin.rdx199
  %bin.rdx201 = add <4 x i64> %412, %bin.rdx200
  %414 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %bin.rdx201)
  br label %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.preheader

for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.preheader: ; preds = %middle.block166, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.lr.ph
  %indvars.iv.next.i35.ph = phi i64 [ 2, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.lr.ph ], [ %ind.end176, %middle.block166 ]
  %add.i62434.ph = phi i64 [ %add.i62432, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.lr.ph ], [ %414, %middle.block166 ]
  br label %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge

for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge: ; preds = %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.preheader, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge
  %indvars.iv.next.i35 = phi i64 [ %indvars.iv.next.i, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge ], [ %indvars.iv.next.i35.ph, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.preheader ]
  %add.i62434 = phi i64 [ %add.i624, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge ], [ %add.i62434.ph, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.preheader ]
  %arrayidx3.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds [4 x i32], [4 x i32]* %idx, i64 0, i64 %indvars.iv.next.i35
  %.pre895.pre = load i32, i32* %arrayidx3.i.phi.trans.insert.phi.trans.insert, align 4, !tbaa !73
  %stride.i621 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %361, i64 %indvars.iv.next.i35, i32 2
  %415 = load i32, i32* %stride.i621, align 4, !tbaa !182
  %conv.i622 = sext i32 %415 to i64
  %min.i623 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %361, i64 %indvars.iv.next.i35, i32 0
  %416 = load i32, i32* %min.i623, align 4, !tbaa !181
  %sub.i = sub nsw i32 %.pre895.pre, %416
  %conv7.i = sext i32 %sub.i to i64
  %mul.i = mul nsw i64 %conv7.i, %conv.i622
  %add.i624 = add nsw i64 %mul.i, %add.i62434
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.next.i35, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %_ZNK15halide_buffer_t10address_ofEPKi.exit, label %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge, !llvm.loop !222

_ZNK15halide_buffer_t10address_ofEPKi.exit:       ; preds = %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge, %for.body.i.for.body.i_crit_edge.preheader, %for.body.lr.ph.i, %for.body355
  %index.0.lcssa.i = phi i64 [ 0, %for.body355 ], [ %mul.i925, %for.body.lr.ph.i ], [ %add.i62432, %for.body.i.for.body.i_crit_edge.preheader ], [ %add.i624, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge ]
  %417 = load i8*, i8** %host.i, align 8, !tbaa !172
  %418 = load i8, i8* %bits.i, align 1, !tbaa !136
  %conv.i.i = zext i8 %418 to i64
  %add.i.i = add nuw nsw i64 %conv.i.i, 7
  %div.i.i = lshr i64 %add.i.i, 3
  %mul9.i = mul nsw i64 %div.i.i, %index.0.lcssa.i
  %add.ptr.i = getelementptr inbounds i8, i8* %417, i64 %mul9.i
  %mul366 = mul nsw i32 %counter.3835, %div.i
  %idx.ext = sext i32 %mul366 to i64
  %add.ptr367 = getelementptr inbounds [4096 x i8], [4096 x i8]* %temp, i64 0, i64 %idx.ext
  %call369 = call i8* @memcpy(i8* nonnull %add.ptr367, i8* %add.ptr.i, i64 %conv368) #15
  %cmp370 = icmp eq i32 %inc356, %div
  br i1 %cmp370, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit619, label %for.inc384

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit619: ; preds = %_ZNK15halide_buffer_t10address_ofEPKi.exit
  %call.i615 = call i64 @fwrite(i8* nonnull %340, i64 %conv374, i64 1, i8* nonnull %call.i598) #15
  %cmp.i616.not = icmp eq i64 %call.i615, 0
  br i1 %cmp.i616.not, label %cleanup425.loopexit, label %for.inc384

for.inc384:                                       ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit619, %_ZNK15halide_buffer_t10address_ofEPKi.exit
  %counter.4 = phi i32 [ 0, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit619 ], [ %inc356, %_ZNK15halide_buffer_t10address_ofEPKi.exit ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %343) #10
  %inc385 = add nsw i32 %dim0.0836, 1
  %419 = load i32, i32* %extent.i, align 4, !tbaa !178
  %420 = load i32, i32* %min.i, align 4, !tbaa !181
  %add352 = add nsw i32 %420, %419
  %cmp353 = icmp slt i32 %inc385, %add352
  br i1 %cmp353, label %for.body355, label %for.inc389.loopexit, !llvm.loop !223

for.inc389.loopexit:                              ; preds = %for.inc384
  %.pre15 = load i32, i32* %extent.i.1, align 4, !tbaa !178
  %.pre16 = load i32, i32* %min.i.1, align 4, !tbaa !181
  br label %for.inc389

for.inc389:                                       ; preds = %for.inc389.loopexit, %for.body344
  %421 = phi i32 [ %356, %for.body344 ], [ %.pre16, %for.inc389.loopexit ]
  %422 = phi i32 [ %357, %for.body344 ], [ %.pre15, %for.inc389.loopexit ]
  %423 = phi i32 [ %358, %for.body344 ], [ %419, %for.inc389.loopexit ]
  %counter.6797 = phi i32 [ %counter.2840, %for.body344 ], [ %counter.4, %for.inc389.loopexit ]
  %inc390 = add nsw i32 %dim1.0841, 1
  %add341 = add nsw i32 %421, %422
  %cmp342 = icmp slt i32 %inc390, %add341
  br i1 %cmp342, label %for.body344, label %for.inc394.loopexit, !llvm.loop !224

for.inc394.loopexit:                              ; preds = %for.inc389
  %.pre896 = load i32, i32* %extent.i.2, align 4, !tbaa !178
  %.pre897 = load i32, i32* %min.i.2, align 4, !tbaa !181
  br label %for.inc394

for.inc394:                                       ; preds = %for.inc394.loopexit, %for.body333
  %424 = phi i32 [ %350, %for.body333 ], [ %421, %for.inc394.loopexit ]
  %425 = phi i32 [ %351, %for.body333 ], [ %422, %for.inc394.loopexit ]
  %426 = phi i32 [ %352, %for.body333 ], [ %.pre897, %for.inc394.loopexit ]
  %427 = phi i32 [ %353, %for.body333 ], [ %.pre896, %for.inc394.loopexit ]
  %428 = phi i32 [ %354, %for.body333 ], [ %422, %for.inc394.loopexit ]
  %429 = phi i32 [ %355, %for.body333 ], [ %421, %for.inc394.loopexit ]
  %counter.2.lcssa = phi i32 [ %counter.1849, %for.body333 ], [ %counter.6797, %for.inc394.loopexit ]
  %inc395 = add nsw i32 %dim2.0850, 1
  %add330 = add nsw i32 %427, %426
  %cmp331 = icmp slt i32 %inc395, %add330
  br i1 %cmp331, label %for.body333, label %for.inc399.loopexit, !llvm.loop !225

for.inc399.loopexit:                              ; preds = %for.inc394
  %.pre898 = load i32, i32* %extent.i.3, align 4, !tbaa !178
  %.pre899 = load i32, i32* %min.i.3, align 4, !tbaa !181
  br label %for.inc399

for.inc399:                                       ; preds = %for.inc399.loopexit, %for.body322
  %430 = phi i32 [ %344, %for.body322 ], [ %.pre899, %for.inc399.loopexit ]
  %431 = phi i32 [ %345, %for.body322 ], [ %.pre898, %for.inc399.loopexit ]
  %432 = phi i32 [ %346, %for.body322 ], [ %426, %for.inc399.loopexit ]
  %433 = phi i32 [ %347, %for.body322 ], [ %427, %for.inc399.loopexit ]
  %434 = phi i32 [ %348, %for.body322 ], [ %427, %for.inc399.loopexit ]
  %435 = phi i32 [ %349, %for.body322 ], [ %426, %for.inc399.loopexit ]
  %counter.1.lcssa = phi i32 [ %counter.0857, %for.body322 ], [ %counter.2.lcssa, %for.inc399.loopexit ]
  %inc400 = add nsw i32 %dim3.0858, 1
  %add319 = add nsw i32 %431, %430
  %cmp320 = icmp slt i32 %inc400, %add319
  br i1 %cmp320, label %for.body322, label %for.end403, !llvm.loop !226

for.end403:                                       ; preds = %for.inc399
  %cmp404 = icmp sgt i32 %counter.1.lcssa, 0
  br i1 %cmp404, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit612, label %if.end412

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit612: ; preds = %for.end403
  %mul407 = mul nsw i32 %counter.1.lcssa, %div.i
  %conv408 = sext i32 %mul407 to i64
  %call.i608 = call i64 @fwrite(i8* nonnull %340, i64 %conv408, i64 1, i8* nonnull %call.i598) #15
  %cmp.i609.not = icmp eq i64 %call.i608, 0
  br i1 %cmp.i609.not, label %cleanup425, label %if.end412

if.end412:                                        ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit612, %for.end403, %if.end311
  %436 = bitcast i64* %zero to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %436) #10
  store i64 0, i64* %zero, align 8, !tbaa !110
  %tobool413.not = icmp eq i32 %final_padding_bytes.0, 0
  br i1 %tobool413.not, label %if.end423, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit: ; preds = %if.end412
  %conv415 = zext i32 %final_padding_bytes.0 to i64
  %call.i604 = call i64 @fwrite(i8* nonnull %436, i64 %conv415, i64 1, i8* nonnull %call.i598) #15
  %cmp.i605.not = icmp eq i64 %call.i604, 0
  br i1 %cmp.i605.not, label %cleanup424, label %if.end423

if.end423:                                        ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit, %if.end412
  br label %cleanup424

cleanup424:                                       ; preds = %if.end423, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit
  %retval.21 = phi i32 [ 0, %if.end423 ], [ -16, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %436) #10
  br label %cleanup425

cleanup425.loopexit:                              ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit619
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %343) #10
  br label %cleanup425

cleanup425:                                       ; preds = %cleanup425.loopexit, %cleanup424, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit612
  %retval.22 = phi i32 [ %retval.21, %cleanup424 ], [ -14, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit612 ], [ -13, %cleanup425.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %340) #10
  br label %cleanup433

cleanup433:                                       ; preds = %cleanup425, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit631, %cleanup278, %cleanup278.thread, %cleanup154
  %retval.23 = phi i32 [ %retval.22, %cleanup425 ], [ %retval.4, %cleanup154 ], [ %retval.8, %cleanup278 ], [ -12, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit631 ], [ -6, %cleanup278.thread ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %3) #10
  %call.i = call i32 @fclose(i8* nonnull %call.i598) #15
  br label %return

return:                                           ; preds = %cleanup433, %if.end6, %if.end2, %if.then1, %if.then
  %retval.26 = phi i32 [ -1, %if.then ], [ -1, %if.then1 ], [ %call3, %if.end2 ], [ %retval.23, %cleanup433 ], [ -2, %if.end6 ]
  ret i32 %retval.26

for.body.1:                                       ; preds = %for.body.lr.ph
  %arrayidx.1 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %7, i64 1
  %arrayidx14.1 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 1
  %437 = bitcast %struct.halide_dimension_t* %arrayidx14.1 to i8*
  %438 = bitcast %struct.halide_dimension_t* %arrayidx.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %437, i8* nonnull align 4 dereferenceable(16) %438, i64 16, i1 false), !tbaa.struct !177
  %extent.1 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 1, i32 1
  %439 = load i32, i32* %extent.1, align 4, !tbaa !178
  %conv903.1 = zext i32 %439 to i64
  %mul.1 = mul nuw i64 %conv903, %conv903.1
  %exitcond.not17.1 = icmp eq i64 %11, 2
  br i1 %exitcond.not17.1, label %for.cond19.preheader, label %for.body.2, !llvm.loop !180

for.body.2:                                       ; preds = %for.body.1
  %arrayidx.2 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %7, i64 2
  %arrayidx14.2 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 2
  %440 = bitcast %struct.halide_dimension_t* %arrayidx14.2 to i8*
  %441 = bitcast %struct.halide_dimension_t* %arrayidx.2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %440, i8* nonnull align 4 dereferenceable(16) %441, i64 16, i1 false), !tbaa.struct !177
  %extent.2 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 2, i32 1
  %442 = load i32, i32* %extent.2, align 4, !tbaa !178
  %conv903.2 = zext i32 %442 to i64
  %mul.2 = mul i64 %mul.1, %conv903.2
  %exitcond.not17.2 = icmp eq i64 %11, 3
  br i1 %exitcond.not17.2, label %for.cond19.preheader, label %for.body.3, !llvm.loop !180

for.body.3:                                       ; preds = %for.body.2
  %arrayidx.3 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %7, i64 3
  %arrayidx14.3 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 3
  %443 = bitcast %struct.halide_dimension_t* %arrayidx14.3 to i8*
  %444 = bitcast %struct.halide_dimension_t* %arrayidx.3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %443, i8* nonnull align 4 dereferenceable(16) %444, i64 16, i1 false), !tbaa.struct !177
  %extent.3 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 3, i32 1
  %445 = load i32, i32* %extent.3, align 4, !tbaa !178
  %conv903.3 = zext i32 %445 to i64
  %mul.3 = mul i64 %mul.2, %conv903.3
  br label %for.cond19.preheader
}

declare i64 @fwrite(i8*, i64, i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak void @halide_cache_cleanup() #0 {
entry:
  tail call void @halide_memoization_cache_cleanup() #16
  ret void
}

; Function Attrs: nounwind mustprogress
define weak void @halide_memoization_cache_cleanup() local_unnamed_addr #0 {
entry:
  br label %for.body

for.cond.cleanup:                                 ; preds = %while.end
  store i64 0, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !10
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !10
  ret void

for.body:                                         ; preds = %while.end, %entry
  %__begin1.018 = phi %"struct.Halide::Runtime::Internal::CacheEntry"** [ getelementptr inbounds ([256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 0, i64 0), %entry ], [ %incdec.ptr, %while.end ]
  %0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %__begin1.018, align 8, !tbaa !10
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %__begin1.018, align 8, !tbaa !10
  %cmp2.not16 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %0, null
  br i1 %cmp2.not16, label %while.end, label %while.body

while.body:                                       ; preds = %for.body, %while.body
  %entry1.017 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %1, %while.body ], [ %0, %for.body ]
  %next3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.017, i64 0, i32 0
  %1 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next3, align 8, !tbaa !227
  tail call void @_ZN6Halide7Runtime8Internal10CacheEntry7destroyEv(%"struct.Halide::Runtime::Internal::CacheEntry"* nonnull dereferenceable(96) %entry1.017) #16
  %2 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.017 to i8*
  tail call void @halide_free(i8* null, i8* nonnull %2) #15
  %cmp2.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %1, null
  br i1 %cmp2.not, label %while.end, label %while.body, !llvm.loop !229

while.end:                                        ; preds = %while.body, %for.body
  %incdec.ptr = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %__begin1.018, i64 1
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"** %incdec.ptr, getelementptr inbounds ([256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 1, i64 0)
  br i1 %cmp.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal10CacheEntry7destroyEv(%"struct.Halide::Runtime::Internal::CacheEntry"* nonnull dereferenceable(96) %this) local_unnamed_addr #0 align 2 {
entry:
  %tuple_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 8
  %0 = load i32, i32* %tuple_count, align 8, !tbaa !230
  %cmp11.not = icmp eq i32 %0, 0
  br i1 %cmp11.not, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %buf = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 11
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %metadata_storage = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 3
  %1 = load i8*, i8** %metadata_storage, align 8, !tbaa !231
  tail call void @halide_free(i8* null, i8* %1) #15
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %2 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf, align 8, !tbaa !232
  %arrayidx = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %2, i64 %indvars.iv
  %call = tail call i32 @halide_device_free(i8* null, %struct.halide_buffer_t* %arrayidx) #15
  %3 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf, align 8, !tbaa !232
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %3, i64 %indvars.iv, i32 2
  %4 = load i8*, i8** %host, align 8, !tbaa !172
  %call6 = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %4) #16
  %5 = bitcast %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call6 to i8*
  tail call void @halide_free(i8* null, i8* %5) #15
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %6 = load i32, i32* %tuple_count, align 8, !tbaa !230
  %7 = zext i32 %6 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %7
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !233
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %host) local_unnamed_addr #2 {
entry:
  %add.ptr = getelementptr inbounds i8, i8* %host, i64 -64
  %0 = bitcast i8* %add.ptr to %"struct.Halide::Runtime::Internal::CacheBlockHeader"*
  ret %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %0
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal18copy_memory_helperERKNS1_11device_copyEixx(%"struct.Halide::Runtime::Internal::device_copy"* nonnull align 8 dereferenceable(416) %copy, i32 %d, i64 %src_off, i64 %dst_off) local_unnamed_addr #0 {
entry:
  %cmp41 = icmp sgt i32 %d, -1
  br i1 %cmp41, label %land.rhs, label %while.end

land.rhs:                                         ; preds = %entry, %while.body
  %d.addr.042 = phi i32 [ %dec, %while.body ], [ %d, %entry ]
  %idxprom36 = zext i32 %d.addr.042 to i64
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 3, i64 %idxprom36
  %0 = load i64, i64* %arrayidx, align 8, !tbaa !110
  %cmp1 = icmp eq i64 %0, 1
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %land.rhs
  %dec = add nsw i32 %d.addr.042, -1
  %cmp = icmp sgt i32 %d.addr.042, 0
  br i1 %cmp, label %land.rhs, label %if.then, !llvm.loop !234

while.end:                                        ; preds = %land.rhs, %entry
  %d.addr.0.lcssa = phi i32 [ %d, %entry ], [ %d.addr.042, %land.rhs ]
  %cmp2 = icmp eq i32 %d.addr.0.lcssa, -1
  br i1 %cmp2, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %while.end
  %idxprom5 = sext i32 %d.addr.0.lcssa to i64
  %arrayidx6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 3, i64 %idxprom5
  %1 = load i64, i64* %arrayidx6, align 8, !tbaa !110
  %cmp737.not = icmp eq i64 %1, 0
  br i1 %cmp737.not, label %if.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %sub = add nsw i32 %d.addr.0.lcssa, -1
  %arrayidx9 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 4, i64 %idxprom5
  %arrayidx12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 5, i64 %idxprom5
  br label %for.body

if.then:                                          ; preds = %while.body, %while.end
  %src = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 0
  %2 = load i64, i64* %src, align 8, !tbaa !235
  %add = add i64 %2, %src_off
  %3 = inttoptr i64 %add to i8*
  %dst = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 1
  %4 = load i64, i64* %dst, align 8, !tbaa !237
  %add3 = add i64 %4, %dst_off
  %5 = inttoptr i64 %add3 to i8*
  %chunk_size = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 6
  %6 = load i64, i64* %chunk_size, align 8, !tbaa !238
  %call = tail call i8* @memcpy(i8* %5, i8* %3, i64 %6) #15
  br label %if.end

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %i.040 = phi i64 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %src_off.addr.039 = phi i64 [ %src_off, %for.body.lr.ph ], [ %add10, %for.body ]
  %dst_off.addr.038 = phi i64 [ %dst_off, %for.body.lr.ph ], [ %add13, %for.body ]
  tail call void @_ZN6Halide7Runtime8Internal18copy_memory_helperERKNS1_11device_copyEixx(%"struct.Halide::Runtime::Internal::device_copy"* nonnull align 8 dereferenceable(416) %copy, i32 %sub, i64 %src_off.addr.039, i64 %dst_off.addr.038) #16
  %7 = load i64, i64* %arrayidx9, align 8, !tbaa !110
  %add10 = add i64 %7, %src_off.addr.039
  %8 = load i64, i64* %arrayidx12, align 8, !tbaa !110
  %add13 = add i64 %8, %dst_off.addr.038
  %inc = add nuw i64 %i.040, 1
  %9 = load i64, i64* %arrayidx6, align 8, !tbaa !110
  %cmp7 = icmp ult i64 %inc, %9
  br i1 %cmp7, label %for.body, label %if.end, !llvm.loop !239

if.end:                                           ; preds = %for.body, %if.then, %for.cond.preheader
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal11copy_memoryERKNS1_11device_copyEPv(%"struct.Halide::Runtime::Internal::device_copy"* nonnull align 8 dereferenceable(416) %copy, i8* %user_context) local_unnamed_addr #0 {
entry:
  %src = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 0
  %0 = load i64, i64* %src, align 8, !tbaa !235
  %dst = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 1
  %1 = load i64, i64* %dst, align 8, !tbaa !237
  %cmp.not = icmp eq i64 %0, %1
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %src_begin = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 2
  %2 = load i64, i64* %src_begin, align 8, !tbaa !240
  tail call void @_ZN6Halide7Runtime8Internal18copy_memory_helperERKNS1_11device_copyEixx(%"struct.Halide::Runtime::Internal::device_copy"* nonnull align 8 dereferenceable(416) %copy, i32 15, i64 %2, i64 0) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal16make_buffer_copyEPK15halide_buffer_tbS4_b(%"struct.Halide::Runtime::Internal::device_copy"* noalias sret(%"struct.Halide::Runtime::Internal::device_copy") align 8 %agg.result, %struct.halide_buffer_t* %src, i1 zeroext %src_host, %struct.halide_buffer_t* %dst, i1 zeroext %dst_host) local_unnamed_addr #0 {
entry:
  %c = alloca %"struct.Halide::Runtime::Internal::device_copy", align 8
  %0 = bitcast %"struct.Halide::Runtime::Internal::device_copy"* %c to i8*
  call void @llvm.lifetime.start.p0i8(i64 416, i8* nonnull %0) #10
  br i1 %src_host, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 2
  %1 = load i8*, i8** %host, align 8, !tbaa !172
  %2 = ptrtoint i8* %1 to i64
  br label %cond.end

cond.false:                                       ; preds = %entry
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 0
  %3 = load i64, i64* %device, align 8, !tbaa !174
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ %3, %cond.false ]
  %src2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 0
  store i64 %cond, i64* %src2, align 8, !tbaa !235
  br i1 %dst_host, label %cond.true4, label %cond.false6

cond.true4:                                       ; preds = %cond.end
  %host5 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 2
  %4 = load i8*, i8** %host5, align 8, !tbaa !172
  %5 = ptrtoint i8* %4 to i64
  br label %cond.end8

cond.false6:                                      ; preds = %cond.end
  %device7 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 0
  %6 = load i64, i64* %device7, align 8, !tbaa !174
  br label %cond.end8

cond.end8:                                        ; preds = %cond.false6, %cond.true4
  %cond9 = phi i64 [ %5, %cond.true4 ], [ %6, %cond.false6 ]
  %dst10 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 1
  store i64 %cond9, i64* %dst10, align 8, !tbaa !237
  %bits.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 4, i32 1
  %7 = load i8, i8* %bits.i, align 1, !tbaa !136
  %conv.i = zext i8 %7 to i32
  %add.i = add nuw nsw i32 %conv.i, 7
  %div.i = lshr i32 %add.i, 3
  %conv = zext i32 %div.i to i64
  %chunk_size = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 6
  store i64 %conv, i64* %chunk_size, align 8, !tbaa !238
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 0
  %arrayidx12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 0
  %arrayidx14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 0
  %arrayidx.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 1
  %arrayidx12.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 1
  %arrayidx14.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 1
  %8 = bitcast i64* %arrayidx to <4 x i64>*
  store <4 x i64> <i64 1, i64 1, i64 1, i64 1>, <4 x i64>* %8, align 8, !tbaa !110
  %9 = bitcast i64* %arrayidx12 to <4 x i64>*
  store <4 x i64> zeroinitializer, <4 x i64>* %9, align 8, !tbaa !110
  %10 = bitcast i64* %arrayidx14 to <4 x i64>*
  store <4 x i64> zeroinitializer, <4 x i64>* %10, align 8, !tbaa !110
  %arrayidx.4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 4
  %arrayidx12.4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 4
  %arrayidx14.4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 4
  %arrayidx.5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 5
  %arrayidx12.5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 5
  %arrayidx14.5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 5
  %11 = bitcast i64* %arrayidx.4 to <4 x i64>*
  store <4 x i64> <i64 1, i64 1, i64 1, i64 1>, <4 x i64>* %11, align 8, !tbaa !110
  %12 = bitcast i64* %arrayidx12.4 to <4 x i64>*
  store <4 x i64> zeroinitializer, <4 x i64>* %12, align 8, !tbaa !110
  %13 = bitcast i64* %arrayidx14.4 to <4 x i64>*
  store <4 x i64> zeroinitializer, <4 x i64>* %13, align 8, !tbaa !110
  %arrayidx.8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 8
  %arrayidx12.8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 8
  %arrayidx14.8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 8
  %arrayidx.9 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 9
  %arrayidx12.9 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 9
  %arrayidx14.9 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 9
  %14 = bitcast i64* %arrayidx.8 to <4 x i64>*
  store <4 x i64> <i64 1, i64 1, i64 1, i64 1>, <4 x i64>* %14, align 8, !tbaa !110
  %15 = bitcast i64* %arrayidx12.8 to <4 x i64>*
  store <4 x i64> zeroinitializer, <4 x i64>* %15, align 8, !tbaa !110
  %16 = bitcast i64* %arrayidx14.8 to <4 x i64>*
  store <4 x i64> zeroinitializer, <4 x i64>* %16, align 8, !tbaa !110
  %arrayidx.12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 12
  %arrayidx12.12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 12
  %arrayidx14.12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 12
  %arrayidx.13 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 13
  %arrayidx12.13 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 13
  %arrayidx14.13 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 13
  %arrayidx.14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 14
  %arrayidx12.14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 14
  %arrayidx14.14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 14
  %arrayidx.15 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 15
  %17 = bitcast i64* %arrayidx.12 to <4 x i64>*
  store <4 x i64> <i64 1, i64 1, i64 1, i64 1>, <4 x i64>* %17, align 8, !tbaa !110
  %arrayidx12.15 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 15
  %18 = bitcast i64* %arrayidx12.12 to <4 x i64>*
  store <4 x i64> zeroinitializer, <4 x i64>* %18, align 8, !tbaa !110
  %arrayidx14.15 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 15
  %19 = bitcast i64* %arrayidx14.12 to <4 x i64>*
  store <4 x i64> zeroinitializer, <4 x i64>* %19, align 8, !tbaa !110
  %src_begin = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 2
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 5
  %20 = load i32, i32* %dimensions, align 4, !tbaa !175
  %cmp17272 = icmp sgt i32 %20, 0
  br i1 %cmp17272, label %for.body19.lr.ph, label %for.cond.cleanup18

for.body19.lr.ph:                                 ; preds = %cond.end8
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 6
  %21 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !176
  %dim23 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 6
  %22 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim23, align 8, !tbaa !176
  %wide.trip.count = zext i32 %20 to i64
  %min.iters.check = icmp ult i32 %20, 17
  br i1 %min.iters.check, label %for.body19.preheader, label %vector.ph

for.body19.preheader:                             ; preds = %middle.block, %for.body19.lr.ph
  %indvars.iv284.ph = phi i64 [ 0, %for.body19.lr.ph ], [ %n.vec, %middle.block ]
  %.ph = phi i64 [ 0, %for.body19.lr.ph ], [ %73, %middle.block ]
  br label %for.body19

vector.ph:                                        ; preds = %for.body19.lr.ph
  %n.mod.vf = and i64 %wide.trip.count, 15
  %23 = icmp eq i64 %n.mod.vf, 0
  %24 = select i1 %23, i64 16, i64 %n.mod.vf
  %n.vec = sub nsw i64 %wide.trip.count, %24
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.phi = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %68, %vector.body ]
  %vec.phi2 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %69, %vector.body ]
  %vec.phi3 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %70, %vector.body ]
  %vec.phi4 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %71, %vector.body ]
  %25 = or i64 %index, 4
  %26 = or i64 %index, 8
  %27 = or i64 %index, 12
  %28 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %21, i64 %index, i32 2
  %29 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %21, i64 %25, i32 2
  %30 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %21, i64 %26, i32 2
  %31 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %21, i64 %27, i32 2
  %32 = getelementptr inbounds i32, i32* %28, i64 -2
  %33 = bitcast i32* %32 to <16 x i32>*
  %34 = getelementptr inbounds i32, i32* %29, i64 -2
  %35 = bitcast i32* %34 to <16 x i32>*
  %36 = getelementptr inbounds i32, i32* %30, i64 -2
  %37 = bitcast i32* %36 to <16 x i32>*
  %38 = getelementptr inbounds i32, i32* %31, i64 -2
  %39 = bitcast i32* %38 to <16 x i32>*
  %wide.vec = load <16 x i32>, <16 x i32>* %33, align 4, !tbaa !73
  %wide.vec5 = load <16 x i32>, <16 x i32>* %35, align 4, !tbaa !73
  %wide.vec6 = load <16 x i32>, <16 x i32>* %37, align 4, !tbaa !73
  %wide.vec7 = load <16 x i32>, <16 x i32>* %39, align 4, !tbaa !73
  %strided.vec11 = shufflevector <16 x i32> %wide.vec, <16 x i32> poison, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %strided.vec12 = shufflevector <16 x i32> %wide.vec5, <16 x i32> poison, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %strided.vec13 = shufflevector <16 x i32> %wide.vec6, <16 x i32> poison, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %strided.vec14 = shufflevector <16 x i32> %wide.vec7, <16 x i32> poison, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %40 = sext <4 x i32> %strided.vec11 to <4 x i64>
  %41 = sext <4 x i32> %strided.vec12 to <4 x i64>
  %42 = sext <4 x i32> %strided.vec13 to <4 x i64>
  %43 = sext <4 x i32> %strided.vec14 to <4 x i64>
  %44 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %index, i32 0
  %45 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %25, i32 0
  %46 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %26, i32 0
  %47 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %27, i32 0
  %48 = bitcast i32* %44 to <16 x i32>*
  %49 = bitcast i32* %45 to <16 x i32>*
  %50 = bitcast i32* %46 to <16 x i32>*
  %51 = bitcast i32* %47 to <16 x i32>*
  %wide.vec15 = load <16 x i32>, <16 x i32>* %48, align 4, !tbaa !181
  %wide.vec16 = load <16 x i32>, <16 x i32>* %49, align 4, !tbaa !181
  %wide.vec17 = load <16 x i32>, <16 x i32>* %50, align 4, !tbaa !181
  %wide.vec18 = load <16 x i32>, <16 x i32>* %51, align 4, !tbaa !181
  %52 = sub nsw <16 x i32> %wide.vec15, %wide.vec
  %53 = shufflevector <16 x i32> %52, <16 x i32> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %54 = sub nsw <16 x i32> %wide.vec16, %wide.vec5
  %55 = shufflevector <16 x i32> %54, <16 x i32> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %56 = sub nsw <16 x i32> %wide.vec17, %wide.vec6
  %57 = shufflevector <16 x i32> %56, <16 x i32> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %58 = sub nsw <16 x i32> %wide.vec18, %wide.vec7
  %59 = shufflevector <16 x i32> %58, <16 x i32> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %60 = sext <4 x i32> %53 to <4 x i64>
  %61 = sext <4 x i32> %55 to <4 x i64>
  %62 = sext <4 x i32> %57 to <4 x i64>
  %63 = sext <4 x i32> %59 to <4 x i64>
  %64 = mul nsw <4 x i64> %60, %40
  %65 = mul nsw <4 x i64> %61, %41
  %66 = mul nsw <4 x i64> %62, %42
  %67 = mul nsw <4 x i64> %63, %43
  %68 = add <4 x i64> %64, %vec.phi
  %69 = add <4 x i64> %65, %vec.phi2
  %70 = add <4 x i64> %66, %vec.phi3
  %71 = add <4 x i64> %67, %vec.phi4
  %index.next = add i64 %index, 16
  %72 = icmp eq i64 %index.next, %n.vec
  br i1 %72, label %middle.block, label %vector.body, !llvm.loop !241

middle.block:                                     ; preds = %vector.body
  %bin.rdx = add <4 x i64> %69, %68
  %bin.rdx23 = add <4 x i64> %70, %bin.rdx
  %bin.rdx24 = add <4 x i64> %71, %bin.rdx23
  %73 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %bin.rdx24)
  br label %for.body19.preheader

for.cond.cleanup18:                               ; preds = %for.body19, %cond.end8
  %74 = phi i64 [ 0, %cond.end8 ], [ %add, %for.body19 ]
  %mul37 = mul i64 %74, %conv
  store i64 %mul37, i64* %src_begin, align 8, !tbaa !240
  %dimensions39 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 5
  %75 = load i32, i32* %dimensions39, align 4, !tbaa !175
  %cmp40.not = icmp eq i32 %20, %75
  br i1 %cmp40.not, label %lor.lhs.false, label %if.then

for.body19:                                       ; preds = %for.body19.preheader, %for.body19
  %indvars.iv284 = phi i64 [ %indvars.iv.next285, %for.body19 ], [ %indvars.iv284.ph, %for.body19.preheader ]
  %76 = phi i64 [ %add, %for.body19 ], [ %.ph, %for.body19.preheader ]
  %stride = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %21, i64 %indvars.iv284, i32 2
  %77 = load i32, i32* %stride, align 4, !tbaa !182
  %conv22 = sext i32 %77 to i64
  %min = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %indvars.iv284, i32 0
  %78 = load i32, i32* %min, align 4, !tbaa !181
  %min29 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %21, i64 %indvars.iv284, i32 0
  %79 = load i32, i32* %min29, align 4, !tbaa !181
  %sub = sub nsw i32 %78, %79
  %conv30 = sext i32 %sub to i64
  %mul = mul nsw i64 %conv30, %conv22
  %add = add i64 %mul, %76
  %indvars.iv.next285 = add nuw nsw i64 %indvars.iv284, 1
  %exitcond286.not = icmp eq i64 %indvars.iv.next285, %wide.trip.count
  br i1 %exitcond286.not, label %for.cond.cleanup18, label %for.body19, !llvm.loop !242

lor.lhs.false:                                    ; preds = %for.cond.cleanup18
  %bits.i253 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 4, i32 1
  %80 = load i8, i8* %bits.i253, align 1, !tbaa !136
  %conv.i254 = zext i8 %80 to i32
  %add.i255 = add nuw nsw i32 %conv.i254, 7
  %div.i256 = lshr i32 %add.i255, 3
  %cmp45.not = icmp ne i32 %div.i, %div.i256
  %cmp48 = icmp sgt i32 %20, 16
  %or.cond261 = or i1 %cmp48, %cmp45.not
  br i1 %or.cond261, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %for.cond.cleanup18
  %81 = bitcast %"struct.Halide::Runtime::Internal::device_copy"* %agg.result to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(416) %81, i8 0, i64 416, i1 false)
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %cmp50 = icmp eq i32 %div.i, 0
  br i1 %cmp50, label %if.then51, label %for.cond54.preheader

for.cond54.preheader:                             ; preds = %if.end
  br i1 %cmp17272, label %for.body58.lr.ph, label %while.end

for.body58.lr.ph:                                 ; preds = %for.cond54.preheader
  %dim60 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 6
  %82 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim60, align 8, !tbaa !176
  %dim70 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 6
  %83 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim70, align 8, !tbaa !176
  %wide.trip.count282 = zext i32 %20 to i64
  br label %for.body58

if.then51:                                        ; preds = %if.end
  %84 = bitcast %"struct.Halide::Runtime::Internal::device_copy"* %agg.result to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(416) %84, i8 0, i64 416, i1 false)
  br label %cleanup

while.cond.preheader:                             ; preds = %for.cond.cleanup94
  %.pre = load i64, i64* %chunk_size, align 8, !tbaa !238
  %.pre290 = load i64, i64* %arrayidx12, align 8, !tbaa !110
  %cmp139263 = icmp eq i64 %.pre, %.pre290
  br i1 %cmp139263, label %land.rhs.lr.ph, label %while.end

land.rhs.lr.ph:                                   ; preds = %while.cond.preheader
  %.pre291 = load i64, i64* %arrayidx14, align 8, !tbaa !110
  %85 = bitcast i64* %arrayidx.1 to <4 x i64>*
  %86 = bitcast i64* %arrayidx to <4 x i64>*
  %87 = bitcast i64* %arrayidx12.1 to <4 x i64>*
  %88 = bitcast i64* %arrayidx12 to <4 x i64>*
  %89 = bitcast i64* %arrayidx14.1 to <4 x i64>*
  %90 = bitcast i64* %arrayidx14 to <4 x i64>*
  %91 = bitcast i64* %arrayidx.5 to <4 x i64>*
  %92 = bitcast i64* %arrayidx.4 to <4 x i64>*
  %93 = bitcast i64* %arrayidx12.5 to <4 x i64>*
  %94 = bitcast i64* %arrayidx12.4 to <4 x i64>*
  %95 = bitcast i64* %arrayidx14.5 to <4 x i64>*
  %96 = bitcast i64* %arrayidx14.4 to <4 x i64>*
  %97 = bitcast i64* %arrayidx.9 to <4 x i64>*
  %98 = bitcast i64* %arrayidx.8 to <4 x i64>*
  %99 = bitcast i64* %arrayidx12.9 to <4 x i64>*
  %100 = bitcast i64* %arrayidx12.8 to <4 x i64>*
  %101 = bitcast i64* %arrayidx14.9 to <4 x i64>*
  %102 = bitcast i64* %arrayidx14.8 to <4 x i64>*
  %103 = bitcast i64* %arrayidx.13 to <2 x i64>*
  %104 = bitcast i64* %arrayidx.12 to <2 x i64>*
  %105 = bitcast i64* %arrayidx12.13 to <2 x i64>*
  %106 = bitcast i64* %arrayidx12.12 to <2 x i64>*
  %107 = bitcast i64* %arrayidx14.13 to <2 x i64>*
  %108 = bitcast i64* %arrayidx14.12 to <2 x i64>*
  br label %land.rhs

for.body58:                                       ; preds = %for.cond.cleanup94, %for.body58.lr.ph
  %indvars.iv278 = phi i64 [ 0, %for.body58.lr.ph ], [ %indvars.iv.next279, %for.cond.cleanup94 ]
  %stride63 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %82, i64 %indvars.iv278, i32 2
  %109 = load i32, i32* %stride63, align 4, !tbaa !182
  %conv64 = sext i32 %109 to i64
  %mul68 = mul nsw i64 %conv64, %conv
  %stride73 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %83, i64 %indvars.iv278, i32 2
  %110 = load i32, i32* %stride73, align 4, !tbaa !182
  %conv74 = sext i32 %110 to i64
  %mul78 = mul nsw i64 %conv74, %conv
  %cmp80264.not = icmp eq i64 %indvars.iv278, 0
  br i1 %cmp80264.not, label %for.end91, label %for.body81.lr.ph

for.body81.lr.ph:                                 ; preds = %for.body58
  %cmp86.not = icmp eq i64 %mul68, 0
  br i1 %cmp86.not, label %for.body81.preheader, label %for.body81.us

for.body81.preheader:                             ; preds = %for.body81.lr.ph
  %111 = trunc i64 %indvars.iv278 to i32
  br label %for.end91

for.body81.us:                                    ; preds = %for.body81.lr.ph, %for.inc89.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc89.us ], [ 0, %for.body81.lr.ph ]
  %arrayidx84.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv
  %112 = load i64, i64* %arrayidx84.us, align 8, !tbaa !110
  %cmp85.us = icmp ult i64 %mul68, %112
  br i1 %cmp85.us, label %for.end91.loopexit, label %for.inc89.us

for.inc89.us:                                     ; preds = %for.body81.us
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %indvars.iv278
  br i1 %exitcond.not, label %for.end91.loopexit, label %for.body81.us, !llvm.loop !243

for.end91.loopexit:                               ; preds = %for.inc89.us, %for.body81.us
  %insert.0.lcssa.ph.in = phi i64 [ %indvars.iv278, %for.inc89.us ], [ %indvars.iv, %for.body81.us ]
  %insert.0.lcssa.ph = trunc i64 %insert.0.lcssa.ph.in to i32
  br label %for.end91

for.end91:                                        ; preds = %for.end91.loopexit, %for.body81.preheader, %for.body58
  %insert.0.lcssa = phi i32 [ 0, %for.body58 ], [ %insert.0.lcssa.ph, %for.end91.loopexit ], [ %111, %for.body81.preheader ]
  %113 = zext i32 %insert.0.lcssa to i64
  %cmp93267 = icmp ugt i64 %indvars.iv278, %113
  br i1 %cmp93267, label %for.body95.preheader, label %for.cond.cleanup94

for.body95.preheader:                             ; preds = %for.end91
  %114 = sext i32 %insert.0.lcssa to i64
  %115 = sub i64 %indvars.iv278, %114
  %116 = xor i64 %114, -1
  %117 = add i64 %indvars.iv278, %116
  %xtraiter = and i64 %115, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body95.prol.loopexit, label %for.body95.prol

for.body95.prol:                                  ; preds = %for.body95.preheader, %for.body95.prol
  %indvars.iv280.prol = phi i64 [ %indvars.iv.next281.prol, %for.body95.prol ], [ %indvars.iv278, %for.body95.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body95.prol ], [ %xtraiter, %for.body95.preheader ]
  %indvars.iv.next281.prol = add nsw i64 %indvars.iv280.prol, -1
  %arrayidx99.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %indvars.iv.next281.prol
  %118 = load i64, i64* %arrayidx99.prol, align 8, !tbaa !110
  %arrayidx102.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %indvars.iv280.prol
  store i64 %118, i64* %arrayidx102.prol, align 8, !tbaa !110
  %arrayidx106.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv.next281.prol
  %119 = load i64, i64* %arrayidx106.prol, align 8, !tbaa !110
  %arrayidx109.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv280.prol
  store i64 %119, i64* %arrayidx109.prol, align 8, !tbaa !110
  %arrayidx113.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %indvars.iv.next281.prol
  %120 = load i64, i64* %arrayidx113.prol, align 8, !tbaa !110
  %arrayidx116.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %indvars.iv280.prol
  store i64 %120, i64* %arrayidx116.prol, align 8, !tbaa !110
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp.not, label %for.body95.prol.loopexit, label %for.body95.prol, !llvm.loop !244

for.body95.prol.loopexit:                         ; preds = %for.body95.prol, %for.body95.preheader
  %indvars.iv280.unr = phi i64 [ %indvars.iv278, %for.body95.preheader ], [ %indvars.iv.next281.prol, %for.body95.prol ]
  %121 = icmp ult i64 %117, 3
  br i1 %121, label %for.cond.cleanup94, label %for.body95

for.cond.cleanup94:                               ; preds = %for.body95.prol.loopexit, %for.body95, %for.end91
  %extent122 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %82, i64 %indvars.iv278, i32 1
  %122 = load i32, i32* %extent122, align 4, !tbaa !178
  %conv123 = sext i32 %122 to i64
  %arrayidx126 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %113
  store i64 %conv123, i64* %arrayidx126, align 8, !tbaa !110
  %arrayidx129 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %113
  store i64 %mul68, i64* %arrayidx129, align 8, !tbaa !110
  %arrayidx132 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %113
  store i64 %mul78, i64* %arrayidx132, align 8, !tbaa !110
  %indvars.iv.next279 = add nuw nsw i64 %indvars.iv278, 1
  %exitcond283.not = icmp eq i64 %indvars.iv.next279, %wide.trip.count282
  br i1 %exitcond283.not, label %while.cond.preheader, label %for.body58, !llvm.loop !245

for.body95:                                       ; preds = %for.body95.prol.loopexit, %for.body95
  %indvars.iv280 = phi i64 [ %indvars.iv.next281.3, %for.body95 ], [ %indvars.iv280.unr, %for.body95.prol.loopexit ]
  %indvars.iv.next281 = add nsw i64 %indvars.iv280, -1
  %arrayidx99 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %indvars.iv.next281
  %123 = load i64, i64* %arrayidx99, align 8, !tbaa !110
  %arrayidx102 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %indvars.iv280
  store i64 %123, i64* %arrayidx102, align 8, !tbaa !110
  %arrayidx106 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv.next281
  %124 = load i64, i64* %arrayidx106, align 8, !tbaa !110
  %arrayidx109 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv280
  store i64 %124, i64* %arrayidx109, align 8, !tbaa !110
  %arrayidx113 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %indvars.iv.next281
  %125 = load i64, i64* %arrayidx113, align 8, !tbaa !110
  %arrayidx116 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %indvars.iv280
  store i64 %125, i64* %arrayidx116, align 8, !tbaa !110
  %indvars.iv.next281.1 = add nsw i64 %indvars.iv280, -2
  %arrayidx99.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %indvars.iv.next281.1
  %126 = load i64, i64* %arrayidx99.1, align 8, !tbaa !110
  %arrayidx102.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %indvars.iv.next281
  store i64 %126, i64* %arrayidx102.1, align 8, !tbaa !110
  %arrayidx106.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv.next281.1
  %127 = load i64, i64* %arrayidx106.1, align 8, !tbaa !110
  %arrayidx109.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv.next281
  store i64 %127, i64* %arrayidx109.1, align 8, !tbaa !110
  %arrayidx113.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %indvars.iv.next281.1
  %128 = load i64, i64* %arrayidx113.1, align 8, !tbaa !110
  %arrayidx116.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %indvars.iv.next281
  store i64 %128, i64* %arrayidx116.1, align 8, !tbaa !110
  %indvars.iv.next281.2 = add nsw i64 %indvars.iv280, -3
  %arrayidx99.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %indvars.iv.next281.2
  %129 = load i64, i64* %arrayidx99.2, align 8, !tbaa !110
  %arrayidx102.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %indvars.iv.next281.1
  store i64 %129, i64* %arrayidx102.2, align 8, !tbaa !110
  %arrayidx106.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv.next281.2
  %130 = load i64, i64* %arrayidx106.2, align 8, !tbaa !110
  %arrayidx109.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv.next281.1
  store i64 %130, i64* %arrayidx109.2, align 8, !tbaa !110
  %arrayidx113.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %indvars.iv.next281.2
  %131 = load i64, i64* %arrayidx113.2, align 8, !tbaa !110
  %arrayidx116.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %indvars.iv.next281.1
  store i64 %131, i64* %arrayidx116.2, align 8, !tbaa !110
  %indvars.iv.next281.3 = add nsw i64 %indvars.iv280, -4
  %arrayidx99.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %indvars.iv.next281.3
  %132 = load i64, i64* %arrayidx99.3, align 8, !tbaa !110
  %arrayidx102.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %indvars.iv.next281.2
  store i64 %132, i64* %arrayidx102.3, align 8, !tbaa !110
  %arrayidx106.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv.next281.3
  %133 = load i64, i64* %arrayidx106.3, align 8, !tbaa !110
  %arrayidx109.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv.next281.2
  store i64 %133, i64* %arrayidx109.3, align 8, !tbaa !110
  %arrayidx113.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %indvars.iv.next281.3
  %134 = load i64, i64* %arrayidx113.3, align 8, !tbaa !110
  %arrayidx116.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %indvars.iv.next281.2
  store i64 %134, i64* %arrayidx116.3, align 8, !tbaa !110
  %cmp93.3 = icmp sgt i64 %indvars.iv.next281.3, %114
  br i1 %cmp93.3, label %for.body95, label %for.cond.cleanup94, !llvm.loop !246

land.rhs:                                         ; preds = %while.body, %land.rhs.lr.ph
  %135 = phi i64 [ %.pre291, %land.rhs.lr.ph ], [ %154, %while.body ]
  %136 = phi i64 [ %.pre, %land.rhs.lr.ph ], [ %mul147, %while.body ]
  %cmp143 = icmp eq i64 %136, %135
  br i1 %cmp143, label %while.body, label %while.end

while.body:                                       ; preds = %land.rhs
  %137 = load i64, i64* %arrayidx, align 8, !tbaa !110
  %mul147 = mul i64 %137, %135
  store i64 %mul147, i64* %chunk_size, align 8, !tbaa !238
  %138 = load <4 x i64>, <4 x i64>* %85, align 8, !tbaa !110
  store <4 x i64> %138, <4 x i64>* %86, align 8, !tbaa !110
  %139 = load <4 x i64>, <4 x i64>* %87, align 8, !tbaa !110
  store <4 x i64> %139, <4 x i64>* %88, align 8, !tbaa !110
  %140 = load <4 x i64>, <4 x i64>* %89, align 8, !tbaa !110
  store <4 x i64> %140, <4 x i64>* %90, align 8, !tbaa !110
  %141 = load <4 x i64>, <4 x i64>* %91, align 8, !tbaa !110
  store <4 x i64> %141, <4 x i64>* %92, align 8, !tbaa !110
  %142 = load <4 x i64>, <4 x i64>* %93, align 8, !tbaa !110
  store <4 x i64> %142, <4 x i64>* %94, align 8, !tbaa !110
  %143 = load <4 x i64>, <4 x i64>* %95, align 8, !tbaa !110
  store <4 x i64> %143, <4 x i64>* %96, align 8, !tbaa !110
  %144 = load <4 x i64>, <4 x i64>* %97, align 8, !tbaa !110
  store <4 x i64> %144, <4 x i64>* %98, align 8, !tbaa !110
  %145 = load <4 x i64>, <4 x i64>* %99, align 8, !tbaa !110
  store <4 x i64> %145, <4 x i64>* %100, align 8, !tbaa !110
  %146 = load <4 x i64>, <4 x i64>* %101, align 8, !tbaa !110
  store <4 x i64> %146, <4 x i64>* %102, align 8, !tbaa !110
  %147 = load <2 x i64>, <2 x i64>* %103, align 8, !tbaa !110
  store <2 x i64> %147, <2 x i64>* %104, align 8, !tbaa !110
  %148 = load <2 x i64>, <2 x i64>* %105, align 8, !tbaa !110
  store <2 x i64> %148, <2 x i64>* %106, align 8, !tbaa !110
  %149 = load <2 x i64>, <2 x i64>* %107, align 8, !tbaa !110
  store <2 x i64> %149, <2 x i64>* %108, align 8, !tbaa !110
  %150 = load i64, i64* %arrayidx.15, align 8, !tbaa !110
  store i64 %150, i64* %arrayidx.14, align 8, !tbaa !110
  %151 = load i64, i64* %arrayidx12.15, align 8, !tbaa !110
  store i64 %151, i64* %arrayidx12.14, align 8, !tbaa !110
  %152 = load i64, i64* %arrayidx14.15, align 8, !tbaa !110
  store i64 %152, i64* %arrayidx14.14, align 8, !tbaa !110
  store i64 1, i64* %arrayidx.15, align 8, !tbaa !110
  store i64 0, i64* %arrayidx12.15, align 8, !tbaa !110
  store i64 0, i64* %arrayidx14.15, align 8, !tbaa !110
  %153 = extractelement <4 x i64> %139, i32 0
  %cmp139 = icmp eq i64 %mul147, %153
  %154 = extractelement <4 x i64> %140, i32 0
  br i1 %cmp139, label %land.rhs, label %while.end, !llvm.loop !247

while.end:                                        ; preds = %while.body, %land.rhs, %while.cond.preheader, %for.cond54.preheader
  %155 = bitcast %"struct.Halide::Runtime::Internal::device_copy"* %agg.result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(416) %155, i8* nonnull align 8 dereferenceable(416) %0, i64 416, i1 false), !tbaa.struct !248
  br label %cleanup

cleanup:                                          ; preds = %while.end, %if.then51, %if.then
  call void @llvm.lifetime.end.p0i8(i64 416, i8* nonnull %0) #10
  ret void
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind mustprogress
define linkonce zeroext i1 @_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_m(i8* %key1, i8* %key2, i64 %key_size) local_unnamed_addr #0 {
entry:
  %call = tail call i32 @memcmp(i8* %key1, i8* %key2, i64 %key_size) #15
  %cmp = icmp eq i32 %call, 0
  ret i1 %cmp
}

declare i32 @memcmp(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define linkonce zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %buf, %struct.halide_dimension_t* %shape) local_unnamed_addr #0 {
entry:
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 5
  %0 = load i32, i32* %dimensions, align 4, !tbaa !175
  %cmp9 = icmp sgt i32 %0, 0
  br i1 %cmp9, label %for.body.lr.ph, label %return

for.body.lr.ph:                                   ; preds = %entry
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %1 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !176
  %2 = zext i32 %0 to i64
  br label %for.body

for.cond:                                         ; preds = %_ZNK18halide_dimension_tneERKS_.exit
  %exitcond.not = icmp eq i64 %indvars.iv.next, %2
  br i1 %exitcond.not, label %return, label %for.body, !llvm.loop !249

for.body:                                         ; preds = %for.cond, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond ]
  %min.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %1, i64 %indvars.iv, i32 0
  %3 = load i32, i32* %min.i.i, align 4, !tbaa !181
  %min2.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %shape, i64 %indvars.iv, i32 0
  %4 = load i32, i32* %min2.i.i, align 4, !tbaa !181
  %cmp.i.i = icmp eq i32 %3, %4
  br i1 %cmp.i.i, label %land.lhs.true.i.i, label %return

land.lhs.true.i.i:                                ; preds = %for.body
  %extent.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %1, i64 %indvars.iv, i32 1
  %5 = load i32, i32* %extent.i.i, align 4, !tbaa !178
  %extent3.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %shape, i64 %indvars.iv, i32 1
  %6 = load i32, i32* %extent3.i.i, align 4, !tbaa !178
  %cmp4.i.i = icmp eq i32 %5, %6
  br i1 %cmp4.i.i, label %land.lhs.true5.i.i, label %return

land.lhs.true5.i.i:                               ; preds = %land.lhs.true.i.i
  %stride.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %1, i64 %indvars.iv, i32 2
  %7 = load i32, i32* %stride.i.i, align 4, !tbaa !182
  %stride6.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %shape, i64 %indvars.iv, i32 2
  %8 = load i32, i32* %stride6.i.i, align 4, !tbaa !182
  %cmp7.i.i = icmp eq i32 %7, %8
  br i1 %cmp7.i.i, label %_ZNK18halide_dimension_tneERKS_.exit, label %return

_ZNK18halide_dimension_tneERKS_.exit:             ; preds = %land.lhs.true5.i.i
  %flags.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %1, i64 %indvars.iv, i32 3
  %9 = load i32, i32* %flags.i.i, align 4, !tbaa !250
  %flags8.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %shape, i64 %indvars.iv, i32 3
  %10 = load i32, i32* %flags8.i.i, align 4, !tbaa !250
  %cmp9.i.i.not = icmp eq i32 %9, %10
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %cmp9.i.i.not, label %for.cond, label %return

return:                                           ; preds = %_ZNK18halide_dimension_tneERKS_.exit, %land.lhs.true5.i.i, %land.lhs.true.i.i, %for.body, %for.cond, %entry
  %cmp.lcssa = phi i1 [ true, %entry ], [ false, %_ZNK18halide_dimension_tneERKS_.exit ], [ true, %for.cond ], [ false, %land.lhs.true5.i.i ], [ false, %land.lhs.true.i.i ], [ false, %for.body ]
  ret i1 %cmp.lcssa
}

; Function Attrs: nounwind mustprogress
define linkonce zeroext i1 @_ZN6Halide7Runtime8Internal10CacheEntry4initEPKhmjPK15halide_buffer_tiPPS5_by(%"struct.Halide::Runtime::Internal::CacheEntry"* nonnull dereferenceable(96) %this, i8* %cache_key, i64 %cache_key_size, i32 %key_hash, %struct.halide_buffer_t* %computed_bounds_buf, i32 %tuples, %struct.halide_buffer_t** %tuple_buffers, i1 zeroext %has_eviction_key_arg, i64 %eviction_key_arg) local_unnamed_addr #0 align 2 {
entry:
  %frombool = zext i1 %has_eviction_key_arg to i8
  %0 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"* %this to <2 x %"struct.Halide::Runtime::Internal::CacheEntry"*>*
  store <2 x %"struct.Halide::Runtime::Internal::CacheEntry"*> zeroinitializer, <2 x %"struct.Halide::Runtime::Internal::CacheEntry"*>* %0, align 8, !tbaa !10
  %less_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent, align 8, !tbaa !251
  %key_size = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 4
  store i64 %cache_key_size, i64* %key_size, align 8, !tbaa !252
  %hash = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 6
  store i32 %key_hash, i32* %hash, align 8, !tbaa !253
  %in_use_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 7
  store i32 0, i32* %in_use_count, align 4, !tbaa !254
  %tuple_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 8
  store i32 %tuples, i32* %tuple_count, align 8, !tbaa !230
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %computed_bounds_buf, i64 0, i32 5
  %1 = load i32, i32* %dimensions, align 4, !tbaa !175
  %dimensions2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 9
  store i32 %1, i32* %dimensions2, align 4, !tbaa !255
  %conv = zext i32 %tuples to i64
  %mul = mul nuw nsw i64 %conv, 56
  %conv5 = sext i32 %1 to i64
  %add8 = add i32 %tuples, 1
  %conv9 = zext i32 %add8 to i64
  %mul6 = shl nuw nsw i64 %conv9, 4
  %mul10 = mul i64 %mul6, %conv5
  %add11 = add i64 %mul10, %mul
  %add13 = add i64 %add11, %cache_key_size
  %call = tail call i8* @halide_malloc(i8* null, i64 %add13) #15
  %metadata_storage = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 3
  store i8* %call, i8** %metadata_storage, align 8, !tbaa !231
  %tobool.not = icmp eq i8* %call, null
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %buf = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 11
  %2 = bitcast %struct.halide_buffer_t** %buf to i8**
  store i8* %call, i8** %2, align 8, !tbaa !232
  %add.ptr = getelementptr inbounds i8, i8* %call, i64 %mul
  %computed_bounds = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 10
  %3 = bitcast %struct.halide_dimension_t** %computed_bounds to i8**
  store i8* %add.ptr, i8** %3, align 8, !tbaa !256
  %add.ptr18 = getelementptr inbounds i8, i8* %call, i64 %add11
  %key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 5
  store i8* %add.ptr18, i8** %key, align 8, !tbaa !257
  %4 = load i64, i64* %key_size, align 8, !tbaa !252
  %cmp117.not = icmp eq i64 %4, 0
  br i1 %cmp117.not, label %for.cond23.preheader, label %for.body.preheader

for.body.preheader:                               ; preds = %if.end
  %5 = load i8, i8* %cache_key, align 1, !tbaa !14
  store i8 %5, i8* %add.ptr18, align 1, !tbaa !14
  %6 = load i64, i64* %key_size, align 8, !tbaa !252
  %cmp130 = icmp ugt i64 %6, 1
  br i1 %cmp130, label %for.body.for.body_crit_edge, label %for.cond23.preheader, !llvm.loop !258

for.cond23.preheader:                             ; preds = %for.body.for.body_crit_edge, %for.body.preheader, %if.end
  %7 = load i32, i32* %dimensions2, align 4, !tbaa !255
  %cmp25115 = icmp sgt i32 %7, 0
  br i1 %cmp25115, label %for.body27.lr.ph, label %for.cond36.preheader

for.body27.lr.ph:                                 ; preds = %for.cond23.preheader
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %computed_bounds_buf, i64 0, i32 6
  br label %for.body27

for.body.for.body_crit_edge:                      ; preds = %for.body.preheader, %for.body.for.body_crit_edge
  %inc131 = phi i64 [ %inc, %for.body.for.body_crit_edge ], [ 1, %for.body.preheader ]
  %.pre = load i8*, i8** %key, align 8, !tbaa !257
  %arrayidx = getelementptr inbounds i8, i8* %cache_key, i64 %inc131
  %8 = load i8, i8* %arrayidx, align 1, !tbaa !14
  %arrayidx21 = getelementptr inbounds i8, i8* %.pre, i64 %inc131
  store i8 %8, i8* %arrayidx21, align 1, !tbaa !14
  %inc = add nuw i64 %inc131, 1
  %9 = load i64, i64* %key_size, align 8, !tbaa !252
  %cmp = icmp ult i64 %inc, %9
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.cond23.preheader, !llvm.loop !258

for.cond36.preheader:                             ; preds = %for.body27, %for.cond23.preheader
  %10 = load i32, i32* %tuple_count, align 8, !tbaa !230
  %cmp38113.not = icmp eq i32 %10, 0
  br i1 %cmp38113.not, label %for.cond.cleanup39, label %for.body40

for.body27:                                       ; preds = %for.body27, %for.body27.lr.ph
  %indvars.iv121 = phi i64 [ 0, %for.body27.lr.ph ], [ %indvars.iv.next122, %for.body27 ]
  %11 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !176
  %arrayidx28 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %11, i64 %indvars.iv121
  %12 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %computed_bounds, align 8, !tbaa !256
  %arrayidx31 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %12, i64 %indvars.iv121
  %13 = bitcast %struct.halide_dimension_t* %arrayidx31 to i8*
  %14 = bitcast %struct.halide_dimension_t* %arrayidx28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %13, i8* nonnull align 4 dereferenceable(16) %14, i64 16, i1 false), !tbaa.struct !177
  %indvars.iv.next122 = add nuw nsw i64 %indvars.iv121, 1
  %15 = load i32, i32* %dimensions2, align 4, !tbaa !255
  %16 = sext i32 %15 to i64
  %cmp25 = icmp slt i64 %indvars.iv.next122, %16
  br i1 %cmp25, label %for.body27, label %for.cond36.preheader, !llvm.loop !259

for.cond36.loopexit:                              ; preds = %for.body59.for.body59_crit_edge, %for.body59.preheader, %for.body40
  %17 = load i32, i32* %tuple_count, align 8, !tbaa !230
  %18 = zext i32 %17 to i64
  %cmp38 = icmp ult i64 %indvars.iv.next120, %18
  br i1 %cmp38, label %for.body40, label %for.cond.cleanup39, !llvm.loop !260

for.cond.cleanup39:                               ; preds = %for.cond36.loopexit, %for.cond36.preheader
  %has_eviction_key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 13
  store i8 %frombool, i8* %has_eviction_key, align 8, !tbaa !261
  %eviction_key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 12
  store i64 %eviction_key_arg, i64* %eviction_key, align 8, !tbaa !262
  br label %cleanup

for.body40:                                       ; preds = %for.cond36.preheader, %for.cond36.loopexit
  %indvars.iv119 = phi i64 [ %indvars.iv.next120, %for.cond36.loopexit ], [ 0, %for.cond36.preheader ]
  %arrayidx42 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv119
  %19 = bitcast %struct.halide_buffer_t** %arrayidx42 to i8**
  %20 = load i8*, i8** %19, align 8, !tbaa !10
  %21 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf, align 8, !tbaa !232
  %arrayidx45 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %21, i64 %indvars.iv119
  %22 = bitcast %struct.halide_buffer_t* %arrayidx45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(56) %22, i8* nonnull align 8 dereferenceable(56) %20, i64 56, i1 false), !tbaa.struct !263
  %23 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %computed_bounds, align 8, !tbaa !256
  %indvars.iv.next120 = add nuw nsw i64 %indvars.iv119, 1
  %24 = load i32, i32* %dimensions2, align 4, !tbaa !255
  %25 = trunc i64 %indvars.iv.next120 to i32
  %mul49 = mul i32 %24, %25
  %idx.ext = zext i32 %mul49 to i64
  %add.ptr50 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %23, i64 %idx.ext
  %26 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf, align 8, !tbaa !232
  %dim54 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %26, i64 %indvars.iv119, i32 6
  store %struct.halide_dimension_t* %add.ptr50, %struct.halide_dimension_t** %dim54, align 8, !tbaa !176
  %cmp57111 = icmp sgt i32 %24, 0
  br i1 %cmp57111, label %for.body59.preheader, label %for.cond36.loopexit

for.body59.preheader:                             ; preds = %for.body40
  %27 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx42, align 8, !tbaa !10
  %dim62125 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %27, i64 0, i32 6
  %28 = bitcast %struct.halide_dimension_t** %dim62125 to i8**
  %29 = load i8*, i8** %28, align 8, !tbaa !176
  %30 = bitcast %struct.halide_dimension_t* %add.ptr50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %30, i8* nonnull align 4 dereferenceable(16) %29, i64 16, i1 false), !tbaa.struct !177
  %31 = load i32, i32* %dimensions2, align 4, !tbaa !255
  %cmp57128 = icmp sgt i32 %31, 1
  br i1 %cmp57128, label %for.body59.for.body59_crit_edge, label %for.cond36.loopexit, !llvm.loop !265

for.body59.for.body59_crit_edge:                  ; preds = %for.body59.preheader, %for.body59.for.body59_crit_edge
  %indvars.iv.next129 = phi i64 [ %indvars.iv.next, %for.body59.for.body59_crit_edge ], [ 1, %for.body59.preheader ]
  %.pre123 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf, align 8, !tbaa !232
  %dim68.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %.pre123, i64 %indvars.iv119, i32 6
  %.pre124 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim68.phi.trans.insert, align 8, !tbaa !176
  %32 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx42, align 8, !tbaa !10
  %dim62 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %32, i64 0, i32 6
  %33 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim62, align 8, !tbaa !176
  %arrayidx64 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %33, i64 %indvars.iv.next129
  %arrayidx70 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre124, i64 %indvars.iv.next129
  %34 = bitcast %struct.halide_dimension_t* %arrayidx70 to i8*
  %35 = bitcast %struct.halide_dimension_t* %arrayidx64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %34, i8* nonnull align 4 dereferenceable(16) %35, i64 16, i1 false), !tbaa.struct !177
  %indvars.iv.next = add nuw nsw i64 %indvars.iv.next129, 1
  %36 = load i32, i32* %dimensions2, align 4, !tbaa !255
  %37 = sext i32 %36 to i64
  %cmp57 = icmp slt i64 %indvars.iv.next, %37
  br i1 %cmp57, label %for.body59.for.body59_crit_edge, label %for.cond36.loopexit, !llvm.loop !265

cleanup:                                          ; preds = %for.cond.cleanup39, %entry
  %38 = xor i1 %tobool.not, true
  ret i1 %38
}

; Function Attrs: nounwind mustprogress
define linkonce i32 @_ZN6Halide7Runtime8Internal8djb_hashEPKhm(i8* %key, i64 %key_size) local_unnamed_addr #0 {
entry:
  %cmp8.not = icmp eq i64 %key_size, 0
  br i1 %cmp8.not, label %for.cond.cleanup, label %for.body.preheader

for.body.preheader:                               ; preds = %entry
  %0 = add i64 %key_size, -1
  %xtraiter = and i64 %key_size, 7
  %1 = icmp ult i64 %0, 7
  br i1 %1, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = and i64 %key_size, -8
  %add.0 = mul i32 5381, 33
  br label %for.body

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.body, %for.body.preheader
  %add1.lcssa.ph = phi i32 [ undef, %for.body.preheader ], [ %add1.7, %for.body ]
  %i.010.unr = phi i64 [ 0, %for.body.preheader ], [ %inc.7, %for.body ]
  %h.09.unr = phi i32 [ 5381, %for.body.preheader ], [ %add1.7, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond.cleanup, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond.cleanup.loopexit.unr-lcssa, %for.body.epil
  %i.010.epil = phi i64 [ %inc.epil, %for.body.epil ], [ %i.010.unr, %for.cond.cleanup.loopexit.unr-lcssa ]
  %h.09.epil = phi i32 [ %add1.epil, %for.body.epil ], [ %h.09.unr, %for.cond.cleanup.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body.epil ], [ %xtraiter, %for.cond.cleanup.loopexit.unr-lcssa ]
  %add.epil = mul i32 %h.09.epil, 33
  %arrayidx.epil = getelementptr inbounds i8, i8* %key, i64 %i.010.epil
  %2 = load i8, i8* %arrayidx.epil, align 1, !tbaa !14
  %conv.epil = zext i8 %2 to i32
  %add1.epil = add i32 %add.epil, %conv.epil
  %inc.epil = add nuw i64 %i.010.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp.not, label %for.cond.cleanup, label %for.body.epil, !llvm.loop !266

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit.unr-lcssa, %for.body.epil, %entry
  %h.0.lcssa = phi i32 [ 5381, %entry ], [ %add1.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %add1.epil, %for.body.epil ]
  ret i32 %h.0.lcssa

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.preheader.new
  %i.010 = phi i64 [ 0, %for.body.preheader.new ], [ %inc.7, %for.body.for.body_crit_edge ]
  %add.phi = phi i32 [ %add.0, %for.body.preheader.new ], [ %add.12, %for.body.for.body_crit_edge ]
  %niter = phi i64 [ %unroll_iter, %for.body.preheader.new ], [ %niter.nsub.7, %for.body.for.body_crit_edge ]
  %arrayidx = getelementptr inbounds i8, i8* %key, i64 %i.010
  %3 = load i8, i8* %arrayidx, align 1, !tbaa !14
  %conv = zext i8 %3 to i32
  %add1 = add i32 %add.phi, %conv
  %inc = or i64 %i.010, 1
  %add.1 = mul i32 %add1, 33
  %arrayidx.1 = getelementptr inbounds i8, i8* %key, i64 %inc
  %4 = load i8, i8* %arrayidx.1, align 1, !tbaa !14
  %conv.1 = zext i8 %4 to i32
  %add1.1 = add i32 %add.1, %conv.1
  %inc.1 = or i64 %i.010, 2
  %add.2 = mul i32 %add1.1, 33
  %arrayidx.2 = getelementptr inbounds i8, i8* %key, i64 %inc.1
  %5 = load i8, i8* %arrayidx.2, align 1, !tbaa !14
  %conv.2 = zext i8 %5 to i32
  %add1.2 = add i32 %add.2, %conv.2
  %inc.2 = or i64 %i.010, 3
  %add.3 = mul i32 %add1.2, 33
  %arrayidx.3 = getelementptr inbounds i8, i8* %key, i64 %inc.2
  %6 = load i8, i8* %arrayidx.3, align 1, !tbaa !14
  %conv.3 = zext i8 %6 to i32
  %add1.3 = add i32 %add.3, %conv.3
  %inc.3 = or i64 %i.010, 4
  %add.4 = mul i32 %add1.3, 33
  %arrayidx.4 = getelementptr inbounds i8, i8* %key, i64 %inc.3
  %7 = load i8, i8* %arrayidx.4, align 1, !tbaa !14
  %conv.4 = zext i8 %7 to i32
  %add1.4 = add i32 %add.4, %conv.4
  %inc.4 = or i64 %i.010, 5
  %add.5 = mul i32 %add1.4, 33
  %arrayidx.5 = getelementptr inbounds i8, i8* %key, i64 %inc.4
  %8 = load i8, i8* %arrayidx.5, align 1, !tbaa !14
  %conv.5 = zext i8 %8 to i32
  %add1.5 = add i32 %add.5, %conv.5
  %inc.5 = or i64 %i.010, 6
  %add.6 = mul i32 %add1.5, 33
  %arrayidx.6 = getelementptr inbounds i8, i8* %key, i64 %inc.5
  %9 = load i8, i8* %arrayidx.6, align 1, !tbaa !14
  %conv.6 = zext i8 %9 to i32
  %add1.6 = add i32 %add.6, %conv.6
  %inc.6 = or i64 %i.010, 7
  %add.7 = mul i32 %add1.6, 33
  %arrayidx.7 = getelementptr inbounds i8, i8* %key, i64 %inc.6
  %10 = load i8, i8* %arrayidx.7, align 1, !tbaa !14
  %conv.7 = zext i8 %10 to i32
  %add1.7 = add i32 %add.7, %conv.7
  %inc.7 = add nuw i64 %i.010, 8
  %niter.nsub.7 = add i64 %niter, -8
  %niter.ncmp.7 = icmp eq i64 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.for.body_crit_edge, !llvm.loop !267

for.body.for.body_crit_edge:                      ; preds = %for.body
  %add.12 = mul i32 %add1.7, 33
  br label %for.body
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal11prune_cacheEv() local_unnamed_addr #0 {
entry:
  %0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !10
  %1 = load i64, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  %2 = load i64, i64* @_ZN6Halide7Runtime8Internal14max_cache_sizeE, align 8, !tbaa !110
  %cmp84 = icmp sgt i64 %1, %2
  %cmp185 = icmp ne %"struct.Halide::Runtime::Internal::CacheEntry"* %0, null
  %3 = and i1 %cmp185, %cmp84
  br i1 %3, label %while.body, label %while.end42

while.body:                                       ; preds = %entry, %if.end41
  %4 = phi i64 [ %114, %if.end41 ], [ %2, %entry ]
  %5 = phi i64 [ %115, %if.end41 ], [ %1, %entry ]
  %prune_candidate.086 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %6, %if.end41 ], [ %0, %entry ]
  %more_recent2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 1
  %6 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent2, align 8, !tbaa !268
  %in_use_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 7
  %7 = load i32, i32* %in_use_count, align 4, !tbaa !254
  %cmp3 = icmp eq i32 %7, 0
  br i1 %cmp3, label %if.then, label %if.end41

if.then:                                          ; preds = %while.body
  %hash = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 6
  %8 = load i32, i32* %hash, align 8, !tbaa !253
  %9 = and i32 %8, 255
  %idxprom = zext i32 %9 to i64
  %arrayidx = getelementptr inbounds [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 0, i64 %idxprom
  %10 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx, align 8, !tbaa !10
  %cmp5 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %10, %prune_candidate.086
  br i1 %cmp5, label %if.then6, label %while.cond9

if.then6:                                         ; preds = %if.then
  %next = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 0
  %11 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next, align 8, !tbaa !227
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %11, %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx, align 8, !tbaa !10
  br label %if.end21

while.cond9:                                      ; preds = %if.then, %land.rhs11
  %prev_hash_entry.0 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %12, %land.rhs11 ], [ %10, %if.then ]
  %cmp10.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %prev_hash_entry.0, null
  br i1 %cmp10.not, label %if.then18, label %land.rhs11

land.rhs11:                                       ; preds = %while.cond9
  %next12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prev_hash_entry.0, i64 0, i32 0
  %12 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next12, align 8, !tbaa !227
  %cmp13.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %12, %prune_candidate.086
  br i1 %cmp13.not, label %do.end, label %while.cond9, !llvm.loop !269

if.then18:                                        ; preds = %while.cond9
  tail call void @halide_print(i8* null, i8* getelementptr inbounds ([154 x i8], [154 x i8]* @.str.2.42, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end

do.end:                                           ; preds = %land.rhs11, %if.then18
  %next19 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 0
  %13 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next19, align 8, !tbaa !227
  %next20 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prev_hash_entry.0, i64 0, i32 0
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %13, %"struct.Halide::Runtime::Internal::CacheEntry"** %next20, align 8, !tbaa !227
  br label %if.end21

if.end21:                                         ; preds = %do.end, %if.then6
  %14 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !10
  %cmp22 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %14, %prune_candidate.086
  br i1 %cmp22, label %if.then23, label %if.end24

if.then23:                                        ; preds = %if.end21
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %6, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !10
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %if.end21
  %cmp25.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %6, null
  br i1 %cmp25.not, label %if.end28, label %if.then26

if.then26:                                        ; preds = %if.end24
  %less_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 2
  %15 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent, align 8, !tbaa !251
  %less_recent27 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %6, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %15, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent27, align 8, !tbaa !251
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %if.end24
  %16 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !10
  %cmp29 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %16, %prune_candidate.086
  %less_recent31 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 2
  %17 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent31, align 8, !tbaa !251
  br i1 %cmp29, label %if.then30, label %if.end32

if.then30:                                        ; preds = %if.end28
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %17, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !10
  br label %if.end32

if.end32:                                         ; preds = %if.then30, %if.end28
  %cmp34.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %17, null
  br i1 %cmp34.not, label %if.end37, label %if.then35

if.then35:                                        ; preds = %if.end32
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %6, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent31, align 8, !tbaa !251
  br label %if.end37

if.end37:                                         ; preds = %if.then35, %if.end32
  %tuple_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 8
  %18 = load i32, i32* %tuple_count, align 8, !tbaa !230
  %cmp3882.not = icmp eq i32 %18, 0
  br i1 %cmp3882.not, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end37
  %buf = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 11
  %19 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf, align 8, !tbaa !232
  %_ZN6Halide7Runtime8Internal18current_cache_sizeE.promoted = load i64, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  %wide.trip.count = zext i32 %18 to i64
  br label %for.body

for.cond.for.cond.cleanup_crit_edge:              ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit
  store i64 %sub, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.for.cond.cleanup_crit_edge, %if.end37
  tail call void @_ZN6Halide7Runtime8Internal10CacheEntry7destroyEv(%"struct.Halide::Runtime::Internal::CacheEntry"* nonnull dereferenceable(96) %prune_candidate.086) #16
  %20 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086 to i8*
  tail call void @halide_free(i8* null, i8* nonnull %20) #15
  %.pre92 = load i64, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  %.pre93 = load i64, i64* @_ZN6Halide7Runtime8Internal14max_cache_sizeE, align 8, !tbaa !110
  br label %if.end41

for.body:                                         ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %_ZNK15halide_buffer_t13size_in_bytesEv.exit ]
  %sub89 = phi i64 [ %_ZN6Halide7Runtime8Internal18current_cache_sizeE.promoted, %for.body.lr.ph ], [ %sub, %_ZNK15halide_buffer_t13size_in_bytesEv.exit ]
  %dimensions.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %19, i64 %indvars.iv, i32 5
  %21 = load i32, i32* %dimensions.i.i, align 4, !tbaa !175
  %cmp19.i.i = icmp sgt i32 %21, 0
  br i1 %cmp19.i.i, label %for.body.lr.ph.i.i, label %for.body._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge

for.body._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge: ; preds = %for.body
  %sub.i.neg.0 = add i64 0, -1
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

for.body.lr.ph.i.i:                               ; preds = %for.body
  %dim.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %19, i64 %indvars.iv, i32 6
  %22 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i.i, align 8, !tbaa !176
  %wide.trip.count.i.i = zext i32 %21 to i64
  %min.iters.check43 = icmp ult i32 %21, 17
  br i1 %min.iters.check43, label %for.body.i.i.preheader, label %vector.ph44

vector.ph44:                                      ; preds = %for.body.lr.ph.i.i
  %n.mod.vf45 = and i64 %wide.trip.count.i.i, 15
  %23 = icmp eq i64 %n.mod.vf45, 0
  %24 = select i1 %23, i64 16, i64 %n.mod.vf45
  %n.vec46 = sub nsw i64 %wide.trip.count.i.i, %24
  br label %vector.body42

vector.body42:                                    ; preds = %vector.body42, %vector.ph44
  %index47 = phi i64 [ 0, %vector.ph44 ], [ %index.next48, %vector.body42 ]
  %vec.ind51 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %vector.ph44 ], [ %vec.ind.next56, %vector.body42 ]
  %vec.phi57 = phi <4 x i64> [ zeroinitializer, %vector.ph44 ], [ %predphi73, %vector.body42 ]
  %vec.phi58 = phi <4 x i64> [ zeroinitializer, %vector.ph44 ], [ %predphi74, %vector.body42 ]
  %vec.phi59 = phi <4 x i64> [ zeroinitializer, %vector.ph44 ], [ %predphi75, %vector.body42 ]
  %vec.phi60 = phi <4 x i64> [ zeroinitializer, %vector.ph44 ], [ %predphi76, %vector.body42 ]
  %step.add52 = add <4 x i64> %vec.ind51, <i64 4, i64 4, i64 4, i64 4>
  %step.add53 = add <4 x i64> %vec.ind51, <i64 8, i64 8, i64 8, i64 8>
  %step.add54 = add <4 x i64> %vec.ind51, <i64 12, i64 12, i64 12, i64 12>
  %25 = or i64 %index47, 4
  %26 = or i64 %index47, 8
  %27 = or i64 %index47, 12
  %28 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %index47, i32 2
  %29 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %25, i32 2
  %30 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %26, i32 2
  %31 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %27, i32 2
  %32 = bitcast i32* %28 to <16 x i32>*
  %33 = bitcast i32* %29 to <16 x i32>*
  %34 = bitcast i32* %30 to <16 x i32>*
  %35 = bitcast i32* %31 to <16 x i32>*
  %wide.vec61 = load <16 x i32>, <16 x i32>* %32, align 4, !tbaa !182
  %wide.vec62 = load <16 x i32>, <16 x i32>* %33, align 4, !tbaa !182
  %wide.vec63 = load <16 x i32>, <16 x i32>* %34, align 4, !tbaa !182
  %wide.vec64 = load <16 x i32>, <16 x i32>* %35, align 4, !tbaa !182
  %strided.vec65 = shufflevector <16 x i32> %wide.vec61, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec66 = shufflevector <16 x i32> %wide.vec62, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec67 = shufflevector <16 x i32> %wide.vec63, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec68 = shufflevector <16 x i32> %wide.vec64, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %36 = icmp sgt <4 x i32> %strided.vec65, zeroinitializer
  %37 = icmp sgt <4 x i32> %strided.vec66, zeroinitializer
  %38 = icmp sgt <4 x i32> %strided.vec67, zeroinitializer
  %39 = icmp sgt <4 x i32> %strided.vec68, zeroinitializer
  %40 = zext <4 x i32> %strided.vec65 to <4 x i64>
  %41 = zext <4 x i32> %strided.vec66 to <4 x i64>
  %42 = zext <4 x i32> %strided.vec67 to <4 x i64>
  %43 = zext <4 x i32> %strided.vec68 to <4 x i64>
  %44 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, <4 x i64> %vec.ind51, i32 1
  %45 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, <4 x i64> %step.add52, i32 1
  %46 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, <4 x i64> %step.add53, i32 1
  %47 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, <4 x i64> %step.add54, i32 1
  %wide.masked.gather69 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %44, i32 4, <4 x i1> %36, <4 x i32> undef), !tbaa !178
  %wide.masked.gather70 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %45, i32 4, <4 x i1> %37, <4 x i32> undef), !tbaa !178
  %wide.masked.gather71 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %46, i32 4, <4 x i1> %38, <4 x i32> undef), !tbaa !178
  %wide.masked.gather72 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %47, i32 4, <4 x i1> %39, <4 x i32> undef), !tbaa !178
  %48 = add nsw <4 x i32> %wide.masked.gather69, <i32 -1, i32 -1, i32 -1, i32 -1>
  %49 = add nsw <4 x i32> %wide.masked.gather70, <i32 -1, i32 -1, i32 -1, i32 -1>
  %50 = add nsw <4 x i32> %wide.masked.gather71, <i32 -1, i32 -1, i32 -1, i32 -1>
  %51 = add nsw <4 x i32> %wide.masked.gather72, <i32 -1, i32 -1, i32 -1, i32 -1>
  %52 = sext <4 x i32> %48 to <4 x i64>
  %53 = sext <4 x i32> %49 to <4 x i64>
  %54 = sext <4 x i32> %50 to <4 x i64>
  %55 = sext <4 x i32> %51 to <4 x i64>
  %56 = mul nsw <4 x i64> %52, %40
  %57 = mul nsw <4 x i64> %53, %41
  %58 = mul nsw <4 x i64> %54, %42
  %59 = mul nsw <4 x i64> %55, %43
  %60 = select <4 x i1> %36, <4 x i64> %56, <4 x i64> zeroinitializer
  %predphi73 = add <4 x i64> %vec.phi57, %60
  %61 = select <4 x i1> %37, <4 x i64> %57, <4 x i64> zeroinitializer
  %predphi74 = add <4 x i64> %vec.phi58, %61
  %62 = select <4 x i1> %38, <4 x i64> %58, <4 x i64> zeroinitializer
  %predphi75 = add <4 x i64> %vec.phi59, %62
  %63 = select <4 x i1> %39, <4 x i64> %59, <4 x i64> zeroinitializer
  %predphi76 = add <4 x i64> %vec.phi60, %63
  %index.next48 = add i64 %index47, 16
  %vec.ind.next56 = add <4 x i64> %vec.ind51, <i64 16, i64 16, i64 16, i64 16>
  %64 = icmp eq i64 %index.next48, %n.vec46
  br i1 %64, label %middle.block40, label %vector.body42, !llvm.loop !270

middle.block40:                                   ; preds = %vector.body42
  %bin.rdx77 = add <4 x i64> %predphi74, %predphi73
  %bin.rdx78 = add <4 x i64> %predphi75, %bin.rdx77
  %bin.rdx79 = add <4 x i64> %predphi76, %bin.rdx78
  %65 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %bin.rdx79)
  br label %for.body.i.i.preheader

for.body.i.i.preheader:                           ; preds = %middle.block40, %for.body.lr.ph.i.i
  %indvars.iv.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %n.vec46, %middle.block40 ]
  %index.021.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %65, %middle.block40 ]
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.preheader, %if.end.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %if.end.i.i ], [ %indvars.iv.i.i.ph, %for.body.i.i.preheader ]
  %index.021.i.i = phi i64 [ %index.1.i.i, %if.end.i.i ], [ %index.021.i.i.ph, %for.body.i.i.preheader ]
  %stride2.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %indvars.iv.i.i, i32 2
  %66 = load i32, i32* %stride2.i.i, align 4, !tbaa !182
  %cmp3.i.i = icmp sgt i32 %66, 0
  br i1 %cmp3.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  %conv18.i.i = zext i32 %66 to i64
  %extent.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %indvars.iv.i.i, i32 1
  %67 = load i32, i32* %extent.i.i, align 4, !tbaa !178
  %sub.i.i = add nsw i32 %67, -1
  %conv7.i.i = sext i32 %sub.i.i to i64
  %mul.i.i = mul nsw i64 %conv7.i.i, %conv18.i.i
  %add.i.i = add nsw i64 %mul.i.i, %index.021.i.i
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %for.body.i.i
  %index.1.i.i = phi i64 [ %add.i.i, %if.then.i.i ], [ %index.021.i.i, %for.body.i.i ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %for.body.i13.i.preheader, label %for.body.i.i, !llvm.loop !271

for.body.i13.i.preheader:                         ; preds = %if.end.i.i
  %min.iters.check = icmp ult i32 %21, 17
  br i1 %min.iters.check, label %for.body.i13.i.preheader81, label %vector.ph

vector.ph:                                        ; preds = %for.body.i13.i.preheader
  %n.mod.vf = and i64 %wide.trip.count.i.i, 15
  %68 = icmp eq i64 %n.mod.vf, 0
  %69 = select i1 %68, i64 16, i64 %n.mod.vf
  %n.vec = sub nsw i64 %wide.trip.count.i.i, %69
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.ind = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %vector.ph ], [ %vec.ind.next, %vector.body ]
  %vec.phi = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi, %vector.body ]
  %vec.phi23 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi35, %vector.body ]
  %vec.phi24 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi36, %vector.body ]
  %vec.phi25 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi37, %vector.body ]
  %step.add = add <4 x i64> %vec.ind, <i64 4, i64 4, i64 4, i64 4>
  %step.add20 = add <4 x i64> %vec.ind, <i64 8, i64 8, i64 8, i64 8>
  %step.add21 = add <4 x i64> %vec.ind, <i64 12, i64 12, i64 12, i64 12>
  %70 = or i64 %index, 4
  %71 = or i64 %index, 8
  %72 = or i64 %index, 12
  %73 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %index, i32 2
  %74 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %70, i32 2
  %75 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %71, i32 2
  %76 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %72, i32 2
  %77 = bitcast i32* %73 to <16 x i32>*
  %78 = bitcast i32* %74 to <16 x i32>*
  %79 = bitcast i32* %75 to <16 x i32>*
  %80 = bitcast i32* %76 to <16 x i32>*
  %wide.vec = load <16 x i32>, <16 x i32>* %77, align 4, !tbaa !182
  %wide.vec26 = load <16 x i32>, <16 x i32>* %78, align 4, !tbaa !182
  %wide.vec27 = load <16 x i32>, <16 x i32>* %79, align 4, !tbaa !182
  %wide.vec28 = load <16 x i32>, <16 x i32>* %80, align 4, !tbaa !182
  %strided.vec = shufflevector <16 x i32> %wide.vec, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec29 = shufflevector <16 x i32> %wide.vec26, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec30 = shufflevector <16 x i32> %wide.vec27, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec31 = shufflevector <16 x i32> %wide.vec28, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %81 = icmp slt <4 x i32> %strided.vec, zeroinitializer
  %82 = icmp slt <4 x i32> %strided.vec29, zeroinitializer
  %83 = icmp slt <4 x i32> %strided.vec30, zeroinitializer
  %84 = icmp slt <4 x i32> %strided.vec31, zeroinitializer
  %85 = sext <4 x i32> %strided.vec to <4 x i64>
  %86 = sext <4 x i32> %strided.vec29 to <4 x i64>
  %87 = sext <4 x i32> %strided.vec30 to <4 x i64>
  %88 = sext <4 x i32> %strided.vec31 to <4 x i64>
  %89 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, <4 x i64> %vec.ind, i32 1
  %90 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, <4 x i64> %step.add, i32 1
  %91 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, <4 x i64> %step.add20, i32 1
  %92 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, <4 x i64> %step.add21, i32 1
  %wide.masked.gather = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %89, i32 4, <4 x i1> %81, <4 x i32> undef), !tbaa !178
  %wide.masked.gather32 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %90, i32 4, <4 x i1> %82, <4 x i32> undef), !tbaa !178
  %wide.masked.gather33 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %91, i32 4, <4 x i1> %83, <4 x i32> undef), !tbaa !178
  %wide.masked.gather34 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %92, i32 4, <4 x i1> %84, <4 x i32> undef), !tbaa !178
  %93 = add nsw <4 x i32> %wide.masked.gather, <i32 -1, i32 -1, i32 -1, i32 -1>
  %94 = add nsw <4 x i32> %wide.masked.gather32, <i32 -1, i32 -1, i32 -1, i32 -1>
  %95 = add nsw <4 x i32> %wide.masked.gather33, <i32 -1, i32 -1, i32 -1, i32 -1>
  %96 = add nsw <4 x i32> %wide.masked.gather34, <i32 -1, i32 -1, i32 -1, i32 -1>
  %97 = sext <4 x i32> %93 to <4 x i64>
  %98 = sext <4 x i32> %94 to <4 x i64>
  %99 = sext <4 x i32> %95 to <4 x i64>
  %100 = sext <4 x i32> %96 to <4 x i64>
  %101 = mul nsw <4 x i64> %97, %85
  %102 = mul nsw <4 x i64> %98, %86
  %103 = mul nsw <4 x i64> %99, %87
  %104 = mul nsw <4 x i64> %100, %88
  %105 = select <4 x i1> %81, <4 x i64> %101, <4 x i64> zeroinitializer
  %predphi = add <4 x i64> %vec.phi, %105
  %106 = select <4 x i1> %82, <4 x i64> %102, <4 x i64> zeroinitializer
  %predphi35 = add <4 x i64> %vec.phi23, %106
  %107 = select <4 x i1> %83, <4 x i64> %103, <4 x i64> zeroinitializer
  %predphi36 = add <4 x i64> %vec.phi24, %107
  %108 = select <4 x i1> %84, <4 x i64> %104, <4 x i64> zeroinitializer
  %predphi37 = add <4 x i64> %vec.phi25, %108
  %index.next = add i64 %index, 16
  %vec.ind.next = add <4 x i64> %vec.ind, <i64 16, i64 16, i64 16, i64 16>
  %109 = icmp eq i64 %index.next, %n.vec
  br i1 %109, label %middle.block, label %vector.body, !llvm.loop !272

middle.block:                                     ; preds = %vector.body
  %bin.rdx = add <4 x i64> %predphi35, %predphi
  %bin.rdx38 = add <4 x i64> %predphi36, %bin.rdx
  %bin.rdx39 = add <4 x i64> %predphi37, %bin.rdx38
  %110 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %bin.rdx39)
  br label %for.body.i13.i.preheader81

for.body.i13.i.preheader81:                       ; preds = %middle.block, %for.body.i13.i.preheader
  %indvars.iv.i10.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %n.vec, %middle.block ]
  %index.018.i.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %110, %middle.block ]
  br label %for.body.i13.i

for.body.i13.i:                                   ; preds = %for.body.i13.i.preheader81, %if.end.i24.i
  %indvars.iv.i10.i = phi i64 [ %indvars.iv.next.i22.i, %if.end.i24.i ], [ %indvars.iv.i10.i.ph, %for.body.i13.i.preheader81 ]
  %index.018.i.i = phi i64 [ %index.1.i21.i, %if.end.i24.i ], [ %index.018.i.i.ph, %for.body.i13.i.preheader81 ]
  %stride2.i11.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %indvars.iv.i10.i, i32 2
  %111 = load i32, i32* %stride2.i11.i, align 4, !tbaa !182
  %cmp3.i12.i = icmp slt i32 %111, 0
  br i1 %cmp3.i12.i, label %if.then.i20.i, label %if.end.i24.i

if.then.i20.i:                                    ; preds = %for.body.i13.i
  %conv.i14.i = sext i32 %111 to i64
  %extent.i15.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %indvars.iv.i10.i, i32 1
  %112 = load i32, i32* %extent.i15.i, align 4, !tbaa !178
  %sub.i16.i = add nsw i32 %112, -1
  %conv7.i17.i = sext i32 %sub.i16.i to i64
  %mul.i18.i = mul nsw i64 %conv7.i17.i, %conv.i14.i
  %add.i19.i = add nsw i64 %mul.i18.i, %index.018.i.i
  br label %if.end.i24.i

if.end.i24.i:                                     ; preds = %if.then.i20.i, %for.body.i13.i
  %index.1.i21.i = phi i64 [ %add.i19.i, %if.then.i20.i ], [ %index.018.i.i, %for.body.i13.i ]
  %indvars.iv.next.i22.i = add nuw nsw i64 %indvars.iv.i10.i, 1
  %exitcond.not.i23.i = icmp eq i64 %indvars.iv.next.i22.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i23.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i13.i, !llvm.loop !273

_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit: ; preds = %if.end.i24.i
  %add8.i.i.neg = xor i64 %index.1.i.i, -1
  %sub.i.neg.1 = add i64 %index.1.i21.i, %add8.i.i.neg
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

_ZNK15halide_buffer_t13size_in_bytesEv.exit:      ; preds = %for.body._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit
  %sub.i.neg.phi = phi i64 [ %sub.i.neg.0, %for.body._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge ], [ %sub.i.neg.1, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %index.0.lcssa.i9.i = phi i64 [ 0, %for.body._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge ], [ %index.1.i21.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %bits.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %19, i64 %indvars.iv, i32 4, i32 1
  %113 = load i8, i8* %bits.i.i, align 1, !tbaa !136
  %conv.i.i = zext i8 %113 to i64
  %add.i4.i = add nuw nsw i64 %conv.i.i, 7
  %div.i.i = lshr i64 %add.i4.i, 3
  %mul.i.neg = mul i64 %div.i.i, %sub.i.neg.phi
  %sub = add i64 %mul.i.neg, %sub89
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.for.cond.cleanup_crit_edge, label %for.body, !llvm.loop !274

if.end41:                                         ; preds = %for.cond.cleanup, %while.body
  %114 = phi i64 [ %.pre93, %for.cond.cleanup ], [ %4, %while.body ]
  %115 = phi i64 [ %.pre92, %for.cond.cleanup ], [ %5, %while.body ]
  %cmp = icmp sgt i64 %115, %114
  %cmp1 = icmp ne %"struct.Halide::Runtime::Internal::CacheEntry"* %6, null
  %116 = and i1 %cmp1, %cmp
  br i1 %116, label %while.body, label %while.end42, !llvm.loop !275

while.end42:                                      ; preds = %if.end41, %entry
  ret void
}

; Function Attrs: nounwind
define weak void @halide_memoization_cache_set_size(i64 %size) local_unnamed_addr #4 {
entry:
  %cmp = icmp eq i64 %size, 0
  %spec.store.select = select i1 %cmp, i64 1048576, i64 %size
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #15
  store i64 %spec.store.select, i64* @_ZN6Halide7Runtime8Internal14max_cache_sizeE, align 8, !tbaa !110
  tail call void @_ZN6Halide7Runtime8Internal11prune_cacheEv() #16
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #15
  ret void
}

; Function Attrs: nounwind
define weak i32 @halide_memoization_cache_lookup(i8* %user_context, i8* %cache_key, i32 %size, %struct.halide_buffer_t* %computed_bounds, i32 %tuple_count, %struct.halide_buffer_t** %tuple_buffers) local_unnamed_addr #4 {
entry:
  %conv = sext i32 %size to i64
  %call = tail call i32 @_ZN6Halide7Runtime8Internal8djb_hashEPKhm(i8* %cache_key, i64 %conv) #16
  %0 = and i32 %call, 255
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #15
  %idxprom = zext i32 %0 to i64
  %arrayidx = getelementptr inbounds [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 0, i64 %idxprom
  %entry3.0220 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx, align 8, !tbaa !10
  %cmp.not221 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0220, null
  br i1 %cmp.not221, label %for.cond75.preheader, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %cmp16215 = icmp sgt i32 %tuple_count, 0
  %1 = sext i32 %tuple_count to i64
  br i1 %cmp16215, label %while.body.us, label %while.body

while.body.us:                                    ; preds = %while.body.lr.ph, %if.end73.us
  %entry3.0222.us = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %entry3.0.us, %if.end73.us ], [ %entry3.0220, %while.body.lr.ph ]
  %hash.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222.us, i64 0, i32 6
  %2 = load i32, i32* %hash.us, align 8, !tbaa !253
  %cmp4.us = icmp eq i32 %2, %call
  br i1 %cmp4.us, label %land.lhs.true.us, label %if.end73.us

land.lhs.true.us:                                 ; preds = %while.body.us
  %key_size.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222.us, i64 0, i32 4
  %3 = load i64, i64* %key_size.us, align 8, !tbaa !252
  %cmp6.us = icmp eq i64 %3, %conv
  br i1 %cmp6.us, label %land.lhs.true7.us, label %if.end73.us

land.lhs.true7.us:                                ; preds = %land.lhs.true.us
  %key.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222.us, i64 0, i32 5
  %4 = load i8*, i8** %key.us, align 8, !tbaa !257
  %call9.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_m(i8* %4, i8* %cache_key, i64 %conv) #16
  br i1 %call9.us, label %land.lhs.true10.us, label %if.end73.us

land.lhs.true10.us:                               ; preds = %land.lhs.true7.us
  %computed_bounds11.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222.us, i64 0, i32 10
  %5 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %computed_bounds11.us, align 8, !tbaa !256
  %call12.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %computed_bounds, %struct.halide_dimension_t* %5) #16
  br i1 %call12.us, label %land.lhs.true13.us, label %if.end73.us

land.lhs.true13.us:                               ; preds = %land.lhs.true10.us
  %tuple_count14.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222.us, i64 0, i32 8
  %6 = load i32, i32* %tuple_count14.us, align 8, !tbaa !230
  %cmp15.us = icmp eq i32 %6, %tuple_count
  br i1 %cmp15.us, label %for.cond.preheader.us, label %if.end73.us

for.cond.preheader.us:                            ; preds = %land.lhs.true13.us
  %buf.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222.us, i64 0, i32 11
  br label %for.body.us

for.body.us:                                      ; preds = %for.body.us, %for.cond.preheader.us
  %indvars.iv226.us = phi i64 [ 0, %for.cond.preheader.us ], [ %indvars.iv.next227.us, %for.body.us ]
  %arrayidx18.us = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv226.us
  %7 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx18.us, align 8, !tbaa !10
  %8 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf.us, align 8, !tbaa !232
  %dim.us = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %8, i64 %indvars.iv226.us, i32 6
  %9 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.us, align 8, !tbaa !176
  %call21.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %7, %struct.halide_dimension_t* %9) #16
  %indvars.iv.next227.us = add nuw nsw i64 %indvars.iv226.us, 1
  %cmp16.us = icmp slt i64 %indvars.iv.next227.us, %1
  %10 = and i1 %cmp16.us, %call21.us
  br i1 %10, label %for.body.us, label %for.cond.cleanup.us, !llvm.loop !276

for.cond.cleanup.us:                              ; preds = %for.body.us
  br i1 %call21.us, label %if.then23, label %if.end73.us

if.end73.us:                                      ; preds = %for.cond.cleanup.us, %land.lhs.true13.us, %land.lhs.true10.us, %land.lhs.true7.us, %land.lhs.true.us, %while.body.us
  %next.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222.us, i64 0, i32 0
  %entry3.0.us = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next.us, align 8, !tbaa !10
  %cmp.not.us = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0.us, null
  br i1 %cmp.not.us, label %for.cond75.preheader, label %while.body.us, !llvm.loop !277

for.cond75.preheader:                             ; preds = %if.end73, %if.end73.us, %entry
  %cmp76210 = icmp sgt i32 %tuple_count, 0
  br i1 %cmp76210, label %for.body78.preheader, label %cleanup119

for.body78.preheader:                             ; preds = %for.cond75.preheader
  %wide.trip.count = zext i32 %tuple_count to i64
  br label %for.body78

while.body:                                       ; preds = %while.body.lr.ph, %if.end73
  %entry3.0222 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %entry3.0, %if.end73 ], [ %entry3.0220, %while.body.lr.ph ]
  %hash = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 6
  %11 = load i32, i32* %hash, align 8, !tbaa !253
  %cmp4 = icmp eq i32 %11, %call
  br i1 %cmp4, label %land.lhs.true, label %if.end73

land.lhs.true:                                    ; preds = %while.body
  %key_size = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 4
  %12 = load i64, i64* %key_size, align 8, !tbaa !252
  %cmp6 = icmp eq i64 %12, %conv
  br i1 %cmp6, label %land.lhs.true7, label %if.end73

land.lhs.true7:                                   ; preds = %land.lhs.true
  %key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 5
  %13 = load i8*, i8** %key, align 8, !tbaa !257
  %call9 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_m(i8* %13, i8* %cache_key, i64 %conv) #16
  br i1 %call9, label %land.lhs.true10, label %if.end73

land.lhs.true10:                                  ; preds = %land.lhs.true7
  %computed_bounds11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 10
  %14 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %computed_bounds11, align 8, !tbaa !256
  %call12 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %computed_bounds, %struct.halide_dimension_t* %14) #16
  br i1 %call12, label %land.lhs.true13, label %if.end73

land.lhs.true13:                                  ; preds = %land.lhs.true10
  %tuple_count14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 8
  %15 = load i32, i32* %tuple_count14, align 8, !tbaa !230
  %cmp15 = icmp eq i32 %15, %tuple_count
  br i1 %cmp15, label %if.then23, label %if.end73

if.then23:                                        ; preds = %land.lhs.true13, %for.cond.cleanup.us
  %.us-phi = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %entry3.0222.us, %for.cond.cleanup.us ], [ %entry3.0222, %land.lhs.true13 ]
  %16 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !10
  %cmp24.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %.us-phi, %16
  br i1 %cmp24.not, label %if.end57, label %do.body

do.body:                                          ; preds = %if.then23
  %more_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %.us-phi, i64 0, i32 1
  %17 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !268
  %cmp26.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %17, null
  br i1 %cmp26.not, label %if.then27, label %do.end

if.then27:                                        ; preds = %do.body
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @.str.3.43, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end

do.end:                                           ; preds = %if.then27, %do.body
  %less_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %.us-phi, i64 0, i32 2
  %18 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent, align 8, !tbaa !251
  %cmp28.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %18, null
  br i1 %cmp28.not, label %do.body33, label %if.then29

if.then29:                                        ; preds = %do.end
  %19 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !268
  %more_recent32 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %18, i64 0, i32 1
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %19, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent32, align 8, !tbaa !268
  %.pr = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !268
  br label %do.body41

do.body33:                                        ; preds = %do.end
  %20 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !10
  %cmp34 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %20, %.us-phi
  br i1 %cmp34, label %do.end38, label %if.then35

if.then35:                                        ; preds = %do.body33
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([156 x i8], [156 x i8]* @.str.4.44, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end38

do.end38:                                         ; preds = %if.then35, %do.body33
  %21 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !268
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %21, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !10
  br label %do.body41

do.body41:                                        ; preds = %do.end38, %if.then29
  %22 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %.pr, %if.then29 ], [ %21, %do.end38 ]
  %cmp43.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %22, null
  br i1 %cmp43.not, label %if.then44, label %do.end47

if.then44:                                        ; preds = %do.body41
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @.str.5.45, i64 0, i64 0)) #15
  tail call void @abort() #15
  %.pre = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !268
  br label %do.end47

do.end47:                                         ; preds = %if.then44, %do.body41
  %23 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %.pre, %if.then44 ], [ %22, %do.body41 ]
  %24 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent, align 8, !tbaa !251
  %less_recent50 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %23, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %24, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent50, align 8, !tbaa !251
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !268
  %25 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !10
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %25, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent, align 8, !tbaa !251
  %cmp53.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %25, null
  br i1 %cmp53.not, label %if.end56, label %if.then54

if.then54:                                        ; preds = %do.end47
  %more_recent55 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %25, i64 0, i32 1
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %.us-phi, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent55, align 8, !tbaa !268
  br label %if.end56

if.end56:                                         ; preds = %if.then54, %do.end47
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %.us-phi, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !10
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then23
  br i1 %cmp16215, label %for.body62.lr.ph, label %cleanup119.loopexit223

for.body62.lr.ph:                                 ; preds = %if.end57
  %buf66 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %.us-phi, i64 0, i32 11
  %wide.trip.count230 = zext i32 %tuple_count to i64
  %26 = add nsw i64 %wide.trip.count230, -1
  %xtraiter = and i64 %wide.trip.count230, 3
  %27 = icmp ult i64 %26, 3
  br i1 %27, label %cleanup119.loopexit223.loopexit.unr-lcssa, label %for.body62.lr.ph.new

for.body62.lr.ph.new:                             ; preds = %for.body62.lr.ph
  %unroll_iter = and i64 %wide.trip.count230, 4294967292
  br label %for.body62

for.body62:                                       ; preds = %for.body62, %for.body62.lr.ph.new
  %indvars.iv228 = phi i64 [ 0, %for.body62.lr.ph.new ], [ %indvars.iv.next229.3, %for.body62 ]
  %niter = phi i64 [ %unroll_iter, %for.body62.lr.ph.new ], [ %niter.nsub.3, %for.body62 ]
  %arrayidx65 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv228
  %28 = bitcast %struct.halide_buffer_t** %arrayidx65 to i8**
  %29 = load i8*, i8** %28, align 8, !tbaa !10
  %30 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf66, align 8, !tbaa !232
  %arrayidx68 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %30, i64 %indvars.iv228
  %31 = bitcast %struct.halide_buffer_t* %arrayidx68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(56) %29, i8* nonnull align 8 dereferenceable(56) %31, i64 56, i1 false), !tbaa.struct !263
  %indvars.iv.next229 = or i64 %indvars.iv228, 1
  %arrayidx65.1 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv.next229
  %32 = bitcast %struct.halide_buffer_t** %arrayidx65.1 to i8**
  %33 = load i8*, i8** %32, align 8, !tbaa !10
  %34 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf66, align 8, !tbaa !232
  %arrayidx68.1 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %34, i64 %indvars.iv.next229
  %35 = bitcast %struct.halide_buffer_t* %arrayidx68.1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(56) %33, i8* nonnull align 8 dereferenceable(56) %35, i64 56, i1 false), !tbaa.struct !263
  %indvars.iv.next229.1 = or i64 %indvars.iv228, 2
  %arrayidx65.2 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv.next229.1
  %36 = bitcast %struct.halide_buffer_t** %arrayidx65.2 to i8**
  %37 = load i8*, i8** %36, align 8, !tbaa !10
  %38 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf66, align 8, !tbaa !232
  %arrayidx68.2 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %38, i64 %indvars.iv.next229.1
  %39 = bitcast %struct.halide_buffer_t* %arrayidx68.2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(56) %37, i8* nonnull align 8 dereferenceable(56) %39, i64 56, i1 false), !tbaa.struct !263
  %indvars.iv.next229.2 = or i64 %indvars.iv228, 3
  %arrayidx65.3 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv.next229.2
  %40 = bitcast %struct.halide_buffer_t** %arrayidx65.3 to i8**
  %41 = load i8*, i8** %40, align 8, !tbaa !10
  %42 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf66, align 8, !tbaa !232
  %arrayidx68.3 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %42, i64 %indvars.iv.next229.2
  %43 = bitcast %struct.halide_buffer_t* %arrayidx68.3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(56) %41, i8* nonnull align 8 dereferenceable(56) %43, i64 56, i1 false), !tbaa.struct !263
  %indvars.iv.next229.3 = add nuw nsw i64 %indvars.iv228, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %cleanup119.loopexit223.loopexit.unr-lcssa, label %for.body62, !llvm.loop !278

if.end73:                                         ; preds = %land.lhs.true13, %land.lhs.true10, %land.lhs.true7, %land.lhs.true, %while.body
  %next = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 0
  %entry3.0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next, align 8, !tbaa !10
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0, null
  br i1 %cmp.not, label %for.cond75.preheader, label %while.body, !llvm.loop !277

for.body78:                                       ; preds = %for.inc114, %for.body78.preheader
  %indvars.iv = phi i64 [ 0, %for.body78.preheader ], [ %indvars.iv.next, %for.inc114 ]
  %arrayidx81 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv
  %44 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx81, align 8, !tbaa !10
  %dimensions.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %44, i64 0, i32 5
  %45 = load i32, i32* %dimensions.i.i, align 4, !tbaa !175
  %cmp19.i.i = icmp sgt i32 %45, 0
  br i1 %cmp19.i.i, label %for.body.lr.ph.i.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

for.body.lr.ph.i.i:                               ; preds = %for.body78
  %dim.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %44, i64 0, i32 6
  %46 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i.i, align 8, !tbaa !176
  %wide.trip.count.i.i = zext i32 %45 to i64
  %min.iters.check53 = icmp ult i32 %45, 17
  br i1 %min.iters.check53, label %for.body.i.i.preheader, label %vector.ph54

vector.ph54:                                      ; preds = %for.body.lr.ph.i.i
  %n.mod.vf55 = and i64 %wide.trip.count.i.i, 15
  %47 = icmp eq i64 %n.mod.vf55, 0
  %48 = select i1 %47, i64 16, i64 %n.mod.vf55
  %n.vec56 = sub nsw i64 %wide.trip.count.i.i, %48
  br label %vector.body52

vector.body52:                                    ; preds = %vector.body52, %vector.ph54
  %index57 = phi i64 [ 0, %vector.ph54 ], [ %index.next58, %vector.body52 ]
  %vec.ind61 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %vector.ph54 ], [ %vec.ind.next66, %vector.body52 ]
  %vec.phi67 = phi <4 x i64> [ zeroinitializer, %vector.ph54 ], [ %predphi83, %vector.body52 ]
  %vec.phi68 = phi <4 x i64> [ zeroinitializer, %vector.ph54 ], [ %predphi84, %vector.body52 ]
  %vec.phi69 = phi <4 x i64> [ zeroinitializer, %vector.ph54 ], [ %predphi85, %vector.body52 ]
  %vec.phi70 = phi <4 x i64> [ zeroinitializer, %vector.ph54 ], [ %predphi86, %vector.body52 ]
  %step.add62 = add <4 x i64> %vec.ind61, <i64 4, i64 4, i64 4, i64 4>
  %step.add63 = add <4 x i64> %vec.ind61, <i64 8, i64 8, i64 8, i64 8>
  %step.add64 = add <4 x i64> %vec.ind61, <i64 12, i64 12, i64 12, i64 12>
  %49 = or i64 %index57, 4
  %50 = or i64 %index57, 8
  %51 = or i64 %index57, 12
  %52 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, i64 %index57, i32 2
  %53 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, i64 %49, i32 2
  %54 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, i64 %50, i32 2
  %55 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, i64 %51, i32 2
  %56 = bitcast i32* %52 to <16 x i32>*
  %57 = bitcast i32* %53 to <16 x i32>*
  %58 = bitcast i32* %54 to <16 x i32>*
  %59 = bitcast i32* %55 to <16 x i32>*
  %wide.vec71 = load <16 x i32>, <16 x i32>* %56, align 4, !tbaa !182
  %wide.vec72 = load <16 x i32>, <16 x i32>* %57, align 4, !tbaa !182
  %wide.vec73 = load <16 x i32>, <16 x i32>* %58, align 4, !tbaa !182
  %wide.vec74 = load <16 x i32>, <16 x i32>* %59, align 4, !tbaa !182
  %strided.vec75 = shufflevector <16 x i32> %wide.vec71, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec76 = shufflevector <16 x i32> %wide.vec72, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec77 = shufflevector <16 x i32> %wide.vec73, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec78 = shufflevector <16 x i32> %wide.vec74, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %60 = icmp sgt <4 x i32> %strided.vec75, zeroinitializer
  %61 = icmp sgt <4 x i32> %strided.vec76, zeroinitializer
  %62 = icmp sgt <4 x i32> %strided.vec77, zeroinitializer
  %63 = icmp sgt <4 x i32> %strided.vec78, zeroinitializer
  %64 = zext <4 x i32> %strided.vec75 to <4 x i64>
  %65 = zext <4 x i32> %strided.vec76 to <4 x i64>
  %66 = zext <4 x i32> %strided.vec77 to <4 x i64>
  %67 = zext <4 x i32> %strided.vec78 to <4 x i64>
  %68 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, <4 x i64> %vec.ind61, i32 1
  %69 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, <4 x i64> %step.add62, i32 1
  %70 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, <4 x i64> %step.add63, i32 1
  %71 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, <4 x i64> %step.add64, i32 1
  %wide.masked.gather79 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %68, i32 4, <4 x i1> %60, <4 x i32> undef), !tbaa !178
  %wide.masked.gather80 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %69, i32 4, <4 x i1> %61, <4 x i32> undef), !tbaa !178
  %wide.masked.gather81 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %70, i32 4, <4 x i1> %62, <4 x i32> undef), !tbaa !178
  %wide.masked.gather82 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %71, i32 4, <4 x i1> %63, <4 x i32> undef), !tbaa !178
  %72 = add nsw <4 x i32> %wide.masked.gather79, <i32 -1, i32 -1, i32 -1, i32 -1>
  %73 = add nsw <4 x i32> %wide.masked.gather80, <i32 -1, i32 -1, i32 -1, i32 -1>
  %74 = add nsw <4 x i32> %wide.masked.gather81, <i32 -1, i32 -1, i32 -1, i32 -1>
  %75 = add nsw <4 x i32> %wide.masked.gather82, <i32 -1, i32 -1, i32 -1, i32 -1>
  %76 = sext <4 x i32> %72 to <4 x i64>
  %77 = sext <4 x i32> %73 to <4 x i64>
  %78 = sext <4 x i32> %74 to <4 x i64>
  %79 = sext <4 x i32> %75 to <4 x i64>
  %80 = mul nsw <4 x i64> %76, %64
  %81 = mul nsw <4 x i64> %77, %65
  %82 = mul nsw <4 x i64> %78, %66
  %83 = mul nsw <4 x i64> %79, %67
  %84 = select <4 x i1> %60, <4 x i64> %80, <4 x i64> zeroinitializer
  %predphi83 = add <4 x i64> %vec.phi67, %84
  %85 = select <4 x i1> %61, <4 x i64> %81, <4 x i64> zeroinitializer
  %predphi84 = add <4 x i64> %vec.phi68, %85
  %86 = select <4 x i1> %62, <4 x i64> %82, <4 x i64> zeroinitializer
  %predphi85 = add <4 x i64> %vec.phi69, %86
  %87 = select <4 x i1> %63, <4 x i64> %83, <4 x i64> zeroinitializer
  %predphi86 = add <4 x i64> %vec.phi70, %87
  %index.next58 = add i64 %index57, 16
  %vec.ind.next66 = add <4 x i64> %vec.ind61, <i64 16, i64 16, i64 16, i64 16>
  %88 = icmp eq i64 %index.next58, %n.vec56
  br i1 %88, label %middle.block50, label %vector.body52, !llvm.loop !279

middle.block50:                                   ; preds = %vector.body52
  %bin.rdx87 = add <4 x i64> %predphi84, %predphi83
  %bin.rdx88 = add <4 x i64> %predphi85, %bin.rdx87
  %bin.rdx89 = add <4 x i64> %predphi86, %bin.rdx88
  %89 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %bin.rdx89)
  br label %for.body.i.i.preheader

for.body.i.i.preheader:                           ; preds = %middle.block50, %for.body.lr.ph.i.i
  %indvars.iv.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %n.vec56, %middle.block50 ]
  %index.021.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %89, %middle.block50 ]
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.preheader, %if.end.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %if.end.i.i ], [ %indvars.iv.i.i.ph, %for.body.i.i.preheader ]
  %index.021.i.i = phi i64 [ %index.1.i.i, %if.end.i.i ], [ %index.021.i.i.ph, %for.body.i.i.preheader ]
  %stride2.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, i64 %indvars.iv.i.i, i32 2
  %90 = load i32, i32* %stride2.i.i, align 4, !tbaa !182
  %cmp3.i.i = icmp sgt i32 %90, 0
  br i1 %cmp3.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  %conv18.i.i = zext i32 %90 to i64
  %extent.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, i64 %indvars.iv.i.i, i32 1
  %91 = load i32, i32* %extent.i.i, align 4, !tbaa !178
  %sub.i.i = add nsw i32 %91, -1
  %conv7.i.i = sext i32 %sub.i.i to i64
  %mul.i.i = mul nsw i64 %conv7.i.i, %conv18.i.i
  %add.i.i = add nsw i64 %mul.i.i, %index.021.i.i
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %for.body.i.i
  %index.1.i.i = phi i64 [ %add.i.i, %if.then.i.i ], [ %index.021.i.i, %for.body.i.i ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %for.body.i13.i.preheader, label %for.body.i.i, !llvm.loop !280

for.body.i13.i.preheader:                         ; preds = %if.end.i.i
  %min.iters.check = icmp ult i32 %45, 17
  br i1 %min.iters.check, label %for.body.i13.i.preheader91, label %vector.ph

vector.ph:                                        ; preds = %for.body.i13.i.preheader
  %n.mod.vf = and i64 %wide.trip.count.i.i, 15
  %92 = icmp eq i64 %n.mod.vf, 0
  %93 = select i1 %92, i64 16, i64 %n.mod.vf
  %n.vec = sub nsw i64 %wide.trip.count.i.i, %93
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.ind = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %vector.ph ], [ %vec.ind.next, %vector.body ]
  %vec.phi = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi, %vector.body ]
  %vec.phi33 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi45, %vector.body ]
  %vec.phi34 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi46, %vector.body ]
  %vec.phi35 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi47, %vector.body ]
  %step.add = add <4 x i64> %vec.ind, <i64 4, i64 4, i64 4, i64 4>
  %step.add30 = add <4 x i64> %vec.ind, <i64 8, i64 8, i64 8, i64 8>
  %step.add31 = add <4 x i64> %vec.ind, <i64 12, i64 12, i64 12, i64 12>
  %94 = or i64 %index, 4
  %95 = or i64 %index, 8
  %96 = or i64 %index, 12
  %97 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, i64 %index, i32 2
  %98 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, i64 %94, i32 2
  %99 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, i64 %95, i32 2
  %100 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, i64 %96, i32 2
  %101 = bitcast i32* %97 to <16 x i32>*
  %102 = bitcast i32* %98 to <16 x i32>*
  %103 = bitcast i32* %99 to <16 x i32>*
  %104 = bitcast i32* %100 to <16 x i32>*
  %wide.vec = load <16 x i32>, <16 x i32>* %101, align 4, !tbaa !182
  %wide.vec36 = load <16 x i32>, <16 x i32>* %102, align 4, !tbaa !182
  %wide.vec37 = load <16 x i32>, <16 x i32>* %103, align 4, !tbaa !182
  %wide.vec38 = load <16 x i32>, <16 x i32>* %104, align 4, !tbaa !182
  %strided.vec = shufflevector <16 x i32> %wide.vec, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec39 = shufflevector <16 x i32> %wide.vec36, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec40 = shufflevector <16 x i32> %wide.vec37, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec41 = shufflevector <16 x i32> %wide.vec38, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %105 = icmp slt <4 x i32> %strided.vec, zeroinitializer
  %106 = icmp slt <4 x i32> %strided.vec39, zeroinitializer
  %107 = icmp slt <4 x i32> %strided.vec40, zeroinitializer
  %108 = icmp slt <4 x i32> %strided.vec41, zeroinitializer
  %109 = sext <4 x i32> %strided.vec to <4 x i64>
  %110 = sext <4 x i32> %strided.vec39 to <4 x i64>
  %111 = sext <4 x i32> %strided.vec40 to <4 x i64>
  %112 = sext <4 x i32> %strided.vec41 to <4 x i64>
  %113 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, <4 x i64> %vec.ind, i32 1
  %114 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, <4 x i64> %step.add, i32 1
  %115 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, <4 x i64> %step.add30, i32 1
  %116 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, <4 x i64> %step.add31, i32 1
  %wide.masked.gather = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %113, i32 4, <4 x i1> %105, <4 x i32> undef), !tbaa !178
  %wide.masked.gather42 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %114, i32 4, <4 x i1> %106, <4 x i32> undef), !tbaa !178
  %wide.masked.gather43 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %115, i32 4, <4 x i1> %107, <4 x i32> undef), !tbaa !178
  %wide.masked.gather44 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %116, i32 4, <4 x i1> %108, <4 x i32> undef), !tbaa !178
  %117 = add nsw <4 x i32> %wide.masked.gather, <i32 -1, i32 -1, i32 -1, i32 -1>
  %118 = add nsw <4 x i32> %wide.masked.gather42, <i32 -1, i32 -1, i32 -1, i32 -1>
  %119 = add nsw <4 x i32> %wide.masked.gather43, <i32 -1, i32 -1, i32 -1, i32 -1>
  %120 = add nsw <4 x i32> %wide.masked.gather44, <i32 -1, i32 -1, i32 -1, i32 -1>
  %121 = sext <4 x i32> %117 to <4 x i64>
  %122 = sext <4 x i32> %118 to <4 x i64>
  %123 = sext <4 x i32> %119 to <4 x i64>
  %124 = sext <4 x i32> %120 to <4 x i64>
  %125 = mul nsw <4 x i64> %121, %109
  %126 = mul nsw <4 x i64> %122, %110
  %127 = mul nsw <4 x i64> %123, %111
  %128 = mul nsw <4 x i64> %124, %112
  %129 = select <4 x i1> %105, <4 x i64> %125, <4 x i64> zeroinitializer
  %predphi = add <4 x i64> %vec.phi, %129
  %130 = select <4 x i1> %106, <4 x i64> %126, <4 x i64> zeroinitializer
  %predphi45 = add <4 x i64> %vec.phi33, %130
  %131 = select <4 x i1> %107, <4 x i64> %127, <4 x i64> zeroinitializer
  %predphi46 = add <4 x i64> %vec.phi34, %131
  %132 = select <4 x i1> %108, <4 x i64> %128, <4 x i64> zeroinitializer
  %predphi47 = add <4 x i64> %vec.phi35, %132
  %index.next = add i64 %index, 16
  %vec.ind.next = add <4 x i64> %vec.ind, <i64 16, i64 16, i64 16, i64 16>
  %133 = icmp eq i64 %index.next, %n.vec
  br i1 %133, label %middle.block, label %vector.body, !llvm.loop !281

middle.block:                                     ; preds = %vector.body
  %bin.rdx = add <4 x i64> %predphi45, %predphi
  %bin.rdx48 = add <4 x i64> %predphi46, %bin.rdx
  %bin.rdx49 = add <4 x i64> %predphi47, %bin.rdx48
  %134 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %bin.rdx49)
  br label %for.body.i13.i.preheader91

for.body.i13.i.preheader91:                       ; preds = %middle.block, %for.body.i13.i.preheader
  %indvars.iv.i10.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %n.vec, %middle.block ]
  %index.018.i.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %134, %middle.block ]
  br label %for.body.i13.i

for.body.i13.i:                                   ; preds = %for.body.i13.i.preheader91, %if.end.i24.i
  %indvars.iv.i10.i = phi i64 [ %indvars.iv.next.i22.i, %if.end.i24.i ], [ %indvars.iv.i10.i.ph, %for.body.i13.i.preheader91 ]
  %index.018.i.i = phi i64 [ %index.1.i21.i, %if.end.i24.i ], [ %index.018.i.i.ph, %for.body.i13.i.preheader91 ]
  %stride2.i11.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, i64 %indvars.iv.i10.i, i32 2
  %135 = load i32, i32* %stride2.i11.i, align 4, !tbaa !182
  %cmp3.i12.i = icmp slt i32 %135, 0
  br i1 %cmp3.i12.i, label %if.then.i20.i, label %if.end.i24.i

if.then.i20.i:                                    ; preds = %for.body.i13.i
  %conv.i14.i = sext i32 %135 to i64
  %extent.i15.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, i64 %indvars.iv.i10.i, i32 1
  %136 = load i32, i32* %extent.i15.i, align 4, !tbaa !178
  %sub.i16.i = add nsw i32 %136, -1
  %conv7.i17.i = sext i32 %sub.i16.i to i64
  %mul.i18.i = mul nsw i64 %conv7.i17.i, %conv.i14.i
  %add.i19.i = add nsw i64 %mul.i18.i, %index.018.i.i
  br label %if.end.i24.i

if.end.i24.i:                                     ; preds = %if.then.i20.i, %for.body.i13.i
  %index.1.i21.i = phi i64 [ %add.i19.i, %if.then.i20.i ], [ %index.018.i.i, %for.body.i13.i ]
  %indvars.iv.next.i22.i = add nuw nsw i64 %indvars.iv.i10.i, 1
  %exitcond.not.i23.i = icmp eq i64 %indvars.iv.next.i22.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i23.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i13.i, !llvm.loop !282

_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit: ; preds = %if.end.i24.i
  %add8.i.i = add nsw i64 %index.1.i.i, 1
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

_ZNK15halide_buffer_t13size_in_bytesEv.exit:      ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, %for.body78
  %add8.i27.i = phi i64 [ 1, %for.body78 ], [ %add8.i.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %index.0.lcssa.i9.i = phi i64 [ 0, %for.body78 ], [ %index.1.i21.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %sub.i = sub nsw i64 %add8.i27.i, %index.0.lcssa.i9.i
  %bits.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %44, i64 0, i32 4, i32 1
  %137 = load i8, i8* %bits.i.i, align 1, !tbaa !136
  %conv.i.i = zext i8 %137 to i64
  %add.i4.i = add nuw nsw i64 %conv.i.i, 7
  %div.i.i = lshr i64 %add.i4.i, 3
  %mul.i = mul i64 %div.i.i, %sub.i
  %add84 = add i64 %mul.i, 64
  %call85 = tail call i8* @halide_malloc(i8* %user_context, i64 %add84) #15
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %44, i64 0, i32 2
  store i8* %call85, i8** %host, align 8, !tbaa !172
  %cmp87 = icmp eq i8* %call85, null
  br i1 %cmp87, label %for.cond89.preheader, label %for.inc114

for.cond89.preheader:                             ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit
  %cmp90208.not = icmp eq i64 %indvars.iv, 0
  br i1 %cmp90208.not, label %cleanup119, label %for.body92

for.body92:                                       ; preds = %for.cond89.preheader, %for.body92
  %indvars.iv224 = phi i64 [ %indvars.iv.next225, %for.body92 ], [ %indvars.iv, %for.cond89.preheader ]
  %sub = add nuw nsw i64 %indvars.iv224, 4294967295
  %138 = and i64 %sub, 4294967295
  %arrayidx94 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %138
  %139 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx94, align 8, !tbaa !10
  %host95 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %139, i64 0, i32 2
  %140 = load i8*, i8** %host95, align 8, !tbaa !172
  %call96 = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %140) #16
  %141 = bitcast %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call96 to i8*
  tail call void @halide_free(i8* %user_context, i8* %141) #15
  %142 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx94, align 8, !tbaa !10
  %host100 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %142, i64 0, i32 2
  store i8* null, i8** %host100, align 8, !tbaa !172
  %143 = icmp sgt i64 %indvars.iv224, 1
  %indvars.iv.next225 = add nsw i64 %indvars.iv224, -1
  br i1 %143, label %for.body92, label %cleanup119, !llvm.loop !283

for.inc114:                                       ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit
  %add.ptr = getelementptr inbounds i8, i8* %call85, i64 64
  store i8* %add.ptr, i8** %host, align 8, !tbaa !172
  %call108 = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* nonnull %add.ptr) #16
  %hash109 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheBlockHeader", %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call108, i64 0, i32 1
  store i32 %call, i32* %hash109, align 8, !tbaa !284
  %entry110 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheBlockHeader", %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call108, i64 0, i32 0
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %entry110, align 8, !tbaa !286
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %cleanup119, label %for.body78, !llvm.loop !287

cleanup119.loopexit223.loopexit.unr-lcssa:        ; preds = %for.body62, %for.body62.lr.ph
  %indvars.iv228.unr = phi i64 [ 0, %for.body62.lr.ph ], [ %indvars.iv.next229.3, %for.body62 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %cleanup119.loopexit223, label %for.body62.epil

for.body62.epil:                                  ; preds = %cleanup119.loopexit223.loopexit.unr-lcssa, %for.body62.epil
  %indvars.iv228.epil = phi i64 [ %indvars.iv.next229.epil, %for.body62.epil ], [ %indvars.iv228.unr, %cleanup119.loopexit223.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body62.epil ], [ %xtraiter, %cleanup119.loopexit223.loopexit.unr-lcssa ]
  %arrayidx65.epil = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv228.epil
  %144 = bitcast %struct.halide_buffer_t** %arrayidx65.epil to i8**
  %145 = load i8*, i8** %144, align 8, !tbaa !10
  %146 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf66, align 8, !tbaa !232
  %arrayidx68.epil = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %146, i64 %indvars.iv228.epil
  %147 = bitcast %struct.halide_buffer_t* %arrayidx68.epil to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(56) %145, i8* nonnull align 8 dereferenceable(56) %147, i64 56, i1 false), !tbaa.struct !263
  %indvars.iv.next229.epil = add nuw nsw i64 %indvars.iv228.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp.not, label %cleanup119.loopexit223, label %for.body62.epil, !llvm.loop !288

cleanup119.loopexit223:                           ; preds = %cleanup119.loopexit223.loopexit.unr-lcssa, %for.body62.epil, %if.end57
  %in_use_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %.us-phi, i64 0, i32 7
  %148 = load i32, i32* %in_use_count, align 4, !tbaa !254
  %add = add i32 %148, %tuple_count
  store i32 %add, i32* %in_use_count, align 4, !tbaa !254
  br label %cleanup119

cleanup119:                                       ; preds = %for.inc114, %for.body92, %cleanup119.loopexit223, %for.cond89.preheader, %for.cond75.preheader
  %retval.6 = phi i32 [ 1, %for.cond75.preheader ], [ 0, %cleanup119.loopexit223 ], [ -1, %for.cond89.preheader ], [ -1, %for.body92 ], [ 1, %for.inc114 ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #15
  ret i32 %retval.6
}

; Function Attrs: nounwind
define weak i32 @halide_memoization_cache_store(i8* %user_context, i8* %cache_key, i32 %size, %struct.halide_buffer_t* %computed_bounds, i32 %tuple_count, %struct.halide_buffer_t** %tuple_buffers, i1 zeroext %has_eviction_key, i64 %eviction_key) local_unnamed_addr #4 {
entry:
  %0 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, align 8, !tbaa !10
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %0, i64 0, i32 2
  %1 = load i8*, i8** %host, align 8, !tbaa !172
  %call = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %1) #16
  %hash = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheBlockHeader", %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call, i64 0, i32 1
  %2 = load i32, i32* %hash, align 8, !tbaa !284
  %3 = and i32 %2, 255
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #15
  %idxprom = zext i32 %3 to i64
  %arrayidx7 = getelementptr inbounds [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 0, i64 %idxprom
  %entry6.0228 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx7, align 8, !tbaa !10
  %cmp.not229 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0228, null
  br i1 %cmp.not229, label %for.cond61.preheader, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %conv10 = sext i32 %size to i64
  %cmp22221 = icmp sgt i32 %tuple_count, 0
  br i1 %cmp22221, label %while.body.us.preheader, label %while.body

while.body.us.preheader:                          ; preds = %while.body.lr.ph
  %4 = zext i32 %tuple_count to i64
  br label %while.body.us

while.body.us:                                    ; preds = %if.end59.us, %while.body.us.preheader
  %entry6.0230.us = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %entry6.0.us, %if.end59.us ], [ %entry6.0228, %while.body.us.preheader ]
  %hash8.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 6
  %5 = load i32, i32* %hash8.us, align 8, !tbaa !253
  %cmp9.us = icmp eq i32 %5, %2
  br i1 %cmp9.us, label %land.lhs.true.us, label %if.end59.us

land.lhs.true.us:                                 ; preds = %while.body.us
  %key_size.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 4
  %6 = load i64, i64* %key_size.us, align 8, !tbaa !252
  %cmp11.us = icmp eq i64 %6, %conv10
  br i1 %cmp11.us, label %land.lhs.true12.us, label %if.end59.us

land.lhs.true12.us:                               ; preds = %land.lhs.true.us
  %key.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 5
  %7 = load i8*, i8** %key.us, align 8, !tbaa !257
  %call14.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_m(i8* %7, i8* %cache_key, i64 %conv10) #16
  br i1 %call14.us, label %land.lhs.true15.us, label %if.end59.us

land.lhs.true15.us:                               ; preds = %land.lhs.true12.us
  %computed_bounds16.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 10
  %8 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %computed_bounds16.us, align 8, !tbaa !256
  %call17.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %computed_bounds, %struct.halide_dimension_t* %8) #16
  br i1 %call17.us, label %land.lhs.true18.us, label %if.end59.us

land.lhs.true18.us:                               ; preds = %land.lhs.true15.us
  %tuple_count19.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 8
  %9 = load i32, i32* %tuple_count19.us, align 8, !tbaa !230
  %cmp20.us = icmp eq i32 %9, %tuple_count
  br i1 %cmp20.us, label %for.body.lr.ph.us, label %if.end59.us

for.cond.cleanup.us:                              ; preds = %for.body.us
  br i1 %call30.us, label %do.body.us, label %if.end59.us

do.body.us:                                       ; preds = %for.cond.cleanup.us
  %10 = and i8 %spec.select.us, 1
  %tobool41.not.us = icmp eq i8 %10, 0
  br i1 %tobool41.not.us, label %if.then42.us, label %for.body48.us.preheader

for.body48.us.preheader:                          ; preds = %if.then42.us, %do.body.us
  br label %for.body48.us

if.then42.us:                                     ; preds = %do.body.us
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([150 x i8], [150 x i8]* @.str.9.46, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %for.body48.us.preheader

if.end59.us:                                      ; preds = %for.cond.cleanup.us, %land.lhs.true18.us, %land.lhs.true15.us, %land.lhs.true12.us, %land.lhs.true.us, %while.body.us
  %next.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 0
  %entry6.0.us = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next.us, align 8, !tbaa !10
  %cmp.not.us = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0.us, null
  br i1 %cmp.not.us, label %for.cond61.preheader, label %while.body.us, !llvm.loop !289

for.body48.us:                                    ; preds = %for.body48.us.preheader, %for.body48.us
  %indvars.iv244 = phi i64 [ %indvars.iv.next245, %for.body48.us ], [ 0, %for.body48.us.preheader ]
  %arrayidx50.us = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv244
  %11 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx50.us, align 8, !tbaa !10
  %host51.us = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %11, i64 0, i32 2
  %12 = load i8*, i8** %host51.us, align 8, !tbaa !172
  %call52.us = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %12) #16
  %entry53.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheBlockHeader", %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call52.us, i64 0, i32 0
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %entry53.us, align 8, !tbaa !286
  %indvars.iv.next245 = add nuw nsw i64 %indvars.iv244, 1
  %exitcond247.not = icmp eq i64 %indvars.iv.next245, %4
  br i1 %exitcond247.not, label %cleanup132, label %for.body48.us, !llvm.loop !290

for.body.us:                                      ; preds = %for.body.lr.ph.us, %for.body.us
  %13 = phi %struct.halide_buffer_t* [ %.pre, %for.body.lr.ph.us ], [ %16, %for.body.us ]
  %indvars.iv242 = phi i64 [ 0, %for.body.lr.ph.us ], [ %indvars.iv.next243, %for.body.us ]
  %no_host_pointers_equal.0222.us = phi i8 [ 1, %for.body.lr.ph.us ], [ %spec.select.us, %for.body.us ]
  %arrayidx24.us = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv242
  %14 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx24.us, align 8, !tbaa !10
  %dim.us = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %13, i64 %indvars.iv242, i32 6
  %15 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.us, align 8, !tbaa !176
  %call30.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %14, %struct.halide_dimension_t* %15) #16
  %16 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf27.us, align 8, !tbaa !232
  %host35.us = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %16, i64 %indvars.iv242, i32 2
  %17 = load i8*, i8** %host35.us, align 8, !tbaa !172
  %host36.us = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %14, i64 0, i32 2
  %18 = load i8*, i8** %host36.us, align 8, !tbaa !172
  %cmp37.us = icmp eq i8* %17, %18
  %spec.select.us = select i1 %cmp37.us, i8 0, i8 %no_host_pointers_equal.0222.us
  %indvars.iv.next243 = add nuw nsw i64 %indvars.iv242, 1
  %cmp22.us = icmp ult i64 %indvars.iv.next243, %4
  %19 = and i1 %cmp22.us, %call30.us
  br i1 %19, label %for.body.us, label %for.cond.cleanup.us, !llvm.loop !291

for.body.lr.ph.us:                                ; preds = %land.lhs.true18.us
  %buf27.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 11
  %.pre = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf27.us, align 8, !tbaa !232
  br label %for.body.us

for.cond61.preheader:                             ; preds = %if.end59, %if.end59.us, %entry
  %cmp62218 = icmp sgt i32 %tuple_count, 0
  br i1 %cmp62218, label %for.body64.preheader, label %for.cond.cleanup63

for.body64.preheader:                             ; preds = %for.cond61.preheader
  %wide.trip.count240 = zext i32 %tuple_count to i64
  br label %for.body64

while.body:                                       ; preds = %while.body.lr.ph, %if.end59
  %entry6.0230 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %entry6.0, %if.end59 ], [ %entry6.0228, %while.body.lr.ph ]
  %hash8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230, i64 0, i32 6
  %20 = load i32, i32* %hash8, align 8, !tbaa !253
  %cmp9 = icmp eq i32 %20, %2
  br i1 %cmp9, label %land.lhs.true, label %if.end59

land.lhs.true:                                    ; preds = %while.body
  %key_size = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230, i64 0, i32 4
  %21 = load i64, i64* %key_size, align 8, !tbaa !252
  %cmp11 = icmp eq i64 %21, %conv10
  br i1 %cmp11, label %land.lhs.true12, label %if.end59

land.lhs.true12:                                  ; preds = %land.lhs.true
  %key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230, i64 0, i32 5
  %22 = load i8*, i8** %key, align 8, !tbaa !257
  %call14 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_m(i8* %22, i8* %cache_key, i64 %conv10) #16
  br i1 %call14, label %land.lhs.true15, label %if.end59

land.lhs.true15:                                  ; preds = %land.lhs.true12
  %computed_bounds16 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230, i64 0, i32 10
  %23 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %computed_bounds16, align 8, !tbaa !256
  %call17 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %computed_bounds, %struct.halide_dimension_t* %23) #16
  br i1 %call17, label %land.lhs.true18, label %if.end59

land.lhs.true18:                                  ; preds = %land.lhs.true15
  %tuple_count19 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230, i64 0, i32 8
  %24 = load i32, i32* %tuple_count19, align 8, !tbaa !230
  %cmp20 = icmp eq i32 %24, %tuple_count
  br i1 %cmp20, label %cleanup132, label %if.end59

if.end59:                                         ; preds = %land.lhs.true18, %land.lhs.true15, %land.lhs.true12, %land.lhs.true, %while.body
  %next = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230, i64 0, i32 0
  %entry6.0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next, align 8, !tbaa !10
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0, null
  br i1 %cmp.not, label %for.cond61.preheader, label %while.body, !llvm.loop !289

for.cond.cleanup63:                               ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit, %for.cond61.preheader
  %added_size.0.lcssa = phi i64 [ 0, %for.cond61.preheader ], [ %add, %_ZNK15halide_buffer_t13size_in_bytesEv.exit ]
  %25 = load i64, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  %add73 = add i64 %25, %added_size.0.lcssa
  store i64 %add73, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  tail call void @_ZN6Halide7Runtime8Internal11prune_cacheEv() #16
  %call74 = tail call i8* @halide_malloc(i8* null, i64 96) #15
  %tobool75.not = icmp eq i8* %call74, null
  br i1 %tobool75.not, label %if.then83, label %if.then76

for.body64:                                       ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit, %for.body64.preheader
  %indvars.iv238 = phi i64 [ 0, %for.body64.preheader ], [ %indvars.iv.next239, %_ZNK15halide_buffer_t13size_in_bytesEv.exit ]
  %added_size.0219 = phi i64 [ 0, %for.body64.preheader ], [ %add, %_ZNK15halide_buffer_t13size_in_bytesEv.exit ]
  %arrayidx67 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv238
  %26 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx67, align 8, !tbaa !10
  %dimensions.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %26, i64 0, i32 5
  %27 = load i32, i32* %dimensions.i.i, align 4, !tbaa !175
  %cmp19.i.i = icmp sgt i32 %27, 0
  br i1 %cmp19.i.i, label %for.body.lr.ph.i.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

for.body.lr.ph.i.i:                               ; preds = %for.body64
  %dim.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %26, i64 0, i32 6
  %28 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i.i, align 8, !tbaa !176
  %wide.trip.count.i.i = zext i32 %27 to i64
  %min.iters.check39 = icmp ult i32 %27, 17
  br i1 %min.iters.check39, label %for.body.i.i.preheader, label %vector.ph40

vector.ph40:                                      ; preds = %for.body.lr.ph.i.i
  %n.mod.vf41 = and i64 %wide.trip.count.i.i, 15
  %29 = icmp eq i64 %n.mod.vf41, 0
  %30 = select i1 %29, i64 16, i64 %n.mod.vf41
  %n.vec42 = sub nsw i64 %wide.trip.count.i.i, %30
  br label %vector.body38

vector.body38:                                    ; preds = %vector.body38, %vector.ph40
  %index43 = phi i64 [ 0, %vector.ph40 ], [ %index.next44, %vector.body38 ]
  %vec.ind47 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %vector.ph40 ], [ %vec.ind.next52, %vector.body38 ]
  %vec.phi53 = phi <4 x i64> [ zeroinitializer, %vector.ph40 ], [ %predphi69, %vector.body38 ]
  %vec.phi54 = phi <4 x i64> [ zeroinitializer, %vector.ph40 ], [ %predphi70, %vector.body38 ]
  %vec.phi55 = phi <4 x i64> [ zeroinitializer, %vector.ph40 ], [ %predphi71, %vector.body38 ]
  %vec.phi56 = phi <4 x i64> [ zeroinitializer, %vector.ph40 ], [ %predphi72, %vector.body38 ]
  %step.add48 = add <4 x i64> %vec.ind47, <i64 4, i64 4, i64 4, i64 4>
  %step.add49 = add <4 x i64> %vec.ind47, <i64 8, i64 8, i64 8, i64 8>
  %step.add50 = add <4 x i64> %vec.ind47, <i64 12, i64 12, i64 12, i64 12>
  %31 = or i64 %index43, 4
  %32 = or i64 %index43, 8
  %33 = or i64 %index43, 12
  %34 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %index43, i32 2
  %35 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %31, i32 2
  %36 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %32, i32 2
  %37 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %33, i32 2
  %38 = bitcast i32* %34 to <16 x i32>*
  %39 = bitcast i32* %35 to <16 x i32>*
  %40 = bitcast i32* %36 to <16 x i32>*
  %41 = bitcast i32* %37 to <16 x i32>*
  %wide.vec57 = load <16 x i32>, <16 x i32>* %38, align 4, !tbaa !182
  %wide.vec58 = load <16 x i32>, <16 x i32>* %39, align 4, !tbaa !182
  %wide.vec59 = load <16 x i32>, <16 x i32>* %40, align 4, !tbaa !182
  %wide.vec60 = load <16 x i32>, <16 x i32>* %41, align 4, !tbaa !182
  %strided.vec61 = shufflevector <16 x i32> %wide.vec57, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec62 = shufflevector <16 x i32> %wide.vec58, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec63 = shufflevector <16 x i32> %wide.vec59, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec64 = shufflevector <16 x i32> %wide.vec60, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %42 = icmp sgt <4 x i32> %strided.vec61, zeroinitializer
  %43 = icmp sgt <4 x i32> %strided.vec62, zeroinitializer
  %44 = icmp sgt <4 x i32> %strided.vec63, zeroinitializer
  %45 = icmp sgt <4 x i32> %strided.vec64, zeroinitializer
  %46 = zext <4 x i32> %strided.vec61 to <4 x i64>
  %47 = zext <4 x i32> %strided.vec62 to <4 x i64>
  %48 = zext <4 x i32> %strided.vec63 to <4 x i64>
  %49 = zext <4 x i32> %strided.vec64 to <4 x i64>
  %50 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, <4 x i64> %vec.ind47, i32 1
  %51 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, <4 x i64> %step.add48, i32 1
  %52 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, <4 x i64> %step.add49, i32 1
  %53 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, <4 x i64> %step.add50, i32 1
  %wide.masked.gather65 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %50, i32 4, <4 x i1> %42, <4 x i32> undef), !tbaa !178
  %wide.masked.gather66 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %51, i32 4, <4 x i1> %43, <4 x i32> undef), !tbaa !178
  %wide.masked.gather67 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %52, i32 4, <4 x i1> %44, <4 x i32> undef), !tbaa !178
  %wide.masked.gather68 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %53, i32 4, <4 x i1> %45, <4 x i32> undef), !tbaa !178
  %54 = add nsw <4 x i32> %wide.masked.gather65, <i32 -1, i32 -1, i32 -1, i32 -1>
  %55 = add nsw <4 x i32> %wide.masked.gather66, <i32 -1, i32 -1, i32 -1, i32 -1>
  %56 = add nsw <4 x i32> %wide.masked.gather67, <i32 -1, i32 -1, i32 -1, i32 -1>
  %57 = add nsw <4 x i32> %wide.masked.gather68, <i32 -1, i32 -1, i32 -1, i32 -1>
  %58 = sext <4 x i32> %54 to <4 x i64>
  %59 = sext <4 x i32> %55 to <4 x i64>
  %60 = sext <4 x i32> %56 to <4 x i64>
  %61 = sext <4 x i32> %57 to <4 x i64>
  %62 = mul nsw <4 x i64> %58, %46
  %63 = mul nsw <4 x i64> %59, %47
  %64 = mul nsw <4 x i64> %60, %48
  %65 = mul nsw <4 x i64> %61, %49
  %66 = select <4 x i1> %42, <4 x i64> %62, <4 x i64> zeroinitializer
  %predphi69 = add <4 x i64> %vec.phi53, %66
  %67 = select <4 x i1> %43, <4 x i64> %63, <4 x i64> zeroinitializer
  %predphi70 = add <4 x i64> %vec.phi54, %67
  %68 = select <4 x i1> %44, <4 x i64> %64, <4 x i64> zeroinitializer
  %predphi71 = add <4 x i64> %vec.phi55, %68
  %69 = select <4 x i1> %45, <4 x i64> %65, <4 x i64> zeroinitializer
  %predphi72 = add <4 x i64> %vec.phi56, %69
  %index.next44 = add i64 %index43, 16
  %vec.ind.next52 = add <4 x i64> %vec.ind47, <i64 16, i64 16, i64 16, i64 16>
  %70 = icmp eq i64 %index.next44, %n.vec42
  br i1 %70, label %middle.block36, label %vector.body38, !llvm.loop !292

middle.block36:                                   ; preds = %vector.body38
  %bin.rdx73 = add <4 x i64> %predphi70, %predphi69
  %bin.rdx74 = add <4 x i64> %predphi71, %bin.rdx73
  %bin.rdx75 = add <4 x i64> %predphi72, %bin.rdx74
  %71 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %bin.rdx75)
  br label %for.body.i.i.preheader

for.body.i.i.preheader:                           ; preds = %middle.block36, %for.body.lr.ph.i.i
  %indvars.iv.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %n.vec42, %middle.block36 ]
  %index.021.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %71, %middle.block36 ]
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.preheader, %if.end.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %if.end.i.i ], [ %indvars.iv.i.i.ph, %for.body.i.i.preheader ]
  %index.021.i.i = phi i64 [ %index.1.i.i, %if.end.i.i ], [ %index.021.i.i.ph, %for.body.i.i.preheader ]
  %stride2.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %indvars.iv.i.i, i32 2
  %72 = load i32, i32* %stride2.i.i, align 4, !tbaa !182
  %cmp3.i.i = icmp sgt i32 %72, 0
  br i1 %cmp3.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  %conv18.i.i = zext i32 %72 to i64
  %extent.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %indvars.iv.i.i, i32 1
  %73 = load i32, i32* %extent.i.i, align 4, !tbaa !178
  %sub.i.i = add nsw i32 %73, -1
  %conv7.i.i = sext i32 %sub.i.i to i64
  %mul.i.i = mul nsw i64 %conv7.i.i, %conv18.i.i
  %add.i.i = add nsw i64 %mul.i.i, %index.021.i.i
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %for.body.i.i
  %index.1.i.i = phi i64 [ %add.i.i, %if.then.i.i ], [ %index.021.i.i, %for.body.i.i ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %for.body.i13.i.preheader, label %for.body.i.i, !llvm.loop !293

for.body.i13.i.preheader:                         ; preds = %if.end.i.i
  %min.iters.check = icmp ult i32 %27, 17
  br i1 %min.iters.check, label %for.body.i13.i.preheader77, label %vector.ph

vector.ph:                                        ; preds = %for.body.i13.i.preheader
  %n.mod.vf = and i64 %wide.trip.count.i.i, 15
  %74 = icmp eq i64 %n.mod.vf, 0
  %75 = select i1 %74, i64 16, i64 %n.mod.vf
  %n.vec = sub nsw i64 %wide.trip.count.i.i, %75
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.ind = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %vector.ph ], [ %vec.ind.next, %vector.body ]
  %vec.phi = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi, %vector.body ]
  %vec.phi19 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi31, %vector.body ]
  %vec.phi20 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi32, %vector.body ]
  %vec.phi21 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi33, %vector.body ]
  %step.add = add <4 x i64> %vec.ind, <i64 4, i64 4, i64 4, i64 4>
  %step.add16 = add <4 x i64> %vec.ind, <i64 8, i64 8, i64 8, i64 8>
  %step.add17 = add <4 x i64> %vec.ind, <i64 12, i64 12, i64 12, i64 12>
  %76 = or i64 %index, 4
  %77 = or i64 %index, 8
  %78 = or i64 %index, 12
  %79 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %index, i32 2
  %80 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %76, i32 2
  %81 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %77, i32 2
  %82 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %78, i32 2
  %83 = bitcast i32* %79 to <16 x i32>*
  %84 = bitcast i32* %80 to <16 x i32>*
  %85 = bitcast i32* %81 to <16 x i32>*
  %86 = bitcast i32* %82 to <16 x i32>*
  %wide.vec = load <16 x i32>, <16 x i32>* %83, align 4, !tbaa !182
  %wide.vec22 = load <16 x i32>, <16 x i32>* %84, align 4, !tbaa !182
  %wide.vec23 = load <16 x i32>, <16 x i32>* %85, align 4, !tbaa !182
  %wide.vec24 = load <16 x i32>, <16 x i32>* %86, align 4, !tbaa !182
  %strided.vec = shufflevector <16 x i32> %wide.vec, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec25 = shufflevector <16 x i32> %wide.vec22, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec26 = shufflevector <16 x i32> %wide.vec23, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec27 = shufflevector <16 x i32> %wide.vec24, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %87 = icmp slt <4 x i32> %strided.vec, zeroinitializer
  %88 = icmp slt <4 x i32> %strided.vec25, zeroinitializer
  %89 = icmp slt <4 x i32> %strided.vec26, zeroinitializer
  %90 = icmp slt <4 x i32> %strided.vec27, zeroinitializer
  %91 = sext <4 x i32> %strided.vec to <4 x i64>
  %92 = sext <4 x i32> %strided.vec25 to <4 x i64>
  %93 = sext <4 x i32> %strided.vec26 to <4 x i64>
  %94 = sext <4 x i32> %strided.vec27 to <4 x i64>
  %95 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, <4 x i64> %vec.ind, i32 1
  %96 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, <4 x i64> %step.add, i32 1
  %97 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, <4 x i64> %step.add16, i32 1
  %98 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, <4 x i64> %step.add17, i32 1
  %wide.masked.gather = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %95, i32 4, <4 x i1> %87, <4 x i32> undef), !tbaa !178
  %wide.masked.gather28 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %96, i32 4, <4 x i1> %88, <4 x i32> undef), !tbaa !178
  %wide.masked.gather29 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %97, i32 4, <4 x i1> %89, <4 x i32> undef), !tbaa !178
  %wide.masked.gather30 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %98, i32 4, <4 x i1> %90, <4 x i32> undef), !tbaa !178
  %99 = add nsw <4 x i32> %wide.masked.gather, <i32 -1, i32 -1, i32 -1, i32 -1>
  %100 = add nsw <4 x i32> %wide.masked.gather28, <i32 -1, i32 -1, i32 -1, i32 -1>
  %101 = add nsw <4 x i32> %wide.masked.gather29, <i32 -1, i32 -1, i32 -1, i32 -1>
  %102 = add nsw <4 x i32> %wide.masked.gather30, <i32 -1, i32 -1, i32 -1, i32 -1>
  %103 = sext <4 x i32> %99 to <4 x i64>
  %104 = sext <4 x i32> %100 to <4 x i64>
  %105 = sext <4 x i32> %101 to <4 x i64>
  %106 = sext <4 x i32> %102 to <4 x i64>
  %107 = mul nsw <4 x i64> %103, %91
  %108 = mul nsw <4 x i64> %104, %92
  %109 = mul nsw <4 x i64> %105, %93
  %110 = mul nsw <4 x i64> %106, %94
  %111 = select <4 x i1> %87, <4 x i64> %107, <4 x i64> zeroinitializer
  %predphi = add <4 x i64> %vec.phi, %111
  %112 = select <4 x i1> %88, <4 x i64> %108, <4 x i64> zeroinitializer
  %predphi31 = add <4 x i64> %vec.phi19, %112
  %113 = select <4 x i1> %89, <4 x i64> %109, <4 x i64> zeroinitializer
  %predphi32 = add <4 x i64> %vec.phi20, %113
  %114 = select <4 x i1> %90, <4 x i64> %110, <4 x i64> zeroinitializer
  %predphi33 = add <4 x i64> %vec.phi21, %114
  %index.next = add i64 %index, 16
  %vec.ind.next = add <4 x i64> %vec.ind, <i64 16, i64 16, i64 16, i64 16>
  %115 = icmp eq i64 %index.next, %n.vec
  br i1 %115, label %middle.block, label %vector.body, !llvm.loop !294

middle.block:                                     ; preds = %vector.body
  %bin.rdx = add <4 x i64> %predphi31, %predphi
  %bin.rdx34 = add <4 x i64> %predphi32, %bin.rdx
  %bin.rdx35 = add <4 x i64> %predphi33, %bin.rdx34
  %116 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %bin.rdx35)
  br label %for.body.i13.i.preheader77

for.body.i13.i.preheader77:                       ; preds = %middle.block, %for.body.i13.i.preheader
  %indvars.iv.i10.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %n.vec, %middle.block ]
  %index.018.i.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %116, %middle.block ]
  br label %for.body.i13.i

for.body.i13.i:                                   ; preds = %for.body.i13.i.preheader77, %if.end.i24.i
  %indvars.iv.i10.i = phi i64 [ %indvars.iv.next.i22.i, %if.end.i24.i ], [ %indvars.iv.i10.i.ph, %for.body.i13.i.preheader77 ]
  %index.018.i.i = phi i64 [ %index.1.i21.i, %if.end.i24.i ], [ %index.018.i.i.ph, %for.body.i13.i.preheader77 ]
  %stride2.i11.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %indvars.iv.i10.i, i32 2
  %117 = load i32, i32* %stride2.i11.i, align 4, !tbaa !182
  %cmp3.i12.i = icmp slt i32 %117, 0
  br i1 %cmp3.i12.i, label %if.then.i20.i, label %if.end.i24.i

if.then.i20.i:                                    ; preds = %for.body.i13.i
  %conv.i14.i = sext i32 %117 to i64
  %extent.i15.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %indvars.iv.i10.i, i32 1
  %118 = load i32, i32* %extent.i15.i, align 4, !tbaa !178
  %sub.i16.i = add nsw i32 %118, -1
  %conv7.i17.i = sext i32 %sub.i16.i to i64
  %mul.i18.i = mul nsw i64 %conv7.i17.i, %conv.i14.i
  %add.i19.i = add nsw i64 %mul.i18.i, %index.018.i.i
  br label %if.end.i24.i

if.end.i24.i:                                     ; preds = %if.then.i20.i, %for.body.i13.i
  %index.1.i21.i = phi i64 [ %add.i19.i, %if.then.i20.i ], [ %index.018.i.i, %for.body.i13.i ]
  %indvars.iv.next.i22.i = add nuw nsw i64 %indvars.iv.i10.i, 1
  %exitcond.not.i23.i = icmp eq i64 %indvars.iv.next.i22.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i23.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i13.i, !llvm.loop !295

_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit: ; preds = %if.end.i24.i
  %add8.i.i = add nsw i64 %index.1.i.i, 1
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

_ZNK15halide_buffer_t13size_in_bytesEv.exit:      ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, %for.body64
  %add8.i27.i = phi i64 [ 1, %for.body64 ], [ %add8.i.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %index.0.lcssa.i9.i = phi i64 [ 0, %for.body64 ], [ %index.1.i21.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %sub.i = sub nsw i64 %add8.i27.i, %index.0.lcssa.i9.i
  %bits.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %26, i64 0, i32 4, i32 1
  %119 = load i8, i8* %bits.i.i, align 1, !tbaa !136
  %conv.i.i = zext i8 %119 to i64
  %add.i4.i = add nuw nsw i64 %conv.i.i, 7
  %div.i.i = lshr i64 %add.i4.i, 3
  %mul.i = mul i64 %div.i.i, %sub.i
  %add = add i64 %mul.i, %added_size.0219
  %indvars.iv.next239 = add nuw nsw i64 %indvars.iv238, 1
  %exitcond241.not = icmp eq i64 %indvars.iv.next239, %wide.trip.count240
  br i1 %exitcond241.not, label %for.cond.cleanup63, label %for.body64, !llvm.loop !296

if.then76:                                        ; preds = %for.cond.cleanup63
  %120 = bitcast i8* %call74 to %"struct.Halide::Runtime::Internal::CacheEntry"*
  %conv77 = sext i32 %size to i64
  %call79 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal10CacheEntry4initEPKhmjPK15halide_buffer_tiPPS5_by(%"struct.Halide::Runtime::Internal::CacheEntry"* nonnull dereferenceable(96) %120, i8* %cache_key, i64 %conv77, i32 %2, %struct.halide_buffer_t* %computed_bounds, i32 %tuple_count, %struct.halide_buffer_t** nonnull %tuple_buffers, i1 zeroext %has_eviction_key, i64 %eviction_key) #16
  br i1 %call79, label %if.end101, label %if.then83

if.then83:                                        ; preds = %if.then76, %for.cond.cleanup63
  %121 = load i64, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  %sub = sub i64 %121, %added_size.0.lcssa
  store i64 %sub, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  br i1 %cmp62218, label %for.body88.preheader, label %for.cond.cleanup87

for.body88.preheader:                             ; preds = %if.then83
  %wide.trip.count = zext i32 %tuple_count to i64
  br label %for.body88

for.cond.cleanup87:                               ; preds = %for.body88, %if.then83
  br i1 %tobool75.not, label %cleanup132, label %if.then99

for.body88:                                       ; preds = %for.body88, %for.body88.preheader
  %indvars.iv = phi i64 [ 0, %for.body88.preheader ], [ %indvars.iv.next, %for.body88 ]
  %arrayidx90 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv
  %122 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx90, align 8, !tbaa !10
  %host91 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %122, i64 0, i32 2
  %123 = load i8*, i8** %host91, align 8, !tbaa !172
  %call92 = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %123) #16
  %entry93 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheBlockHeader", %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call92, i64 0, i32 0
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %entry93, align 8, !tbaa !286
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup87, label %for.body88, !llvm.loop !297

if.then99:                                        ; preds = %for.cond.cleanup87
  tail call void @halide_free(i8* %user_context, i8* nonnull %call74) #15
  br label %cleanup132

if.end101:                                        ; preds = %if.then76
  %124 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx7, align 8, !tbaa !10
  %next104 = bitcast i8* %call74 to %"struct.Halide::Runtime::Internal::CacheEntry"**
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %124, %"struct.Halide::Runtime::Internal::CacheEntry"** %next104, align 8, !tbaa !227
  %125 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !10
  %less_recent = getelementptr inbounds i8, i8* %call74, i64 16
  %126 = bitcast i8* %less_recent to %"struct.Halide::Runtime::Internal::CacheEntry"**
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %125, %"struct.Halide::Runtime::Internal::CacheEntry"** %126, align 8, !tbaa !251
  %cmp105.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %125, null
  br i1 %cmp105.not, label %if.end107, label %if.then106

if.then106:                                       ; preds = %if.end101
  %more_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %125, i64 0, i32 1
  %127 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent to i8**
  store i8* %call74, i8** %127, align 8, !tbaa !268
  br label %if.end107

if.end107:                                        ; preds = %if.then106, %if.end101
  store i8* %call74, i8** bitcast (%"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE to i8**), align 8, !tbaa !10
  %128 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !10
  %cmp108 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %128, null
  br i1 %cmp108, label %if.then109, label %if.end110

if.then109:                                       ; preds = %if.end107
  store i8* %call74, i8** bitcast (%"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE to i8**), align 8, !tbaa !10
  br label %if.end110

if.end110:                                        ; preds = %if.then109, %if.end107
  %129 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx7 to i8**
  store i8* %call74, i8** %129, align 8, !tbaa !10
  %in_use_count = getelementptr inbounds i8, i8* %call74, i64 52
  %130 = bitcast i8* %in_use_count to i32*
  store i32 %tuple_count, i32* %130, align 4, !tbaa !254
  br i1 %cmp62218, label %for.body117.preheader, label %cleanup132

for.body117.preheader:                            ; preds = %if.end110
  %wide.trip.count236 = zext i32 %tuple_count to i64
  br label %for.body117

for.body117:                                      ; preds = %for.body117, %for.body117.preheader
  %indvars.iv234 = phi i64 [ 0, %for.body117.preheader ], [ %indvars.iv.next235, %for.body117 ]
  %arrayidx119 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv234
  %131 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx119, align 8, !tbaa !10
  %host120 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %131, i64 0, i32 2
  %132 = load i8*, i8** %host120, align 8, !tbaa !172
  %call121 = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %132) #16
  %133 = bitcast %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call121 to i8**
  store i8* %call74, i8** %133, align 8, !tbaa !286
  %indvars.iv.next235 = add nuw nsw i64 %indvars.iv234, 1
  %exitcond237.not = icmp eq i64 %indvars.iv.next235, %wide.trip.count236
  br i1 %exitcond237.not, label %cleanup132, label %for.body117, !llvm.loop !298

cleanup132:                                       ; preds = %land.lhs.true18, %for.body48.us, %for.body117, %if.end110, %if.then99, %for.cond.cleanup87
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #15
  ret i32 0
}

; Function Attrs: nounwind
define weak void @halide_memoization_cache_release(i8* %user_context, i8* %host) local_unnamed_addr #4 {
entry:
  %call = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %host) #16
  %entry2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheBlockHeader", %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call, i64 0, i32 0
  %0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %entry2, align 8, !tbaa !286
  %cmp = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %0, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = bitcast %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call to i8*
  tail call void @halide_free(i8* %user_context, i8* %1) #15
  br label %if.end6

if.else:                                          ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #15
  %in_use_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %0, i64 0, i32 7
  %2 = load i32, i32* %in_use_count, align 4, !tbaa !254
  %cmp3.not = icmp eq i32 %2, 0
  br i1 %cmp3.not, label %if.then4, label %do.end

if.then4:                                         ; preds = %if.else
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([151 x i8], [151 x i8]* @.str.12.47, i64 0, i64 0)) #15
  tail call void @abort() #15
  %.pre = load i32, i32* %in_use_count, align 4, !tbaa !254
  br label %do.end

do.end:                                           ; preds = %if.then4, %if.else
  %3 = phi i32 [ %.pre, %if.then4 ], [ %2, %if.else ]
  %dec = add i32 %3, -1
  store i32 %dec, i32* %in_use_count, align 4, !tbaa !254
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #15
  br label %if.end6

if.end6:                                          ; preds = %do.end, %if.then
  ret void
}

; Function Attrs: nounwind
define weak void @halide_memoization_cache_evict(i8* %user_context, i64 %eviction_key) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #15
  br label %for.body

for.cond.cleanup:                                 ; preds = %if.end25
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #15
  ret void

for.body:                                         ; preds = %if.end25, %entry
  %__begin1.059 = phi %"struct.Halide::Runtime::Internal::CacheEntry"** [ getelementptr inbounds ([256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 0, i64 0), %entry ], [ %incdec.ptr, %if.end25 ]
  %0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %__begin1.059, align 8, !tbaa !10
  %cmp2.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %0, null
  br i1 %cmp2.not, label %if.end25, label %while.body

while.body:                                       ; preds = %for.body, %if.end24
  %prev.058 = phi %"struct.Halide::Runtime::Internal::CacheEntry"** [ %prev.1, %if.end24 ], [ %__begin1.059, %for.body ]
  %entry1.056 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %1, %if.end24 ], [ %0, %for.body ]
  %next4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.056, i64 0, i32 0
  %1 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next4, align 8, !tbaa !227
  %has_eviction_key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.056, i64 0, i32 13
  %2 = load i8, i8* %has_eviction_key, align 8, !tbaa !261, !range !17
  %tobool.not = icmp eq i8 %2, 0
  br i1 %tobool.not, label %if.end24, label %land.lhs.true

land.lhs.true:                                    ; preds = %while.body
  %eviction_key5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.056, i64 0, i32 12
  %3 = load i64, i64* %eviction_key5, align 8, !tbaa !262
  %cmp6 = icmp eq i64 %3, %eviction_key
  br i1 %cmp6, label %if.then7, label %if.end24

if.then7:                                         ; preds = %land.lhs.true
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %1, %"struct.Halide::Runtime::Internal::CacheEntry"** %prev.058, align 8, !tbaa !10
  %more_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.056, i64 0, i32 1
  %4 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !268
  %cmp8.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %4, null
  %less_recent12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.056, i64 0, i32 2
  %5 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent12, align 8, !tbaa !251
  br i1 %cmp8.not, label %if.else, label %if.then9

if.then9:                                         ; preds = %if.then7
  %less_recent11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %4, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %5, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent11, align 8, !tbaa !251
  %.pre = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent12, align 8, !tbaa !251
  br label %if.end

if.else:                                          ; preds = %if.then7
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %5, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !10
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  %6 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %5, %if.else ], [ %.pre, %if.then9 ]
  %cmp14.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %6, null
  %more_recent18 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %6, i64 0, i32 1
  %_ZN6Halide7Runtime8Internal19least_recently_usedE.sink = select i1 %cmp14.not, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent18
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %4, %"struct.Halide::Runtime::Internal::CacheEntry"** %_ZN6Halide7Runtime8Internal19least_recently_usedE.sink, align 8, !tbaa !10
  tail call void @_ZN6Halide7Runtime8Internal10CacheEntry7destroyEv(%"struct.Halide::Runtime::Internal::CacheEntry"* nonnull dereferenceable(96) %entry1.056) #16
  %7 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.056 to i8*
  tail call void @halide_free(i8* %user_context, i8* nonnull %7) #15
  br label %if.end24

if.end24:                                         ; preds = %if.end, %land.lhs.true, %while.body
  %prev.1 = phi %"struct.Halide::Runtime::Internal::CacheEntry"** [ %prev.058, %if.end ], [ %next4, %land.lhs.true ], [ %next4, %while.body ]
  %cmp3.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %1, null
  br i1 %cmp3.not, label %if.end25, label %while.body, !llvm.loop !299

if.end25:                                         ; preds = %if.end24, %for.body
  %incdec.ptr = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %__begin1.059, i64 1
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"** %incdec.ptr, getelementptr inbounds ([256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 1, i64 0)
  br i1 %cmp.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nounwind
define weak i8* @halide_string_to_string(i8* %dst, i8* %end, i8* %arg) local_unnamed_addr #4 {
entry:
  %cmp.not = icmp ult i8* %dst, %end
  br i1 %cmp.not, label %if.end, label %return

if.end:                                           ; preds = %entry
  %tobool.not = icmp eq i8* %arg, null
  %spec.select = select i1 %tobool.not, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i64 0, i64 0), i8* %arg
  br label %if.end5

if.then4:                                         ; preds = %if.end8
  store i8 0, i8* %dst.addr.023, align 1, !tbaa !14
  br label %return

if.end5:                                          ; preds = %if.end8, %if.end
  %arg.addr.124 = phi i8* [ %spec.select, %if.end ], [ %incdec.ptr9, %if.end8 ]
  %dst.addr.023 = phi i8* [ %dst, %if.end ], [ %incdec.ptr, %if.end8 ]
  %0 = load i8, i8* %arg.addr.124, align 1, !tbaa !14
  store i8 %0, i8* %dst.addr.023, align 1, !tbaa !14
  %cmp6 = icmp eq i8 %0, 0
  br i1 %cmp6, label %return, label %if.end8

if.end8:                                          ; preds = %if.end5
  %incdec.ptr = getelementptr inbounds i8, i8* %dst.addr.023, i64 1
  %incdec.ptr9 = getelementptr inbounds i8, i8* %arg.addr.124, i64 1
  %cmp3 = icmp eq i8* %incdec.ptr, %end
  br i1 %cmp3, label %if.then4, label %if.end5

return:                                           ; preds = %if.end5, %if.then4, %entry
  %retval.0 = phi i8* [ %end, %if.then4 ], [ %dst, %entry ], [ %dst.addr.023, %if.end5 ]
  ret i8* %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_uint64_to_string(i8* %dst, i8* %end, i64 %arg, i32 %min_digits) local_unnamed_addr #0 {
entry:
  %buf = alloca [32 x i8], align 1
  %0 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #10
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 31
  store i8 0, i8* %arrayidx, align 1, !tbaa !14
  %add.ptr = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 30
  %cmp13 = icmp sgt i32 %min_digits, 0
  %tobool14 = icmp ne i64 %arg, 0
  %1 = or i1 %tobool14, %cmp13
  br i1 %1, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %digits.0.lcssa = phi i8* [ %add.ptr, %entry ], [ %incdec.ptr, %for.body ]
  %incdec.ptr1 = getelementptr inbounds i8, i8* %digits.0.lcssa, i64 1
  %call = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* nonnull %incdec.ptr1) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #10
  ret i8* %call

for.body:                                         ; preds = %entry, %for.body
  %arg.addr.017 = phi i64 [ %div, %for.body ], [ %arg, %entry ]
  %digits.016 = phi i8* [ %incdec.ptr, %for.body ], [ %add.ptr, %entry ]
  %i.015 = phi i32 [ %inc, %for.body ], [ 0, %entry ]
  %div = udiv i64 %arg.addr.017, 10
  %mul.neg = mul i64 %div, -10
  %sub = add i64 %mul.neg, %arg.addr.017
  %2 = trunc i64 %sub to i8
  %conv = add i8 %2, 48
  store i8 %conv, i8* %digits.016, align 1, !tbaa !14
  %incdec.ptr = getelementptr inbounds i8, i8* %digits.016, i64 -1
  %inc = add nuw nsw i32 %i.015, 1
  %cmp = icmp slt i32 %inc, %min_digits
  %3 = icmp ugt i64 %arg.addr.017, 9
  %4 = or i1 %3, %cmp
  br i1 %4, label %for.body, label %for.cond.cleanup, !llvm.loop !300
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_int64_to_string(i8* %dst, i8* %end, i64 %arg, i32 %min_digits) local_unnamed_addr #0 {
entry:
  %cmp = icmp slt i64 %arg, 0
  %cmp1 = icmp ult i8* %dst, %end
  %or.cond = and i1 %cmp1, %cmp
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %dst, i64 1
  store i8 45, i8* %dst, align 1, !tbaa !14
  %sub = sub nsw i64 0, %arg
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %arg.addr.0 = phi i64 [ %sub, %if.then ], [ %arg, %entry ]
  %dst.addr.0 = phi i8* [ %incdec.ptr, %if.then ], [ %dst, %entry ]
  %call = tail call i8* @halide_uint64_to_string(i8* %dst.addr.0, i8* %end, i64 %arg.addr.0, i32 %min_digits) #16
  ret i8* %call
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_double_to_string(i8* %dst, i8* %end, double %arg, i32 %scientific) local_unnamed_addr #0 {
entry:
  %arg.addr = alloca double, align 8
  %bits = alloca i64, align 8
  %buf = alloca [512 x i8], align 1
  store double %arg, double* %arg.addr, align 8, !tbaa !164
  %0 = bitcast i64* %bits to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #10
  store i64 0, i64* %bits, align 8, !tbaa !110
  %1 = bitcast double* %arg.addr to i8*
  %call = call i8* @memcpy(i8* nonnull %0, i8* nonnull %1, i64 8) #15
  %2 = load i64, i64* %bits, align 8, !tbaa !110
  %and = and i64 %2, 4503599627370495
  %shr = lshr i64 %2, 52
  %3 = trunc i64 %shr to i32
  %conv = and i32 %3, 2047
  %cmp = icmp eq i32 %conv, 2047
  br i1 %cmp, label %if.then, label %if.else15

if.then:                                          ; preds = %entry
  %tobool.not = icmp eq i64 %and, 0
  %tobool10.not = icmp sgt i64 %2, -1
  br i1 %tobool.not, label %if.else9, label %if.then4

if.then4:                                         ; preds = %if.then
  br i1 %tobool10.not, label %if.else, label %if.then6

if.then6:                                         ; preds = %if.then4
  %call7 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.57, i64 0, i64 0)) #16
  br label %cleanup147

if.else:                                          ; preds = %if.then4
  %call8 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.58, i64 0, i64 0)) #16
  br label %cleanup147

if.else9:                                         ; preds = %if.then
  br i1 %tobool10.not, label %if.else13, label %if.then11

if.then11:                                        ; preds = %if.else9
  %call12 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.59, i64 0, i64 0)) #16
  br label %cleanup147

if.else13:                                        ; preds = %if.else9
  %call14 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.60, i64 0, i64 0)) #16
  br label %cleanup147

if.else15:                                        ; preds = %entry
  %cmp16 = icmp eq i32 %conv, 0
  %cmp17 = icmp eq i64 %and, 0
  %or.cond = and i1 %cmp17, %cmp16
  br i1 %or.cond, label %if.then18, label %if.end32

if.then18:                                        ; preds = %if.else15
  %tobool19.not = icmp eq i32 %scientific, 0
  %tobool27.not = icmp sgt i64 %2, -1
  br i1 %tobool19.not, label %if.else26, label %if.then20

if.then20:                                        ; preds = %if.then18
  br i1 %tobool27.not, label %if.else24, label %if.then22

if.then22:                                        ; preds = %if.then20
  %call23 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.61, i64 0, i64 0)) #16
  br label %cleanup147

if.else24:                                        ; preds = %if.then20
  %call25 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6.62, i64 0, i64 0)) #16
  br label %cleanup147

if.else26:                                        ; preds = %if.then18
  br i1 %tobool27.not, label %if.else30, label %if.then28

if.then28:                                        ; preds = %if.else26
  %call29 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7.63, i64 0, i64 0)) #16
  br label %cleanup147

if.else30:                                        ; preds = %if.else26
  %call31 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8.64, i64 0, i64 0)) #16
  br label %cleanup147

if.end32:                                         ; preds = %if.else15
  %tobool33.not = icmp sgt i64 %2, -1
  br i1 %tobool33.not, label %if.end36, label %if.then34

if.then34:                                        ; preds = %if.end32
  %call35 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.65, i64 0, i64 0)) #16
  %4 = load double, double* %arg.addr, align 8, !tbaa !164
  %fneg = fneg double %4
  store double %fneg, double* %arg.addr, align 8, !tbaa !164
  br label %if.end36

if.end36:                                         ; preds = %if.then34, %if.end32
  %dst.addr.0 = phi i8* [ %call35, %if.then34 ], [ %dst, %if.end32 ]
  %tobool37.not = icmp eq i32 %scientific, 0
  br i1 %tobool37.not, label %if.else61, label %while.condthread-pre-split

while.condthread-pre-split:                       ; preds = %if.end36
  %.pr = load double, double* %arg.addr, align 8, !tbaa !164
  %cmp39276 = fcmp olt double %.pr, 1.000000e+00
  br i1 %cmp39276, label %while.body, label %while.cond40thread-pre-split

while.body:                                       ; preds = %while.condthread-pre-split, %while.body
  %exponent_base_10.0277 = phi i32 [ %dec, %while.body ], [ 0, %while.condthread-pre-split ]
  %5 = phi double [ %mul, %while.body ], [ %.pr, %while.condthread-pre-split ]
  %mul = fmul double %5, 1.000000e+01
  %dec = add nsw i32 %exponent_base_10.0277, -1
  %cmp39 = fcmp olt double %mul, 1.000000e+00
  br i1 %cmp39, label %while.body, label %while.cond.while.cond40thread-pre-split_crit_edge, !llvm.loop !301

while.cond.while.cond40thread-pre-split_crit_edge: ; preds = %while.body
  store double %mul, double* %arg.addr, align 8, !tbaa !164
  br label %while.cond40thread-pre-split

while.cond40thread-pre-split:                     ; preds = %while.cond.while.cond40thread-pre-split_crit_edge, %while.condthread-pre-split
  %.pr261 = phi double [ %mul, %while.cond.while.cond40thread-pre-split_crit_edge ], [ %.pr, %while.condthread-pre-split ]
  %exponent_base_10.0.lcssa = phi i32 [ %dec, %while.cond.while.cond40thread-pre-split_crit_edge ], [ 0, %while.condthread-pre-split ]
  %cmp41272 = fcmp ult double %.pr261, 1.000000e+01
  br i1 %cmp41272, label %while.end43, label %while.body42

while.body42:                                     ; preds = %while.cond40thread-pre-split, %while.body42
  %exponent_base_10.1273 = phi i32 [ %inc, %while.body42 ], [ %exponent_base_10.0.lcssa, %while.cond40thread-pre-split ]
  %6 = phi double [ %div, %while.body42 ], [ %.pr261, %while.cond40thread-pre-split ]
  %div = fdiv double %6, 1.000000e+01
  %inc = add nsw i32 %exponent_base_10.1273, 1
  %cmp41 = fcmp ult double %div, 1.000000e+01
  br i1 %cmp41, label %while.cond40.while.end43_crit_edge, label %while.body42, !llvm.loop !302

while.cond40.while.end43_crit_edge:               ; preds = %while.body42
  store double %div, double* %arg.addr, align 8, !tbaa !164
  br label %while.end43

while.end43:                                      ; preds = %while.cond40.while.end43_crit_edge, %while.cond40thread-pre-split
  %.lcssa = phi double [ %div, %while.cond40.while.end43_crit_edge ], [ %.pr261, %while.cond40thread-pre-split ]
  %exponent_base_10.1.lcssa = phi i32 [ %inc, %while.cond40.while.end43_crit_edge ], [ %exponent_base_10.0.lcssa, %while.cond40thread-pre-split ]
  %mul44 = fmul double %.lcssa, 1.000000e+06
  %add = fadd double %mul44, 5.000000e-01
  %conv45 = fptoui double %add to i64
  %div46 = udiv i64 %conv45, 1000000
  %mul47.neg = mul i64 %div46, -1000000
  %sub48 = add i64 %mul47.neg, %conv45
  %call49 = call i8* @halide_int64_to_string(i8* %dst.addr.0, i8* %end, i64 %div46, i32 1) #16
  %call50 = call i8* @halide_string_to_string(i8* %call49, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.141, i64 0, i64 0)) #16
  %call51 = call i8* @halide_int64_to_string(i8* %call50, i8* %end, i64 %sub48, i32 6) #16
  %cmp52 = icmp sgt i32 %exponent_base_10.1.lcssa, -1
  br i1 %cmp52, label %if.then53, label %if.else55

if.then53:                                        ; preds = %while.end43
  %call54 = call i8* @halide_string_to_string(i8* %call51, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.67, i64 0, i64 0)) #16
  br label %if.end58

if.else55:                                        ; preds = %while.end43
  %call56 = call i8* @halide_string_to_string(i8* %call51, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.68, i64 0, i64 0)) #16
  %sub57 = sub nsw i32 0, %exponent_base_10.1.lcssa
  br label %if.end58

if.end58:                                         ; preds = %if.else55, %if.then53
  %exponent_base_10.2 = phi i32 [ %exponent_base_10.1.lcssa, %if.then53 ], [ %sub57, %if.else55 ]
  %dst.addr.1 = phi i8* [ %call54, %if.then53 ], [ %call56, %if.else55 ]
  %conv59262 = zext i32 %exponent_base_10.2 to i64
  %call60 = call i8* @halide_int64_to_string(i8* %dst.addr.1, i8* %end, i64 %conv59262, i32 2) #16
  br label %cleanup147

if.else61:                                        ; preds = %if.end36
  br i1 %cmp16, label %if.then63, label %if.end65

if.then63:                                        ; preds = %if.else61
  %call64 = call i8* @halide_double_to_string(i8* %dst.addr.0, i8* %end, double 0.000000e+00, i32 0) #16
  br label %cleanup147

if.end65:                                         ; preds = %if.else61
  %add67 = or i64 %and, 4503599627370496
  %sub69 = add nsw i32 %conv, -1075
  %cmp70 = icmp ult i32 %conv, 1075
  br i1 %cmp70, label %if.then71, label %if.end104

if.then71:                                        ; preds = %if.end65
  %cmp72 = icmp ult i32 %conv, 1023
  %sub76 = sub nuw nsw i32 1075, %conv
  %sh_prom = zext i32 %sub76 to i64
  %shr77 = lshr i64 %add67, %sh_prom
  %shl80 = shl i64 %shr77, %sh_prom
  %integer_part.0 = select i1 %cmp72, i64 0, i64 %shr77
  %sub81 = select i1 %cmp72, i64 0, i64 %shl80
  %f.0.in = sub i64 %add67, %sub81
  %f.0 = uitofp i64 %f.0.in to double
  %conv84258 = zext i32 %sub69 to i64
  %shl85 = shl i64 %conv84258, 52
  %add87 = add i64 %shl85, 4696837146684686336
  %7 = bitcast i64 %add87 to double
  %mul89 = fmul double %7, %f.0
  %add90 = fadd double %mul89, 5.000000e-01
  %conv91 = fptoui double %add90 to i64
  %conv92 = uitofp i64 %conv91 to double
  %cmp93 = fcmp oeq double %add90, %conv92
  %and95 = and i64 %conv91, 1
  %tobool96.not = icmp ne i64 %and95, 0
  %not.or.cond259 = and i1 %cmp93, %tobool96.not
  %dec98 = sext i1 %not.or.cond259 to i64
  %fractional_part.0 = add i64 %dec98, %conv91
  %cmp100 = icmp eq i64 %fractional_part.0, 1000000
  %inc102 = zext i1 %cmp100 to i64
  %spec.select = add nuw i64 %integer_part.0, %inc102
  %spec.select260 = select i1 %cmp100, i64 0, i64 %fractional_part.0
  br label %if.end104

if.end104:                                        ; preds = %if.then71, %if.end65
  %integer_part.2 = phi i64 [ %spec.select, %if.then71 ], [ %add67, %if.end65 ]
  %integer_exponent.0 = phi i32 [ 0, %if.then71 ], [ %sub69, %if.end65 ]
  %fractional_part.2 = phi i64 [ %spec.select260, %if.then71 ], [ 0, %if.end65 ]
  %8 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %8) #10
  %add.ptr = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i64 0, i64 512
  %add.ptr105 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i64 0, i64 480
  %call108 = call i8* @halide_int64_to_string(i8* nonnull %add.ptr105, i8* nonnull %add.ptr, i64 %integer_part.2, i32 1) #16
  %cmp109267 = icmp sgt i32 %integer_exponent.0, 0
  br i1 %cmp109267, label %for.cond111.preheader.preheader, label %for.cond.cleanup

for.cond111.preheader.preheader:                  ; preds = %if.end104
  %xtraiter = and i32 %integer_exponent.0, 1
  %9 = icmp eq i32 %integer_exponent.0, 1
  br i1 %9, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.cond111.preheader.preheader.new

for.cond111.preheader.preheader.new:              ; preds = %for.cond111.preheader.preheader
  %unroll_iter = and i32 %integer_exponent.0, -2
  br label %for.cond111.preheader

for.cond111.preheader:                            ; preds = %if.end137.1, %for.cond111.preheader.preheader.new
  %int_part_ptr.0268 = phi i8* [ %add.ptr105, %for.cond111.preheader.preheader.new ], [ %int_part_ptr.1.1, %if.end137.1 ]
  %niter = phi i32 [ %unroll_iter, %for.cond111.preheader.preheader.new ], [ %niter.nsub.1, %if.end137.1 ]
  %cmp113.not264 = icmp eq i8* %call108, %int_part_ptr.0268
  br i1 %cmp113.not264, label %if.end137, label %for.body115

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %if.end137.1, %for.cond111.preheader.preheader
  %int_part_ptr.1.lcssa.ph = phi i8* [ undef, %for.cond111.preheader.preheader ], [ %int_part_ptr.1.1, %if.end137.1 ]
  %int_part_ptr.0268.unr = phi i8* [ %add.ptr105, %for.cond111.preheader.preheader ], [ %int_part_ptr.1.1, %if.end137.1 ]
  %lcmp.mod.not = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond.cleanup, label %for.cond111.preheader.epil

for.cond111.preheader.epil:                       ; preds = %for.cond.cleanup.loopexit.unr-lcssa
  %cmp113.not264.epil = icmp eq i8* %call108, %int_part_ptr.0268.unr
  br i1 %cmp113.not264.epil, label %for.cond.cleanup, label %for.body115.epil

for.body115.epil:                                 ; preds = %for.cond111.preheader.epil, %for.body115.epil
  %p.0266.pn.epil = phi i8* [ %p.0266.epil, %for.body115.epil ], [ %call108, %for.cond111.preheader.epil ]
  %carry.0265.epil = phi i32 [ %carry.1.epil, %for.body115.epil ], [ 0, %for.cond111.preheader.epil ]
  %p.0266.epil = getelementptr inbounds i8, i8* %p.0266.pn.epil, i64 -1
  %10 = load i8, i8* %p.0266.epil, align 1, !tbaa !14
  %sub117.epil = add i8 %10, -48
  %conv119.epil = sext i8 %sub117.epil to i32
  %mul120.epil = shl nsw i32 %conv119.epil, 1
  %add121.epil = or i32 %mul120.epil, %carry.0265.epil
  %11 = trunc i32 %add121.epil to i8
  %cmp124.epil = icmp sgt i8 %11, 9
  %sub127.epil = add nsw i32 %add121.epil, 246
  %carry.1.epil = zext i1 %cmp124.epil to i32
  %new_digit.0.in.epil = select i1 %cmp124.epil, i32 %sub127.epil, i32 %add121.epil
  %12 = trunc i32 %new_digit.0.in.epil to i8
  %conv133.epil = add i8 %12, 48
  store i8 %conv133.epil, i8* %p.0266.epil, align 1, !tbaa !14
  %cmp113.not.epil = icmp eq i8* %p.0266.epil, %int_part_ptr.0268.unr
  br i1 %cmp113.not.epil, label %for.cond.cleanup114.epil, label %for.body115.epil, !llvm.loop !303

for.cond.cleanup114.epil:                         ; preds = %for.body115.epil
  br i1 %cmp124.epil, label %if.then135.epil, label %for.cond.cleanup

if.then135.epil:                                  ; preds = %for.cond.cleanup114.epil
  %incdec.ptr136.epil = getelementptr inbounds i8, i8* %int_part_ptr.0268.unr, i64 -1
  store i8 49, i8* %incdec.ptr136.epil, align 1, !tbaa !14
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit.unr-lcssa, %for.cond111.preheader.epil, %for.cond.cleanup114.epil, %if.then135.epil, %if.end104
  %int_part_ptr.0.lcssa = phi i8* [ %add.ptr105, %if.end104 ], [ %int_part_ptr.1.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %incdec.ptr136.epil, %if.then135.epil ], [ %int_part_ptr.0268.unr, %for.cond.cleanup114.epil ], [ %call108, %for.cond111.preheader.epil ]
  %call141 = call i8* @halide_string_to_string(i8* %dst.addr.0, i8* %end, i8* %int_part_ptr.0.lcssa) #16
  %call142 = call i8* @halide_string_to_string(i8* %call141, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.141, i64 0, i64 0)) #16
  %call143 = call i8* @halide_int64_to_string(i8* %call142, i8* %end, i64 %fractional_part.2, i32 6) #16
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %8) #10
  br label %cleanup147

for.cond.cleanup114:                              ; preds = %for.body115
  br i1 %cmp124, label %if.then135, label %if.end137

for.body115:                                      ; preds = %for.cond111.preheader, %for.body115
  %p.0266.pn = phi i8* [ %p.0266, %for.body115 ], [ %call108, %for.cond111.preheader ]
  %carry.0265 = phi i32 [ %carry.1, %for.body115 ], [ 0, %for.cond111.preheader ]
  %p.0266 = getelementptr inbounds i8, i8* %p.0266.pn, i64 -1
  %13 = load i8, i8* %p.0266, align 1, !tbaa !14
  %sub117 = add i8 %13, -48
  %conv119 = sext i8 %sub117 to i32
  %mul120 = shl nsw i32 %conv119, 1
  %add121 = or i32 %mul120, %carry.0265
  %14 = trunc i32 %add121 to i8
  %cmp124 = icmp sgt i8 %14, 9
  %sub127 = add nsw i32 %add121, 246
  %carry.1 = zext i1 %cmp124 to i32
  %new_digit.0.in = select i1 %cmp124, i32 %sub127, i32 %add121
  %15 = trunc i32 %new_digit.0.in to i8
  %conv133 = add i8 %15, 48
  store i8 %conv133, i8* %p.0266, align 1, !tbaa !14
  %cmp113.not = icmp eq i8* %p.0266, %int_part_ptr.0268
  br i1 %cmp113.not, label %for.cond.cleanup114, label %for.body115, !llvm.loop !303

if.then135:                                       ; preds = %for.cond.cleanup114
  %incdec.ptr136 = getelementptr inbounds i8, i8* %int_part_ptr.0268, i64 -1
  store i8 49, i8* %incdec.ptr136, align 1, !tbaa !14
  br label %if.end137

if.end137:                                        ; preds = %if.then135, %for.cond.cleanup114, %for.cond111.preheader
  %int_part_ptr.1 = phi i8* [ %incdec.ptr136, %if.then135 ], [ %int_part_ptr.0268, %for.cond.cleanup114 ], [ %call108, %for.cond111.preheader ]
  %cmp113.not264.1 = icmp eq i8* %call108, %int_part_ptr.1
  br i1 %cmp113.not264.1, label %if.end137.1, label %for.body115.1

cleanup147:                                       ; preds = %for.cond.cleanup, %if.then63, %if.end58, %if.else30, %if.then28, %if.else24, %if.then22, %if.else13, %if.then11, %if.else, %if.then6
  %retval.1 = phi i8* [ %call7, %if.then6 ], [ %call8, %if.else ], [ %call12, %if.then11 ], [ %call14, %if.else13 ], [ %call23, %if.then22 ], [ %call25, %if.else24 ], [ %call29, %if.then28 ], [ %call31, %if.else30 ], [ %call64, %if.then63 ], [ %call60, %if.end58 ], [ %call143, %for.cond.cleanup ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #10
  ret i8* %retval.1

for.body115.1:                                    ; preds = %if.end137, %for.body115.1
  %p.0266.pn.1 = phi i8* [ %p.0266.1, %for.body115.1 ], [ %call108, %if.end137 ]
  %carry.0265.1 = phi i32 [ %carry.1.1, %for.body115.1 ], [ 0, %if.end137 ]
  %p.0266.1 = getelementptr inbounds i8, i8* %p.0266.pn.1, i64 -1
  %16 = load i8, i8* %p.0266.1, align 1, !tbaa !14
  %sub117.1 = add i8 %16, -48
  %conv119.1 = sext i8 %sub117.1 to i32
  %mul120.1 = shl nsw i32 %conv119.1, 1
  %add121.1 = or i32 %mul120.1, %carry.0265.1
  %17 = trunc i32 %add121.1 to i8
  %cmp124.1 = icmp sgt i8 %17, 9
  %sub127.1 = add nsw i32 %add121.1, 246
  %carry.1.1 = zext i1 %cmp124.1 to i32
  %new_digit.0.in.1 = select i1 %cmp124.1, i32 %sub127.1, i32 %add121.1
  %18 = trunc i32 %new_digit.0.in.1 to i8
  %conv133.1 = add i8 %18, 48
  store i8 %conv133.1, i8* %p.0266.1, align 1, !tbaa !14
  %cmp113.not.1 = icmp eq i8* %p.0266.1, %int_part_ptr.1
  br i1 %cmp113.not.1, label %for.cond.cleanup114.1, label %for.body115.1, !llvm.loop !303

for.cond.cleanup114.1:                            ; preds = %for.body115.1
  br i1 %cmp124.1, label %if.then135.1, label %if.end137.1

if.then135.1:                                     ; preds = %for.cond.cleanup114.1
  %incdec.ptr136.1 = getelementptr inbounds i8, i8* %int_part_ptr.1, i64 -1
  store i8 49, i8* %incdec.ptr136.1, align 1, !tbaa !14
  br label %if.end137.1

if.end137.1:                                      ; preds = %if.then135.1, %for.cond.cleanup114.1, %if.end137
  %int_part_ptr.1.1 = phi i8* [ %incdec.ptr136.1, %if.then135.1 ], [ %int_part_ptr.1, %for.cond.cleanup114.1 ], [ %call108, %if.end137 ]
  %niter.nsub.1 = add i32 %niter, -2
  %niter.ncmp.1 = icmp eq i32 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.cond111.preheader, !llvm.loop !304
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_pointer_to_string(i8* %dst, i8* %end, i8* %arg) local_unnamed_addr #0 {
entry:
  %buf = alloca [20 x i8], align 1
  %0 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %0) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 dereferenceable(20) %0, i8 0, i64 20, i1 false)
  %add.ptr = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 18
  %1 = ptrtoint i8* %arg to i64
  %and = and i64 %1, 15
  %arrayidx = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !14
  %incdec.ptr = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 17
  store i8 %2, i8* %add.ptr, align 1, !tbaa !14
  %shr = lshr i64 %1, 4
  %tobool.not = icmp eq i64 %shr, 0
  br i1 %tobool.not, label %cleanup, label %for.cond

for.cond:                                         ; preds = %entry
  %and.1 = and i64 %shr, 15
  %arrayidx.1 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.1
  %3 = load i8, i8* %arrayidx.1, align 1, !tbaa !14
  %incdec.ptr.1 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 16
  store i8 %3, i8* %incdec.ptr, align 1, !tbaa !14
  %shr.1 = lshr i64 %1, 8
  %tobool.not.1 = icmp eq i64 %shr.1, 0
  br i1 %tobool.not.1, label %cleanup, label %for.cond.1

cleanup:                                          ; preds = %for.cond.14, %for.cond.13, %for.cond.12, %for.cond.11, %for.cond.10, %for.cond.9, %for.cond.8, %for.cond.7, %for.cond.6, %for.cond.5, %for.cond.4, %for.cond.3, %for.cond.2, %for.cond.1, %for.cond, %entry
  %buf_ptr.016.lcssa = phi i8* [ %add.ptr, %entry ], [ %incdec.ptr, %for.cond ], [ %incdec.ptr.1, %for.cond.1 ], [ %incdec.ptr.2, %for.cond.2 ], [ %incdec.ptr.3, %for.cond.3 ], [ %incdec.ptr.4, %for.cond.4 ], [ %incdec.ptr.5, %for.cond.5 ], [ %incdec.ptr.6, %for.cond.6 ], [ %incdec.ptr.7, %for.cond.7 ], [ %incdec.ptr.8, %for.cond.8 ], [ %incdec.ptr.9, %for.cond.9 ], [ %incdec.ptr.10, %for.cond.10 ], [ %incdec.ptr.11, %for.cond.11 ], [ %incdec.ptr.12, %for.cond.12 ], [ %incdec.ptr.13, %for.cond.13 ], [ %incdec.ptr.14, %for.cond.14 ]
  %incdec.ptr.lcssa = phi i8* [ %incdec.ptr, %entry ], [ %incdec.ptr.1, %for.cond ], [ %incdec.ptr.2, %for.cond.1 ], [ %incdec.ptr.3, %for.cond.2 ], [ %incdec.ptr.4, %for.cond.3 ], [ %incdec.ptr.5, %for.cond.4 ], [ %incdec.ptr.6, %for.cond.5 ], [ %incdec.ptr.7, %for.cond.6 ], [ %incdec.ptr.8, %for.cond.7 ], [ %incdec.ptr.9, %for.cond.8 ], [ %incdec.ptr.10, %for.cond.9 ], [ %incdec.ptr.11, %for.cond.10 ], [ %incdec.ptr.12, %for.cond.11 ], [ %incdec.ptr.13, %for.cond.12 ], [ %incdec.ptr.14, %for.cond.13 ], [ %incdec.ptr.15, %for.cond.14 ]
  %incdec.ptr1 = getelementptr inbounds i8, i8* %buf_ptr.016.lcssa, i64 -2
  store i8 120, i8* %incdec.ptr.lcssa, align 1, !tbaa !14
  store i8 48, i8* %incdec.ptr1, align 1, !tbaa !14
  %call = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* nonnull %incdec.ptr1) #16
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %0) #10
  ret i8* %call

for.cond.1:                                       ; preds = %for.cond
  %and.2 = and i64 %shr.1, 15
  %arrayidx.2 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.2
  %4 = load i8, i8* %arrayidx.2, align 1, !tbaa !14
  %incdec.ptr.2 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 15
  store i8 %4, i8* %incdec.ptr.1, align 1, !tbaa !14
  %shr.2 = lshr i64 %1, 12
  %tobool.not.2 = icmp eq i64 %shr.2, 0
  br i1 %tobool.not.2, label %cleanup, label %for.cond.2

for.cond.2:                                       ; preds = %for.cond.1
  %and.3 = and i64 %shr.2, 15
  %arrayidx.3 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.3
  %5 = load i8, i8* %arrayidx.3, align 1, !tbaa !14
  %incdec.ptr.3 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 14
  store i8 %5, i8* %incdec.ptr.2, align 1, !tbaa !14
  %shr.3 = lshr i64 %1, 16
  %tobool.not.3 = icmp eq i64 %shr.3, 0
  br i1 %tobool.not.3, label %cleanup, label %for.cond.3

for.cond.3:                                       ; preds = %for.cond.2
  %and.4 = and i64 %shr.3, 15
  %arrayidx.4 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.4
  %6 = load i8, i8* %arrayidx.4, align 1, !tbaa !14
  %incdec.ptr.4 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 13
  store i8 %6, i8* %incdec.ptr.3, align 1, !tbaa !14
  %shr.4 = lshr i64 %1, 20
  %tobool.not.4 = icmp eq i64 %shr.4, 0
  br i1 %tobool.not.4, label %cleanup, label %for.cond.4

for.cond.4:                                       ; preds = %for.cond.3
  %and.5 = and i64 %shr.4, 15
  %arrayidx.5 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.5
  %7 = load i8, i8* %arrayidx.5, align 1, !tbaa !14
  %incdec.ptr.5 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 12
  store i8 %7, i8* %incdec.ptr.4, align 1, !tbaa !14
  %shr.5 = lshr i64 %1, 24
  %tobool.not.5 = icmp eq i64 %shr.5, 0
  br i1 %tobool.not.5, label %cleanup, label %for.cond.5

for.cond.5:                                       ; preds = %for.cond.4
  %and.6 = and i64 %shr.5, 15
  %arrayidx.6 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.6
  %8 = load i8, i8* %arrayidx.6, align 1, !tbaa !14
  %incdec.ptr.6 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 11
  store i8 %8, i8* %incdec.ptr.5, align 1, !tbaa !14
  %shr.6 = lshr i64 %1, 28
  %tobool.not.6 = icmp eq i64 %shr.6, 0
  br i1 %tobool.not.6, label %cleanup, label %for.cond.6

for.cond.6:                                       ; preds = %for.cond.5
  %and.7 = and i64 %shr.6, 15
  %arrayidx.7 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.7
  %9 = load i8, i8* %arrayidx.7, align 1, !tbaa !14
  %incdec.ptr.7 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 10
  store i8 %9, i8* %incdec.ptr.6, align 1, !tbaa !14
  %shr.7 = lshr i64 %1, 32
  %tobool.not.7 = icmp eq i64 %shr.7, 0
  br i1 %tobool.not.7, label %cleanup, label %for.cond.7

for.cond.7:                                       ; preds = %for.cond.6
  %and.8 = and i64 %shr.7, 15
  %arrayidx.8 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.8
  %10 = load i8, i8* %arrayidx.8, align 1, !tbaa !14
  %incdec.ptr.8 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 9
  store i8 %10, i8* %incdec.ptr.7, align 1, !tbaa !14
  %shr.8 = lshr i64 %1, 36
  %tobool.not.8 = icmp eq i64 %shr.8, 0
  br i1 %tobool.not.8, label %cleanup, label %for.cond.8

for.cond.8:                                       ; preds = %for.cond.7
  %and.9 = and i64 %shr.8, 15
  %arrayidx.9 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.9
  %11 = load i8, i8* %arrayidx.9, align 1, !tbaa !14
  %incdec.ptr.9 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 8
  store i8 %11, i8* %incdec.ptr.8, align 1, !tbaa !14
  %shr.9 = lshr i64 %1, 40
  %tobool.not.9 = icmp eq i64 %shr.9, 0
  br i1 %tobool.not.9, label %cleanup, label %for.cond.9

for.cond.9:                                       ; preds = %for.cond.8
  %and.10 = and i64 %shr.9, 15
  %arrayidx.10 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.10
  %12 = load i8, i8* %arrayidx.10, align 1, !tbaa !14
  %incdec.ptr.10 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 7
  store i8 %12, i8* %incdec.ptr.9, align 1, !tbaa !14
  %shr.10 = lshr i64 %1, 44
  %tobool.not.10 = icmp eq i64 %shr.10, 0
  br i1 %tobool.not.10, label %cleanup, label %for.cond.10

for.cond.10:                                      ; preds = %for.cond.9
  %and.11 = and i64 %shr.10, 15
  %arrayidx.11 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.11
  %13 = load i8, i8* %arrayidx.11, align 1, !tbaa !14
  %incdec.ptr.11 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 6
  store i8 %13, i8* %incdec.ptr.10, align 1, !tbaa !14
  %shr.11 = lshr i64 %1, 48
  %tobool.not.11 = icmp eq i64 %shr.11, 0
  br i1 %tobool.not.11, label %cleanup, label %for.cond.11

for.cond.11:                                      ; preds = %for.cond.10
  %and.12 = and i64 %shr.11, 15
  %arrayidx.12 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.12
  %14 = load i8, i8* %arrayidx.12, align 1, !tbaa !14
  %incdec.ptr.12 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 5
  store i8 %14, i8* %incdec.ptr.11, align 1, !tbaa !14
  %shr.12 = lshr i64 %1, 52
  %tobool.not.12 = icmp eq i64 %shr.12, 0
  br i1 %tobool.not.12, label %cleanup, label %for.cond.12

for.cond.12:                                      ; preds = %for.cond.11
  %and.13 = and i64 %shr.12, 15
  %arrayidx.13 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.13
  %15 = load i8, i8* %arrayidx.13, align 1, !tbaa !14
  %incdec.ptr.13 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 4
  store i8 %15, i8* %incdec.ptr.12, align 1, !tbaa !14
  %shr.13 = lshr i64 %1, 56
  %tobool.not.13 = icmp eq i64 %shr.13, 0
  br i1 %tobool.not.13, label %cleanup, label %for.cond.13

for.cond.13:                                      ; preds = %for.cond.12
  %and.14 = and i64 %shr.13, 15
  %arrayidx.14 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.14
  %16 = load i8, i8* %arrayidx.14, align 1, !tbaa !14
  %incdec.ptr.14 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 3
  store i8 %16, i8* %incdec.ptr.13, align 1, !tbaa !14
  %shr.14 = lshr i64 %1, 60
  %tobool.not.14 = icmp eq i64 %shr.14, 0
  br i1 %tobool.not.14, label %cleanup, label %for.cond.14

for.cond.14:                                      ; preds = %for.cond.13
  %arrayidx.15 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %shr.14
  %17 = load i8, i8* %arrayidx.15, align 1, !tbaa !14
  %incdec.ptr.15 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 2
  store i8 %17, i8* %incdec.ptr.14, align 1, !tbaa !14
  br label %cleanup
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_type_to_string(i8* %dst, i8* %end, %struct.halide_type_t* %t) local_unnamed_addr #0 {
entry:
  %code = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %t, i64 0, i32 0
  %0 = load i8, i8* %code, align 2, !tbaa !305
  %1 = icmp ult i8 %0, 4
  br i1 %1, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %2 = sext i8 %0 to i64
  %switch.gep = getelementptr inbounds [4 x i8*], [4 x i8*]* @switch.table.halide_type_to_string, i64 0, i64 %2
  %switch.load = load i8*, i8** %switch.gep, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %code_name.0 = phi i8* [ %switch.load, %switch.lookup ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18.72, i64 0, i64 0), %entry ]
  %call = tail call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* nonnull %code_name.0) #16
  %bits = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %t, i64 0, i32 1
  %3 = load i8, i8* %bits, align 1, !tbaa !136
  %conv4 = zext i8 %3 to i64
  %call5 = tail call i8* @halide_uint64_to_string(i8* %call, i8* %end, i64 %conv4, i32 1) #16
  %lanes = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %t, i64 0, i32 2
  %4 = load i16, i16* %lanes, align 2, !tbaa !306
  %cmp.not = icmp eq i16 %4, 1
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %sw.epilog
  %call7 = tail call i8* @halide_string_to_string(i8* %call5, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19.77, i64 0, i64 0)) #16
  %5 = load i16, i16* %lanes, align 2, !tbaa !306
  %conv9 = zext i16 %5 to i64
  %call10 = tail call i8* @halide_uint64_to_string(i8* %call7, i8* %end, i64 %conv9, i32 1) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %sw.epilog
  %dst.addr.0 = phi i8* [ %call10, %if.then ], [ %call5, %sw.epilog ]
  ret i8* %dst.addr.0
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_buffer_to_string(i8* %dst, i8* %end, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20.78, i64 0, i64 0)) #16
  br label %return

if.end:                                           ; preds = %entry
  %call1 = tail call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21.79, i64 0, i64 0)) #16
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !174
  %call2 = tail call i8* @halide_uint64_to_string(i8* %call1, i8* %end, i64 %0, i32 1) #16
  %call3 = tail call i8* @halide_string_to_string(i8* %call2, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #16
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %1 = bitcast %struct.halide_device_interface_t** %device_interface to i8**
  %2 = load i8*, i8** %1, align 8, !tbaa !307
  %call4 = tail call i8* @halide_pointer_to_string(i8* %call3, i8* %end, i8* %2) #16
  %call5 = tail call i8* @halide_string_to_string(i8* %call4, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #16
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 2
  %3 = load i8*, i8** %host, align 8, !tbaa !172
  %call6 = tail call i8* @halide_pointer_to_string(i8* %call5, i8* %end, i8* %3) #16
  %call7 = tail call i8* @halide_string_to_string(i8* %call6, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #16
  %flags = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %4 = load i64, i64* %flags, align 8, !tbaa !308
  %call8 = tail call i8* @halide_uint64_to_string(i8* %call7, i8* %end, i64 %4, i32 1) #16
  %call9 = tail call i8* @halide_string_to_string(i8* %call8, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #16
  %type = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 4
  %call10 = tail call i8* @halide_type_to_string(i8* %call9, i8* %end, %struct.halide_type_t* nonnull %type) #16
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 5
  %5 = load i32, i32* %dimensions, align 4, !tbaa !175
  %cmp1179 = icmp sgt i32 %5, 0
  br i1 %cmp1179, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %if.end
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %if.end
  %dst.addr.0.lcssa = phi i8* [ %call10, %if.end ], [ %call26, %for.body ]
  %call27 = tail call i8* @halide_string_to_string(i8* %dst.addr.0.lcssa, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.119, i64 0, i64 0)) #16
  br label %return

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %dst.addr.080 = phi i8* [ %call10, %for.body.lr.ph ], [ %call26, %for.body ]
  %call12 = tail call i8* @halide_string_to_string(i8* %dst.addr.080, i8* %end, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23.82, i64 0, i64 0)) #16
  %6 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !176
  %min = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %6, i64 %indvars.iv, i32 0
  %7 = load i32, i32* %min, align 4, !tbaa !181
  %conv = sext i32 %7 to i64
  %call13 = tail call i8* @halide_int64_to_string(i8* %call12, i8* %end, i64 %conv, i32 1) #16
  %call14 = tail call i8* @halide_string_to_string(i8* %call13, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #16
  %8 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !176
  %extent = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %8, i64 %indvars.iv, i32 1
  %9 = load i32, i32* %extent, align 4, !tbaa !178
  %conv18 = sext i32 %9 to i64
  %call19 = tail call i8* @halide_int64_to_string(i8* %call14, i8* %end, i64 %conv18, i32 1) #16
  %call20 = tail call i8* @halide_string_to_string(i8* %call19, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #16
  %10 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !176
  %stride = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %10, i64 %indvars.iv, i32 2
  %11 = load i32, i32* %stride, align 4, !tbaa !182
  %conv24 = sext i32 %11 to i64
  %call25 = tail call i8* @halide_int64_to_string(i8* %call20, i8* %end, i64 %conv24, i32 1) #16
  %call26 = tail call i8* @halide_string_to_string(i8* %call25, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.83, i64 0, i64 0)) #16
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %12 = load i32, i32* %dimensions, align 4, !tbaa !175
  %13 = sext i32 %12 to i64
  %cmp11 = icmp slt i64 %indvars.iv.next, %13
  br i1 %cmp11, label %for.body, label %for.cond.cleanup, !llvm.loop !309

return:                                           ; preds = %for.cond.cleanup, %if.then
  %retval.0 = phi i8* [ %call, %if.then ], [ %call27, %for.cond.cleanup ]
  ret i8* %retval.0
}

; Function Attrs: alwaysinline nounwind willreturn mustprogress
define weak i32 @halide_malloc_alignment() local_unnamed_addr #6 {
entry:
  ret i32 64
}

; Function Attrs: nounwind
define weak i32 @halide_reuse_device_allocations(i8* %user_context, i1 zeroext %flag) local_unnamed_addr #4 {
entry:
  %frombool = zext i1 %flag to i8
  store i8 %frombool, i8* @_ZN6Halide7Runtime8Internal36halide_reuse_device_allocations_flagE, align 1, !tbaa !15
  br i1 %flag, label %if.end5, label %if.then

if.then:                                          ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal21allocation_pools_lockE) #15
  %p.014 = load %struct.halide_device_allocation_pool*, %struct.halide_device_allocation_pool** @_ZN6Halide7Runtime8Internal23device_allocation_poolsE, align 8, !tbaa !10
  %cmp.not15 = icmp eq %struct.halide_device_allocation_pool* %p.014, null
  br i1 %cmp.not15, label %for.cond.cleanup, label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %if.then
  %err.0.lcssa = phi i32 [ 0, %if.then ], [ %spec.select, %for.body ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal21allocation_pools_lockE) #15
  br label %if.end5

for.body:                                         ; preds = %if.then, %for.body
  %p.017 = phi %struct.halide_device_allocation_pool* [ %p.0, %for.body ], [ %p.014, %if.then ]
  %err.016 = phi i32 [ %spec.select, %for.body ], [ 0, %if.then ]
  %release_unused = getelementptr inbounds %struct.halide_device_allocation_pool, %struct.halide_device_allocation_pool* %p.017, i64 0, i32 0
  %0 = load i32 (i8*)*, i32 (i8*)** %release_unused, align 8, !tbaa !310
  %call = tail call i32 %0(i8* %user_context) #15
  %tobool3.not = icmp eq i32 %call, 0
  %spec.select = select i1 %tobool3.not, i32 %err.016, i32 %call
  %next = getelementptr inbounds %struct.halide_device_allocation_pool, %struct.halide_device_allocation_pool* %p.017, i64 0, i32 1
  %p.0 = load %struct.halide_device_allocation_pool*, %struct.halide_device_allocation_pool** %next, align 8, !tbaa !10
  %cmp.not = icmp eq %struct.halide_device_allocation_pool* %p.0, null
  br i1 %cmp.not, label %for.cond.cleanup, label %for.body, !llvm.loop !312

if.end5:                                          ; preds = %for.cond.cleanup, %entry
  %err.2 = phi i32 [ 0, %entry ], [ %err.0.lcssa, %for.cond.cleanup ]
  ret i32 %err.2
}

; Function Attrs: nounwind willreturn mustprogress
define weak zeroext i1 @halide_can_reuse_device_allocations(i8* %user_context) local_unnamed_addr #2 {
entry:
  %0 = load i8, i8* @_ZN6Halide7Runtime8Internal36halide_reuse_device_allocations_flagE, align 1, !tbaa !15, !range !17
  %tobool = icmp ne i8 %0, 0
  ret i1 %tobool
}

; Function Attrs: nounwind
define weak void @halide_register_device_allocation_pool(%struct.halide_device_allocation_pool* %pool) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal21allocation_pools_lockE) #15
  %0 = load %struct.halide_device_allocation_pool*, %struct.halide_device_allocation_pool** @_ZN6Halide7Runtime8Internal23device_allocation_poolsE, align 8, !tbaa !10
  %next = getelementptr inbounds %struct.halide_device_allocation_pool, %struct.halide_device_allocation_pool* %pool, i64 0, i32 1
  store %struct.halide_device_allocation_pool* %0, %struct.halide_device_allocation_pool** %next, align 8, !tbaa !313
  store %struct.halide_device_allocation_pool* %pool, %struct.halide_device_allocation_pool** @_ZN6Halide7Runtime8Internal23device_allocation_poolsE, align 8, !tbaa !10
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal21allocation_pools_lockE) #15
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP15halide_buffer_t(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %flags.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %0 = load i64, i64* %flags.i.i, align 8, !tbaa !308
  %and.i.i = and i64 %0, 2
  %cmp.i.i.not = icmp eq i64 %and.i.i, 0
  br i1 %cmp.i.i.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %1 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  %and.i.i46 = and i64 %0, 1
  %cmp.i.i47.not = icmp eq i64 %and.i.i46, 0
  br i1 %cmp.i.i47.not, label %if.end9, label %return

if.end9:                                          ; preds = %if.end
  %cmp = icmp eq %struct.halide_device_interface_t* %1, null
  br i1 %cmp, label %return, label %if.end15

if.end15:                                         ; preds = %if.end9
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %1, i64 0, i32 15
  %2 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %copy_to_host = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %2, i64 0, i32 6
  %3 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %copy_to_host, align 8, !tbaa !316
  %call16 = tail call i32 %3(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  %cmp17.not = icmp eq i32 %call16, 0
  br i1 %cmp17.not, label %if.end23, label %return

if.end23:                                         ; preds = %if.end15
  %4 = load i64, i64* %flags.i.i, align 8, !tbaa !308
  %and.i.i44 = and i64 %4, -3
  store i64 %and.i.i44, i64* %flags.i.i, align 8, !tbaa !308
  %call24 = tail call i32 @halide_msan_annotate_buffer_is_initialized(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  br label %return

return:                                           ; preds = %if.end23, %if.end15, %if.end9, %if.end, %entry
  %retval.2 = phi i32 [ 0, %entry ], [ 0, %if.end23 ], [ -14, %if.end ], [ -19, %if.end9 ], [ -14, %if.end15 ]
  ret i32 %retval.2
}

; Function Attrs: nounwind mustprogress
define weak void @halide_device_release(i8* %user_context, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %device_interface, i64 0, i32 15
  %0 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %device_release = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %0, i64 0, i32 5
  %1 = load i32 (i8*)*, i32 (i8*)** %device_release, align 8, !tbaa !318
  %call = tail call i32 %1(i8* %user_context) #15
  ret void
}

; Function Attrs: nounwind
define weak i32 @halide_copy_to_host(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #15
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.88, i64 0, i64 0)) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !307
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !308
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end16.i.split

if.end16.i.split:                                 ; preds = %if.end16.i
  %call11 = tail call i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP15halide_buffer_t(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #16
  br label %cleanup

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split, label %cleanup

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %call12 = tail call i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP15halide_buffer_t(i8* %user_context, %struct.halide_buffer_t* %buf) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end16.i.split, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.0 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ %call11, %if.end16.i.split ], [ %call12, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #15
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define linkonce i32 @copy_to_device_already_locked(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7.89, i64 0, i64 0)) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !307
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !308
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit, %if.end16.i
  %cmp1 = icmp eq %struct.halide_device_interface_t* %device_interface, null
  br i1 %cmp1, label %if.then2, label %if.end11

if.then2:                                         ; preds = %if.end
  %device_interface5 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %4 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface5, align 8, !tbaa !307
  %cmp6 = icmp eq %struct.halide_device_interface_t* %4, null
  br i1 %cmp6, label %if.then7, label %if.end11

if.then7:                                         ; preds = %if.then2
  %call8 = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %cleanup

if.end11:                                         ; preds = %if.then2, %if.end
  %device_interface.addr.0 = phi %struct.halide_device_interface_t* [ %device_interface, %if.end ], [ %4, %if.then2 ]
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %5 = load i64, i64* %device, align 8, !tbaa !174
  %tobool.not = icmp eq i64 %5, 0
  br i1 %tobool.not, label %if.then18, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end11
  %device_interface12 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %6 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface12, align 8, !tbaa !307
  %cmp13.not = icmp eq %struct.halide_device_interface_t* %6, %device_interface.addr.0
  br i1 %cmp13.not, label %if.end27, label %if.then14

if.then14:                                        ; preds = %land.lhs.true
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.9.90, i64 0, i64 0)) #15
  br label %cleanup

if.then18:                                        ; preds = %if.end11
  %call19 = tail call i32 @halide_device_malloc(i8* %user_context, %struct.halide_buffer_t* nonnull %buf, %struct.halide_device_interface_t* nonnull %device_interface.addr.0) #16
  %cmp20.not = icmp eq i32 %call19, 0
  br i1 %cmp20.not, label %if.end27, label %cleanup

if.end27:                                         ; preds = %if.then18, %land.lhs.true
  %flags.i.i97 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %7 = load i64, i64* %flags.i.i97, align 8, !tbaa !308
  %and.i.i98 = and i64 %7, 1
  %cmp.i.i99.not = icmp eq i64 %and.i.i98, 0
  br i1 %cmp.i.i99.not, label %cleanup, label %if.then29

if.then29:                                        ; preds = %if.end27
  %and.i.i96 = and i64 %7, 2
  %cmp.i.i.not = icmp eq i64 %and.i.i96, 0
  br i1 %cmp.i.i.not, label %if.else, label %cleanup

if.else:                                          ; preds = %if.then29
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %device_interface.addr.0, i64 0, i32 15
  %8 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %copy_to_device = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %8, i64 0, i32 7
  %9 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %copy_to_device, align 8, !tbaa !319
  %call44 = tail call i32 %9(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  %cmp45 = icmp eq i32 %call44, 0
  br i1 %cmp45, label %if.then46, label %cleanup

if.then46:                                        ; preds = %if.else
  %10 = load i64, i64* %flags.i.i97, align 8, !tbaa !308
  %and.i.i = and i64 %10, -2
  store i64 %and.i.i, i64* %flags.i.i97, align 8, !tbaa !308
  br label %cleanup

cleanup:                                          ; preds = %if.then46, %if.else, %if.then29, %if.end27, %if.then18, %if.then14, %if.then7, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.0 = phi i32 [ %call8, %if.then7 ], [ -42, %if.then14 ], [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ 0, %if.then46 ], [ %call19, %if.then18 ], [ -15, %if.then29 ], [ -15, %if.else ], [ 0, %if.end27 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_malloc(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17.91, i64 0, i64 0)) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !307
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !308
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup12

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface3.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface3.phi.trans.insert, align 8, !tbaa !307
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp4.not = icmp eq %struct.halide_device_interface_t* %4, null
  %cmp5.not = icmp eq %struct.halide_device_interface_t* %4, %device_interface
  %or.cond = or i1 %cmp4.not, %cmp5.not
  br i1 %or.cond, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20.92, i64 0, i64 0)) #15
  br label %cleanup12

if.end7:                                          ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %device_interface, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !320
  tail call void %6() #15
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %device_malloc = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i64 0, i32 2
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_malloc, align 8, !tbaa !321
  %call9 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i64 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 8, !tbaa !322
  tail call void %10() #15
  %tobool.not = icmp eq i32 %call9, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -16
  ret i32 %spec.select

cleanup12:                                        ; preds = %if.then6, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ -42, %if.then6 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind
define weak i32 @halide_copy_to_device(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #15
  %call = tail call i32 @copy_to_device_already_locked(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) #16
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #15
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_sync(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16.93, i64 0, i64 0)) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !307
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !308
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup8

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface1.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface1.phi.trans.insert, align 8, !tbaa !307
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp2 = icmp eq %struct.halide_device_interface_t* %4, null
  br i1 %cmp2, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  %call4 = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %cleanup8

if.end5:                                          ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %device_sync = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 4
  %6 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_sync, align 8, !tbaa !323
  %call6 = tail call i32 %6(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  %tobool.not = icmp eq i32 %call6, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -17
  ret i32 %spec.select

cleanup8:                                         ; preds = %if.then3, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ %call4, %if.then3 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_free(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21.96, i64 0, i64 0)) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !307
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !308
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup12

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface1.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface1.phi.trans.insert, align 8, !tbaa !307
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp2.not = icmp eq %struct.halide_device_interface_t* %4, null
  br i1 %cmp2.not, label %if.end11, label %if.then3

if.then3:                                         ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !320
  tail call void %6() #15
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %device_free = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i64 0, i32 3
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_free, align 8, !tbaa !324
  %call5 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i64 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 8, !tbaa !322
  tail call void %10() #15
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %11 = load i64, i64* %device, align 8, !tbaa !174
  %cmp7 = icmp eq i64 %11, 0
  br i1 %cmp7, label %do.end, label %if.then8

if.then8:                                         ; preds = %if.then3
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @.str.22.97, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end

do.end:                                           ; preds = %if.then8, %if.then3
  %tobool.not = icmp eq i32 %call5, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -18
  ret i32 %spec.select

if.end11:                                         ; preds = %if.end
  %flags3.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %12 = load i64, i64* %flags3.i.i, align 8, !tbaa !308
  %and.i.i = and i64 %12, -3
  store i64 %and.i.i, i64* %flags3.i.i, align 8, !tbaa !308
  br label %cleanup12

cleanup12:                                        ; preds = %if.end11, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ 0, %if.end11 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak void @halide_device_free_as_destructor(i8* %user_context, i8* %obj) local_unnamed_addr #0 {
entry:
  %0 = bitcast i8* %obj to %struct.halide_buffer_t*
  %call = tail call i32 @halide_device_free(i8* %user_context, %struct.halide_buffer_t* %0) #16
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_and_host_malloc(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23.98, i64 0, i64 0)) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !307
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !308
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup14

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface3.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface3.phi.trans.insert, align 8, !tbaa !307
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp4.not = icmp eq %struct.halide_device_interface_t* %4, null
  %cmp5.not = icmp eq %struct.halide_device_interface_t* %4, %device_interface
  %or.cond = or i1 %cmp4.not, %cmp5.not
  br i1 %or.cond, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.25.99, i64 0, i64 0)) #15
  br label %cleanup14

if.end7:                                          ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %device_interface, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !320
  tail call void %6() #15
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %device_and_host_malloc = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i64 0, i32 8
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_and_host_malloc, align 8, !tbaa !325
  %call9 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i64 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 8, !tbaa !322
  tail call void %10() #15
  %cmp11.not = icmp eq i32 %call9, 0
  br i1 %cmp11.not, label %cleanup14, label %if.then12

if.then12:                                        ; preds = %if.end7
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.26.100, i64 0, i64 0)) #15
  br label %cleanup14

cleanup14:                                        ; preds = %if.then12, %if.end7, %if.then6, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ -42, %if.then6 ], [ -16, %if.then12 ], [ 0, %if.end7 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_and_host_free(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.27.101, i64 0, i64 0)) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !307
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !308
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup18

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface1.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface1.phi.trans.insert, align 8, !tbaa !307
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp2.not = icmp eq %struct.halide_device_interface_t* %4, null
  br i1 %cmp2.not, label %if.else11, label %if.then3

if.then3:                                         ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !320
  tail call void %6() #15
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %device_and_host_free = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i64 0, i32 9
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_and_host_free, align 8, !tbaa !326
  %call5 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i64 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 8, !tbaa !322
  tail call void %10() #15
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %11 = load i64, i64* %device, align 8, !tbaa !174
  %cmp7 = icmp eq i64 %11, 0
  br i1 %cmp7, label %do.end, label %if.then8

if.then8:                                         ; preds = %if.then3
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @.str.28.102, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end

do.end:                                           ; preds = %if.then8, %if.then3
  %tobool.not = icmp eq i32 %call5, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -18
  ret i32 %spec.select

if.else11:                                        ; preds = %if.end
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 2
  %12 = load i8*, i8** %host, align 8, !tbaa !172
  %tobool12.not = icmp eq i8* %12, null
  br i1 %tobool12.not, label %if.end17, label %if.then13

if.then13:                                        ; preds = %if.else11
  tail call void @halide_free(i8* %user_context, i8* nonnull %12) #15
  store i8* null, i8** %host, align 8, !tbaa !172
  br label %if.end17

if.end17:                                         ; preds = %if.then13, %if.else11
  %flags3.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %13 = load i64, i64* %flags3.i.i, align 8, !tbaa !308
  %and.i.i = and i64 %13, -3
  store i64 %and.i.i, i64* %flags3.i.i, align 8, !tbaa !308
  br label %cleanup18

cleanup18:                                        ; preds = %if.end17, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ 0, %if.end17 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_and_host_malloc(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29.103, i64 0, i64 0)) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !307
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !308
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %if.end, label %cleanup13

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit, %if.end16.i
  %dimensions.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 5
  %4 = load i32, i32* %dimensions.i.i, align 4, !tbaa !175
  %cmp19.i.i = icmp sgt i32 %4, 0
  br i1 %cmp19.i.i, label %for.body.lr.ph.i.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

for.body.lr.ph.i.i:                               ; preds = %if.end
  %dim.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %5 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i.i, align 8, !tbaa !176
  %wide.trip.count.i.i = zext i32 %4 to i64
  %min.iters.check = icmp ult i32 %4, 17
  br i1 %min.iters.check, label %for.body.i.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.lr.ph.i.i
  %n.mod.vf = and i64 %wide.trip.count.i.i, 15
  %6 = icmp eq i64 %n.mod.vf, 0
  %7 = select i1 %6, i64 16, i64 %n.mod.vf
  %n.vec = sub nsw i64 %wide.trip.count.i.i, %7
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.ind = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %vector.ph ], [ %vec.ind.next, %vector.body ]
  %vec.phi = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi, %vector.body ]
  %vec.phi6 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi18, %vector.body ]
  %vec.phi7 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi19, %vector.body ]
  %vec.phi8 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi20, %vector.body ]
  %step.add = add <4 x i64> %vec.ind, <i64 4, i64 4, i64 4, i64 4>
  %step.add3 = add <4 x i64> %vec.ind, <i64 8, i64 8, i64 8, i64 8>
  %step.add4 = add <4 x i64> %vec.ind, <i64 12, i64 12, i64 12, i64 12>
  %8 = or i64 %index, 4
  %9 = or i64 %index, 8
  %10 = or i64 %index, 12
  %11 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %index, i32 2
  %12 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %8, i32 2
  %13 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %9, i32 2
  %14 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %10, i32 2
  %15 = bitcast i32* %11 to <16 x i32>*
  %16 = bitcast i32* %12 to <16 x i32>*
  %17 = bitcast i32* %13 to <16 x i32>*
  %18 = bitcast i32* %14 to <16 x i32>*
  %wide.vec = load <16 x i32>, <16 x i32>* %15, align 4, !tbaa !182
  %wide.vec9 = load <16 x i32>, <16 x i32>* %16, align 4, !tbaa !182
  %wide.vec10 = load <16 x i32>, <16 x i32>* %17, align 4, !tbaa !182
  %wide.vec11 = load <16 x i32>, <16 x i32>* %18, align 4, !tbaa !182
  %strided.vec = shufflevector <16 x i32> %wide.vec, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec12 = shufflevector <16 x i32> %wide.vec9, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec13 = shufflevector <16 x i32> %wide.vec10, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec14 = shufflevector <16 x i32> %wide.vec11, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %19 = icmp sgt <4 x i32> %strided.vec, zeroinitializer
  %20 = icmp sgt <4 x i32> %strided.vec12, zeroinitializer
  %21 = icmp sgt <4 x i32> %strided.vec13, zeroinitializer
  %22 = icmp sgt <4 x i32> %strided.vec14, zeroinitializer
  %23 = zext <4 x i32> %strided.vec to <4 x i64>
  %24 = zext <4 x i32> %strided.vec12 to <4 x i64>
  %25 = zext <4 x i32> %strided.vec13 to <4 x i64>
  %26 = zext <4 x i32> %strided.vec14 to <4 x i64>
  %27 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, <4 x i64> %vec.ind, i32 1
  %28 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, <4 x i64> %step.add, i32 1
  %29 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, <4 x i64> %step.add3, i32 1
  %30 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, <4 x i64> %step.add4, i32 1
  %wide.masked.gather = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %27, i32 4, <4 x i1> %19, <4 x i32> undef), !tbaa !178
  %wide.masked.gather15 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %28, i32 4, <4 x i1> %20, <4 x i32> undef), !tbaa !178
  %wide.masked.gather16 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %29, i32 4, <4 x i1> %21, <4 x i32> undef), !tbaa !178
  %wide.masked.gather17 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %30, i32 4, <4 x i1> %22, <4 x i32> undef), !tbaa !178
  %31 = add nsw <4 x i32> %wide.masked.gather, <i32 -1, i32 -1, i32 -1, i32 -1>
  %32 = add nsw <4 x i32> %wide.masked.gather15, <i32 -1, i32 -1, i32 -1, i32 -1>
  %33 = add nsw <4 x i32> %wide.masked.gather16, <i32 -1, i32 -1, i32 -1, i32 -1>
  %34 = add nsw <4 x i32> %wide.masked.gather17, <i32 -1, i32 -1, i32 -1, i32 -1>
  %35 = sext <4 x i32> %31 to <4 x i64>
  %36 = sext <4 x i32> %32 to <4 x i64>
  %37 = sext <4 x i32> %33 to <4 x i64>
  %38 = sext <4 x i32> %34 to <4 x i64>
  %39 = mul nsw <4 x i64> %35, %23
  %40 = mul nsw <4 x i64> %36, %24
  %41 = mul nsw <4 x i64> %37, %25
  %42 = mul nsw <4 x i64> %38, %26
  %43 = select <4 x i1> %19, <4 x i64> %39, <4 x i64> zeroinitializer
  %predphi = add <4 x i64> %vec.phi, %43
  %44 = select <4 x i1> %20, <4 x i64> %40, <4 x i64> zeroinitializer
  %predphi18 = add <4 x i64> %vec.phi6, %44
  %45 = select <4 x i1> %21, <4 x i64> %41, <4 x i64> zeroinitializer
  %predphi19 = add <4 x i64> %vec.phi7, %45
  %46 = select <4 x i1> %22, <4 x i64> %42, <4 x i64> zeroinitializer
  %predphi20 = add <4 x i64> %vec.phi8, %46
  %index.next = add i64 %index, 16
  %vec.ind.next = add <4 x i64> %vec.ind, <i64 16, i64 16, i64 16, i64 16>
  %47 = icmp eq i64 %index.next, %n.vec
  br i1 %47, label %middle.block, label %vector.body, !llvm.loop !327

middle.block:                                     ; preds = %vector.body
  %bin.rdx = add <4 x i64> %predphi18, %predphi
  %bin.rdx21 = add <4 x i64> %predphi19, %bin.rdx
  %bin.rdx22 = add <4 x i64> %predphi20, %bin.rdx21
  %48 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %bin.rdx22)
  br label %for.body.i.i.preheader

for.body.i.i.preheader:                           ; preds = %middle.block, %for.body.lr.ph.i.i
  %indvars.iv.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %n.vec, %middle.block ]
  %index.021.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %48, %middle.block ]
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.preheader, %if.end.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %if.end.i.i ], [ %indvars.iv.i.i.ph, %for.body.i.i.preheader ]
  %index.021.i.i = phi i64 [ %index.1.i.i, %if.end.i.i ], [ %index.021.i.i.ph, %for.body.i.i.preheader ]
  %stride2.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %indvars.iv.i.i, i32 2
  %49 = load i32, i32* %stride2.i.i, align 4, !tbaa !182
  %cmp3.i.i = icmp sgt i32 %49, 0
  br i1 %cmp3.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  %conv18.i.i = zext i32 %49 to i64
  %extent.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %indvars.iv.i.i, i32 1
  %50 = load i32, i32* %extent.i.i, align 4, !tbaa !178
  %sub.i.i = add nsw i32 %50, -1
  %conv7.i.i = sext i32 %sub.i.i to i64
  %mul.i.i = mul nsw i64 %conv7.i.i, %conv18.i.i
  %add.i.i = add nsw i64 %mul.i.i, %index.021.i.i
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %for.body.i.i
  %index.1.i.i = phi i64 [ %add.i.i, %if.then.i.i ], [ %index.021.i.i, %for.body.i.i ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %for.body.i13.i.preheader, label %for.body.i.i, !llvm.loop !328

for.body.i13.i.preheader:                         ; preds = %if.end.i.i
  %min.iters.check26 = icmp ult i32 %4, 17
  br i1 %min.iters.check26, label %for.body.i13.i.preheader64, label %vector.ph27

vector.ph27:                                      ; preds = %for.body.i13.i.preheader
  %n.mod.vf28 = and i64 %wide.trip.count.i.i, 15
  %51 = icmp eq i64 %n.mod.vf28, 0
  %52 = select i1 %51, i64 16, i64 %n.mod.vf28
  %n.vec29 = sub nsw i64 %wide.trip.count.i.i, %52
  br label %vector.body25

vector.body25:                                    ; preds = %vector.body25, %vector.ph27
  %index30 = phi i64 [ 0, %vector.ph27 ], [ %index.next31, %vector.body25 ]
  %vec.ind34 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %vector.ph27 ], [ %vec.ind.next39, %vector.body25 ]
  %vec.phi40 = phi <4 x i64> [ zeroinitializer, %vector.ph27 ], [ %predphi56, %vector.body25 ]
  %vec.phi41 = phi <4 x i64> [ zeroinitializer, %vector.ph27 ], [ %predphi57, %vector.body25 ]
  %vec.phi42 = phi <4 x i64> [ zeroinitializer, %vector.ph27 ], [ %predphi58, %vector.body25 ]
  %vec.phi43 = phi <4 x i64> [ zeroinitializer, %vector.ph27 ], [ %predphi59, %vector.body25 ]
  %step.add35 = add <4 x i64> %vec.ind34, <i64 4, i64 4, i64 4, i64 4>
  %step.add36 = add <4 x i64> %vec.ind34, <i64 8, i64 8, i64 8, i64 8>
  %step.add37 = add <4 x i64> %vec.ind34, <i64 12, i64 12, i64 12, i64 12>
  %53 = or i64 %index30, 4
  %54 = or i64 %index30, 8
  %55 = or i64 %index30, 12
  %56 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %index30, i32 2
  %57 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %53, i32 2
  %58 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %54, i32 2
  %59 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %55, i32 2
  %60 = bitcast i32* %56 to <16 x i32>*
  %61 = bitcast i32* %57 to <16 x i32>*
  %62 = bitcast i32* %58 to <16 x i32>*
  %63 = bitcast i32* %59 to <16 x i32>*
  %wide.vec44 = load <16 x i32>, <16 x i32>* %60, align 4, !tbaa !182
  %wide.vec45 = load <16 x i32>, <16 x i32>* %61, align 4, !tbaa !182
  %wide.vec46 = load <16 x i32>, <16 x i32>* %62, align 4, !tbaa !182
  %wide.vec47 = load <16 x i32>, <16 x i32>* %63, align 4, !tbaa !182
  %strided.vec48 = shufflevector <16 x i32> %wide.vec44, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec49 = shufflevector <16 x i32> %wide.vec45, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec50 = shufflevector <16 x i32> %wide.vec46, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec51 = shufflevector <16 x i32> %wide.vec47, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %64 = icmp slt <4 x i32> %strided.vec48, zeroinitializer
  %65 = icmp slt <4 x i32> %strided.vec49, zeroinitializer
  %66 = icmp slt <4 x i32> %strided.vec50, zeroinitializer
  %67 = icmp slt <4 x i32> %strided.vec51, zeroinitializer
  %68 = sext <4 x i32> %strided.vec48 to <4 x i64>
  %69 = sext <4 x i32> %strided.vec49 to <4 x i64>
  %70 = sext <4 x i32> %strided.vec50 to <4 x i64>
  %71 = sext <4 x i32> %strided.vec51 to <4 x i64>
  %72 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, <4 x i64> %vec.ind34, i32 1
  %73 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, <4 x i64> %step.add35, i32 1
  %74 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, <4 x i64> %step.add36, i32 1
  %75 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, <4 x i64> %step.add37, i32 1
  %wide.masked.gather52 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %72, i32 4, <4 x i1> %64, <4 x i32> undef), !tbaa !178
  %wide.masked.gather53 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %73, i32 4, <4 x i1> %65, <4 x i32> undef), !tbaa !178
  %wide.masked.gather54 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %74, i32 4, <4 x i1> %66, <4 x i32> undef), !tbaa !178
  %wide.masked.gather55 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %75, i32 4, <4 x i1> %67, <4 x i32> undef), !tbaa !178
  %76 = add nsw <4 x i32> %wide.masked.gather52, <i32 -1, i32 -1, i32 -1, i32 -1>
  %77 = add nsw <4 x i32> %wide.masked.gather53, <i32 -1, i32 -1, i32 -1, i32 -1>
  %78 = add nsw <4 x i32> %wide.masked.gather54, <i32 -1, i32 -1, i32 -1, i32 -1>
  %79 = add nsw <4 x i32> %wide.masked.gather55, <i32 -1, i32 -1, i32 -1, i32 -1>
  %80 = sext <4 x i32> %76 to <4 x i64>
  %81 = sext <4 x i32> %77 to <4 x i64>
  %82 = sext <4 x i32> %78 to <4 x i64>
  %83 = sext <4 x i32> %79 to <4 x i64>
  %84 = mul nsw <4 x i64> %80, %68
  %85 = mul nsw <4 x i64> %81, %69
  %86 = mul nsw <4 x i64> %82, %70
  %87 = mul nsw <4 x i64> %83, %71
  %88 = select <4 x i1> %64, <4 x i64> %84, <4 x i64> zeroinitializer
  %predphi56 = add <4 x i64> %vec.phi40, %88
  %89 = select <4 x i1> %65, <4 x i64> %85, <4 x i64> zeroinitializer
  %predphi57 = add <4 x i64> %vec.phi41, %89
  %90 = select <4 x i1> %66, <4 x i64> %86, <4 x i64> zeroinitializer
  %predphi58 = add <4 x i64> %vec.phi42, %90
  %91 = select <4 x i1> %67, <4 x i64> %87, <4 x i64> zeroinitializer
  %predphi59 = add <4 x i64> %vec.phi43, %91
  %index.next31 = add i64 %index30, 16
  %vec.ind.next39 = add <4 x i64> %vec.ind34, <i64 16, i64 16, i64 16, i64 16>
  %92 = icmp eq i64 %index.next31, %n.vec29
  br i1 %92, label %middle.block23, label %vector.body25, !llvm.loop !329

middle.block23:                                   ; preds = %vector.body25
  %bin.rdx60 = add <4 x i64> %predphi57, %predphi56
  %bin.rdx61 = add <4 x i64> %predphi58, %bin.rdx60
  %bin.rdx62 = add <4 x i64> %predphi59, %bin.rdx61
  %93 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %bin.rdx62)
  br label %for.body.i13.i.preheader64

for.body.i13.i.preheader64:                       ; preds = %middle.block23, %for.body.i13.i.preheader
  %indvars.iv.i10.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %n.vec29, %middle.block23 ]
  %index.018.i.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %93, %middle.block23 ]
  br label %for.body.i13.i

for.body.i13.i:                                   ; preds = %for.body.i13.i.preheader64, %if.end.i24.i
  %indvars.iv.i10.i = phi i64 [ %indvars.iv.next.i22.i, %if.end.i24.i ], [ %indvars.iv.i10.i.ph, %for.body.i13.i.preheader64 ]
  %index.018.i.i = phi i64 [ %index.1.i21.i, %if.end.i24.i ], [ %index.018.i.i.ph, %for.body.i13.i.preheader64 ]
  %stride2.i11.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %indvars.iv.i10.i, i32 2
  %94 = load i32, i32* %stride2.i11.i, align 4, !tbaa !182
  %cmp3.i12.i = icmp slt i32 %94, 0
  br i1 %cmp3.i12.i, label %if.then.i20.i, label %if.end.i24.i

if.then.i20.i:                                    ; preds = %for.body.i13.i
  %conv.i14.i = sext i32 %94 to i64
  %extent.i15.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %indvars.iv.i10.i, i32 1
  %95 = load i32, i32* %extent.i15.i, align 4, !tbaa !178
  %sub.i16.i = add nsw i32 %95, -1
  %conv7.i17.i = sext i32 %sub.i16.i to i64
  %mul.i18.i = mul nsw i64 %conv7.i17.i, %conv.i14.i
  %add.i19.i = add nsw i64 %mul.i18.i, %index.018.i.i
  br label %if.end.i24.i

if.end.i24.i:                                     ; preds = %if.then.i20.i, %for.body.i13.i
  %index.1.i21.i = phi i64 [ %add.i19.i, %if.then.i20.i ], [ %index.018.i.i, %for.body.i13.i ]
  %indvars.iv.next.i22.i = add nuw nsw i64 %indvars.iv.i10.i, 1
  %exitcond.not.i23.i = icmp eq i64 %indvars.iv.next.i22.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i23.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i13.i, !llvm.loop !330

_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit: ; preds = %if.end.i24.i
  %add8.i.i = add nsw i64 %index.1.i.i, 1
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

_ZNK15halide_buffer_t13size_in_bytesEv.exit:      ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, %if.end
  %add8.i27.i = phi i64 [ 1, %if.end ], [ %add8.i.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %index.0.lcssa.i9.i = phi i64 [ 0, %if.end ], [ %index.1.i21.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %sub.i = sub nsw i64 %add8.i27.i, %index.0.lcssa.i9.i
  %bits.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 4, i32 1
  %96 = load i8, i8* %bits.i.i, align 1, !tbaa !136
  %conv.i.i = zext i8 %96 to i64
  %add.i4.i = add nuw nsw i64 %conv.i.i, 7
  %div.i.i = lshr i64 %add.i4.i, 3
  %mul.i = mul i64 %div.i.i, %sub.i
  %call2 = tail call i8* @halide_malloc(i8* %user_context, i64 %mul.i) #15
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 2
  store i8* %call2, i8** %host, align 8, !tbaa !172
  %cmp4 = icmp eq i8* %call2, null
  br i1 %cmp4, label %cleanup13, label %if.end6

if.end6:                                          ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit
  %call7 = tail call i32 @halide_device_malloc(i8* %user_context, %struct.halide_buffer_t* nonnull %buf, %struct.halide_device_interface_t* %device_interface) #16
  %cmp8.not = icmp eq i32 %call7, 0
  br i1 %cmp8.not, label %cleanup13, label %if.then9

if.then9:                                         ; preds = %if.end6
  %97 = load i8*, i8** %host, align 8, !tbaa !172
  tail call void @halide_free(i8* %user_context, i8* %97) #15
  store i8* null, i8** %host, align 8, !tbaa !172
  br label %cleanup13

cleanup13:                                        ; preds = %if.then9, %if.end6, %_ZNK15halide_buffer_t13size_in_bytesEv.exit, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ -1, %_ZNK15halide_buffer_t13size_in_bytesEv.exit ], [ %call7, %if.then9 ], [ 0, %if.end6 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_and_host_free(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.30.104, i64 0, i64 0)) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !307
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !308
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end16.i.split

if.end16.i.split:                                 ; preds = %if.end16.i
  %call11 = tail call i32 @halide_device_free(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #16
  br label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split, label %cleanup

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %call12 = tail call i32 @halide_device_free(i8* %user_context, %struct.halide_buffer_t* %buf) #16
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split, %if.end16.i.split
  %phi.call = phi i32 [ %call11, %if.end16.i.split ], [ %call12, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split ]
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 2
  %4 = load i8*, i8** %host, align 8, !tbaa !172
  %tobool.not = icmp eq i8* %4, null
  br i1 %tobool.not, label %if.end5, label %if.then2

if.then2:                                         ; preds = %if.end
  tail call void @halide_free(i8* %user_context, i8* nonnull %4) #15
  store i8* null, i8** %host, align 8, !tbaa !172
  br label %if.end5

if.end5:                                          ; preds = %if.then2, %if.end
  %flags3.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %5 = load i64, i64* %flags3.i.i, align 8, !tbaa !308
  %and.i.i18 = and i64 %5, -4
  store i64 %and.i.i18, i64* %flags3.i.i, align 8, !tbaa !308
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.0 = phi i32 [ %phi.call, %if.end5 ], [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_wrap_native(i8* %user_context, %struct.halide_buffer_t* %buf, i64 %handle, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.31.105, i64 0, i64 0)) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !307
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !308
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup12

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface1.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface1.phi.trans.insert, align 8, !tbaa !307
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp2.not = icmp eq %struct.halide_device_interface_t* %4, null
  %cmp3.not = icmp eq %struct.halide_device_interface_t* %4, %device_interface
  %or.cond = or i1 %cmp2.not, %cmp3.not
  br i1 %or.cond, label %if.end5, label %if.then4

if.then4:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.32.106, i64 0, i64 0)) #15
  br label %cleanup12

if.end5:                                          ; preds = %if.end
  %device_interface1 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %device_interface, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !320
  tail call void %6() #15
  store %struct.halide_device_interface_t* %device_interface, %struct.halide_device_interface_t** %device_interface1, align 8, !tbaa !307
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %wrap_native = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i64 0, i32 14
  %8 = load i32 (i8*, %struct.halide_buffer_t*, i64)*, i32 (i8*, %struct.halide_buffer_t*, i64)** %wrap_native, align 8, !tbaa !331
  %call8 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf, i64 %handle) #15
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i64 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 8, !tbaa !322
  tail call void %10() #15
  %tobool.not = icmp eq i32 %call8, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -16
  ret i32 %spec.select

cleanup12:                                        ; preds = %if.then4, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ -42, %if.then4 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_detach_native(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33.107, i64 0, i64 0)) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !307
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !308
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface1.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface1.phi.trans.insert, align 8, !tbaa !307
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp2.not = icmp eq %struct.halide_device_interface_t* %4, null
  br i1 %cmp2.not, label %cleanup, label %if.then3

if.then3:                                         ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !320
  tail call void %6() #15
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %detach_native = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i64 0, i32 15
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %detach_native, align 8, !tbaa !332
  %call5 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i64 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 8, !tbaa !322
  tail call void %10() #15
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %11 = load i64, i64* %device, align 8, !tbaa !174
  %cmp7 = icmp eq i64 %11, 0
  br i1 %cmp7, label %do.end, label %if.then8

if.then8:                                         ; preds = %if.then3
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @.str.34.108, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end

do.end:                                           ; preds = %if.then8, %if.then3
  %tobool.not = icmp eq i32 %call5, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -33
  ret i32 %spec.select

cleanup:                                          ; preds = %if.end, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.0 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ 0, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_wrap_native(i8* %user_context, %struct.halide_buffer_t* %buf, i64 %handle) local_unnamed_addr #0 {
entry:
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !174
  %cmp.not = icmp eq i64 %0, 0
  br i1 %cmp.not, label %if.end, label %return

if.end:                                           ; preds = %entry
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %1 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %1, i64 0, i32 15
  %2 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %2, i64 0, i32 0
  %3 = load void ()*, void ()** %use_module, align 8, !tbaa !320
  tail call void %3() #15
  store i64 %handle, i64* %device, align 8, !tbaa !174
  br label %return

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end ], [ -32, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_detach_native(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.35, i64 0, i64 0)) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !307
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !308
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %.pre = load i64, i64* %device.phi.trans.insert, align 8, !tbaa !174
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi i64 [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %1, %if.end16.i ]
  %cmp1 = icmp eq i64 %4, 0
  br i1 %cmp1, label %cleanup, label %if.end3

if.end3:                                          ; preds = %if.end
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %5 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %5, i64 0, i32 15
  %6 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %6, i64 0, i32 1
  %7 = load void ()*, void ()** %release_module, align 8, !tbaa !322
  tail call void %7() #15
  store i64 0, i64* %device, align 8, !tbaa !174
  store %struct.halide_device_interface_t* null, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  br label %cleanup

cleanup:                                          ; preds = %if.end3, %if.end, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.0 = phi i32 [ 0, %if.end3 ], [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ 0, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak void @halide_device_and_host_free_as_destructor(i8* %user_context, i8* %obj) local_unnamed_addr #0 {
entry:
  %0 = bitcast i8* %obj to %struct.halide_buffer_t*
  %call = tail call i32 @halide_device_and_host_free(i8* %user_context, %struct.halide_buffer_t* %0) #16
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_device_host_nop_free(i8* %user_context, i8* %obj) local_unnamed_addr #2 {
entry:
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_default_buffer_copy(i8* %user_context, %struct.halide_buffer_t* %src, %struct.halide_device_interface_t* %dst_device_interface, %struct.halide_buffer_t* %dst) local_unnamed_addr #2 {
entry:
  ret i32 -39
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_buffer_copy_already_locked(i8* %user_context, %struct.halide_buffer_t* %src, %struct.halide_device_interface_t* %dst_device_interface, %struct.halide_buffer_t* %dst) local_unnamed_addr #0 {
entry:
  %c = alloca %"struct.Halide::Runtime::Internal::device_copy", align 8
  %tobool.not = icmp eq %struct.halide_device_interface_t* %dst_device_interface, null
  br i1 %tobool.not, label %if.end13, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  %tobool1.not = icmp eq %struct.halide_device_interface_t* %0, null
  %cmp.not = icmp eq %struct.halide_device_interface_t* %0, %dst_device_interface
  %or.cond = or i1 %tobool1.not, %cmp.not
  br i1 %or.cond, label %land.lhs.true5, label %if.then

if.then:                                          ; preds = %land.lhs.true
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.41, i64 0, i64 0)) #15
  br label %cleanup143

land.lhs.true5:                                   ; preds = %land.lhs.true
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 0
  %1 = load i64, i64* %device, align 8, !tbaa !174
  %tobool6.not = icmp eq i64 %1, 0
  br i1 %tobool6.not, label %if.then7, label %if.end13

if.then7:                                         ; preds = %land.lhs.true5
  %call = tail call i32 @halide_device_malloc(i8* %user_context, %struct.halide_buffer_t* nonnull %dst, %struct.halide_device_interface_t* nonnull %dst_device_interface) #16
  %tobool10.not = icmp eq i32 %call, 0
  br i1 %tobool10.not, label %if.end13, label %cleanup143

if.end13:                                         ; preds = %if.then7, %land.lhs.true5, %entry
  %device14 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 0
  %2 = load i64, i64* %device14, align 8, !tbaa !174
  %cmp15.not = icmp eq i64 %2, 0
  %host22.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 2
  %.pre = load i8*, i8** %host22.phi.trans.insert, align 8, !tbaa !172
  %cmp23.not = icmp eq i8* %.pre, null
  br i1 %cmp15.not, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end13
  br i1 %cmp23.not, label %land.end32, label %land.end.thread264

land.end.thread264:                               ; preds = %land.rhs
  %flags.i.i243 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 3
  %3 = load i64, i64* %flags.i.i243, align 8, !tbaa !308
  %and.i.i244 = and i64 %3, 1
  %cmp.i.i.not = icmp ne i64 %and.i.i244, 0
  br label %land.rhs26

land.end:                                         ; preds = %if.end13
  br i1 %cmp23.not, label %land.end32, label %land.end.land.rhs26_crit_edge

land.end.land.rhs26_crit_edge:                    ; preds = %land.end
  %flags.i.i247.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 3
  %.pre1 = load i64, i64* %flags.i.i247.phi.trans.insert, align 8, !tbaa !308
  br label %land.rhs26

land.rhs26:                                       ; preds = %land.end.land.rhs26_crit_edge, %land.end.thread264
  %4 = phi i64 [ %3, %land.end.thread264 ], [ %.pre1, %land.end.land.rhs26_crit_edge ]
  %5 = phi i1 [ %cmp.i.i.not, %land.end.thread264 ], [ true, %land.end.land.rhs26_crit_edge ]
  %and.i.i248 = and i64 %4, 2
  %cmp.i.i249.not = icmp eq i64 %and.i.i248, 0
  br i1 %cmp.i.i249.not, label %land.end32, label %lor.rhs28

lor.rhs28:                                        ; preds = %land.rhs26
  %device_interface29 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %6 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface29, align 8, !tbaa !307
  %cmp30 = icmp ne %struct.halide_device_interface_t* %6, null
  br label %land.end32

land.end32:                                       ; preds = %lor.rhs28, %land.rhs26, %land.end, %land.rhs
  %cmp23.not263 = phi i1 [ true, %land.end ], [ false, %land.rhs26 ], [ false, %lor.rhs28 ], [ true, %land.rhs ]
  %7 = phi i1 [ true, %land.end ], [ %5, %land.rhs26 ], [ %5, %lor.rhs28 ], [ false, %land.rhs ]
  %8 = phi i1 [ true, %land.end ], [ false, %land.rhs26 ], [ %cmp30, %lor.rhs28 ], [ true, %land.rhs ]
  %host34 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 2
  %9 = load i8*, i8** %host34, align 8, !tbaa !172
  %cmp35.not = icmp eq i8* %9, null
  %cmp20.not = xor i1 %tobool.not, true
  %10 = and i1 %tobool.not, %cmp35.not
  br i1 %10, label %cleanup143, label %if.end41

if.end41:                                         ; preds = %land.end32
  %brmerge229 = or i1 %tobool.not, %7
  br i1 %brmerge229, label %if.then51, label %if.end49

if.end49:                                         ; preds = %if.end41
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %dst_device_interface, i64 0, i32 15
  %11 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %buffer_copy = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %11, i64 0, i32 10
  %12 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)** %buffer_copy, align 8, !tbaa !333
  %call48 = tail call i32 %12(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* nonnull %dst_device_interface, %struct.halide_buffer_t* nonnull %dst) #15
  %cmp50 = icmp eq i32 %call48, -42
  br i1 %cmp50, label %if.then51, label %if.end117

if.then51:                                        ; preds = %if.end49, %if.end41
  %brmerge231.demorgan = and i1 %cmp23.not263, %cmp35.not
  br i1 %brmerge231.demorgan, label %cleanup143, label %if.end58

if.end58:                                         ; preds = %if.then51
  %brmerge234 = or i1 %8, %cmp20.not
  br i1 %brmerge234, label %if.else, label %if.end117.thread258

if.end117.thread258:                              ; preds = %if.end58
  %13 = bitcast %"struct.Halide::Runtime::Internal::device_copy"* %c to i8*
  call void @llvm.lifetime.start.p0i8(i64 416, i8* nonnull %13) #10
  call void @_ZN6Halide7Runtime8Internal16make_buffer_copyEPK15halide_buffer_tbS4_b(%"struct.Halide::Runtime::Internal::device_copy"* nonnull sret(%"struct.Halide::Runtime::Internal::device_copy") align 8 %c, %struct.halide_buffer_t* nonnull %src, i1 zeroext true, %struct.halide_buffer_t* nonnull %dst, i1 zeroext true) #16
  call void @_ZN6Halide7Runtime8Internal11copy_memoryERKNS1_11device_copyEPv(%"struct.Halide::Runtime::Internal::device_copy"* nonnull align 8 dereferenceable(416) %c, i8* %user_context) #16
  call void @llvm.lifetime.end.p0i8(i64 416, i8* nonnull %13) #10
  br label %land.lhs.true126

if.else:                                          ; preds = %if.end58
  %brmerge237 = or i1 %7, %cmp20.not
  br i1 %brmerge237, label %if.else81, label %if.then66

if.then66:                                        ; preds = %if.else
  %device_interface69 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %14 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface69, align 8, !tbaa !307
  %impl70 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %14, i64 0, i32 15
  %15 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl70, align 8, !tbaa !314
  %buffer_copy71 = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %15, i64 0, i32 10
  %16 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)** %buffer_copy71, align 8, !tbaa !333
  %call72 = tail call i32 %16(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* null, %struct.halide_buffer_t* nonnull %dst) #15
  %cmp73 = icmp eq i32 %call72, -42
  br i1 %cmp73, label %if.then74, label %if.end117

if.then74:                                        ; preds = %if.then66
  %call75 = tail call i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP15halide_buffer_t(i8* %user_context, %struct.halide_buffer_t* nonnull %src) #16
  %tobool76.not = icmp eq i32 %call75, 0
  br i1 %tobool76.not, label %if.then77, label %cleanup143

if.then77:                                        ; preds = %if.then74
  %call78 = tail call i32 @halide_buffer_copy_already_locked(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* null, %struct.halide_buffer_t* nonnull %dst) #16
  br label %if.end117

if.else81:                                        ; preds = %if.else
  %brmerge239 = or i1 %7, %cmp35.not
  br i1 %brmerge239, label %if.else98, label %if.then85

if.then85:                                        ; preds = %if.else81
  %device_interface90 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %17 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface90, align 8, !tbaa !307
  %impl91 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %17, i64 0, i32 15
  %18 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl91, align 8, !tbaa !314
  %buffer_copy92 = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %18, i64 0, i32 10
  %19 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)** %buffer_copy92, align 8, !tbaa !333
  %call93 = tail call i32 %19(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* null, %struct.halide_buffer_t* nonnull %dst) #15
  %cmp94 = icmp eq i32 %call93, 0
  br i1 %cmp94, label %if.then95, label %cleanup143

if.then95:                                        ; preds = %if.then85
  %flags.i.i245 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 3
  %20 = load i64, i64* %flags.i.i245, align 8, !tbaa !308
  %or.i.i246 = or i64 %20, 1
  store i64 %or.i.i246, i64* %flags.i.i245, align 8, !tbaa !308
  %call96 = tail call i32 @copy_to_device_already_locked(i8* %user_context, %struct.halide_buffer_t* nonnull %dst, %struct.halide_device_interface_t* %dst_device_interface) #16
  br label %if.end117

if.else98:                                        ; preds = %if.else81
  br i1 %tobool.not, label %cleanup143, label %if.then100

if.then100:                                       ; preds = %if.else98
  %call103 = tail call i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP15halide_buffer_t(i8* %user_context, %struct.halide_buffer_t* nonnull %src) #16
  %cmp104 = icmp eq i32 %call103, 0
  br i1 %cmp104, label %if.then105, label %cleanup143

if.then105:                                       ; preds = %if.then100
  %impl106 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %dst_device_interface, i64 0, i32 15
  %21 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl106, align 8, !tbaa !314
  %buffer_copy107 = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %21, i64 0, i32 10
  %22 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)** %buffer_copy107, align 8, !tbaa !333
  %call108 = tail call i32 %22(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* nonnull %dst_device_interface, %struct.halide_buffer_t* nonnull %dst) #15
  br label %if.end117

if.end117:                                        ; preds = %if.then105, %if.then95, %if.then77, %if.then66, %if.end49
  %err.1 = phi i32 [ %call78, %if.then77 ], [ %call72, %if.then66 ], [ %call96, %if.then95 ], [ %call108, %if.then105 ], [ %call48, %if.end49 ]
  %cond = icmp eq i32 %err.1, 0
  br i1 %cond, label %land.lhs.true126, label %cleanup143

land.lhs.true126:                                 ; preds = %if.end117, %if.end117.thread258
  %cmp127.not.old = icmp eq %struct.halide_buffer_t* %dst, %src
  br i1 %cmp127.not.old, label %cleanup143, label %if.then128

if.then128:                                       ; preds = %land.lhs.true126
  %flags.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 3
  %23 = load i64, i64* %flags.i.i, align 8, !tbaa !308
  %or.i.i = and i64 %23, -4
  br i1 %tobool.not, label %if.else133, label %if.then130

if.then130:                                       ; preds = %if.then128
  %or.i.i242 = or i64 %or.i.i, 2
  store i64 %or.i.i242, i64* %flags.i.i, align 8, !tbaa !308
  br label %cleanup143

if.else133:                                       ; preds = %if.then128
  %and.i.i251 = or i64 %or.i.i, 1
  store i64 %and.i.i251, i64* %flags.i.i, align 8, !tbaa !308
  br label %cleanup143

cleanup143:                                       ; preds = %if.else133, %if.then130, %land.lhs.true126, %if.end117, %if.then100, %if.else98, %if.then85, %if.then74, %if.then51, %land.end32, %if.then7, %if.then
  %retval.1 = phi i32 [ -42, %if.then ], [ %call, %if.then7 ], [ -34, %land.end32 ], [ 0, %if.then130 ], [ 0, %if.else133 ], [ 0, %land.lhs.true126 ], [ -42, %if.then51 ], [ %err.1, %if.end117 ], [ -42, %if.else98 ], [ %call103, %if.then100 ], [ %call93, %if.then85 ], [ %call75, %if.then74 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind
define weak i32 @halide_buffer_copy(i8* %user_context, %struct.halide_buffer_t* %src, %struct.halide_device_interface_t* %dst_device_interface, %struct.halide_buffer_t* %dst) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #15
  %tobool.not = icmp eq %struct.halide_device_interface_t* %dst_device_interface, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %dst_device_interface, i64 0, i32 15
  %0 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %0, i64 0, i32 0
  %1 = load void ()*, void ()** %use_module, align 8, !tbaa !320
  tail call void %1() #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %2 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  %tobool11.not = icmp eq %struct.halide_device_interface_t* %2, null
  br i1 %tobool11.not, label %if.end16, label %if.then12

if.then12:                                        ; preds = %if.end
  %impl14 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %2, i64 0, i32 15
  %3 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl14, align 8, !tbaa !314
  %use_module15 = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %3, i64 0, i32 0
  %4 = load void ()*, void ()** %use_module15, align 8, !tbaa !320
  tail call void %4() #15
  br label %if.end16

if.end16:                                         ; preds = %if.then12, %if.end
  %call = tail call i32 @halide_buffer_copy_already_locked(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* %dst_device_interface, %struct.halide_buffer_t* %dst) #16
  br i1 %tobool.not, label %if.end20, label %if.then18

if.then18:                                        ; preds = %if.end16
  %impl19 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %dst_device_interface, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl19, align 8, !tbaa !314
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 1
  %6 = load void ()*, void ()** %release_module, align 8, !tbaa !322
  tail call void %6() #15
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %if.end16
  %7 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  %tobool22.not = icmp eq %struct.halide_device_interface_t* %7, null
  br i1 %tobool22.not, label %if.end27, label %if.then23

if.then23:                                        ; preds = %if.end20
  %impl25 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %7, i64 0, i32 15
  %8 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl25, align 8, !tbaa !314
  %release_module26 = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %8, i64 0, i32 1
  %9 = load void ()*, void ()** %release_module26, align 8, !tbaa !322
  tail call void %9() #15
  br label %if.end27

if.end27:                                         ; preds = %if.then23, %if.end20
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #15
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_crop(i8* %user_context, %struct.halide_buffer_t* %src, %struct.halide_buffer_t* %dst) local_unnamed_addr #0 {
entry:
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.58, i64 0, i64 0)) #15
  ret i32 -40
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_slice(i8* %user_context, %struct.halide_buffer_t* %src, i32 %slice_dim, i32 %slice_pos, %struct.halide_buffer_t* %dst) local_unnamed_addr #0 {
entry:
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.59, i64 0, i64 0)) #15
  ret i32 -40
}

; Function Attrs: nounwind
define weak i32 @halide_device_crop(i8* %user_context, %struct.halide_buffer_t* %src, %struct.halide_buffer_t* %dst) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #15
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !174
  %tobool.not = icmp eq i64 %0, 0
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %device1 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 0
  %1 = load i64, i64* %device1, align 8, !tbaa !174
  %tobool2.not = icmp eq i64 %1, 0
  br i1 %tobool2.not, label %if.end4, label %if.then3

if.then3:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.60, i64 0, i64 0)) #15
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 5
  %2 = load i32, i32* %dimensions, align 4, !tbaa !175
  %dimensions5 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 5
  %3 = load i32, i32* %dimensions5, align 4, !tbaa !175
  %cmp.not = icmp eq i32 %2, %3
  br i1 %cmp.not, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end4
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.61, i64 0, i64 0)) #15
  br label %cleanup

if.end7:                                          ; preds = %if.end4
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %4 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !320
  tail call void %6() #15
  %7 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  %impl9 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %7, i64 0, i32 15
  %8 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl9, align 8, !tbaa !314
  %device_crop = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %8, i64 0, i32 11
  %9 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_buffer_t*)** %device_crop, align 8, !tbaa !334
  %call = tail call i32 %9(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_buffer_t* nonnull %dst) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %if.then6, %if.then3, %entry
  %retval.0 = phi i32 [ -41, %if.then3 ], [ -41, %if.then6 ], [ %call, %if.end7 ], [ 0, %entry ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #15
  ret i32 %retval.0
}

; Function Attrs: nounwind
define weak i32 @halide_device_slice(i8* %user_context, %struct.halide_buffer_t* %src, i32 %slice_dim, i32 %slice_pos, %struct.halide_buffer_t* %dst) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #15
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !174
  %tobool.not = icmp eq i64 %0, 0
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %device1 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 0
  %1 = load i64, i64* %device1, align 8, !tbaa !174
  %tobool2.not = icmp eq i64 %1, 0
  br i1 %tobool2.not, label %if.end4, label %if.then3

if.then3:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.60, i64 0, i64 0)) #15
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 5
  %2 = load i32, i32* %dimensions, align 4, !tbaa !175
  %dimensions5 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 5
  %3 = load i32, i32* %dimensions5, align 4, !tbaa !175
  %add = add nsw i32 %3, 1
  %cmp.not = icmp eq i32 %2, %add
  br i1 %cmp.not, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end4
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.64, i64 0, i64 0)) #15
  br label %cleanup

if.end7:                                          ; preds = %if.end4
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %4 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !320
  tail call void %6() #15
  %7 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  %impl9 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %7, i64 0, i32 15
  %8 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl9, align 8, !tbaa !314
  %device_slice = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %8, i64 0, i32 12
  %9 = load i32 (i8*, %struct.halide_buffer_t*, i32, i32, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, i32, i32, %struct.halide_buffer_t*)** %device_slice, align 8, !tbaa !335
  %call = tail call i32 %9(i8* %user_context, %struct.halide_buffer_t* nonnull %src, i32 %slice_dim, i32 %slice_pos, %struct.halide_buffer_t* nonnull %dst) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %if.then6, %if.then3, %entry
  %retval.0 = phi i32 [ -41, %if.then3 ], [ -41, %if.then6 ], [ %call, %if.end7 ], [ 0, %entry ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #15
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_release_crop(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !174
  %tobool.not = icmp eq i64 %0, 0
  br i1 %tobool.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.58, i64 0, i64 0)) #15
  br label %return

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i32 [ -40, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind
define weak i32 @halide_device_release_crop(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #4 {
entry:
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !174
  %tobool.not = icmp eq i64 %0, 0
  br i1 %tobool.not, label %return, label %if.then

if.then:                                          ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #15
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %1 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %1, i64 0, i32 15
  %2 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %device_release_crop = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %2, i64 0, i32 13
  %3 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_release_crop, align 8, !tbaa !336
  %call = tail call i32 %3(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  store i64 0, i64* %device, align 8, !tbaa !174
  %4 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %4, i64 0, i32 1
  %5 = load void ()*, void ()** %release_module, align 8, !tbaa !322
  tail call void %5() #15
  store %struct.halide_device_interface_t* null, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #15
  br label %return

return:                                           ; preds = %if.then, %entry
  %retval.0 = phi i32 [ %call, %if.then ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind willreturn mustprogress
define weak float @halide_float16_bits_to_float(i16 zeroext %bits) local_unnamed_addr #2 {
entry:
  %conv = zext i16 %bits to i32
  %and2 = and i32 %conv, 1023
  %and4 = lshr i32 %conv, 10
  %0 = and i32 %and4, 31
  %cmp = icmp eq i32 %0, 0
  %cmp5 = icmp ne i32 %and2, 0
  %or.cond = and i1 %cmp5, %cmp
  br i1 %or.cond, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = tail call i32 @llvm.ctlz.i32(i32 %and2, i1 true), !range !337
  %sub6 = xor i32 %1, 31
  %shl7 = shl nuw i32 1, %sub6
  %neg = xor i32 %shl7, -1
  %and8 = and i32 %and2, %neg
  %sub9 = sub nsw i32 23, %sub6
  %shl10 = shl i32 %and8, %sub9
  %add11.neg = mul nsw i32 %1, -8388608
  %shl12 = add i32 %add11.neg, 1124073472
  br label %if.end28

if.else:                                          ; preds = %entry
  %shl14 = shl nuw nsw i32 %and2, 13
  br i1 %cmp, label %if.end28, label %if.else18

if.else18:                                        ; preds = %if.else
  %cmp19 = icmp eq i32 %0, 31
  br i1 %cmp19, label %if.end28, label %if.else21

if.else21:                                        ; preds = %if.else18
  %add22 = shl nuw nsw i32 %0, 23
  %phi.bo = add nuw nsw i32 %add22, 939524096
  br label %if.end28

if.end28:                                         ; preds = %if.else21, %if.else18, %if.else, %if.then
  %shl14.sink = phi i32 [ %shl12, %if.then ], [ %shl14, %if.else18 ], [ %shl14, %if.else ], [ %shl14, %if.else21 ]
  %reEncodedExponent15.0.sink = phi i32 [ %shl10, %if.then ], [ 2139095040, %if.else18 ], [ 0, %if.else ], [ %phi.bo, %if.else21 ]
  %bits.signext = sext i16 %bits to i32
  %shl = and i32 %bits.signext, -2147483648
  %or25 = or i32 %shl14.sink, %shl
  %or26 = or i32 %or25, %reEncodedExponent15.0.sink
  %result.sroa.0.0 = bitcast i32 %or26 to float
  ret float %result.sroa.0.0
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #7

; Function Attrs: nounwind willreturn mustprogress
define weak double @halide_float16_bits_to_double(i16 zeroext %bits) local_unnamed_addr #2 {
entry:
  %call = tail call float @halide_float16_bits_to_float(i16 zeroext %bits) #16
  %conv = fpext float %call to double
  ret double %conv
}

; Function Attrs: nounwind
define weak i32 @halide_error_bounds_inference_call_failed(i8* %user_context, i8* %extern_stage_name, i32 %result) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i71 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.111, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i72 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.111, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i71, %entry.split ], [ %call.i72, %if.then6.i ]
  %ref.tmp.sroa.16.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i10 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.16.0, i8* %extern_stage_name) #15
  %call.i13 = tail call i8* @halide_string_to_string(i8* %call.i10, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.112, i64 0, i64 0)) #15
  %conv.i = sext i32 %result to i64
  %call.i16 = tail call i8* @halide_int64_to_string(i8* %call.i13, i8* %ref.tmp.sroa.16.0, i64 %conv.i, i32 1) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i16 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 %result
}

; Function Attrs: nounwind
define weak i32 @halide_error_extern_stage_failed(i8* %user_context, i8* %extern_stage_name, i32 %result) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i71 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.113, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i72 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.113, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i71, %entry.split ], [ %call.i72, %if.then6.i ]
  %ref.tmp.sroa.16.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i10 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.16.0, i8* %extern_stage_name) #15
  %call.i13 = tail call i8* @halide_string_to_string(i8* %call.i10, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.112, i64 0, i64 0)) #15
  %conv.i = sext i32 %result to i64
  %call.i16 = tail call i8* @halide_int64_to_string(i8* %call.i13, i8* %ref.tmp.sroa.16.0, i64 %conv.i, i32 1) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i16 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 %result
}

; Function Attrs: nounwind
define weak i32 @halide_error_explicit_bounds_too_small(i8* %user_context, i8* %func_name, i8* %var_name, i32 %min_bound, i32 %max_bound, i32 %min_required, i32 %max_required) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i151 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.114, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i152 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.114, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i151, %entry.split ], [ %call.i152, %if.then6.i ]
  %ref.tmp.sroa.34.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i18 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.34.0, i8* %var_name) #15
  %call.i21 = tail call i8* @halide_string_to_string(i8* %call.i18, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.115, i64 0, i64 0)) #15
  %call.i24 = tail call i8* @halide_string_to_string(i8* %call.i21, i8* %ref.tmp.sroa.34.0, i8* %func_name) #15
  %call.i27 = tail call i8* @halide_string_to_string(i8* %call.i24, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5.116, i64 0, i64 0)) #15
  %conv.i = sext i32 %min_bound to i64
  %call.i30 = tail call i8* @halide_int64_to_string(i8* %call.i27, i8* %ref.tmp.sroa.34.0, i64 %conv.i, i32 1) #15
  %call.i33 = tail call i8* @halide_string_to_string(i8* %call.i30, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.117, i64 0, i64 0)) #15
  %conv.i36 = sext i32 %max_bound to i64
  %call.i37 = tail call i8* @halide_int64_to_string(i8* %call.i33, i8* %ref.tmp.sroa.34.0, i64 %conv.i36, i32 1) #15
  %call.i40 = tail call i8* @halide_string_to_string(i8* %call.i37, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.118, i64 0, i64 0)) #15
  %conv.i43 = sext i32 %min_required to i64
  %call.i44 = tail call i8* @halide_int64_to_string(i8* %call.i40, i8* %ref.tmp.sroa.34.0, i64 %conv.i43, i32 1) #15
  %call.i47 = tail call i8* @halide_string_to_string(i8* %call.i44, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.117, i64 0, i64 0)) #15
  %conv.i50 = sext i32 %max_required to i64
  %call.i51 = tail call i8* @halide_int64_to_string(i8* %call.i47, i8* %ref.tmp.sroa.34.0, i64 %conv.i50, i32 1) #15
  %call.i54 = tail call i8* @halide_string_to_string(i8* %call.i51, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.119, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i54 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -2
}

; Function Attrs: nounwind
define weak i32 @halide_error_bad_type(i8* %user_context, i8* %func_name, i32 %type_given_bits, i32 %correct_type_bits) local_unnamed_addr #4 {
entry:
  %type_given_bits.addr = alloca i32, align 4
  %correct_type_bits.addr = alloca i32, align 4
  %correct_type = alloca %struct.halide_type_t, align 2
  %type_given = alloca %struct.halide_type_t, align 2
  store i32 %type_given_bits, i32* %type_given_bits.addr, align 4, !tbaa !73
  store i32 %correct_type_bits, i32* %correct_type_bits.addr, align 4, !tbaa !73
  %0 = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %correct_type, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #10
  store i8 0, i8* %0, align 2, !tbaa !305
  %bits.i = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %correct_type, i64 0, i32 1
  store i8 0, i8* %bits.i, align 1, !tbaa !136
  %lanes.i = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %correct_type, i64 0, i32 2
  store i16 0, i16* %lanes.i, align 2, !tbaa !306
  %1 = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %type_given, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #10
  store i8 0, i8* %1, align 2, !tbaa !305
  %bits.i8 = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %type_given, i64 0, i32 1
  store i8 0, i8* %bits.i8, align 1, !tbaa !136
  %lanes.i9 = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %type_given, i64 0, i32 2
  store i16 0, i16* %lanes.i9, align 2, !tbaa !306
  %2 = bitcast i32* %correct_type_bits.addr to i8*
  %call = call i8* @memcpy(i8* nonnull %0, i8* nonnull %2, i64 4) #15
  %3 = bitcast i32* %type_given_bits.addr to i8*
  %call1 = call i8* @memcpy(i8* nonnull %1, i8* nonnull %3, i64 4) #15
  %call.i = call i8* @malloc(i64 1024) #15
  %tobool.not.i12 = icmp eq i8* %call.i, null
  br i1 %tobool.not.i12, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i151 = call i8* @halide_string_to_string(i8* null, i8* null, i8* %func_name) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i152 = call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* %func_name) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i151, %entry.split ], [ %call.i152, %if.then6.i ]
  %ref.tmp.sroa.18.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i18 = call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.18.0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9.120, i64 0, i64 0)) #15
  %call.i21 = call i8* @halide_type_to_string(i8* %call.i18, i8* %ref.tmp.sroa.18.0, %struct.halide_type_t* nonnull %correct_type) #15
  %call.i24 = call i8* @halide_string_to_string(i8* %call.i21, i8* %ref.tmp.sroa.18.0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10.121, i64 0, i64 0)) #15
  %call.i27 = call i8* @halide_type_to_string(i8* %call.i24, i8* %ref.tmp.sroa.18.0, %struct.halide_type_t* nonnull %type_given) #15
  br i1 %tobool.not.i12, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i27 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  call void @free(i8* %call.i) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #10
  ret i32 -3
}

; Function Attrs: nounwind
define weak i32 @halide_error_bad_dimensions(i8* %user_context, i8* %func_name, i32 %dimensions_given, i32 %correct_dimensions) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* %func_name) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* %func_name) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.122, i64 0, i64 0)) #15
  %conv.i = sext i32 %correct_dimensions to i64
  %call.i14 = tail call i8* @halide_int64_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i64 %conv.i, i32 1) #15
  %call.i17 = tail call i8* @halide_string_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.12.123, i64 0, i64 0)) #15
  %conv.i20 = sext i32 %dimensions_given to i64
  %call.i21 = tail call i8* @halide_int64_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i64 %conv.i20, i32 1) #15
  %call.i24 = tail call i8* @halide_string_to_string(i8* %call.i21, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13.124, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i24 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -43
}

; Function Attrs: nounwind
define weak i32 @halide_error_access_out_of_bounds(i8* %user_context, i8* %func_name, i32 %dimension, i32 %min_touched, i32 %max_touched, i32 %min_valid, i32 %max_valid) local_unnamed_addr #4 {
entry:
  %cmp = icmp slt i32 %min_touched, %min_valid
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.split, label %if.then6.i

if.then.split:                                    ; preds = %if.then
  %call.i271 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* %func_name) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %if.then
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i272 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* %func_name) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then.split, %if.then6.i
  %phi.call = phi i8* [ %call.i271, %if.then.split ], [ %call.i272, %if.then6.i ]
  %ref.tmp.sroa.22.0 = phi i8* [ null, %if.then.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i30 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14.125, i64 0, i64 0)) #15
  %conv.i = sext i32 %min_touched to i64
  %call.i33 = tail call i8* @halide_int64_to_string(i8* %call.i30, i8* %ref.tmp.sroa.22.0, i64 %conv.i, i32 1) #15
  %call.i36 = tail call i8* @halide_string_to_string(i8* %call.i33, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15.126, i64 0, i64 0)) #15
  %conv.i39 = sext i32 %min_valid to i64
  %call.i40 = tail call i8* @halide_int64_to_string(i8* %call.i36, i8* %ref.tmp.sroa.22.0, i64 %conv.i39, i32 1) #15
  %call.i43 = tail call i8* @halide_string_to_string(i8* %call.i40, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16.127, i64 0, i64 0)) #15
  %conv.i46 = sext i32 %dimension to i64
  %call.i47 = tail call i8* @halide_int64_to_string(i8* %call.i43, i8* %ref.tmp.sroa.22.0, i64 %conv.i46, i32 1) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %if.end17.sink.split

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i47 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %if.end17.sink.split

if.else:                                          ; preds = %entry
  %cmp7 = icmp sgt i32 %max_touched, %max_valid
  br i1 %cmp7, label %if.then8, label %if.end17

if.then8:                                         ; preds = %if.else
  %call.i53 = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i56 = icmp eq i8* %call.i53, null
  br i1 %tobool.not.i56, label %if.then8.split, label %if.then6.i59

if.then8.split:                                   ; preds = %if.then8
  %call.i653 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* %func_name) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit62

if.then6.i59:                                     ; preds = %if.then8
  %add.ptr.i57 = getelementptr inbounds i8, i8* %call.i53, i64 1023
  store i8 0, i8* %add.ptr.i57, align 1, !tbaa !14
  %call.i654 = tail call i8* @halide_string_to_string(i8* nonnull %call.i53, i8* nonnull %add.ptr.i57, i8* %func_name) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit62

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit62: ; preds = %if.then8.split, %if.then6.i59
  %phi.call5 = phi i8* [ %call.i653, %if.then8.split ], [ %call.i654, %if.then6.i59 ]
  %ref.tmp9.sroa.22.0 = phi i8* [ null, %if.then8.split ], [ %add.ptr.i57, %if.then6.i59 ]
  %call.i68 = tail call i8* @halide_string_to_string(i8* %phi.call5, i8* %ref.tmp9.sroa.22.0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14.125, i64 0, i64 0)) #15
  %conv.i71 = sext i32 %max_touched to i64
  %call.i72 = tail call i8* @halide_int64_to_string(i8* %call.i68, i8* %ref.tmp9.sroa.22.0, i64 %conv.i71, i32 1) #15
  %call.i75 = tail call i8* @halide_string_to_string(i8* %call.i72, i8* %ref.tmp9.sroa.22.0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17.128, i64 0, i64 0)) #15
  %conv.i78 = sext i32 %max_valid to i64
  %call.i79 = tail call i8* @halide_int64_to_string(i8* %call.i75, i8* %ref.tmp9.sroa.22.0, i64 %conv.i78, i32 1) #15
  %call.i82 = tail call i8* @halide_string_to_string(i8* %call.i79, i8* %ref.tmp9.sroa.22.0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16.127, i64 0, i64 0)) #15
  %conv.i85 = sext i32 %dimension to i64
  %call.i86 = tail call i8* @halide_int64_to_string(i8* %call.i82, i8* %ref.tmp9.sroa.22.0, i64 %conv.i85, i32 1) #15
  br i1 %tobool.not.i56, label %if.then.i90, label %if.else.i100

if.then.i90:                                      ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit62
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %if.end17.sink.split

if.else.i100:                                     ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit62
  %sub.ptr.lhs.cast.i.i95 = ptrtoint i8* %call.i86 to i64
  %sub.ptr.rhs.cast.i.i96 = ptrtoint i8* %call.i53 to i64
  %sub.ptr.sub.i.i97 = sub i64 1, %sub.ptr.rhs.cast.i.i96
  %add.i.i98 = add i64 %sub.ptr.sub.i.i97, %sub.ptr.lhs.cast.i.i95
  %call.i.i99 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i53, i64 %add.i.i98) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i53) #15
  br label %if.end17.sink.split

if.end17.sink.split:                              ; preds = %if.else.i100, %if.then.i90, %if.else.i, %if.then.i
  %call.i53.sink = phi i8* [ %call.i, %if.else.i ], [ null, %if.then.i ], [ %call.i53, %if.else.i100 ], [ null, %if.then.i90 ]
  tail call void @free(i8* %call.i53.sink) #15
  br label %if.end17

if.end17:                                         ; preds = %if.end17.sink.split, %if.else
  ret i32 -4
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_allocation_too_large(i8* %user_context, i8* %buffer_name, i64 %allocation_size, i64 %max_size) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18.129, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18.129, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %buffer_name) #15
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #15
  %call.i17 = tail call i8* @halide_uint64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %allocation_size, i32 1) #15
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.20.131, i64 0, i64 0)) #15
  %call.i23 = tail call i8* @halide_uint64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %max_size, i32 1) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -5
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_extents_negative(i8* %user_context, i8* %buffer_name, i32 %dimension, i32 %extent) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i91 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21.132, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i92 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21.132, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i91, %entry.split ], [ %call.i92, %if.then6.i ]
  %ref.tmp.sroa.22.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i12 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.22.0, i8* %buffer_name) #15
  %call.i15 = tail call i8* @halide_string_to_string(i8* %call.i12, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22.133, i64 0, i64 0)) #15
  %conv.i = sext i32 %dimension to i64
  %call.i18 = tail call i8* @halide_int64_to_string(i8* %call.i15, i8* %ref.tmp.sroa.22.0, i64 %conv.i, i32 1) #15
  %call.i21 = tail call i8* @halide_string_to_string(i8* %call.i18, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23.134, i64 0, i64 0)) #15
  %conv.i24 = sext i32 %extent to i64
  %call.i25 = tail call i8* @halide_int64_to_string(i8* %call.i21, i8* %ref.tmp.sroa.22.0, i64 %conv.i24, i32 1) #15
  %call.i28 = tail call i8* @halide_string_to_string(i8* %call.i25, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.119, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i28 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -28
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_extents_too_large(i8* %user_context, i8* %buffer_name, i64 %actual_size, i64 %max_size) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24.135, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24.135, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %buffer_name) #15
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #15
  %call.i17 = tail call i8* @halide_int64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %actual_size, i32 1) #15
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.20.131, i64 0, i64 0)) #15
  %call.i23 = tail call i8* @halide_int64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %max_size, i32 1) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -6
}

; Function Attrs: nounwind
define weak i32 @halide_error_constraints_make_required_region_smaller(i8* %user_context, i8* %buffer_name, i32 %dimension, i32 %constrained_min, i32 %constrained_extent, i32 %required_min, i32 %required_extent) local_unnamed_addr #4 {
entry:
  %add = add i32 %required_min, -1
  %sub = add i32 %add, %required_extent
  %add1 = add i32 %constrained_min, -1
  %sub2 = add i32 %add1, %constrained_extent
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i231 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25.136, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i232 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25.136, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i231, %entry.split ], [ %call.i232, %if.then6.i ]
  %ref.tmp.sroa.38.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i26 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.38.0, i8* %buffer_name) #15
  %call.i29 = tail call i8* @halide_string_to_string(i8* %call.i26, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.26.137, i64 0, i64 0)) #15
  %conv.i = sext i32 %dimension to i64
  %call.i32 = tail call i8* @halide_int64_to_string(i8* %call.i29, i8* %ref.tmp.sroa.38.0, i64 %conv.i, i32 1) #15
  %call.i35 = tail call i8* @halide_string_to_string(i8* %call.i32, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.138, i64 0, i64 0)) #15
  %call.i38 = tail call i8* @halide_string_to_string(i8* %call.i35, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28.139, i64 0, i64 0)) #15
  %conv.i41 = sext i32 %required_min to i64
  %call.i42 = tail call i8* @halide_int64_to_string(i8* %call.i38, i8* %ref.tmp.sroa.38.0, i64 %conv.i41, i32 1) #15
  %call.i45 = tail call i8* @halide_string_to_string(i8* %call.i42, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.117, i64 0, i64 0)) #15
  %conv.i48 = sext i32 %sub to i64
  %call.i49 = tail call i8* @halide_int64_to_string(i8* %call.i45, i8* %ref.tmp.sroa.38.0, i64 %conv.i48, i32 1) #15
  %call.i52 = tail call i8* @halide_string_to_string(i8* %call.i49, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.138, i64 0, i64 0)) #15
  %call.i55 = tail call i8* @halide_string_to_string(i8* %call.i52, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.29.140, i64 0, i64 0)) #15
  %conv.i58 = sext i32 %constrained_min to i64
  %call.i59 = tail call i8* @halide_int64_to_string(i8* %call.i55, i8* %ref.tmp.sroa.38.0, i64 %conv.i58, i32 1) #15
  %call.i62 = tail call i8* @halide_string_to_string(i8* %call.i59, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.117, i64 0, i64 0)) #15
  %conv.i65 = sext i32 %sub2 to i64
  %call.i66 = tail call i8* @halide_int64_to_string(i8* %call.i62, i8* %ref.tmp.sroa.38.0, i64 %conv.i65, i32 1) #15
  %call.i69 = tail call i8* @halide_string_to_string(i8* %call.i66, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.141, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i69 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -7
}

; Function Attrs: nounwind
define weak i32 @halide_error_constraint_violated(i8* %user_context, i8* %var, i32 %val, i8* %constrained_var, i32 %constrained_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i111 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31.142, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i112 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31.142, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i111, %entry.split ], [ %call.i112, %if.then6.i ]
  %ref.tmp.sroa.26.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i14 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.26.0, i8* %var) #15
  %call.i17 = tail call i8* @halide_string_to_string(i8* %call.i14, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32.143, i64 0, i64 0)) #15
  %conv.i = sext i32 %val to i64
  %call.i20 = tail call i8* @halide_int64_to_string(i8* %call.i17, i8* %ref.tmp.sroa.26.0, i64 %conv.i, i32 1) #15
  %call.i23 = tail call i8* @halide_string_to_string(i8* %call.i20, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33.144, i64 0, i64 0)) #15
  %call.i26 = tail call i8* @halide_string_to_string(i8* %call.i23, i8* %ref.tmp.sroa.26.0, i8* %constrained_var) #15
  %call.i29 = tail call i8* @halide_string_to_string(i8* %call.i26, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32.143, i64 0, i64 0)) #15
  %conv.i32 = sext i32 %constrained_val to i64
  %call.i33 = tail call i8* @halide_int64_to_string(i8* %call.i29, i8* %ref.tmp.sroa.26.0, i64 %conv.i32, i32 1) #15
  %call.i36 = tail call i8* @halide_string_to_string(i8* %call.i33, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.119, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i36 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -8
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_small_i64(i8* %user_context, i8* %param_name, i64 %val, i64 %min_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %param_name) #15
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #15
  %call.i17 = tail call i8* @halide_int64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %val, i32 1) #15
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35.146, i64 0, i64 0)) #15
  %call.i23 = tail call i8* @halide_int64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %min_val, i32 1) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -9
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_small_u64(i8* %user_context, i8* %param_name, i64 %val, i64 %min_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %param_name) #15
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #15
  %call.i17 = tail call i8* @halide_uint64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %val, i32 1) #15
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35.146, i64 0, i64 0)) #15
  %call.i23 = tail call i8* @halide_uint64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %min_val, i32 1) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -9
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_small_f64(i8* %user_context, i8* %param_name, double %val, double %min_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %param_name) #15
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #15
  %call.i17 = tail call i8* @halide_double_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, double %val, i32 1) #15
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35.146, i64 0, i64 0)) #15
  %call.i23 = tail call i8* @halide_double_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, double %min_val, i32 1) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -9
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_large_i64(i8* %user_context, i8* %param_name, i64 %val, i64 %max_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %param_name) #15
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #15
  %call.i17 = tail call i8* @halide_int64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %val, i32 1) #15
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36, i64 0, i64 0)) #15
  %call.i23 = tail call i8* @halide_int64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %max_val, i32 1) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -10
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_large_u64(i8* %user_context, i8* %param_name, i64 %val, i64 %max_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %param_name) #15
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #15
  %call.i17 = tail call i8* @halide_uint64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %val, i32 1) #15
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36, i64 0, i64 0)) #15
  %call.i23 = tail call i8* @halide_uint64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %max_val, i32 1) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -10
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_large_f64(i8* %user_context, i8* %param_name, double %val, double %max_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %param_name) #15
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #15
  %call.i17 = tail call i8* @halide_double_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, double %val, i32 1) #15
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36, i64 0, i64 0)) #15
  %call.i23 = tail call i8* @halide_double_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, double %max_val, i32 1) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -10
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_error_out_of_memory(i8* %user_context) local_unnamed_addr #0 {
entry:
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.37, i64 0, i64 0)) #15
  ret i32 -11
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_argument_is_null(i8* %user_context, i8* %buffer_name) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i51 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i52 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i51, %entry.split ], [ %call.i52, %if.then6.i ]
  %ref.tmp.sroa.14.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i8 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.14.0, i8* %buffer_name) #15
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i8, i8* %ref.tmp.sroa.14.0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i11 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -12
}

; Function Attrs: nounwind
define weak i32 @halide_error_debug_to_file_failed(i8* %user_context, i8* %func, i8* %filename, i32 %error_code) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.40, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.40, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %func) #15
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41.147, i64 0, i64 0)) #15
  %call.i17 = tail call i8* @halide_string_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i8* %filename) #15
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i64 0, i64 0)) #15
  %conv.i = sext i32 %error_code to i64
  %call.i23 = tail call i8* @halide_int64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %conv.i, i32 1) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -13
}

; Function Attrs: nounwind
define weak i32 @halide_error_unaligned_host_ptr(i8* %user_context, i8* %func, i32 %alignment) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i71 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i72 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i71, %entry.split ], [ %call.i72, %if.then6.i ]
  %ref.tmp.sroa.18.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i10 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.18.0, i8* %func) #15
  %call.i13 = tail call i8* @halide_string_to_string(i8* %call.i10, i8* %ref.tmp.sroa.18.0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.44, i64 0, i64 0)) #15
  %conv.i = sext i32 %alignment to i64
  %call.i16 = tail call i8* @halide_int64_to_string(i8* %call.i13, i8* %ref.tmp.sroa.18.0, i64 %conv.i, i32 1) #15
  %call.i19 = tail call i8* @halide_string_to_string(i8* %call.i16, i8* %ref.tmp.sroa.18.0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.45, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i19 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -24
}

; Function Attrs: nounwind
define weak i32 @halide_error_device_dirty_with_no_device_support(i8* %user_context, i8* %func) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i61 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i62 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i61, %entry.split ], [ %call.i62, %if.then6.i ]
  %ref.tmp.sroa.16.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i9 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.16.0, i8* %func) #15
  %call.i12 = tail call i8* @halide_string_to_string(i8* %call.i9, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.47, i64 0, i64 0)) #15
  %call.i15 = tail call i8* @halide_string_to_string(i8* %call.i12, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.48, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i15 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -44
}

; Function Attrs: nounwind
define weak i32 @halide_error_host_is_null(i8* %user_context, i8* %func) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i51 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i52 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i51, %entry.split ], [ %call.i52, %if.then6.i ]
  %ref.tmp.sroa.14.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i8 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.14.0, i8* %func) #15
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i8, i8* %ref.tmp.sroa.14.0, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.49, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i11 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -34
}

; Function Attrs: nounwind
define weak i32 @halide_error_bad_fold(i8* %user_context, i8* %func_name, i8* %var_name, i8* %loop_name) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i91 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.50.148, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i92 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.50.148, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i91, %entry.split ], [ %call.i92, %if.then6.i ]
  %ref.tmp.sroa.22.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i12 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.22.0, i8* %var_name) #15
  %call.i15 = tail call i8* @halide_string_to_string(i8* %call.i12, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0)) #15
  %call.i18 = tail call i8* @halide_string_to_string(i8* %call.i15, i8* %ref.tmp.sroa.22.0, i8* %func_name) #15
  %call.i21 = tail call i8* @halide_string_to_string(i8* %call.i18, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.52, i64 0, i64 0)) #15
  %call.i24 = tail call i8* @halide_string_to_string(i8* %call.i21, i8* %ref.tmp.sroa.22.0, i8* %loop_name) #15
  %call.i27 = tail call i8* @halide_string_to_string(i8* %call.i24, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.141, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i27 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -25
}

; Function Attrs: nounwind
define weak i32 @halide_error_bad_extern_fold(i8* %user_context, i8* %func_name, i32 %dim, i32 %min, i32 %extent, i32 %valid_min, i32 %fold_factor) local_unnamed_addr #4 {
entry:
  %cmp = icmp slt i32 %min, %valid_min
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %add = add nsw i32 %extent, %min
  %add1 = add nsw i32 %fold_factor, %valid_min
  %cmp2 = icmp sgt i32 %add, %add1
  br i1 %cmp2, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.split, label %if.then6.i

if.then.split:                                    ; preds = %if.then
  %call.i521 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %if.then
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i522 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then.split, %if.then6.i
  %phi.call = phi i8* [ %call.i521, %if.then.split ], [ %call.i522, %if.then6.i ]
  %ref.tmp.sroa.36.0 = phi i8* [ null, %if.then.split ], [ %add.ptr.i, %if.then6.i ]
  %conv.i = sext i32 %dim to i64
  %call.i55 = tail call i8* @halide_int64_to_string(i8* %phi.call, i8* %ref.tmp.sroa.36.0, i64 %conv.i, i32 1) #15
  %call.i58 = tail call i8* @halide_string_to_string(i8* %call.i55, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0)) #15
  %call.i61 = tail call i8* @halide_string_to_string(i8* %call.i58, i8* %ref.tmp.sroa.36.0, i8* %func_name) #15
  %call.i64 = tail call i8* @halide_string_to_string(i8* %call.i61, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.54, i64 0, i64 0)) #15
  %conv.i67 = sext i32 %min to i64
  %call.i68 = tail call i8* @halide_int64_to_string(i8* %call.i64, i8* %ref.tmp.sroa.36.0, i64 %conv.i67, i32 1) #15
  %call.i71 = tail call i8* @halide_string_to_string(i8* %call.i68, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #15
  %add9 = add nsw i32 %extent, %min
  %sub = add nsw i32 %add9, -1
  %conv.i74 = sext i32 %sub to i64
  %call.i75 = tail call i8* @halide_int64_to_string(i8* %call.i71, i8* %ref.tmp.sroa.36.0, i64 %conv.i74, i32 1) #15
  %call.i78 = tail call i8* @halide_string_to_string(i8* %call.i75, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0)) #15
  %call.i81 = tail call i8* @halide_string_to_string(i8* %call.i78, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.57, i64 0, i64 0)) #15
  %conv.i84 = sext i32 %valid_min to i64
  %call.i85 = tail call i8* @halide_int64_to_string(i8* %call.i81, i8* %ref.tmp.sroa.36.0, i64 %conv.i84, i32 1) #15
  %call.i88 = tail call i8* @halide_string_to_string(i8* %call.i85, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #15
  %add15 = add nsw i32 %fold_factor, %valid_min
  %sub16 = add nsw i32 %add15, -1
  %conv.i91 = sext i32 %sub16 to i64
  %call.i92 = tail call i8* @halide_int64_to_string(i8* %call.i88, i8* %ref.tmp.sroa.36.0, i64 %conv.i91, i32 1) #15
  %call.i95 = tail call i8* @halide_string_to_string(i8* %call.i92, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.58.149, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %if.end

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i95 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %if.end

if.else:                                          ; preds = %lor.lhs.false
  %call.i101 = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i104 = icmp eq i8* %call.i101, null
  br i1 %tobool.not.i104, label %if.else.split, label %if.then6.i107

if.else.split:                                    ; preds = %if.else
  %call.i1133 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit110

if.then6.i107:                                    ; preds = %if.else
  %add.ptr.i105 = getelementptr inbounds i8, i8* %call.i101, i64 1023
  store i8 0, i8* %add.ptr.i105, align 1, !tbaa !14
  %call.i1134 = tail call i8* @halide_string_to_string(i8* nonnull %call.i101, i8* nonnull %add.ptr.i105, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit110

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit110: ; preds = %if.else.split, %if.then6.i107
  %phi.call5 = phi i8* [ %call.i1133, %if.else.split ], [ %call.i1134, %if.then6.i107 ]
  %ref.tmp19.sroa.34.0 = phi i8* [ null, %if.else.split ], [ %add.ptr.i105, %if.then6.i107 ]
  %conv.i116 = sext i32 %dim to i64
  %call.i117 = tail call i8* @halide_int64_to_string(i8* %phi.call5, i8* %ref.tmp19.sroa.34.0, i64 %conv.i116, i32 1) #15
  %call.i120 = tail call i8* @halide_string_to_string(i8* %call.i117, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0)) #15
  %call.i123 = tail call i8* @halide_string_to_string(i8* %call.i120, i8* %ref.tmp19.sroa.34.0, i8* %func_name) #15
  %call.i126 = tail call i8* @halide_string_to_string(i8* %call.i123, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.54, i64 0, i64 0)) #15
  %conv.i129 = sext i32 %min to i64
  %call.i130 = tail call i8* @halide_int64_to_string(i8* %call.i126, i8* %ref.tmp19.sroa.34.0, i64 %conv.i129, i32 1) #15
  %call.i133 = tail call i8* @halide_string_to_string(i8* %call.i130, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #15
  %sub28 = add nsw i32 %add, -1
  %conv.i136 = sext i32 %sub28 to i64
  %call.i137 = tail call i8* @halide_int64_to_string(i8* %call.i133, i8* %ref.tmp19.sroa.34.0, i64 %conv.i136, i32 1) #15
  %call.i140 = tail call i8* @halide_string_to_string(i8* %call.i137, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0)) #15
  %call.i143 = tail call i8* @halide_string_to_string(i8* %call.i140, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.59.150, i64 0, i64 0)) #15
  %call.i146 = tail call i8* @halide_string_to_string(i8* %call.i143, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.60.151, i64 0, i64 0)) #15
  %conv.i149 = sext i32 %fold_factor to i64
  %call.i150 = tail call i8* @halide_int64_to_string(i8* %call.i146, i8* %ref.tmp19.sroa.34.0, i64 %conv.i149, i32 1) #15
  %call.i153 = tail call i8* @halide_string_to_string(i8* %call.i150, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.141, i64 0, i64 0)) #15
  br i1 %tobool.not.i104, label %if.then.i157, label %if.else.i167

if.then.i157:                                     ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit110
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %if.end

if.else.i167:                                     ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit110
  %sub.ptr.lhs.cast.i.i162 = ptrtoint i8* %call.i153 to i64
  %sub.ptr.rhs.cast.i.i163 = ptrtoint i8* %call.i101 to i64
  %sub.ptr.sub.i.i164 = sub i64 1, %sub.ptr.rhs.cast.i.i163
  %add.i.i165 = add i64 %sub.ptr.sub.i.i164, %sub.ptr.lhs.cast.i.i162
  %call.i.i166 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i101, i64 %add.i.i165) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i101) #15
  br label %if.end

if.end:                                           ; preds = %if.else.i167, %if.then.i157, %if.else.i, %if.then.i
  %call.i101.sink = phi i8* [ %call.i, %if.else.i ], [ null, %if.then.i ], [ %call.i101, %if.else.i167 ], [ null, %if.then.i157 ]
  tail call void @free(i8* %call.i101.sink) #15
  ret i32 -35
}

; Function Attrs: nounwind
define weak i32 @halide_error_fold_factor_too_small(i8* %user_context, i8* %func_name, i8* %var_name, i32 %fold_factor, i8* %loop_name, i32 %required_extent) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i131 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.61.152, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i132 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.61.152, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i131, %entry.split ], [ %call.i132, %if.then6.i ]
  %ref.tmp.sroa.30.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %conv.i = sext i32 %fold_factor to i64
  %call.i16 = tail call i8* @halide_int64_to_string(i8* %phi.call, i8* %ref.tmp.sroa.30.0, i64 %conv.i, i32 1) #15
  %call.i19 = tail call i8* @halide_string_to_string(i8* %call.i16, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62, i64 0, i64 0)) #15
  %call.i22 = tail call i8* @halide_string_to_string(i8* %call.i19, i8* %ref.tmp.sroa.30.0, i8* %var_name) #15
  %call.i25 = tail call i8* @halide_string_to_string(i8* %call.i22, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0)) #15
  %call.i28 = tail call i8* @halide_string_to_string(i8* %call.i25, i8* %ref.tmp.sroa.30.0, i8* %func_name) #15
  %call.i31 = tail call i8* @halide_string_to_string(i8* %call.i28, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.63, i64 0, i64 0)) #15
  %call.i34 = tail call i8* @halide_string_to_string(i8* %call.i31, i8* %ref.tmp.sroa.30.0, i8* %loop_name) #15
  %call.i37 = tail call i8* @halide_string_to_string(i8* %call.i34, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32.143, i64 0, i64 0)) #15
  %conv.i40 = sext i32 %required_extent to i64
  %call.i41 = tail call i8* @halide_int64_to_string(i8* %call.i37, i8* %ref.tmp.sroa.30.0, i64 %conv.i40, i32 1) #15
  %call.i44 = tail call i8* @halide_string_to_string(i8* %call.i41, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64.153, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i44 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -26
}

; Function Attrs: nounwind
define weak i32 @halide_error_requirement_failed(i8* %user_context, i8* %condition, i8* %message) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i61 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.65, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i62 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.65, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i61, %entry.split ], [ %call.i62, %if.then6.i ]
  %ref.tmp.sroa.16.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i9 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.16.0, i8* %condition) #15
  %call.i12 = tail call i8* @halide_string_to_string(i8* %call.i9, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.66, i64 0, i64 0)) #15
  %call.i15 = tail call i8* @halide_string_to_string(i8* %call.i12, i8* %ref.tmp.sroa.16.0, i8* %message) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i15 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -27
}

; Function Attrs: nounwind
define weak i32 @halide_error_specialize_fail(i8* %user_context, i8* %message) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %call.i41 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0)) #15
  %call.i75 = tail call i8* @halide_string_to_string(i8* %call.i41, i8* null, i8* %message) #15
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i42 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0)) #15
  %call.i7 = tail call i8* @halide_string_to_string(i8* %call.i42, i8* nonnull %add.ptr.i, i8* %message) #15
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i7 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -31
}

; Function Attrs: nounwind
define weak i32 @halide_error_no_device_interface(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %call.i316 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.68, i64 0, i64 0)) #15
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i3 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.68, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i3 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -19
}

; Function Attrs: nounwind
define weak i32 @halide_error_device_interface_no_device(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %call.i316 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.69, i64 0, i64 0)) #15
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i3 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.69, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i3 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -36
}

; Function Attrs: nounwind
define weak i32 @halide_error_host_and_device_dirty(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %call.i316 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.70, i64 0, i64 0)) #15
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i3 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.70, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i3 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -37
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_is_null(i8* %user_context, i8* %routine) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i51 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.71, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i52 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.71, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i51, %entry.split ], [ %call.i52, %if.then6.i ]
  %ref.tmp.sroa.14.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i8 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.14.0, i8* %routine) #15
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i8, i8* %ref.tmp.sroa.14.0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.72, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i11 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -38
}

; Function Attrs: nounwind
define weak i32 @halide_error_storage_bound_too_small(i8* %user_context, i8* %func_name, i8* %var_name, i32 %provided_size, i32 %required_size) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i111 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.73, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i112 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.73, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i111, %entry.split ], [ %call.i112, %if.then6.i ]
  %ref.tmp.sroa.26.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %conv.i = sext i32 %provided_size to i64
  %call.i14 = tail call i8* @halide_int64_to_string(i8* %phi.call, i8* %ref.tmp.sroa.26.0, i64 %conv.i, i32 1) #15
  %call.i17 = tail call i8* @halide_string_to_string(i8* %call.i14, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62, i64 0, i64 0)) #15
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.26.0, i8* %var_name) #15
  %call.i23 = tail call i8* @halide_string_to_string(i8* %call.i20, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0)) #15
  %call.i26 = tail call i8* @halide_string_to_string(i8* %call.i23, i8* %ref.tmp.sroa.26.0, i8* %func_name) #15
  %call.i29 = tail call i8* @halide_string_to_string(i8* %call.i26, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.74, i64 0, i64 0)) #15
  %conv.i32 = sext i32 %required_size to i64
  %call.i33 = tail call i8* @halide_int64_to_string(i8* %call.i29, i8* %ref.tmp.sroa.26.0, i64 %conv.i32, i32 1) #15
  %call.i36 = tail call i8* @halide_string_to_string(i8* %call.i33, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64.153, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i36 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -45
}

; Function Attrs: nounwind
define weak i32 @halide_error_device_crop_failed(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %call.i316 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.75, i64 0, i64 0)) #15
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i3 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.75, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i3 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -41
}

; Function Attrs: nounwind mustprogress
define weak void @halide_profiler_shutdown() #0 {
entry:
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #16
  %sampling_thread = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 7
  %0 = load %struct.halide_thread*, %struct.halide_thread** %sampling_thread, align 8, !tbaa !338
  %tobool.not = icmp eq %struct.halide_thread* %0, null
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %current_func = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 3
  store i32 -2, i32* %current_func, align 8, !tbaa !340
  tail call void @halide_join_thread(%struct.halide_thread* nonnull %0) #15
  store %struct.halide_thread* null, %struct.halide_thread** %sampling_thread, align 8, !tbaa !338
  store i32 -1, i32* %current_func, align 8, !tbaa !340
  tail call void @halide_profiler_report_unlocked(i8* null, %struct.halide_profiler_state* nonnull %call) #16
  tail call void @halide_profiler_reset_unlocked(%struct.halide_profiler_state* nonnull %call) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak %struct.halide_profiler_state* @halide_profiler_get_state() local_unnamed_addr #2 {
entry:
  ret %struct.halide_profiler_state* @_ZZ25halide_profiler_get_stateE1s
}

; Function Attrs: nounwind
define weak void @halide_profiler_report_unlocked(i8* %user_context, %struct.halide_profiler_state* %s) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %sstr.sroa.125.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %pipelines = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 5
  %p.0624 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !10
  %tobool.not625 = icmp eq %struct.halide_profiler_pipeline_stats* %p.0624, null
  br i1 %tobool.not625, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EEC2EPvPc.exit
  %sub.ptr.rhs.cast.i.i348 = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i349 = sub i64 1, %sub.ptr.rhs.cast.i.i348
  br label %for.body

for.cond.cleanup:                                 ; preds = %cleanup181, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EEC2EPvPc.exit
  %sstr.sroa.19.0.lcssa = phi i8* [ %call.i, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EEC2EPvPc.exit ], [ %sstr.sroa.19.15, %cleanup181 ]
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %for.cond.cleanup
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %for.cond.cleanup
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %sstr.sroa.19.0.lcssa to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret void

for.body:                                         ; preds = %cleanup181, %for.body.lr.ph
  %p.0627 = phi %struct.halide_profiler_pipeline_stats* [ %p.0624, %for.body.lr.ph ], [ %p.0, %cleanup181 ]
  %sstr.sroa.19.0626 = phi i8* [ %call.i, %for.body.lr.ph ], [ %sstr.sroa.19.15, %cleanup181 ]
  %time = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 0
  %0 = load i64, i64* %time, align 8, !tbaa !341
  %conv = uitofp i64 %0 to float
  %div = fdiv float %conv, 1.000000e+06
  %runs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 11
  %1 = load i32, i32* %runs, align 8, !tbaa !343
  %tobool1.not = icmp eq i32 %1, 0
  br i1 %tobool1.not, label %cleanup181, label %if.end

if.end:                                           ; preds = %for.body
  br i1 %tobool.not.i, label %if.end.split, label %if.then.i278

if.end.split:                                     ; preds = %if.end
  %active_threads_numerator1 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 4
  %2 = load i64, i64* %active_threads_numerator1, align 8, !tbaa !344
  %active_threads_denominator2 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 5
  %3 = load i64, i64* %active_threads_denominator2, align 8, !tbaa !345
  %cmp3 = icmp eq i64 %2, %3
  %name4 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 6
  %4 = load i8*, i8** %name4, align 8, !tbaa !346
  %call.i2825 = tail call i8* @halide_string_to_string(i8* null, i8* %sstr.sroa.125.0, i8* %4) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit

if.then.i278:                                     ; preds = %if.end
  store i8 0, i8* %call.i, align 1, !tbaa !14
  %active_threads_numerator6 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 4
  %5 = load i64, i64* %active_threads_numerator6, align 8, !tbaa !344
  %active_threads_denominator7 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 5
  %6 = load i64, i64* %active_threads_denominator7, align 8, !tbaa !345
  %cmp8 = icmp eq i64 %5, %6
  %name9 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 6
  %7 = load i8*, i8** %name9, align 8, !tbaa !346
  %call.i28210 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* %sstr.sroa.125.0, i8* %7) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit: ; preds = %if.end.split, %if.then.i278
  %8 = phi i64 [ %2, %if.end.split ], [ %5, %if.then.i278 ]
  %9 = phi i64 [ %3, %if.end.split ], [ %6, %if.then.i278 ]
  %10 = phi i1 [ %cmp3, %if.end.split ], [ %cmp8, %if.then.i278 ]
  %phi.call = phi i8* [ %call.i2825, %if.end.split ], [ %call.i28210, %if.then.i278 ]
  %call.i285 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.164, i64 0, i64 0)) #15
  %call.i288 = tail call i8* @halide_string_to_string(i8* %call.i285, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.165, i64 0, i64 0)) #15
  %conv.i = fpext float %div to double
  %call.i291 = tail call i8* @halide_double_to_string(i8* %call.i288, i8* %sstr.sroa.125.0, double %conv.i, i32 0) #15
  %call.i294 = tail call i8* @halide_string_to_string(i8* %call.i291, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9.166, i64 0, i64 0)) #15
  %call.i297 = tail call i8* @halide_string_to_string(i8* %call.i294, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10.167, i64 0, i64 0)) #15
  %samples = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 12
  %11 = load i32, i32* %samples, align 4, !tbaa !347
  %conv.i300 = sext i32 %11 to i64
  %call.i301 = tail call i8* @halide_int64_to_string(i8* %call.i297, i8* %sstr.sroa.125.0, i64 %conv.i300, i32 1) #15
  %call.i304 = tail call i8* @halide_string_to_string(i8* %call.i301, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.168, i64 0, i64 0)) #15
  %12 = load i32, i32* %runs, align 8, !tbaa !343
  %conv.i307 = sext i32 %12 to i64
  %call.i308 = tail call i8* @halide_int64_to_string(i8* %call.i304, i8* %sstr.sroa.125.0, i64 %conv.i307, i32 1) #15
  %call.i311 = tail call i8* @halide_string_to_string(i8* %call.i308, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.169, i64 0, i64 0)) #15
  %13 = load i32, i32* %runs, align 8, !tbaa !343
  %conv19 = sitofp i32 %13 to float
  %div20 = fdiv float %div, %conv19
  %conv.i314 = fpext float %div20 to double
  %call.i315 = tail call i8* @halide_double_to_string(i8* %call.i311, i8* %sstr.sroa.125.0, double %conv.i314, i32 0) #15
  %call.i318 = tail call i8* @halide_string_to_string(i8* %call.i315, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.170, i64 0, i64 0)) #15
  br i1 %10, label %if.end28, label %if.then24

if.then24:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit
  %conv3 = uitofp i64 %8 to double
  %conv5 = uitofp i64 %9 to double
  %add = fadd double %conv5, 1.000000e-10
  %div6 = fdiv double %conv3, %add
  %conv7 = fptrunc double %div6 to float
  %call.i321 = tail call i8* @halide_string_to_string(i8* %call.i318, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.171, i64 0, i64 0)) #15
  %conv.i324 = fpext float %conv7 to double
  %call.i325 = tail call i8* @halide_double_to_string(i8* %call.i321, i8* %sstr.sroa.125.0, double %conv.i324, i32 0) #15
  %call.i328 = tail call i8* @halide_string_to_string(i8* %call.i325, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.164, i64 0, i64 0)) #15
  br label %if.end28

if.end28:                                         ; preds = %if.then24, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit
  %sstr.sroa.19.1 = phi i8* [ %call.i318, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit ], [ %call.i328, %if.then24 ]
  %call.i331 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.1, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.15.172, i64 0, i64 0)) #15
  %num_allocs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 13
  %14 = load i32, i32* %num_allocs, align 8, !tbaa !348
  %conv.i334 = sext i32 %14 to i64
  %call.i335 = tail call i8* @halide_int64_to_string(i8* %call.i331, i8* %sstr.sroa.125.0, i64 %conv.i334, i32 1) #15
  %call.i338 = tail call i8* @halide_string_to_string(i8* %call.i335, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.173, i64 0, i64 0)) #15
  %memory_peak = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 2
  %15 = load i64, i64* %memory_peak, align 8, !tbaa !349
  %call.i341 = tail call i8* @halide_uint64_to_string(i8* %call.i338, i8* %sstr.sroa.125.0, i64 %15, i32 1) #15
  %call.i344 = tail call i8* @halide_string_to_string(i8* %call.i341, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17.174, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit, label %if.then.i352

if.then.i352:                                     ; preds = %if.end28
  %sub.ptr.lhs.cast.i.i347 = ptrtoint i8* %call.i344 to i64
  %add.i.i350 = add i64 %sub.ptr.sub.i.i349, %sub.ptr.lhs.cast.i.i347
  %call.i.i351 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i350) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit: ; preds = %if.then.i352, %if.end28
  %retval.0.i = phi i8* [ %call.i, %if.then.i352 ], [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0), %if.end28 ]
  tail call void @halide_print(i8* %user_context, i8* nonnull %retval.0.i) #15
  %16 = load i64, i64* %time, align 8, !tbaa !341
  %tobool36.not = icmp eq i64 %16, 0
  br i1 %tobool36.not, label %lor.end, label %for.cond53.preheader

lor.end:                                          ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit
  %memory_total = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 3
  %17 = load i64, i64* %memory_total, align 8, !tbaa !350
  %tobool37.not = icmp eq i64 %17, 0
  br i1 %tobool37.not, label %for.cond41.preheader, label %for.cond53.preheader

for.cond41.preheader:                             ; preds = %lor.end
  %num_funcs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 9
  %18 = load i32, i32* %num_funcs, align 8, !tbaa !351
  %cmp42589 = icmp sgt i32 %18, 0
  br i1 %cmp42589, label %for.body44.lr.ph, label %cleanup181

for.body44.lr.ph:                                 ; preds = %for.cond41.preheader
  %funcs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 7
  %19 = load %struct.halide_profiler_func_stats*, %struct.halide_profiler_func_stats** %funcs, align 8, !tbaa !352
  %20 = zext i32 %18 to i64
  br label %for.body44

for.cond41:                                       ; preds = %for.body44
  %exitcond.not = icmp eq i64 %indvars.iv.next, %20
  br i1 %exitcond.not, label %cleanup181, label %for.body44, !llvm.loop !353

for.body44:                                       ; preds = %for.cond41, %for.body44.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body44.lr.ph ], [ %indvars.iv.next, %for.cond41 ]
  %stack_peak = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %19, i64 %indvars.iv, i32 4
  %21 = load i64, i64* %stack_peak, align 8, !tbaa !354
  %tobool45.not = icmp eq i64 %21, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %tobool45.not, label %for.cond41, label %for.cond53.preheader

for.cond53.preheader:                             ; preds = %for.body44, %lor.end, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit
  %num_funcs54 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 9
  %22 = load i32, i32* %num_funcs54, align 8, !tbaa !351
  %cmp55621 = icmp sgt i32 %22, 0
  br i1 %cmp55621, label %for.body57.lr.ph, label %cleanup181

for.body57.lr.ph:                                 ; preds = %for.cond53.preheader
  %funcs59 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 7
  br label %for.body57

for.body57:                                       ; preds = %cleanup172, %for.body57.lr.ph
  %indvars.iv630 = phi i64 [ 0, %for.body57.lr.ph ], [ %indvars.iv.next631, %cleanup172 ]
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit358, label %if.then.i356

if.then.i356:                                     ; preds = %for.body57
  store i8 0, i8* %call.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit358

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit358: ; preds = %if.then.i356, %for.body57
  %23 = load %struct.halide_profiler_func_stats*, %struct.halide_profiler_func_stats** %funcs59, align 8, !tbaa !352
  %add.ptr61 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %23, i64 %indvars.iv630
  %cmp62 = icmp eq i64 %indvars.iv630, 0
  br i1 %cmp62, label %land.lhs.true, label %if.end66

land.lhs.true:                                    ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit358
  %time63 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %add.ptr61, i64 0, i32 0
  %24 = load i64, i64* %time63, align 8, !tbaa !356
  %cmp64 = icmp eq i64 %24, 0
  br i1 %cmp64, label %cleanup172, label %if.end66

if.end66:                                         ; preds = %land.lhs.true, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit358
  %call.i361 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.175, i64 0, i64 0)) #15
  %name68 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %23, i64 %indvars.iv630, i32 7
  %25 = load i8*, i8** %name68, align 8, !tbaa !357
  %call.i364 = tail call i8* @halide_string_to_string(i8* %call.i361, i8* %sstr.sroa.125.0, i8* %25) #15
  %call.i367 = tail call i8* @halide_string_to_string(i8* %call.i364, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19.176, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i591 = ptrtoint i8* %call.i367 to i64
  %sub.ptr.sub.i592 = sub i64 %sub.ptr.lhs.cast.i591, %sub.ptr.rhs.cast.i.i348
  %cmp73593 = icmp ult i64 %sub.ptr.sub.i592, 25
  br i1 %cmp73593, label %while.body, label %while.end

while.body:                                       ; preds = %if.end66, %while.body
  %sstr.sroa.19.3594 = phi i8* [ %call.i384, %while.body ], [ %call.i367, %if.end66 ]
  %call.i384 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.3594, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i = ptrtoint i8* %call.i384 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i.i348
  %cmp73 = icmp ult i64 %sub.ptr.sub.i, 25
  br i1 %cmp73, label %while.body, label %while.end, !llvm.loop !358

while.end:                                        ; preds = %while.body, %if.end66
  %sstr.sroa.19.3.lcssa = phi i8* [ %call.i367, %if.end66 ], [ %call.i384, %while.body ]
  %time75 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %add.ptr61, i64 0, i32 0
  %26 = load i64, i64* %time75, align 8, !tbaa !356
  %conv76 = uitofp i64 %26 to float
  %27 = load i32, i32* %runs, align 8, !tbaa !343
  %conv78 = sitofp i32 %27 to float
  %mul = fmul float %conv78, 1.000000e+06
  %div79 = fdiv float %conv76, %mul
  %conv.i387 = fpext float %div79 to double
  %call.i388 = tail call i8* @halide_double_to_string(i8* %sstr.sroa.19.3.lcssa, i8* %sstr.sroa.125.0, double %conv.i387, i32 0) #15
  %tobool.not.i390 = icmp eq i8* %call.i388, null
  br i1 %tobool.not.i390, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit, label %if.then.i393

if.then.i393:                                     ; preds = %while.end
  %add.ptr.i391 = getelementptr inbounds i8, i8* %call.i388, i64 -3
  %cmp.i = icmp ult i8* %add.ptr.i391, %call.i
  %spec.store.select.i = select i1 %cmp.i, i8* %call.i, i8* %add.ptr.i391
  store i8 0, i8* %spec.store.select.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit: ; preds = %if.then.i393, %while.end
  %sstr.sroa.19.4 = phi i8* [ null, %while.end ], [ %spec.store.select.i, %if.then.i393 ]
  %call.i399 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.4, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21.178, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i400596 = ptrtoint i8* %call.i399 to i64
  %sub.ptr.sub.i402597 = sub i64 %sub.ptr.lhs.cast.i400596, %sub.ptr.rhs.cast.i.i348
  %cmp85598 = icmp ult i64 %sub.ptr.sub.i402597, 35
  br i1 %cmp85598, label %while.body86, label %while.end88

while.body86:                                     ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit, %while.body86
  %sstr.sroa.19.5599 = phi i8* [ %call.i408, %while.body86 ], [ %call.i399, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit ]
  %call.i408 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.5599, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i400 = ptrtoint i8* %call.i408 to i64
  %sub.ptr.sub.i402 = sub i64 %sub.ptr.lhs.cast.i400, %sub.ptr.rhs.cast.i.i348
  %cmp85 = icmp ult i64 %sub.ptr.sub.i402, 35
  br i1 %cmp85, label %while.body86, label %while.end88, !llvm.loop !359

while.end88:                                      ; preds = %while.body86, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit
  %sstr.sroa.19.5.lcssa = phi i8* [ %call.i399, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit ], [ %call.i408, %while.body86 ]
  %28 = load i64, i64* %time, align 8, !tbaa !341
  %cmp90.not = icmp eq i64 %28, 0
  br i1 %cmp90.not, label %if.end97, label %if.then91

if.then91:                                        ; preds = %while.end88
  %29 = load i64, i64* %time75, align 8, !tbaa !356
  %mul93 = mul i64 %29, 100
  %div95 = udiv i64 %mul93, %28
  br label %if.end97

if.end97:                                         ; preds = %if.then91, %while.end88
  %percent.0 = phi i64 [ %div95, %if.then91 ], [ 0, %while.end88 ]
  %call.i411 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.5.lcssa, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22.179, i64 0, i64 0)) #15
  %sext = shl i64 %percent.0, 32
  %conv.i414 = ashr exact i64 %sext, 32
  %call.i415 = tail call i8* @halide_int64_to_string(i8* %call.i411, i8* %sstr.sroa.125.0, i64 %conv.i414, i32 1) #15
  %call.i418 = tail call i8* @halide_string_to_string(i8* %call.i415, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.180, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i419601 = ptrtoint i8* %call.i418 to i64
  %sub.ptr.sub.i421602 = sub i64 %sub.ptr.lhs.cast.i419601, %sub.ptr.rhs.cast.i.i348
  %cmp104603 = icmp ult i64 %sub.ptr.sub.i421602, 43
  br i1 %cmp104603, label %while.body105, label %while.end107

while.body105:                                    ; preds = %if.end97, %while.body105
  %sstr.sroa.19.6604 = phi i8* [ %call.i427, %while.body105 ], [ %call.i418, %if.end97 ]
  %call.i427 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.6604, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i419 = ptrtoint i8* %call.i427 to i64
  %sub.ptr.sub.i421 = sub i64 %sub.ptr.lhs.cast.i419, %sub.ptr.rhs.cast.i.i348
  %cmp104 = icmp ult i64 %sub.ptr.sub.i421, 43
  br i1 %cmp104, label %while.body105, label %while.end107, !llvm.loop !360

while.end107:                                     ; preds = %while.body105, %if.end97
  %sstr.sroa.19.6.lcssa = phi i8* [ %call.i418, %if.end97 ], [ %call.i427, %while.body105 ]
  br i1 %10, label %if.end127, label %if.then109

if.then109:                                       ; preds = %while.end107
  %active_threads_numerator111 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %23, i64 %indvars.iv630, i32 5
  %30 = load i64, i64* %active_threads_numerator111, align 8, !tbaa !361
  %conv112 = uitofp i64 %30 to double
  %active_threads_denominator113 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %23, i64 %indvars.iv630, i32 6
  %31 = load i64, i64* %active_threads_denominator113, align 8, !tbaa !362
  %conv114 = uitofp i64 %31 to double
  %add115 = fadd double %conv114, 1.000000e-10
  %div116 = fdiv double %conv112, %add115
  %conv117 = fptrunc double %div116 to float
  %call.i430 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.6.lcssa, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24.181, i64 0, i64 0)) #15
  %conv.i433 = fpext float %conv117 to double
  %call.i434 = tail call i8* @halide_double_to_string(i8* %call.i430, i8* %sstr.sroa.125.0, double %conv.i433, i32 0) #15
  %tobool.not.i436 = icmp eq i8* %call.i434, null
  br i1 %tobool.not.i436, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442, label %if.then.i441

if.then.i441:                                     ; preds = %if.then109
  %add.ptr.i437 = getelementptr inbounds i8, i8* %call.i434, i64 -3
  %cmp.i439 = icmp ult i8* %add.ptr.i437, %call.i
  %spec.store.select.i440 = select i1 %cmp.i439, i8* %call.i, i8* %add.ptr.i437
  store i8 0, i8* %spec.store.select.i440, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442: ; preds = %if.then.i441, %if.then109
  %sstr.sroa.19.7 = phi i8* [ null, %if.then109 ], [ %spec.store.select.i440, %if.then.i441 ]
  %sub.ptr.lhs.cast.i447606 = ptrtoint i8* %sstr.sroa.19.7 to i64
  %sub.ptr.sub.i449607 = sub i64 %sub.ptr.lhs.cast.i447606, %sub.ptr.rhs.cast.i.i348
  %cmp123608 = icmp ult i64 %sub.ptr.sub.i449607, 58
  br i1 %cmp123608, label %while.body124, label %if.end127

while.body124:                                    ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442, %while.body124
  %sstr.sroa.19.8609 = phi i8* [ %call.i455, %while.body124 ], [ %sstr.sroa.19.7, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442 ]
  %call.i455 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.8609, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i447 = ptrtoint i8* %call.i455 to i64
  %sub.ptr.sub.i449 = sub i64 %sub.ptr.lhs.cast.i447, %sub.ptr.rhs.cast.i.i348
  %cmp123 = icmp ult i64 %sub.ptr.sub.i449, 58
  br i1 %cmp123, label %while.body124, label %if.end127, !llvm.loop !363

if.end127:                                        ; preds = %while.body124, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442, %while.end107
  %sstr.sroa.19.9 = phi i8* [ %sstr.sroa.19.6.lcssa, %while.end107 ], [ %sstr.sroa.19.7, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442 ], [ %call.i455, %while.body124 ]
  %cursor.0 = phi i64 [ 58, %while.end107 ], [ 73, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442 ], [ 73, %while.body124 ]
  %memory_peak128 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %23, i64 %indvars.iv630, i32 2
  %32 = load i64, i64* %memory_peak128, align 8, !tbaa !364
  %tobool129.not = icmp eq i64 %32, 0
  br i1 %tobool129.not, label %if.end162, label %if.then130

if.then130:                                       ; preds = %if.end127
  %call.i458 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.9, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25.182, i64 0, i64 0)) #15
  %33 = load i64, i64* %memory_peak128, align 8, !tbaa !364
  %call.i461 = tail call i8* @halide_uint64_to_string(i8* %call.i458, i8* %sstr.sroa.125.0, i64 %33, i32 1) #15
  %sub.ptr.lhs.cast.i462611 = ptrtoint i8* %call.i461 to i64
  %sub.ptr.sub.i464612 = sub i64 %sub.ptr.lhs.cast.i462611, %sub.ptr.rhs.cast.i.i348
  %cmp137613 = icmp ult i64 %sub.ptr.sub.i464612, %cursor.0
  br i1 %cmp137613, label %while.body138, label %while.end140

while.body138:                                    ; preds = %if.then130, %while.body138
  %sstr.sroa.19.10614 = phi i8* [ %call.i470, %while.body138 ], [ %call.i461, %if.then130 ]
  %call.i470 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.10614, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i462 = ptrtoint i8* %call.i470 to i64
  %sub.ptr.sub.i464 = sub i64 %sub.ptr.lhs.cast.i462, %sub.ptr.rhs.cast.i.i348
  %cmp137 = icmp ult i64 %sub.ptr.sub.i464, %cursor.0
  br i1 %cmp137, label %while.body138, label %while.end140, !llvm.loop !365

while.end140:                                     ; preds = %while.body138, %if.then130
  %sstr.sroa.19.10.lcssa = phi i8* [ %call.i461, %if.then130 ], [ %call.i470, %while.body138 ]
  %call.i473 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.10.lcssa, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.183, i64 0, i64 0)) #15
  %num_allocs142 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %23, i64 %indvars.iv630, i32 8
  %34 = load i32, i32* %num_allocs142, align 8, !tbaa !366
  %conv.i476 = sext i32 %34 to i64
  %call.i477 = tail call i8* @halide_int64_to_string(i8* %call.i473, i8* %sstr.sroa.125.0, i64 %conv.i476, i32 1) #15
  %add144 = add nuw nsw i64 %cursor.0, 15
  %sub.ptr.lhs.cast.i478616 = ptrtoint i8* %call.i477 to i64
  %sub.ptr.sub.i480617 = sub i64 %sub.ptr.lhs.cast.i478616, %sub.ptr.rhs.cast.i.i348
  %cmp147618 = icmp ult i64 %sub.ptr.sub.i480617, %add144
  br i1 %cmp147618, label %while.body148, label %while.end150

while.body148:                                    ; preds = %while.end140, %while.body148
  %sstr.sroa.19.11619 = phi i8* [ %call.i467, %while.body148 ], [ %call.i477, %while.end140 ]
  %call.i467 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.11619, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i478 = ptrtoint i8* %call.i467 to i64
  %sub.ptr.sub.i480 = sub i64 %sub.ptr.lhs.cast.i478, %sub.ptr.rhs.cast.i.i348
  %cmp147 = icmp ult i64 %sub.ptr.sub.i480, %add144
  br i1 %cmp147, label %while.body148, label %while.end150, !llvm.loop !367

while.end150:                                     ; preds = %while.body148, %while.end140
  %sstr.sroa.19.11.lcssa = phi i8* [ %call.i477, %while.end140 ], [ %call.i467, %while.body148 ]
  %35 = load i32, i32* %num_allocs142, align 8, !tbaa !366
  %cmp152.not = icmp eq i32 %35, 0
  br i1 %cmp152.not, label %if.end159, label %if.then153

if.then153:                                       ; preds = %while.end150
  %memory_total154 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %23, i64 %indvars.iv630, i32 3
  %36 = load i64, i64* %memory_total154, align 8, !tbaa !368
  %conv156 = sext i32 %35 to i64
  %div157 = udiv i64 %36, %conv156
  br label %if.end159

if.end159:                                        ; preds = %if.then153, %while.end150
  %alloc_avg.0 = phi i64 [ %div157, %if.then153 ], [ 0, %while.end150 ]
  %call.i452 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.11.lcssa, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27.184, i64 0, i64 0)) #15
  %sext586 = shl i64 %alloc_avg.0, 32
  %conv.i445 = ashr exact i64 %sext586, 32
  %call.i446 = tail call i8* @halide_int64_to_string(i8* %call.i452, i8* %sstr.sroa.125.0, i64 %conv.i445, i32 1) #15
  br label %if.end162

if.end162:                                        ; preds = %if.end159, %if.end127
  %sstr.sroa.19.12 = phi i8* [ %sstr.sroa.19.9, %if.end127 ], [ %call.i446, %if.end159 ]
  %stack_peak163 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %23, i64 %indvars.iv630, i32 4
  %37 = load i64, i64* %stack_peak163, align 8, !tbaa !354
  %cmp164.not = icmp eq i64 %37, 0
  br i1 %cmp164.not, label %if.end169, label %if.then165

if.then165:                                       ; preds = %if.end162
  %call.i424 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.12, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28.185, i64 0, i64 0)) #15
  %38 = load i64, i64* %stack_peak163, align 8, !tbaa !354
  %call.i405 = tail call i8* @halide_uint64_to_string(i8* %call.i424, i8* %sstr.sroa.125.0, i64 %38, i32 1) #15
  br label %if.end169

if.end169:                                        ; preds = %if.then165, %if.end162
  %sstr.sroa.19.13 = phi i8* [ %sstr.sroa.19.12, %if.end162 ], [ %call.i405, %if.then165 ]
  %call.i396 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.13, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.164, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit381, label %if.then.i379

if.then.i379:                                     ; preds = %if.end169
  %sub.ptr.lhs.cast.i.i374 = ptrtoint i8* %call.i396 to i64
  %add.i.i377 = add i64 %sub.ptr.sub.i.i349, %sub.ptr.lhs.cast.i.i374
  %call.i.i378 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i377) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit381

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit381: ; preds = %if.then.i379, %if.end169
  %retval.0.i380 = phi i8* [ %call.i, %if.then.i379 ], [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0), %if.end169 ]
  tail call void @halide_print(i8* %user_context, i8* nonnull %retval.0.i380) #15
  br label %cleanup172

cleanup172:                                       ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit381, %land.lhs.true
  %sstr.sroa.19.14 = phi i8* [ %call.i, %land.lhs.true ], [ %call.i396, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit381 ]
  %indvars.iv.next631 = add nuw nsw i64 %indvars.iv630, 1
  %39 = load i32, i32* %num_funcs54, align 8, !tbaa !351
  %40 = sext i32 %39 to i64
  %cmp55 = icmp slt i64 %indvars.iv.next631, %40
  br i1 %cmp55, label %for.body57, label %cleanup181, !llvm.loop !369

cleanup181:                                       ; preds = %for.cond41, %cleanup172, %for.cond53.preheader, %for.cond41.preheader, %for.body
  %sstr.sroa.19.15 = phi i8* [ %sstr.sroa.19.0626, %for.body ], [ %call.i344, %for.cond53.preheader ], [ %call.i344, %for.cond41.preheader ], [ %sstr.sroa.19.14, %cleanup172 ], [ %call.i344, %for.cond41 ]
  %next = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 8
  %41 = bitcast i8** %next to %struct.halide_profiler_pipeline_stats**
  %p.0 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %41, align 8, !tbaa !10
  %tobool.not = icmp eq %struct.halide_profiler_pipeline_stats* %p.0, null
  br i1 %tobool.not, label %for.cond.cleanup, label %for.body, !llvm.loop !370
}

; Function Attrs: nounwind mustprogress
define weak void @halide_profiler_reset_unlocked(%struct.halide_profiler_state* %s) local_unnamed_addr #0 {
entry:
  %pipelines = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 5
  %0 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !371
  %tobool.not9 = icmp eq %struct.halide_profiler_pipeline_stats* %0, null
  br i1 %tobool.not9, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %while.body
  %1 = phi %struct.halide_profiler_pipeline_stats* [ %7, %while.body ], [ %0, %entry ]
  %next = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %1, i64 0, i32 8
  %2 = bitcast i8** %next to %struct.halide_profiler_pipeline_stats**
  %3 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %2, align 8, !tbaa !372
  store %struct.halide_profiler_pipeline_stats* %3, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !371
  %funcs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %1, i64 0, i32 7
  %4 = bitcast %struct.halide_profiler_func_stats** %funcs to i8**
  %5 = load i8*, i8** %4, align 8, !tbaa !352
  tail call void @free(i8* %5) #15
  %6 = bitcast %struct.halide_profiler_pipeline_stats* %1 to i8*
  tail call void @free(i8* nonnull %6) #15
  %7 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !371
  %tobool.not = icmp eq %struct.halide_profiler_pipeline_stats* %7, null
  br i1 %tobool.not, label %while.end, label %while.body, !llvm.loop !373

while.end:                                        ; preds = %while.body, %entry
  %first_free_id = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 2
  store i32 0, i32* %first_free_id, align 4, !tbaa !374
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce %struct.halide_profiler_pipeline_stats* @_ZN6Halide7Runtime8Internal23find_or_create_pipelineEPKciPKy(i8* %pipeline_name, i32 %num_funcs, i64* %func_names) local_unnamed_addr #0 {
entry:
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #16
  %pipelines = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 5
  %p.0121 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !10
  %tobool.not122 = icmp eq %struct.halide_profiler_pipeline_stats* %p.0121, null
  br i1 %tobool.not122, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %p.0123 = phi %struct.halide_profiler_pipeline_stats* [ %p.0, %for.inc ], [ %p.0121, %entry ]
  %name = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0123, i64 0, i32 6
  %0 = load i8*, i8** %name, align 8, !tbaa !346
  %cmp = icmp eq i8* %0, %pipeline_name
  br i1 %cmp, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %num_funcs1 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0123, i64 0, i32 9
  %1 = load i32, i32* %num_funcs1, align 8, !tbaa !351
  %cmp2 = icmp eq i32 %1, %num_funcs
  br i1 %cmp2, label %cleanup62, label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %for.body
  %next = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0123, i64 0, i32 8
  %2 = bitcast i8** %next to %struct.halide_profiler_pipeline_stats**
  %p.0 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %2, align 8, !tbaa !10
  %tobool.not = icmp eq %struct.halide_profiler_pipeline_stats* %p.0, null
  br i1 %tobool.not, label %for.end, label %for.body, !llvm.loop !375

for.end:                                          ; preds = %for.inc, %entry
  %call4 = tail call i8* @malloc(i64 96) #15
  %3 = bitcast i8* %call4 to %struct.halide_profiler_pipeline_stats*
  %tobool5.not = icmp eq i8* %call4, null
  br i1 %tobool5.not, label %cleanup62, label %if.end7

if.end7:                                          ; preds = %for.end
  %4 = bitcast %struct.halide_profiler_pipeline_stats** %pipelines to i8**
  %5 = load i8*, i8** %4, align 8, !tbaa !371
  %next9 = getelementptr inbounds i8, i8* %call4, i64 64
  %6 = bitcast i8* %next9 to i8**
  store i8* %5, i8** %6, align 8, !tbaa !372
  %name10 = getelementptr inbounds i8, i8* %call4, i64 48
  %7 = bitcast i8* %name10 to i8**
  store i8* %pipeline_name, i8** %7, align 8, !tbaa !346
  %first_free_id = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 2
  %8 = load i32, i32* %first_free_id, align 4, !tbaa !374
  %first_func_id = getelementptr inbounds i8, i8* %call4, i64 76
  %9 = bitcast i8* %first_func_id to i32*
  store i32 %8, i32* %9, align 4, !tbaa !376
  %num_funcs11 = getelementptr inbounds i8, i8* %call4, i64 72
  %10 = bitcast i8* %num_funcs11 to i32*
  store i32 %num_funcs, i32* %10, align 8, !tbaa !351
  %runs = getelementptr inbounds i8, i8* %call4, i64 80
  %11 = bitcast i8* %runs to i32*
  store i32 0, i32* %11, align 8, !tbaa !343
  %samples = getelementptr inbounds i8, i8* %call4, i64 84
  %12 = bitcast i8* %samples to i32*
  store i32 0, i32* %12, align 4, !tbaa !347
  %13 = bitcast i8* %call4 to <4 x i64>*
  store <4 x i64> zeroinitializer, <4 x i64>* %13, align 8, !tbaa !110
  %num_allocs = getelementptr inbounds i8, i8* %call4, i64 88
  %14 = bitcast i8* %num_allocs to i32*
  store i32 0, i32* %14, align 8, !tbaa !348
  %active_threads_numerator = getelementptr inbounds i8, i8* %call4, i64 32
  %15 = bitcast i8* %active_threads_numerator to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %15, align 8, !tbaa !110
  %conv = sext i32 %num_funcs to i64
  %mul = mul nsw i64 %conv, 72
  %call12 = tail call i8* @malloc(i64 %mul) #15
  %funcs = getelementptr inbounds i8, i8* %call4, i64 56
  %16 = bitcast i8* %funcs to i8**
  store i8* %call12, i8** %16, align 8, !tbaa !352
  %tobool14.not = icmp eq i8* %call12, null
  %17 = bitcast i8* %call12 to %struct.halide_profiler_func_stats*
  br i1 %tobool14.not, label %if.then15, label %for.cond17.preheader

for.cond17.preheader:                             ; preds = %if.end7
  %cmp18119 = icmp sgt i32 %num_funcs, 0
  br i1 %cmp18119, label %for.body20.lr.ph, label %for.cond.cleanup19

for.body20.lr.ph:                                 ; preds = %for.cond17.preheader
  %wide.trip.count = zext i32 %num_funcs to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %18 = icmp eq i32 %num_funcs, 1
  br i1 %18, label %for.cond.cleanup19.loopexit.unr-lcssa, label %for.body20.lr.ph.new

for.body20.lr.ph.new:                             ; preds = %for.body20.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %for.body20

if.then15:                                        ; preds = %if.end7
  tail call void @free(i8* nonnull %call4) #15
  br label %cleanup62

for.cond.cleanup19.loopexit.unr-lcssa:            ; preds = %for.body20, %for.body20.lr.ph
  %indvars.iv.unr = phi i64 [ 0, %for.body20.lr.ph ], [ %indvars.iv.next.1, %for.body20 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond.cleanup19, label %for.body20.epil

for.body20.epil:                                  ; preds = %for.cond.cleanup19.loopexit.unr-lcssa
  %time22.epil = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv.unr, i32 0
  store i64 0, i64* %time22.epil, align 8, !tbaa !356
  %arrayidx24.epil = getelementptr inbounds i64, i64* %func_names, i64 %indvars.iv.unr
  %19 = load i64, i64* %arrayidx24.epil, align 8, !tbaa !110
  %20 = inttoptr i64 %19 to i8*
  %name28.epil = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv.unr, i32 7
  store i8* %20, i8** %name28.epil, align 8, !tbaa !357
  %memory_current32.epil = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv.unr, i32 1
  %num_allocs44.epil = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv.unr, i32 8
  store i32 0, i32* %num_allocs44.epil, align 8, !tbaa !366
  %21 = bitcast i64* %memory_current32.epil to <4 x i64>*
  store <4 x i64> zeroinitializer, <4 x i64>* %21, align 8, !tbaa !110
  %active_threads_numerator51.epil = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv.unr, i32 5
  %22 = bitcast i64* %active_threads_numerator51.epil to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %22, align 8, !tbaa !110
  br label %for.cond.cleanup19

for.cond.cleanup19:                               ; preds = %for.body20.epil, %for.cond.cleanup19.loopexit.unr-lcssa, %for.cond17.preheader
  %23 = load i32, i32* %first_free_id, align 4, !tbaa !374
  %add = add nsw i32 %23, %num_funcs
  store i32 %add, i32* %first_free_id, align 4, !tbaa !374
  store i8* %call4, i8** %4, align 8, !tbaa !371
  br label %cleanup62

for.body20:                                       ; preds = %for.body20, %for.body20.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body20.lr.ph.new ], [ %indvars.iv.next.1, %for.body20 ]
  %niter = phi i64 [ %unroll_iter, %for.body20.lr.ph.new ], [ %niter.nsub.1, %for.body20 ]
  %time22 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv, i32 0
  store i64 0, i64* %time22, align 8, !tbaa !356
  %arrayidx24 = getelementptr inbounds i64, i64* %func_names, i64 %indvars.iv
  %24 = load i64, i64* %arrayidx24, align 8, !tbaa !110
  %25 = inttoptr i64 %24 to i8*
  %name28 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv, i32 7
  store i8* %25, i8** %name28, align 8, !tbaa !357
  %memory_current32 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv, i32 1
  %num_allocs44 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv, i32 8
  store i32 0, i32* %num_allocs44, align 8, !tbaa !366
  %26 = bitcast i64* %memory_current32 to <4 x i64>*
  store <4 x i64> zeroinitializer, <4 x i64>* %26, align 8, !tbaa !110
  %active_threads_numerator51 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv, i32 5
  %27 = bitcast i64* %active_threads_numerator51 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %27, align 8, !tbaa !110
  %indvars.iv.next = or i64 %indvars.iv, 1
  %time22.1 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv.next, i32 0
  store i64 0, i64* %time22.1, align 8, !tbaa !356
  %arrayidx24.1 = getelementptr inbounds i64, i64* %func_names, i64 %indvars.iv.next
  %28 = load i64, i64* %arrayidx24.1, align 8, !tbaa !110
  %29 = inttoptr i64 %28 to i8*
  %name28.1 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv.next, i32 7
  store i8* %29, i8** %name28.1, align 8, !tbaa !357
  %memory_current32.1 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv.next, i32 1
  %num_allocs44.1 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv.next, i32 8
  store i32 0, i32* %num_allocs44.1, align 8, !tbaa !366
  %30 = bitcast i64* %memory_current32.1 to <4 x i64>*
  store <4 x i64> zeroinitializer, <4 x i64>* %30, align 8, !tbaa !110
  %active_threads_numerator51.1 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv.next, i32 5
  %31 = bitcast i64* %active_threads_numerator51.1 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %31, align 8, !tbaa !110
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %for.cond.cleanup19.loopexit.unr-lcssa, label %for.body20, !llvm.loop !377

cleanup62:                                        ; preds = %land.lhs.true, %for.cond.cleanup19, %if.then15, %for.end
  %retval.2 = phi %struct.halide_profiler_pipeline_stats* [ %3, %for.cond.cleanup19 ], [ null, %if.then15 ], [ null, %for.end ], [ %p.0123, %land.lhs.true ]
  ret %struct.halide_profiler_pipeline_stats* %retval.2
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal9bill_funcEP21halide_profiler_stateiyi(%struct.halide_profiler_state* %s, i32 %func_id, i64 %time, i32 %active_threads) local_unnamed_addr #0 {
entry:
  %pipelines = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 5
  %p.055 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !10
  %tobool.not56 = icmp eq %struct.halide_profiler_pipeline_stats* %p.055, null
  br i1 %tobool.not56, label %cleanup25, label %for.body

for.body:                                         ; preds = %entry, %if.end23
  %p.058 = phi %struct.halide_profiler_pipeline_stats* [ %p.0, %if.end23 ], [ %p.055, %entry ]
  %p_prev.057 = phi %struct.halide_profiler_pipeline_stats* [ %p.058, %if.end23 ], [ null, %entry ]
  %first_func_id = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 10
  %0 = load i32, i32* %first_func_id, align 4, !tbaa !376
  %cmp.not = icmp sgt i32 %0, %func_id
  br i1 %cmp.not, label %if.end23, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %num_funcs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 9
  %1 = load i32, i32* %num_funcs, align 8, !tbaa !351
  %add = add nsw i32 %1, %0
  %cmp2 = icmp sgt i32 %add, %func_id
  br i1 %cmp2, label %if.then, label %if.end23

if.then:                                          ; preds = %land.lhs.true
  %tobool3.not = icmp eq %struct.halide_profiler_pipeline_stats* %p_prev.057, null
  br i1 %tobool3.not, label %if.end, label %if.then4

if.then4:                                         ; preds = %if.then
  %next = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 8
  %2 = load i8*, i8** %next, align 8, !tbaa !372
  %next5 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p_prev.057, i64 0, i32 8
  store i8* %2, i8** %next5, align 8, !tbaa !372
  %3 = bitcast i8** %next to %struct.halide_profiler_pipeline_stats**
  store %struct.halide_profiler_pipeline_stats* %p.055, %struct.halide_profiler_pipeline_stats** %3, align 8, !tbaa !372
  store %struct.halide_profiler_pipeline_stats* %p.058, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !371
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.then
  %funcs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 7
  %4 = load %struct.halide_profiler_func_stats*, %struct.halide_profiler_func_stats** %funcs, align 8, !tbaa !352
  %idx.ext = sext i32 %func_id to i64
  %add.ptr = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %4, i64 %idx.ext
  %idx.ext10 = sext i32 %0 to i64
  %idx.neg = sub nsw i64 0, %idx.ext10
  %add.ptr11 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %add.ptr, i64 %idx.neg
  %time12 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %add.ptr11, i64 0, i32 0
  %5 = load i64, i64* %time12, align 8, !tbaa !356
  %add13 = add i64 %5, %time
  store i64 %add13, i64* %time12, align 8, !tbaa !356
  %conv = sext i32 %active_threads to i64
  %active_threads_numerator = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %add.ptr11, i64 0, i32 5
  %6 = bitcast i64* %active_threads_numerator to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8, !tbaa !110
  %8 = insertelement <2 x i64> <i64 poison, i64 1>, i64 %conv, i32 0
  %9 = add <2 x i64> %7, %8
  %10 = bitcast i64* %active_threads_numerator to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %10, align 8, !tbaa !110
  %time16 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 0
  %11 = load i64, i64* %time16, align 8, !tbaa !341
  %add17 = add i64 %11, %time
  store i64 %add17, i64* %time16, align 8, !tbaa !341
  %samples = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 12
  %12 = load i32, i32* %samples, align 4, !tbaa !347
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %samples, align 4, !tbaa !347
  %active_threads_numerator19 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 4
  %13 = bitcast i64* %active_threads_numerator19 to <2 x i64>*
  %14 = load <2 x i64>, <2 x i64>* %13, align 8, !tbaa !110
  %15 = add <2 x i64> %14, %8
  %16 = bitcast i64* %active_threads_numerator19 to <2 x i64>*
  store <2 x i64> %15, <2 x i64>* %16, align 8, !tbaa !110
  ret void

if.end23:                                         ; preds = %land.lhs.true, %for.body
  %next24 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 8
  %17 = bitcast i8** %next24 to %struct.halide_profiler_pipeline_stats**
  %p.0 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %17, align 8, !tbaa !10
  %tobool.not = icmp eq %struct.halide_profiler_pipeline_stats* %p.0, null
  br i1 %tobool.not, label %cleanup25, label %for.body, !llvm.loop !378

cleanup25:                                        ; preds = %if.end23, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_profiler_sample(%struct.halide_profiler_state* %s, i64* %prev_t) local_unnamed_addr #0 {
entry:
  %func = alloca i32, align 4
  %active_threads = alloca i32, align 4
  %0 = bitcast i32* %func to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #10
  %1 = bitcast i32* %active_threads to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #10
  %get_remote_profiler_state = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 6
  %2 = load void (i32*, i32*)*, void (i32*, i32*)** %get_remote_profiler_state, align 8, !tbaa !379
  %tobool.not = icmp eq void (i32*, i32*)* %2, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void %2(i32* nonnull %func, i32* nonnull %active_threads) #15
  br label %if.end

if.else:                                          ; preds = %entry
  %current_func = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 3
  %3 = load i32, i32* %current_func, align 8, !tbaa !340
  store i32 %3, i32* %func, align 4, !tbaa !73
  %active_threads2 = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 4
  %4 = load i32, i32* %active_threads2, align 4, !tbaa !380
  store i32 %4, i32* %active_threads, align 4, !tbaa !73
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call = call i64 @halide_current_time_ns(i8* null) #15
  %5 = load i32, i32* %func, align 4, !tbaa !73
  %cmp = icmp eq i32 %5, -2
  br i1 %cmp, label %cleanup, label %if.else4

if.else4:                                         ; preds = %if.end
  %cmp5 = icmp sgt i32 %5, -1
  br i1 %cmp5, label %if.then6, label %if.end8

if.then6:                                         ; preds = %if.else4
  %6 = load i64, i64* %prev_t, align 8, !tbaa !110
  %sub = sub i64 %call, %6
  %7 = load i32, i32* %active_threads, align 4, !tbaa !73
  call void @_ZN6Halide7Runtime8Internal9bill_funcEP21halide_profiler_stateiyi(%struct.halide_profiler_state* nonnull %s, i32 %5, i64 %sub, i32 %7) #16
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %if.else4
  store i64 %call, i64* %prev_t, align 8, !tbaa !110
  %sleep_time = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 1
  %8 = load i32, i32* %sleep_time, align 8, !tbaa !381
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.end
  %retval.0 = phi i32 [ %8, %if.end8 ], [ -1, %if.end ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #10
  ret i32 %retval.0
}

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal24sampling_profiler_threadEPv(i8* %0) #4 {
entry:
  %t = alloca i64, align 8
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #16
  %lock = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 0
  tail call void @halide_mutex_lock(%struct.halide_mutex* %lock) #15
  %current_func = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 3
  %1 = load i32, i32* %current_func, align 8, !tbaa !340
  %cmp.not23 = icmp eq i32 %1, -2
  br i1 %cmp.not23, label %while.end8, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %2 = bitcast i64* %t to i8*
  br label %while.body

while.body:                                       ; preds = %while.end, %while.body.lr.ph
  %call1 = call i64 @halide_current_time_ns(i8* null) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #10
  store i64 %call1, i64* %t, align 8, !tbaa !110
  %call420 = call i32 @halide_profiler_sample(%struct.halide_profiler_state* nonnull %call, i64* nonnull %t) #16
  %cmp521 = icmp slt i32 %call420, 0
  br i1 %cmp521, label %while.end, label %if.end

if.end:                                           ; preds = %while.body, %if.end
  %call422 = phi i32 [ %call4, %if.end ], [ %call420, %while.body ]
  call void @halide_mutex_unlock(%struct.halide_mutex* %lock) #15
  call void @halide_sleep_ms(i8* null, i32 %call422) #15
  call void @halide_mutex_lock(%struct.halide_mutex* %lock) #15
  %call4 = call i32 @halide_profiler_sample(%struct.halide_profiler_state* %call, i64* nonnull %t) #16
  %cmp5 = icmp slt i32 %call4, 0
  br i1 %cmp5, label %while.end, label %if.end

while.end:                                        ; preds = %if.end, %while.body
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #10
  %3 = load i32, i32* %current_func, align 8, !tbaa !340
  %cmp.not = icmp eq i32 %3, -2
  br i1 %cmp.not, label %while.end8, label %while.body, !llvm.loop !382

while.end8:                                       ; preds = %while.end, %entry
  call void @halide_mutex_unlock(%struct.halide_mutex* nonnull %lock) #15
  ret void
}

; Function Attrs: nounwind
define weak %struct.halide_profiler_pipeline_stats* @halide_profiler_get_pipeline_state(i8* %pipeline_name) local_unnamed_addr #4 {
entry:
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #16
  %lock.i = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 0
  tail call void @halide_mutex_lock(%struct.halide_mutex* %lock.i) #15
  %pipelines = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 5
  %p.013 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !10
  %tobool.not14 = icmp eq %struct.halide_profiler_pipeline_stats* %p.013, null
  br i1 %tobool.not14, label %cleanup, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %p.015 = phi %struct.halide_profiler_pipeline_stats* [ %p.0, %for.inc ], [ %p.013, %entry ]
  %name = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.015, i64 0, i32 6
  %0 = load i8*, i8** %name, align 8, !tbaa !346
  %cmp = icmp eq i8* %0, %pipeline_name
  br i1 %cmp, label %cleanup, label %for.inc

for.inc:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.015, i64 0, i32 8
  %1 = bitcast i8** %next to %struct.halide_profiler_pipeline_stats**
  %p.0 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %1, align 8, !tbaa !10
  %tobool.not = icmp eq %struct.halide_profiler_pipeline_stats* %p.0, null
  br i1 %tobool.not, label %cleanup, label %for.body, !llvm.loop !383

cleanup:                                          ; preds = %for.inc, %for.body, %entry
  %p.0.lcssa = phi %struct.halide_profiler_pipeline_stats* [ null, %entry ], [ null, %for.inc ], [ %p.015, %for.body ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* %lock.i) #15
  ret %struct.halide_profiler_pipeline_stats* %p.0.lcssa
}

; Function Attrs: nounwind
define weak i32 @halide_profiler_pipeline_start(i8* %user_context, i8* %pipeline_name, i32 %num_funcs, i64* %func_names) local_unnamed_addr #4 {
entry:
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #16
  %lock.i = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 0
  tail call void @halide_mutex_lock(%struct.halide_mutex* %lock.i) #15
  %sampling_thread = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 7
  %0 = load %struct.halide_thread*, %struct.halide_thread** %sampling_thread, align 8, !tbaa !338
  %tobool.not = icmp eq %struct.halide_thread* %0, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = tail call i32 @halide_start_clock(i8* %user_context) #15
  %call2 = tail call %struct.halide_thread* @halide_spawn_thread(void (i8*)* nonnull @_ZN6Halide7Runtime8Internal24sampling_profiler_threadEPv, i8* null) #15
  store %struct.halide_thread* %call2, %struct.halide_thread** %sampling_thread, align 8, !tbaa !338
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call4 = tail call %struct.halide_profiler_pipeline_stats* @_ZN6Halide7Runtime8Internal23find_or_create_pipelineEPKciPKy(i8* %pipeline_name, i32 %num_funcs, i64* %func_names) #16
  %tobool5.not = icmp eq %struct.halide_profiler_pipeline_stats* %call4, null
  br i1 %tobool5.not, label %if.then6, label %if.end8

if.then6:                                         ; preds = %if.end
  %call7 = tail call i32 @halide_error_out_of_memory(i8* %user_context) #15
  br label %cleanup

if.end8:                                          ; preds = %if.end
  %runs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %call4, i64 0, i32 11
  %1 = load i32, i32* %runs, align 8, !tbaa !343
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* %runs, align 8, !tbaa !343
  %first_func_id = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %call4, i64 0, i32 10
  %2 = load i32, i32* %first_func_id, align 4, !tbaa !376
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.then6
  %retval.0 = phi i32 [ %2, %if.end8 ], [ %call7, %if.then6 ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull %lock.i) #15
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak void @halide_profiler_stack_peak_update(i8* %user_context, i8* %pipeline_state, i64* %f_values) local_unnamed_addr #0 {
entry:
  %cmp.not = icmp eq i8* %pipeline_state, null
  br i1 %cmp.not, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([156 x i8], [156 x i8]* @.str.186, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %num_funcs = getelementptr inbounds i8, i8* %pipeline_state, i64 72
  %0 = bitcast i8* %num_funcs to i32*
  %1 = load i32, i32* %0, align 8, !tbaa !351
  %cmp118 = icmp sgt i32 %1, 0
  br i1 %cmp118, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %do.end
  %funcs = getelementptr inbounds i8, i8* %pipeline_state, i64 56
  %2 = bitcast i8* %funcs to %struct.halide_profiler_func_stats**
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.inc, %do.end
  ret void

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %3 = phi i32 [ %1, %for.body.lr.ph ], [ %9, %for.inc ]
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds i64, i64* %f_values, i64 %indvars.iv
  %4 = load i64, i64* %arrayidx, align 8, !tbaa !110
  %cmp2.not = icmp eq i64 %4, 0
  br i1 %cmp2.not, label %for.inc, label %if.then3

if.then3:                                         ; preds = %for.body
  %5 = load %struct.halide_profiler_func_stats*, %struct.halide_profiler_func_stats** %2, align 8, !tbaa !352
  %stack_peak = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %5, i64 %indvars.iv, i32 4
  %6 = load i64, i64* %stack_peak, align 8, !tbaa !110
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.body.i, %if.then3
  %old_val.0.i = phi i64 [ %6, %if.then3 ], [ %8, %while.body.i ]
  %cmp.i = icmp ult i64 %old_val.0.i, %4
  br i1 %cmp.i, label %while.body.i, label %for.inc.loopexit

while.body.i:                                     ; preds = %while.cond.i
  %7 = cmpxchg i64* %stack_peak, i64 %old_val.0.i, i64 %4 seq_cst seq_cst
  %8 = extractvalue { i64, i1 } %7, 0
  %cmp1.i = icmp eq i64 %old_val.0.i, %8
  br i1 %cmp1.i, label %for.inc.loopexit, label %while.cond.i, !llvm.loop !384

for.inc.loopexit:                                 ; preds = %while.body.i, %while.cond.i
  %.pre = load i32, i32* %0, align 8, !tbaa !351
  br label %for.inc

for.inc:                                          ; preds = %for.inc.loopexit, %for.body
  %9 = phi i32 [ %.pre, %for.inc.loopexit ], [ %3, %for.body ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %10 = sext i32 %9 to i64
  %cmp1 = icmp slt i64 %indvars.iv.next, %10
  br i1 %cmp1, label %for.body, label %for.cond.cleanup, !llvm.loop !385
}

; Function Attrs: nounwind mustprogress
define weak void @halide_profiler_memory_allocate(i8* %user_context, i8* %pipeline_state, i32 %func_id, i64 %incr) local_unnamed_addr #0 {
entry:
  %cmp = icmp eq i64 %incr, 0
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %cmp1.not = icmp eq i8* %pipeline_state, null
  br i1 %cmp1.not, label %if.then2, label %do.body4

if.then2:                                         ; preds = %if.end
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([156 x i8], [156 x i8]* @.str.1.187, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.body4

do.body4:                                         ; preds = %if.then2, %if.end
  %cmp5 = icmp sgt i32 %func_id, -1
  br i1 %cmp5, label %do.body10, label %if.then6

if.then6:                                         ; preds = %do.body4
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([150 x i8], [150 x i8]* @.str.2.188, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.body10

do.body10:                                        ; preds = %if.then6, %do.body4
  %num_funcs = getelementptr inbounds i8, i8* %pipeline_state, i64 72
  %0 = bitcast i8* %num_funcs to i32*
  %1 = load i32, i32* %0, align 8, !tbaa !351
  %cmp11 = icmp sgt i32 %1, %func_id
  br i1 %cmp11, label %do.end15, label %if.then12

if.then12:                                        ; preds = %do.body10
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([166 x i8], [166 x i8]* @.str.3.189, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end15

do.end15:                                         ; preds = %if.then12, %do.body10
  %funcs = getelementptr inbounds i8, i8* %pipeline_state, i64 56
  %2 = bitcast i8* %funcs to %struct.halide_profiler_func_stats**
  %3 = load %struct.halide_profiler_func_stats*, %struct.halide_profiler_func_stats** %2, align 8, !tbaa !352
  %idxprom = sext i32 %func_id to i64
  %num_allocs = getelementptr inbounds i8, i8* %pipeline_state, i64 88
  %4 = bitcast i8* %num_allocs to i32*
  %5 = atomicrmw add i32* %4, i32 1 seq_cst
  %memory_total = getelementptr inbounds i8, i8* %pipeline_state, i64 24
  %6 = bitcast i8* %memory_total to i64*
  %7 = atomicrmw add i64* %6, i64 %incr seq_cst
  %memory_current = getelementptr inbounds i8, i8* %pipeline_state, i64 8
  %8 = bitcast i8* %memory_current to i64*
  %9 = atomicrmw add i64* %8, i64 %incr seq_cst
  %10 = add i64 %9, %incr
  %memory_peak = getelementptr inbounds i8, i8* %pipeline_state, i64 16
  %11 = bitcast i8* %memory_peak to i64*
  %12 = load i64, i64* %11, align 8, !tbaa !110
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.body.i, %do.end15
  %old_val.0.i = phi i64 [ %12, %do.end15 ], [ %14, %while.body.i ]
  %cmp.i = icmp ult i64 %old_val.0.i, %10
  br i1 %cmp.i, label %while.body.i, label %_ZN12_GLOBAL__N_125sync_compare_max_and_swapIyEEvPT_S1_.exit

while.body.i:                                     ; preds = %while.cond.i
  %13 = cmpxchg i64* %11, i64 %old_val.0.i, i64 %10 seq_cst seq_cst
  %14 = extractvalue { i64, i1 } %13, 0
  %cmp1.i = icmp eq i64 %old_val.0.i, %14
  br i1 %cmp1.i, label %_ZN12_GLOBAL__N_125sync_compare_max_and_swapIyEEvPT_S1_.exit, label %while.cond.i, !llvm.loop !384

_ZN12_GLOBAL__N_125sync_compare_max_and_swapIyEEvPT_S1_.exit: ; preds = %while.body.i, %while.cond.i
  %num_allocs16 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %3, i64 %idxprom, i32 8
  %15 = atomicrmw add i32* %num_allocs16, i32 1 seq_cst
  %memory_total17 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %3, i64 %idxprom, i32 3
  %16 = atomicrmw add i64* %memory_total17, i64 %incr seq_cst
  %memory_current18 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %3, i64 %idxprom, i32 1
  %17 = atomicrmw add i64* %memory_current18, i64 %incr seq_cst
  %18 = add i64 %17, %incr
  %memory_peak19 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %3, i64 %idxprom, i32 2
  %19 = load i64, i64* %memory_peak19, align 8, !tbaa !110
  br label %while.cond.i43

while.cond.i43:                                   ; preds = %while.body.i45, %_ZN12_GLOBAL__N_125sync_compare_max_and_swapIyEEvPT_S1_.exit
  %old_val.0.i41 = phi i64 [ %19, %_ZN12_GLOBAL__N_125sync_compare_max_and_swapIyEEvPT_S1_.exit ], [ %21, %while.body.i45 ]
  %cmp.i42 = icmp ult i64 %old_val.0.i41, %18
  br i1 %cmp.i42, label %while.body.i45, label %return

while.body.i45:                                   ; preds = %while.cond.i43
  %20 = cmpxchg i64* %memory_peak19, i64 %old_val.0.i41, i64 %18 seq_cst seq_cst
  %21 = extractvalue { i64, i1 } %20, 0
  %cmp1.i44 = icmp eq i64 %old_val.0.i41, %21
  br i1 %cmp1.i44, label %return, label %while.cond.i43, !llvm.loop !384

return:                                           ; preds = %while.body.i45, %while.cond.i43, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define weak void @halide_profiler_memory_free(i8* %user_context, i8* %pipeline_state, i32 %func_id, i64 %decr) local_unnamed_addr #0 {
entry:
  %cmp = icmp eq i64 %decr, 0
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %cmp1.not = icmp eq i8* %pipeline_state, null
  br i1 %cmp1.not, label %if.then2, label %do.body4

if.then2:                                         ; preds = %if.end
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([156 x i8], [156 x i8]* @.str.4.190, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.body4

do.body4:                                         ; preds = %if.then2, %if.end
  %cmp5 = icmp sgt i32 %func_id, -1
  br i1 %cmp5, label %do.body10, label %if.then6

if.then6:                                         ; preds = %do.body4
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([150 x i8], [150 x i8]* @.str.5.191, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.body10

do.body10:                                        ; preds = %if.then6, %do.body4
  %num_funcs = getelementptr inbounds i8, i8* %pipeline_state, i64 72
  %0 = bitcast i8* %num_funcs to i32*
  %1 = load i32, i32* %0, align 8, !tbaa !351
  %cmp11 = icmp sgt i32 %1, %func_id
  br i1 %cmp11, label %do.end15, label %if.then12

if.then12:                                        ; preds = %do.body10
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([166 x i8], [166 x i8]* @.str.6.192, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end15

do.end15:                                         ; preds = %if.then12, %do.body10
  %funcs = getelementptr inbounds i8, i8* %pipeline_state, i64 56
  %2 = bitcast i8* %funcs to %struct.halide_profiler_func_stats**
  %3 = load %struct.halide_profiler_func_stats*, %struct.halide_profiler_func_stats** %2, align 8, !tbaa !352
  %idxprom = sext i32 %func_id to i64
  %memory_current = getelementptr inbounds i8, i8* %pipeline_state, i64 8
  %4 = bitcast i8* %memory_current to i64*
  %5 = atomicrmw sub i64* %4, i64 %decr seq_cst
  %memory_current16 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %3, i64 %idxprom, i32 1
  %6 = atomicrmw sub i64* %memory_current16, i64 %decr seq_cst
  br label %return

return:                                           ; preds = %do.end15, %entry
  ret void
}

; Function Attrs: nounwind
define weak void @halide_profiler_report(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #16
  %lock.i = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 0
  tail call void @halide_mutex_lock(%struct.halide_mutex* %lock.i) #15
  tail call void @halide_profiler_report_unlocked(i8* %user_context, %struct.halide_profiler_state* %call) #16
  tail call void @halide_mutex_unlock(%struct.halide_mutex* %lock.i) #15
  ret void
}

; Function Attrs: nounwind
define weak void @halide_profiler_reset() local_unnamed_addr #4 {
entry:
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #16
  %lock.i = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 0
  tail call void @halide_mutex_lock(%struct.halide_mutex* %lock.i) #15
  tail call void @halide_profiler_reset_unlocked(%struct.halide_profiler_state* %call) #16
  tail call void @halide_mutex_unlock(%struct.halide_mutex* %lock.i) #15
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_profiler_pipeline_end(i8* %user_context, i8* %state) local_unnamed_addr #2 {
entry:
  %current_func = getelementptr inbounds i8, i8* %state, i64 16
  %0 = bitcast i8* %current_func to i32*
  store i32 -1, i32* %0, align 8, !tbaa !340
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* %ptr, i64 %len) local_unnamed_addr #2 {
entry:
  ret i32 0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_msan_check_memory_is_initialized(i8* %user_context, i8* %ptr, i64 %len, i8* %name) local_unnamed_addr #2 {
entry:
  ret i32 0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_msan_check_buffer_is_initialized(i8* %user_context, %struct.halide_buffer_t* %b, i8* %buf_name) local_unnamed_addr #2 {
entry:
  ret i32 0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_msan_annotate_buffer_is_initialized(i8* %user_context, %struct.halide_buffer_t* %b) local_unnamed_addr #2 {
entry:
  ret i32 0
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_msan_annotate_buffer_is_initialized_as_destructor(i8* %user_context, i8* %b) local_unnamed_addr #2 {
entry:
  ret void
}

; Function Attrs: nounwind
define weak i32 @halide_default_can_use_target_features(i32 %count, i64* %features) #4 {
entry:
  %tmp = alloca %"struct.Halide::Runtime::Internal::CpuFeatures", align 8
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal36halide_cpu_features_initialized_lockE) #15
  %0 = load i8, i8* @_ZN6Halide7Runtime8Internal31halide_cpu_features_initializedE, align 1, !tbaa !15, !range !17
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = bitcast %"struct.Halide::Runtime::Internal::CpuFeatures"* %tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #10
  call void @_ZN6Halide7Runtime8Internal23halide_get_cpu_featuresEv(%"struct.Halide::Runtime::Internal::CpuFeatures"* nonnull sret(%"struct.Halide::Runtime::Internal::CpuFeatures") align 8 %tmp) #15
  %call = call i8* @memcpy(i8* bitcast ([4 x i64]* @_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE to i8*), i8* nonnull %1, i64 32) #15
  store i8 1, i8* @_ZN6Halide7Runtime8Internal31halide_cpu_features_initializedE, align 1, !tbaa !15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #10
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal36halide_cpu_features_initialized_lockE) #15
  %cmp.not = icmp eq i32 %count, 2
  br i1 %cmp.not, label %if.end2, label %if.then1

if.then1:                                         ; preds = %if.end
  call void @halide_error(i8* null, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.197, i64 0, i64 0)) #15
  br label %if.end2

if.end2:                                          ; preds = %if.then1, %if.end
  %2 = load i64, i64* %features, align 8, !tbaa !110
  %3 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE, i64 0, i64 0), align 8, !tbaa !110
  %and = and i64 %3, %2
  %cmp6.not = icmp eq i64 %and, 0
  br i1 %cmp6.not, label %for.inc.critedge, label %if.then7

if.then7:                                         ; preds = %if.end2
  %4 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE, i64 0, i64 2), align 8, !tbaa !110
  %and10 = and i64 %4, %and
  %cmp11.not = icmp eq i64 %and10, %and
  br i1 %cmp11.not, label %for.inc.critedge, label %cleanup15

for.inc.critedge:                                 ; preds = %if.then7, %if.end2
  %arrayidx.1 = getelementptr inbounds i64, i64* %features, i64 1
  %5 = load i64, i64* %arrayidx.1, align 8, !tbaa !110
  %6 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE, i64 0, i64 1), align 8, !tbaa !110
  %and.1 = and i64 %6, %5
  %cmp6.not.1 = icmp eq i64 %and.1, 0
  br i1 %cmp6.not.1, label %for.inc.critedge.1, label %if.then7.1

cleanup15:                                        ; preds = %for.inc.critedge.1, %if.then7.1, %if.then7
  %cmp3.lcssa = phi i32 [ 0, %if.then7 ], [ 0, %if.then7.1 ], [ 1, %for.inc.critedge.1 ]
  ret i32 %cmp3.lcssa

if.then7.1:                                       ; preds = %for.inc.critedge
  %7 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE, i64 0, i64 3), align 8, !tbaa !110
  %and10.1 = and i64 %7, %and.1
  %cmp11.not.1 = icmp eq i64 %and10.1, %and.1
  br i1 %cmp11.not.1, label %for.inc.critedge.1, label %cleanup15

for.inc.critedge.1:                               ; preds = %if.then7.1, %for.inc.critedge
  br label %cleanup15
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 (i32, i64*)* @halide_set_custom_can_use_target_features(i32 (i32, i64*)* %fn) local_unnamed_addr #2 {
entry:
  %0 = load i32 (i32, i64*)*, i32 (i32, i64*)** @_ZN6Halide7Runtime8Internal30custom_can_use_target_featuresE, align 8, !tbaa !10
  store i32 (i32, i64*)* %fn, i32 (i32, i64*)** @_ZN6Halide7Runtime8Internal30custom_can_use_target_featuresE, align 8, !tbaa !10
  ret i32 (i32, i64*)* %0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_can_use_target_features(i32 %count, i64* %features) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i32, i64*)*, i32 (i32, i64*)** @_ZN6Halide7Runtime8Internal30custom_can_use_target_featuresE, align 8, !tbaa !10
  %call = tail call i32 %0(i32 %count, i64* %features) #15
  ret i32 %call
}

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal23halide_get_cpu_featuresEv(%"struct.Halide::Runtime::Internal::CpuFeatures"* noalias sret(%"struct.Halide::Runtime::Internal::CpuFeatures") align 8 %agg.result) local_unnamed_addr #8 {
entry:
  %info = alloca [4 x i32], align 4
  %info2 = alloca [4 x i32], align 4
  %info3 = alloca [4 x i32], align 4
  %arrayidx3.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::CpuFeatures", %"struct.Halide::Runtime::Internal::CpuFeatures"* %agg.result, i64 0, i32 1, i64 0
  %0 = bitcast %"struct.Halide::Runtime::Internal::CpuFeatures"* %agg.result to <4 x i64>*
  store <4 x i64> <i64 34084860461808, i64 0, i64 0, i64 0>, <4 x i64>* %0, align 8, !tbaa !110
  %1 = bitcast [4 x i32]* %info to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #10
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %info, i64 0, i64 0
  store i32 1, i32* %arraydecay, align 4, !tbaa !73
  %arrayidx1.i110 = getelementptr inbounds [4 x i32], [4 x i32]* %info, i64 0, i64 1
  store i32 0, i32* %arrayidx1.i110, align 4, !tbaa !73
  call void asm sideeffect inteldialect "xchg rbx, rsi\0A\09mov eax, dword ptr $$0 $0\0A\09mov ecx, dword ptr $$4 $0\0A\09cpuid\0A\09mov dword ptr $$0 $0, eax\0A\09mov dword ptr $$4 $0, ebx\0A\09mov dword ptr $$8 $0, ecx\0A\09mov dword ptr $$12 $0, edx\0A\09xchg rbx, rsi", "=*m,~{eax},~{ebx},~{ecx},~{edx},~{esi},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %arraydecay) #10
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %info, i64 0, i64 2
  %2 = load i32, i32* %arrayidx, align 4, !tbaa !73
  %and = lshr i32 %2, 15
  %3 = and i32 %and, 16
  %and2 = lshr i32 %2, 23
  %4 = and i32 %and2, 32
  %5 = or i32 %4, %3
  %and6 = lshr i32 %2, 20
  %6 = and i32 %and6, 512
  %7 = or i32 %5, %6
  %and14 = lshr i32 %2, 5
  %8 = and i32 %and14, 128
  %9 = or i32 %7, %8
  %10 = zext i32 %9 to i64
  %11 = and i32 %2, 805834752
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %entry
  store i64 %10, i64* %arrayidx3.i, align 8, !tbaa !110
  br label %14

14:                                               ; preds = %13, %entry
  %15 = and i32 %2, 1879048192
  %.not = icmp eq i32 %15, 1879048192
  br i1 %.not, label %if.then30, label %if.end67

if.then30:                                        ; preds = %14
  %16 = bitcast [4 x i32]* %info2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #10
  %arraydecay31 = getelementptr inbounds [4 x i32], [4 x i32]* %info2, i64 0, i64 0
  store i32 7, i32* %arraydecay31, align 4, !tbaa !73
  %arrayidx1.i99 = getelementptr inbounds [4 x i32], [4 x i32]* %info2, i64 0, i64 1
  store i32 0, i32* %arrayidx1.i99, align 4, !tbaa !73
  call void asm sideeffect inteldialect "xchg rbx, rsi\0A\09mov eax, dword ptr $$0 $0\0A\09mov ecx, dword ptr $$4 $0\0A\09cpuid\0A\09mov dword ptr $$0 $0, eax\0A\09mov dword ptr $$4 $0, ebx\0A\09mov dword ptr $$8 $0, ecx\0A\09mov dword ptr $$12 $0, edx\0A\09xchg rbx, rsi", "=*m,~{eax},~{ebx},~{ecx},~{edx},~{esi},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %arraydecay31) #10
  %17 = load i32, i32* %arrayidx1.i99, align 4, !tbaa !73
  %and33 = and i32 %17, 32
  %cmp34.not = icmp eq i32 %and33, 0
  br i1 %cmp34.not, label %if.end36, label %if.then35

if.then35:                                        ; preds = %if.then30
  %or.i98 = or i64 %10, 64
  store i64 %or.i98, i64* %arrayidx3.i, align 8, !tbaa !110
  br label %if.end36

if.end36:                                         ; preds = %if.then35, %if.then30
  %18 = phi i64 [ %or.i98, %if.then35 ], [ %10, %if.then30 ]
  %and38 = and i32 %17, 268500992
  %cmp39 = icmp eq i32 %and38, 268500992
  br i1 %cmp39, label %if.then40, label %if.end66

if.then40:                                        ; preds = %if.end36
  %and42 = and i32 %17, 469827584
  %cmp43 = icmp eq i32 %and42, 469827584
  %spec.select.v = select i1 %cmp43, i64 3298534883328, i64 1099511627776
  %spec.select = or i64 %18, %spec.select.v
  %and47 = and i32 %17, -805109760
  %cmp48 = icmp eq i32 %and47, -805109760
  %or.i92 = or i64 %spec.select, 4398046511104
  %spec.select130 = select i1 %cmp48, i64 %or.i92, i64 %spec.select
  store i64 %spec.select130, i64* %arrayidx3.i, align 8, !tbaa !110
  %and52 = and i32 %17, -803012608
  %cmp53 = icmp eq i32 %and52, -803012608
  br i1 %cmp53, label %if.then54, label %if.end66

if.then54:                                        ; preds = %if.then40
  %or.i90 = or i64 %spec.select130, 8796093022208
  store i64 %or.i90, i64* %arrayidx3.i, align 8, !tbaa !110
  %19 = bitcast [4 x i32]* %info3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #10
  %arraydecay55 = getelementptr inbounds [4 x i32], [4 x i32]* %info3, i64 0, i64 0
  store i32 7, i32* %arraydecay55, align 4, !tbaa !73
  %arrayidx1.i = getelementptr inbounds [4 x i32], [4 x i32]* %info3, i64 0, i64 1
  store i32 1, i32* %arrayidx1.i, align 4, !tbaa !73
  call void asm sideeffect inteldialect "xchg rbx, rsi\0A\09mov eax, dword ptr $$0 $0\0A\09mov ecx, dword ptr $$4 $0\0A\09cpuid\0A\09mov dword ptr $$0 $0, eax\0A\09mov dword ptr $$4 $0, ebx\0A\09mov dword ptr $$8 $0, ecx\0A\09mov dword ptr $$12 $0, edx\0A\09xchg rbx, rsi", "=*m,~{eax},~{ebx},~{ecx},~{edx},~{esi},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %arraydecay55) #10
  %arrayidx56 = getelementptr inbounds [4 x i32], [4 x i32]* %info2, i64 0, i64 2
  %20 = load i32, i32* %arrayidx56, align 4, !tbaa !73
  %and57 = and i32 %20, 2048
  %cmp58.not = icmp eq i32 %and57, 0
  br i1 %cmp58.not, label %if.end64, label %land.lhs.true59

land.lhs.true59:                                  ; preds = %if.then54
  %21 = load i32, i32* %arraydecay55, align 4, !tbaa !73
  %and61 = and i32 %21, 32
  %cmp62.not = icmp eq i32 %and61, 0
  br i1 %cmp62.not, label %if.end64, label %if.then63

if.then63:                                        ; preds = %land.lhs.true59
  %or.i = or i64 %spec.select130, 26388279066624
  store i64 %or.i, i64* %arrayidx3.i, align 8, !tbaa !110
  br label %if.end64

if.end64:                                         ; preds = %if.then63, %land.lhs.true59, %if.then54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #10
  br label %if.end66

if.end66:                                         ; preds = %if.end64, %if.then40, %if.end36
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #10
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #10
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_use_jit_module() local_unnamed_addr #2 {
entry:
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_release_jit_module() local_unnamed_addr #2 {
entry:
  ret void
}

; Function Attrs: nounwind
define i32 @sobel3x3(%struct.halide_buffer_t* noalias %input.buffer, %struct.halide_buffer_t* noalias %output.buffer) local_unnamed_addr #9 {
entry:
  %0 = alloca [8 x i32], align 4
  %1 = alloca [8 x i32], align 4
  %2 = alloca [8 x i32], align 4
  %3 = alloca [8 x i32], align 4
  %.not = icmp eq %struct.halide_buffer_t* %output.buffer, null
  br i1 %.not, label %"assert failed", label %"assert succeeded", !prof !386

"assert failed":                                  ; preds = %entry
  %4 = tail call i32 @halide_error_buffer_argument_is_null(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i64 0, i64 0)) #10
  br label %destructor_block

"assert succeeded":                               ; preds = %entry
  %.not218 = icmp eq %struct.halide_buffer_t* %input.buffer, null
  br i1 %.not218, label %"assert failed1", label %"assert succeeded2", !prof !386

destructor_block:                                 ; preds = %"end for output.s0.x.x202", %"end for output.s0.y.rebased140", %_halide_buffer_is_bounds_query.exit442, %"assert failed1", %"assert failed"
  %5 = phi i32 [ %4, %"assert failed" ], [ %6, %"assert failed1" ], [ 0, %_halide_buffer_is_bounds_query.exit442 ], [ 0, %"end for output.s0.y.rebased140" ], [ 0, %"end for output.s0.x.x202" ]
  ret i32 %5

"assert failed1":                                 ; preds = %"assert succeeded"
  %6 = tail call i32 @halide_error_buffer_argument_is_null(i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str, i64 0, i64 0)) #10
  br label %destructor_block

"assert succeeded2":                              ; preds = %"assert succeeded"
  %host.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %input.buffer, i64 0, i32 2
  %7 = load i8*, i8** %host.i, align 8, !tbaa !172
  %code.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %input.buffer, i64 0, i32 4, i32 0
  %8 = load i8, i8* %code.i.i, align 2, !tbaa !305
  %conv.i.i = zext i8 %8 to i32
  %bits.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %input.buffer, i64 0, i32 4, i32 1
  %9 = load i8, i8* %bits.i.i, align 1, !tbaa !136
  %conv3.i.i = zext i8 %9 to i32
  %shl.i.i = shl nuw nsw i32 %conv3.i.i, 8
  %or.i.i = or i32 %shl.i.i, %conv.i.i
  %lanes.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %input.buffer, i64 0, i32 4, i32 2
  %10 = load i16, i16* %lanes.i.i, align 2, !tbaa !306
  %conv4.i.i = zext i16 %10 to i32
  %shl5.i.i = shl nuw i32 %conv4.i.i, 16
  %or6.i.i = or i32 %or.i.i, %shl5.i.i
  %flags.i.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %input.buffer, i64 0, i32 3
  %11 = load i64, i64* %flags.i.i.i, align 8, !tbaa !308
  %dimensions.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %input.buffer, i64 0, i32 5
  %12 = load i32, i32* %dimensions.i, align 4, !tbaa !175
  %dim.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %input.buffer, i64 0, i32 6
  %13 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i, align 8, !tbaa !176
  %min.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %13, i64 0, i32 0
  %14 = load i32, i32* %min.i, align 4, !tbaa !181
  %extent.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %13, i64 0, i32 1
  %15 = load i32, i32* %extent.i, align 4, !tbaa !178
  %stride.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %13, i64 0, i32 2
  %16 = load i32, i32* %stride.i, align 4, !tbaa !182
  %min.i272 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %13, i64 1, i32 0
  %17 = load i32, i32* %min.i272, align 4, !tbaa !181
  %extent.i274 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %13, i64 1, i32 1
  %18 = load i32, i32* %extent.i274, align 4, !tbaa !178
  %stride.i276 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %13, i64 1, i32 2
  %19 = load i32, i32* %stride.i276, align 4, !tbaa !182
  %host.i277 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %output.buffer, i64 0, i32 2
  %20 = load i8*, i8** %host.i277, align 8, !tbaa !172
  %code.i.i278 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %output.buffer, i64 0, i32 4, i32 0
  %21 = load i8, i8* %code.i.i278, align 2, !tbaa !305
  %conv.i.i279 = zext i8 %21 to i32
  %bits.i.i280 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %output.buffer, i64 0, i32 4, i32 1
  %22 = load i8, i8* %bits.i.i280, align 1, !tbaa !136
  %conv3.i.i281 = zext i8 %22 to i32
  %shl.i.i282 = shl nuw nsw i32 %conv3.i.i281, 8
  %or.i.i283 = or i32 %shl.i.i282, %conv.i.i279
  %lanes.i.i284 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %output.buffer, i64 0, i32 4, i32 2
  %23 = load i16, i16* %lanes.i.i284, align 2, !tbaa !306
  %conv4.i.i285 = zext i16 %23 to i32
  %shl5.i.i286 = shl nuw i32 %conv4.i.i285, 16
  %or6.i.i287 = or i32 %or.i.i283, %shl5.i.i286
  %flags.i.i.i288 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %output.buffer, i64 0, i32 3
  %24 = load i64, i64* %flags.i.i.i288, align 8, !tbaa !308
  %dimensions.i291 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %output.buffer, i64 0, i32 5
  %25 = load i32, i32* %dimensions.i291, align 4, !tbaa !175
  %dim.i292 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %output.buffer, i64 0, i32 6
  %26 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i292, align 8, !tbaa !176
  %min.i293 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %26, i64 0, i32 0
  %27 = load i32, i32* %min.i293, align 4, !tbaa !181
  %extent.i295 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %26, i64 0, i32 1
  %28 = load i32, i32* %extent.i295, align 4, !tbaa !178
  %stride.i297 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %26, i64 0, i32 2
  %29 = load i32, i32* %stride.i297, align 4, !tbaa !182
  %min.i299 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %26, i64 1, i32 0
  %30 = load i32, i32* %min.i299, align 4, !tbaa !181
  %extent.i301 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %26, i64 1, i32 1
  %31 = load i32, i32* %extent.i301, align 4, !tbaa !178
  %stride.i303 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %26, i64 1, i32 2
  %32 = load i32, i32* %stride.i303, align 4, !tbaa !182
  %a6 = add nsw i32 %28, %27
  %b8 = add nsw i32 %15, %14
  %33 = icmp slt i32 %28, 32
  %34 = select i1 %33, i32 %28, i32 32
  %a12 = add nsw i32 %34, %27
  %b6 = add nsw i32 %b8, -1
  %35 = icmp sgt i32 %b6, %a6
  %a3 = select i1 %35, i32 %a6, i32 %b6
  %b7 = add nsw i32 %b8, 1
  %.not219 = icmp slt i32 %b8, %a6
  %36 = select i1 %.not219, i32 %b7, i32 %a6
  %b5 = add nsw i32 %36, -2
  %37 = icmp sgt i32 %a3, %b5
  %a2 = select i1 %37, i32 %a3, i32 %b5
  %38 = icmp sgt i32 %b8, %a6
  %39 = select i1 %38, i32 %a6, i32 %b8
  %b4 = add nsw i32 %39, -1
  %.not220 = icmp slt i32 %a2, %39
  %a1 = select i1 %.not220, i32 %b4, i32 %a2
  %40 = icmp sgt i32 %a1, %14
  %41 = select i1 %40, i32 %a1, i32 %14
  %b12 = add nsw i32 %b8, 32
  %42 = icmp sgt i32 %b12, %a12
  %a9 = select i1 %42, i32 %a12, i32 %b12
  %b13 = add nsw i32 %b8, 30
  %43 = icmp sgt i32 %b13, %a12
  %44 = select i1 %43, i32 %a12, i32 %b13
  %b11 = add nsw i32 %44, 2
  %45 = icmp sgt i32 %b11, %a9
  %a8 = select i1 %45, i32 %a9, i32 %b11
  %b14 = add nsw i32 %b8, 31
  %46 = icmp sgt i32 %b14, %a12
  %47 = select i1 %46, i32 %a12, i32 %b14
  %b10 = add nsw i32 %47, 1
  %.not221 = icmp slt i32 %47, %a8
  %48 = select i1 %.not221, i32 %b10, i32 %a8
  %a7 = add nsw i32 %48, -33
  %49 = icmp sgt i32 %a7, %14
  %50 = select i1 %49, i32 %a7, i32 %14
  %a25 = add nsw i32 %31, %30
  %a27 = add nsw i32 %18, %17
  %b25 = add nsw i32 %a27, -1
  %51 = icmp sgt i32 %b25, %a25
  %a22 = select i1 %51, i32 %a25, i32 %b25
  %b26 = add nsw i32 %a27, 1
  %.not222 = icmp slt i32 %a27, %a25
  %52 = select i1 %.not222, i32 %b26, i32 %a25
  %b24 = add nsw i32 %52, -2
  %53 = icmp sgt i32 %a22, %b24
  %a21 = select i1 %53, i32 %a22, i32 %b24
  %54 = icmp sgt i32 %a27, %a25
  %55 = select i1 %54, i32 %a25, i32 %a27
  %b23 = add nsw i32 %55, -1
  %.not223 = icmp slt i32 %a21, %55
  %a20 = select i1 %.not223, i32 %b23, i32 %a21
  %56 = icmp sgt i32 %a20, %17
  %57 = select i1 %56, i32 %a20, i32 %17
  %58 = icmp sgt i32 %30, %a27
  %59 = select i1 %58, i32 %a27, i32 %30
  %a26 = add nsw i32 %59, -1
  %60 = icmp sgt i32 %a26, %17
  %61 = select i1 %60, i32 %a26, i32 %17
  %cmp.i = icmp eq i8* %7, null
  br i1 %cmp.i, label %_halide_buffer_is_bounds_query.exit, label %after_bb

_halide_buffer_is_bounds_query.exit:              ; preds = %"assert succeeded2"
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %input.buffer, i64 0, i32 0
  %62 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp1.i = icmp eq i64 %62, 0
  br i1 %cmp1.i, label %_halide_buffer_init.exit, label %after_bb

after_bb:                                         ; preds = %"assert succeeded2", %_halide_buffer_is_bounds_query.exit, %_halide_buffer_init.exit
  %63 = phi i8* [ %20, %"assert succeeded2" ], [ %20, %_halide_buffer_is_bounds_query.exit ], [ %.pre, %_halide_buffer_init.exit ]
  %cmp.i306 = icmp eq i8* %63, null
  br i1 %cmp.i306, label %_halide_buffer_is_bounds_query.exit310, label %after_bb3

_halide_buffer_is_bounds_query.exit310:           ; preds = %after_bb
  %device.i307 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %output.buffer, i64 0, i32 0
  %64 = load i64, i64* %device.i307, align 8, !tbaa !174
  %cmp1.i308 = icmp eq i64 %64, 0
  br i1 %cmp1.i308, label %_halide_buffer_init.exit344, label %after_bb3

_halide_buffer_init.exit:                         ; preds = %_halide_buffer_is_bounds_query.exit
  %input.extent.0.required.s = sub nsw i32 %41, %50
  %65 = add nsw i32 %input.extent.0.required.s, 1
  %input.extent.1.required.s = sub i32 1, %61
  %66 = add i32 %input.extent.1.required.s, %57
  %67 = getelementptr inbounds [8 x i32], [8 x i32]* %3, i64 0, i64 0
  store i32 %50, i32* %67, align 4
  %68 = getelementptr inbounds [8 x i32], [8 x i32]* %3, i64 0, i64 1
  store i32 %65, i32* %68, align 4
  %69 = getelementptr inbounds [8 x i32], [8 x i32]* %3, i64 0, i64 2
  store i32 1, i32* %69, align 4
  %70 = getelementptr inbounds [8 x i32], [8 x i32]* %3, i64 0, i64 3
  store i32 0, i32* %70, align 4
  %71 = getelementptr inbounds [8 x i32], [8 x i32]* %3, i64 0, i64 4
  store i32 %61, i32* %71, align 4
  %72 = getelementptr inbounds [8 x i32], [8 x i32]* %3, i64 0, i64 5
  store i32 %66, i32* %72, align 4
  %73 = getelementptr inbounds [8 x i32], [8 x i32]* %3, i64 0, i64 6
  store i32 %65, i32* %73, align 4
  %74 = getelementptr inbounds [8 x i32], [8 x i32]* %3, i64 0, i64 7
  store i32 0, i32* %74, align 4
  %75 = bitcast %struct.halide_buffer_t* %input.buffer to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(24) %75, i8 0, i64 24, i1 false)
  store i8 1, i8* %code.i.i, align 8, !tbaa !387
  store i8 8, i8* %bits.i.i, align 1, !tbaa !388
  store i16 1, i16* %lanes.i.i, align 2, !tbaa !389
  store i32 2, i32* %dimensions.i, align 4, !tbaa !175
  %76 = bitcast %struct.halide_dimension_t* %13 to i8*
  %77 = bitcast [8 x i32]* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %76, i8* nonnull align 4 dereferenceable(16) %77, i64 16, i1 false) #10, !tbaa.struct !177
  %.pre.i = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i, align 8, !tbaa !176
  %arrayidx.i = getelementptr inbounds [8 x i32], [8 x i32]* %3, i64 0, i64 4
  %arrayidx12.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i, i64 1
  %78 = bitcast %struct.halide_dimension_t* %arrayidx12.i to i8*
  %79 = bitcast i32* %arrayidx.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %78, i8* nonnull align 4 dereferenceable(16) %79, i64 16, i1 false) #10, !tbaa.struct !177
  store i64 0, i64* %flags.i.i.i, align 8, !tbaa !308
  %.pre = load i8*, i8** %host.i277, align 8, !tbaa !172
  br label %after_bb

after_bb3:                                        ; preds = %after_bb, %_halide_buffer_is_bounds_query.exit310, %_halide_buffer_init.exit344
  %80 = load i8*, i8** %host.i, align 8, !tbaa !172
  %cmp.i314 = icmp eq i8* %80, null
  br i1 %cmp.i314, label %land.rhs.i317, label %_halide_buffer_is_bounds_query.exit318

land.rhs.i317:                                    ; preds = %after_bb3
  %device.i315 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %input.buffer, i64 0, i32 0
  %81 = load i64, i64* %device.i315, align 8, !tbaa !174
  %cmp1.i316 = icmp eq i64 %81, 0
  br label %_halide_buffer_is_bounds_query.exit318

_halide_buffer_is_bounds_query.exit318:           ; preds = %after_bb3, %land.rhs.i317
  %82 = phi i1 [ false, %after_bb3 ], [ %cmp1.i316, %land.rhs.i317 ]
  %83 = load i8*, i8** %host.i277, align 8, !tbaa !172
  %cmp.i320 = icmp eq i8* %83, null
  br i1 %cmp.i320, label %land.rhs.i323, label %_halide_buffer_is_bounds_query.exit324

land.rhs.i323:                                    ; preds = %_halide_buffer_is_bounds_query.exit318
  %device.i321 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %output.buffer, i64 0, i32 0
  %84 = load i64, i64* %device.i321, align 8, !tbaa !174
  %cmp1.i322 = icmp eq i64 %84, 0
  br label %_halide_buffer_is_bounds_query.exit324

_halide_buffer_is_bounds_query.exit324:           ; preds = %_halide_buffer_is_bounds_query.exit318, %land.rhs.i323
  %85 = phi i1 [ false, %_halide_buffer_is_bounds_query.exit318 ], [ %cmp1.i322, %land.rhs.i323 ]
  %86 = or i1 %82, %85
  br i1 %86, label %"assert succeeded52", label %then_bb7

_halide_buffer_init.exit344:                      ; preds = %_halide_buffer_is_bounds_query.exit310
  %87 = icmp sgt i32 %28, 32
  %t296 = select i1 %87, i32 %28, i32 32
  %88 = bitcast %struct.halide_dimension_t** %dim.i292 to i8**
  %89 = load i8*, i8** %88, align 8, !tbaa !176
  %90 = add nsw i32 %a12, -32
  %91 = getelementptr inbounds [8 x i32], [8 x i32]* %2, i64 0, i64 0
  store i32 %90, i32* %91, align 4
  %92 = getelementptr inbounds [8 x i32], [8 x i32]* %2, i64 0, i64 1
  store i32 %t296, i32* %92, align 4
  %93 = getelementptr inbounds [8 x i32], [8 x i32]* %2, i64 0, i64 2
  store i32 1, i32* %93, align 4
  %94 = getelementptr inbounds [8 x i32], [8 x i32]* %2, i64 0, i64 3
  store i32 0, i32* %94, align 4
  %95 = getelementptr inbounds [8 x i32], [8 x i32]* %2, i64 0, i64 4
  store i32 %30, i32* %95, align 4
  %96 = getelementptr inbounds [8 x i32], [8 x i32]* %2, i64 0, i64 5
  store i32 %31, i32* %96, align 4
  %97 = getelementptr inbounds [8 x i32], [8 x i32]* %2, i64 0, i64 6
  store i32 %t296, i32* %97, align 4
  %98 = getelementptr inbounds [8 x i32], [8 x i32]* %2, i64 0, i64 7
  store i32 0, i32* %98, align 4
  %99 = bitcast %struct.halide_buffer_t* %output.buffer to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(24) %99, i8 0, i64 24, i1 false)
  store i8 1, i8* %code.i.i278, align 8, !tbaa !387
  store i8 8, i8* %bits.i.i280, align 1, !tbaa !388
  store i16 1, i16* %lanes.i.i284, align 2, !tbaa !389
  store i32 2, i32* %dimensions.i291, align 4, !tbaa !175
  %100 = bitcast [8 x i32]* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %89, i8* nonnull align 4 dereferenceable(16) %100, i64 16, i1 false) #10, !tbaa.struct !177
  %.pre.i337 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i292, align 8, !tbaa !176
  %arrayidx.i338 = getelementptr inbounds [8 x i32], [8 x i32]* %2, i64 0, i64 4
  %arrayidx12.i339 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i337, i64 1
  %101 = bitcast %struct.halide_dimension_t* %arrayidx12.i339 to i8*
  %102 = bitcast i32* %arrayidx.i338 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %101, i8* nonnull align 4 dereferenceable(16) %102, i64 16, i1 false) #10, !tbaa.struct !177
  store i64 0, i64* %flags.i.i.i288, align 8, !tbaa !308
  br label %after_bb3

then_bb7:                                         ; preds = %_halide_buffer_is_bounds_query.exit324
  %103 = icmp ne i32 %or6.i.i, 67585
  %104 = zext i1 %103 to i64
  %.not249 = icmp eq i32 %12, 2
  %.not250 = icmp eq i32 %or6.i.i287, 67585
  %105 = select i1 %.not250, i64 0, i64 4
  %.not251 = icmp eq i32 %25, 2
  %106 = select i1 %.not251, i64 0, i64 8
  %.not252 = icmp slt i32 %41, %b8
  %107 = select i1 %.not252, i64 0, i64 16
  %108 = lshr i32 %15, 26
  %109 = and i32 %108, 32
  %110 = zext i32 %109 to i64
  %.not253 = icmp slt i32 %57, %a27
  %111 = select i1 %.not253, i64 0, i64 64
  %112 = lshr i32 %18, 24
  %113 = and i32 %112, 128
  %114 = zext i32 %113 to i64
  %115 = select i1 %33, i64 256, i64 0
  %116 = lshr i32 %31, 22
  %117 = and i32 %116, 512
  %118 = zext i32 %117 to i64
  %.not254 = icmp eq i32 %16, 1
  %119 = select i1 %.not254, i64 0, i64 1024
  %.not255 = icmp eq i32 %29, 1
  %120 = select i1 %.not255, i64 0, i64 2048
  %121 = select i1 %.not249, i64 -9223372036854775808, i64 -9223372036854775806
  %122 = or i64 %121, %104
  %123 = or i64 %122, %110
  %124 = or i64 %123, %119
  %125 = or i64 %124, %114
  %126 = or i64 %125, %106
  %127 = or i64 %126, %105
  %128 = or i64 %127, %115
  %129 = or i64 %128, %120
  %130 = or i64 %129, %118
  %131 = or i64 %130, %107
  %132 = or i64 %131, %111
  %133 = tail call i64 @llvm.cttz.i64(i64 %132, i1 true), !range !390
  %134 = trunc i64 %133 to i32
  switch i32 %134, label %no_errors_bb [
    i32 0, label %assert_failed
    i32 1, label %assert_failed9
    i32 2, label %assert_failed10
    i32 3, label %assert_failed11
    i32 4, label %assert_failed12
    i32 5, label %assert_failed13
    i32 6, label %assert_failed14
    i32 7, label %assert_failed15
    i32 8, label %assert_failed16
    i32 9, label %assert_failed17
    i32 10, label %assert_failed18
    i32 11, label %assert_failed19
  ], !prof !391

no_errors_bb:                                     ; preds = %then_bb7
  %135 = sext i32 %18 to i64
  %136 = sext i32 %15 to i64
  %input.total_extent.1 = mul nsw i64 %135, %136
  %137 = sext i32 %31 to i64
  %138 = sext i32 %28 to i64
  %output.total_extent.1 = mul nsw i64 %137, %138
  %input.extent.0.lobit = lshr i32 %15, 31
  %139 = zext i32 %input.extent.0.lobit to i64
  %140 = sext i32 %19 to i64
  %x0 = mul nsw i64 %140, %135
  %141 = tail call i64 @llvm.abs.i64(i64 %x0, i1 true)
  %142 = icmp ugt i64 %141, 2147483647
  %143 = select i1 %142, i64 2, i64 0
  %144 = icmp sgt i64 %input.total_extent.1, 2147483647
  %145 = select i1 %144, i64 4, i64 0
  %146 = lshr i32 %28, 28
  %147 = and i32 %146, 8
  %148 = zext i32 %147 to i64
  %149 = sext i32 %32 to i64
  %x1 = mul nsw i64 %149, %137
  %150 = tail call i64 @llvm.abs.i64(i64 %x1, i1 true)
  %151 = icmp ugt i64 %150, 2147483647
  %152 = select i1 %151, i64 16, i64 0
  %153 = icmp sgt i64 %output.total_extent.1, 2147483647
  %154 = select i1 %153, i64 32, i64 0
  %and.i.i.i = shl i64 %11, 5
  %155 = and i64 %and.i.i.i, 64
  %and.i.i.i289 = shl i64 %24, 6
  %156 = and i64 %and.i.i.i289, 128
  %157 = icmp eq i8* %20, null
  %158 = select i1 %157, i64 512, i64 0
  %159 = select i1 %cmp.i, i64 -9223372036854775552, i64 -9223372036854775808
  %160 = or i64 %159, %155
  %161 = or i64 %160, %139
  %162 = or i64 %161, %145
  %163 = or i64 %162, %158
  %164 = or i64 %163, %143
  %165 = or i64 %164, %156
  %166 = or i64 %165, %148
  %167 = or i64 %166, %154
  %168 = or i64 %167, %152
  %169 = tail call i64 @llvm.cttz.i64(i64 %168, i1 true), !range !390
  %170 = trunc i64 %169 to i32
  switch i32 %170, label %"produce output" [
    i32 0, label %assert_failed21
    i32 1, label %assert_failed22
    i32 2, label %assert_failed23
    i32 3, label %assert_failed24
    i32 4, label %assert_failed25
    i32 5, label %assert_failed26
    i32 6, label %assert_failed27
    i32 7, label %assert_failed28
    i32 8, label %assert_failed29
    i32 9, label %assert_failed30
  ], !prof !392

assert_failed:                                    ; preds = %then_bb7
  %171 = tail call i32 @halide_error_bad_type(i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.203, i64 0, i64 0), i32 %or6.i.i, i32 67585) #10
  ret i32 %171

assert_failed9:                                   ; preds = %then_bb7
  %172 = tail call i32 @halide_error_bad_dimensions(i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.203, i64 0, i64 0), i32 %12, i32 2) #10
  ret i32 %172

assert_failed10:                                  ; preds = %then_bb7
  %173 = tail call i32 @halide_error_bad_type(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.204, i64 0, i64 0), i32 %or6.i.i287, i32 67585) #10
  ret i32 %173

assert_failed11:                                  ; preds = %then_bb7
  %174 = tail call i32 @halide_error_bad_dimensions(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.204, i64 0, i64 0), i32 %25, i32 2) #10
  ret i32 %174

assert_failed12:                                  ; preds = %then_bb7
  %175 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.203, i64 0, i64 0), i32 0, i32 %50, i32 %41, i32 %14, i32 %b6) #10
  ret i32 %175

assert_failed13:                                  ; preds = %then_bb7
  %176 = tail call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.203, i64 0, i64 0), i32 0, i32 %15) #10
  ret i32 %176

assert_failed14:                                  ; preds = %then_bb7
  %177 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.203, i64 0, i64 0), i32 1, i32 %61, i32 %57, i32 %17, i32 %b25) #10
  ret i32 %177

assert_failed15:                                  ; preds = %then_bb7
  %178 = tail call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.203, i64 0, i64 0), i32 1, i32 %18) #10
  ret i32 %178

assert_failed16:                                  ; preds = %then_bb7
  %179 = add nsw i32 %a12, -32
  %180 = add nsw i32 %a6, -1
  %181 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.204, i64 0, i64 0), i32 0, i32 %179, i32 %180, i32 %27, i32 %180) #10
  ret i32 %181

assert_failed17:                                  ; preds = %then_bb7
  %182 = tail call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.204, i64 0, i64 0), i32 1, i32 %31) #10
  ret i32 %182

assert_failed18:                                  ; preds = %then_bb7
  %183 = tail call i32 @halide_error_constraint_violated(i8* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.205, i64 0, i64 0), i32 %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.206, i64 0, i64 0), i32 1) #10
  ret i32 %183

assert_failed19:                                  ; preds = %then_bb7
  %184 = tail call i32 @halide_error_constraint_violated(i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str.207, i64 0, i64 0), i32 %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.206, i64 0, i64 0), i32 1) #10
  ret i32 %184

assert_failed21:                                  ; preds = %no_errors_bb
  %185 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str, i64 0, i64 0), i64 %136, i64 2147483647) #10
  ret i32 %185

assert_failed22:                                  ; preds = %no_errors_bb
  %186 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str, i64 0, i64 0), i64 %141, i64 2147483647) #10
  ret i32 %186

assert_failed23:                                  ; preds = %no_errors_bb
  %187 = tail call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str, i64 0, i64 0), i64 %input.total_extent.1, i64 2147483647) #10
  ret i32 %187

assert_failed24:                                  ; preds = %no_errors_bb
  %188 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i64 0, i64 0), i64 %138, i64 2147483647) #10
  ret i32 %188

assert_failed25:                                  ; preds = %no_errors_bb
  %189 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i64 0, i64 0), i64 %150, i64 2147483647) #10
  ret i32 %189

assert_failed26:                                  ; preds = %no_errors_bb
  %190 = tail call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i64 0, i64 0), i64 %output.total_extent.1, i64 2147483647) #10
  ret i32 %190

assert_failed27:                                  ; preds = %no_errors_bb
  %191 = tail call i32 @halide_error_device_dirty_with_no_device_support(i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.203, i64 0, i64 0)) #10
  ret i32 %191

assert_failed28:                                  ; preds = %no_errors_bb
  %192 = tail call i32 @halide_error_device_dirty_with_no_device_support(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.204, i64 0, i64 0)) #10
  ret i32 %192

assert_failed29:                                  ; preds = %no_errors_bb
  %193 = tail call i32 @halide_error_host_is_null(i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.203, i64 0, i64 0)) #10
  ret i32 %193

assert_failed30:                                  ; preds = %no_errors_bb
  %194 = tail call i32 @halide_error_host_is_null(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.204, i64 0, i64 0)) #10
  ret i32 %194

"produce output":                                 ; preds = %no_errors_bb
  %a34 = add nsw i32 %17, 1
  %.not256 = icmp sgt i32 %30, %17
  %a33 = select i1 %.not256, i32 %30, i32 %a34
  %195 = icmp sgt i32 %a25, %a33
  %output.s0.y.prologue = select i1 %195, i32 %a33, i32 %a25
  %.not257 = icmp slt i32 %a33, %a27
  %a35 = select i1 %.not257, i32 %b25, i32 %a33
  %196 = icmp sgt i32 %a25, %a35
  %output.s0.y.epilogue = select i1 %196, i32 %a35, i32 %a25
  %197 = add nsw i32 %28, 31
  %t240 = ashr i32 %197, 5
  %t239 = sub nsw i32 %output.s0.y.prologue, %30
  %t242 = sub nsw i32 %30, %17
  %198 = mul nsw i32 %32, %30
  %199 = icmp sgt i32 %t239, 0
  br i1 %199, label %"for output.s0.y.rebased.preheader", label %"produce output.end for output.s0.y.rebased_crit_edge", !prof !393

"produce output.end for output.s0.y.rebased_crit_edge": ; preds = %"produce output"
  %.pre490 = add nsw i32 %28, -32
  br label %"end for output.s0.y.rebased"

"for output.s0.y.rebased.preheader":              ; preds = %"produce output"
  %a39 = add nsw i32 %18, -1
  %200 = icmp sgt i32 %28, 0
  %b43 = add nsw i32 %28, -32
  %201 = insertelement <32 x i32> undef, i32 %b6, i32 0
  %202 = shufflevector <32 x i32> %201, <32 x i32> undef, <16 x i32> zeroinitializer
  %203 = insertelement <32 x i32> undef, i32 %14, i32 0
  %204 = shufflevector <32 x i32> %203, <32 x i32> undef, <16 x i32> zeroinitializer
  %205 = zext i32 %t239 to i64
  br label %"for output.s0.y.rebased"

"for output.s0.y.rebased":                        ; preds = %"for output.s0.y.rebased.preheader", %"end for output.s0.x.x"
  %indvars.iv = phi i64 [ 0, %"for output.s0.y.rebased.preheader" ], [ %indvars.iv.next, %"end for output.s0.x.x" ]
  %output.s0.y.rebased = phi i32 [ 0, %"for output.s0.y.rebased.preheader" ], [ %1625, %"end for output.s0.x.x" ]
  %b42 = add nsw i32 %output.s0.y.rebased, %t242
  %a38 = add nsw i32 %b42, 2
  %206 = icmp sgt i32 %18, %a38
  %a56 = select i1 %206, i32 %a38, i32 %18
  %.not266 = icmp slt i32 %b42, %18
  %a52 = select i1 %.not266, i32 %b42, i32 %a39
  %207 = icmp sgt i32 %b42, %18
  %a57 = select i1 %207, i32 %18, i32 %b42
  br i1 %200, label %"for output.s0.x.x.preheader", label %"end for output.s0.x.x", !prof !393

"for output.s0.x.x.preheader":                    ; preds = %"for output.s0.y.rebased"
  %208 = trunc i64 %indvars.iv to i32
  %t247 = mul i32 %32, %208
  %209 = icmp sgt i32 %a57, 1
  %210 = select i1 %209, i32 %a57, i32 1
  %211 = add nsw i32 %210, -1
  %212 = mul nsw i32 %211, %19
  %213 = sub nsw i32 %212, %14
  %214 = insertelement <32 x i32> undef, i32 %213, i32 0
  %215 = shufflevector <32 x i32> %214, <32 x i32> undef, <32 x i32> zeroinitializer
  %216 = icmp sgt i32 %a56, 1
  %217 = select i1 %216, i32 %a56, i32 1
  %218 = add nsw i32 %217, -1
  %219 = mul nsw i32 %218, %19
  %220 = sub nsw i32 %219, %14
  %221 = insertelement <32 x i32> undef, i32 %220, i32 0
  %222 = shufflevector <32 x i32> %221, <32 x i32> undef, <32 x i32> zeroinitializer
  %223 = icmp sgt i32 %a52, 0
  %224 = select i1 %223, i32 %a52, i32 0
  %225 = mul nsw i32 %224, %19
  %226 = sub nsw i32 %225, %14
  %227 = insertelement <32 x i32> undef, i32 %226, i32 0
  %t232 = shufflevector <32 x i32> %227, <32 x i32> undef, <32 x i32> zeroinitializer
  %228 = sext i32 %t247 to i64
  br label %"for output.s0.x.x"

"end for output.s0.y.rebased":                    ; preds = %"end for output.s0.x.x", %"produce output.end for output.s0.y.rebased_crit_edge"
  %a63.pre-phi = phi i32 [ %.pre490, %"produce output.end for output.s0.y.rebased_crit_edge" ], [ %b43, %"end for output.s0.x.x" ]
  %229 = sub nsw i32 %14, %27
  %a59 = ashr i32 %229, 5
  %230 = icmp sgt i32 %a59, -1
  %231 = select i1 %230, i32 %a59, i32 -1
  %a58 = add nsw i32 %231, 1
  %232 = icmp sgt i32 %t240, %a58
  %b62 = select i1 %232, i32 %a58, i32 %t240
  %b66 = sub nsw i32 %b8, %27
  %233 = icmp sgt i32 %b66, %a63.pre-phi
  %a62 = select i1 %233, i32 %a63.pre-phi, i32 %b66
  %a64 = add nsw i32 %28, 1
  %234 = icmp sgt i32 %b66, %a64
  %235 = select i1 %234, i32 %a64, i32 %b66
  %b64 = add nsw i32 %235, -33
  %236 = icmp sgt i32 %b64, %a62
  %a61 = select i1 %236, i32 %a62, i32 %b64
  %b63 = add nsw i32 %28, -1
  %237 = icmp sgt i32 %b63, %a61
  %238 = select i1 %237, i32 %a61, i32 %b63
  %239 = ashr i32 %238, 5
  %a60 = add nsw i32 %239, 1
  %.not258 = icmp slt i32 %239, %b62
  %t251 = select i1 %.not258, i32 %b62, i32 %a60
  %t253 = sub nsw i32 %output.s0.y.prologue, %17
  %t249 = sub nsw i32 %output.s0.y.epilogue, %output.s0.y.prologue
  %240 = icmp sgt i32 %t249, 0
  br i1 %240, label %"for output.s0.y.rebased31.preheader", label %"end for output.s0.y.rebased32", !prof !393

"for output.s0.y.rebased31.preheader":            ; preds = %"end for output.s0.y.rebased"
  %241 = icmp sgt i32 %b62, 0
  %242 = insertelement <32 x i32> undef, i32 %b6, i32 0
  %243 = shufflevector <32 x i32> %242, <32 x i32> undef, <16 x i32> zeroinitializer
  %244 = insertelement <32 x i32> undef, i32 %14, i32 0
  %245 = shufflevector <32 x i32> %244, <32 x i32> undef, <16 x i32> zeroinitializer
  %t272 = sub nsw i32 %27, %14
  %t266 = sub nsw i32 %t251, %b62
  %246 = icmp sgt i32 %t266, 0
  %247 = sext i32 %b62 to i64
  %t273 = sub nsw i32 %t240, %t251
  %248 = icmp sgt i32 %t273, 0
  %249 = zext i32 %t266 to i64
  %250 = zext i32 %t249 to i64
  br label %"for output.s0.y.rebased31"

"for output.s0.x.x":                              ; preds = %"for output.s0.x.x.preheader", %"for output.s0.x.x"
  %output.s0.x.x = phi i32 [ %1624, %"for output.s0.x.x" ], [ 0, %"for output.s0.x.x.preheader" ]
  %a41 = shl nsw i32 %output.s0.x.x, 5
  %251 = icmp sgt i32 %b43, %a41
  %output.s0.x.v0.base.s = select i1 %251, i32 %a41, i32 %b43
  %252 = add nsw i32 %output.s0.x.v0.base.s, %27
  %253 = insertelement <32 x i32> undef, i32 %252, i32 0
  %254 = shufflevector <32 x i32> %253, <32 x i32> undef, <32 x i32> zeroinitializer
  %a43 = add nsw <32 x i32> %254, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %255 = shufflevector <32 x i32> %a43, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %256 = icmp sgt <16 x i32> %202, %255
  %257 = shufflevector <32 x i32> %a43, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %258 = icmp sgt <16 x i32> %202, %257
  %259 = select <16 x i1> %256, <16 x i32> %255, <16 x i32> %202
  %260 = select <16 x i1> %258, <16 x i32> %257, <16 x i32> %202
  %261 = icmp sgt <16 x i32> %259, %204
  %262 = icmp sgt <16 x i32> %260, %204
  %263 = select <16 x i1> %261, <16 x i32> %259, <16 x i32> %204
  %264 = select <16 x i1> %262, <16 x i32> %260, <16 x i32> %204
  %t163 = shufflevector <16 x i32> %263, <16 x i32> %264, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %265 = add nsw i32 %252, -1
  %266 = insertelement <32 x i32> undef, i32 %265, i32 0
  %267 = shufflevector <32 x i32> %266, <32 x i32> undef, <32 x i32> zeroinitializer
  %a45 = add nsw <32 x i32> %267, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %268 = shufflevector <32 x i32> %a45, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %269 = icmp sgt <16 x i32> %202, %268
  %270 = shufflevector <32 x i32> %a45, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %271 = icmp sgt <16 x i32> %202, %270
  %272 = select <16 x i1> %269, <16 x i32> %268, <16 x i32> %202
  %273 = select <16 x i1> %271, <16 x i32> %270, <16 x i32> %202
  %274 = icmp sgt <16 x i32> %272, %204
  %275 = icmp sgt <16 x i32> %273, %204
  %276 = select <16 x i1> %274, <16 x i32> %272, <16 x i32> %204
  %277 = select <16 x i1> %275, <16 x i32> %273, <16 x i32> %204
  %t166 = shufflevector <16 x i32> %276, <16 x i32> %277, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %278 = add nsw <32 x i32> %t166, %215
  %279 = extractelement <32 x i32> %278, i32 0
  %280 = sext i32 %279 to i64
  %281 = getelementptr inbounds i8, i8* %7, i64 %280
  %282 = load i8, i8* %281, align 1, !tbaa !394
  %283 = insertelement <32 x i8> undef, i8 %282, i32 0
  %284 = extractelement <32 x i32> %278, i32 1
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds i8, i8* %7, i64 %285
  %287 = load i8, i8* %286, align 1, !tbaa !394
  %288 = insertelement <32 x i8> %283, i8 %287, i32 1
  %289 = extractelement <32 x i32> %278, i32 2
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds i8, i8* %7, i64 %290
  %292 = load i8, i8* %291, align 1, !tbaa !394
  %293 = insertelement <32 x i8> %288, i8 %292, i32 2
  %294 = extractelement <32 x i32> %278, i32 3
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds i8, i8* %7, i64 %295
  %297 = load i8, i8* %296, align 1, !tbaa !394
  %298 = insertelement <32 x i8> %293, i8 %297, i32 3
  %299 = extractelement <32 x i32> %278, i32 4
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds i8, i8* %7, i64 %300
  %302 = load i8, i8* %301, align 1, !tbaa !394
  %303 = insertelement <32 x i8> %298, i8 %302, i32 4
  %304 = extractelement <32 x i32> %278, i32 5
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds i8, i8* %7, i64 %305
  %307 = load i8, i8* %306, align 1, !tbaa !394
  %308 = insertelement <32 x i8> %303, i8 %307, i32 5
  %309 = extractelement <32 x i32> %278, i32 6
  %310 = sext i32 %309 to i64
  %311 = getelementptr inbounds i8, i8* %7, i64 %310
  %312 = load i8, i8* %311, align 1, !tbaa !394
  %313 = insertelement <32 x i8> %308, i8 %312, i32 6
  %314 = extractelement <32 x i32> %278, i32 7
  %315 = sext i32 %314 to i64
  %316 = getelementptr inbounds i8, i8* %7, i64 %315
  %317 = load i8, i8* %316, align 1, !tbaa !394
  %318 = insertelement <32 x i8> %313, i8 %317, i32 7
  %319 = extractelement <32 x i32> %278, i32 8
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds i8, i8* %7, i64 %320
  %322 = load i8, i8* %321, align 1, !tbaa !394
  %323 = insertelement <32 x i8> %318, i8 %322, i32 8
  %324 = extractelement <32 x i32> %278, i32 9
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds i8, i8* %7, i64 %325
  %327 = load i8, i8* %326, align 1, !tbaa !394
  %328 = insertelement <32 x i8> %323, i8 %327, i32 9
  %329 = extractelement <32 x i32> %278, i32 10
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds i8, i8* %7, i64 %330
  %332 = load i8, i8* %331, align 1, !tbaa !394
  %333 = insertelement <32 x i8> %328, i8 %332, i32 10
  %334 = extractelement <32 x i32> %278, i32 11
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds i8, i8* %7, i64 %335
  %337 = load i8, i8* %336, align 1, !tbaa !394
  %338 = insertelement <32 x i8> %333, i8 %337, i32 11
  %339 = extractelement <32 x i32> %278, i32 12
  %340 = sext i32 %339 to i64
  %341 = getelementptr inbounds i8, i8* %7, i64 %340
  %342 = load i8, i8* %341, align 1, !tbaa !394
  %343 = insertelement <32 x i8> %338, i8 %342, i32 12
  %344 = extractelement <32 x i32> %278, i32 13
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds i8, i8* %7, i64 %345
  %347 = load i8, i8* %346, align 1, !tbaa !394
  %348 = insertelement <32 x i8> %343, i8 %347, i32 13
  %349 = extractelement <32 x i32> %278, i32 14
  %350 = sext i32 %349 to i64
  %351 = getelementptr inbounds i8, i8* %7, i64 %350
  %352 = load i8, i8* %351, align 1, !tbaa !394
  %353 = insertelement <32 x i8> %348, i8 %352, i32 14
  %354 = extractelement <32 x i32> %278, i32 15
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds i8, i8* %7, i64 %355
  %357 = load i8, i8* %356, align 1, !tbaa !394
  %358 = insertelement <32 x i8> %353, i8 %357, i32 15
  %359 = extractelement <32 x i32> %278, i32 16
  %360 = sext i32 %359 to i64
  %361 = getelementptr inbounds i8, i8* %7, i64 %360
  %362 = load i8, i8* %361, align 1, !tbaa !394
  %363 = insertelement <32 x i8> %358, i8 %362, i32 16
  %364 = extractelement <32 x i32> %278, i32 17
  %365 = sext i32 %364 to i64
  %366 = getelementptr inbounds i8, i8* %7, i64 %365
  %367 = load i8, i8* %366, align 1, !tbaa !394
  %368 = insertelement <32 x i8> %363, i8 %367, i32 17
  %369 = extractelement <32 x i32> %278, i32 18
  %370 = sext i32 %369 to i64
  %371 = getelementptr inbounds i8, i8* %7, i64 %370
  %372 = load i8, i8* %371, align 1, !tbaa !394
  %373 = insertelement <32 x i8> %368, i8 %372, i32 18
  %374 = extractelement <32 x i32> %278, i32 19
  %375 = sext i32 %374 to i64
  %376 = getelementptr inbounds i8, i8* %7, i64 %375
  %377 = load i8, i8* %376, align 1, !tbaa !394
  %378 = insertelement <32 x i8> %373, i8 %377, i32 19
  %379 = extractelement <32 x i32> %278, i32 20
  %380 = sext i32 %379 to i64
  %381 = getelementptr inbounds i8, i8* %7, i64 %380
  %382 = load i8, i8* %381, align 1, !tbaa !394
  %383 = insertelement <32 x i8> %378, i8 %382, i32 20
  %384 = extractelement <32 x i32> %278, i32 21
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds i8, i8* %7, i64 %385
  %387 = load i8, i8* %386, align 1, !tbaa !394
  %388 = insertelement <32 x i8> %383, i8 %387, i32 21
  %389 = extractelement <32 x i32> %278, i32 22
  %390 = sext i32 %389 to i64
  %391 = getelementptr inbounds i8, i8* %7, i64 %390
  %392 = load i8, i8* %391, align 1, !tbaa !394
  %393 = insertelement <32 x i8> %388, i8 %392, i32 22
  %394 = extractelement <32 x i32> %278, i32 23
  %395 = sext i32 %394 to i64
  %396 = getelementptr inbounds i8, i8* %7, i64 %395
  %397 = load i8, i8* %396, align 1, !tbaa !394
  %398 = insertelement <32 x i8> %393, i8 %397, i32 23
  %399 = extractelement <32 x i32> %278, i32 24
  %400 = sext i32 %399 to i64
  %401 = getelementptr inbounds i8, i8* %7, i64 %400
  %402 = load i8, i8* %401, align 1, !tbaa !394
  %403 = insertelement <32 x i8> %398, i8 %402, i32 24
  %404 = extractelement <32 x i32> %278, i32 25
  %405 = sext i32 %404 to i64
  %406 = getelementptr inbounds i8, i8* %7, i64 %405
  %407 = load i8, i8* %406, align 1, !tbaa !394
  %408 = insertelement <32 x i8> %403, i8 %407, i32 25
  %409 = extractelement <32 x i32> %278, i32 26
  %410 = sext i32 %409 to i64
  %411 = getelementptr inbounds i8, i8* %7, i64 %410
  %412 = load i8, i8* %411, align 1, !tbaa !394
  %413 = insertelement <32 x i8> %408, i8 %412, i32 26
  %414 = extractelement <32 x i32> %278, i32 27
  %415 = sext i32 %414 to i64
  %416 = getelementptr inbounds i8, i8* %7, i64 %415
  %417 = load i8, i8* %416, align 1, !tbaa !394
  %418 = insertelement <32 x i8> %413, i8 %417, i32 27
  %419 = extractelement <32 x i32> %278, i32 28
  %420 = sext i32 %419 to i64
  %421 = getelementptr inbounds i8, i8* %7, i64 %420
  %422 = load i8, i8* %421, align 1, !tbaa !394
  %423 = insertelement <32 x i8> %418, i8 %422, i32 28
  %424 = extractelement <32 x i32> %278, i32 29
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds i8, i8* %7, i64 %425
  %427 = load i8, i8* %426, align 1, !tbaa !394
  %428 = insertelement <32 x i8> %423, i8 %427, i32 29
  %429 = extractelement <32 x i32> %278, i32 30
  %430 = sext i32 %429 to i64
  %431 = getelementptr inbounds i8, i8* %7, i64 %430
  %432 = load i8, i8* %431, align 1, !tbaa !394
  %433 = insertelement <32 x i8> %428, i8 %432, i32 30
  %434 = extractelement <32 x i32> %278, i32 31
  %435 = sext i32 %434 to i64
  %436 = getelementptr inbounds i8, i8* %7, i64 %435
  %437 = load i8, i8* %436, align 1, !tbaa !394
  %t167.s = insertelement <32 x i8> %433, i8 %437, i32 31
  %438 = add nsw i32 %252, 1
  %439 = insertelement <32 x i32> undef, i32 %438, i32 0
  %440 = shufflevector <32 x i32> %439, <32 x i32> undef, <32 x i32> zeroinitializer
  %a48 = add nsw <32 x i32> %440, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %441 = shufflevector <32 x i32> %a48, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %442 = icmp sgt <16 x i32> %202, %441
  %443 = shufflevector <32 x i32> %a48, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %444 = icmp sgt <16 x i32> %202, %443
  %445 = select <16 x i1> %442, <16 x i32> %441, <16 x i32> %202
  %446 = select <16 x i1> %444, <16 x i32> %443, <16 x i32> %202
  %447 = icmp sgt <16 x i32> %445, %204
  %448 = icmp sgt <16 x i32> %446, %204
  %449 = select <16 x i1> %447, <16 x i32> %445, <16 x i32> %204
  %450 = select <16 x i1> %448, <16 x i32> %446, <16 x i32> %204
  %t168 = shufflevector <16 x i32> %449, <16 x i32> %450, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %451 = add nsw <32 x i32> %t168, %215
  %452 = extractelement <32 x i32> %451, i32 0
  %453 = sext i32 %452 to i64
  %454 = getelementptr inbounds i8, i8* %7, i64 %453
  %455 = load i8, i8* %454, align 1, !tbaa !394
  %456 = insertelement <32 x i8> undef, i8 %455, i32 0
  %457 = extractelement <32 x i32> %451, i32 1
  %458 = sext i32 %457 to i64
  %459 = getelementptr inbounds i8, i8* %7, i64 %458
  %460 = load i8, i8* %459, align 1, !tbaa !394
  %461 = insertelement <32 x i8> %456, i8 %460, i32 1
  %462 = extractelement <32 x i32> %451, i32 2
  %463 = sext i32 %462 to i64
  %464 = getelementptr inbounds i8, i8* %7, i64 %463
  %465 = load i8, i8* %464, align 1, !tbaa !394
  %466 = insertelement <32 x i8> %461, i8 %465, i32 2
  %467 = extractelement <32 x i32> %451, i32 3
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds i8, i8* %7, i64 %468
  %470 = load i8, i8* %469, align 1, !tbaa !394
  %471 = insertelement <32 x i8> %466, i8 %470, i32 3
  %472 = extractelement <32 x i32> %451, i32 4
  %473 = sext i32 %472 to i64
  %474 = getelementptr inbounds i8, i8* %7, i64 %473
  %475 = load i8, i8* %474, align 1, !tbaa !394
  %476 = insertelement <32 x i8> %471, i8 %475, i32 4
  %477 = extractelement <32 x i32> %451, i32 5
  %478 = sext i32 %477 to i64
  %479 = getelementptr inbounds i8, i8* %7, i64 %478
  %480 = load i8, i8* %479, align 1, !tbaa !394
  %481 = insertelement <32 x i8> %476, i8 %480, i32 5
  %482 = extractelement <32 x i32> %451, i32 6
  %483 = sext i32 %482 to i64
  %484 = getelementptr inbounds i8, i8* %7, i64 %483
  %485 = load i8, i8* %484, align 1, !tbaa !394
  %486 = insertelement <32 x i8> %481, i8 %485, i32 6
  %487 = extractelement <32 x i32> %451, i32 7
  %488 = sext i32 %487 to i64
  %489 = getelementptr inbounds i8, i8* %7, i64 %488
  %490 = load i8, i8* %489, align 1, !tbaa !394
  %491 = insertelement <32 x i8> %486, i8 %490, i32 7
  %492 = extractelement <32 x i32> %451, i32 8
  %493 = sext i32 %492 to i64
  %494 = getelementptr inbounds i8, i8* %7, i64 %493
  %495 = load i8, i8* %494, align 1, !tbaa !394
  %496 = insertelement <32 x i8> %491, i8 %495, i32 8
  %497 = extractelement <32 x i32> %451, i32 9
  %498 = sext i32 %497 to i64
  %499 = getelementptr inbounds i8, i8* %7, i64 %498
  %500 = load i8, i8* %499, align 1, !tbaa !394
  %501 = insertelement <32 x i8> %496, i8 %500, i32 9
  %502 = extractelement <32 x i32> %451, i32 10
  %503 = sext i32 %502 to i64
  %504 = getelementptr inbounds i8, i8* %7, i64 %503
  %505 = load i8, i8* %504, align 1, !tbaa !394
  %506 = insertelement <32 x i8> %501, i8 %505, i32 10
  %507 = extractelement <32 x i32> %451, i32 11
  %508 = sext i32 %507 to i64
  %509 = getelementptr inbounds i8, i8* %7, i64 %508
  %510 = load i8, i8* %509, align 1, !tbaa !394
  %511 = insertelement <32 x i8> %506, i8 %510, i32 11
  %512 = extractelement <32 x i32> %451, i32 12
  %513 = sext i32 %512 to i64
  %514 = getelementptr inbounds i8, i8* %7, i64 %513
  %515 = load i8, i8* %514, align 1, !tbaa !394
  %516 = insertelement <32 x i8> %511, i8 %515, i32 12
  %517 = extractelement <32 x i32> %451, i32 13
  %518 = sext i32 %517 to i64
  %519 = getelementptr inbounds i8, i8* %7, i64 %518
  %520 = load i8, i8* %519, align 1, !tbaa !394
  %521 = insertelement <32 x i8> %516, i8 %520, i32 13
  %522 = extractelement <32 x i32> %451, i32 14
  %523 = sext i32 %522 to i64
  %524 = getelementptr inbounds i8, i8* %7, i64 %523
  %525 = load i8, i8* %524, align 1, !tbaa !394
  %526 = insertelement <32 x i8> %521, i8 %525, i32 14
  %527 = extractelement <32 x i32> %451, i32 15
  %528 = sext i32 %527 to i64
  %529 = getelementptr inbounds i8, i8* %7, i64 %528
  %530 = load i8, i8* %529, align 1, !tbaa !394
  %531 = insertelement <32 x i8> %526, i8 %530, i32 15
  %532 = extractelement <32 x i32> %451, i32 16
  %533 = sext i32 %532 to i64
  %534 = getelementptr inbounds i8, i8* %7, i64 %533
  %535 = load i8, i8* %534, align 1, !tbaa !394
  %536 = insertelement <32 x i8> %531, i8 %535, i32 16
  %537 = extractelement <32 x i32> %451, i32 17
  %538 = sext i32 %537 to i64
  %539 = getelementptr inbounds i8, i8* %7, i64 %538
  %540 = load i8, i8* %539, align 1, !tbaa !394
  %541 = insertelement <32 x i8> %536, i8 %540, i32 17
  %542 = extractelement <32 x i32> %451, i32 18
  %543 = sext i32 %542 to i64
  %544 = getelementptr inbounds i8, i8* %7, i64 %543
  %545 = load i8, i8* %544, align 1, !tbaa !394
  %546 = insertelement <32 x i8> %541, i8 %545, i32 18
  %547 = extractelement <32 x i32> %451, i32 19
  %548 = sext i32 %547 to i64
  %549 = getelementptr inbounds i8, i8* %7, i64 %548
  %550 = load i8, i8* %549, align 1, !tbaa !394
  %551 = insertelement <32 x i8> %546, i8 %550, i32 19
  %552 = extractelement <32 x i32> %451, i32 20
  %553 = sext i32 %552 to i64
  %554 = getelementptr inbounds i8, i8* %7, i64 %553
  %555 = load i8, i8* %554, align 1, !tbaa !394
  %556 = insertelement <32 x i8> %551, i8 %555, i32 20
  %557 = extractelement <32 x i32> %451, i32 21
  %558 = sext i32 %557 to i64
  %559 = getelementptr inbounds i8, i8* %7, i64 %558
  %560 = load i8, i8* %559, align 1, !tbaa !394
  %561 = insertelement <32 x i8> %556, i8 %560, i32 21
  %562 = extractelement <32 x i32> %451, i32 22
  %563 = sext i32 %562 to i64
  %564 = getelementptr inbounds i8, i8* %7, i64 %563
  %565 = load i8, i8* %564, align 1, !tbaa !394
  %566 = insertelement <32 x i8> %561, i8 %565, i32 22
  %567 = extractelement <32 x i32> %451, i32 23
  %568 = sext i32 %567 to i64
  %569 = getelementptr inbounds i8, i8* %7, i64 %568
  %570 = load i8, i8* %569, align 1, !tbaa !394
  %571 = insertelement <32 x i8> %566, i8 %570, i32 23
  %572 = extractelement <32 x i32> %451, i32 24
  %573 = sext i32 %572 to i64
  %574 = getelementptr inbounds i8, i8* %7, i64 %573
  %575 = load i8, i8* %574, align 1, !tbaa !394
  %576 = insertelement <32 x i8> %571, i8 %575, i32 24
  %577 = extractelement <32 x i32> %451, i32 25
  %578 = sext i32 %577 to i64
  %579 = getelementptr inbounds i8, i8* %7, i64 %578
  %580 = load i8, i8* %579, align 1, !tbaa !394
  %581 = insertelement <32 x i8> %576, i8 %580, i32 25
  %582 = extractelement <32 x i32> %451, i32 26
  %583 = sext i32 %582 to i64
  %584 = getelementptr inbounds i8, i8* %7, i64 %583
  %585 = load i8, i8* %584, align 1, !tbaa !394
  %586 = insertelement <32 x i8> %581, i8 %585, i32 26
  %587 = extractelement <32 x i32> %451, i32 27
  %588 = sext i32 %587 to i64
  %589 = getelementptr inbounds i8, i8* %7, i64 %588
  %590 = load i8, i8* %589, align 1, !tbaa !394
  %591 = insertelement <32 x i8> %586, i8 %590, i32 27
  %592 = extractelement <32 x i32> %451, i32 28
  %593 = sext i32 %592 to i64
  %594 = getelementptr inbounds i8, i8* %7, i64 %593
  %595 = load i8, i8* %594, align 1, !tbaa !394
  %596 = insertelement <32 x i8> %591, i8 %595, i32 28
  %597 = extractelement <32 x i32> %451, i32 29
  %598 = sext i32 %597 to i64
  %599 = getelementptr inbounds i8, i8* %7, i64 %598
  %600 = load i8, i8* %599, align 1, !tbaa !394
  %601 = insertelement <32 x i8> %596, i8 %600, i32 29
  %602 = extractelement <32 x i32> %451, i32 30
  %603 = sext i32 %602 to i64
  %604 = getelementptr inbounds i8, i8* %7, i64 %603
  %605 = load i8, i8* %604, align 1, !tbaa !394
  %606 = insertelement <32 x i8> %601, i8 %605, i32 30
  %607 = extractelement <32 x i32> %451, i32 31
  %608 = sext i32 %607 to i64
  %609 = getelementptr inbounds i8, i8* %7, i64 %608
  %610 = load i8, i8* %609, align 1, !tbaa !394
  %t169.s = insertelement <32 x i8> %606, i8 %610, i32 31
  %611 = add nsw <32 x i32> %t166, %222
  %612 = extractelement <32 x i32> %611, i32 0
  %613 = sext i32 %612 to i64
  %614 = getelementptr inbounds i8, i8* %7, i64 %613
  %615 = load i8, i8* %614, align 1, !tbaa !394
  %616 = insertelement <32 x i8> undef, i8 %615, i32 0
  %617 = extractelement <32 x i32> %611, i32 1
  %618 = sext i32 %617 to i64
  %619 = getelementptr inbounds i8, i8* %7, i64 %618
  %620 = load i8, i8* %619, align 1, !tbaa !394
  %621 = insertelement <32 x i8> %616, i8 %620, i32 1
  %622 = extractelement <32 x i32> %611, i32 2
  %623 = sext i32 %622 to i64
  %624 = getelementptr inbounds i8, i8* %7, i64 %623
  %625 = load i8, i8* %624, align 1, !tbaa !394
  %626 = insertelement <32 x i8> %621, i8 %625, i32 2
  %627 = extractelement <32 x i32> %611, i32 3
  %628 = sext i32 %627 to i64
  %629 = getelementptr inbounds i8, i8* %7, i64 %628
  %630 = load i8, i8* %629, align 1, !tbaa !394
  %631 = insertelement <32 x i8> %626, i8 %630, i32 3
  %632 = extractelement <32 x i32> %611, i32 4
  %633 = sext i32 %632 to i64
  %634 = getelementptr inbounds i8, i8* %7, i64 %633
  %635 = load i8, i8* %634, align 1, !tbaa !394
  %636 = insertelement <32 x i8> %631, i8 %635, i32 4
  %637 = extractelement <32 x i32> %611, i32 5
  %638 = sext i32 %637 to i64
  %639 = getelementptr inbounds i8, i8* %7, i64 %638
  %640 = load i8, i8* %639, align 1, !tbaa !394
  %641 = insertelement <32 x i8> %636, i8 %640, i32 5
  %642 = extractelement <32 x i32> %611, i32 6
  %643 = sext i32 %642 to i64
  %644 = getelementptr inbounds i8, i8* %7, i64 %643
  %645 = load i8, i8* %644, align 1, !tbaa !394
  %646 = insertelement <32 x i8> %641, i8 %645, i32 6
  %647 = extractelement <32 x i32> %611, i32 7
  %648 = sext i32 %647 to i64
  %649 = getelementptr inbounds i8, i8* %7, i64 %648
  %650 = load i8, i8* %649, align 1, !tbaa !394
  %651 = insertelement <32 x i8> %646, i8 %650, i32 7
  %652 = extractelement <32 x i32> %611, i32 8
  %653 = sext i32 %652 to i64
  %654 = getelementptr inbounds i8, i8* %7, i64 %653
  %655 = load i8, i8* %654, align 1, !tbaa !394
  %656 = insertelement <32 x i8> %651, i8 %655, i32 8
  %657 = extractelement <32 x i32> %611, i32 9
  %658 = sext i32 %657 to i64
  %659 = getelementptr inbounds i8, i8* %7, i64 %658
  %660 = load i8, i8* %659, align 1, !tbaa !394
  %661 = insertelement <32 x i8> %656, i8 %660, i32 9
  %662 = extractelement <32 x i32> %611, i32 10
  %663 = sext i32 %662 to i64
  %664 = getelementptr inbounds i8, i8* %7, i64 %663
  %665 = load i8, i8* %664, align 1, !tbaa !394
  %666 = insertelement <32 x i8> %661, i8 %665, i32 10
  %667 = extractelement <32 x i32> %611, i32 11
  %668 = sext i32 %667 to i64
  %669 = getelementptr inbounds i8, i8* %7, i64 %668
  %670 = load i8, i8* %669, align 1, !tbaa !394
  %671 = insertelement <32 x i8> %666, i8 %670, i32 11
  %672 = extractelement <32 x i32> %611, i32 12
  %673 = sext i32 %672 to i64
  %674 = getelementptr inbounds i8, i8* %7, i64 %673
  %675 = load i8, i8* %674, align 1, !tbaa !394
  %676 = insertelement <32 x i8> %671, i8 %675, i32 12
  %677 = extractelement <32 x i32> %611, i32 13
  %678 = sext i32 %677 to i64
  %679 = getelementptr inbounds i8, i8* %7, i64 %678
  %680 = load i8, i8* %679, align 1, !tbaa !394
  %681 = insertelement <32 x i8> %676, i8 %680, i32 13
  %682 = extractelement <32 x i32> %611, i32 14
  %683 = sext i32 %682 to i64
  %684 = getelementptr inbounds i8, i8* %7, i64 %683
  %685 = load i8, i8* %684, align 1, !tbaa !394
  %686 = insertelement <32 x i8> %681, i8 %685, i32 14
  %687 = extractelement <32 x i32> %611, i32 15
  %688 = sext i32 %687 to i64
  %689 = getelementptr inbounds i8, i8* %7, i64 %688
  %690 = load i8, i8* %689, align 1, !tbaa !394
  %691 = insertelement <32 x i8> %686, i8 %690, i32 15
  %692 = extractelement <32 x i32> %611, i32 16
  %693 = sext i32 %692 to i64
  %694 = getelementptr inbounds i8, i8* %7, i64 %693
  %695 = load i8, i8* %694, align 1, !tbaa !394
  %696 = insertelement <32 x i8> %691, i8 %695, i32 16
  %697 = extractelement <32 x i32> %611, i32 17
  %698 = sext i32 %697 to i64
  %699 = getelementptr inbounds i8, i8* %7, i64 %698
  %700 = load i8, i8* %699, align 1, !tbaa !394
  %701 = insertelement <32 x i8> %696, i8 %700, i32 17
  %702 = extractelement <32 x i32> %611, i32 18
  %703 = sext i32 %702 to i64
  %704 = getelementptr inbounds i8, i8* %7, i64 %703
  %705 = load i8, i8* %704, align 1, !tbaa !394
  %706 = insertelement <32 x i8> %701, i8 %705, i32 18
  %707 = extractelement <32 x i32> %611, i32 19
  %708 = sext i32 %707 to i64
  %709 = getelementptr inbounds i8, i8* %7, i64 %708
  %710 = load i8, i8* %709, align 1, !tbaa !394
  %711 = insertelement <32 x i8> %706, i8 %710, i32 19
  %712 = extractelement <32 x i32> %611, i32 20
  %713 = sext i32 %712 to i64
  %714 = getelementptr inbounds i8, i8* %7, i64 %713
  %715 = load i8, i8* %714, align 1, !tbaa !394
  %716 = insertelement <32 x i8> %711, i8 %715, i32 20
  %717 = extractelement <32 x i32> %611, i32 21
  %718 = sext i32 %717 to i64
  %719 = getelementptr inbounds i8, i8* %7, i64 %718
  %720 = load i8, i8* %719, align 1, !tbaa !394
  %721 = insertelement <32 x i8> %716, i8 %720, i32 21
  %722 = extractelement <32 x i32> %611, i32 22
  %723 = sext i32 %722 to i64
  %724 = getelementptr inbounds i8, i8* %7, i64 %723
  %725 = load i8, i8* %724, align 1, !tbaa !394
  %726 = insertelement <32 x i8> %721, i8 %725, i32 22
  %727 = extractelement <32 x i32> %611, i32 23
  %728 = sext i32 %727 to i64
  %729 = getelementptr inbounds i8, i8* %7, i64 %728
  %730 = load i8, i8* %729, align 1, !tbaa !394
  %731 = insertelement <32 x i8> %726, i8 %730, i32 23
  %732 = extractelement <32 x i32> %611, i32 24
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds i8, i8* %7, i64 %733
  %735 = load i8, i8* %734, align 1, !tbaa !394
  %736 = insertelement <32 x i8> %731, i8 %735, i32 24
  %737 = extractelement <32 x i32> %611, i32 25
  %738 = sext i32 %737 to i64
  %739 = getelementptr inbounds i8, i8* %7, i64 %738
  %740 = load i8, i8* %739, align 1, !tbaa !394
  %741 = insertelement <32 x i8> %736, i8 %740, i32 25
  %742 = extractelement <32 x i32> %611, i32 26
  %743 = sext i32 %742 to i64
  %744 = getelementptr inbounds i8, i8* %7, i64 %743
  %745 = load i8, i8* %744, align 1, !tbaa !394
  %746 = insertelement <32 x i8> %741, i8 %745, i32 26
  %747 = extractelement <32 x i32> %611, i32 27
  %748 = sext i32 %747 to i64
  %749 = getelementptr inbounds i8, i8* %7, i64 %748
  %750 = load i8, i8* %749, align 1, !tbaa !394
  %751 = insertelement <32 x i8> %746, i8 %750, i32 27
  %752 = extractelement <32 x i32> %611, i32 28
  %753 = sext i32 %752 to i64
  %754 = getelementptr inbounds i8, i8* %7, i64 %753
  %755 = load i8, i8* %754, align 1, !tbaa !394
  %756 = insertelement <32 x i8> %751, i8 %755, i32 28
  %757 = extractelement <32 x i32> %611, i32 29
  %758 = sext i32 %757 to i64
  %759 = getelementptr inbounds i8, i8* %7, i64 %758
  %760 = load i8, i8* %759, align 1, !tbaa !394
  %761 = insertelement <32 x i8> %756, i8 %760, i32 29
  %762 = extractelement <32 x i32> %611, i32 30
  %763 = sext i32 %762 to i64
  %764 = getelementptr inbounds i8, i8* %7, i64 %763
  %765 = load i8, i8* %764, align 1, !tbaa !394
  %766 = insertelement <32 x i8> %761, i8 %765, i32 30
  %767 = extractelement <32 x i32> %611, i32 31
  %768 = sext i32 %767 to i64
  %769 = getelementptr inbounds i8, i8* %7, i64 %768
  %770 = load i8, i8* %769, align 1, !tbaa !394
  %t171.s = insertelement <32 x i8> %766, i8 %770, i32 31
  %771 = add nsw <32 x i32> %t168, %222
  %772 = extractelement <32 x i32> %771, i32 0
  %773 = sext i32 %772 to i64
  %774 = getelementptr inbounds i8, i8* %7, i64 %773
  %775 = load i8, i8* %774, align 1, !tbaa !394
  %776 = insertelement <32 x i8> undef, i8 %775, i32 0
  %777 = extractelement <32 x i32> %771, i32 1
  %778 = sext i32 %777 to i64
  %779 = getelementptr inbounds i8, i8* %7, i64 %778
  %780 = load i8, i8* %779, align 1, !tbaa !394
  %781 = insertelement <32 x i8> %776, i8 %780, i32 1
  %782 = extractelement <32 x i32> %771, i32 2
  %783 = sext i32 %782 to i64
  %784 = getelementptr inbounds i8, i8* %7, i64 %783
  %785 = load i8, i8* %784, align 1, !tbaa !394
  %786 = insertelement <32 x i8> %781, i8 %785, i32 2
  %787 = extractelement <32 x i32> %771, i32 3
  %788 = sext i32 %787 to i64
  %789 = getelementptr inbounds i8, i8* %7, i64 %788
  %790 = load i8, i8* %789, align 1, !tbaa !394
  %791 = insertelement <32 x i8> %786, i8 %790, i32 3
  %792 = extractelement <32 x i32> %771, i32 4
  %793 = sext i32 %792 to i64
  %794 = getelementptr inbounds i8, i8* %7, i64 %793
  %795 = load i8, i8* %794, align 1, !tbaa !394
  %796 = insertelement <32 x i8> %791, i8 %795, i32 4
  %797 = extractelement <32 x i32> %771, i32 5
  %798 = sext i32 %797 to i64
  %799 = getelementptr inbounds i8, i8* %7, i64 %798
  %800 = load i8, i8* %799, align 1, !tbaa !394
  %801 = insertelement <32 x i8> %796, i8 %800, i32 5
  %802 = extractelement <32 x i32> %771, i32 6
  %803 = sext i32 %802 to i64
  %804 = getelementptr inbounds i8, i8* %7, i64 %803
  %805 = load i8, i8* %804, align 1, !tbaa !394
  %806 = insertelement <32 x i8> %801, i8 %805, i32 6
  %807 = extractelement <32 x i32> %771, i32 7
  %808 = sext i32 %807 to i64
  %809 = getelementptr inbounds i8, i8* %7, i64 %808
  %810 = load i8, i8* %809, align 1, !tbaa !394
  %811 = insertelement <32 x i8> %806, i8 %810, i32 7
  %812 = extractelement <32 x i32> %771, i32 8
  %813 = sext i32 %812 to i64
  %814 = getelementptr inbounds i8, i8* %7, i64 %813
  %815 = load i8, i8* %814, align 1, !tbaa !394
  %816 = insertelement <32 x i8> %811, i8 %815, i32 8
  %817 = extractelement <32 x i32> %771, i32 9
  %818 = sext i32 %817 to i64
  %819 = getelementptr inbounds i8, i8* %7, i64 %818
  %820 = load i8, i8* %819, align 1, !tbaa !394
  %821 = insertelement <32 x i8> %816, i8 %820, i32 9
  %822 = extractelement <32 x i32> %771, i32 10
  %823 = sext i32 %822 to i64
  %824 = getelementptr inbounds i8, i8* %7, i64 %823
  %825 = load i8, i8* %824, align 1, !tbaa !394
  %826 = insertelement <32 x i8> %821, i8 %825, i32 10
  %827 = extractelement <32 x i32> %771, i32 11
  %828 = sext i32 %827 to i64
  %829 = getelementptr inbounds i8, i8* %7, i64 %828
  %830 = load i8, i8* %829, align 1, !tbaa !394
  %831 = insertelement <32 x i8> %826, i8 %830, i32 11
  %832 = extractelement <32 x i32> %771, i32 12
  %833 = sext i32 %832 to i64
  %834 = getelementptr inbounds i8, i8* %7, i64 %833
  %835 = load i8, i8* %834, align 1, !tbaa !394
  %836 = insertelement <32 x i8> %831, i8 %835, i32 12
  %837 = extractelement <32 x i32> %771, i32 13
  %838 = sext i32 %837 to i64
  %839 = getelementptr inbounds i8, i8* %7, i64 %838
  %840 = load i8, i8* %839, align 1, !tbaa !394
  %841 = insertelement <32 x i8> %836, i8 %840, i32 13
  %842 = extractelement <32 x i32> %771, i32 14
  %843 = sext i32 %842 to i64
  %844 = getelementptr inbounds i8, i8* %7, i64 %843
  %845 = load i8, i8* %844, align 1, !tbaa !394
  %846 = insertelement <32 x i8> %841, i8 %845, i32 14
  %847 = extractelement <32 x i32> %771, i32 15
  %848 = sext i32 %847 to i64
  %849 = getelementptr inbounds i8, i8* %7, i64 %848
  %850 = load i8, i8* %849, align 1, !tbaa !394
  %851 = insertelement <32 x i8> %846, i8 %850, i32 15
  %852 = extractelement <32 x i32> %771, i32 16
  %853 = sext i32 %852 to i64
  %854 = getelementptr inbounds i8, i8* %7, i64 %853
  %855 = load i8, i8* %854, align 1, !tbaa !394
  %856 = insertelement <32 x i8> %851, i8 %855, i32 16
  %857 = extractelement <32 x i32> %771, i32 17
  %858 = sext i32 %857 to i64
  %859 = getelementptr inbounds i8, i8* %7, i64 %858
  %860 = load i8, i8* %859, align 1, !tbaa !394
  %861 = insertelement <32 x i8> %856, i8 %860, i32 17
  %862 = extractelement <32 x i32> %771, i32 18
  %863 = sext i32 %862 to i64
  %864 = getelementptr inbounds i8, i8* %7, i64 %863
  %865 = load i8, i8* %864, align 1, !tbaa !394
  %866 = insertelement <32 x i8> %861, i8 %865, i32 18
  %867 = extractelement <32 x i32> %771, i32 19
  %868 = sext i32 %867 to i64
  %869 = getelementptr inbounds i8, i8* %7, i64 %868
  %870 = load i8, i8* %869, align 1, !tbaa !394
  %871 = insertelement <32 x i8> %866, i8 %870, i32 19
  %872 = extractelement <32 x i32> %771, i32 20
  %873 = sext i32 %872 to i64
  %874 = getelementptr inbounds i8, i8* %7, i64 %873
  %875 = load i8, i8* %874, align 1, !tbaa !394
  %876 = insertelement <32 x i8> %871, i8 %875, i32 20
  %877 = extractelement <32 x i32> %771, i32 21
  %878 = sext i32 %877 to i64
  %879 = getelementptr inbounds i8, i8* %7, i64 %878
  %880 = load i8, i8* %879, align 1, !tbaa !394
  %881 = insertelement <32 x i8> %876, i8 %880, i32 21
  %882 = extractelement <32 x i32> %771, i32 22
  %883 = sext i32 %882 to i64
  %884 = getelementptr inbounds i8, i8* %7, i64 %883
  %885 = load i8, i8* %884, align 1, !tbaa !394
  %886 = insertelement <32 x i8> %881, i8 %885, i32 22
  %887 = extractelement <32 x i32> %771, i32 23
  %888 = sext i32 %887 to i64
  %889 = getelementptr inbounds i8, i8* %7, i64 %888
  %890 = load i8, i8* %889, align 1, !tbaa !394
  %891 = insertelement <32 x i8> %886, i8 %890, i32 23
  %892 = extractelement <32 x i32> %771, i32 24
  %893 = sext i32 %892 to i64
  %894 = getelementptr inbounds i8, i8* %7, i64 %893
  %895 = load i8, i8* %894, align 1, !tbaa !394
  %896 = insertelement <32 x i8> %891, i8 %895, i32 24
  %897 = extractelement <32 x i32> %771, i32 25
  %898 = sext i32 %897 to i64
  %899 = getelementptr inbounds i8, i8* %7, i64 %898
  %900 = load i8, i8* %899, align 1, !tbaa !394
  %901 = insertelement <32 x i8> %896, i8 %900, i32 25
  %902 = extractelement <32 x i32> %771, i32 26
  %903 = sext i32 %902 to i64
  %904 = getelementptr inbounds i8, i8* %7, i64 %903
  %905 = load i8, i8* %904, align 1, !tbaa !394
  %906 = insertelement <32 x i8> %901, i8 %905, i32 26
  %907 = extractelement <32 x i32> %771, i32 27
  %908 = sext i32 %907 to i64
  %909 = getelementptr inbounds i8, i8* %7, i64 %908
  %910 = load i8, i8* %909, align 1, !tbaa !394
  %911 = insertelement <32 x i8> %906, i8 %910, i32 27
  %912 = extractelement <32 x i32> %771, i32 28
  %913 = sext i32 %912 to i64
  %914 = getelementptr inbounds i8, i8* %7, i64 %913
  %915 = load i8, i8* %914, align 1, !tbaa !394
  %916 = insertelement <32 x i8> %911, i8 %915, i32 28
  %917 = extractelement <32 x i32> %771, i32 29
  %918 = sext i32 %917 to i64
  %919 = getelementptr inbounds i8, i8* %7, i64 %918
  %920 = load i8, i8* %919, align 1, !tbaa !394
  %921 = insertelement <32 x i8> %916, i8 %920, i32 29
  %922 = extractelement <32 x i32> %771, i32 30
  %923 = sext i32 %922 to i64
  %924 = getelementptr inbounds i8, i8* %7, i64 %923
  %925 = load i8, i8* %924, align 1, !tbaa !394
  %926 = insertelement <32 x i8> %921, i8 %925, i32 30
  %927 = extractelement <32 x i32> %771, i32 31
  %928 = sext i32 %927 to i64
  %929 = getelementptr inbounds i8, i8* %7, i64 %928
  %930 = load i8, i8* %929, align 1, !tbaa !394
  %t172.s = insertelement <32 x i8> %926, i8 %930, i32 31
  %931 = add nsw <32 x i32> %t163, %215
  %932 = extractelement <32 x i32> %931, i32 0
  %933 = sext i32 %932 to i64
  %934 = getelementptr inbounds i8, i8* %7, i64 %933
  %935 = load i8, i8* %934, align 1, !tbaa !394
  %936 = insertelement <32 x i8> undef, i8 %935, i32 0
  %937 = extractelement <32 x i32> %931, i32 1
  %938 = sext i32 %937 to i64
  %939 = getelementptr inbounds i8, i8* %7, i64 %938
  %940 = load i8, i8* %939, align 1, !tbaa !394
  %941 = insertelement <32 x i8> %936, i8 %940, i32 1
  %942 = extractelement <32 x i32> %931, i32 2
  %943 = sext i32 %942 to i64
  %944 = getelementptr inbounds i8, i8* %7, i64 %943
  %945 = load i8, i8* %944, align 1, !tbaa !394
  %946 = insertelement <32 x i8> %941, i8 %945, i32 2
  %947 = extractelement <32 x i32> %931, i32 3
  %948 = sext i32 %947 to i64
  %949 = getelementptr inbounds i8, i8* %7, i64 %948
  %950 = load i8, i8* %949, align 1, !tbaa !394
  %951 = insertelement <32 x i8> %946, i8 %950, i32 3
  %952 = extractelement <32 x i32> %931, i32 4
  %953 = sext i32 %952 to i64
  %954 = getelementptr inbounds i8, i8* %7, i64 %953
  %955 = load i8, i8* %954, align 1, !tbaa !394
  %956 = insertelement <32 x i8> %951, i8 %955, i32 4
  %957 = extractelement <32 x i32> %931, i32 5
  %958 = sext i32 %957 to i64
  %959 = getelementptr inbounds i8, i8* %7, i64 %958
  %960 = load i8, i8* %959, align 1, !tbaa !394
  %961 = insertelement <32 x i8> %956, i8 %960, i32 5
  %962 = extractelement <32 x i32> %931, i32 6
  %963 = sext i32 %962 to i64
  %964 = getelementptr inbounds i8, i8* %7, i64 %963
  %965 = load i8, i8* %964, align 1, !tbaa !394
  %966 = insertelement <32 x i8> %961, i8 %965, i32 6
  %967 = extractelement <32 x i32> %931, i32 7
  %968 = sext i32 %967 to i64
  %969 = getelementptr inbounds i8, i8* %7, i64 %968
  %970 = load i8, i8* %969, align 1, !tbaa !394
  %971 = insertelement <32 x i8> %966, i8 %970, i32 7
  %972 = extractelement <32 x i32> %931, i32 8
  %973 = sext i32 %972 to i64
  %974 = getelementptr inbounds i8, i8* %7, i64 %973
  %975 = load i8, i8* %974, align 1, !tbaa !394
  %976 = insertelement <32 x i8> %971, i8 %975, i32 8
  %977 = extractelement <32 x i32> %931, i32 9
  %978 = sext i32 %977 to i64
  %979 = getelementptr inbounds i8, i8* %7, i64 %978
  %980 = load i8, i8* %979, align 1, !tbaa !394
  %981 = insertelement <32 x i8> %976, i8 %980, i32 9
  %982 = extractelement <32 x i32> %931, i32 10
  %983 = sext i32 %982 to i64
  %984 = getelementptr inbounds i8, i8* %7, i64 %983
  %985 = load i8, i8* %984, align 1, !tbaa !394
  %986 = insertelement <32 x i8> %981, i8 %985, i32 10
  %987 = extractelement <32 x i32> %931, i32 11
  %988 = sext i32 %987 to i64
  %989 = getelementptr inbounds i8, i8* %7, i64 %988
  %990 = load i8, i8* %989, align 1, !tbaa !394
  %991 = insertelement <32 x i8> %986, i8 %990, i32 11
  %992 = extractelement <32 x i32> %931, i32 12
  %993 = sext i32 %992 to i64
  %994 = getelementptr inbounds i8, i8* %7, i64 %993
  %995 = load i8, i8* %994, align 1, !tbaa !394
  %996 = insertelement <32 x i8> %991, i8 %995, i32 12
  %997 = extractelement <32 x i32> %931, i32 13
  %998 = sext i32 %997 to i64
  %999 = getelementptr inbounds i8, i8* %7, i64 %998
  %1000 = load i8, i8* %999, align 1, !tbaa !394
  %1001 = insertelement <32 x i8> %996, i8 %1000, i32 13
  %1002 = extractelement <32 x i32> %931, i32 14
  %1003 = sext i32 %1002 to i64
  %1004 = getelementptr inbounds i8, i8* %7, i64 %1003
  %1005 = load i8, i8* %1004, align 1, !tbaa !394
  %1006 = insertelement <32 x i8> %1001, i8 %1005, i32 14
  %1007 = extractelement <32 x i32> %931, i32 15
  %1008 = sext i32 %1007 to i64
  %1009 = getelementptr inbounds i8, i8* %7, i64 %1008
  %1010 = load i8, i8* %1009, align 1, !tbaa !394
  %1011 = insertelement <32 x i8> %1006, i8 %1010, i32 15
  %1012 = extractelement <32 x i32> %931, i32 16
  %1013 = sext i32 %1012 to i64
  %1014 = getelementptr inbounds i8, i8* %7, i64 %1013
  %1015 = load i8, i8* %1014, align 1, !tbaa !394
  %1016 = insertelement <32 x i8> %1011, i8 %1015, i32 16
  %1017 = extractelement <32 x i32> %931, i32 17
  %1018 = sext i32 %1017 to i64
  %1019 = getelementptr inbounds i8, i8* %7, i64 %1018
  %1020 = load i8, i8* %1019, align 1, !tbaa !394
  %1021 = insertelement <32 x i8> %1016, i8 %1020, i32 17
  %1022 = extractelement <32 x i32> %931, i32 18
  %1023 = sext i32 %1022 to i64
  %1024 = getelementptr inbounds i8, i8* %7, i64 %1023
  %1025 = load i8, i8* %1024, align 1, !tbaa !394
  %1026 = insertelement <32 x i8> %1021, i8 %1025, i32 18
  %1027 = extractelement <32 x i32> %931, i32 19
  %1028 = sext i32 %1027 to i64
  %1029 = getelementptr inbounds i8, i8* %7, i64 %1028
  %1030 = load i8, i8* %1029, align 1, !tbaa !394
  %1031 = insertelement <32 x i8> %1026, i8 %1030, i32 19
  %1032 = extractelement <32 x i32> %931, i32 20
  %1033 = sext i32 %1032 to i64
  %1034 = getelementptr inbounds i8, i8* %7, i64 %1033
  %1035 = load i8, i8* %1034, align 1, !tbaa !394
  %1036 = insertelement <32 x i8> %1031, i8 %1035, i32 20
  %1037 = extractelement <32 x i32> %931, i32 21
  %1038 = sext i32 %1037 to i64
  %1039 = getelementptr inbounds i8, i8* %7, i64 %1038
  %1040 = load i8, i8* %1039, align 1, !tbaa !394
  %1041 = insertelement <32 x i8> %1036, i8 %1040, i32 21
  %1042 = extractelement <32 x i32> %931, i32 22
  %1043 = sext i32 %1042 to i64
  %1044 = getelementptr inbounds i8, i8* %7, i64 %1043
  %1045 = load i8, i8* %1044, align 1, !tbaa !394
  %1046 = insertelement <32 x i8> %1041, i8 %1045, i32 22
  %1047 = extractelement <32 x i32> %931, i32 23
  %1048 = sext i32 %1047 to i64
  %1049 = getelementptr inbounds i8, i8* %7, i64 %1048
  %1050 = load i8, i8* %1049, align 1, !tbaa !394
  %1051 = insertelement <32 x i8> %1046, i8 %1050, i32 23
  %1052 = extractelement <32 x i32> %931, i32 24
  %1053 = sext i32 %1052 to i64
  %1054 = getelementptr inbounds i8, i8* %7, i64 %1053
  %1055 = load i8, i8* %1054, align 1, !tbaa !394
  %1056 = insertelement <32 x i8> %1051, i8 %1055, i32 24
  %1057 = extractelement <32 x i32> %931, i32 25
  %1058 = sext i32 %1057 to i64
  %1059 = getelementptr inbounds i8, i8* %7, i64 %1058
  %1060 = load i8, i8* %1059, align 1, !tbaa !394
  %1061 = insertelement <32 x i8> %1056, i8 %1060, i32 25
  %1062 = extractelement <32 x i32> %931, i32 26
  %1063 = sext i32 %1062 to i64
  %1064 = getelementptr inbounds i8, i8* %7, i64 %1063
  %1065 = load i8, i8* %1064, align 1, !tbaa !394
  %1066 = insertelement <32 x i8> %1061, i8 %1065, i32 26
  %1067 = extractelement <32 x i32> %931, i32 27
  %1068 = sext i32 %1067 to i64
  %1069 = getelementptr inbounds i8, i8* %7, i64 %1068
  %1070 = load i8, i8* %1069, align 1, !tbaa !394
  %1071 = insertelement <32 x i8> %1066, i8 %1070, i32 27
  %1072 = extractelement <32 x i32> %931, i32 28
  %1073 = sext i32 %1072 to i64
  %1074 = getelementptr inbounds i8, i8* %7, i64 %1073
  %1075 = load i8, i8* %1074, align 1, !tbaa !394
  %1076 = insertelement <32 x i8> %1071, i8 %1075, i32 28
  %1077 = extractelement <32 x i32> %931, i32 29
  %1078 = sext i32 %1077 to i64
  %1079 = getelementptr inbounds i8, i8* %7, i64 %1078
  %1080 = load i8, i8* %1079, align 1, !tbaa !394
  %1081 = insertelement <32 x i8> %1076, i8 %1080, i32 29
  %1082 = extractelement <32 x i32> %931, i32 30
  %1083 = sext i32 %1082 to i64
  %1084 = getelementptr inbounds i8, i8* %7, i64 %1083
  %1085 = load i8, i8* %1084, align 1, !tbaa !394
  %1086 = insertelement <32 x i8> %1081, i8 %1085, i32 30
  %1087 = extractelement <32 x i32> %931, i32 31
  %1088 = sext i32 %1087 to i64
  %1089 = getelementptr inbounds i8, i8* %7, i64 %1088
  %1090 = load i8, i8* %1089, align 1, !tbaa !394
  %1091 = insertelement <32 x i8> %1086, i8 %1090, i32 31
  %1092 = zext <32 x i8> %1091 to <32 x i16>
  %1093 = shl nuw nsw <32 x i16> %1092, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %1094 = zext <32 x i8> %t167.s to <32 x i16>
  %1095 = zext <32 x i8> %t169.s to <32 x i16>
  %1096 = add nuw nsw <32 x i16> %1095, %1094
  %1097 = add nuw nsw <32 x i16> %1096, %1093
  %1098 = add nsw <32 x i32> %t163, %222
  %1099 = extractelement <32 x i32> %1098, i32 0
  %1100 = sext i32 %1099 to i64
  %1101 = getelementptr inbounds i8, i8* %7, i64 %1100
  %1102 = load i8, i8* %1101, align 1, !tbaa !394
  %1103 = insertelement <32 x i8> undef, i8 %1102, i32 0
  %1104 = extractelement <32 x i32> %1098, i32 1
  %1105 = sext i32 %1104 to i64
  %1106 = getelementptr inbounds i8, i8* %7, i64 %1105
  %1107 = load i8, i8* %1106, align 1, !tbaa !394
  %1108 = insertelement <32 x i8> %1103, i8 %1107, i32 1
  %1109 = extractelement <32 x i32> %1098, i32 2
  %1110 = sext i32 %1109 to i64
  %1111 = getelementptr inbounds i8, i8* %7, i64 %1110
  %1112 = load i8, i8* %1111, align 1, !tbaa !394
  %1113 = insertelement <32 x i8> %1108, i8 %1112, i32 2
  %1114 = extractelement <32 x i32> %1098, i32 3
  %1115 = sext i32 %1114 to i64
  %1116 = getelementptr inbounds i8, i8* %7, i64 %1115
  %1117 = load i8, i8* %1116, align 1, !tbaa !394
  %1118 = insertelement <32 x i8> %1113, i8 %1117, i32 3
  %1119 = extractelement <32 x i32> %1098, i32 4
  %1120 = sext i32 %1119 to i64
  %1121 = getelementptr inbounds i8, i8* %7, i64 %1120
  %1122 = load i8, i8* %1121, align 1, !tbaa !394
  %1123 = insertelement <32 x i8> %1118, i8 %1122, i32 4
  %1124 = extractelement <32 x i32> %1098, i32 5
  %1125 = sext i32 %1124 to i64
  %1126 = getelementptr inbounds i8, i8* %7, i64 %1125
  %1127 = load i8, i8* %1126, align 1, !tbaa !394
  %1128 = insertelement <32 x i8> %1123, i8 %1127, i32 5
  %1129 = extractelement <32 x i32> %1098, i32 6
  %1130 = sext i32 %1129 to i64
  %1131 = getelementptr inbounds i8, i8* %7, i64 %1130
  %1132 = load i8, i8* %1131, align 1, !tbaa !394
  %1133 = insertelement <32 x i8> %1128, i8 %1132, i32 6
  %1134 = extractelement <32 x i32> %1098, i32 7
  %1135 = sext i32 %1134 to i64
  %1136 = getelementptr inbounds i8, i8* %7, i64 %1135
  %1137 = load i8, i8* %1136, align 1, !tbaa !394
  %1138 = insertelement <32 x i8> %1133, i8 %1137, i32 7
  %1139 = extractelement <32 x i32> %1098, i32 8
  %1140 = sext i32 %1139 to i64
  %1141 = getelementptr inbounds i8, i8* %7, i64 %1140
  %1142 = load i8, i8* %1141, align 1, !tbaa !394
  %1143 = insertelement <32 x i8> %1138, i8 %1142, i32 8
  %1144 = extractelement <32 x i32> %1098, i32 9
  %1145 = sext i32 %1144 to i64
  %1146 = getelementptr inbounds i8, i8* %7, i64 %1145
  %1147 = load i8, i8* %1146, align 1, !tbaa !394
  %1148 = insertelement <32 x i8> %1143, i8 %1147, i32 9
  %1149 = extractelement <32 x i32> %1098, i32 10
  %1150 = sext i32 %1149 to i64
  %1151 = getelementptr inbounds i8, i8* %7, i64 %1150
  %1152 = load i8, i8* %1151, align 1, !tbaa !394
  %1153 = insertelement <32 x i8> %1148, i8 %1152, i32 10
  %1154 = extractelement <32 x i32> %1098, i32 11
  %1155 = sext i32 %1154 to i64
  %1156 = getelementptr inbounds i8, i8* %7, i64 %1155
  %1157 = load i8, i8* %1156, align 1, !tbaa !394
  %1158 = insertelement <32 x i8> %1153, i8 %1157, i32 11
  %1159 = extractelement <32 x i32> %1098, i32 12
  %1160 = sext i32 %1159 to i64
  %1161 = getelementptr inbounds i8, i8* %7, i64 %1160
  %1162 = load i8, i8* %1161, align 1, !tbaa !394
  %1163 = insertelement <32 x i8> %1158, i8 %1162, i32 12
  %1164 = extractelement <32 x i32> %1098, i32 13
  %1165 = sext i32 %1164 to i64
  %1166 = getelementptr inbounds i8, i8* %7, i64 %1165
  %1167 = load i8, i8* %1166, align 1, !tbaa !394
  %1168 = insertelement <32 x i8> %1163, i8 %1167, i32 13
  %1169 = extractelement <32 x i32> %1098, i32 14
  %1170 = sext i32 %1169 to i64
  %1171 = getelementptr inbounds i8, i8* %7, i64 %1170
  %1172 = load i8, i8* %1171, align 1, !tbaa !394
  %1173 = insertelement <32 x i8> %1168, i8 %1172, i32 14
  %1174 = extractelement <32 x i32> %1098, i32 15
  %1175 = sext i32 %1174 to i64
  %1176 = getelementptr inbounds i8, i8* %7, i64 %1175
  %1177 = load i8, i8* %1176, align 1, !tbaa !394
  %1178 = insertelement <32 x i8> %1173, i8 %1177, i32 15
  %1179 = extractelement <32 x i32> %1098, i32 16
  %1180 = sext i32 %1179 to i64
  %1181 = getelementptr inbounds i8, i8* %7, i64 %1180
  %1182 = load i8, i8* %1181, align 1, !tbaa !394
  %1183 = insertelement <32 x i8> %1178, i8 %1182, i32 16
  %1184 = extractelement <32 x i32> %1098, i32 17
  %1185 = sext i32 %1184 to i64
  %1186 = getelementptr inbounds i8, i8* %7, i64 %1185
  %1187 = load i8, i8* %1186, align 1, !tbaa !394
  %1188 = insertelement <32 x i8> %1183, i8 %1187, i32 17
  %1189 = extractelement <32 x i32> %1098, i32 18
  %1190 = sext i32 %1189 to i64
  %1191 = getelementptr inbounds i8, i8* %7, i64 %1190
  %1192 = load i8, i8* %1191, align 1, !tbaa !394
  %1193 = insertelement <32 x i8> %1188, i8 %1192, i32 18
  %1194 = extractelement <32 x i32> %1098, i32 19
  %1195 = sext i32 %1194 to i64
  %1196 = getelementptr inbounds i8, i8* %7, i64 %1195
  %1197 = load i8, i8* %1196, align 1, !tbaa !394
  %1198 = insertelement <32 x i8> %1193, i8 %1197, i32 19
  %1199 = extractelement <32 x i32> %1098, i32 20
  %1200 = sext i32 %1199 to i64
  %1201 = getelementptr inbounds i8, i8* %7, i64 %1200
  %1202 = load i8, i8* %1201, align 1, !tbaa !394
  %1203 = insertelement <32 x i8> %1198, i8 %1202, i32 20
  %1204 = extractelement <32 x i32> %1098, i32 21
  %1205 = sext i32 %1204 to i64
  %1206 = getelementptr inbounds i8, i8* %7, i64 %1205
  %1207 = load i8, i8* %1206, align 1, !tbaa !394
  %1208 = insertelement <32 x i8> %1203, i8 %1207, i32 21
  %1209 = extractelement <32 x i32> %1098, i32 22
  %1210 = sext i32 %1209 to i64
  %1211 = getelementptr inbounds i8, i8* %7, i64 %1210
  %1212 = load i8, i8* %1211, align 1, !tbaa !394
  %1213 = insertelement <32 x i8> %1208, i8 %1212, i32 22
  %1214 = extractelement <32 x i32> %1098, i32 23
  %1215 = sext i32 %1214 to i64
  %1216 = getelementptr inbounds i8, i8* %7, i64 %1215
  %1217 = load i8, i8* %1216, align 1, !tbaa !394
  %1218 = insertelement <32 x i8> %1213, i8 %1217, i32 23
  %1219 = extractelement <32 x i32> %1098, i32 24
  %1220 = sext i32 %1219 to i64
  %1221 = getelementptr inbounds i8, i8* %7, i64 %1220
  %1222 = load i8, i8* %1221, align 1, !tbaa !394
  %1223 = insertelement <32 x i8> %1218, i8 %1222, i32 24
  %1224 = extractelement <32 x i32> %1098, i32 25
  %1225 = sext i32 %1224 to i64
  %1226 = getelementptr inbounds i8, i8* %7, i64 %1225
  %1227 = load i8, i8* %1226, align 1, !tbaa !394
  %1228 = insertelement <32 x i8> %1223, i8 %1227, i32 25
  %1229 = extractelement <32 x i32> %1098, i32 26
  %1230 = sext i32 %1229 to i64
  %1231 = getelementptr inbounds i8, i8* %7, i64 %1230
  %1232 = load i8, i8* %1231, align 1, !tbaa !394
  %1233 = insertelement <32 x i8> %1228, i8 %1232, i32 26
  %1234 = extractelement <32 x i32> %1098, i32 27
  %1235 = sext i32 %1234 to i64
  %1236 = getelementptr inbounds i8, i8* %7, i64 %1235
  %1237 = load i8, i8* %1236, align 1, !tbaa !394
  %1238 = insertelement <32 x i8> %1233, i8 %1237, i32 27
  %1239 = extractelement <32 x i32> %1098, i32 28
  %1240 = sext i32 %1239 to i64
  %1241 = getelementptr inbounds i8, i8* %7, i64 %1240
  %1242 = load i8, i8* %1241, align 1, !tbaa !394
  %1243 = insertelement <32 x i8> %1238, i8 %1242, i32 28
  %1244 = extractelement <32 x i32> %1098, i32 29
  %1245 = sext i32 %1244 to i64
  %1246 = getelementptr inbounds i8, i8* %7, i64 %1245
  %1247 = load i8, i8* %1246, align 1, !tbaa !394
  %1248 = insertelement <32 x i8> %1243, i8 %1247, i32 29
  %1249 = extractelement <32 x i32> %1098, i32 30
  %1250 = sext i32 %1249 to i64
  %1251 = getelementptr inbounds i8, i8* %7, i64 %1250
  %1252 = load i8, i8* %1251, align 1, !tbaa !394
  %1253 = insertelement <32 x i8> %1248, i8 %1252, i32 30
  %1254 = extractelement <32 x i32> %1098, i32 31
  %1255 = sext i32 %1254 to i64
  %1256 = getelementptr inbounds i8, i8* %7, i64 %1255
  %1257 = load i8, i8* %1256, align 1, !tbaa !394
  %1258 = insertelement <32 x i8> %1253, i8 %1257, i32 31
  %1259 = zext <32 x i8> %1258 to <32 x i16>
  %1260 = shl nuw nsw <32 x i16> %1259, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %1261 = zext <32 x i8> %t171.s to <32 x i16>
  %1262 = zext <32 x i8> %t172.s to <32 x i16>
  %1263 = add nuw nsw <32 x i16> %1262, %1261
  %1264 = add nuw nsw <32 x i16> %1263, %1260
  %1265 = shufflevector <32 x i16> %1097, <32 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1266 = shufflevector <32 x i16> %1264, <32 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1267 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %1265, <16 x i16> %1266) #10
  %1268 = shufflevector <32 x i16> %1097, <32 x i16> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1269 = shufflevector <32 x i16> %1264, <32 x i16> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1270 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %1268, <16 x i16> %1269) #10
  %1271 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %1266, <16 x i16> %1265) #10
  %1272 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %1269, <16 x i16> %1268) #10
  %1273 = or <16 x i16> %1267, %1271
  %1274 = or <16 x i16> %1270, %1272
  %1275 = add nsw <32 x i32> %t166, %t232
  %1276 = extractelement <32 x i32> %1275, i32 0
  %1277 = sext i32 %1276 to i64
  %1278 = getelementptr inbounds i8, i8* %7, i64 %1277
  %1279 = load i8, i8* %1278, align 1, !tbaa !394
  %1280 = insertelement <32 x i8> undef, i8 %1279, i32 0
  %1281 = extractelement <32 x i32> %1275, i32 1
  %1282 = sext i32 %1281 to i64
  %1283 = getelementptr inbounds i8, i8* %7, i64 %1282
  %1284 = load i8, i8* %1283, align 1, !tbaa !394
  %1285 = insertelement <32 x i8> %1280, i8 %1284, i32 1
  %1286 = extractelement <32 x i32> %1275, i32 2
  %1287 = sext i32 %1286 to i64
  %1288 = getelementptr inbounds i8, i8* %7, i64 %1287
  %1289 = load i8, i8* %1288, align 1, !tbaa !394
  %1290 = insertelement <32 x i8> %1285, i8 %1289, i32 2
  %1291 = extractelement <32 x i32> %1275, i32 3
  %1292 = sext i32 %1291 to i64
  %1293 = getelementptr inbounds i8, i8* %7, i64 %1292
  %1294 = load i8, i8* %1293, align 1, !tbaa !394
  %1295 = insertelement <32 x i8> %1290, i8 %1294, i32 3
  %1296 = extractelement <32 x i32> %1275, i32 4
  %1297 = sext i32 %1296 to i64
  %1298 = getelementptr inbounds i8, i8* %7, i64 %1297
  %1299 = load i8, i8* %1298, align 1, !tbaa !394
  %1300 = insertelement <32 x i8> %1295, i8 %1299, i32 4
  %1301 = extractelement <32 x i32> %1275, i32 5
  %1302 = sext i32 %1301 to i64
  %1303 = getelementptr inbounds i8, i8* %7, i64 %1302
  %1304 = load i8, i8* %1303, align 1, !tbaa !394
  %1305 = insertelement <32 x i8> %1300, i8 %1304, i32 5
  %1306 = extractelement <32 x i32> %1275, i32 6
  %1307 = sext i32 %1306 to i64
  %1308 = getelementptr inbounds i8, i8* %7, i64 %1307
  %1309 = load i8, i8* %1308, align 1, !tbaa !394
  %1310 = insertelement <32 x i8> %1305, i8 %1309, i32 6
  %1311 = extractelement <32 x i32> %1275, i32 7
  %1312 = sext i32 %1311 to i64
  %1313 = getelementptr inbounds i8, i8* %7, i64 %1312
  %1314 = load i8, i8* %1313, align 1, !tbaa !394
  %1315 = insertelement <32 x i8> %1310, i8 %1314, i32 7
  %1316 = extractelement <32 x i32> %1275, i32 8
  %1317 = sext i32 %1316 to i64
  %1318 = getelementptr inbounds i8, i8* %7, i64 %1317
  %1319 = load i8, i8* %1318, align 1, !tbaa !394
  %1320 = insertelement <32 x i8> %1315, i8 %1319, i32 8
  %1321 = extractelement <32 x i32> %1275, i32 9
  %1322 = sext i32 %1321 to i64
  %1323 = getelementptr inbounds i8, i8* %7, i64 %1322
  %1324 = load i8, i8* %1323, align 1, !tbaa !394
  %1325 = insertelement <32 x i8> %1320, i8 %1324, i32 9
  %1326 = extractelement <32 x i32> %1275, i32 10
  %1327 = sext i32 %1326 to i64
  %1328 = getelementptr inbounds i8, i8* %7, i64 %1327
  %1329 = load i8, i8* %1328, align 1, !tbaa !394
  %1330 = insertelement <32 x i8> %1325, i8 %1329, i32 10
  %1331 = extractelement <32 x i32> %1275, i32 11
  %1332 = sext i32 %1331 to i64
  %1333 = getelementptr inbounds i8, i8* %7, i64 %1332
  %1334 = load i8, i8* %1333, align 1, !tbaa !394
  %1335 = insertelement <32 x i8> %1330, i8 %1334, i32 11
  %1336 = extractelement <32 x i32> %1275, i32 12
  %1337 = sext i32 %1336 to i64
  %1338 = getelementptr inbounds i8, i8* %7, i64 %1337
  %1339 = load i8, i8* %1338, align 1, !tbaa !394
  %1340 = insertelement <32 x i8> %1335, i8 %1339, i32 12
  %1341 = extractelement <32 x i32> %1275, i32 13
  %1342 = sext i32 %1341 to i64
  %1343 = getelementptr inbounds i8, i8* %7, i64 %1342
  %1344 = load i8, i8* %1343, align 1, !tbaa !394
  %1345 = insertelement <32 x i8> %1340, i8 %1344, i32 13
  %1346 = extractelement <32 x i32> %1275, i32 14
  %1347 = sext i32 %1346 to i64
  %1348 = getelementptr inbounds i8, i8* %7, i64 %1347
  %1349 = load i8, i8* %1348, align 1, !tbaa !394
  %1350 = insertelement <32 x i8> %1345, i8 %1349, i32 14
  %1351 = extractelement <32 x i32> %1275, i32 15
  %1352 = sext i32 %1351 to i64
  %1353 = getelementptr inbounds i8, i8* %7, i64 %1352
  %1354 = load i8, i8* %1353, align 1, !tbaa !394
  %1355 = insertelement <32 x i8> %1350, i8 %1354, i32 15
  %1356 = extractelement <32 x i32> %1275, i32 16
  %1357 = sext i32 %1356 to i64
  %1358 = getelementptr inbounds i8, i8* %7, i64 %1357
  %1359 = load i8, i8* %1358, align 1, !tbaa !394
  %1360 = insertelement <32 x i8> %1355, i8 %1359, i32 16
  %1361 = extractelement <32 x i32> %1275, i32 17
  %1362 = sext i32 %1361 to i64
  %1363 = getelementptr inbounds i8, i8* %7, i64 %1362
  %1364 = load i8, i8* %1363, align 1, !tbaa !394
  %1365 = insertelement <32 x i8> %1360, i8 %1364, i32 17
  %1366 = extractelement <32 x i32> %1275, i32 18
  %1367 = sext i32 %1366 to i64
  %1368 = getelementptr inbounds i8, i8* %7, i64 %1367
  %1369 = load i8, i8* %1368, align 1, !tbaa !394
  %1370 = insertelement <32 x i8> %1365, i8 %1369, i32 18
  %1371 = extractelement <32 x i32> %1275, i32 19
  %1372 = sext i32 %1371 to i64
  %1373 = getelementptr inbounds i8, i8* %7, i64 %1372
  %1374 = load i8, i8* %1373, align 1, !tbaa !394
  %1375 = insertelement <32 x i8> %1370, i8 %1374, i32 19
  %1376 = extractelement <32 x i32> %1275, i32 20
  %1377 = sext i32 %1376 to i64
  %1378 = getelementptr inbounds i8, i8* %7, i64 %1377
  %1379 = load i8, i8* %1378, align 1, !tbaa !394
  %1380 = insertelement <32 x i8> %1375, i8 %1379, i32 20
  %1381 = extractelement <32 x i32> %1275, i32 21
  %1382 = sext i32 %1381 to i64
  %1383 = getelementptr inbounds i8, i8* %7, i64 %1382
  %1384 = load i8, i8* %1383, align 1, !tbaa !394
  %1385 = insertelement <32 x i8> %1380, i8 %1384, i32 21
  %1386 = extractelement <32 x i32> %1275, i32 22
  %1387 = sext i32 %1386 to i64
  %1388 = getelementptr inbounds i8, i8* %7, i64 %1387
  %1389 = load i8, i8* %1388, align 1, !tbaa !394
  %1390 = insertelement <32 x i8> %1385, i8 %1389, i32 22
  %1391 = extractelement <32 x i32> %1275, i32 23
  %1392 = sext i32 %1391 to i64
  %1393 = getelementptr inbounds i8, i8* %7, i64 %1392
  %1394 = load i8, i8* %1393, align 1, !tbaa !394
  %1395 = insertelement <32 x i8> %1390, i8 %1394, i32 23
  %1396 = extractelement <32 x i32> %1275, i32 24
  %1397 = sext i32 %1396 to i64
  %1398 = getelementptr inbounds i8, i8* %7, i64 %1397
  %1399 = load i8, i8* %1398, align 1, !tbaa !394
  %1400 = insertelement <32 x i8> %1395, i8 %1399, i32 24
  %1401 = extractelement <32 x i32> %1275, i32 25
  %1402 = sext i32 %1401 to i64
  %1403 = getelementptr inbounds i8, i8* %7, i64 %1402
  %1404 = load i8, i8* %1403, align 1, !tbaa !394
  %1405 = insertelement <32 x i8> %1400, i8 %1404, i32 25
  %1406 = extractelement <32 x i32> %1275, i32 26
  %1407 = sext i32 %1406 to i64
  %1408 = getelementptr inbounds i8, i8* %7, i64 %1407
  %1409 = load i8, i8* %1408, align 1, !tbaa !394
  %1410 = insertelement <32 x i8> %1405, i8 %1409, i32 26
  %1411 = extractelement <32 x i32> %1275, i32 27
  %1412 = sext i32 %1411 to i64
  %1413 = getelementptr inbounds i8, i8* %7, i64 %1412
  %1414 = load i8, i8* %1413, align 1, !tbaa !394
  %1415 = insertelement <32 x i8> %1410, i8 %1414, i32 27
  %1416 = extractelement <32 x i32> %1275, i32 28
  %1417 = sext i32 %1416 to i64
  %1418 = getelementptr inbounds i8, i8* %7, i64 %1417
  %1419 = load i8, i8* %1418, align 1, !tbaa !394
  %1420 = insertelement <32 x i8> %1415, i8 %1419, i32 28
  %1421 = extractelement <32 x i32> %1275, i32 29
  %1422 = sext i32 %1421 to i64
  %1423 = getelementptr inbounds i8, i8* %7, i64 %1422
  %1424 = load i8, i8* %1423, align 1, !tbaa !394
  %1425 = insertelement <32 x i8> %1420, i8 %1424, i32 29
  %1426 = extractelement <32 x i32> %1275, i32 30
  %1427 = sext i32 %1426 to i64
  %1428 = getelementptr inbounds i8, i8* %7, i64 %1427
  %1429 = load i8, i8* %1428, align 1, !tbaa !394
  %1430 = insertelement <32 x i8> %1425, i8 %1429, i32 30
  %1431 = extractelement <32 x i32> %1275, i32 31
  %1432 = sext i32 %1431 to i64
  %1433 = getelementptr inbounds i8, i8* %7, i64 %1432
  %1434 = load i8, i8* %1433, align 1, !tbaa !394
  %1435 = insertelement <32 x i8> %1430, i8 %1434, i32 31
  %1436 = zext <32 x i8> %1435 to <32 x i16>
  %1437 = shl nuw nsw <32 x i16> %1436, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %1438 = add nuw nsw <32 x i16> %1261, %1094
  %1439 = add nuw nsw <32 x i16> %1438, %1437
  %1440 = add nsw <32 x i32> %t168, %t232
  %1441 = extractelement <32 x i32> %1440, i32 0
  %1442 = sext i32 %1441 to i64
  %1443 = getelementptr inbounds i8, i8* %7, i64 %1442
  %1444 = load i8, i8* %1443, align 1, !tbaa !394
  %1445 = insertelement <32 x i8> undef, i8 %1444, i32 0
  %1446 = extractelement <32 x i32> %1440, i32 1
  %1447 = sext i32 %1446 to i64
  %1448 = getelementptr inbounds i8, i8* %7, i64 %1447
  %1449 = load i8, i8* %1448, align 1, !tbaa !394
  %1450 = insertelement <32 x i8> %1445, i8 %1449, i32 1
  %1451 = extractelement <32 x i32> %1440, i32 2
  %1452 = sext i32 %1451 to i64
  %1453 = getelementptr inbounds i8, i8* %7, i64 %1452
  %1454 = load i8, i8* %1453, align 1, !tbaa !394
  %1455 = insertelement <32 x i8> %1450, i8 %1454, i32 2
  %1456 = extractelement <32 x i32> %1440, i32 3
  %1457 = sext i32 %1456 to i64
  %1458 = getelementptr inbounds i8, i8* %7, i64 %1457
  %1459 = load i8, i8* %1458, align 1, !tbaa !394
  %1460 = insertelement <32 x i8> %1455, i8 %1459, i32 3
  %1461 = extractelement <32 x i32> %1440, i32 4
  %1462 = sext i32 %1461 to i64
  %1463 = getelementptr inbounds i8, i8* %7, i64 %1462
  %1464 = load i8, i8* %1463, align 1, !tbaa !394
  %1465 = insertelement <32 x i8> %1460, i8 %1464, i32 4
  %1466 = extractelement <32 x i32> %1440, i32 5
  %1467 = sext i32 %1466 to i64
  %1468 = getelementptr inbounds i8, i8* %7, i64 %1467
  %1469 = load i8, i8* %1468, align 1, !tbaa !394
  %1470 = insertelement <32 x i8> %1465, i8 %1469, i32 5
  %1471 = extractelement <32 x i32> %1440, i32 6
  %1472 = sext i32 %1471 to i64
  %1473 = getelementptr inbounds i8, i8* %7, i64 %1472
  %1474 = load i8, i8* %1473, align 1, !tbaa !394
  %1475 = insertelement <32 x i8> %1470, i8 %1474, i32 6
  %1476 = extractelement <32 x i32> %1440, i32 7
  %1477 = sext i32 %1476 to i64
  %1478 = getelementptr inbounds i8, i8* %7, i64 %1477
  %1479 = load i8, i8* %1478, align 1, !tbaa !394
  %1480 = insertelement <32 x i8> %1475, i8 %1479, i32 7
  %1481 = extractelement <32 x i32> %1440, i32 8
  %1482 = sext i32 %1481 to i64
  %1483 = getelementptr inbounds i8, i8* %7, i64 %1482
  %1484 = load i8, i8* %1483, align 1, !tbaa !394
  %1485 = insertelement <32 x i8> %1480, i8 %1484, i32 8
  %1486 = extractelement <32 x i32> %1440, i32 9
  %1487 = sext i32 %1486 to i64
  %1488 = getelementptr inbounds i8, i8* %7, i64 %1487
  %1489 = load i8, i8* %1488, align 1, !tbaa !394
  %1490 = insertelement <32 x i8> %1485, i8 %1489, i32 9
  %1491 = extractelement <32 x i32> %1440, i32 10
  %1492 = sext i32 %1491 to i64
  %1493 = getelementptr inbounds i8, i8* %7, i64 %1492
  %1494 = load i8, i8* %1493, align 1, !tbaa !394
  %1495 = insertelement <32 x i8> %1490, i8 %1494, i32 10
  %1496 = extractelement <32 x i32> %1440, i32 11
  %1497 = sext i32 %1496 to i64
  %1498 = getelementptr inbounds i8, i8* %7, i64 %1497
  %1499 = load i8, i8* %1498, align 1, !tbaa !394
  %1500 = insertelement <32 x i8> %1495, i8 %1499, i32 11
  %1501 = extractelement <32 x i32> %1440, i32 12
  %1502 = sext i32 %1501 to i64
  %1503 = getelementptr inbounds i8, i8* %7, i64 %1502
  %1504 = load i8, i8* %1503, align 1, !tbaa !394
  %1505 = insertelement <32 x i8> %1500, i8 %1504, i32 12
  %1506 = extractelement <32 x i32> %1440, i32 13
  %1507 = sext i32 %1506 to i64
  %1508 = getelementptr inbounds i8, i8* %7, i64 %1507
  %1509 = load i8, i8* %1508, align 1, !tbaa !394
  %1510 = insertelement <32 x i8> %1505, i8 %1509, i32 13
  %1511 = extractelement <32 x i32> %1440, i32 14
  %1512 = sext i32 %1511 to i64
  %1513 = getelementptr inbounds i8, i8* %7, i64 %1512
  %1514 = load i8, i8* %1513, align 1, !tbaa !394
  %1515 = insertelement <32 x i8> %1510, i8 %1514, i32 14
  %1516 = extractelement <32 x i32> %1440, i32 15
  %1517 = sext i32 %1516 to i64
  %1518 = getelementptr inbounds i8, i8* %7, i64 %1517
  %1519 = load i8, i8* %1518, align 1, !tbaa !394
  %1520 = insertelement <32 x i8> %1515, i8 %1519, i32 15
  %1521 = extractelement <32 x i32> %1440, i32 16
  %1522 = sext i32 %1521 to i64
  %1523 = getelementptr inbounds i8, i8* %7, i64 %1522
  %1524 = load i8, i8* %1523, align 1, !tbaa !394
  %1525 = insertelement <32 x i8> %1520, i8 %1524, i32 16
  %1526 = extractelement <32 x i32> %1440, i32 17
  %1527 = sext i32 %1526 to i64
  %1528 = getelementptr inbounds i8, i8* %7, i64 %1527
  %1529 = load i8, i8* %1528, align 1, !tbaa !394
  %1530 = insertelement <32 x i8> %1525, i8 %1529, i32 17
  %1531 = extractelement <32 x i32> %1440, i32 18
  %1532 = sext i32 %1531 to i64
  %1533 = getelementptr inbounds i8, i8* %7, i64 %1532
  %1534 = load i8, i8* %1533, align 1, !tbaa !394
  %1535 = insertelement <32 x i8> %1530, i8 %1534, i32 18
  %1536 = extractelement <32 x i32> %1440, i32 19
  %1537 = sext i32 %1536 to i64
  %1538 = getelementptr inbounds i8, i8* %7, i64 %1537
  %1539 = load i8, i8* %1538, align 1, !tbaa !394
  %1540 = insertelement <32 x i8> %1535, i8 %1539, i32 19
  %1541 = extractelement <32 x i32> %1440, i32 20
  %1542 = sext i32 %1541 to i64
  %1543 = getelementptr inbounds i8, i8* %7, i64 %1542
  %1544 = load i8, i8* %1543, align 1, !tbaa !394
  %1545 = insertelement <32 x i8> %1540, i8 %1544, i32 20
  %1546 = extractelement <32 x i32> %1440, i32 21
  %1547 = sext i32 %1546 to i64
  %1548 = getelementptr inbounds i8, i8* %7, i64 %1547
  %1549 = load i8, i8* %1548, align 1, !tbaa !394
  %1550 = insertelement <32 x i8> %1545, i8 %1549, i32 21
  %1551 = extractelement <32 x i32> %1440, i32 22
  %1552 = sext i32 %1551 to i64
  %1553 = getelementptr inbounds i8, i8* %7, i64 %1552
  %1554 = load i8, i8* %1553, align 1, !tbaa !394
  %1555 = insertelement <32 x i8> %1550, i8 %1554, i32 22
  %1556 = extractelement <32 x i32> %1440, i32 23
  %1557 = sext i32 %1556 to i64
  %1558 = getelementptr inbounds i8, i8* %7, i64 %1557
  %1559 = load i8, i8* %1558, align 1, !tbaa !394
  %1560 = insertelement <32 x i8> %1555, i8 %1559, i32 23
  %1561 = extractelement <32 x i32> %1440, i32 24
  %1562 = sext i32 %1561 to i64
  %1563 = getelementptr inbounds i8, i8* %7, i64 %1562
  %1564 = load i8, i8* %1563, align 1, !tbaa !394
  %1565 = insertelement <32 x i8> %1560, i8 %1564, i32 24
  %1566 = extractelement <32 x i32> %1440, i32 25
  %1567 = sext i32 %1566 to i64
  %1568 = getelementptr inbounds i8, i8* %7, i64 %1567
  %1569 = load i8, i8* %1568, align 1, !tbaa !394
  %1570 = insertelement <32 x i8> %1565, i8 %1569, i32 25
  %1571 = extractelement <32 x i32> %1440, i32 26
  %1572 = sext i32 %1571 to i64
  %1573 = getelementptr inbounds i8, i8* %7, i64 %1572
  %1574 = load i8, i8* %1573, align 1, !tbaa !394
  %1575 = insertelement <32 x i8> %1570, i8 %1574, i32 26
  %1576 = extractelement <32 x i32> %1440, i32 27
  %1577 = sext i32 %1576 to i64
  %1578 = getelementptr inbounds i8, i8* %7, i64 %1577
  %1579 = load i8, i8* %1578, align 1, !tbaa !394
  %1580 = insertelement <32 x i8> %1575, i8 %1579, i32 27
  %1581 = extractelement <32 x i32> %1440, i32 28
  %1582 = sext i32 %1581 to i64
  %1583 = getelementptr inbounds i8, i8* %7, i64 %1582
  %1584 = load i8, i8* %1583, align 1, !tbaa !394
  %1585 = insertelement <32 x i8> %1580, i8 %1584, i32 28
  %1586 = extractelement <32 x i32> %1440, i32 29
  %1587 = sext i32 %1586 to i64
  %1588 = getelementptr inbounds i8, i8* %7, i64 %1587
  %1589 = load i8, i8* %1588, align 1, !tbaa !394
  %1590 = insertelement <32 x i8> %1585, i8 %1589, i32 29
  %1591 = extractelement <32 x i32> %1440, i32 30
  %1592 = sext i32 %1591 to i64
  %1593 = getelementptr inbounds i8, i8* %7, i64 %1592
  %1594 = load i8, i8* %1593, align 1, !tbaa !394
  %1595 = insertelement <32 x i8> %1590, i8 %1594, i32 30
  %1596 = extractelement <32 x i32> %1440, i32 31
  %1597 = sext i32 %1596 to i64
  %1598 = getelementptr inbounds i8, i8* %7, i64 %1597
  %1599 = load i8, i8* %1598, align 1, !tbaa !394
  %1600 = insertelement <32 x i8> %1595, i8 %1599, i32 31
  %1601 = zext <32 x i8> %1600 to <32 x i16>
  %1602 = shl nuw nsw <32 x i16> %1601, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %1603 = add nuw nsw <32 x i16> %1262, %1095
  %1604 = add nuw nsw <32 x i16> %1603, %1602
  %1605 = shufflevector <32 x i16> %1439, <32 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1606 = shufflevector <32 x i16> %1604, <32 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1607 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %1605, <16 x i16> %1606) #10
  %1608 = shufflevector <32 x i16> %1439, <32 x i16> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1609 = shufflevector <32 x i16> %1604, <32 x i16> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1610 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %1608, <16 x i16> %1609) #10
  %1611 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %1606, <16 x i16> %1605) #10
  %1612 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %1609, <16 x i16> %1608) #10
  %1613 = or <16 x i16> %1607, %1611
  %1614 = or <16 x i16> %1610, %1612
  %1615 = add nuw nsw <16 x i16> %1613, %1273
  %1616 = add nuw nsw <16 x i16> %1614, %1274
  %a53 = shufflevector <16 x i16> %1615, <16 x i16> %1616, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1617 = icmp ult <32 x i16> %a53, <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>
  %1618 = select <32 x i1> %1617, <32 x i16> %a53, <32 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>
  %1619 = trunc <32 x i16> %1618 to <32 x i8>
  %1620 = sext i32 %output.s0.x.v0.base.s to i64
  %1621 = add nsw i64 %1620, %228
  %1622 = getelementptr inbounds i8, i8* %20, i64 %1621
  %1623 = bitcast i8* %1622 to <32 x i8>*
  store <32 x i8> %1619, <32 x i8>* %1623, align 1, !tbaa !397
  %1624 = add nuw nsw i32 %output.s0.x.x, 1
  %.not268 = icmp eq i32 %1624, %t240
  br i1 %.not268, label %"end for output.s0.x.x", label %"for output.s0.x.x"

"end for output.s0.x.x":                          ; preds = %"for output.s0.x.x", %"for output.s0.y.rebased"
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %1625 = add nuw nsw i32 %output.s0.y.rebased, 1
  %.not267 = icmp eq i64 %indvars.iv.next, %205
  br i1 %.not267, label %"end for output.s0.y.rebased", label %"for output.s0.y.rebased"

"for output.s0.y.rebased31":                      ; preds = %"for output.s0.y.rebased31.preheader", %"end for output.s0.x.x.rebased39"
  %indvars.iv467 = phi i64 [ 0, %"for output.s0.y.rebased31.preheader" ], [ %indvars.iv.next468, %"end for output.s0.x.x.rebased39" ]
  %output.s0.y.rebased33 = phi i32 [ 0, %"for output.s0.y.rebased31.preheader" ], [ %4482, %"end for output.s0.x.x.rebased39" ]
  %t265 = add nsw i32 %output.s0.y.rebased33, %t253
  %1626 = add nsw i32 %t265, 1
  %1627 = mul nsw i32 %1626, %19
  %t262 = sub nsw i32 %1627, %14
  %1628 = add nsw i32 %t265, -1
  %1629 = mul nsw i32 %1628, %19
  %t261 = sub nsw i32 %1629, %14
  %1630 = trunc i64 %indvars.iv467 to i32
  %1631 = add i32 %output.s0.y.prologue, %1630
  %1632 = mul i32 %1631, %32
  %t264 = sub i32 %1632, %198
  br i1 %241, label %"for output.s0.x.x34.preheader", label %"for output.s0.y.rebased31.end for output.s0.x.x35_crit_edge", !prof !393

"for output.s0.y.rebased31.end for output.s0.x.x35_crit_edge": ; preds = %"for output.s0.y.rebased31"
  %.pre491 = mul nsw i32 %t265, %19
  br label %"end for output.s0.x.x35"

"for output.s0.x.x34.preheader":                  ; preds = %"for output.s0.y.rebased31"
  %1633 = insertelement <32 x i32> undef, i32 %t261, i32 0
  %1634 = shufflevector <32 x i32> %1633, <32 x i32> undef, <32 x i32> zeroinitializer
  %1635 = insertelement <32 x i32> undef, i32 %t262, i32 0
  %1636 = shufflevector <32 x i32> %1635, <32 x i32> undef, <32 x i32> zeroinitializer
  %1637 = mul nsw i32 %t265, %19
  %1638 = sub nsw i32 %1637, %14
  %1639 = insertelement <32 x i32> undef, i32 %1638, i32 0
  %t235 = shufflevector <32 x i32> %1639, <32 x i32> undef, <32 x i32> zeroinitializer
  %1640 = sext i32 %t264 to i64
  br label %"for output.s0.x.x34"

"end for output.s0.y.rebased32":                  ; preds = %"end for output.s0.x.x.rebased39", %"end for output.s0.y.rebased"
  %t279 = sub nsw i32 %a25, %output.s0.y.epilogue
  %t282 = sub nsw i32 %output.s0.y.epilogue, %17
  %1641 = icmp sgt i32 %t279, 0
  br i1 %1641, label %"for output.s0.y.rebased42.preheader", label %"assert succeeded52", !prof !393

"for output.s0.y.rebased42.preheader":            ; preds = %"end for output.s0.y.rebased32"
  %a83 = add nsw i32 %18, -1
  %1642 = icmp sgt i32 %28, 0
  %1643 = insertelement <32 x i32> undef, i32 %b6, i32 0
  %1644 = shufflevector <32 x i32> %1643, <32 x i32> undef, <16 x i32> zeroinitializer
  %1645 = insertelement <32 x i32> undef, i32 %14, i32 0
  %1646 = shufflevector <32 x i32> %1645, <32 x i32> undef, <16 x i32> zeroinitializer
  %1647 = zext i32 %t279 to i64
  br label %"for output.s0.y.rebased42"

"for output.s0.x.x34":                            ; preds = %"for output.s0.x.x34.preheader", %"for output.s0.x.x34"
  %output.s0.x.x36 = phi i32 [ %3021, %"for output.s0.x.x34" ], [ 0, %"for output.s0.x.x34.preheader" ]
  %a65 = shl nsw i32 %output.s0.x.x36, 5
  %1648 = icmp sgt i32 %a63.pre-phi, %a65
  %output.s0.x.v0.base.s37 = select i1 %1648, i32 %a65, i32 %a63.pre-phi
  %1649 = add nsw i32 %output.s0.x.v0.base.s37, %27
  %1650 = insertelement <32 x i32> undef, i32 %1649, i32 0
  %1651 = shufflevector <32 x i32> %1650, <32 x i32> undef, <32 x i32> zeroinitializer
  %a67 = add nsw <32 x i32> %1651, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1652 = shufflevector <32 x i32> %a67, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1653 = icmp sgt <16 x i32> %243, %1652
  %1654 = shufflevector <32 x i32> %a67, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1655 = icmp sgt <16 x i32> %243, %1654
  %1656 = select <16 x i1> %1653, <16 x i32> %1652, <16 x i32> %243
  %1657 = select <16 x i1> %1655, <16 x i32> %1654, <16 x i32> %243
  %1658 = icmp sgt <16 x i32> %1656, %245
  %1659 = icmp sgt <16 x i32> %1657, %245
  %1660 = select <16 x i1> %1658, <16 x i32> %1656, <16 x i32> %245
  %1661 = select <16 x i1> %1659, <16 x i32> %1657, <16 x i32> %245
  %t177 = shufflevector <16 x i32> %1660, <16 x i32> %1661, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1662 = add nsw i32 %1649, -1
  %1663 = insertelement <32 x i32> undef, i32 %1662, i32 0
  %1664 = shufflevector <32 x i32> %1663, <32 x i32> undef, <32 x i32> zeroinitializer
  %a69 = add nsw <32 x i32> %1664, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1665 = shufflevector <32 x i32> %a69, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1666 = icmp sgt <16 x i32> %243, %1665
  %1667 = shufflevector <32 x i32> %a69, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1668 = icmp sgt <16 x i32> %243, %1667
  %1669 = select <16 x i1> %1666, <16 x i32> %1665, <16 x i32> %243
  %1670 = select <16 x i1> %1668, <16 x i32> %1667, <16 x i32> %243
  %1671 = icmp sgt <16 x i32> %1669, %245
  %1672 = icmp sgt <16 x i32> %1670, %245
  %1673 = select <16 x i1> %1671, <16 x i32> %1669, <16 x i32> %245
  %1674 = select <16 x i1> %1672, <16 x i32> %1670, <16 x i32> %245
  %t180 = shufflevector <16 x i32> %1673, <16 x i32> %1674, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1675 = add nsw <32 x i32> %t180, %1634
  %1676 = extractelement <32 x i32> %1675, i32 0
  %1677 = sext i32 %1676 to i64
  %1678 = getelementptr inbounds i8, i8* %7, i64 %1677
  %1679 = load i8, i8* %1678, align 1, !tbaa !394
  %1680 = insertelement <32 x i8> undef, i8 %1679, i32 0
  %1681 = extractelement <32 x i32> %1675, i32 1
  %1682 = sext i32 %1681 to i64
  %1683 = getelementptr inbounds i8, i8* %7, i64 %1682
  %1684 = load i8, i8* %1683, align 1, !tbaa !394
  %1685 = insertelement <32 x i8> %1680, i8 %1684, i32 1
  %1686 = extractelement <32 x i32> %1675, i32 2
  %1687 = sext i32 %1686 to i64
  %1688 = getelementptr inbounds i8, i8* %7, i64 %1687
  %1689 = load i8, i8* %1688, align 1, !tbaa !394
  %1690 = insertelement <32 x i8> %1685, i8 %1689, i32 2
  %1691 = extractelement <32 x i32> %1675, i32 3
  %1692 = sext i32 %1691 to i64
  %1693 = getelementptr inbounds i8, i8* %7, i64 %1692
  %1694 = load i8, i8* %1693, align 1, !tbaa !394
  %1695 = insertelement <32 x i8> %1690, i8 %1694, i32 3
  %1696 = extractelement <32 x i32> %1675, i32 4
  %1697 = sext i32 %1696 to i64
  %1698 = getelementptr inbounds i8, i8* %7, i64 %1697
  %1699 = load i8, i8* %1698, align 1, !tbaa !394
  %1700 = insertelement <32 x i8> %1695, i8 %1699, i32 4
  %1701 = extractelement <32 x i32> %1675, i32 5
  %1702 = sext i32 %1701 to i64
  %1703 = getelementptr inbounds i8, i8* %7, i64 %1702
  %1704 = load i8, i8* %1703, align 1, !tbaa !394
  %1705 = insertelement <32 x i8> %1700, i8 %1704, i32 5
  %1706 = extractelement <32 x i32> %1675, i32 6
  %1707 = sext i32 %1706 to i64
  %1708 = getelementptr inbounds i8, i8* %7, i64 %1707
  %1709 = load i8, i8* %1708, align 1, !tbaa !394
  %1710 = insertelement <32 x i8> %1705, i8 %1709, i32 6
  %1711 = extractelement <32 x i32> %1675, i32 7
  %1712 = sext i32 %1711 to i64
  %1713 = getelementptr inbounds i8, i8* %7, i64 %1712
  %1714 = load i8, i8* %1713, align 1, !tbaa !394
  %1715 = insertelement <32 x i8> %1710, i8 %1714, i32 7
  %1716 = extractelement <32 x i32> %1675, i32 8
  %1717 = sext i32 %1716 to i64
  %1718 = getelementptr inbounds i8, i8* %7, i64 %1717
  %1719 = load i8, i8* %1718, align 1, !tbaa !394
  %1720 = insertelement <32 x i8> %1715, i8 %1719, i32 8
  %1721 = extractelement <32 x i32> %1675, i32 9
  %1722 = sext i32 %1721 to i64
  %1723 = getelementptr inbounds i8, i8* %7, i64 %1722
  %1724 = load i8, i8* %1723, align 1, !tbaa !394
  %1725 = insertelement <32 x i8> %1720, i8 %1724, i32 9
  %1726 = extractelement <32 x i32> %1675, i32 10
  %1727 = sext i32 %1726 to i64
  %1728 = getelementptr inbounds i8, i8* %7, i64 %1727
  %1729 = load i8, i8* %1728, align 1, !tbaa !394
  %1730 = insertelement <32 x i8> %1725, i8 %1729, i32 10
  %1731 = extractelement <32 x i32> %1675, i32 11
  %1732 = sext i32 %1731 to i64
  %1733 = getelementptr inbounds i8, i8* %7, i64 %1732
  %1734 = load i8, i8* %1733, align 1, !tbaa !394
  %1735 = insertelement <32 x i8> %1730, i8 %1734, i32 11
  %1736 = extractelement <32 x i32> %1675, i32 12
  %1737 = sext i32 %1736 to i64
  %1738 = getelementptr inbounds i8, i8* %7, i64 %1737
  %1739 = load i8, i8* %1738, align 1, !tbaa !394
  %1740 = insertelement <32 x i8> %1735, i8 %1739, i32 12
  %1741 = extractelement <32 x i32> %1675, i32 13
  %1742 = sext i32 %1741 to i64
  %1743 = getelementptr inbounds i8, i8* %7, i64 %1742
  %1744 = load i8, i8* %1743, align 1, !tbaa !394
  %1745 = insertelement <32 x i8> %1740, i8 %1744, i32 13
  %1746 = extractelement <32 x i32> %1675, i32 14
  %1747 = sext i32 %1746 to i64
  %1748 = getelementptr inbounds i8, i8* %7, i64 %1747
  %1749 = load i8, i8* %1748, align 1, !tbaa !394
  %1750 = insertelement <32 x i8> %1745, i8 %1749, i32 14
  %1751 = extractelement <32 x i32> %1675, i32 15
  %1752 = sext i32 %1751 to i64
  %1753 = getelementptr inbounds i8, i8* %7, i64 %1752
  %1754 = load i8, i8* %1753, align 1, !tbaa !394
  %1755 = insertelement <32 x i8> %1750, i8 %1754, i32 15
  %1756 = extractelement <32 x i32> %1675, i32 16
  %1757 = sext i32 %1756 to i64
  %1758 = getelementptr inbounds i8, i8* %7, i64 %1757
  %1759 = load i8, i8* %1758, align 1, !tbaa !394
  %1760 = insertelement <32 x i8> %1755, i8 %1759, i32 16
  %1761 = extractelement <32 x i32> %1675, i32 17
  %1762 = sext i32 %1761 to i64
  %1763 = getelementptr inbounds i8, i8* %7, i64 %1762
  %1764 = load i8, i8* %1763, align 1, !tbaa !394
  %1765 = insertelement <32 x i8> %1760, i8 %1764, i32 17
  %1766 = extractelement <32 x i32> %1675, i32 18
  %1767 = sext i32 %1766 to i64
  %1768 = getelementptr inbounds i8, i8* %7, i64 %1767
  %1769 = load i8, i8* %1768, align 1, !tbaa !394
  %1770 = insertelement <32 x i8> %1765, i8 %1769, i32 18
  %1771 = extractelement <32 x i32> %1675, i32 19
  %1772 = sext i32 %1771 to i64
  %1773 = getelementptr inbounds i8, i8* %7, i64 %1772
  %1774 = load i8, i8* %1773, align 1, !tbaa !394
  %1775 = insertelement <32 x i8> %1770, i8 %1774, i32 19
  %1776 = extractelement <32 x i32> %1675, i32 20
  %1777 = sext i32 %1776 to i64
  %1778 = getelementptr inbounds i8, i8* %7, i64 %1777
  %1779 = load i8, i8* %1778, align 1, !tbaa !394
  %1780 = insertelement <32 x i8> %1775, i8 %1779, i32 20
  %1781 = extractelement <32 x i32> %1675, i32 21
  %1782 = sext i32 %1781 to i64
  %1783 = getelementptr inbounds i8, i8* %7, i64 %1782
  %1784 = load i8, i8* %1783, align 1, !tbaa !394
  %1785 = insertelement <32 x i8> %1780, i8 %1784, i32 21
  %1786 = extractelement <32 x i32> %1675, i32 22
  %1787 = sext i32 %1786 to i64
  %1788 = getelementptr inbounds i8, i8* %7, i64 %1787
  %1789 = load i8, i8* %1788, align 1, !tbaa !394
  %1790 = insertelement <32 x i8> %1785, i8 %1789, i32 22
  %1791 = extractelement <32 x i32> %1675, i32 23
  %1792 = sext i32 %1791 to i64
  %1793 = getelementptr inbounds i8, i8* %7, i64 %1792
  %1794 = load i8, i8* %1793, align 1, !tbaa !394
  %1795 = insertelement <32 x i8> %1790, i8 %1794, i32 23
  %1796 = extractelement <32 x i32> %1675, i32 24
  %1797 = sext i32 %1796 to i64
  %1798 = getelementptr inbounds i8, i8* %7, i64 %1797
  %1799 = load i8, i8* %1798, align 1, !tbaa !394
  %1800 = insertelement <32 x i8> %1795, i8 %1799, i32 24
  %1801 = extractelement <32 x i32> %1675, i32 25
  %1802 = sext i32 %1801 to i64
  %1803 = getelementptr inbounds i8, i8* %7, i64 %1802
  %1804 = load i8, i8* %1803, align 1, !tbaa !394
  %1805 = insertelement <32 x i8> %1800, i8 %1804, i32 25
  %1806 = extractelement <32 x i32> %1675, i32 26
  %1807 = sext i32 %1806 to i64
  %1808 = getelementptr inbounds i8, i8* %7, i64 %1807
  %1809 = load i8, i8* %1808, align 1, !tbaa !394
  %1810 = insertelement <32 x i8> %1805, i8 %1809, i32 26
  %1811 = extractelement <32 x i32> %1675, i32 27
  %1812 = sext i32 %1811 to i64
  %1813 = getelementptr inbounds i8, i8* %7, i64 %1812
  %1814 = load i8, i8* %1813, align 1, !tbaa !394
  %1815 = insertelement <32 x i8> %1810, i8 %1814, i32 27
  %1816 = extractelement <32 x i32> %1675, i32 28
  %1817 = sext i32 %1816 to i64
  %1818 = getelementptr inbounds i8, i8* %7, i64 %1817
  %1819 = load i8, i8* %1818, align 1, !tbaa !394
  %1820 = insertelement <32 x i8> %1815, i8 %1819, i32 28
  %1821 = extractelement <32 x i32> %1675, i32 29
  %1822 = sext i32 %1821 to i64
  %1823 = getelementptr inbounds i8, i8* %7, i64 %1822
  %1824 = load i8, i8* %1823, align 1, !tbaa !394
  %1825 = insertelement <32 x i8> %1820, i8 %1824, i32 29
  %1826 = extractelement <32 x i32> %1675, i32 30
  %1827 = sext i32 %1826 to i64
  %1828 = getelementptr inbounds i8, i8* %7, i64 %1827
  %1829 = load i8, i8* %1828, align 1, !tbaa !394
  %1830 = insertelement <32 x i8> %1825, i8 %1829, i32 30
  %1831 = extractelement <32 x i32> %1675, i32 31
  %1832 = sext i32 %1831 to i64
  %1833 = getelementptr inbounds i8, i8* %7, i64 %1832
  %1834 = load i8, i8* %1833, align 1, !tbaa !394
  %t181.s = insertelement <32 x i8> %1830, i8 %1834, i32 31
  %1835 = add nsw i32 %1649, 1
  %1836 = insertelement <32 x i32> undef, i32 %1835, i32 0
  %1837 = shufflevector <32 x i32> %1836, <32 x i32> undef, <32 x i32> zeroinitializer
  %a71 = add nsw <32 x i32> %1837, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1838 = shufflevector <32 x i32> %a71, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1839 = icmp sgt <16 x i32> %243, %1838
  %1840 = shufflevector <32 x i32> %a71, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1841 = icmp sgt <16 x i32> %243, %1840
  %1842 = select <16 x i1> %1839, <16 x i32> %1838, <16 x i32> %243
  %1843 = select <16 x i1> %1841, <16 x i32> %1840, <16 x i32> %243
  %1844 = icmp sgt <16 x i32> %1842, %245
  %1845 = icmp sgt <16 x i32> %1843, %245
  %1846 = select <16 x i1> %1844, <16 x i32> %1842, <16 x i32> %245
  %1847 = select <16 x i1> %1845, <16 x i32> %1843, <16 x i32> %245
  %t182 = shufflevector <16 x i32> %1846, <16 x i32> %1847, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1848 = add nsw <32 x i32> %t182, %1634
  %1849 = extractelement <32 x i32> %1848, i32 0
  %1850 = sext i32 %1849 to i64
  %1851 = getelementptr inbounds i8, i8* %7, i64 %1850
  %1852 = load i8, i8* %1851, align 1, !tbaa !394
  %1853 = insertelement <32 x i8> undef, i8 %1852, i32 0
  %1854 = extractelement <32 x i32> %1848, i32 1
  %1855 = sext i32 %1854 to i64
  %1856 = getelementptr inbounds i8, i8* %7, i64 %1855
  %1857 = load i8, i8* %1856, align 1, !tbaa !394
  %1858 = insertelement <32 x i8> %1853, i8 %1857, i32 1
  %1859 = extractelement <32 x i32> %1848, i32 2
  %1860 = sext i32 %1859 to i64
  %1861 = getelementptr inbounds i8, i8* %7, i64 %1860
  %1862 = load i8, i8* %1861, align 1, !tbaa !394
  %1863 = insertelement <32 x i8> %1858, i8 %1862, i32 2
  %1864 = extractelement <32 x i32> %1848, i32 3
  %1865 = sext i32 %1864 to i64
  %1866 = getelementptr inbounds i8, i8* %7, i64 %1865
  %1867 = load i8, i8* %1866, align 1, !tbaa !394
  %1868 = insertelement <32 x i8> %1863, i8 %1867, i32 3
  %1869 = extractelement <32 x i32> %1848, i32 4
  %1870 = sext i32 %1869 to i64
  %1871 = getelementptr inbounds i8, i8* %7, i64 %1870
  %1872 = load i8, i8* %1871, align 1, !tbaa !394
  %1873 = insertelement <32 x i8> %1868, i8 %1872, i32 4
  %1874 = extractelement <32 x i32> %1848, i32 5
  %1875 = sext i32 %1874 to i64
  %1876 = getelementptr inbounds i8, i8* %7, i64 %1875
  %1877 = load i8, i8* %1876, align 1, !tbaa !394
  %1878 = insertelement <32 x i8> %1873, i8 %1877, i32 5
  %1879 = extractelement <32 x i32> %1848, i32 6
  %1880 = sext i32 %1879 to i64
  %1881 = getelementptr inbounds i8, i8* %7, i64 %1880
  %1882 = load i8, i8* %1881, align 1, !tbaa !394
  %1883 = insertelement <32 x i8> %1878, i8 %1882, i32 6
  %1884 = extractelement <32 x i32> %1848, i32 7
  %1885 = sext i32 %1884 to i64
  %1886 = getelementptr inbounds i8, i8* %7, i64 %1885
  %1887 = load i8, i8* %1886, align 1, !tbaa !394
  %1888 = insertelement <32 x i8> %1883, i8 %1887, i32 7
  %1889 = extractelement <32 x i32> %1848, i32 8
  %1890 = sext i32 %1889 to i64
  %1891 = getelementptr inbounds i8, i8* %7, i64 %1890
  %1892 = load i8, i8* %1891, align 1, !tbaa !394
  %1893 = insertelement <32 x i8> %1888, i8 %1892, i32 8
  %1894 = extractelement <32 x i32> %1848, i32 9
  %1895 = sext i32 %1894 to i64
  %1896 = getelementptr inbounds i8, i8* %7, i64 %1895
  %1897 = load i8, i8* %1896, align 1, !tbaa !394
  %1898 = insertelement <32 x i8> %1893, i8 %1897, i32 9
  %1899 = extractelement <32 x i32> %1848, i32 10
  %1900 = sext i32 %1899 to i64
  %1901 = getelementptr inbounds i8, i8* %7, i64 %1900
  %1902 = load i8, i8* %1901, align 1, !tbaa !394
  %1903 = insertelement <32 x i8> %1898, i8 %1902, i32 10
  %1904 = extractelement <32 x i32> %1848, i32 11
  %1905 = sext i32 %1904 to i64
  %1906 = getelementptr inbounds i8, i8* %7, i64 %1905
  %1907 = load i8, i8* %1906, align 1, !tbaa !394
  %1908 = insertelement <32 x i8> %1903, i8 %1907, i32 11
  %1909 = extractelement <32 x i32> %1848, i32 12
  %1910 = sext i32 %1909 to i64
  %1911 = getelementptr inbounds i8, i8* %7, i64 %1910
  %1912 = load i8, i8* %1911, align 1, !tbaa !394
  %1913 = insertelement <32 x i8> %1908, i8 %1912, i32 12
  %1914 = extractelement <32 x i32> %1848, i32 13
  %1915 = sext i32 %1914 to i64
  %1916 = getelementptr inbounds i8, i8* %7, i64 %1915
  %1917 = load i8, i8* %1916, align 1, !tbaa !394
  %1918 = insertelement <32 x i8> %1913, i8 %1917, i32 13
  %1919 = extractelement <32 x i32> %1848, i32 14
  %1920 = sext i32 %1919 to i64
  %1921 = getelementptr inbounds i8, i8* %7, i64 %1920
  %1922 = load i8, i8* %1921, align 1, !tbaa !394
  %1923 = insertelement <32 x i8> %1918, i8 %1922, i32 14
  %1924 = extractelement <32 x i32> %1848, i32 15
  %1925 = sext i32 %1924 to i64
  %1926 = getelementptr inbounds i8, i8* %7, i64 %1925
  %1927 = load i8, i8* %1926, align 1, !tbaa !394
  %1928 = insertelement <32 x i8> %1923, i8 %1927, i32 15
  %1929 = extractelement <32 x i32> %1848, i32 16
  %1930 = sext i32 %1929 to i64
  %1931 = getelementptr inbounds i8, i8* %7, i64 %1930
  %1932 = load i8, i8* %1931, align 1, !tbaa !394
  %1933 = insertelement <32 x i8> %1928, i8 %1932, i32 16
  %1934 = extractelement <32 x i32> %1848, i32 17
  %1935 = sext i32 %1934 to i64
  %1936 = getelementptr inbounds i8, i8* %7, i64 %1935
  %1937 = load i8, i8* %1936, align 1, !tbaa !394
  %1938 = insertelement <32 x i8> %1933, i8 %1937, i32 17
  %1939 = extractelement <32 x i32> %1848, i32 18
  %1940 = sext i32 %1939 to i64
  %1941 = getelementptr inbounds i8, i8* %7, i64 %1940
  %1942 = load i8, i8* %1941, align 1, !tbaa !394
  %1943 = insertelement <32 x i8> %1938, i8 %1942, i32 18
  %1944 = extractelement <32 x i32> %1848, i32 19
  %1945 = sext i32 %1944 to i64
  %1946 = getelementptr inbounds i8, i8* %7, i64 %1945
  %1947 = load i8, i8* %1946, align 1, !tbaa !394
  %1948 = insertelement <32 x i8> %1943, i8 %1947, i32 19
  %1949 = extractelement <32 x i32> %1848, i32 20
  %1950 = sext i32 %1949 to i64
  %1951 = getelementptr inbounds i8, i8* %7, i64 %1950
  %1952 = load i8, i8* %1951, align 1, !tbaa !394
  %1953 = insertelement <32 x i8> %1948, i8 %1952, i32 20
  %1954 = extractelement <32 x i32> %1848, i32 21
  %1955 = sext i32 %1954 to i64
  %1956 = getelementptr inbounds i8, i8* %7, i64 %1955
  %1957 = load i8, i8* %1956, align 1, !tbaa !394
  %1958 = insertelement <32 x i8> %1953, i8 %1957, i32 21
  %1959 = extractelement <32 x i32> %1848, i32 22
  %1960 = sext i32 %1959 to i64
  %1961 = getelementptr inbounds i8, i8* %7, i64 %1960
  %1962 = load i8, i8* %1961, align 1, !tbaa !394
  %1963 = insertelement <32 x i8> %1958, i8 %1962, i32 22
  %1964 = extractelement <32 x i32> %1848, i32 23
  %1965 = sext i32 %1964 to i64
  %1966 = getelementptr inbounds i8, i8* %7, i64 %1965
  %1967 = load i8, i8* %1966, align 1, !tbaa !394
  %1968 = insertelement <32 x i8> %1963, i8 %1967, i32 23
  %1969 = extractelement <32 x i32> %1848, i32 24
  %1970 = sext i32 %1969 to i64
  %1971 = getelementptr inbounds i8, i8* %7, i64 %1970
  %1972 = load i8, i8* %1971, align 1, !tbaa !394
  %1973 = insertelement <32 x i8> %1968, i8 %1972, i32 24
  %1974 = extractelement <32 x i32> %1848, i32 25
  %1975 = sext i32 %1974 to i64
  %1976 = getelementptr inbounds i8, i8* %7, i64 %1975
  %1977 = load i8, i8* %1976, align 1, !tbaa !394
  %1978 = insertelement <32 x i8> %1973, i8 %1977, i32 25
  %1979 = extractelement <32 x i32> %1848, i32 26
  %1980 = sext i32 %1979 to i64
  %1981 = getelementptr inbounds i8, i8* %7, i64 %1980
  %1982 = load i8, i8* %1981, align 1, !tbaa !394
  %1983 = insertelement <32 x i8> %1978, i8 %1982, i32 26
  %1984 = extractelement <32 x i32> %1848, i32 27
  %1985 = sext i32 %1984 to i64
  %1986 = getelementptr inbounds i8, i8* %7, i64 %1985
  %1987 = load i8, i8* %1986, align 1, !tbaa !394
  %1988 = insertelement <32 x i8> %1983, i8 %1987, i32 27
  %1989 = extractelement <32 x i32> %1848, i32 28
  %1990 = sext i32 %1989 to i64
  %1991 = getelementptr inbounds i8, i8* %7, i64 %1990
  %1992 = load i8, i8* %1991, align 1, !tbaa !394
  %1993 = insertelement <32 x i8> %1988, i8 %1992, i32 28
  %1994 = extractelement <32 x i32> %1848, i32 29
  %1995 = sext i32 %1994 to i64
  %1996 = getelementptr inbounds i8, i8* %7, i64 %1995
  %1997 = load i8, i8* %1996, align 1, !tbaa !394
  %1998 = insertelement <32 x i8> %1993, i8 %1997, i32 29
  %1999 = extractelement <32 x i32> %1848, i32 30
  %2000 = sext i32 %1999 to i64
  %2001 = getelementptr inbounds i8, i8* %7, i64 %2000
  %2002 = load i8, i8* %2001, align 1, !tbaa !394
  %2003 = insertelement <32 x i8> %1998, i8 %2002, i32 30
  %2004 = extractelement <32 x i32> %1848, i32 31
  %2005 = sext i32 %2004 to i64
  %2006 = getelementptr inbounds i8, i8* %7, i64 %2005
  %2007 = load i8, i8* %2006, align 1, !tbaa !394
  %t183.s = insertelement <32 x i8> %2003, i8 %2007, i32 31
  %2008 = add nsw <32 x i32> %t180, %1636
  %2009 = extractelement <32 x i32> %2008, i32 0
  %2010 = sext i32 %2009 to i64
  %2011 = getelementptr inbounds i8, i8* %7, i64 %2010
  %2012 = load i8, i8* %2011, align 1, !tbaa !394
  %2013 = insertelement <32 x i8> undef, i8 %2012, i32 0
  %2014 = extractelement <32 x i32> %2008, i32 1
  %2015 = sext i32 %2014 to i64
  %2016 = getelementptr inbounds i8, i8* %7, i64 %2015
  %2017 = load i8, i8* %2016, align 1, !tbaa !394
  %2018 = insertelement <32 x i8> %2013, i8 %2017, i32 1
  %2019 = extractelement <32 x i32> %2008, i32 2
  %2020 = sext i32 %2019 to i64
  %2021 = getelementptr inbounds i8, i8* %7, i64 %2020
  %2022 = load i8, i8* %2021, align 1, !tbaa !394
  %2023 = insertelement <32 x i8> %2018, i8 %2022, i32 2
  %2024 = extractelement <32 x i32> %2008, i32 3
  %2025 = sext i32 %2024 to i64
  %2026 = getelementptr inbounds i8, i8* %7, i64 %2025
  %2027 = load i8, i8* %2026, align 1, !tbaa !394
  %2028 = insertelement <32 x i8> %2023, i8 %2027, i32 3
  %2029 = extractelement <32 x i32> %2008, i32 4
  %2030 = sext i32 %2029 to i64
  %2031 = getelementptr inbounds i8, i8* %7, i64 %2030
  %2032 = load i8, i8* %2031, align 1, !tbaa !394
  %2033 = insertelement <32 x i8> %2028, i8 %2032, i32 4
  %2034 = extractelement <32 x i32> %2008, i32 5
  %2035 = sext i32 %2034 to i64
  %2036 = getelementptr inbounds i8, i8* %7, i64 %2035
  %2037 = load i8, i8* %2036, align 1, !tbaa !394
  %2038 = insertelement <32 x i8> %2033, i8 %2037, i32 5
  %2039 = extractelement <32 x i32> %2008, i32 6
  %2040 = sext i32 %2039 to i64
  %2041 = getelementptr inbounds i8, i8* %7, i64 %2040
  %2042 = load i8, i8* %2041, align 1, !tbaa !394
  %2043 = insertelement <32 x i8> %2038, i8 %2042, i32 6
  %2044 = extractelement <32 x i32> %2008, i32 7
  %2045 = sext i32 %2044 to i64
  %2046 = getelementptr inbounds i8, i8* %7, i64 %2045
  %2047 = load i8, i8* %2046, align 1, !tbaa !394
  %2048 = insertelement <32 x i8> %2043, i8 %2047, i32 7
  %2049 = extractelement <32 x i32> %2008, i32 8
  %2050 = sext i32 %2049 to i64
  %2051 = getelementptr inbounds i8, i8* %7, i64 %2050
  %2052 = load i8, i8* %2051, align 1, !tbaa !394
  %2053 = insertelement <32 x i8> %2048, i8 %2052, i32 8
  %2054 = extractelement <32 x i32> %2008, i32 9
  %2055 = sext i32 %2054 to i64
  %2056 = getelementptr inbounds i8, i8* %7, i64 %2055
  %2057 = load i8, i8* %2056, align 1, !tbaa !394
  %2058 = insertelement <32 x i8> %2053, i8 %2057, i32 9
  %2059 = extractelement <32 x i32> %2008, i32 10
  %2060 = sext i32 %2059 to i64
  %2061 = getelementptr inbounds i8, i8* %7, i64 %2060
  %2062 = load i8, i8* %2061, align 1, !tbaa !394
  %2063 = insertelement <32 x i8> %2058, i8 %2062, i32 10
  %2064 = extractelement <32 x i32> %2008, i32 11
  %2065 = sext i32 %2064 to i64
  %2066 = getelementptr inbounds i8, i8* %7, i64 %2065
  %2067 = load i8, i8* %2066, align 1, !tbaa !394
  %2068 = insertelement <32 x i8> %2063, i8 %2067, i32 11
  %2069 = extractelement <32 x i32> %2008, i32 12
  %2070 = sext i32 %2069 to i64
  %2071 = getelementptr inbounds i8, i8* %7, i64 %2070
  %2072 = load i8, i8* %2071, align 1, !tbaa !394
  %2073 = insertelement <32 x i8> %2068, i8 %2072, i32 12
  %2074 = extractelement <32 x i32> %2008, i32 13
  %2075 = sext i32 %2074 to i64
  %2076 = getelementptr inbounds i8, i8* %7, i64 %2075
  %2077 = load i8, i8* %2076, align 1, !tbaa !394
  %2078 = insertelement <32 x i8> %2073, i8 %2077, i32 13
  %2079 = extractelement <32 x i32> %2008, i32 14
  %2080 = sext i32 %2079 to i64
  %2081 = getelementptr inbounds i8, i8* %7, i64 %2080
  %2082 = load i8, i8* %2081, align 1, !tbaa !394
  %2083 = insertelement <32 x i8> %2078, i8 %2082, i32 14
  %2084 = extractelement <32 x i32> %2008, i32 15
  %2085 = sext i32 %2084 to i64
  %2086 = getelementptr inbounds i8, i8* %7, i64 %2085
  %2087 = load i8, i8* %2086, align 1, !tbaa !394
  %2088 = insertelement <32 x i8> %2083, i8 %2087, i32 15
  %2089 = extractelement <32 x i32> %2008, i32 16
  %2090 = sext i32 %2089 to i64
  %2091 = getelementptr inbounds i8, i8* %7, i64 %2090
  %2092 = load i8, i8* %2091, align 1, !tbaa !394
  %2093 = insertelement <32 x i8> %2088, i8 %2092, i32 16
  %2094 = extractelement <32 x i32> %2008, i32 17
  %2095 = sext i32 %2094 to i64
  %2096 = getelementptr inbounds i8, i8* %7, i64 %2095
  %2097 = load i8, i8* %2096, align 1, !tbaa !394
  %2098 = insertelement <32 x i8> %2093, i8 %2097, i32 17
  %2099 = extractelement <32 x i32> %2008, i32 18
  %2100 = sext i32 %2099 to i64
  %2101 = getelementptr inbounds i8, i8* %7, i64 %2100
  %2102 = load i8, i8* %2101, align 1, !tbaa !394
  %2103 = insertelement <32 x i8> %2098, i8 %2102, i32 18
  %2104 = extractelement <32 x i32> %2008, i32 19
  %2105 = sext i32 %2104 to i64
  %2106 = getelementptr inbounds i8, i8* %7, i64 %2105
  %2107 = load i8, i8* %2106, align 1, !tbaa !394
  %2108 = insertelement <32 x i8> %2103, i8 %2107, i32 19
  %2109 = extractelement <32 x i32> %2008, i32 20
  %2110 = sext i32 %2109 to i64
  %2111 = getelementptr inbounds i8, i8* %7, i64 %2110
  %2112 = load i8, i8* %2111, align 1, !tbaa !394
  %2113 = insertelement <32 x i8> %2108, i8 %2112, i32 20
  %2114 = extractelement <32 x i32> %2008, i32 21
  %2115 = sext i32 %2114 to i64
  %2116 = getelementptr inbounds i8, i8* %7, i64 %2115
  %2117 = load i8, i8* %2116, align 1, !tbaa !394
  %2118 = insertelement <32 x i8> %2113, i8 %2117, i32 21
  %2119 = extractelement <32 x i32> %2008, i32 22
  %2120 = sext i32 %2119 to i64
  %2121 = getelementptr inbounds i8, i8* %7, i64 %2120
  %2122 = load i8, i8* %2121, align 1, !tbaa !394
  %2123 = insertelement <32 x i8> %2118, i8 %2122, i32 22
  %2124 = extractelement <32 x i32> %2008, i32 23
  %2125 = sext i32 %2124 to i64
  %2126 = getelementptr inbounds i8, i8* %7, i64 %2125
  %2127 = load i8, i8* %2126, align 1, !tbaa !394
  %2128 = insertelement <32 x i8> %2123, i8 %2127, i32 23
  %2129 = extractelement <32 x i32> %2008, i32 24
  %2130 = sext i32 %2129 to i64
  %2131 = getelementptr inbounds i8, i8* %7, i64 %2130
  %2132 = load i8, i8* %2131, align 1, !tbaa !394
  %2133 = insertelement <32 x i8> %2128, i8 %2132, i32 24
  %2134 = extractelement <32 x i32> %2008, i32 25
  %2135 = sext i32 %2134 to i64
  %2136 = getelementptr inbounds i8, i8* %7, i64 %2135
  %2137 = load i8, i8* %2136, align 1, !tbaa !394
  %2138 = insertelement <32 x i8> %2133, i8 %2137, i32 25
  %2139 = extractelement <32 x i32> %2008, i32 26
  %2140 = sext i32 %2139 to i64
  %2141 = getelementptr inbounds i8, i8* %7, i64 %2140
  %2142 = load i8, i8* %2141, align 1, !tbaa !394
  %2143 = insertelement <32 x i8> %2138, i8 %2142, i32 26
  %2144 = extractelement <32 x i32> %2008, i32 27
  %2145 = sext i32 %2144 to i64
  %2146 = getelementptr inbounds i8, i8* %7, i64 %2145
  %2147 = load i8, i8* %2146, align 1, !tbaa !394
  %2148 = insertelement <32 x i8> %2143, i8 %2147, i32 27
  %2149 = extractelement <32 x i32> %2008, i32 28
  %2150 = sext i32 %2149 to i64
  %2151 = getelementptr inbounds i8, i8* %7, i64 %2150
  %2152 = load i8, i8* %2151, align 1, !tbaa !394
  %2153 = insertelement <32 x i8> %2148, i8 %2152, i32 28
  %2154 = extractelement <32 x i32> %2008, i32 29
  %2155 = sext i32 %2154 to i64
  %2156 = getelementptr inbounds i8, i8* %7, i64 %2155
  %2157 = load i8, i8* %2156, align 1, !tbaa !394
  %2158 = insertelement <32 x i8> %2153, i8 %2157, i32 29
  %2159 = extractelement <32 x i32> %2008, i32 30
  %2160 = sext i32 %2159 to i64
  %2161 = getelementptr inbounds i8, i8* %7, i64 %2160
  %2162 = load i8, i8* %2161, align 1, !tbaa !394
  %2163 = insertelement <32 x i8> %2158, i8 %2162, i32 30
  %2164 = extractelement <32 x i32> %2008, i32 31
  %2165 = sext i32 %2164 to i64
  %2166 = getelementptr inbounds i8, i8* %7, i64 %2165
  %2167 = load i8, i8* %2166, align 1, !tbaa !394
  %t185.s = insertelement <32 x i8> %2163, i8 %2167, i32 31
  %2168 = add nsw <32 x i32> %t182, %1636
  %2169 = extractelement <32 x i32> %2168, i32 0
  %2170 = sext i32 %2169 to i64
  %2171 = getelementptr inbounds i8, i8* %7, i64 %2170
  %2172 = load i8, i8* %2171, align 1, !tbaa !394
  %2173 = insertelement <32 x i8> undef, i8 %2172, i32 0
  %2174 = extractelement <32 x i32> %2168, i32 1
  %2175 = sext i32 %2174 to i64
  %2176 = getelementptr inbounds i8, i8* %7, i64 %2175
  %2177 = load i8, i8* %2176, align 1, !tbaa !394
  %2178 = insertelement <32 x i8> %2173, i8 %2177, i32 1
  %2179 = extractelement <32 x i32> %2168, i32 2
  %2180 = sext i32 %2179 to i64
  %2181 = getelementptr inbounds i8, i8* %7, i64 %2180
  %2182 = load i8, i8* %2181, align 1, !tbaa !394
  %2183 = insertelement <32 x i8> %2178, i8 %2182, i32 2
  %2184 = extractelement <32 x i32> %2168, i32 3
  %2185 = sext i32 %2184 to i64
  %2186 = getelementptr inbounds i8, i8* %7, i64 %2185
  %2187 = load i8, i8* %2186, align 1, !tbaa !394
  %2188 = insertelement <32 x i8> %2183, i8 %2187, i32 3
  %2189 = extractelement <32 x i32> %2168, i32 4
  %2190 = sext i32 %2189 to i64
  %2191 = getelementptr inbounds i8, i8* %7, i64 %2190
  %2192 = load i8, i8* %2191, align 1, !tbaa !394
  %2193 = insertelement <32 x i8> %2188, i8 %2192, i32 4
  %2194 = extractelement <32 x i32> %2168, i32 5
  %2195 = sext i32 %2194 to i64
  %2196 = getelementptr inbounds i8, i8* %7, i64 %2195
  %2197 = load i8, i8* %2196, align 1, !tbaa !394
  %2198 = insertelement <32 x i8> %2193, i8 %2197, i32 5
  %2199 = extractelement <32 x i32> %2168, i32 6
  %2200 = sext i32 %2199 to i64
  %2201 = getelementptr inbounds i8, i8* %7, i64 %2200
  %2202 = load i8, i8* %2201, align 1, !tbaa !394
  %2203 = insertelement <32 x i8> %2198, i8 %2202, i32 6
  %2204 = extractelement <32 x i32> %2168, i32 7
  %2205 = sext i32 %2204 to i64
  %2206 = getelementptr inbounds i8, i8* %7, i64 %2205
  %2207 = load i8, i8* %2206, align 1, !tbaa !394
  %2208 = insertelement <32 x i8> %2203, i8 %2207, i32 7
  %2209 = extractelement <32 x i32> %2168, i32 8
  %2210 = sext i32 %2209 to i64
  %2211 = getelementptr inbounds i8, i8* %7, i64 %2210
  %2212 = load i8, i8* %2211, align 1, !tbaa !394
  %2213 = insertelement <32 x i8> %2208, i8 %2212, i32 8
  %2214 = extractelement <32 x i32> %2168, i32 9
  %2215 = sext i32 %2214 to i64
  %2216 = getelementptr inbounds i8, i8* %7, i64 %2215
  %2217 = load i8, i8* %2216, align 1, !tbaa !394
  %2218 = insertelement <32 x i8> %2213, i8 %2217, i32 9
  %2219 = extractelement <32 x i32> %2168, i32 10
  %2220 = sext i32 %2219 to i64
  %2221 = getelementptr inbounds i8, i8* %7, i64 %2220
  %2222 = load i8, i8* %2221, align 1, !tbaa !394
  %2223 = insertelement <32 x i8> %2218, i8 %2222, i32 10
  %2224 = extractelement <32 x i32> %2168, i32 11
  %2225 = sext i32 %2224 to i64
  %2226 = getelementptr inbounds i8, i8* %7, i64 %2225
  %2227 = load i8, i8* %2226, align 1, !tbaa !394
  %2228 = insertelement <32 x i8> %2223, i8 %2227, i32 11
  %2229 = extractelement <32 x i32> %2168, i32 12
  %2230 = sext i32 %2229 to i64
  %2231 = getelementptr inbounds i8, i8* %7, i64 %2230
  %2232 = load i8, i8* %2231, align 1, !tbaa !394
  %2233 = insertelement <32 x i8> %2228, i8 %2232, i32 12
  %2234 = extractelement <32 x i32> %2168, i32 13
  %2235 = sext i32 %2234 to i64
  %2236 = getelementptr inbounds i8, i8* %7, i64 %2235
  %2237 = load i8, i8* %2236, align 1, !tbaa !394
  %2238 = insertelement <32 x i8> %2233, i8 %2237, i32 13
  %2239 = extractelement <32 x i32> %2168, i32 14
  %2240 = sext i32 %2239 to i64
  %2241 = getelementptr inbounds i8, i8* %7, i64 %2240
  %2242 = load i8, i8* %2241, align 1, !tbaa !394
  %2243 = insertelement <32 x i8> %2238, i8 %2242, i32 14
  %2244 = extractelement <32 x i32> %2168, i32 15
  %2245 = sext i32 %2244 to i64
  %2246 = getelementptr inbounds i8, i8* %7, i64 %2245
  %2247 = load i8, i8* %2246, align 1, !tbaa !394
  %2248 = insertelement <32 x i8> %2243, i8 %2247, i32 15
  %2249 = extractelement <32 x i32> %2168, i32 16
  %2250 = sext i32 %2249 to i64
  %2251 = getelementptr inbounds i8, i8* %7, i64 %2250
  %2252 = load i8, i8* %2251, align 1, !tbaa !394
  %2253 = insertelement <32 x i8> %2248, i8 %2252, i32 16
  %2254 = extractelement <32 x i32> %2168, i32 17
  %2255 = sext i32 %2254 to i64
  %2256 = getelementptr inbounds i8, i8* %7, i64 %2255
  %2257 = load i8, i8* %2256, align 1, !tbaa !394
  %2258 = insertelement <32 x i8> %2253, i8 %2257, i32 17
  %2259 = extractelement <32 x i32> %2168, i32 18
  %2260 = sext i32 %2259 to i64
  %2261 = getelementptr inbounds i8, i8* %7, i64 %2260
  %2262 = load i8, i8* %2261, align 1, !tbaa !394
  %2263 = insertelement <32 x i8> %2258, i8 %2262, i32 18
  %2264 = extractelement <32 x i32> %2168, i32 19
  %2265 = sext i32 %2264 to i64
  %2266 = getelementptr inbounds i8, i8* %7, i64 %2265
  %2267 = load i8, i8* %2266, align 1, !tbaa !394
  %2268 = insertelement <32 x i8> %2263, i8 %2267, i32 19
  %2269 = extractelement <32 x i32> %2168, i32 20
  %2270 = sext i32 %2269 to i64
  %2271 = getelementptr inbounds i8, i8* %7, i64 %2270
  %2272 = load i8, i8* %2271, align 1, !tbaa !394
  %2273 = insertelement <32 x i8> %2268, i8 %2272, i32 20
  %2274 = extractelement <32 x i32> %2168, i32 21
  %2275 = sext i32 %2274 to i64
  %2276 = getelementptr inbounds i8, i8* %7, i64 %2275
  %2277 = load i8, i8* %2276, align 1, !tbaa !394
  %2278 = insertelement <32 x i8> %2273, i8 %2277, i32 21
  %2279 = extractelement <32 x i32> %2168, i32 22
  %2280 = sext i32 %2279 to i64
  %2281 = getelementptr inbounds i8, i8* %7, i64 %2280
  %2282 = load i8, i8* %2281, align 1, !tbaa !394
  %2283 = insertelement <32 x i8> %2278, i8 %2282, i32 22
  %2284 = extractelement <32 x i32> %2168, i32 23
  %2285 = sext i32 %2284 to i64
  %2286 = getelementptr inbounds i8, i8* %7, i64 %2285
  %2287 = load i8, i8* %2286, align 1, !tbaa !394
  %2288 = insertelement <32 x i8> %2283, i8 %2287, i32 23
  %2289 = extractelement <32 x i32> %2168, i32 24
  %2290 = sext i32 %2289 to i64
  %2291 = getelementptr inbounds i8, i8* %7, i64 %2290
  %2292 = load i8, i8* %2291, align 1, !tbaa !394
  %2293 = insertelement <32 x i8> %2288, i8 %2292, i32 24
  %2294 = extractelement <32 x i32> %2168, i32 25
  %2295 = sext i32 %2294 to i64
  %2296 = getelementptr inbounds i8, i8* %7, i64 %2295
  %2297 = load i8, i8* %2296, align 1, !tbaa !394
  %2298 = insertelement <32 x i8> %2293, i8 %2297, i32 25
  %2299 = extractelement <32 x i32> %2168, i32 26
  %2300 = sext i32 %2299 to i64
  %2301 = getelementptr inbounds i8, i8* %7, i64 %2300
  %2302 = load i8, i8* %2301, align 1, !tbaa !394
  %2303 = insertelement <32 x i8> %2298, i8 %2302, i32 26
  %2304 = extractelement <32 x i32> %2168, i32 27
  %2305 = sext i32 %2304 to i64
  %2306 = getelementptr inbounds i8, i8* %7, i64 %2305
  %2307 = load i8, i8* %2306, align 1, !tbaa !394
  %2308 = insertelement <32 x i8> %2303, i8 %2307, i32 27
  %2309 = extractelement <32 x i32> %2168, i32 28
  %2310 = sext i32 %2309 to i64
  %2311 = getelementptr inbounds i8, i8* %7, i64 %2310
  %2312 = load i8, i8* %2311, align 1, !tbaa !394
  %2313 = insertelement <32 x i8> %2308, i8 %2312, i32 28
  %2314 = extractelement <32 x i32> %2168, i32 29
  %2315 = sext i32 %2314 to i64
  %2316 = getelementptr inbounds i8, i8* %7, i64 %2315
  %2317 = load i8, i8* %2316, align 1, !tbaa !394
  %2318 = insertelement <32 x i8> %2313, i8 %2317, i32 29
  %2319 = extractelement <32 x i32> %2168, i32 30
  %2320 = sext i32 %2319 to i64
  %2321 = getelementptr inbounds i8, i8* %7, i64 %2320
  %2322 = load i8, i8* %2321, align 1, !tbaa !394
  %2323 = insertelement <32 x i8> %2318, i8 %2322, i32 30
  %2324 = extractelement <32 x i32> %2168, i32 31
  %2325 = sext i32 %2324 to i64
  %2326 = getelementptr inbounds i8, i8* %7, i64 %2325
  %2327 = load i8, i8* %2326, align 1, !tbaa !394
  %t186.s = insertelement <32 x i8> %2323, i8 %2327, i32 31
  %2328 = add nsw <32 x i32> %t177, %1634
  %2329 = extractelement <32 x i32> %2328, i32 0
  %2330 = sext i32 %2329 to i64
  %2331 = getelementptr inbounds i8, i8* %7, i64 %2330
  %2332 = load i8, i8* %2331, align 1, !tbaa !394
  %2333 = insertelement <32 x i8> undef, i8 %2332, i32 0
  %2334 = extractelement <32 x i32> %2328, i32 1
  %2335 = sext i32 %2334 to i64
  %2336 = getelementptr inbounds i8, i8* %7, i64 %2335
  %2337 = load i8, i8* %2336, align 1, !tbaa !394
  %2338 = insertelement <32 x i8> %2333, i8 %2337, i32 1
  %2339 = extractelement <32 x i32> %2328, i32 2
  %2340 = sext i32 %2339 to i64
  %2341 = getelementptr inbounds i8, i8* %7, i64 %2340
  %2342 = load i8, i8* %2341, align 1, !tbaa !394
  %2343 = insertelement <32 x i8> %2338, i8 %2342, i32 2
  %2344 = extractelement <32 x i32> %2328, i32 3
  %2345 = sext i32 %2344 to i64
  %2346 = getelementptr inbounds i8, i8* %7, i64 %2345
  %2347 = load i8, i8* %2346, align 1, !tbaa !394
  %2348 = insertelement <32 x i8> %2343, i8 %2347, i32 3
  %2349 = extractelement <32 x i32> %2328, i32 4
  %2350 = sext i32 %2349 to i64
  %2351 = getelementptr inbounds i8, i8* %7, i64 %2350
  %2352 = load i8, i8* %2351, align 1, !tbaa !394
  %2353 = insertelement <32 x i8> %2348, i8 %2352, i32 4
  %2354 = extractelement <32 x i32> %2328, i32 5
  %2355 = sext i32 %2354 to i64
  %2356 = getelementptr inbounds i8, i8* %7, i64 %2355
  %2357 = load i8, i8* %2356, align 1, !tbaa !394
  %2358 = insertelement <32 x i8> %2353, i8 %2357, i32 5
  %2359 = extractelement <32 x i32> %2328, i32 6
  %2360 = sext i32 %2359 to i64
  %2361 = getelementptr inbounds i8, i8* %7, i64 %2360
  %2362 = load i8, i8* %2361, align 1, !tbaa !394
  %2363 = insertelement <32 x i8> %2358, i8 %2362, i32 6
  %2364 = extractelement <32 x i32> %2328, i32 7
  %2365 = sext i32 %2364 to i64
  %2366 = getelementptr inbounds i8, i8* %7, i64 %2365
  %2367 = load i8, i8* %2366, align 1, !tbaa !394
  %2368 = insertelement <32 x i8> %2363, i8 %2367, i32 7
  %2369 = extractelement <32 x i32> %2328, i32 8
  %2370 = sext i32 %2369 to i64
  %2371 = getelementptr inbounds i8, i8* %7, i64 %2370
  %2372 = load i8, i8* %2371, align 1, !tbaa !394
  %2373 = insertelement <32 x i8> %2368, i8 %2372, i32 8
  %2374 = extractelement <32 x i32> %2328, i32 9
  %2375 = sext i32 %2374 to i64
  %2376 = getelementptr inbounds i8, i8* %7, i64 %2375
  %2377 = load i8, i8* %2376, align 1, !tbaa !394
  %2378 = insertelement <32 x i8> %2373, i8 %2377, i32 9
  %2379 = extractelement <32 x i32> %2328, i32 10
  %2380 = sext i32 %2379 to i64
  %2381 = getelementptr inbounds i8, i8* %7, i64 %2380
  %2382 = load i8, i8* %2381, align 1, !tbaa !394
  %2383 = insertelement <32 x i8> %2378, i8 %2382, i32 10
  %2384 = extractelement <32 x i32> %2328, i32 11
  %2385 = sext i32 %2384 to i64
  %2386 = getelementptr inbounds i8, i8* %7, i64 %2385
  %2387 = load i8, i8* %2386, align 1, !tbaa !394
  %2388 = insertelement <32 x i8> %2383, i8 %2387, i32 11
  %2389 = extractelement <32 x i32> %2328, i32 12
  %2390 = sext i32 %2389 to i64
  %2391 = getelementptr inbounds i8, i8* %7, i64 %2390
  %2392 = load i8, i8* %2391, align 1, !tbaa !394
  %2393 = insertelement <32 x i8> %2388, i8 %2392, i32 12
  %2394 = extractelement <32 x i32> %2328, i32 13
  %2395 = sext i32 %2394 to i64
  %2396 = getelementptr inbounds i8, i8* %7, i64 %2395
  %2397 = load i8, i8* %2396, align 1, !tbaa !394
  %2398 = insertelement <32 x i8> %2393, i8 %2397, i32 13
  %2399 = extractelement <32 x i32> %2328, i32 14
  %2400 = sext i32 %2399 to i64
  %2401 = getelementptr inbounds i8, i8* %7, i64 %2400
  %2402 = load i8, i8* %2401, align 1, !tbaa !394
  %2403 = insertelement <32 x i8> %2398, i8 %2402, i32 14
  %2404 = extractelement <32 x i32> %2328, i32 15
  %2405 = sext i32 %2404 to i64
  %2406 = getelementptr inbounds i8, i8* %7, i64 %2405
  %2407 = load i8, i8* %2406, align 1, !tbaa !394
  %2408 = insertelement <32 x i8> %2403, i8 %2407, i32 15
  %2409 = extractelement <32 x i32> %2328, i32 16
  %2410 = sext i32 %2409 to i64
  %2411 = getelementptr inbounds i8, i8* %7, i64 %2410
  %2412 = load i8, i8* %2411, align 1, !tbaa !394
  %2413 = insertelement <32 x i8> %2408, i8 %2412, i32 16
  %2414 = extractelement <32 x i32> %2328, i32 17
  %2415 = sext i32 %2414 to i64
  %2416 = getelementptr inbounds i8, i8* %7, i64 %2415
  %2417 = load i8, i8* %2416, align 1, !tbaa !394
  %2418 = insertelement <32 x i8> %2413, i8 %2417, i32 17
  %2419 = extractelement <32 x i32> %2328, i32 18
  %2420 = sext i32 %2419 to i64
  %2421 = getelementptr inbounds i8, i8* %7, i64 %2420
  %2422 = load i8, i8* %2421, align 1, !tbaa !394
  %2423 = insertelement <32 x i8> %2418, i8 %2422, i32 18
  %2424 = extractelement <32 x i32> %2328, i32 19
  %2425 = sext i32 %2424 to i64
  %2426 = getelementptr inbounds i8, i8* %7, i64 %2425
  %2427 = load i8, i8* %2426, align 1, !tbaa !394
  %2428 = insertelement <32 x i8> %2423, i8 %2427, i32 19
  %2429 = extractelement <32 x i32> %2328, i32 20
  %2430 = sext i32 %2429 to i64
  %2431 = getelementptr inbounds i8, i8* %7, i64 %2430
  %2432 = load i8, i8* %2431, align 1, !tbaa !394
  %2433 = insertelement <32 x i8> %2428, i8 %2432, i32 20
  %2434 = extractelement <32 x i32> %2328, i32 21
  %2435 = sext i32 %2434 to i64
  %2436 = getelementptr inbounds i8, i8* %7, i64 %2435
  %2437 = load i8, i8* %2436, align 1, !tbaa !394
  %2438 = insertelement <32 x i8> %2433, i8 %2437, i32 21
  %2439 = extractelement <32 x i32> %2328, i32 22
  %2440 = sext i32 %2439 to i64
  %2441 = getelementptr inbounds i8, i8* %7, i64 %2440
  %2442 = load i8, i8* %2441, align 1, !tbaa !394
  %2443 = insertelement <32 x i8> %2438, i8 %2442, i32 22
  %2444 = extractelement <32 x i32> %2328, i32 23
  %2445 = sext i32 %2444 to i64
  %2446 = getelementptr inbounds i8, i8* %7, i64 %2445
  %2447 = load i8, i8* %2446, align 1, !tbaa !394
  %2448 = insertelement <32 x i8> %2443, i8 %2447, i32 23
  %2449 = extractelement <32 x i32> %2328, i32 24
  %2450 = sext i32 %2449 to i64
  %2451 = getelementptr inbounds i8, i8* %7, i64 %2450
  %2452 = load i8, i8* %2451, align 1, !tbaa !394
  %2453 = insertelement <32 x i8> %2448, i8 %2452, i32 24
  %2454 = extractelement <32 x i32> %2328, i32 25
  %2455 = sext i32 %2454 to i64
  %2456 = getelementptr inbounds i8, i8* %7, i64 %2455
  %2457 = load i8, i8* %2456, align 1, !tbaa !394
  %2458 = insertelement <32 x i8> %2453, i8 %2457, i32 25
  %2459 = extractelement <32 x i32> %2328, i32 26
  %2460 = sext i32 %2459 to i64
  %2461 = getelementptr inbounds i8, i8* %7, i64 %2460
  %2462 = load i8, i8* %2461, align 1, !tbaa !394
  %2463 = insertelement <32 x i8> %2458, i8 %2462, i32 26
  %2464 = extractelement <32 x i32> %2328, i32 27
  %2465 = sext i32 %2464 to i64
  %2466 = getelementptr inbounds i8, i8* %7, i64 %2465
  %2467 = load i8, i8* %2466, align 1, !tbaa !394
  %2468 = insertelement <32 x i8> %2463, i8 %2467, i32 27
  %2469 = extractelement <32 x i32> %2328, i32 28
  %2470 = sext i32 %2469 to i64
  %2471 = getelementptr inbounds i8, i8* %7, i64 %2470
  %2472 = load i8, i8* %2471, align 1, !tbaa !394
  %2473 = insertelement <32 x i8> %2468, i8 %2472, i32 28
  %2474 = extractelement <32 x i32> %2328, i32 29
  %2475 = sext i32 %2474 to i64
  %2476 = getelementptr inbounds i8, i8* %7, i64 %2475
  %2477 = load i8, i8* %2476, align 1, !tbaa !394
  %2478 = insertelement <32 x i8> %2473, i8 %2477, i32 29
  %2479 = extractelement <32 x i32> %2328, i32 30
  %2480 = sext i32 %2479 to i64
  %2481 = getelementptr inbounds i8, i8* %7, i64 %2480
  %2482 = load i8, i8* %2481, align 1, !tbaa !394
  %2483 = insertelement <32 x i8> %2478, i8 %2482, i32 30
  %2484 = extractelement <32 x i32> %2328, i32 31
  %2485 = sext i32 %2484 to i64
  %2486 = getelementptr inbounds i8, i8* %7, i64 %2485
  %2487 = load i8, i8* %2486, align 1, !tbaa !394
  %2488 = insertelement <32 x i8> %2483, i8 %2487, i32 31
  %2489 = zext <32 x i8> %2488 to <32 x i16>
  %2490 = shl nuw nsw <32 x i16> %2489, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %2491 = zext <32 x i8> %t181.s to <32 x i16>
  %2492 = zext <32 x i8> %t183.s to <32 x i16>
  %2493 = add nuw nsw <32 x i16> %2492, %2491
  %2494 = add nuw nsw <32 x i16> %2493, %2490
  %2495 = add nsw <32 x i32> %t177, %1636
  %2496 = extractelement <32 x i32> %2495, i32 0
  %2497 = sext i32 %2496 to i64
  %2498 = getelementptr inbounds i8, i8* %7, i64 %2497
  %2499 = load i8, i8* %2498, align 1, !tbaa !394
  %2500 = insertelement <32 x i8> undef, i8 %2499, i32 0
  %2501 = extractelement <32 x i32> %2495, i32 1
  %2502 = sext i32 %2501 to i64
  %2503 = getelementptr inbounds i8, i8* %7, i64 %2502
  %2504 = load i8, i8* %2503, align 1, !tbaa !394
  %2505 = insertelement <32 x i8> %2500, i8 %2504, i32 1
  %2506 = extractelement <32 x i32> %2495, i32 2
  %2507 = sext i32 %2506 to i64
  %2508 = getelementptr inbounds i8, i8* %7, i64 %2507
  %2509 = load i8, i8* %2508, align 1, !tbaa !394
  %2510 = insertelement <32 x i8> %2505, i8 %2509, i32 2
  %2511 = extractelement <32 x i32> %2495, i32 3
  %2512 = sext i32 %2511 to i64
  %2513 = getelementptr inbounds i8, i8* %7, i64 %2512
  %2514 = load i8, i8* %2513, align 1, !tbaa !394
  %2515 = insertelement <32 x i8> %2510, i8 %2514, i32 3
  %2516 = extractelement <32 x i32> %2495, i32 4
  %2517 = sext i32 %2516 to i64
  %2518 = getelementptr inbounds i8, i8* %7, i64 %2517
  %2519 = load i8, i8* %2518, align 1, !tbaa !394
  %2520 = insertelement <32 x i8> %2515, i8 %2519, i32 4
  %2521 = extractelement <32 x i32> %2495, i32 5
  %2522 = sext i32 %2521 to i64
  %2523 = getelementptr inbounds i8, i8* %7, i64 %2522
  %2524 = load i8, i8* %2523, align 1, !tbaa !394
  %2525 = insertelement <32 x i8> %2520, i8 %2524, i32 5
  %2526 = extractelement <32 x i32> %2495, i32 6
  %2527 = sext i32 %2526 to i64
  %2528 = getelementptr inbounds i8, i8* %7, i64 %2527
  %2529 = load i8, i8* %2528, align 1, !tbaa !394
  %2530 = insertelement <32 x i8> %2525, i8 %2529, i32 6
  %2531 = extractelement <32 x i32> %2495, i32 7
  %2532 = sext i32 %2531 to i64
  %2533 = getelementptr inbounds i8, i8* %7, i64 %2532
  %2534 = load i8, i8* %2533, align 1, !tbaa !394
  %2535 = insertelement <32 x i8> %2530, i8 %2534, i32 7
  %2536 = extractelement <32 x i32> %2495, i32 8
  %2537 = sext i32 %2536 to i64
  %2538 = getelementptr inbounds i8, i8* %7, i64 %2537
  %2539 = load i8, i8* %2538, align 1, !tbaa !394
  %2540 = insertelement <32 x i8> %2535, i8 %2539, i32 8
  %2541 = extractelement <32 x i32> %2495, i32 9
  %2542 = sext i32 %2541 to i64
  %2543 = getelementptr inbounds i8, i8* %7, i64 %2542
  %2544 = load i8, i8* %2543, align 1, !tbaa !394
  %2545 = insertelement <32 x i8> %2540, i8 %2544, i32 9
  %2546 = extractelement <32 x i32> %2495, i32 10
  %2547 = sext i32 %2546 to i64
  %2548 = getelementptr inbounds i8, i8* %7, i64 %2547
  %2549 = load i8, i8* %2548, align 1, !tbaa !394
  %2550 = insertelement <32 x i8> %2545, i8 %2549, i32 10
  %2551 = extractelement <32 x i32> %2495, i32 11
  %2552 = sext i32 %2551 to i64
  %2553 = getelementptr inbounds i8, i8* %7, i64 %2552
  %2554 = load i8, i8* %2553, align 1, !tbaa !394
  %2555 = insertelement <32 x i8> %2550, i8 %2554, i32 11
  %2556 = extractelement <32 x i32> %2495, i32 12
  %2557 = sext i32 %2556 to i64
  %2558 = getelementptr inbounds i8, i8* %7, i64 %2557
  %2559 = load i8, i8* %2558, align 1, !tbaa !394
  %2560 = insertelement <32 x i8> %2555, i8 %2559, i32 12
  %2561 = extractelement <32 x i32> %2495, i32 13
  %2562 = sext i32 %2561 to i64
  %2563 = getelementptr inbounds i8, i8* %7, i64 %2562
  %2564 = load i8, i8* %2563, align 1, !tbaa !394
  %2565 = insertelement <32 x i8> %2560, i8 %2564, i32 13
  %2566 = extractelement <32 x i32> %2495, i32 14
  %2567 = sext i32 %2566 to i64
  %2568 = getelementptr inbounds i8, i8* %7, i64 %2567
  %2569 = load i8, i8* %2568, align 1, !tbaa !394
  %2570 = insertelement <32 x i8> %2565, i8 %2569, i32 14
  %2571 = extractelement <32 x i32> %2495, i32 15
  %2572 = sext i32 %2571 to i64
  %2573 = getelementptr inbounds i8, i8* %7, i64 %2572
  %2574 = load i8, i8* %2573, align 1, !tbaa !394
  %2575 = insertelement <32 x i8> %2570, i8 %2574, i32 15
  %2576 = extractelement <32 x i32> %2495, i32 16
  %2577 = sext i32 %2576 to i64
  %2578 = getelementptr inbounds i8, i8* %7, i64 %2577
  %2579 = load i8, i8* %2578, align 1, !tbaa !394
  %2580 = insertelement <32 x i8> %2575, i8 %2579, i32 16
  %2581 = extractelement <32 x i32> %2495, i32 17
  %2582 = sext i32 %2581 to i64
  %2583 = getelementptr inbounds i8, i8* %7, i64 %2582
  %2584 = load i8, i8* %2583, align 1, !tbaa !394
  %2585 = insertelement <32 x i8> %2580, i8 %2584, i32 17
  %2586 = extractelement <32 x i32> %2495, i32 18
  %2587 = sext i32 %2586 to i64
  %2588 = getelementptr inbounds i8, i8* %7, i64 %2587
  %2589 = load i8, i8* %2588, align 1, !tbaa !394
  %2590 = insertelement <32 x i8> %2585, i8 %2589, i32 18
  %2591 = extractelement <32 x i32> %2495, i32 19
  %2592 = sext i32 %2591 to i64
  %2593 = getelementptr inbounds i8, i8* %7, i64 %2592
  %2594 = load i8, i8* %2593, align 1, !tbaa !394
  %2595 = insertelement <32 x i8> %2590, i8 %2594, i32 19
  %2596 = extractelement <32 x i32> %2495, i32 20
  %2597 = sext i32 %2596 to i64
  %2598 = getelementptr inbounds i8, i8* %7, i64 %2597
  %2599 = load i8, i8* %2598, align 1, !tbaa !394
  %2600 = insertelement <32 x i8> %2595, i8 %2599, i32 20
  %2601 = extractelement <32 x i32> %2495, i32 21
  %2602 = sext i32 %2601 to i64
  %2603 = getelementptr inbounds i8, i8* %7, i64 %2602
  %2604 = load i8, i8* %2603, align 1, !tbaa !394
  %2605 = insertelement <32 x i8> %2600, i8 %2604, i32 21
  %2606 = extractelement <32 x i32> %2495, i32 22
  %2607 = sext i32 %2606 to i64
  %2608 = getelementptr inbounds i8, i8* %7, i64 %2607
  %2609 = load i8, i8* %2608, align 1, !tbaa !394
  %2610 = insertelement <32 x i8> %2605, i8 %2609, i32 22
  %2611 = extractelement <32 x i32> %2495, i32 23
  %2612 = sext i32 %2611 to i64
  %2613 = getelementptr inbounds i8, i8* %7, i64 %2612
  %2614 = load i8, i8* %2613, align 1, !tbaa !394
  %2615 = insertelement <32 x i8> %2610, i8 %2614, i32 23
  %2616 = extractelement <32 x i32> %2495, i32 24
  %2617 = sext i32 %2616 to i64
  %2618 = getelementptr inbounds i8, i8* %7, i64 %2617
  %2619 = load i8, i8* %2618, align 1, !tbaa !394
  %2620 = insertelement <32 x i8> %2615, i8 %2619, i32 24
  %2621 = extractelement <32 x i32> %2495, i32 25
  %2622 = sext i32 %2621 to i64
  %2623 = getelementptr inbounds i8, i8* %7, i64 %2622
  %2624 = load i8, i8* %2623, align 1, !tbaa !394
  %2625 = insertelement <32 x i8> %2620, i8 %2624, i32 25
  %2626 = extractelement <32 x i32> %2495, i32 26
  %2627 = sext i32 %2626 to i64
  %2628 = getelementptr inbounds i8, i8* %7, i64 %2627
  %2629 = load i8, i8* %2628, align 1, !tbaa !394
  %2630 = insertelement <32 x i8> %2625, i8 %2629, i32 26
  %2631 = extractelement <32 x i32> %2495, i32 27
  %2632 = sext i32 %2631 to i64
  %2633 = getelementptr inbounds i8, i8* %7, i64 %2632
  %2634 = load i8, i8* %2633, align 1, !tbaa !394
  %2635 = insertelement <32 x i8> %2630, i8 %2634, i32 27
  %2636 = extractelement <32 x i32> %2495, i32 28
  %2637 = sext i32 %2636 to i64
  %2638 = getelementptr inbounds i8, i8* %7, i64 %2637
  %2639 = load i8, i8* %2638, align 1, !tbaa !394
  %2640 = insertelement <32 x i8> %2635, i8 %2639, i32 28
  %2641 = extractelement <32 x i32> %2495, i32 29
  %2642 = sext i32 %2641 to i64
  %2643 = getelementptr inbounds i8, i8* %7, i64 %2642
  %2644 = load i8, i8* %2643, align 1, !tbaa !394
  %2645 = insertelement <32 x i8> %2640, i8 %2644, i32 29
  %2646 = extractelement <32 x i32> %2495, i32 30
  %2647 = sext i32 %2646 to i64
  %2648 = getelementptr inbounds i8, i8* %7, i64 %2647
  %2649 = load i8, i8* %2648, align 1, !tbaa !394
  %2650 = insertelement <32 x i8> %2645, i8 %2649, i32 30
  %2651 = extractelement <32 x i32> %2495, i32 31
  %2652 = sext i32 %2651 to i64
  %2653 = getelementptr inbounds i8, i8* %7, i64 %2652
  %2654 = load i8, i8* %2653, align 1, !tbaa !394
  %2655 = insertelement <32 x i8> %2650, i8 %2654, i32 31
  %2656 = zext <32 x i8> %2655 to <32 x i16>
  %2657 = shl nuw nsw <32 x i16> %2656, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %2658 = zext <32 x i8> %t185.s to <32 x i16>
  %2659 = zext <32 x i8> %t186.s to <32 x i16>
  %2660 = add nuw nsw <32 x i16> %2659, %2658
  %2661 = add nuw nsw <32 x i16> %2660, %2657
  %2662 = shufflevector <32 x i16> %2494, <32 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2663 = shufflevector <32 x i16> %2661, <32 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2664 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %2662, <16 x i16> %2663) #10
  %2665 = shufflevector <32 x i16> %2494, <32 x i16> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2666 = shufflevector <32 x i16> %2661, <32 x i16> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2667 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %2665, <16 x i16> %2666) #10
  %2668 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %2663, <16 x i16> %2662) #10
  %2669 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %2666, <16 x i16> %2665) #10
  %2670 = or <16 x i16> %2664, %2668
  %2671 = or <16 x i16> %2667, %2669
  %2672 = add nsw <32 x i32> %t180, %t235
  %2673 = extractelement <32 x i32> %2672, i32 0
  %2674 = sext i32 %2673 to i64
  %2675 = getelementptr inbounds i8, i8* %7, i64 %2674
  %2676 = load i8, i8* %2675, align 1, !tbaa !394
  %2677 = insertelement <32 x i8> undef, i8 %2676, i32 0
  %2678 = extractelement <32 x i32> %2672, i32 1
  %2679 = sext i32 %2678 to i64
  %2680 = getelementptr inbounds i8, i8* %7, i64 %2679
  %2681 = load i8, i8* %2680, align 1, !tbaa !394
  %2682 = insertelement <32 x i8> %2677, i8 %2681, i32 1
  %2683 = extractelement <32 x i32> %2672, i32 2
  %2684 = sext i32 %2683 to i64
  %2685 = getelementptr inbounds i8, i8* %7, i64 %2684
  %2686 = load i8, i8* %2685, align 1, !tbaa !394
  %2687 = insertelement <32 x i8> %2682, i8 %2686, i32 2
  %2688 = extractelement <32 x i32> %2672, i32 3
  %2689 = sext i32 %2688 to i64
  %2690 = getelementptr inbounds i8, i8* %7, i64 %2689
  %2691 = load i8, i8* %2690, align 1, !tbaa !394
  %2692 = insertelement <32 x i8> %2687, i8 %2691, i32 3
  %2693 = extractelement <32 x i32> %2672, i32 4
  %2694 = sext i32 %2693 to i64
  %2695 = getelementptr inbounds i8, i8* %7, i64 %2694
  %2696 = load i8, i8* %2695, align 1, !tbaa !394
  %2697 = insertelement <32 x i8> %2692, i8 %2696, i32 4
  %2698 = extractelement <32 x i32> %2672, i32 5
  %2699 = sext i32 %2698 to i64
  %2700 = getelementptr inbounds i8, i8* %7, i64 %2699
  %2701 = load i8, i8* %2700, align 1, !tbaa !394
  %2702 = insertelement <32 x i8> %2697, i8 %2701, i32 5
  %2703 = extractelement <32 x i32> %2672, i32 6
  %2704 = sext i32 %2703 to i64
  %2705 = getelementptr inbounds i8, i8* %7, i64 %2704
  %2706 = load i8, i8* %2705, align 1, !tbaa !394
  %2707 = insertelement <32 x i8> %2702, i8 %2706, i32 6
  %2708 = extractelement <32 x i32> %2672, i32 7
  %2709 = sext i32 %2708 to i64
  %2710 = getelementptr inbounds i8, i8* %7, i64 %2709
  %2711 = load i8, i8* %2710, align 1, !tbaa !394
  %2712 = insertelement <32 x i8> %2707, i8 %2711, i32 7
  %2713 = extractelement <32 x i32> %2672, i32 8
  %2714 = sext i32 %2713 to i64
  %2715 = getelementptr inbounds i8, i8* %7, i64 %2714
  %2716 = load i8, i8* %2715, align 1, !tbaa !394
  %2717 = insertelement <32 x i8> %2712, i8 %2716, i32 8
  %2718 = extractelement <32 x i32> %2672, i32 9
  %2719 = sext i32 %2718 to i64
  %2720 = getelementptr inbounds i8, i8* %7, i64 %2719
  %2721 = load i8, i8* %2720, align 1, !tbaa !394
  %2722 = insertelement <32 x i8> %2717, i8 %2721, i32 9
  %2723 = extractelement <32 x i32> %2672, i32 10
  %2724 = sext i32 %2723 to i64
  %2725 = getelementptr inbounds i8, i8* %7, i64 %2724
  %2726 = load i8, i8* %2725, align 1, !tbaa !394
  %2727 = insertelement <32 x i8> %2722, i8 %2726, i32 10
  %2728 = extractelement <32 x i32> %2672, i32 11
  %2729 = sext i32 %2728 to i64
  %2730 = getelementptr inbounds i8, i8* %7, i64 %2729
  %2731 = load i8, i8* %2730, align 1, !tbaa !394
  %2732 = insertelement <32 x i8> %2727, i8 %2731, i32 11
  %2733 = extractelement <32 x i32> %2672, i32 12
  %2734 = sext i32 %2733 to i64
  %2735 = getelementptr inbounds i8, i8* %7, i64 %2734
  %2736 = load i8, i8* %2735, align 1, !tbaa !394
  %2737 = insertelement <32 x i8> %2732, i8 %2736, i32 12
  %2738 = extractelement <32 x i32> %2672, i32 13
  %2739 = sext i32 %2738 to i64
  %2740 = getelementptr inbounds i8, i8* %7, i64 %2739
  %2741 = load i8, i8* %2740, align 1, !tbaa !394
  %2742 = insertelement <32 x i8> %2737, i8 %2741, i32 13
  %2743 = extractelement <32 x i32> %2672, i32 14
  %2744 = sext i32 %2743 to i64
  %2745 = getelementptr inbounds i8, i8* %7, i64 %2744
  %2746 = load i8, i8* %2745, align 1, !tbaa !394
  %2747 = insertelement <32 x i8> %2742, i8 %2746, i32 14
  %2748 = extractelement <32 x i32> %2672, i32 15
  %2749 = sext i32 %2748 to i64
  %2750 = getelementptr inbounds i8, i8* %7, i64 %2749
  %2751 = load i8, i8* %2750, align 1, !tbaa !394
  %2752 = insertelement <32 x i8> %2747, i8 %2751, i32 15
  %2753 = extractelement <32 x i32> %2672, i32 16
  %2754 = sext i32 %2753 to i64
  %2755 = getelementptr inbounds i8, i8* %7, i64 %2754
  %2756 = load i8, i8* %2755, align 1, !tbaa !394
  %2757 = insertelement <32 x i8> %2752, i8 %2756, i32 16
  %2758 = extractelement <32 x i32> %2672, i32 17
  %2759 = sext i32 %2758 to i64
  %2760 = getelementptr inbounds i8, i8* %7, i64 %2759
  %2761 = load i8, i8* %2760, align 1, !tbaa !394
  %2762 = insertelement <32 x i8> %2757, i8 %2761, i32 17
  %2763 = extractelement <32 x i32> %2672, i32 18
  %2764 = sext i32 %2763 to i64
  %2765 = getelementptr inbounds i8, i8* %7, i64 %2764
  %2766 = load i8, i8* %2765, align 1, !tbaa !394
  %2767 = insertelement <32 x i8> %2762, i8 %2766, i32 18
  %2768 = extractelement <32 x i32> %2672, i32 19
  %2769 = sext i32 %2768 to i64
  %2770 = getelementptr inbounds i8, i8* %7, i64 %2769
  %2771 = load i8, i8* %2770, align 1, !tbaa !394
  %2772 = insertelement <32 x i8> %2767, i8 %2771, i32 19
  %2773 = extractelement <32 x i32> %2672, i32 20
  %2774 = sext i32 %2773 to i64
  %2775 = getelementptr inbounds i8, i8* %7, i64 %2774
  %2776 = load i8, i8* %2775, align 1, !tbaa !394
  %2777 = insertelement <32 x i8> %2772, i8 %2776, i32 20
  %2778 = extractelement <32 x i32> %2672, i32 21
  %2779 = sext i32 %2778 to i64
  %2780 = getelementptr inbounds i8, i8* %7, i64 %2779
  %2781 = load i8, i8* %2780, align 1, !tbaa !394
  %2782 = insertelement <32 x i8> %2777, i8 %2781, i32 21
  %2783 = extractelement <32 x i32> %2672, i32 22
  %2784 = sext i32 %2783 to i64
  %2785 = getelementptr inbounds i8, i8* %7, i64 %2784
  %2786 = load i8, i8* %2785, align 1, !tbaa !394
  %2787 = insertelement <32 x i8> %2782, i8 %2786, i32 22
  %2788 = extractelement <32 x i32> %2672, i32 23
  %2789 = sext i32 %2788 to i64
  %2790 = getelementptr inbounds i8, i8* %7, i64 %2789
  %2791 = load i8, i8* %2790, align 1, !tbaa !394
  %2792 = insertelement <32 x i8> %2787, i8 %2791, i32 23
  %2793 = extractelement <32 x i32> %2672, i32 24
  %2794 = sext i32 %2793 to i64
  %2795 = getelementptr inbounds i8, i8* %7, i64 %2794
  %2796 = load i8, i8* %2795, align 1, !tbaa !394
  %2797 = insertelement <32 x i8> %2792, i8 %2796, i32 24
  %2798 = extractelement <32 x i32> %2672, i32 25
  %2799 = sext i32 %2798 to i64
  %2800 = getelementptr inbounds i8, i8* %7, i64 %2799
  %2801 = load i8, i8* %2800, align 1, !tbaa !394
  %2802 = insertelement <32 x i8> %2797, i8 %2801, i32 25
  %2803 = extractelement <32 x i32> %2672, i32 26
  %2804 = sext i32 %2803 to i64
  %2805 = getelementptr inbounds i8, i8* %7, i64 %2804
  %2806 = load i8, i8* %2805, align 1, !tbaa !394
  %2807 = insertelement <32 x i8> %2802, i8 %2806, i32 26
  %2808 = extractelement <32 x i32> %2672, i32 27
  %2809 = sext i32 %2808 to i64
  %2810 = getelementptr inbounds i8, i8* %7, i64 %2809
  %2811 = load i8, i8* %2810, align 1, !tbaa !394
  %2812 = insertelement <32 x i8> %2807, i8 %2811, i32 27
  %2813 = extractelement <32 x i32> %2672, i32 28
  %2814 = sext i32 %2813 to i64
  %2815 = getelementptr inbounds i8, i8* %7, i64 %2814
  %2816 = load i8, i8* %2815, align 1, !tbaa !394
  %2817 = insertelement <32 x i8> %2812, i8 %2816, i32 28
  %2818 = extractelement <32 x i32> %2672, i32 29
  %2819 = sext i32 %2818 to i64
  %2820 = getelementptr inbounds i8, i8* %7, i64 %2819
  %2821 = load i8, i8* %2820, align 1, !tbaa !394
  %2822 = insertelement <32 x i8> %2817, i8 %2821, i32 29
  %2823 = extractelement <32 x i32> %2672, i32 30
  %2824 = sext i32 %2823 to i64
  %2825 = getelementptr inbounds i8, i8* %7, i64 %2824
  %2826 = load i8, i8* %2825, align 1, !tbaa !394
  %2827 = insertelement <32 x i8> %2822, i8 %2826, i32 30
  %2828 = extractelement <32 x i32> %2672, i32 31
  %2829 = sext i32 %2828 to i64
  %2830 = getelementptr inbounds i8, i8* %7, i64 %2829
  %2831 = load i8, i8* %2830, align 1, !tbaa !394
  %2832 = insertelement <32 x i8> %2827, i8 %2831, i32 31
  %2833 = zext <32 x i8> %2832 to <32 x i16>
  %2834 = shl nuw nsw <32 x i16> %2833, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %2835 = add nuw nsw <32 x i16> %2658, %2491
  %2836 = add nuw nsw <32 x i16> %2835, %2834
  %2837 = add nsw <32 x i32> %t182, %t235
  %2838 = extractelement <32 x i32> %2837, i32 0
  %2839 = sext i32 %2838 to i64
  %2840 = getelementptr inbounds i8, i8* %7, i64 %2839
  %2841 = load i8, i8* %2840, align 1, !tbaa !394
  %2842 = insertelement <32 x i8> undef, i8 %2841, i32 0
  %2843 = extractelement <32 x i32> %2837, i32 1
  %2844 = sext i32 %2843 to i64
  %2845 = getelementptr inbounds i8, i8* %7, i64 %2844
  %2846 = load i8, i8* %2845, align 1, !tbaa !394
  %2847 = insertelement <32 x i8> %2842, i8 %2846, i32 1
  %2848 = extractelement <32 x i32> %2837, i32 2
  %2849 = sext i32 %2848 to i64
  %2850 = getelementptr inbounds i8, i8* %7, i64 %2849
  %2851 = load i8, i8* %2850, align 1, !tbaa !394
  %2852 = insertelement <32 x i8> %2847, i8 %2851, i32 2
  %2853 = extractelement <32 x i32> %2837, i32 3
  %2854 = sext i32 %2853 to i64
  %2855 = getelementptr inbounds i8, i8* %7, i64 %2854
  %2856 = load i8, i8* %2855, align 1, !tbaa !394
  %2857 = insertelement <32 x i8> %2852, i8 %2856, i32 3
  %2858 = extractelement <32 x i32> %2837, i32 4
  %2859 = sext i32 %2858 to i64
  %2860 = getelementptr inbounds i8, i8* %7, i64 %2859
  %2861 = load i8, i8* %2860, align 1, !tbaa !394
  %2862 = insertelement <32 x i8> %2857, i8 %2861, i32 4
  %2863 = extractelement <32 x i32> %2837, i32 5
  %2864 = sext i32 %2863 to i64
  %2865 = getelementptr inbounds i8, i8* %7, i64 %2864
  %2866 = load i8, i8* %2865, align 1, !tbaa !394
  %2867 = insertelement <32 x i8> %2862, i8 %2866, i32 5
  %2868 = extractelement <32 x i32> %2837, i32 6
  %2869 = sext i32 %2868 to i64
  %2870 = getelementptr inbounds i8, i8* %7, i64 %2869
  %2871 = load i8, i8* %2870, align 1, !tbaa !394
  %2872 = insertelement <32 x i8> %2867, i8 %2871, i32 6
  %2873 = extractelement <32 x i32> %2837, i32 7
  %2874 = sext i32 %2873 to i64
  %2875 = getelementptr inbounds i8, i8* %7, i64 %2874
  %2876 = load i8, i8* %2875, align 1, !tbaa !394
  %2877 = insertelement <32 x i8> %2872, i8 %2876, i32 7
  %2878 = extractelement <32 x i32> %2837, i32 8
  %2879 = sext i32 %2878 to i64
  %2880 = getelementptr inbounds i8, i8* %7, i64 %2879
  %2881 = load i8, i8* %2880, align 1, !tbaa !394
  %2882 = insertelement <32 x i8> %2877, i8 %2881, i32 8
  %2883 = extractelement <32 x i32> %2837, i32 9
  %2884 = sext i32 %2883 to i64
  %2885 = getelementptr inbounds i8, i8* %7, i64 %2884
  %2886 = load i8, i8* %2885, align 1, !tbaa !394
  %2887 = insertelement <32 x i8> %2882, i8 %2886, i32 9
  %2888 = extractelement <32 x i32> %2837, i32 10
  %2889 = sext i32 %2888 to i64
  %2890 = getelementptr inbounds i8, i8* %7, i64 %2889
  %2891 = load i8, i8* %2890, align 1, !tbaa !394
  %2892 = insertelement <32 x i8> %2887, i8 %2891, i32 10
  %2893 = extractelement <32 x i32> %2837, i32 11
  %2894 = sext i32 %2893 to i64
  %2895 = getelementptr inbounds i8, i8* %7, i64 %2894
  %2896 = load i8, i8* %2895, align 1, !tbaa !394
  %2897 = insertelement <32 x i8> %2892, i8 %2896, i32 11
  %2898 = extractelement <32 x i32> %2837, i32 12
  %2899 = sext i32 %2898 to i64
  %2900 = getelementptr inbounds i8, i8* %7, i64 %2899
  %2901 = load i8, i8* %2900, align 1, !tbaa !394
  %2902 = insertelement <32 x i8> %2897, i8 %2901, i32 12
  %2903 = extractelement <32 x i32> %2837, i32 13
  %2904 = sext i32 %2903 to i64
  %2905 = getelementptr inbounds i8, i8* %7, i64 %2904
  %2906 = load i8, i8* %2905, align 1, !tbaa !394
  %2907 = insertelement <32 x i8> %2902, i8 %2906, i32 13
  %2908 = extractelement <32 x i32> %2837, i32 14
  %2909 = sext i32 %2908 to i64
  %2910 = getelementptr inbounds i8, i8* %7, i64 %2909
  %2911 = load i8, i8* %2910, align 1, !tbaa !394
  %2912 = insertelement <32 x i8> %2907, i8 %2911, i32 14
  %2913 = extractelement <32 x i32> %2837, i32 15
  %2914 = sext i32 %2913 to i64
  %2915 = getelementptr inbounds i8, i8* %7, i64 %2914
  %2916 = load i8, i8* %2915, align 1, !tbaa !394
  %2917 = insertelement <32 x i8> %2912, i8 %2916, i32 15
  %2918 = extractelement <32 x i32> %2837, i32 16
  %2919 = sext i32 %2918 to i64
  %2920 = getelementptr inbounds i8, i8* %7, i64 %2919
  %2921 = load i8, i8* %2920, align 1, !tbaa !394
  %2922 = insertelement <32 x i8> %2917, i8 %2921, i32 16
  %2923 = extractelement <32 x i32> %2837, i32 17
  %2924 = sext i32 %2923 to i64
  %2925 = getelementptr inbounds i8, i8* %7, i64 %2924
  %2926 = load i8, i8* %2925, align 1, !tbaa !394
  %2927 = insertelement <32 x i8> %2922, i8 %2926, i32 17
  %2928 = extractelement <32 x i32> %2837, i32 18
  %2929 = sext i32 %2928 to i64
  %2930 = getelementptr inbounds i8, i8* %7, i64 %2929
  %2931 = load i8, i8* %2930, align 1, !tbaa !394
  %2932 = insertelement <32 x i8> %2927, i8 %2931, i32 18
  %2933 = extractelement <32 x i32> %2837, i32 19
  %2934 = sext i32 %2933 to i64
  %2935 = getelementptr inbounds i8, i8* %7, i64 %2934
  %2936 = load i8, i8* %2935, align 1, !tbaa !394
  %2937 = insertelement <32 x i8> %2932, i8 %2936, i32 19
  %2938 = extractelement <32 x i32> %2837, i32 20
  %2939 = sext i32 %2938 to i64
  %2940 = getelementptr inbounds i8, i8* %7, i64 %2939
  %2941 = load i8, i8* %2940, align 1, !tbaa !394
  %2942 = insertelement <32 x i8> %2937, i8 %2941, i32 20
  %2943 = extractelement <32 x i32> %2837, i32 21
  %2944 = sext i32 %2943 to i64
  %2945 = getelementptr inbounds i8, i8* %7, i64 %2944
  %2946 = load i8, i8* %2945, align 1, !tbaa !394
  %2947 = insertelement <32 x i8> %2942, i8 %2946, i32 21
  %2948 = extractelement <32 x i32> %2837, i32 22
  %2949 = sext i32 %2948 to i64
  %2950 = getelementptr inbounds i8, i8* %7, i64 %2949
  %2951 = load i8, i8* %2950, align 1, !tbaa !394
  %2952 = insertelement <32 x i8> %2947, i8 %2951, i32 22
  %2953 = extractelement <32 x i32> %2837, i32 23
  %2954 = sext i32 %2953 to i64
  %2955 = getelementptr inbounds i8, i8* %7, i64 %2954
  %2956 = load i8, i8* %2955, align 1, !tbaa !394
  %2957 = insertelement <32 x i8> %2952, i8 %2956, i32 23
  %2958 = extractelement <32 x i32> %2837, i32 24
  %2959 = sext i32 %2958 to i64
  %2960 = getelementptr inbounds i8, i8* %7, i64 %2959
  %2961 = load i8, i8* %2960, align 1, !tbaa !394
  %2962 = insertelement <32 x i8> %2957, i8 %2961, i32 24
  %2963 = extractelement <32 x i32> %2837, i32 25
  %2964 = sext i32 %2963 to i64
  %2965 = getelementptr inbounds i8, i8* %7, i64 %2964
  %2966 = load i8, i8* %2965, align 1, !tbaa !394
  %2967 = insertelement <32 x i8> %2962, i8 %2966, i32 25
  %2968 = extractelement <32 x i32> %2837, i32 26
  %2969 = sext i32 %2968 to i64
  %2970 = getelementptr inbounds i8, i8* %7, i64 %2969
  %2971 = load i8, i8* %2970, align 1, !tbaa !394
  %2972 = insertelement <32 x i8> %2967, i8 %2971, i32 26
  %2973 = extractelement <32 x i32> %2837, i32 27
  %2974 = sext i32 %2973 to i64
  %2975 = getelementptr inbounds i8, i8* %7, i64 %2974
  %2976 = load i8, i8* %2975, align 1, !tbaa !394
  %2977 = insertelement <32 x i8> %2972, i8 %2976, i32 27
  %2978 = extractelement <32 x i32> %2837, i32 28
  %2979 = sext i32 %2978 to i64
  %2980 = getelementptr inbounds i8, i8* %7, i64 %2979
  %2981 = load i8, i8* %2980, align 1, !tbaa !394
  %2982 = insertelement <32 x i8> %2977, i8 %2981, i32 28
  %2983 = extractelement <32 x i32> %2837, i32 29
  %2984 = sext i32 %2983 to i64
  %2985 = getelementptr inbounds i8, i8* %7, i64 %2984
  %2986 = load i8, i8* %2985, align 1, !tbaa !394
  %2987 = insertelement <32 x i8> %2982, i8 %2986, i32 29
  %2988 = extractelement <32 x i32> %2837, i32 30
  %2989 = sext i32 %2988 to i64
  %2990 = getelementptr inbounds i8, i8* %7, i64 %2989
  %2991 = load i8, i8* %2990, align 1, !tbaa !394
  %2992 = insertelement <32 x i8> %2987, i8 %2991, i32 30
  %2993 = extractelement <32 x i32> %2837, i32 31
  %2994 = sext i32 %2993 to i64
  %2995 = getelementptr inbounds i8, i8* %7, i64 %2994
  %2996 = load i8, i8* %2995, align 1, !tbaa !394
  %2997 = insertelement <32 x i8> %2992, i8 %2996, i32 31
  %2998 = zext <32 x i8> %2997 to <32 x i16>
  %2999 = shl nuw nsw <32 x i16> %2998, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %3000 = add nuw nsw <32 x i16> %2659, %2492
  %3001 = add nuw nsw <32 x i16> %3000, %2999
  %3002 = shufflevector <32 x i16> %2836, <32 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3003 = shufflevector <32 x i16> %3001, <32 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3004 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %3002, <16 x i16> %3003) #10
  %3005 = shufflevector <32 x i16> %2836, <32 x i16> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3006 = shufflevector <32 x i16> %3001, <32 x i16> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3007 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %3005, <16 x i16> %3006) #10
  %3008 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %3003, <16 x i16> %3002) #10
  %3009 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %3006, <16 x i16> %3005) #10
  %3010 = or <16 x i16> %3004, %3008
  %3011 = or <16 x i16> %3007, %3009
  %3012 = add nuw nsw <16 x i16> %3010, %2670
  %3013 = add nuw nsw <16 x i16> %3011, %2671
  %a72 = shufflevector <16 x i16> %3012, <16 x i16> %3013, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3014 = icmp ult <32 x i16> %a72, <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>
  %3015 = select <32 x i1> %3014, <32 x i16> %a72, <32 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>
  %3016 = trunc <32 x i16> %3015 to <32 x i8>
  %3017 = sext i32 %output.s0.x.v0.base.s37 to i64
  %3018 = add nsw i64 %3017, %1640
  %3019 = getelementptr inbounds i8, i8* %20, i64 %3018
  %3020 = bitcast i8* %3019 to <32 x i8>*
  store <32 x i8> %3016, <32 x i8>* %3020, align 1, !tbaa !397
  %3021 = add nuw nsw i32 %output.s0.x.x36, 1
  %.not265 = icmp eq i32 %3021, %b62
  br i1 %.not265, label %"end for output.s0.x.x35", label %"for output.s0.x.x34"

"end for output.s0.x.x35":                        ; preds = %"for output.s0.x.x34", %"for output.s0.y.rebased31.end for output.s0.x.x35_crit_edge"
  %.pre-phi492 = phi i32 [ %.pre491, %"for output.s0.y.rebased31.end for output.s0.x.x35_crit_edge" ], [ %1637, %"for output.s0.x.x34" ]
  br i1 %246, label %"for output.s0.x.x.rebased.preheader", label %"end for output.s0.x.x.rebased", !prof !393

"for output.s0.x.x.rebased.preheader":            ; preds = %"end for output.s0.x.x35"
  %3022 = sext i32 %t264 to i64
  br label %"for output.s0.x.x.rebased"

"for output.s0.x.x.rebased":                      ; preds = %"for output.s0.x.x.rebased.preheader", %"for output.s0.x.x.rebased"
  %indvars.iv465 = phi i64 [ 0, %"for output.s0.x.x.rebased.preheader" ], [ %indvars.iv.next466, %"for output.s0.x.x.rebased" ]
  %output.s0.x.x.rebased = phi i32 [ 0, %"for output.s0.x.x.rebased.preheader" ], [ %3099, %"for output.s0.x.x.rebased" ]
  %3023 = add nsw i32 %output.s0.x.x.rebased, %b62
  %3024 = shl nsw i32 %3023, 5
  %t267 = add i32 %3024, %t272
  %t190 = add i32 %t267, %1629
  %3025 = sext i32 %t190 to i64
  %3026 = getelementptr inbounds i8, i8* %7, i64 %3025
  %3027 = getelementptr inbounds i8, i8* %3026, i64 -1
  %3028 = bitcast i8* %3027 to <32 x i8>*
  %t191.s = load <32 x i8>, <32 x i8>* %3028, align 1, !tbaa !394
  %3029 = getelementptr inbounds i8, i8* %3026, i64 1
  %3030 = bitcast i8* %3029 to <32 x i8>*
  %t192.s = load <32 x i8>, <32 x i8>* %3030, align 1, !tbaa !394
  %t193 = add i32 %t267, %1627
  %3031 = sext i32 %t193 to i64
  %3032 = getelementptr inbounds i8, i8* %7, i64 %3031
  %3033 = getelementptr inbounds i8, i8* %3032, i64 -1
  %3034 = bitcast i8* %3033 to <32 x i8>*
  %t194.s = load <32 x i8>, <32 x i8>* %3034, align 1, !tbaa !394
  %3035 = getelementptr inbounds i8, i8* %3032, i64 1
  %3036 = bitcast i8* %3035 to <32 x i8>*
  %t195.s = load <32 x i8>, <32 x i8>* %3036, align 1, !tbaa !394
  %t196 = add i32 %t267, %.pre-phi492
  %3037 = bitcast i8* %3026 to <32 x i8>*
  %3038 = load <32 x i8>, <32 x i8>* %3037, align 1, !tbaa !394
  %3039 = zext <32 x i8> %3038 to <32 x i16>
  %3040 = shl nuw nsw <32 x i16> %3039, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %3041 = zext <32 x i8> %t191.s to <32 x i16>
  %3042 = zext <32 x i8> %t192.s to <32 x i16>
  %3043 = add nuw nsw <32 x i16> %3042, %3041
  %3044 = add nuw nsw <32 x i16> %3043, %3040
  %3045 = bitcast i8* %3032 to <32 x i8>*
  %3046 = load <32 x i8>, <32 x i8>* %3045, align 1, !tbaa !394
  %3047 = zext <32 x i8> %3046 to <32 x i16>
  %3048 = shl nuw nsw <32 x i16> %3047, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %3049 = zext <32 x i8> %t194.s to <32 x i16>
  %3050 = zext <32 x i8> %t195.s to <32 x i16>
  %3051 = add nuw nsw <32 x i16> %3050, %3049
  %3052 = add nuw nsw <32 x i16> %3051, %3048
  %3053 = shufflevector <32 x i16> %3044, <32 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3054 = shufflevector <32 x i16> %3052, <32 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3055 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %3053, <16 x i16> %3054) #10
  %3056 = shufflevector <32 x i16> %3044, <32 x i16> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3057 = shufflevector <32 x i16> %3052, <32 x i16> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3058 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %3056, <16 x i16> %3057) #10
  %3059 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %3054, <16 x i16> %3053) #10
  %3060 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %3057, <16 x i16> %3056) #10
  %3061 = or <16 x i16> %3055, %3059
  %3062 = or <16 x i16> %3058, %3060
  %3063 = sext i32 %t196 to i64
  %3064 = getelementptr inbounds i8, i8* %7, i64 %3063
  %3065 = getelementptr inbounds i8, i8* %3064, i64 -1
  %3066 = bitcast i8* %3065 to <32 x i8>*
  %3067 = load <32 x i8>, <32 x i8>* %3066, align 1, !tbaa !394
  %3068 = zext <32 x i8> %3067 to <32 x i16>
  %3069 = shl nuw nsw <32 x i16> %3068, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %3070 = add nuw nsw <32 x i16> %3049, %3041
  %3071 = add nuw nsw <32 x i16> %3070, %3069
  %3072 = getelementptr inbounds i8, i8* %3064, i64 1
  %3073 = bitcast i8* %3072 to <32 x i8>*
  %3074 = load <32 x i8>, <32 x i8>* %3073, align 1, !tbaa !394
  %3075 = zext <32 x i8> %3074 to <32 x i16>
  %3076 = shl nuw nsw <32 x i16> %3075, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %3077 = add nuw nsw <32 x i16> %3050, %3042
  %3078 = add nuw nsw <32 x i16> %3077, %3076
  %3079 = shufflevector <32 x i16> %3071, <32 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3080 = shufflevector <32 x i16> %3078, <32 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3081 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %3079, <16 x i16> %3080) #10
  %3082 = shufflevector <32 x i16> %3071, <32 x i16> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3083 = shufflevector <32 x i16> %3078, <32 x i16> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3084 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %3082, <16 x i16> %3083) #10
  %3085 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %3080, <16 x i16> %3079) #10
  %3086 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %3083, <16 x i16> %3082) #10
  %3087 = or <16 x i16> %3081, %3085
  %3088 = or <16 x i16> %3084, %3086
  %3089 = add nuw nsw <16 x i16> %3087, %3061
  %3090 = add nuw nsw <16 x i16> %3088, %3062
  %a73 = shufflevector <16 x i16> %3089, <16 x i16> %3090, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3091 = icmp ult <32 x i16> %a73, <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>
  %3092 = select <32 x i1> %3091, <32 x i16> %a73, <32 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>
  %3093 = trunc <32 x i16> %3092 to <32 x i8>
  %3094 = add nsw i64 %indvars.iv465, %247
  %3095 = shl nsw i64 %3094, 5
  %3096 = add nsw i64 %3095, %3022
  %3097 = getelementptr inbounds i8, i8* %20, i64 %3096
  %3098 = bitcast i8* %3097 to <32 x i8>*
  store <32 x i8> %3093, <32 x i8>* %3098, align 1, !tbaa !397
  %indvars.iv.next466 = add nuw nsw i64 %indvars.iv465, 1
  %3099 = add nuw nsw i32 %output.s0.x.x.rebased, 1
  %.not264 = icmp eq i64 %indvars.iv.next466, %249
  br i1 %.not264, label %"end for output.s0.x.x.rebased", label %"for output.s0.x.x.rebased"

"end for output.s0.x.x.rebased":                  ; preds = %"for output.s0.x.x.rebased", %"end for output.s0.x.x35"
  br i1 %248, label %"for output.s0.x.x.rebased38.preheader", label %"end for output.s0.x.x.rebased39", !prof !393

"for output.s0.x.x.rebased38.preheader":          ; preds = %"end for output.s0.x.x.rebased"
  %3100 = insertelement <32 x i32> undef, i32 %t261, i32 0
  %3101 = shufflevector <32 x i32> %3100, <32 x i32> undef, <32 x i32> zeroinitializer
  %3102 = insertelement <32 x i32> undef, i32 %t262, i32 0
  %3103 = shufflevector <32 x i32> %3102, <32 x i32> undef, <32 x i32> zeroinitializer
  %3104 = sub nsw i32 %.pre-phi492, %14
  %3105 = insertelement <32 x i32> undef, i32 %3104, i32 0
  %t237 = shufflevector <32 x i32> %3105, <32 x i32> undef, <32 x i32> zeroinitializer
  %3106 = sext i32 %t264 to i64
  br label %"for output.s0.x.x.rebased38"

"for output.s0.x.x.rebased38":                    ; preds = %"for output.s0.x.x.rebased38.preheader", %"for output.s0.x.x.rebased38"
  %output.s0.x.x.rebased40 = phi i32 [ %4481, %"for output.s0.x.x.rebased38" ], [ 0, %"for output.s0.x.x.rebased38.preheader" ]
  %3107 = add nsw i32 %output.s0.x.x.rebased40, %t251
  %a74 = shl nsw i32 %3107, 5
  %3108 = icmp sgt i32 %a63.pre-phi, %a74
  %output.s0.x.v0.base.s41 = select i1 %3108, i32 %a74, i32 %a63.pre-phi
  %3109 = add nsw i32 %output.s0.x.v0.base.s41, %27
  %3110 = insertelement <32 x i32> undef, i32 %3109, i32 0
  %3111 = shufflevector <32 x i32> %3110, <32 x i32> undef, <32 x i32> zeroinitializer
  %a76 = add nsw <32 x i32> %3111, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3112 = shufflevector <32 x i32> %a76, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3113 = icmp sgt <16 x i32> %243, %3112
  %3114 = shufflevector <32 x i32> %a76, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3115 = icmp sgt <16 x i32> %243, %3114
  %3116 = select <16 x i1> %3113, <16 x i32> %3112, <16 x i32> %243
  %3117 = select <16 x i1> %3115, <16 x i32> %3114, <16 x i32> %243
  %3118 = icmp sgt <16 x i32> %3116, %245
  %3119 = icmp sgt <16 x i32> %3117, %245
  %3120 = select <16 x i1> %3118, <16 x i32> %3116, <16 x i32> %245
  %3121 = select <16 x i1> %3119, <16 x i32> %3117, <16 x i32> %245
  %t199 = shufflevector <16 x i32> %3120, <16 x i32> %3121, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3122 = add nsw i32 %3109, -1
  %3123 = insertelement <32 x i32> undef, i32 %3122, i32 0
  %3124 = shufflevector <32 x i32> %3123, <32 x i32> undef, <32 x i32> zeroinitializer
  %a78 = add nsw <32 x i32> %3124, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3125 = shufflevector <32 x i32> %a78, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3126 = icmp sgt <16 x i32> %243, %3125
  %3127 = shufflevector <32 x i32> %a78, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3128 = icmp sgt <16 x i32> %243, %3127
  %3129 = select <16 x i1> %3126, <16 x i32> %3125, <16 x i32> %243
  %3130 = select <16 x i1> %3128, <16 x i32> %3127, <16 x i32> %243
  %3131 = icmp sgt <16 x i32> %3129, %245
  %3132 = icmp sgt <16 x i32> %3130, %245
  %3133 = select <16 x i1> %3131, <16 x i32> %3129, <16 x i32> %245
  %3134 = select <16 x i1> %3132, <16 x i32> %3130, <16 x i32> %245
  %t202 = shufflevector <16 x i32> %3133, <16 x i32> %3134, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3135 = add nsw <32 x i32> %t202, %3101
  %3136 = extractelement <32 x i32> %3135, i32 0
  %3137 = sext i32 %3136 to i64
  %3138 = getelementptr inbounds i8, i8* %7, i64 %3137
  %3139 = load i8, i8* %3138, align 1, !tbaa !394
  %3140 = insertelement <32 x i8> undef, i8 %3139, i32 0
  %3141 = extractelement <32 x i32> %3135, i32 1
  %3142 = sext i32 %3141 to i64
  %3143 = getelementptr inbounds i8, i8* %7, i64 %3142
  %3144 = load i8, i8* %3143, align 1, !tbaa !394
  %3145 = insertelement <32 x i8> %3140, i8 %3144, i32 1
  %3146 = extractelement <32 x i32> %3135, i32 2
  %3147 = sext i32 %3146 to i64
  %3148 = getelementptr inbounds i8, i8* %7, i64 %3147
  %3149 = load i8, i8* %3148, align 1, !tbaa !394
  %3150 = insertelement <32 x i8> %3145, i8 %3149, i32 2
  %3151 = extractelement <32 x i32> %3135, i32 3
  %3152 = sext i32 %3151 to i64
  %3153 = getelementptr inbounds i8, i8* %7, i64 %3152
  %3154 = load i8, i8* %3153, align 1, !tbaa !394
  %3155 = insertelement <32 x i8> %3150, i8 %3154, i32 3
  %3156 = extractelement <32 x i32> %3135, i32 4
  %3157 = sext i32 %3156 to i64
  %3158 = getelementptr inbounds i8, i8* %7, i64 %3157
  %3159 = load i8, i8* %3158, align 1, !tbaa !394
  %3160 = insertelement <32 x i8> %3155, i8 %3159, i32 4
  %3161 = extractelement <32 x i32> %3135, i32 5
  %3162 = sext i32 %3161 to i64
  %3163 = getelementptr inbounds i8, i8* %7, i64 %3162
  %3164 = load i8, i8* %3163, align 1, !tbaa !394
  %3165 = insertelement <32 x i8> %3160, i8 %3164, i32 5
  %3166 = extractelement <32 x i32> %3135, i32 6
  %3167 = sext i32 %3166 to i64
  %3168 = getelementptr inbounds i8, i8* %7, i64 %3167
  %3169 = load i8, i8* %3168, align 1, !tbaa !394
  %3170 = insertelement <32 x i8> %3165, i8 %3169, i32 6
  %3171 = extractelement <32 x i32> %3135, i32 7
  %3172 = sext i32 %3171 to i64
  %3173 = getelementptr inbounds i8, i8* %7, i64 %3172
  %3174 = load i8, i8* %3173, align 1, !tbaa !394
  %3175 = insertelement <32 x i8> %3170, i8 %3174, i32 7
  %3176 = extractelement <32 x i32> %3135, i32 8
  %3177 = sext i32 %3176 to i64
  %3178 = getelementptr inbounds i8, i8* %7, i64 %3177
  %3179 = load i8, i8* %3178, align 1, !tbaa !394
  %3180 = insertelement <32 x i8> %3175, i8 %3179, i32 8
  %3181 = extractelement <32 x i32> %3135, i32 9
  %3182 = sext i32 %3181 to i64
  %3183 = getelementptr inbounds i8, i8* %7, i64 %3182
  %3184 = load i8, i8* %3183, align 1, !tbaa !394
  %3185 = insertelement <32 x i8> %3180, i8 %3184, i32 9
  %3186 = extractelement <32 x i32> %3135, i32 10
  %3187 = sext i32 %3186 to i64
  %3188 = getelementptr inbounds i8, i8* %7, i64 %3187
  %3189 = load i8, i8* %3188, align 1, !tbaa !394
  %3190 = insertelement <32 x i8> %3185, i8 %3189, i32 10
  %3191 = extractelement <32 x i32> %3135, i32 11
  %3192 = sext i32 %3191 to i64
  %3193 = getelementptr inbounds i8, i8* %7, i64 %3192
  %3194 = load i8, i8* %3193, align 1, !tbaa !394
  %3195 = insertelement <32 x i8> %3190, i8 %3194, i32 11
  %3196 = extractelement <32 x i32> %3135, i32 12
  %3197 = sext i32 %3196 to i64
  %3198 = getelementptr inbounds i8, i8* %7, i64 %3197
  %3199 = load i8, i8* %3198, align 1, !tbaa !394
  %3200 = insertelement <32 x i8> %3195, i8 %3199, i32 12
  %3201 = extractelement <32 x i32> %3135, i32 13
  %3202 = sext i32 %3201 to i64
  %3203 = getelementptr inbounds i8, i8* %7, i64 %3202
  %3204 = load i8, i8* %3203, align 1, !tbaa !394
  %3205 = insertelement <32 x i8> %3200, i8 %3204, i32 13
  %3206 = extractelement <32 x i32> %3135, i32 14
  %3207 = sext i32 %3206 to i64
  %3208 = getelementptr inbounds i8, i8* %7, i64 %3207
  %3209 = load i8, i8* %3208, align 1, !tbaa !394
  %3210 = insertelement <32 x i8> %3205, i8 %3209, i32 14
  %3211 = extractelement <32 x i32> %3135, i32 15
  %3212 = sext i32 %3211 to i64
  %3213 = getelementptr inbounds i8, i8* %7, i64 %3212
  %3214 = load i8, i8* %3213, align 1, !tbaa !394
  %3215 = insertelement <32 x i8> %3210, i8 %3214, i32 15
  %3216 = extractelement <32 x i32> %3135, i32 16
  %3217 = sext i32 %3216 to i64
  %3218 = getelementptr inbounds i8, i8* %7, i64 %3217
  %3219 = load i8, i8* %3218, align 1, !tbaa !394
  %3220 = insertelement <32 x i8> %3215, i8 %3219, i32 16
  %3221 = extractelement <32 x i32> %3135, i32 17
  %3222 = sext i32 %3221 to i64
  %3223 = getelementptr inbounds i8, i8* %7, i64 %3222
  %3224 = load i8, i8* %3223, align 1, !tbaa !394
  %3225 = insertelement <32 x i8> %3220, i8 %3224, i32 17
  %3226 = extractelement <32 x i32> %3135, i32 18
  %3227 = sext i32 %3226 to i64
  %3228 = getelementptr inbounds i8, i8* %7, i64 %3227
  %3229 = load i8, i8* %3228, align 1, !tbaa !394
  %3230 = insertelement <32 x i8> %3225, i8 %3229, i32 18
  %3231 = extractelement <32 x i32> %3135, i32 19
  %3232 = sext i32 %3231 to i64
  %3233 = getelementptr inbounds i8, i8* %7, i64 %3232
  %3234 = load i8, i8* %3233, align 1, !tbaa !394
  %3235 = insertelement <32 x i8> %3230, i8 %3234, i32 19
  %3236 = extractelement <32 x i32> %3135, i32 20
  %3237 = sext i32 %3236 to i64
  %3238 = getelementptr inbounds i8, i8* %7, i64 %3237
  %3239 = load i8, i8* %3238, align 1, !tbaa !394
  %3240 = insertelement <32 x i8> %3235, i8 %3239, i32 20
  %3241 = extractelement <32 x i32> %3135, i32 21
  %3242 = sext i32 %3241 to i64
  %3243 = getelementptr inbounds i8, i8* %7, i64 %3242
  %3244 = load i8, i8* %3243, align 1, !tbaa !394
  %3245 = insertelement <32 x i8> %3240, i8 %3244, i32 21
  %3246 = extractelement <32 x i32> %3135, i32 22
  %3247 = sext i32 %3246 to i64
  %3248 = getelementptr inbounds i8, i8* %7, i64 %3247
  %3249 = load i8, i8* %3248, align 1, !tbaa !394
  %3250 = insertelement <32 x i8> %3245, i8 %3249, i32 22
  %3251 = extractelement <32 x i32> %3135, i32 23
  %3252 = sext i32 %3251 to i64
  %3253 = getelementptr inbounds i8, i8* %7, i64 %3252
  %3254 = load i8, i8* %3253, align 1, !tbaa !394
  %3255 = insertelement <32 x i8> %3250, i8 %3254, i32 23
  %3256 = extractelement <32 x i32> %3135, i32 24
  %3257 = sext i32 %3256 to i64
  %3258 = getelementptr inbounds i8, i8* %7, i64 %3257
  %3259 = load i8, i8* %3258, align 1, !tbaa !394
  %3260 = insertelement <32 x i8> %3255, i8 %3259, i32 24
  %3261 = extractelement <32 x i32> %3135, i32 25
  %3262 = sext i32 %3261 to i64
  %3263 = getelementptr inbounds i8, i8* %7, i64 %3262
  %3264 = load i8, i8* %3263, align 1, !tbaa !394
  %3265 = insertelement <32 x i8> %3260, i8 %3264, i32 25
  %3266 = extractelement <32 x i32> %3135, i32 26
  %3267 = sext i32 %3266 to i64
  %3268 = getelementptr inbounds i8, i8* %7, i64 %3267
  %3269 = load i8, i8* %3268, align 1, !tbaa !394
  %3270 = insertelement <32 x i8> %3265, i8 %3269, i32 26
  %3271 = extractelement <32 x i32> %3135, i32 27
  %3272 = sext i32 %3271 to i64
  %3273 = getelementptr inbounds i8, i8* %7, i64 %3272
  %3274 = load i8, i8* %3273, align 1, !tbaa !394
  %3275 = insertelement <32 x i8> %3270, i8 %3274, i32 27
  %3276 = extractelement <32 x i32> %3135, i32 28
  %3277 = sext i32 %3276 to i64
  %3278 = getelementptr inbounds i8, i8* %7, i64 %3277
  %3279 = load i8, i8* %3278, align 1, !tbaa !394
  %3280 = insertelement <32 x i8> %3275, i8 %3279, i32 28
  %3281 = extractelement <32 x i32> %3135, i32 29
  %3282 = sext i32 %3281 to i64
  %3283 = getelementptr inbounds i8, i8* %7, i64 %3282
  %3284 = load i8, i8* %3283, align 1, !tbaa !394
  %3285 = insertelement <32 x i8> %3280, i8 %3284, i32 29
  %3286 = extractelement <32 x i32> %3135, i32 30
  %3287 = sext i32 %3286 to i64
  %3288 = getelementptr inbounds i8, i8* %7, i64 %3287
  %3289 = load i8, i8* %3288, align 1, !tbaa !394
  %3290 = insertelement <32 x i8> %3285, i8 %3289, i32 30
  %3291 = extractelement <32 x i32> %3135, i32 31
  %3292 = sext i32 %3291 to i64
  %3293 = getelementptr inbounds i8, i8* %7, i64 %3292
  %3294 = load i8, i8* %3293, align 1, !tbaa !394
  %t203.s = insertelement <32 x i8> %3290, i8 %3294, i32 31
  %3295 = add nsw i32 %3109, 1
  %3296 = insertelement <32 x i32> undef, i32 %3295, i32 0
  %3297 = shufflevector <32 x i32> %3296, <32 x i32> undef, <32 x i32> zeroinitializer
  %a80 = add nsw <32 x i32> %3297, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3298 = shufflevector <32 x i32> %a80, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3299 = icmp sgt <16 x i32> %243, %3298
  %3300 = shufflevector <32 x i32> %a80, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3301 = icmp sgt <16 x i32> %243, %3300
  %3302 = select <16 x i1> %3299, <16 x i32> %3298, <16 x i32> %243
  %3303 = select <16 x i1> %3301, <16 x i32> %3300, <16 x i32> %243
  %3304 = icmp sgt <16 x i32> %3302, %245
  %3305 = icmp sgt <16 x i32> %3303, %245
  %3306 = select <16 x i1> %3304, <16 x i32> %3302, <16 x i32> %245
  %3307 = select <16 x i1> %3305, <16 x i32> %3303, <16 x i32> %245
  %t204 = shufflevector <16 x i32> %3306, <16 x i32> %3307, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3308 = add nsw <32 x i32> %t204, %3101
  %3309 = extractelement <32 x i32> %3308, i32 0
  %3310 = sext i32 %3309 to i64
  %3311 = getelementptr inbounds i8, i8* %7, i64 %3310
  %3312 = load i8, i8* %3311, align 1, !tbaa !394
  %3313 = insertelement <32 x i8> undef, i8 %3312, i32 0
  %3314 = extractelement <32 x i32> %3308, i32 1
  %3315 = sext i32 %3314 to i64
  %3316 = getelementptr inbounds i8, i8* %7, i64 %3315
  %3317 = load i8, i8* %3316, align 1, !tbaa !394
  %3318 = insertelement <32 x i8> %3313, i8 %3317, i32 1
  %3319 = extractelement <32 x i32> %3308, i32 2
  %3320 = sext i32 %3319 to i64
  %3321 = getelementptr inbounds i8, i8* %7, i64 %3320
  %3322 = load i8, i8* %3321, align 1, !tbaa !394
  %3323 = insertelement <32 x i8> %3318, i8 %3322, i32 2
  %3324 = extractelement <32 x i32> %3308, i32 3
  %3325 = sext i32 %3324 to i64
  %3326 = getelementptr inbounds i8, i8* %7, i64 %3325
  %3327 = load i8, i8* %3326, align 1, !tbaa !394
  %3328 = insertelement <32 x i8> %3323, i8 %3327, i32 3
  %3329 = extractelement <32 x i32> %3308, i32 4
  %3330 = sext i32 %3329 to i64
  %3331 = getelementptr inbounds i8, i8* %7, i64 %3330
  %3332 = load i8, i8* %3331, align 1, !tbaa !394
  %3333 = insertelement <32 x i8> %3328, i8 %3332, i32 4
  %3334 = extractelement <32 x i32> %3308, i32 5
  %3335 = sext i32 %3334 to i64
  %3336 = getelementptr inbounds i8, i8* %7, i64 %3335
  %3337 = load i8, i8* %3336, align 1, !tbaa !394
  %3338 = insertelement <32 x i8> %3333, i8 %3337, i32 5
  %3339 = extractelement <32 x i32> %3308, i32 6
  %3340 = sext i32 %3339 to i64
  %3341 = getelementptr inbounds i8, i8* %7, i64 %3340
  %3342 = load i8, i8* %3341, align 1, !tbaa !394
  %3343 = insertelement <32 x i8> %3338, i8 %3342, i32 6
  %3344 = extractelement <32 x i32> %3308, i32 7
  %3345 = sext i32 %3344 to i64
  %3346 = getelementptr inbounds i8, i8* %7, i64 %3345
  %3347 = load i8, i8* %3346, align 1, !tbaa !394
  %3348 = insertelement <32 x i8> %3343, i8 %3347, i32 7
  %3349 = extractelement <32 x i32> %3308, i32 8
  %3350 = sext i32 %3349 to i64
  %3351 = getelementptr inbounds i8, i8* %7, i64 %3350
  %3352 = load i8, i8* %3351, align 1, !tbaa !394
  %3353 = insertelement <32 x i8> %3348, i8 %3352, i32 8
  %3354 = extractelement <32 x i32> %3308, i32 9
  %3355 = sext i32 %3354 to i64
  %3356 = getelementptr inbounds i8, i8* %7, i64 %3355
  %3357 = load i8, i8* %3356, align 1, !tbaa !394
  %3358 = insertelement <32 x i8> %3353, i8 %3357, i32 9
  %3359 = extractelement <32 x i32> %3308, i32 10
  %3360 = sext i32 %3359 to i64
  %3361 = getelementptr inbounds i8, i8* %7, i64 %3360
  %3362 = load i8, i8* %3361, align 1, !tbaa !394
  %3363 = insertelement <32 x i8> %3358, i8 %3362, i32 10
  %3364 = extractelement <32 x i32> %3308, i32 11
  %3365 = sext i32 %3364 to i64
  %3366 = getelementptr inbounds i8, i8* %7, i64 %3365
  %3367 = load i8, i8* %3366, align 1, !tbaa !394
  %3368 = insertelement <32 x i8> %3363, i8 %3367, i32 11
  %3369 = extractelement <32 x i32> %3308, i32 12
  %3370 = sext i32 %3369 to i64
  %3371 = getelementptr inbounds i8, i8* %7, i64 %3370
  %3372 = load i8, i8* %3371, align 1, !tbaa !394
  %3373 = insertelement <32 x i8> %3368, i8 %3372, i32 12
  %3374 = extractelement <32 x i32> %3308, i32 13
  %3375 = sext i32 %3374 to i64
  %3376 = getelementptr inbounds i8, i8* %7, i64 %3375
  %3377 = load i8, i8* %3376, align 1, !tbaa !394
  %3378 = insertelement <32 x i8> %3373, i8 %3377, i32 13
  %3379 = extractelement <32 x i32> %3308, i32 14
  %3380 = sext i32 %3379 to i64
  %3381 = getelementptr inbounds i8, i8* %7, i64 %3380
  %3382 = load i8, i8* %3381, align 1, !tbaa !394
  %3383 = insertelement <32 x i8> %3378, i8 %3382, i32 14
  %3384 = extractelement <32 x i32> %3308, i32 15
  %3385 = sext i32 %3384 to i64
  %3386 = getelementptr inbounds i8, i8* %7, i64 %3385
  %3387 = load i8, i8* %3386, align 1, !tbaa !394
  %3388 = insertelement <32 x i8> %3383, i8 %3387, i32 15
  %3389 = extractelement <32 x i32> %3308, i32 16
  %3390 = sext i32 %3389 to i64
  %3391 = getelementptr inbounds i8, i8* %7, i64 %3390
  %3392 = load i8, i8* %3391, align 1, !tbaa !394
  %3393 = insertelement <32 x i8> %3388, i8 %3392, i32 16
  %3394 = extractelement <32 x i32> %3308, i32 17
  %3395 = sext i32 %3394 to i64
  %3396 = getelementptr inbounds i8, i8* %7, i64 %3395
  %3397 = load i8, i8* %3396, align 1, !tbaa !394
  %3398 = insertelement <32 x i8> %3393, i8 %3397, i32 17
  %3399 = extractelement <32 x i32> %3308, i32 18
  %3400 = sext i32 %3399 to i64
  %3401 = getelementptr inbounds i8, i8* %7, i64 %3400
  %3402 = load i8, i8* %3401, align 1, !tbaa !394
  %3403 = insertelement <32 x i8> %3398, i8 %3402, i32 18
  %3404 = extractelement <32 x i32> %3308, i32 19
  %3405 = sext i32 %3404 to i64
  %3406 = getelementptr inbounds i8, i8* %7, i64 %3405
  %3407 = load i8, i8* %3406, align 1, !tbaa !394
  %3408 = insertelement <32 x i8> %3403, i8 %3407, i32 19
  %3409 = extractelement <32 x i32> %3308, i32 20
  %3410 = sext i32 %3409 to i64
  %3411 = getelementptr inbounds i8, i8* %7, i64 %3410
  %3412 = load i8, i8* %3411, align 1, !tbaa !394
  %3413 = insertelement <32 x i8> %3408, i8 %3412, i32 20
  %3414 = extractelement <32 x i32> %3308, i32 21
  %3415 = sext i32 %3414 to i64
  %3416 = getelementptr inbounds i8, i8* %7, i64 %3415
  %3417 = load i8, i8* %3416, align 1, !tbaa !394
  %3418 = insertelement <32 x i8> %3413, i8 %3417, i32 21
  %3419 = extractelement <32 x i32> %3308, i32 22
  %3420 = sext i32 %3419 to i64
  %3421 = getelementptr inbounds i8, i8* %7, i64 %3420
  %3422 = load i8, i8* %3421, align 1, !tbaa !394
  %3423 = insertelement <32 x i8> %3418, i8 %3422, i32 22
  %3424 = extractelement <32 x i32> %3308, i32 23
  %3425 = sext i32 %3424 to i64
  %3426 = getelementptr inbounds i8, i8* %7, i64 %3425
  %3427 = load i8, i8* %3426, align 1, !tbaa !394
  %3428 = insertelement <32 x i8> %3423, i8 %3427, i32 23
  %3429 = extractelement <32 x i32> %3308, i32 24
  %3430 = sext i32 %3429 to i64
  %3431 = getelementptr inbounds i8, i8* %7, i64 %3430
  %3432 = load i8, i8* %3431, align 1, !tbaa !394
  %3433 = insertelement <32 x i8> %3428, i8 %3432, i32 24
  %3434 = extractelement <32 x i32> %3308, i32 25
  %3435 = sext i32 %3434 to i64
  %3436 = getelementptr inbounds i8, i8* %7, i64 %3435
  %3437 = load i8, i8* %3436, align 1, !tbaa !394
  %3438 = insertelement <32 x i8> %3433, i8 %3437, i32 25
  %3439 = extractelement <32 x i32> %3308, i32 26
  %3440 = sext i32 %3439 to i64
  %3441 = getelementptr inbounds i8, i8* %7, i64 %3440
  %3442 = load i8, i8* %3441, align 1, !tbaa !394
  %3443 = insertelement <32 x i8> %3438, i8 %3442, i32 26
  %3444 = extractelement <32 x i32> %3308, i32 27
  %3445 = sext i32 %3444 to i64
  %3446 = getelementptr inbounds i8, i8* %7, i64 %3445
  %3447 = load i8, i8* %3446, align 1, !tbaa !394
  %3448 = insertelement <32 x i8> %3443, i8 %3447, i32 27
  %3449 = extractelement <32 x i32> %3308, i32 28
  %3450 = sext i32 %3449 to i64
  %3451 = getelementptr inbounds i8, i8* %7, i64 %3450
  %3452 = load i8, i8* %3451, align 1, !tbaa !394
  %3453 = insertelement <32 x i8> %3448, i8 %3452, i32 28
  %3454 = extractelement <32 x i32> %3308, i32 29
  %3455 = sext i32 %3454 to i64
  %3456 = getelementptr inbounds i8, i8* %7, i64 %3455
  %3457 = load i8, i8* %3456, align 1, !tbaa !394
  %3458 = insertelement <32 x i8> %3453, i8 %3457, i32 29
  %3459 = extractelement <32 x i32> %3308, i32 30
  %3460 = sext i32 %3459 to i64
  %3461 = getelementptr inbounds i8, i8* %7, i64 %3460
  %3462 = load i8, i8* %3461, align 1, !tbaa !394
  %3463 = insertelement <32 x i8> %3458, i8 %3462, i32 30
  %3464 = extractelement <32 x i32> %3308, i32 31
  %3465 = sext i32 %3464 to i64
  %3466 = getelementptr inbounds i8, i8* %7, i64 %3465
  %3467 = load i8, i8* %3466, align 1, !tbaa !394
  %t205.s = insertelement <32 x i8> %3463, i8 %3467, i32 31
  %3468 = add nsw <32 x i32> %t202, %3103
  %3469 = extractelement <32 x i32> %3468, i32 0
  %3470 = sext i32 %3469 to i64
  %3471 = getelementptr inbounds i8, i8* %7, i64 %3470
  %3472 = load i8, i8* %3471, align 1, !tbaa !394
  %3473 = insertelement <32 x i8> undef, i8 %3472, i32 0
  %3474 = extractelement <32 x i32> %3468, i32 1
  %3475 = sext i32 %3474 to i64
  %3476 = getelementptr inbounds i8, i8* %7, i64 %3475
  %3477 = load i8, i8* %3476, align 1, !tbaa !394
  %3478 = insertelement <32 x i8> %3473, i8 %3477, i32 1
  %3479 = extractelement <32 x i32> %3468, i32 2
  %3480 = sext i32 %3479 to i64
  %3481 = getelementptr inbounds i8, i8* %7, i64 %3480
  %3482 = load i8, i8* %3481, align 1, !tbaa !394
  %3483 = insertelement <32 x i8> %3478, i8 %3482, i32 2
  %3484 = extractelement <32 x i32> %3468, i32 3
  %3485 = sext i32 %3484 to i64
  %3486 = getelementptr inbounds i8, i8* %7, i64 %3485
  %3487 = load i8, i8* %3486, align 1, !tbaa !394
  %3488 = insertelement <32 x i8> %3483, i8 %3487, i32 3
  %3489 = extractelement <32 x i32> %3468, i32 4
  %3490 = sext i32 %3489 to i64
  %3491 = getelementptr inbounds i8, i8* %7, i64 %3490
  %3492 = load i8, i8* %3491, align 1, !tbaa !394
  %3493 = insertelement <32 x i8> %3488, i8 %3492, i32 4
  %3494 = extractelement <32 x i32> %3468, i32 5
  %3495 = sext i32 %3494 to i64
  %3496 = getelementptr inbounds i8, i8* %7, i64 %3495
  %3497 = load i8, i8* %3496, align 1, !tbaa !394
  %3498 = insertelement <32 x i8> %3493, i8 %3497, i32 5
  %3499 = extractelement <32 x i32> %3468, i32 6
  %3500 = sext i32 %3499 to i64
  %3501 = getelementptr inbounds i8, i8* %7, i64 %3500
  %3502 = load i8, i8* %3501, align 1, !tbaa !394
  %3503 = insertelement <32 x i8> %3498, i8 %3502, i32 6
  %3504 = extractelement <32 x i32> %3468, i32 7
  %3505 = sext i32 %3504 to i64
  %3506 = getelementptr inbounds i8, i8* %7, i64 %3505
  %3507 = load i8, i8* %3506, align 1, !tbaa !394
  %3508 = insertelement <32 x i8> %3503, i8 %3507, i32 7
  %3509 = extractelement <32 x i32> %3468, i32 8
  %3510 = sext i32 %3509 to i64
  %3511 = getelementptr inbounds i8, i8* %7, i64 %3510
  %3512 = load i8, i8* %3511, align 1, !tbaa !394
  %3513 = insertelement <32 x i8> %3508, i8 %3512, i32 8
  %3514 = extractelement <32 x i32> %3468, i32 9
  %3515 = sext i32 %3514 to i64
  %3516 = getelementptr inbounds i8, i8* %7, i64 %3515
  %3517 = load i8, i8* %3516, align 1, !tbaa !394
  %3518 = insertelement <32 x i8> %3513, i8 %3517, i32 9
  %3519 = extractelement <32 x i32> %3468, i32 10
  %3520 = sext i32 %3519 to i64
  %3521 = getelementptr inbounds i8, i8* %7, i64 %3520
  %3522 = load i8, i8* %3521, align 1, !tbaa !394
  %3523 = insertelement <32 x i8> %3518, i8 %3522, i32 10
  %3524 = extractelement <32 x i32> %3468, i32 11
  %3525 = sext i32 %3524 to i64
  %3526 = getelementptr inbounds i8, i8* %7, i64 %3525
  %3527 = load i8, i8* %3526, align 1, !tbaa !394
  %3528 = insertelement <32 x i8> %3523, i8 %3527, i32 11
  %3529 = extractelement <32 x i32> %3468, i32 12
  %3530 = sext i32 %3529 to i64
  %3531 = getelementptr inbounds i8, i8* %7, i64 %3530
  %3532 = load i8, i8* %3531, align 1, !tbaa !394
  %3533 = insertelement <32 x i8> %3528, i8 %3532, i32 12
  %3534 = extractelement <32 x i32> %3468, i32 13
  %3535 = sext i32 %3534 to i64
  %3536 = getelementptr inbounds i8, i8* %7, i64 %3535
  %3537 = load i8, i8* %3536, align 1, !tbaa !394
  %3538 = insertelement <32 x i8> %3533, i8 %3537, i32 13
  %3539 = extractelement <32 x i32> %3468, i32 14
  %3540 = sext i32 %3539 to i64
  %3541 = getelementptr inbounds i8, i8* %7, i64 %3540
  %3542 = load i8, i8* %3541, align 1, !tbaa !394
  %3543 = insertelement <32 x i8> %3538, i8 %3542, i32 14
  %3544 = extractelement <32 x i32> %3468, i32 15
  %3545 = sext i32 %3544 to i64
  %3546 = getelementptr inbounds i8, i8* %7, i64 %3545
  %3547 = load i8, i8* %3546, align 1, !tbaa !394
  %3548 = insertelement <32 x i8> %3543, i8 %3547, i32 15
  %3549 = extractelement <32 x i32> %3468, i32 16
  %3550 = sext i32 %3549 to i64
  %3551 = getelementptr inbounds i8, i8* %7, i64 %3550
  %3552 = load i8, i8* %3551, align 1, !tbaa !394
  %3553 = insertelement <32 x i8> %3548, i8 %3552, i32 16
  %3554 = extractelement <32 x i32> %3468, i32 17
  %3555 = sext i32 %3554 to i64
  %3556 = getelementptr inbounds i8, i8* %7, i64 %3555
  %3557 = load i8, i8* %3556, align 1, !tbaa !394
  %3558 = insertelement <32 x i8> %3553, i8 %3557, i32 17
  %3559 = extractelement <32 x i32> %3468, i32 18
  %3560 = sext i32 %3559 to i64
  %3561 = getelementptr inbounds i8, i8* %7, i64 %3560
  %3562 = load i8, i8* %3561, align 1, !tbaa !394
  %3563 = insertelement <32 x i8> %3558, i8 %3562, i32 18
  %3564 = extractelement <32 x i32> %3468, i32 19
  %3565 = sext i32 %3564 to i64
  %3566 = getelementptr inbounds i8, i8* %7, i64 %3565
  %3567 = load i8, i8* %3566, align 1, !tbaa !394
  %3568 = insertelement <32 x i8> %3563, i8 %3567, i32 19
  %3569 = extractelement <32 x i32> %3468, i32 20
  %3570 = sext i32 %3569 to i64
  %3571 = getelementptr inbounds i8, i8* %7, i64 %3570
  %3572 = load i8, i8* %3571, align 1, !tbaa !394
  %3573 = insertelement <32 x i8> %3568, i8 %3572, i32 20
  %3574 = extractelement <32 x i32> %3468, i32 21
  %3575 = sext i32 %3574 to i64
  %3576 = getelementptr inbounds i8, i8* %7, i64 %3575
  %3577 = load i8, i8* %3576, align 1, !tbaa !394
  %3578 = insertelement <32 x i8> %3573, i8 %3577, i32 21
  %3579 = extractelement <32 x i32> %3468, i32 22
  %3580 = sext i32 %3579 to i64
  %3581 = getelementptr inbounds i8, i8* %7, i64 %3580
  %3582 = load i8, i8* %3581, align 1, !tbaa !394
  %3583 = insertelement <32 x i8> %3578, i8 %3582, i32 22
  %3584 = extractelement <32 x i32> %3468, i32 23
  %3585 = sext i32 %3584 to i64
  %3586 = getelementptr inbounds i8, i8* %7, i64 %3585
  %3587 = load i8, i8* %3586, align 1, !tbaa !394
  %3588 = insertelement <32 x i8> %3583, i8 %3587, i32 23
  %3589 = extractelement <32 x i32> %3468, i32 24
  %3590 = sext i32 %3589 to i64
  %3591 = getelementptr inbounds i8, i8* %7, i64 %3590
  %3592 = load i8, i8* %3591, align 1, !tbaa !394
  %3593 = insertelement <32 x i8> %3588, i8 %3592, i32 24
  %3594 = extractelement <32 x i32> %3468, i32 25
  %3595 = sext i32 %3594 to i64
  %3596 = getelementptr inbounds i8, i8* %7, i64 %3595
  %3597 = load i8, i8* %3596, align 1, !tbaa !394
  %3598 = insertelement <32 x i8> %3593, i8 %3597, i32 25
  %3599 = extractelement <32 x i32> %3468, i32 26
  %3600 = sext i32 %3599 to i64
  %3601 = getelementptr inbounds i8, i8* %7, i64 %3600
  %3602 = load i8, i8* %3601, align 1, !tbaa !394
  %3603 = insertelement <32 x i8> %3598, i8 %3602, i32 26
  %3604 = extractelement <32 x i32> %3468, i32 27
  %3605 = sext i32 %3604 to i64
  %3606 = getelementptr inbounds i8, i8* %7, i64 %3605
  %3607 = load i8, i8* %3606, align 1, !tbaa !394
  %3608 = insertelement <32 x i8> %3603, i8 %3607, i32 27
  %3609 = extractelement <32 x i32> %3468, i32 28
  %3610 = sext i32 %3609 to i64
  %3611 = getelementptr inbounds i8, i8* %7, i64 %3610
  %3612 = load i8, i8* %3611, align 1, !tbaa !394
  %3613 = insertelement <32 x i8> %3608, i8 %3612, i32 28
  %3614 = extractelement <32 x i32> %3468, i32 29
  %3615 = sext i32 %3614 to i64
  %3616 = getelementptr inbounds i8, i8* %7, i64 %3615
  %3617 = load i8, i8* %3616, align 1, !tbaa !394
  %3618 = insertelement <32 x i8> %3613, i8 %3617, i32 29
  %3619 = extractelement <32 x i32> %3468, i32 30
  %3620 = sext i32 %3619 to i64
  %3621 = getelementptr inbounds i8, i8* %7, i64 %3620
  %3622 = load i8, i8* %3621, align 1, !tbaa !394
  %3623 = insertelement <32 x i8> %3618, i8 %3622, i32 30
  %3624 = extractelement <32 x i32> %3468, i32 31
  %3625 = sext i32 %3624 to i64
  %3626 = getelementptr inbounds i8, i8* %7, i64 %3625
  %3627 = load i8, i8* %3626, align 1, !tbaa !394
  %t207.s = insertelement <32 x i8> %3623, i8 %3627, i32 31
  %3628 = add nsw <32 x i32> %t204, %3103
  %3629 = extractelement <32 x i32> %3628, i32 0
  %3630 = sext i32 %3629 to i64
  %3631 = getelementptr inbounds i8, i8* %7, i64 %3630
  %3632 = load i8, i8* %3631, align 1, !tbaa !394
  %3633 = insertelement <32 x i8> undef, i8 %3632, i32 0
  %3634 = extractelement <32 x i32> %3628, i32 1
  %3635 = sext i32 %3634 to i64
  %3636 = getelementptr inbounds i8, i8* %7, i64 %3635
  %3637 = load i8, i8* %3636, align 1, !tbaa !394
  %3638 = insertelement <32 x i8> %3633, i8 %3637, i32 1
  %3639 = extractelement <32 x i32> %3628, i32 2
  %3640 = sext i32 %3639 to i64
  %3641 = getelementptr inbounds i8, i8* %7, i64 %3640
  %3642 = load i8, i8* %3641, align 1, !tbaa !394
  %3643 = insertelement <32 x i8> %3638, i8 %3642, i32 2
  %3644 = extractelement <32 x i32> %3628, i32 3
  %3645 = sext i32 %3644 to i64
  %3646 = getelementptr inbounds i8, i8* %7, i64 %3645
  %3647 = load i8, i8* %3646, align 1, !tbaa !394
  %3648 = insertelement <32 x i8> %3643, i8 %3647, i32 3
  %3649 = extractelement <32 x i32> %3628, i32 4
  %3650 = sext i32 %3649 to i64
  %3651 = getelementptr inbounds i8, i8* %7, i64 %3650
  %3652 = load i8, i8* %3651, align 1, !tbaa !394
  %3653 = insertelement <32 x i8> %3648, i8 %3652, i32 4
  %3654 = extractelement <32 x i32> %3628, i32 5
  %3655 = sext i32 %3654 to i64
  %3656 = getelementptr inbounds i8, i8* %7, i64 %3655
  %3657 = load i8, i8* %3656, align 1, !tbaa !394
  %3658 = insertelement <32 x i8> %3653, i8 %3657, i32 5
  %3659 = extractelement <32 x i32> %3628, i32 6
  %3660 = sext i32 %3659 to i64
  %3661 = getelementptr inbounds i8, i8* %7, i64 %3660
  %3662 = load i8, i8* %3661, align 1, !tbaa !394
  %3663 = insertelement <32 x i8> %3658, i8 %3662, i32 6
  %3664 = extractelement <32 x i32> %3628, i32 7
  %3665 = sext i32 %3664 to i64
  %3666 = getelementptr inbounds i8, i8* %7, i64 %3665
  %3667 = load i8, i8* %3666, align 1, !tbaa !394
  %3668 = insertelement <32 x i8> %3663, i8 %3667, i32 7
  %3669 = extractelement <32 x i32> %3628, i32 8
  %3670 = sext i32 %3669 to i64
  %3671 = getelementptr inbounds i8, i8* %7, i64 %3670
  %3672 = load i8, i8* %3671, align 1, !tbaa !394
  %3673 = insertelement <32 x i8> %3668, i8 %3672, i32 8
  %3674 = extractelement <32 x i32> %3628, i32 9
  %3675 = sext i32 %3674 to i64
  %3676 = getelementptr inbounds i8, i8* %7, i64 %3675
  %3677 = load i8, i8* %3676, align 1, !tbaa !394
  %3678 = insertelement <32 x i8> %3673, i8 %3677, i32 9
  %3679 = extractelement <32 x i32> %3628, i32 10
  %3680 = sext i32 %3679 to i64
  %3681 = getelementptr inbounds i8, i8* %7, i64 %3680
  %3682 = load i8, i8* %3681, align 1, !tbaa !394
  %3683 = insertelement <32 x i8> %3678, i8 %3682, i32 10
  %3684 = extractelement <32 x i32> %3628, i32 11
  %3685 = sext i32 %3684 to i64
  %3686 = getelementptr inbounds i8, i8* %7, i64 %3685
  %3687 = load i8, i8* %3686, align 1, !tbaa !394
  %3688 = insertelement <32 x i8> %3683, i8 %3687, i32 11
  %3689 = extractelement <32 x i32> %3628, i32 12
  %3690 = sext i32 %3689 to i64
  %3691 = getelementptr inbounds i8, i8* %7, i64 %3690
  %3692 = load i8, i8* %3691, align 1, !tbaa !394
  %3693 = insertelement <32 x i8> %3688, i8 %3692, i32 12
  %3694 = extractelement <32 x i32> %3628, i32 13
  %3695 = sext i32 %3694 to i64
  %3696 = getelementptr inbounds i8, i8* %7, i64 %3695
  %3697 = load i8, i8* %3696, align 1, !tbaa !394
  %3698 = insertelement <32 x i8> %3693, i8 %3697, i32 13
  %3699 = extractelement <32 x i32> %3628, i32 14
  %3700 = sext i32 %3699 to i64
  %3701 = getelementptr inbounds i8, i8* %7, i64 %3700
  %3702 = load i8, i8* %3701, align 1, !tbaa !394
  %3703 = insertelement <32 x i8> %3698, i8 %3702, i32 14
  %3704 = extractelement <32 x i32> %3628, i32 15
  %3705 = sext i32 %3704 to i64
  %3706 = getelementptr inbounds i8, i8* %7, i64 %3705
  %3707 = load i8, i8* %3706, align 1, !tbaa !394
  %3708 = insertelement <32 x i8> %3703, i8 %3707, i32 15
  %3709 = extractelement <32 x i32> %3628, i32 16
  %3710 = sext i32 %3709 to i64
  %3711 = getelementptr inbounds i8, i8* %7, i64 %3710
  %3712 = load i8, i8* %3711, align 1, !tbaa !394
  %3713 = insertelement <32 x i8> %3708, i8 %3712, i32 16
  %3714 = extractelement <32 x i32> %3628, i32 17
  %3715 = sext i32 %3714 to i64
  %3716 = getelementptr inbounds i8, i8* %7, i64 %3715
  %3717 = load i8, i8* %3716, align 1, !tbaa !394
  %3718 = insertelement <32 x i8> %3713, i8 %3717, i32 17
  %3719 = extractelement <32 x i32> %3628, i32 18
  %3720 = sext i32 %3719 to i64
  %3721 = getelementptr inbounds i8, i8* %7, i64 %3720
  %3722 = load i8, i8* %3721, align 1, !tbaa !394
  %3723 = insertelement <32 x i8> %3718, i8 %3722, i32 18
  %3724 = extractelement <32 x i32> %3628, i32 19
  %3725 = sext i32 %3724 to i64
  %3726 = getelementptr inbounds i8, i8* %7, i64 %3725
  %3727 = load i8, i8* %3726, align 1, !tbaa !394
  %3728 = insertelement <32 x i8> %3723, i8 %3727, i32 19
  %3729 = extractelement <32 x i32> %3628, i32 20
  %3730 = sext i32 %3729 to i64
  %3731 = getelementptr inbounds i8, i8* %7, i64 %3730
  %3732 = load i8, i8* %3731, align 1, !tbaa !394
  %3733 = insertelement <32 x i8> %3728, i8 %3732, i32 20
  %3734 = extractelement <32 x i32> %3628, i32 21
  %3735 = sext i32 %3734 to i64
  %3736 = getelementptr inbounds i8, i8* %7, i64 %3735
  %3737 = load i8, i8* %3736, align 1, !tbaa !394
  %3738 = insertelement <32 x i8> %3733, i8 %3737, i32 21
  %3739 = extractelement <32 x i32> %3628, i32 22
  %3740 = sext i32 %3739 to i64
  %3741 = getelementptr inbounds i8, i8* %7, i64 %3740
  %3742 = load i8, i8* %3741, align 1, !tbaa !394
  %3743 = insertelement <32 x i8> %3738, i8 %3742, i32 22
  %3744 = extractelement <32 x i32> %3628, i32 23
  %3745 = sext i32 %3744 to i64
  %3746 = getelementptr inbounds i8, i8* %7, i64 %3745
  %3747 = load i8, i8* %3746, align 1, !tbaa !394
  %3748 = insertelement <32 x i8> %3743, i8 %3747, i32 23
  %3749 = extractelement <32 x i32> %3628, i32 24
  %3750 = sext i32 %3749 to i64
  %3751 = getelementptr inbounds i8, i8* %7, i64 %3750
  %3752 = load i8, i8* %3751, align 1, !tbaa !394
  %3753 = insertelement <32 x i8> %3748, i8 %3752, i32 24
  %3754 = extractelement <32 x i32> %3628, i32 25
  %3755 = sext i32 %3754 to i64
  %3756 = getelementptr inbounds i8, i8* %7, i64 %3755
  %3757 = load i8, i8* %3756, align 1, !tbaa !394
  %3758 = insertelement <32 x i8> %3753, i8 %3757, i32 25
  %3759 = extractelement <32 x i32> %3628, i32 26
  %3760 = sext i32 %3759 to i64
  %3761 = getelementptr inbounds i8, i8* %7, i64 %3760
  %3762 = load i8, i8* %3761, align 1, !tbaa !394
  %3763 = insertelement <32 x i8> %3758, i8 %3762, i32 26
  %3764 = extractelement <32 x i32> %3628, i32 27
  %3765 = sext i32 %3764 to i64
  %3766 = getelementptr inbounds i8, i8* %7, i64 %3765
  %3767 = load i8, i8* %3766, align 1, !tbaa !394
  %3768 = insertelement <32 x i8> %3763, i8 %3767, i32 27
  %3769 = extractelement <32 x i32> %3628, i32 28
  %3770 = sext i32 %3769 to i64
  %3771 = getelementptr inbounds i8, i8* %7, i64 %3770
  %3772 = load i8, i8* %3771, align 1, !tbaa !394
  %3773 = insertelement <32 x i8> %3768, i8 %3772, i32 28
  %3774 = extractelement <32 x i32> %3628, i32 29
  %3775 = sext i32 %3774 to i64
  %3776 = getelementptr inbounds i8, i8* %7, i64 %3775
  %3777 = load i8, i8* %3776, align 1, !tbaa !394
  %3778 = insertelement <32 x i8> %3773, i8 %3777, i32 29
  %3779 = extractelement <32 x i32> %3628, i32 30
  %3780 = sext i32 %3779 to i64
  %3781 = getelementptr inbounds i8, i8* %7, i64 %3780
  %3782 = load i8, i8* %3781, align 1, !tbaa !394
  %3783 = insertelement <32 x i8> %3778, i8 %3782, i32 30
  %3784 = extractelement <32 x i32> %3628, i32 31
  %3785 = sext i32 %3784 to i64
  %3786 = getelementptr inbounds i8, i8* %7, i64 %3785
  %3787 = load i8, i8* %3786, align 1, !tbaa !394
  %t208.s = insertelement <32 x i8> %3783, i8 %3787, i32 31
  %3788 = add nsw <32 x i32> %t199, %3101
  %3789 = extractelement <32 x i32> %3788, i32 0
  %3790 = sext i32 %3789 to i64
  %3791 = getelementptr inbounds i8, i8* %7, i64 %3790
  %3792 = load i8, i8* %3791, align 1, !tbaa !394
  %3793 = insertelement <32 x i8> undef, i8 %3792, i32 0
  %3794 = extractelement <32 x i32> %3788, i32 1
  %3795 = sext i32 %3794 to i64
  %3796 = getelementptr inbounds i8, i8* %7, i64 %3795
  %3797 = load i8, i8* %3796, align 1, !tbaa !394
  %3798 = insertelement <32 x i8> %3793, i8 %3797, i32 1
  %3799 = extractelement <32 x i32> %3788, i32 2
  %3800 = sext i32 %3799 to i64
  %3801 = getelementptr inbounds i8, i8* %7, i64 %3800
  %3802 = load i8, i8* %3801, align 1, !tbaa !394
  %3803 = insertelement <32 x i8> %3798, i8 %3802, i32 2
  %3804 = extractelement <32 x i32> %3788, i32 3
  %3805 = sext i32 %3804 to i64
  %3806 = getelementptr inbounds i8, i8* %7, i64 %3805
  %3807 = load i8, i8* %3806, align 1, !tbaa !394
  %3808 = insertelement <32 x i8> %3803, i8 %3807, i32 3
  %3809 = extractelement <32 x i32> %3788, i32 4
  %3810 = sext i32 %3809 to i64
  %3811 = getelementptr inbounds i8, i8* %7, i64 %3810
  %3812 = load i8, i8* %3811, align 1, !tbaa !394
  %3813 = insertelement <32 x i8> %3808, i8 %3812, i32 4
  %3814 = extractelement <32 x i32> %3788, i32 5
  %3815 = sext i32 %3814 to i64
  %3816 = getelementptr inbounds i8, i8* %7, i64 %3815
  %3817 = load i8, i8* %3816, align 1, !tbaa !394
  %3818 = insertelement <32 x i8> %3813, i8 %3817, i32 5
  %3819 = extractelement <32 x i32> %3788, i32 6
  %3820 = sext i32 %3819 to i64
  %3821 = getelementptr inbounds i8, i8* %7, i64 %3820
  %3822 = load i8, i8* %3821, align 1, !tbaa !394
  %3823 = insertelement <32 x i8> %3818, i8 %3822, i32 6
  %3824 = extractelement <32 x i32> %3788, i32 7
  %3825 = sext i32 %3824 to i64
  %3826 = getelementptr inbounds i8, i8* %7, i64 %3825
  %3827 = load i8, i8* %3826, align 1, !tbaa !394
  %3828 = insertelement <32 x i8> %3823, i8 %3827, i32 7
  %3829 = extractelement <32 x i32> %3788, i32 8
  %3830 = sext i32 %3829 to i64
  %3831 = getelementptr inbounds i8, i8* %7, i64 %3830
  %3832 = load i8, i8* %3831, align 1, !tbaa !394
  %3833 = insertelement <32 x i8> %3828, i8 %3832, i32 8
  %3834 = extractelement <32 x i32> %3788, i32 9
  %3835 = sext i32 %3834 to i64
  %3836 = getelementptr inbounds i8, i8* %7, i64 %3835
  %3837 = load i8, i8* %3836, align 1, !tbaa !394
  %3838 = insertelement <32 x i8> %3833, i8 %3837, i32 9
  %3839 = extractelement <32 x i32> %3788, i32 10
  %3840 = sext i32 %3839 to i64
  %3841 = getelementptr inbounds i8, i8* %7, i64 %3840
  %3842 = load i8, i8* %3841, align 1, !tbaa !394
  %3843 = insertelement <32 x i8> %3838, i8 %3842, i32 10
  %3844 = extractelement <32 x i32> %3788, i32 11
  %3845 = sext i32 %3844 to i64
  %3846 = getelementptr inbounds i8, i8* %7, i64 %3845
  %3847 = load i8, i8* %3846, align 1, !tbaa !394
  %3848 = insertelement <32 x i8> %3843, i8 %3847, i32 11
  %3849 = extractelement <32 x i32> %3788, i32 12
  %3850 = sext i32 %3849 to i64
  %3851 = getelementptr inbounds i8, i8* %7, i64 %3850
  %3852 = load i8, i8* %3851, align 1, !tbaa !394
  %3853 = insertelement <32 x i8> %3848, i8 %3852, i32 12
  %3854 = extractelement <32 x i32> %3788, i32 13
  %3855 = sext i32 %3854 to i64
  %3856 = getelementptr inbounds i8, i8* %7, i64 %3855
  %3857 = load i8, i8* %3856, align 1, !tbaa !394
  %3858 = insertelement <32 x i8> %3853, i8 %3857, i32 13
  %3859 = extractelement <32 x i32> %3788, i32 14
  %3860 = sext i32 %3859 to i64
  %3861 = getelementptr inbounds i8, i8* %7, i64 %3860
  %3862 = load i8, i8* %3861, align 1, !tbaa !394
  %3863 = insertelement <32 x i8> %3858, i8 %3862, i32 14
  %3864 = extractelement <32 x i32> %3788, i32 15
  %3865 = sext i32 %3864 to i64
  %3866 = getelementptr inbounds i8, i8* %7, i64 %3865
  %3867 = load i8, i8* %3866, align 1, !tbaa !394
  %3868 = insertelement <32 x i8> %3863, i8 %3867, i32 15
  %3869 = extractelement <32 x i32> %3788, i32 16
  %3870 = sext i32 %3869 to i64
  %3871 = getelementptr inbounds i8, i8* %7, i64 %3870
  %3872 = load i8, i8* %3871, align 1, !tbaa !394
  %3873 = insertelement <32 x i8> %3868, i8 %3872, i32 16
  %3874 = extractelement <32 x i32> %3788, i32 17
  %3875 = sext i32 %3874 to i64
  %3876 = getelementptr inbounds i8, i8* %7, i64 %3875
  %3877 = load i8, i8* %3876, align 1, !tbaa !394
  %3878 = insertelement <32 x i8> %3873, i8 %3877, i32 17
  %3879 = extractelement <32 x i32> %3788, i32 18
  %3880 = sext i32 %3879 to i64
  %3881 = getelementptr inbounds i8, i8* %7, i64 %3880
  %3882 = load i8, i8* %3881, align 1, !tbaa !394
  %3883 = insertelement <32 x i8> %3878, i8 %3882, i32 18
  %3884 = extractelement <32 x i32> %3788, i32 19
  %3885 = sext i32 %3884 to i64
  %3886 = getelementptr inbounds i8, i8* %7, i64 %3885
  %3887 = load i8, i8* %3886, align 1, !tbaa !394
  %3888 = insertelement <32 x i8> %3883, i8 %3887, i32 19
  %3889 = extractelement <32 x i32> %3788, i32 20
  %3890 = sext i32 %3889 to i64
  %3891 = getelementptr inbounds i8, i8* %7, i64 %3890
  %3892 = load i8, i8* %3891, align 1, !tbaa !394
  %3893 = insertelement <32 x i8> %3888, i8 %3892, i32 20
  %3894 = extractelement <32 x i32> %3788, i32 21
  %3895 = sext i32 %3894 to i64
  %3896 = getelementptr inbounds i8, i8* %7, i64 %3895
  %3897 = load i8, i8* %3896, align 1, !tbaa !394
  %3898 = insertelement <32 x i8> %3893, i8 %3897, i32 21
  %3899 = extractelement <32 x i32> %3788, i32 22
  %3900 = sext i32 %3899 to i64
  %3901 = getelementptr inbounds i8, i8* %7, i64 %3900
  %3902 = load i8, i8* %3901, align 1, !tbaa !394
  %3903 = insertelement <32 x i8> %3898, i8 %3902, i32 22
  %3904 = extractelement <32 x i32> %3788, i32 23
  %3905 = sext i32 %3904 to i64
  %3906 = getelementptr inbounds i8, i8* %7, i64 %3905
  %3907 = load i8, i8* %3906, align 1, !tbaa !394
  %3908 = insertelement <32 x i8> %3903, i8 %3907, i32 23
  %3909 = extractelement <32 x i32> %3788, i32 24
  %3910 = sext i32 %3909 to i64
  %3911 = getelementptr inbounds i8, i8* %7, i64 %3910
  %3912 = load i8, i8* %3911, align 1, !tbaa !394
  %3913 = insertelement <32 x i8> %3908, i8 %3912, i32 24
  %3914 = extractelement <32 x i32> %3788, i32 25
  %3915 = sext i32 %3914 to i64
  %3916 = getelementptr inbounds i8, i8* %7, i64 %3915
  %3917 = load i8, i8* %3916, align 1, !tbaa !394
  %3918 = insertelement <32 x i8> %3913, i8 %3917, i32 25
  %3919 = extractelement <32 x i32> %3788, i32 26
  %3920 = sext i32 %3919 to i64
  %3921 = getelementptr inbounds i8, i8* %7, i64 %3920
  %3922 = load i8, i8* %3921, align 1, !tbaa !394
  %3923 = insertelement <32 x i8> %3918, i8 %3922, i32 26
  %3924 = extractelement <32 x i32> %3788, i32 27
  %3925 = sext i32 %3924 to i64
  %3926 = getelementptr inbounds i8, i8* %7, i64 %3925
  %3927 = load i8, i8* %3926, align 1, !tbaa !394
  %3928 = insertelement <32 x i8> %3923, i8 %3927, i32 27
  %3929 = extractelement <32 x i32> %3788, i32 28
  %3930 = sext i32 %3929 to i64
  %3931 = getelementptr inbounds i8, i8* %7, i64 %3930
  %3932 = load i8, i8* %3931, align 1, !tbaa !394
  %3933 = insertelement <32 x i8> %3928, i8 %3932, i32 28
  %3934 = extractelement <32 x i32> %3788, i32 29
  %3935 = sext i32 %3934 to i64
  %3936 = getelementptr inbounds i8, i8* %7, i64 %3935
  %3937 = load i8, i8* %3936, align 1, !tbaa !394
  %3938 = insertelement <32 x i8> %3933, i8 %3937, i32 29
  %3939 = extractelement <32 x i32> %3788, i32 30
  %3940 = sext i32 %3939 to i64
  %3941 = getelementptr inbounds i8, i8* %7, i64 %3940
  %3942 = load i8, i8* %3941, align 1, !tbaa !394
  %3943 = insertelement <32 x i8> %3938, i8 %3942, i32 30
  %3944 = extractelement <32 x i32> %3788, i32 31
  %3945 = sext i32 %3944 to i64
  %3946 = getelementptr inbounds i8, i8* %7, i64 %3945
  %3947 = load i8, i8* %3946, align 1, !tbaa !394
  %3948 = insertelement <32 x i8> %3943, i8 %3947, i32 31
  %3949 = zext <32 x i8> %3948 to <32 x i16>
  %3950 = shl nuw nsw <32 x i16> %3949, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %3951 = zext <32 x i8> %t203.s to <32 x i16>
  %3952 = zext <32 x i8> %t205.s to <32 x i16>
  %3953 = add nuw nsw <32 x i16> %3952, %3951
  %3954 = add nuw nsw <32 x i16> %3953, %3950
  %3955 = add nsw <32 x i32> %t199, %3103
  %3956 = extractelement <32 x i32> %3955, i32 0
  %3957 = sext i32 %3956 to i64
  %3958 = getelementptr inbounds i8, i8* %7, i64 %3957
  %3959 = load i8, i8* %3958, align 1, !tbaa !394
  %3960 = insertelement <32 x i8> undef, i8 %3959, i32 0
  %3961 = extractelement <32 x i32> %3955, i32 1
  %3962 = sext i32 %3961 to i64
  %3963 = getelementptr inbounds i8, i8* %7, i64 %3962
  %3964 = load i8, i8* %3963, align 1, !tbaa !394
  %3965 = insertelement <32 x i8> %3960, i8 %3964, i32 1
  %3966 = extractelement <32 x i32> %3955, i32 2
  %3967 = sext i32 %3966 to i64
  %3968 = getelementptr inbounds i8, i8* %7, i64 %3967
  %3969 = load i8, i8* %3968, align 1, !tbaa !394
  %3970 = insertelement <32 x i8> %3965, i8 %3969, i32 2
  %3971 = extractelement <32 x i32> %3955, i32 3
  %3972 = sext i32 %3971 to i64
  %3973 = getelementptr inbounds i8, i8* %7, i64 %3972
  %3974 = load i8, i8* %3973, align 1, !tbaa !394
  %3975 = insertelement <32 x i8> %3970, i8 %3974, i32 3
  %3976 = extractelement <32 x i32> %3955, i32 4
  %3977 = sext i32 %3976 to i64
  %3978 = getelementptr inbounds i8, i8* %7, i64 %3977
  %3979 = load i8, i8* %3978, align 1, !tbaa !394
  %3980 = insertelement <32 x i8> %3975, i8 %3979, i32 4
  %3981 = extractelement <32 x i32> %3955, i32 5
  %3982 = sext i32 %3981 to i64
  %3983 = getelementptr inbounds i8, i8* %7, i64 %3982
  %3984 = load i8, i8* %3983, align 1, !tbaa !394
  %3985 = insertelement <32 x i8> %3980, i8 %3984, i32 5
  %3986 = extractelement <32 x i32> %3955, i32 6
  %3987 = sext i32 %3986 to i64
  %3988 = getelementptr inbounds i8, i8* %7, i64 %3987
  %3989 = load i8, i8* %3988, align 1, !tbaa !394
  %3990 = insertelement <32 x i8> %3985, i8 %3989, i32 6
  %3991 = extractelement <32 x i32> %3955, i32 7
  %3992 = sext i32 %3991 to i64
  %3993 = getelementptr inbounds i8, i8* %7, i64 %3992
  %3994 = load i8, i8* %3993, align 1, !tbaa !394
  %3995 = insertelement <32 x i8> %3990, i8 %3994, i32 7
  %3996 = extractelement <32 x i32> %3955, i32 8
  %3997 = sext i32 %3996 to i64
  %3998 = getelementptr inbounds i8, i8* %7, i64 %3997
  %3999 = load i8, i8* %3998, align 1, !tbaa !394
  %4000 = insertelement <32 x i8> %3995, i8 %3999, i32 8
  %4001 = extractelement <32 x i32> %3955, i32 9
  %4002 = sext i32 %4001 to i64
  %4003 = getelementptr inbounds i8, i8* %7, i64 %4002
  %4004 = load i8, i8* %4003, align 1, !tbaa !394
  %4005 = insertelement <32 x i8> %4000, i8 %4004, i32 9
  %4006 = extractelement <32 x i32> %3955, i32 10
  %4007 = sext i32 %4006 to i64
  %4008 = getelementptr inbounds i8, i8* %7, i64 %4007
  %4009 = load i8, i8* %4008, align 1, !tbaa !394
  %4010 = insertelement <32 x i8> %4005, i8 %4009, i32 10
  %4011 = extractelement <32 x i32> %3955, i32 11
  %4012 = sext i32 %4011 to i64
  %4013 = getelementptr inbounds i8, i8* %7, i64 %4012
  %4014 = load i8, i8* %4013, align 1, !tbaa !394
  %4015 = insertelement <32 x i8> %4010, i8 %4014, i32 11
  %4016 = extractelement <32 x i32> %3955, i32 12
  %4017 = sext i32 %4016 to i64
  %4018 = getelementptr inbounds i8, i8* %7, i64 %4017
  %4019 = load i8, i8* %4018, align 1, !tbaa !394
  %4020 = insertelement <32 x i8> %4015, i8 %4019, i32 12
  %4021 = extractelement <32 x i32> %3955, i32 13
  %4022 = sext i32 %4021 to i64
  %4023 = getelementptr inbounds i8, i8* %7, i64 %4022
  %4024 = load i8, i8* %4023, align 1, !tbaa !394
  %4025 = insertelement <32 x i8> %4020, i8 %4024, i32 13
  %4026 = extractelement <32 x i32> %3955, i32 14
  %4027 = sext i32 %4026 to i64
  %4028 = getelementptr inbounds i8, i8* %7, i64 %4027
  %4029 = load i8, i8* %4028, align 1, !tbaa !394
  %4030 = insertelement <32 x i8> %4025, i8 %4029, i32 14
  %4031 = extractelement <32 x i32> %3955, i32 15
  %4032 = sext i32 %4031 to i64
  %4033 = getelementptr inbounds i8, i8* %7, i64 %4032
  %4034 = load i8, i8* %4033, align 1, !tbaa !394
  %4035 = insertelement <32 x i8> %4030, i8 %4034, i32 15
  %4036 = extractelement <32 x i32> %3955, i32 16
  %4037 = sext i32 %4036 to i64
  %4038 = getelementptr inbounds i8, i8* %7, i64 %4037
  %4039 = load i8, i8* %4038, align 1, !tbaa !394
  %4040 = insertelement <32 x i8> %4035, i8 %4039, i32 16
  %4041 = extractelement <32 x i32> %3955, i32 17
  %4042 = sext i32 %4041 to i64
  %4043 = getelementptr inbounds i8, i8* %7, i64 %4042
  %4044 = load i8, i8* %4043, align 1, !tbaa !394
  %4045 = insertelement <32 x i8> %4040, i8 %4044, i32 17
  %4046 = extractelement <32 x i32> %3955, i32 18
  %4047 = sext i32 %4046 to i64
  %4048 = getelementptr inbounds i8, i8* %7, i64 %4047
  %4049 = load i8, i8* %4048, align 1, !tbaa !394
  %4050 = insertelement <32 x i8> %4045, i8 %4049, i32 18
  %4051 = extractelement <32 x i32> %3955, i32 19
  %4052 = sext i32 %4051 to i64
  %4053 = getelementptr inbounds i8, i8* %7, i64 %4052
  %4054 = load i8, i8* %4053, align 1, !tbaa !394
  %4055 = insertelement <32 x i8> %4050, i8 %4054, i32 19
  %4056 = extractelement <32 x i32> %3955, i32 20
  %4057 = sext i32 %4056 to i64
  %4058 = getelementptr inbounds i8, i8* %7, i64 %4057
  %4059 = load i8, i8* %4058, align 1, !tbaa !394
  %4060 = insertelement <32 x i8> %4055, i8 %4059, i32 20
  %4061 = extractelement <32 x i32> %3955, i32 21
  %4062 = sext i32 %4061 to i64
  %4063 = getelementptr inbounds i8, i8* %7, i64 %4062
  %4064 = load i8, i8* %4063, align 1, !tbaa !394
  %4065 = insertelement <32 x i8> %4060, i8 %4064, i32 21
  %4066 = extractelement <32 x i32> %3955, i32 22
  %4067 = sext i32 %4066 to i64
  %4068 = getelementptr inbounds i8, i8* %7, i64 %4067
  %4069 = load i8, i8* %4068, align 1, !tbaa !394
  %4070 = insertelement <32 x i8> %4065, i8 %4069, i32 22
  %4071 = extractelement <32 x i32> %3955, i32 23
  %4072 = sext i32 %4071 to i64
  %4073 = getelementptr inbounds i8, i8* %7, i64 %4072
  %4074 = load i8, i8* %4073, align 1, !tbaa !394
  %4075 = insertelement <32 x i8> %4070, i8 %4074, i32 23
  %4076 = extractelement <32 x i32> %3955, i32 24
  %4077 = sext i32 %4076 to i64
  %4078 = getelementptr inbounds i8, i8* %7, i64 %4077
  %4079 = load i8, i8* %4078, align 1, !tbaa !394
  %4080 = insertelement <32 x i8> %4075, i8 %4079, i32 24
  %4081 = extractelement <32 x i32> %3955, i32 25
  %4082 = sext i32 %4081 to i64
  %4083 = getelementptr inbounds i8, i8* %7, i64 %4082
  %4084 = load i8, i8* %4083, align 1, !tbaa !394
  %4085 = insertelement <32 x i8> %4080, i8 %4084, i32 25
  %4086 = extractelement <32 x i32> %3955, i32 26
  %4087 = sext i32 %4086 to i64
  %4088 = getelementptr inbounds i8, i8* %7, i64 %4087
  %4089 = load i8, i8* %4088, align 1, !tbaa !394
  %4090 = insertelement <32 x i8> %4085, i8 %4089, i32 26
  %4091 = extractelement <32 x i32> %3955, i32 27
  %4092 = sext i32 %4091 to i64
  %4093 = getelementptr inbounds i8, i8* %7, i64 %4092
  %4094 = load i8, i8* %4093, align 1, !tbaa !394
  %4095 = insertelement <32 x i8> %4090, i8 %4094, i32 27
  %4096 = extractelement <32 x i32> %3955, i32 28
  %4097 = sext i32 %4096 to i64
  %4098 = getelementptr inbounds i8, i8* %7, i64 %4097
  %4099 = load i8, i8* %4098, align 1, !tbaa !394
  %4100 = insertelement <32 x i8> %4095, i8 %4099, i32 28
  %4101 = extractelement <32 x i32> %3955, i32 29
  %4102 = sext i32 %4101 to i64
  %4103 = getelementptr inbounds i8, i8* %7, i64 %4102
  %4104 = load i8, i8* %4103, align 1, !tbaa !394
  %4105 = insertelement <32 x i8> %4100, i8 %4104, i32 29
  %4106 = extractelement <32 x i32> %3955, i32 30
  %4107 = sext i32 %4106 to i64
  %4108 = getelementptr inbounds i8, i8* %7, i64 %4107
  %4109 = load i8, i8* %4108, align 1, !tbaa !394
  %4110 = insertelement <32 x i8> %4105, i8 %4109, i32 30
  %4111 = extractelement <32 x i32> %3955, i32 31
  %4112 = sext i32 %4111 to i64
  %4113 = getelementptr inbounds i8, i8* %7, i64 %4112
  %4114 = load i8, i8* %4113, align 1, !tbaa !394
  %4115 = insertelement <32 x i8> %4110, i8 %4114, i32 31
  %4116 = zext <32 x i8> %4115 to <32 x i16>
  %4117 = shl nuw nsw <32 x i16> %4116, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %4118 = zext <32 x i8> %t207.s to <32 x i16>
  %4119 = zext <32 x i8> %t208.s to <32 x i16>
  %4120 = add nuw nsw <32 x i16> %4119, %4118
  %4121 = add nuw nsw <32 x i16> %4120, %4117
  %4122 = shufflevector <32 x i16> %3954, <32 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4123 = shufflevector <32 x i16> %4121, <32 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4124 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %4122, <16 x i16> %4123) #10
  %4125 = shufflevector <32 x i16> %3954, <32 x i16> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4126 = shufflevector <32 x i16> %4121, <32 x i16> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4127 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %4125, <16 x i16> %4126) #10
  %4128 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %4123, <16 x i16> %4122) #10
  %4129 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %4126, <16 x i16> %4125) #10
  %4130 = or <16 x i16> %4124, %4128
  %4131 = or <16 x i16> %4127, %4129
  %4132 = add nsw <32 x i32> %t202, %t237
  %4133 = extractelement <32 x i32> %4132, i32 0
  %4134 = sext i32 %4133 to i64
  %4135 = getelementptr inbounds i8, i8* %7, i64 %4134
  %4136 = load i8, i8* %4135, align 1, !tbaa !394
  %4137 = insertelement <32 x i8> undef, i8 %4136, i32 0
  %4138 = extractelement <32 x i32> %4132, i32 1
  %4139 = sext i32 %4138 to i64
  %4140 = getelementptr inbounds i8, i8* %7, i64 %4139
  %4141 = load i8, i8* %4140, align 1, !tbaa !394
  %4142 = insertelement <32 x i8> %4137, i8 %4141, i32 1
  %4143 = extractelement <32 x i32> %4132, i32 2
  %4144 = sext i32 %4143 to i64
  %4145 = getelementptr inbounds i8, i8* %7, i64 %4144
  %4146 = load i8, i8* %4145, align 1, !tbaa !394
  %4147 = insertelement <32 x i8> %4142, i8 %4146, i32 2
  %4148 = extractelement <32 x i32> %4132, i32 3
  %4149 = sext i32 %4148 to i64
  %4150 = getelementptr inbounds i8, i8* %7, i64 %4149
  %4151 = load i8, i8* %4150, align 1, !tbaa !394
  %4152 = insertelement <32 x i8> %4147, i8 %4151, i32 3
  %4153 = extractelement <32 x i32> %4132, i32 4
  %4154 = sext i32 %4153 to i64
  %4155 = getelementptr inbounds i8, i8* %7, i64 %4154
  %4156 = load i8, i8* %4155, align 1, !tbaa !394
  %4157 = insertelement <32 x i8> %4152, i8 %4156, i32 4
  %4158 = extractelement <32 x i32> %4132, i32 5
  %4159 = sext i32 %4158 to i64
  %4160 = getelementptr inbounds i8, i8* %7, i64 %4159
  %4161 = load i8, i8* %4160, align 1, !tbaa !394
  %4162 = insertelement <32 x i8> %4157, i8 %4161, i32 5
  %4163 = extractelement <32 x i32> %4132, i32 6
  %4164 = sext i32 %4163 to i64
  %4165 = getelementptr inbounds i8, i8* %7, i64 %4164
  %4166 = load i8, i8* %4165, align 1, !tbaa !394
  %4167 = insertelement <32 x i8> %4162, i8 %4166, i32 6
  %4168 = extractelement <32 x i32> %4132, i32 7
  %4169 = sext i32 %4168 to i64
  %4170 = getelementptr inbounds i8, i8* %7, i64 %4169
  %4171 = load i8, i8* %4170, align 1, !tbaa !394
  %4172 = insertelement <32 x i8> %4167, i8 %4171, i32 7
  %4173 = extractelement <32 x i32> %4132, i32 8
  %4174 = sext i32 %4173 to i64
  %4175 = getelementptr inbounds i8, i8* %7, i64 %4174
  %4176 = load i8, i8* %4175, align 1, !tbaa !394
  %4177 = insertelement <32 x i8> %4172, i8 %4176, i32 8
  %4178 = extractelement <32 x i32> %4132, i32 9
  %4179 = sext i32 %4178 to i64
  %4180 = getelementptr inbounds i8, i8* %7, i64 %4179
  %4181 = load i8, i8* %4180, align 1, !tbaa !394
  %4182 = insertelement <32 x i8> %4177, i8 %4181, i32 9
  %4183 = extractelement <32 x i32> %4132, i32 10
  %4184 = sext i32 %4183 to i64
  %4185 = getelementptr inbounds i8, i8* %7, i64 %4184
  %4186 = load i8, i8* %4185, align 1, !tbaa !394
  %4187 = insertelement <32 x i8> %4182, i8 %4186, i32 10
  %4188 = extractelement <32 x i32> %4132, i32 11
  %4189 = sext i32 %4188 to i64
  %4190 = getelementptr inbounds i8, i8* %7, i64 %4189
  %4191 = load i8, i8* %4190, align 1, !tbaa !394
  %4192 = insertelement <32 x i8> %4187, i8 %4191, i32 11
  %4193 = extractelement <32 x i32> %4132, i32 12
  %4194 = sext i32 %4193 to i64
  %4195 = getelementptr inbounds i8, i8* %7, i64 %4194
  %4196 = load i8, i8* %4195, align 1, !tbaa !394
  %4197 = insertelement <32 x i8> %4192, i8 %4196, i32 12
  %4198 = extractelement <32 x i32> %4132, i32 13
  %4199 = sext i32 %4198 to i64
  %4200 = getelementptr inbounds i8, i8* %7, i64 %4199
  %4201 = load i8, i8* %4200, align 1, !tbaa !394
  %4202 = insertelement <32 x i8> %4197, i8 %4201, i32 13
  %4203 = extractelement <32 x i32> %4132, i32 14
  %4204 = sext i32 %4203 to i64
  %4205 = getelementptr inbounds i8, i8* %7, i64 %4204
  %4206 = load i8, i8* %4205, align 1, !tbaa !394
  %4207 = insertelement <32 x i8> %4202, i8 %4206, i32 14
  %4208 = extractelement <32 x i32> %4132, i32 15
  %4209 = sext i32 %4208 to i64
  %4210 = getelementptr inbounds i8, i8* %7, i64 %4209
  %4211 = load i8, i8* %4210, align 1, !tbaa !394
  %4212 = insertelement <32 x i8> %4207, i8 %4211, i32 15
  %4213 = extractelement <32 x i32> %4132, i32 16
  %4214 = sext i32 %4213 to i64
  %4215 = getelementptr inbounds i8, i8* %7, i64 %4214
  %4216 = load i8, i8* %4215, align 1, !tbaa !394
  %4217 = insertelement <32 x i8> %4212, i8 %4216, i32 16
  %4218 = extractelement <32 x i32> %4132, i32 17
  %4219 = sext i32 %4218 to i64
  %4220 = getelementptr inbounds i8, i8* %7, i64 %4219
  %4221 = load i8, i8* %4220, align 1, !tbaa !394
  %4222 = insertelement <32 x i8> %4217, i8 %4221, i32 17
  %4223 = extractelement <32 x i32> %4132, i32 18
  %4224 = sext i32 %4223 to i64
  %4225 = getelementptr inbounds i8, i8* %7, i64 %4224
  %4226 = load i8, i8* %4225, align 1, !tbaa !394
  %4227 = insertelement <32 x i8> %4222, i8 %4226, i32 18
  %4228 = extractelement <32 x i32> %4132, i32 19
  %4229 = sext i32 %4228 to i64
  %4230 = getelementptr inbounds i8, i8* %7, i64 %4229
  %4231 = load i8, i8* %4230, align 1, !tbaa !394
  %4232 = insertelement <32 x i8> %4227, i8 %4231, i32 19
  %4233 = extractelement <32 x i32> %4132, i32 20
  %4234 = sext i32 %4233 to i64
  %4235 = getelementptr inbounds i8, i8* %7, i64 %4234
  %4236 = load i8, i8* %4235, align 1, !tbaa !394
  %4237 = insertelement <32 x i8> %4232, i8 %4236, i32 20
  %4238 = extractelement <32 x i32> %4132, i32 21
  %4239 = sext i32 %4238 to i64
  %4240 = getelementptr inbounds i8, i8* %7, i64 %4239
  %4241 = load i8, i8* %4240, align 1, !tbaa !394
  %4242 = insertelement <32 x i8> %4237, i8 %4241, i32 21
  %4243 = extractelement <32 x i32> %4132, i32 22
  %4244 = sext i32 %4243 to i64
  %4245 = getelementptr inbounds i8, i8* %7, i64 %4244
  %4246 = load i8, i8* %4245, align 1, !tbaa !394
  %4247 = insertelement <32 x i8> %4242, i8 %4246, i32 22
  %4248 = extractelement <32 x i32> %4132, i32 23
  %4249 = sext i32 %4248 to i64
  %4250 = getelementptr inbounds i8, i8* %7, i64 %4249
  %4251 = load i8, i8* %4250, align 1, !tbaa !394
  %4252 = insertelement <32 x i8> %4247, i8 %4251, i32 23
  %4253 = extractelement <32 x i32> %4132, i32 24
  %4254 = sext i32 %4253 to i64
  %4255 = getelementptr inbounds i8, i8* %7, i64 %4254
  %4256 = load i8, i8* %4255, align 1, !tbaa !394
  %4257 = insertelement <32 x i8> %4252, i8 %4256, i32 24
  %4258 = extractelement <32 x i32> %4132, i32 25
  %4259 = sext i32 %4258 to i64
  %4260 = getelementptr inbounds i8, i8* %7, i64 %4259
  %4261 = load i8, i8* %4260, align 1, !tbaa !394
  %4262 = insertelement <32 x i8> %4257, i8 %4261, i32 25
  %4263 = extractelement <32 x i32> %4132, i32 26
  %4264 = sext i32 %4263 to i64
  %4265 = getelementptr inbounds i8, i8* %7, i64 %4264
  %4266 = load i8, i8* %4265, align 1, !tbaa !394
  %4267 = insertelement <32 x i8> %4262, i8 %4266, i32 26
  %4268 = extractelement <32 x i32> %4132, i32 27
  %4269 = sext i32 %4268 to i64
  %4270 = getelementptr inbounds i8, i8* %7, i64 %4269
  %4271 = load i8, i8* %4270, align 1, !tbaa !394
  %4272 = insertelement <32 x i8> %4267, i8 %4271, i32 27
  %4273 = extractelement <32 x i32> %4132, i32 28
  %4274 = sext i32 %4273 to i64
  %4275 = getelementptr inbounds i8, i8* %7, i64 %4274
  %4276 = load i8, i8* %4275, align 1, !tbaa !394
  %4277 = insertelement <32 x i8> %4272, i8 %4276, i32 28
  %4278 = extractelement <32 x i32> %4132, i32 29
  %4279 = sext i32 %4278 to i64
  %4280 = getelementptr inbounds i8, i8* %7, i64 %4279
  %4281 = load i8, i8* %4280, align 1, !tbaa !394
  %4282 = insertelement <32 x i8> %4277, i8 %4281, i32 29
  %4283 = extractelement <32 x i32> %4132, i32 30
  %4284 = sext i32 %4283 to i64
  %4285 = getelementptr inbounds i8, i8* %7, i64 %4284
  %4286 = load i8, i8* %4285, align 1, !tbaa !394
  %4287 = insertelement <32 x i8> %4282, i8 %4286, i32 30
  %4288 = extractelement <32 x i32> %4132, i32 31
  %4289 = sext i32 %4288 to i64
  %4290 = getelementptr inbounds i8, i8* %7, i64 %4289
  %4291 = load i8, i8* %4290, align 1, !tbaa !394
  %4292 = insertelement <32 x i8> %4287, i8 %4291, i32 31
  %4293 = zext <32 x i8> %4292 to <32 x i16>
  %4294 = shl nuw nsw <32 x i16> %4293, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %4295 = add nuw nsw <32 x i16> %4118, %3951
  %4296 = add nuw nsw <32 x i16> %4295, %4294
  %4297 = add nsw <32 x i32> %t204, %t237
  %4298 = extractelement <32 x i32> %4297, i32 0
  %4299 = sext i32 %4298 to i64
  %4300 = getelementptr inbounds i8, i8* %7, i64 %4299
  %4301 = load i8, i8* %4300, align 1, !tbaa !394
  %4302 = insertelement <32 x i8> undef, i8 %4301, i32 0
  %4303 = extractelement <32 x i32> %4297, i32 1
  %4304 = sext i32 %4303 to i64
  %4305 = getelementptr inbounds i8, i8* %7, i64 %4304
  %4306 = load i8, i8* %4305, align 1, !tbaa !394
  %4307 = insertelement <32 x i8> %4302, i8 %4306, i32 1
  %4308 = extractelement <32 x i32> %4297, i32 2
  %4309 = sext i32 %4308 to i64
  %4310 = getelementptr inbounds i8, i8* %7, i64 %4309
  %4311 = load i8, i8* %4310, align 1, !tbaa !394
  %4312 = insertelement <32 x i8> %4307, i8 %4311, i32 2
  %4313 = extractelement <32 x i32> %4297, i32 3
  %4314 = sext i32 %4313 to i64
  %4315 = getelementptr inbounds i8, i8* %7, i64 %4314
  %4316 = load i8, i8* %4315, align 1, !tbaa !394
  %4317 = insertelement <32 x i8> %4312, i8 %4316, i32 3
  %4318 = extractelement <32 x i32> %4297, i32 4
  %4319 = sext i32 %4318 to i64
  %4320 = getelementptr inbounds i8, i8* %7, i64 %4319
  %4321 = load i8, i8* %4320, align 1, !tbaa !394
  %4322 = insertelement <32 x i8> %4317, i8 %4321, i32 4
  %4323 = extractelement <32 x i32> %4297, i32 5
  %4324 = sext i32 %4323 to i64
  %4325 = getelementptr inbounds i8, i8* %7, i64 %4324
  %4326 = load i8, i8* %4325, align 1, !tbaa !394
  %4327 = insertelement <32 x i8> %4322, i8 %4326, i32 5
  %4328 = extractelement <32 x i32> %4297, i32 6
  %4329 = sext i32 %4328 to i64
  %4330 = getelementptr inbounds i8, i8* %7, i64 %4329
  %4331 = load i8, i8* %4330, align 1, !tbaa !394
  %4332 = insertelement <32 x i8> %4327, i8 %4331, i32 6
  %4333 = extractelement <32 x i32> %4297, i32 7
  %4334 = sext i32 %4333 to i64
  %4335 = getelementptr inbounds i8, i8* %7, i64 %4334
  %4336 = load i8, i8* %4335, align 1, !tbaa !394
  %4337 = insertelement <32 x i8> %4332, i8 %4336, i32 7
  %4338 = extractelement <32 x i32> %4297, i32 8
  %4339 = sext i32 %4338 to i64
  %4340 = getelementptr inbounds i8, i8* %7, i64 %4339
  %4341 = load i8, i8* %4340, align 1, !tbaa !394
  %4342 = insertelement <32 x i8> %4337, i8 %4341, i32 8
  %4343 = extractelement <32 x i32> %4297, i32 9
  %4344 = sext i32 %4343 to i64
  %4345 = getelementptr inbounds i8, i8* %7, i64 %4344
  %4346 = load i8, i8* %4345, align 1, !tbaa !394
  %4347 = insertelement <32 x i8> %4342, i8 %4346, i32 9
  %4348 = extractelement <32 x i32> %4297, i32 10
  %4349 = sext i32 %4348 to i64
  %4350 = getelementptr inbounds i8, i8* %7, i64 %4349
  %4351 = load i8, i8* %4350, align 1, !tbaa !394
  %4352 = insertelement <32 x i8> %4347, i8 %4351, i32 10
  %4353 = extractelement <32 x i32> %4297, i32 11
  %4354 = sext i32 %4353 to i64
  %4355 = getelementptr inbounds i8, i8* %7, i64 %4354
  %4356 = load i8, i8* %4355, align 1, !tbaa !394
  %4357 = insertelement <32 x i8> %4352, i8 %4356, i32 11
  %4358 = extractelement <32 x i32> %4297, i32 12
  %4359 = sext i32 %4358 to i64
  %4360 = getelementptr inbounds i8, i8* %7, i64 %4359
  %4361 = load i8, i8* %4360, align 1, !tbaa !394
  %4362 = insertelement <32 x i8> %4357, i8 %4361, i32 12
  %4363 = extractelement <32 x i32> %4297, i32 13
  %4364 = sext i32 %4363 to i64
  %4365 = getelementptr inbounds i8, i8* %7, i64 %4364
  %4366 = load i8, i8* %4365, align 1, !tbaa !394
  %4367 = insertelement <32 x i8> %4362, i8 %4366, i32 13
  %4368 = extractelement <32 x i32> %4297, i32 14
  %4369 = sext i32 %4368 to i64
  %4370 = getelementptr inbounds i8, i8* %7, i64 %4369
  %4371 = load i8, i8* %4370, align 1, !tbaa !394
  %4372 = insertelement <32 x i8> %4367, i8 %4371, i32 14
  %4373 = extractelement <32 x i32> %4297, i32 15
  %4374 = sext i32 %4373 to i64
  %4375 = getelementptr inbounds i8, i8* %7, i64 %4374
  %4376 = load i8, i8* %4375, align 1, !tbaa !394
  %4377 = insertelement <32 x i8> %4372, i8 %4376, i32 15
  %4378 = extractelement <32 x i32> %4297, i32 16
  %4379 = sext i32 %4378 to i64
  %4380 = getelementptr inbounds i8, i8* %7, i64 %4379
  %4381 = load i8, i8* %4380, align 1, !tbaa !394
  %4382 = insertelement <32 x i8> %4377, i8 %4381, i32 16
  %4383 = extractelement <32 x i32> %4297, i32 17
  %4384 = sext i32 %4383 to i64
  %4385 = getelementptr inbounds i8, i8* %7, i64 %4384
  %4386 = load i8, i8* %4385, align 1, !tbaa !394
  %4387 = insertelement <32 x i8> %4382, i8 %4386, i32 17
  %4388 = extractelement <32 x i32> %4297, i32 18
  %4389 = sext i32 %4388 to i64
  %4390 = getelementptr inbounds i8, i8* %7, i64 %4389
  %4391 = load i8, i8* %4390, align 1, !tbaa !394
  %4392 = insertelement <32 x i8> %4387, i8 %4391, i32 18
  %4393 = extractelement <32 x i32> %4297, i32 19
  %4394 = sext i32 %4393 to i64
  %4395 = getelementptr inbounds i8, i8* %7, i64 %4394
  %4396 = load i8, i8* %4395, align 1, !tbaa !394
  %4397 = insertelement <32 x i8> %4392, i8 %4396, i32 19
  %4398 = extractelement <32 x i32> %4297, i32 20
  %4399 = sext i32 %4398 to i64
  %4400 = getelementptr inbounds i8, i8* %7, i64 %4399
  %4401 = load i8, i8* %4400, align 1, !tbaa !394
  %4402 = insertelement <32 x i8> %4397, i8 %4401, i32 20
  %4403 = extractelement <32 x i32> %4297, i32 21
  %4404 = sext i32 %4403 to i64
  %4405 = getelementptr inbounds i8, i8* %7, i64 %4404
  %4406 = load i8, i8* %4405, align 1, !tbaa !394
  %4407 = insertelement <32 x i8> %4402, i8 %4406, i32 21
  %4408 = extractelement <32 x i32> %4297, i32 22
  %4409 = sext i32 %4408 to i64
  %4410 = getelementptr inbounds i8, i8* %7, i64 %4409
  %4411 = load i8, i8* %4410, align 1, !tbaa !394
  %4412 = insertelement <32 x i8> %4407, i8 %4411, i32 22
  %4413 = extractelement <32 x i32> %4297, i32 23
  %4414 = sext i32 %4413 to i64
  %4415 = getelementptr inbounds i8, i8* %7, i64 %4414
  %4416 = load i8, i8* %4415, align 1, !tbaa !394
  %4417 = insertelement <32 x i8> %4412, i8 %4416, i32 23
  %4418 = extractelement <32 x i32> %4297, i32 24
  %4419 = sext i32 %4418 to i64
  %4420 = getelementptr inbounds i8, i8* %7, i64 %4419
  %4421 = load i8, i8* %4420, align 1, !tbaa !394
  %4422 = insertelement <32 x i8> %4417, i8 %4421, i32 24
  %4423 = extractelement <32 x i32> %4297, i32 25
  %4424 = sext i32 %4423 to i64
  %4425 = getelementptr inbounds i8, i8* %7, i64 %4424
  %4426 = load i8, i8* %4425, align 1, !tbaa !394
  %4427 = insertelement <32 x i8> %4422, i8 %4426, i32 25
  %4428 = extractelement <32 x i32> %4297, i32 26
  %4429 = sext i32 %4428 to i64
  %4430 = getelementptr inbounds i8, i8* %7, i64 %4429
  %4431 = load i8, i8* %4430, align 1, !tbaa !394
  %4432 = insertelement <32 x i8> %4427, i8 %4431, i32 26
  %4433 = extractelement <32 x i32> %4297, i32 27
  %4434 = sext i32 %4433 to i64
  %4435 = getelementptr inbounds i8, i8* %7, i64 %4434
  %4436 = load i8, i8* %4435, align 1, !tbaa !394
  %4437 = insertelement <32 x i8> %4432, i8 %4436, i32 27
  %4438 = extractelement <32 x i32> %4297, i32 28
  %4439 = sext i32 %4438 to i64
  %4440 = getelementptr inbounds i8, i8* %7, i64 %4439
  %4441 = load i8, i8* %4440, align 1, !tbaa !394
  %4442 = insertelement <32 x i8> %4437, i8 %4441, i32 28
  %4443 = extractelement <32 x i32> %4297, i32 29
  %4444 = sext i32 %4443 to i64
  %4445 = getelementptr inbounds i8, i8* %7, i64 %4444
  %4446 = load i8, i8* %4445, align 1, !tbaa !394
  %4447 = insertelement <32 x i8> %4442, i8 %4446, i32 29
  %4448 = extractelement <32 x i32> %4297, i32 30
  %4449 = sext i32 %4448 to i64
  %4450 = getelementptr inbounds i8, i8* %7, i64 %4449
  %4451 = load i8, i8* %4450, align 1, !tbaa !394
  %4452 = insertelement <32 x i8> %4447, i8 %4451, i32 30
  %4453 = extractelement <32 x i32> %4297, i32 31
  %4454 = sext i32 %4453 to i64
  %4455 = getelementptr inbounds i8, i8* %7, i64 %4454
  %4456 = load i8, i8* %4455, align 1, !tbaa !394
  %4457 = insertelement <32 x i8> %4452, i8 %4456, i32 31
  %4458 = zext <32 x i8> %4457 to <32 x i16>
  %4459 = shl nuw nsw <32 x i16> %4458, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %4460 = add nuw nsw <32 x i16> %4119, %3952
  %4461 = add nuw nsw <32 x i16> %4460, %4459
  %4462 = shufflevector <32 x i16> %4296, <32 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4463 = shufflevector <32 x i16> %4461, <32 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4464 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %4462, <16 x i16> %4463) #10
  %4465 = shufflevector <32 x i16> %4296, <32 x i16> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4466 = shufflevector <32 x i16> %4461, <32 x i16> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4467 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %4465, <16 x i16> %4466) #10
  %4468 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %4463, <16 x i16> %4462) #10
  %4469 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %4466, <16 x i16> %4465) #10
  %4470 = or <16 x i16> %4464, %4468
  %4471 = or <16 x i16> %4467, %4469
  %4472 = add nuw nsw <16 x i16> %4470, %4130
  %4473 = add nuw nsw <16 x i16> %4471, %4131
  %a81 = shufflevector <16 x i16> %4472, <16 x i16> %4473, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4474 = icmp ult <32 x i16> %a81, <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>
  %4475 = select <32 x i1> %4474, <32 x i16> %a81, <32 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>
  %4476 = trunc <32 x i16> %4475 to <32 x i8>
  %4477 = sext i32 %output.s0.x.v0.base.s41 to i64
  %4478 = add nsw i64 %4477, %3106
  %4479 = getelementptr inbounds i8, i8* %20, i64 %4478
  %4480 = bitcast i8* %4479 to <32 x i8>*
  store <32 x i8> %4476, <32 x i8>* %4480, align 1, !tbaa !397
  %4481 = add nuw nsw i32 %output.s0.x.x.rebased40, 1
  %.not263 = icmp eq i32 %4481, %t273
  br i1 %.not263, label %"end for output.s0.x.x.rebased39", label %"for output.s0.x.x.rebased38"

"end for output.s0.x.x.rebased39":                ; preds = %"for output.s0.x.x.rebased38", %"end for output.s0.x.x.rebased"
  %indvars.iv.next468 = add nuw nsw i64 %indvars.iv467, 1
  %4482 = add nuw nsw i32 %output.s0.y.rebased33, 1
  %.not262 = icmp eq i64 %indvars.iv.next468, %250
  br i1 %.not262, label %"end for output.s0.y.rebased32", label %"for output.s0.y.rebased31"

"for output.s0.y.rebased42":                      ; preds = %"for output.s0.y.rebased42.preheader", %"end for output.s0.x.x46"
  %indvars.iv470 = phi i64 [ 0, %"for output.s0.y.rebased42.preheader" ], [ %indvars.iv.next471, %"end for output.s0.x.x46" ]
  %output.s0.y.rebased44 = phi i32 [ 0, %"for output.s0.y.rebased42.preheader" ], [ %5882, %"end for output.s0.x.x46" ]
  %b86 = add nsw i32 %output.s0.y.rebased44, %t282
  %a82 = add nsw i32 %b86, 2
  %4483 = icmp sgt i32 %18, %a82
  %a100 = select i1 %4483, i32 %a82, i32 %18
  %.not259 = icmp slt i32 %b86, %18
  %a96 = select i1 %.not259, i32 %b86, i32 %a83
  %4484 = icmp sgt i32 %b86, %18
  %a101 = select i1 %4484, i32 %18, i32 %b86
  br i1 %1642, label %"for output.s0.x.x45.preheader", label %"end for output.s0.x.x46", !prof !393

"for output.s0.x.x45.preheader":                  ; preds = %"for output.s0.y.rebased42"
  %4485 = trunc i64 %indvars.iv470 to i32
  %4486 = add i32 %output.s0.y.epilogue, %4485
  %4487 = mul i32 %4486, %32
  %t287 = sub i32 %4487, %198
  %4488 = icmp sgt i32 %a101, 1
  %4489 = select i1 %4488, i32 %a101, i32 1
  %4490 = add nsw i32 %4489, -1
  %4491 = mul nsw i32 %4490, %19
  %4492 = sub nsw i32 %4491, %14
  %4493 = insertelement <32 x i32> undef, i32 %4492, i32 0
  %4494 = shufflevector <32 x i32> %4493, <32 x i32> undef, <32 x i32> zeroinitializer
  %4495 = icmp sgt i32 %a100, 1
  %4496 = select i1 %4495, i32 %a100, i32 1
  %4497 = add nsw i32 %4496, -1
  %4498 = mul nsw i32 %4497, %19
  %4499 = sub nsw i32 %4498, %14
  %4500 = insertelement <32 x i32> undef, i32 %4499, i32 0
  %4501 = shufflevector <32 x i32> %4500, <32 x i32> undef, <32 x i32> zeroinitializer
  %4502 = icmp sgt i32 %a96, 0
  %4503 = select i1 %4502, i32 %a96, i32 0
  %4504 = mul nsw i32 %4503, %19
  %4505 = sub nsw i32 %4504, %14
  %4506 = insertelement <32 x i32> undef, i32 %4505, i32 0
  %t238 = shufflevector <32 x i32> %4506, <32 x i32> undef, <32 x i32> zeroinitializer
  %4507 = sext i32 %t287 to i64
  br label %"for output.s0.x.x45"

"for output.s0.x.x45":                            ; preds = %"for output.s0.x.x45.preheader", %"for output.s0.x.x45"
  %output.s0.x.x47 = phi i32 [ %5881, %"for output.s0.x.x45" ], [ 0, %"for output.s0.x.x45.preheader" ]
  %a85 = shl nsw i32 %output.s0.x.x47, 5
  %4508 = icmp sgt i32 %a63.pre-phi, %a85
  %output.s0.x.v0.base.s48 = select i1 %4508, i32 %a85, i32 %a63.pre-phi
  %4509 = add nsw i32 %output.s0.x.v0.base.s48, %27
  %4510 = insertelement <32 x i32> undef, i32 %4509, i32 0
  %4511 = shufflevector <32 x i32> %4510, <32 x i32> undef, <32 x i32> zeroinitializer
  %a87 = add nsw <32 x i32> %4511, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4512 = shufflevector <32 x i32> %a87, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4513 = icmp sgt <16 x i32> %1644, %4512
  %4514 = shufflevector <32 x i32> %a87, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4515 = icmp sgt <16 x i32> %1644, %4514
  %4516 = select <16 x i1> %4513, <16 x i32> %4512, <16 x i32> %1644
  %4517 = select <16 x i1> %4515, <16 x i32> %4514, <16 x i32> %1644
  %4518 = icmp sgt <16 x i32> %4516, %1646
  %4519 = icmp sgt <16 x i32> %4517, %1646
  %4520 = select <16 x i1> %4518, <16 x i32> %4516, <16 x i32> %1646
  %4521 = select <16 x i1> %4519, <16 x i32> %4517, <16 x i32> %1646
  %t212 = shufflevector <16 x i32> %4520, <16 x i32> %4521, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4522 = add nsw i32 %4509, -1
  %4523 = insertelement <32 x i32> undef, i32 %4522, i32 0
  %4524 = shufflevector <32 x i32> %4523, <32 x i32> undef, <32 x i32> zeroinitializer
  %a89 = add nsw <32 x i32> %4524, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4525 = shufflevector <32 x i32> %a89, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4526 = icmp sgt <16 x i32> %1644, %4525
  %4527 = shufflevector <32 x i32> %a89, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4528 = icmp sgt <16 x i32> %1644, %4527
  %4529 = select <16 x i1> %4526, <16 x i32> %4525, <16 x i32> %1644
  %4530 = select <16 x i1> %4528, <16 x i32> %4527, <16 x i32> %1644
  %4531 = icmp sgt <16 x i32> %4529, %1646
  %4532 = icmp sgt <16 x i32> %4530, %1646
  %4533 = select <16 x i1> %4531, <16 x i32> %4529, <16 x i32> %1646
  %4534 = select <16 x i1> %4532, <16 x i32> %4530, <16 x i32> %1646
  %t215 = shufflevector <16 x i32> %4533, <16 x i32> %4534, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4535 = add nsw <32 x i32> %t215, %4494
  %4536 = extractelement <32 x i32> %4535, i32 0
  %4537 = sext i32 %4536 to i64
  %4538 = getelementptr inbounds i8, i8* %7, i64 %4537
  %4539 = load i8, i8* %4538, align 1, !tbaa !394
  %4540 = insertelement <32 x i8> undef, i8 %4539, i32 0
  %4541 = extractelement <32 x i32> %4535, i32 1
  %4542 = sext i32 %4541 to i64
  %4543 = getelementptr inbounds i8, i8* %7, i64 %4542
  %4544 = load i8, i8* %4543, align 1, !tbaa !394
  %4545 = insertelement <32 x i8> %4540, i8 %4544, i32 1
  %4546 = extractelement <32 x i32> %4535, i32 2
  %4547 = sext i32 %4546 to i64
  %4548 = getelementptr inbounds i8, i8* %7, i64 %4547
  %4549 = load i8, i8* %4548, align 1, !tbaa !394
  %4550 = insertelement <32 x i8> %4545, i8 %4549, i32 2
  %4551 = extractelement <32 x i32> %4535, i32 3
  %4552 = sext i32 %4551 to i64
  %4553 = getelementptr inbounds i8, i8* %7, i64 %4552
  %4554 = load i8, i8* %4553, align 1, !tbaa !394
  %4555 = insertelement <32 x i8> %4550, i8 %4554, i32 3
  %4556 = extractelement <32 x i32> %4535, i32 4
  %4557 = sext i32 %4556 to i64
  %4558 = getelementptr inbounds i8, i8* %7, i64 %4557
  %4559 = load i8, i8* %4558, align 1, !tbaa !394
  %4560 = insertelement <32 x i8> %4555, i8 %4559, i32 4
  %4561 = extractelement <32 x i32> %4535, i32 5
  %4562 = sext i32 %4561 to i64
  %4563 = getelementptr inbounds i8, i8* %7, i64 %4562
  %4564 = load i8, i8* %4563, align 1, !tbaa !394
  %4565 = insertelement <32 x i8> %4560, i8 %4564, i32 5
  %4566 = extractelement <32 x i32> %4535, i32 6
  %4567 = sext i32 %4566 to i64
  %4568 = getelementptr inbounds i8, i8* %7, i64 %4567
  %4569 = load i8, i8* %4568, align 1, !tbaa !394
  %4570 = insertelement <32 x i8> %4565, i8 %4569, i32 6
  %4571 = extractelement <32 x i32> %4535, i32 7
  %4572 = sext i32 %4571 to i64
  %4573 = getelementptr inbounds i8, i8* %7, i64 %4572
  %4574 = load i8, i8* %4573, align 1, !tbaa !394
  %4575 = insertelement <32 x i8> %4570, i8 %4574, i32 7
  %4576 = extractelement <32 x i32> %4535, i32 8
  %4577 = sext i32 %4576 to i64
  %4578 = getelementptr inbounds i8, i8* %7, i64 %4577
  %4579 = load i8, i8* %4578, align 1, !tbaa !394
  %4580 = insertelement <32 x i8> %4575, i8 %4579, i32 8
  %4581 = extractelement <32 x i32> %4535, i32 9
  %4582 = sext i32 %4581 to i64
  %4583 = getelementptr inbounds i8, i8* %7, i64 %4582
  %4584 = load i8, i8* %4583, align 1, !tbaa !394
  %4585 = insertelement <32 x i8> %4580, i8 %4584, i32 9
  %4586 = extractelement <32 x i32> %4535, i32 10
  %4587 = sext i32 %4586 to i64
  %4588 = getelementptr inbounds i8, i8* %7, i64 %4587
  %4589 = load i8, i8* %4588, align 1, !tbaa !394
  %4590 = insertelement <32 x i8> %4585, i8 %4589, i32 10
  %4591 = extractelement <32 x i32> %4535, i32 11
  %4592 = sext i32 %4591 to i64
  %4593 = getelementptr inbounds i8, i8* %7, i64 %4592
  %4594 = load i8, i8* %4593, align 1, !tbaa !394
  %4595 = insertelement <32 x i8> %4590, i8 %4594, i32 11
  %4596 = extractelement <32 x i32> %4535, i32 12
  %4597 = sext i32 %4596 to i64
  %4598 = getelementptr inbounds i8, i8* %7, i64 %4597
  %4599 = load i8, i8* %4598, align 1, !tbaa !394
  %4600 = insertelement <32 x i8> %4595, i8 %4599, i32 12
  %4601 = extractelement <32 x i32> %4535, i32 13
  %4602 = sext i32 %4601 to i64
  %4603 = getelementptr inbounds i8, i8* %7, i64 %4602
  %4604 = load i8, i8* %4603, align 1, !tbaa !394
  %4605 = insertelement <32 x i8> %4600, i8 %4604, i32 13
  %4606 = extractelement <32 x i32> %4535, i32 14
  %4607 = sext i32 %4606 to i64
  %4608 = getelementptr inbounds i8, i8* %7, i64 %4607
  %4609 = load i8, i8* %4608, align 1, !tbaa !394
  %4610 = insertelement <32 x i8> %4605, i8 %4609, i32 14
  %4611 = extractelement <32 x i32> %4535, i32 15
  %4612 = sext i32 %4611 to i64
  %4613 = getelementptr inbounds i8, i8* %7, i64 %4612
  %4614 = load i8, i8* %4613, align 1, !tbaa !394
  %4615 = insertelement <32 x i8> %4610, i8 %4614, i32 15
  %4616 = extractelement <32 x i32> %4535, i32 16
  %4617 = sext i32 %4616 to i64
  %4618 = getelementptr inbounds i8, i8* %7, i64 %4617
  %4619 = load i8, i8* %4618, align 1, !tbaa !394
  %4620 = insertelement <32 x i8> %4615, i8 %4619, i32 16
  %4621 = extractelement <32 x i32> %4535, i32 17
  %4622 = sext i32 %4621 to i64
  %4623 = getelementptr inbounds i8, i8* %7, i64 %4622
  %4624 = load i8, i8* %4623, align 1, !tbaa !394
  %4625 = insertelement <32 x i8> %4620, i8 %4624, i32 17
  %4626 = extractelement <32 x i32> %4535, i32 18
  %4627 = sext i32 %4626 to i64
  %4628 = getelementptr inbounds i8, i8* %7, i64 %4627
  %4629 = load i8, i8* %4628, align 1, !tbaa !394
  %4630 = insertelement <32 x i8> %4625, i8 %4629, i32 18
  %4631 = extractelement <32 x i32> %4535, i32 19
  %4632 = sext i32 %4631 to i64
  %4633 = getelementptr inbounds i8, i8* %7, i64 %4632
  %4634 = load i8, i8* %4633, align 1, !tbaa !394
  %4635 = insertelement <32 x i8> %4630, i8 %4634, i32 19
  %4636 = extractelement <32 x i32> %4535, i32 20
  %4637 = sext i32 %4636 to i64
  %4638 = getelementptr inbounds i8, i8* %7, i64 %4637
  %4639 = load i8, i8* %4638, align 1, !tbaa !394
  %4640 = insertelement <32 x i8> %4635, i8 %4639, i32 20
  %4641 = extractelement <32 x i32> %4535, i32 21
  %4642 = sext i32 %4641 to i64
  %4643 = getelementptr inbounds i8, i8* %7, i64 %4642
  %4644 = load i8, i8* %4643, align 1, !tbaa !394
  %4645 = insertelement <32 x i8> %4640, i8 %4644, i32 21
  %4646 = extractelement <32 x i32> %4535, i32 22
  %4647 = sext i32 %4646 to i64
  %4648 = getelementptr inbounds i8, i8* %7, i64 %4647
  %4649 = load i8, i8* %4648, align 1, !tbaa !394
  %4650 = insertelement <32 x i8> %4645, i8 %4649, i32 22
  %4651 = extractelement <32 x i32> %4535, i32 23
  %4652 = sext i32 %4651 to i64
  %4653 = getelementptr inbounds i8, i8* %7, i64 %4652
  %4654 = load i8, i8* %4653, align 1, !tbaa !394
  %4655 = insertelement <32 x i8> %4650, i8 %4654, i32 23
  %4656 = extractelement <32 x i32> %4535, i32 24
  %4657 = sext i32 %4656 to i64
  %4658 = getelementptr inbounds i8, i8* %7, i64 %4657
  %4659 = load i8, i8* %4658, align 1, !tbaa !394
  %4660 = insertelement <32 x i8> %4655, i8 %4659, i32 24
  %4661 = extractelement <32 x i32> %4535, i32 25
  %4662 = sext i32 %4661 to i64
  %4663 = getelementptr inbounds i8, i8* %7, i64 %4662
  %4664 = load i8, i8* %4663, align 1, !tbaa !394
  %4665 = insertelement <32 x i8> %4660, i8 %4664, i32 25
  %4666 = extractelement <32 x i32> %4535, i32 26
  %4667 = sext i32 %4666 to i64
  %4668 = getelementptr inbounds i8, i8* %7, i64 %4667
  %4669 = load i8, i8* %4668, align 1, !tbaa !394
  %4670 = insertelement <32 x i8> %4665, i8 %4669, i32 26
  %4671 = extractelement <32 x i32> %4535, i32 27
  %4672 = sext i32 %4671 to i64
  %4673 = getelementptr inbounds i8, i8* %7, i64 %4672
  %4674 = load i8, i8* %4673, align 1, !tbaa !394
  %4675 = insertelement <32 x i8> %4670, i8 %4674, i32 27
  %4676 = extractelement <32 x i32> %4535, i32 28
  %4677 = sext i32 %4676 to i64
  %4678 = getelementptr inbounds i8, i8* %7, i64 %4677
  %4679 = load i8, i8* %4678, align 1, !tbaa !394
  %4680 = insertelement <32 x i8> %4675, i8 %4679, i32 28
  %4681 = extractelement <32 x i32> %4535, i32 29
  %4682 = sext i32 %4681 to i64
  %4683 = getelementptr inbounds i8, i8* %7, i64 %4682
  %4684 = load i8, i8* %4683, align 1, !tbaa !394
  %4685 = insertelement <32 x i8> %4680, i8 %4684, i32 29
  %4686 = extractelement <32 x i32> %4535, i32 30
  %4687 = sext i32 %4686 to i64
  %4688 = getelementptr inbounds i8, i8* %7, i64 %4687
  %4689 = load i8, i8* %4688, align 1, !tbaa !394
  %4690 = insertelement <32 x i8> %4685, i8 %4689, i32 30
  %4691 = extractelement <32 x i32> %4535, i32 31
  %4692 = sext i32 %4691 to i64
  %4693 = getelementptr inbounds i8, i8* %7, i64 %4692
  %4694 = load i8, i8* %4693, align 1, !tbaa !394
  %t216.s = insertelement <32 x i8> %4690, i8 %4694, i32 31
  %4695 = add nsw i32 %4509, 1
  %4696 = insertelement <32 x i32> undef, i32 %4695, i32 0
  %4697 = shufflevector <32 x i32> %4696, <32 x i32> undef, <32 x i32> zeroinitializer
  %a92 = add nsw <32 x i32> %4697, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4698 = shufflevector <32 x i32> %a92, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4699 = icmp sgt <16 x i32> %1644, %4698
  %4700 = shufflevector <32 x i32> %a92, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4701 = icmp sgt <16 x i32> %1644, %4700
  %4702 = select <16 x i1> %4699, <16 x i32> %4698, <16 x i32> %1644
  %4703 = select <16 x i1> %4701, <16 x i32> %4700, <16 x i32> %1644
  %4704 = icmp sgt <16 x i32> %4702, %1646
  %4705 = icmp sgt <16 x i32> %4703, %1646
  %4706 = select <16 x i1> %4704, <16 x i32> %4702, <16 x i32> %1646
  %4707 = select <16 x i1> %4705, <16 x i32> %4703, <16 x i32> %1646
  %t217 = shufflevector <16 x i32> %4706, <16 x i32> %4707, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4708 = add nsw <32 x i32> %t217, %4494
  %4709 = extractelement <32 x i32> %4708, i32 0
  %4710 = sext i32 %4709 to i64
  %4711 = getelementptr inbounds i8, i8* %7, i64 %4710
  %4712 = load i8, i8* %4711, align 1, !tbaa !394
  %4713 = insertelement <32 x i8> undef, i8 %4712, i32 0
  %4714 = extractelement <32 x i32> %4708, i32 1
  %4715 = sext i32 %4714 to i64
  %4716 = getelementptr inbounds i8, i8* %7, i64 %4715
  %4717 = load i8, i8* %4716, align 1, !tbaa !394
  %4718 = insertelement <32 x i8> %4713, i8 %4717, i32 1
  %4719 = extractelement <32 x i32> %4708, i32 2
  %4720 = sext i32 %4719 to i64
  %4721 = getelementptr inbounds i8, i8* %7, i64 %4720
  %4722 = load i8, i8* %4721, align 1, !tbaa !394
  %4723 = insertelement <32 x i8> %4718, i8 %4722, i32 2
  %4724 = extractelement <32 x i32> %4708, i32 3
  %4725 = sext i32 %4724 to i64
  %4726 = getelementptr inbounds i8, i8* %7, i64 %4725
  %4727 = load i8, i8* %4726, align 1, !tbaa !394
  %4728 = insertelement <32 x i8> %4723, i8 %4727, i32 3
  %4729 = extractelement <32 x i32> %4708, i32 4
  %4730 = sext i32 %4729 to i64
  %4731 = getelementptr inbounds i8, i8* %7, i64 %4730
  %4732 = load i8, i8* %4731, align 1, !tbaa !394
  %4733 = insertelement <32 x i8> %4728, i8 %4732, i32 4
  %4734 = extractelement <32 x i32> %4708, i32 5
  %4735 = sext i32 %4734 to i64
  %4736 = getelementptr inbounds i8, i8* %7, i64 %4735
  %4737 = load i8, i8* %4736, align 1, !tbaa !394
  %4738 = insertelement <32 x i8> %4733, i8 %4737, i32 5
  %4739 = extractelement <32 x i32> %4708, i32 6
  %4740 = sext i32 %4739 to i64
  %4741 = getelementptr inbounds i8, i8* %7, i64 %4740
  %4742 = load i8, i8* %4741, align 1, !tbaa !394
  %4743 = insertelement <32 x i8> %4738, i8 %4742, i32 6
  %4744 = extractelement <32 x i32> %4708, i32 7
  %4745 = sext i32 %4744 to i64
  %4746 = getelementptr inbounds i8, i8* %7, i64 %4745
  %4747 = load i8, i8* %4746, align 1, !tbaa !394
  %4748 = insertelement <32 x i8> %4743, i8 %4747, i32 7
  %4749 = extractelement <32 x i32> %4708, i32 8
  %4750 = sext i32 %4749 to i64
  %4751 = getelementptr inbounds i8, i8* %7, i64 %4750
  %4752 = load i8, i8* %4751, align 1, !tbaa !394
  %4753 = insertelement <32 x i8> %4748, i8 %4752, i32 8
  %4754 = extractelement <32 x i32> %4708, i32 9
  %4755 = sext i32 %4754 to i64
  %4756 = getelementptr inbounds i8, i8* %7, i64 %4755
  %4757 = load i8, i8* %4756, align 1, !tbaa !394
  %4758 = insertelement <32 x i8> %4753, i8 %4757, i32 9
  %4759 = extractelement <32 x i32> %4708, i32 10
  %4760 = sext i32 %4759 to i64
  %4761 = getelementptr inbounds i8, i8* %7, i64 %4760
  %4762 = load i8, i8* %4761, align 1, !tbaa !394
  %4763 = insertelement <32 x i8> %4758, i8 %4762, i32 10
  %4764 = extractelement <32 x i32> %4708, i32 11
  %4765 = sext i32 %4764 to i64
  %4766 = getelementptr inbounds i8, i8* %7, i64 %4765
  %4767 = load i8, i8* %4766, align 1, !tbaa !394
  %4768 = insertelement <32 x i8> %4763, i8 %4767, i32 11
  %4769 = extractelement <32 x i32> %4708, i32 12
  %4770 = sext i32 %4769 to i64
  %4771 = getelementptr inbounds i8, i8* %7, i64 %4770
  %4772 = load i8, i8* %4771, align 1, !tbaa !394
  %4773 = insertelement <32 x i8> %4768, i8 %4772, i32 12
  %4774 = extractelement <32 x i32> %4708, i32 13
  %4775 = sext i32 %4774 to i64
  %4776 = getelementptr inbounds i8, i8* %7, i64 %4775
  %4777 = load i8, i8* %4776, align 1, !tbaa !394
  %4778 = insertelement <32 x i8> %4773, i8 %4777, i32 13
  %4779 = extractelement <32 x i32> %4708, i32 14
  %4780 = sext i32 %4779 to i64
  %4781 = getelementptr inbounds i8, i8* %7, i64 %4780
  %4782 = load i8, i8* %4781, align 1, !tbaa !394
  %4783 = insertelement <32 x i8> %4778, i8 %4782, i32 14
  %4784 = extractelement <32 x i32> %4708, i32 15
  %4785 = sext i32 %4784 to i64
  %4786 = getelementptr inbounds i8, i8* %7, i64 %4785
  %4787 = load i8, i8* %4786, align 1, !tbaa !394
  %4788 = insertelement <32 x i8> %4783, i8 %4787, i32 15
  %4789 = extractelement <32 x i32> %4708, i32 16
  %4790 = sext i32 %4789 to i64
  %4791 = getelementptr inbounds i8, i8* %7, i64 %4790
  %4792 = load i8, i8* %4791, align 1, !tbaa !394
  %4793 = insertelement <32 x i8> %4788, i8 %4792, i32 16
  %4794 = extractelement <32 x i32> %4708, i32 17
  %4795 = sext i32 %4794 to i64
  %4796 = getelementptr inbounds i8, i8* %7, i64 %4795
  %4797 = load i8, i8* %4796, align 1, !tbaa !394
  %4798 = insertelement <32 x i8> %4793, i8 %4797, i32 17
  %4799 = extractelement <32 x i32> %4708, i32 18
  %4800 = sext i32 %4799 to i64
  %4801 = getelementptr inbounds i8, i8* %7, i64 %4800
  %4802 = load i8, i8* %4801, align 1, !tbaa !394
  %4803 = insertelement <32 x i8> %4798, i8 %4802, i32 18
  %4804 = extractelement <32 x i32> %4708, i32 19
  %4805 = sext i32 %4804 to i64
  %4806 = getelementptr inbounds i8, i8* %7, i64 %4805
  %4807 = load i8, i8* %4806, align 1, !tbaa !394
  %4808 = insertelement <32 x i8> %4803, i8 %4807, i32 19
  %4809 = extractelement <32 x i32> %4708, i32 20
  %4810 = sext i32 %4809 to i64
  %4811 = getelementptr inbounds i8, i8* %7, i64 %4810
  %4812 = load i8, i8* %4811, align 1, !tbaa !394
  %4813 = insertelement <32 x i8> %4808, i8 %4812, i32 20
  %4814 = extractelement <32 x i32> %4708, i32 21
  %4815 = sext i32 %4814 to i64
  %4816 = getelementptr inbounds i8, i8* %7, i64 %4815
  %4817 = load i8, i8* %4816, align 1, !tbaa !394
  %4818 = insertelement <32 x i8> %4813, i8 %4817, i32 21
  %4819 = extractelement <32 x i32> %4708, i32 22
  %4820 = sext i32 %4819 to i64
  %4821 = getelementptr inbounds i8, i8* %7, i64 %4820
  %4822 = load i8, i8* %4821, align 1, !tbaa !394
  %4823 = insertelement <32 x i8> %4818, i8 %4822, i32 22
  %4824 = extractelement <32 x i32> %4708, i32 23
  %4825 = sext i32 %4824 to i64
  %4826 = getelementptr inbounds i8, i8* %7, i64 %4825
  %4827 = load i8, i8* %4826, align 1, !tbaa !394
  %4828 = insertelement <32 x i8> %4823, i8 %4827, i32 23
  %4829 = extractelement <32 x i32> %4708, i32 24
  %4830 = sext i32 %4829 to i64
  %4831 = getelementptr inbounds i8, i8* %7, i64 %4830
  %4832 = load i8, i8* %4831, align 1, !tbaa !394
  %4833 = insertelement <32 x i8> %4828, i8 %4832, i32 24
  %4834 = extractelement <32 x i32> %4708, i32 25
  %4835 = sext i32 %4834 to i64
  %4836 = getelementptr inbounds i8, i8* %7, i64 %4835
  %4837 = load i8, i8* %4836, align 1, !tbaa !394
  %4838 = insertelement <32 x i8> %4833, i8 %4837, i32 25
  %4839 = extractelement <32 x i32> %4708, i32 26
  %4840 = sext i32 %4839 to i64
  %4841 = getelementptr inbounds i8, i8* %7, i64 %4840
  %4842 = load i8, i8* %4841, align 1, !tbaa !394
  %4843 = insertelement <32 x i8> %4838, i8 %4842, i32 26
  %4844 = extractelement <32 x i32> %4708, i32 27
  %4845 = sext i32 %4844 to i64
  %4846 = getelementptr inbounds i8, i8* %7, i64 %4845
  %4847 = load i8, i8* %4846, align 1, !tbaa !394
  %4848 = insertelement <32 x i8> %4843, i8 %4847, i32 27
  %4849 = extractelement <32 x i32> %4708, i32 28
  %4850 = sext i32 %4849 to i64
  %4851 = getelementptr inbounds i8, i8* %7, i64 %4850
  %4852 = load i8, i8* %4851, align 1, !tbaa !394
  %4853 = insertelement <32 x i8> %4848, i8 %4852, i32 28
  %4854 = extractelement <32 x i32> %4708, i32 29
  %4855 = sext i32 %4854 to i64
  %4856 = getelementptr inbounds i8, i8* %7, i64 %4855
  %4857 = load i8, i8* %4856, align 1, !tbaa !394
  %4858 = insertelement <32 x i8> %4853, i8 %4857, i32 29
  %4859 = extractelement <32 x i32> %4708, i32 30
  %4860 = sext i32 %4859 to i64
  %4861 = getelementptr inbounds i8, i8* %7, i64 %4860
  %4862 = load i8, i8* %4861, align 1, !tbaa !394
  %4863 = insertelement <32 x i8> %4858, i8 %4862, i32 30
  %4864 = extractelement <32 x i32> %4708, i32 31
  %4865 = sext i32 %4864 to i64
  %4866 = getelementptr inbounds i8, i8* %7, i64 %4865
  %4867 = load i8, i8* %4866, align 1, !tbaa !394
  %t218.s = insertelement <32 x i8> %4863, i8 %4867, i32 31
  %4868 = add nsw <32 x i32> %t215, %4501
  %4869 = extractelement <32 x i32> %4868, i32 0
  %4870 = sext i32 %4869 to i64
  %4871 = getelementptr inbounds i8, i8* %7, i64 %4870
  %4872 = load i8, i8* %4871, align 1, !tbaa !394
  %4873 = insertelement <32 x i8> undef, i8 %4872, i32 0
  %4874 = extractelement <32 x i32> %4868, i32 1
  %4875 = sext i32 %4874 to i64
  %4876 = getelementptr inbounds i8, i8* %7, i64 %4875
  %4877 = load i8, i8* %4876, align 1, !tbaa !394
  %4878 = insertelement <32 x i8> %4873, i8 %4877, i32 1
  %4879 = extractelement <32 x i32> %4868, i32 2
  %4880 = sext i32 %4879 to i64
  %4881 = getelementptr inbounds i8, i8* %7, i64 %4880
  %4882 = load i8, i8* %4881, align 1, !tbaa !394
  %4883 = insertelement <32 x i8> %4878, i8 %4882, i32 2
  %4884 = extractelement <32 x i32> %4868, i32 3
  %4885 = sext i32 %4884 to i64
  %4886 = getelementptr inbounds i8, i8* %7, i64 %4885
  %4887 = load i8, i8* %4886, align 1, !tbaa !394
  %4888 = insertelement <32 x i8> %4883, i8 %4887, i32 3
  %4889 = extractelement <32 x i32> %4868, i32 4
  %4890 = sext i32 %4889 to i64
  %4891 = getelementptr inbounds i8, i8* %7, i64 %4890
  %4892 = load i8, i8* %4891, align 1, !tbaa !394
  %4893 = insertelement <32 x i8> %4888, i8 %4892, i32 4
  %4894 = extractelement <32 x i32> %4868, i32 5
  %4895 = sext i32 %4894 to i64
  %4896 = getelementptr inbounds i8, i8* %7, i64 %4895
  %4897 = load i8, i8* %4896, align 1, !tbaa !394
  %4898 = insertelement <32 x i8> %4893, i8 %4897, i32 5
  %4899 = extractelement <32 x i32> %4868, i32 6
  %4900 = sext i32 %4899 to i64
  %4901 = getelementptr inbounds i8, i8* %7, i64 %4900
  %4902 = load i8, i8* %4901, align 1, !tbaa !394
  %4903 = insertelement <32 x i8> %4898, i8 %4902, i32 6
  %4904 = extractelement <32 x i32> %4868, i32 7
  %4905 = sext i32 %4904 to i64
  %4906 = getelementptr inbounds i8, i8* %7, i64 %4905
  %4907 = load i8, i8* %4906, align 1, !tbaa !394
  %4908 = insertelement <32 x i8> %4903, i8 %4907, i32 7
  %4909 = extractelement <32 x i32> %4868, i32 8
  %4910 = sext i32 %4909 to i64
  %4911 = getelementptr inbounds i8, i8* %7, i64 %4910
  %4912 = load i8, i8* %4911, align 1, !tbaa !394
  %4913 = insertelement <32 x i8> %4908, i8 %4912, i32 8
  %4914 = extractelement <32 x i32> %4868, i32 9
  %4915 = sext i32 %4914 to i64
  %4916 = getelementptr inbounds i8, i8* %7, i64 %4915
  %4917 = load i8, i8* %4916, align 1, !tbaa !394
  %4918 = insertelement <32 x i8> %4913, i8 %4917, i32 9
  %4919 = extractelement <32 x i32> %4868, i32 10
  %4920 = sext i32 %4919 to i64
  %4921 = getelementptr inbounds i8, i8* %7, i64 %4920
  %4922 = load i8, i8* %4921, align 1, !tbaa !394
  %4923 = insertelement <32 x i8> %4918, i8 %4922, i32 10
  %4924 = extractelement <32 x i32> %4868, i32 11
  %4925 = sext i32 %4924 to i64
  %4926 = getelementptr inbounds i8, i8* %7, i64 %4925
  %4927 = load i8, i8* %4926, align 1, !tbaa !394
  %4928 = insertelement <32 x i8> %4923, i8 %4927, i32 11
  %4929 = extractelement <32 x i32> %4868, i32 12
  %4930 = sext i32 %4929 to i64
  %4931 = getelementptr inbounds i8, i8* %7, i64 %4930
  %4932 = load i8, i8* %4931, align 1, !tbaa !394
  %4933 = insertelement <32 x i8> %4928, i8 %4932, i32 12
  %4934 = extractelement <32 x i32> %4868, i32 13
  %4935 = sext i32 %4934 to i64
  %4936 = getelementptr inbounds i8, i8* %7, i64 %4935
  %4937 = load i8, i8* %4936, align 1, !tbaa !394
  %4938 = insertelement <32 x i8> %4933, i8 %4937, i32 13
  %4939 = extractelement <32 x i32> %4868, i32 14
  %4940 = sext i32 %4939 to i64
  %4941 = getelementptr inbounds i8, i8* %7, i64 %4940
  %4942 = load i8, i8* %4941, align 1, !tbaa !394
  %4943 = insertelement <32 x i8> %4938, i8 %4942, i32 14
  %4944 = extractelement <32 x i32> %4868, i32 15
  %4945 = sext i32 %4944 to i64
  %4946 = getelementptr inbounds i8, i8* %7, i64 %4945
  %4947 = load i8, i8* %4946, align 1, !tbaa !394
  %4948 = insertelement <32 x i8> %4943, i8 %4947, i32 15
  %4949 = extractelement <32 x i32> %4868, i32 16
  %4950 = sext i32 %4949 to i64
  %4951 = getelementptr inbounds i8, i8* %7, i64 %4950
  %4952 = load i8, i8* %4951, align 1, !tbaa !394
  %4953 = insertelement <32 x i8> %4948, i8 %4952, i32 16
  %4954 = extractelement <32 x i32> %4868, i32 17
  %4955 = sext i32 %4954 to i64
  %4956 = getelementptr inbounds i8, i8* %7, i64 %4955
  %4957 = load i8, i8* %4956, align 1, !tbaa !394
  %4958 = insertelement <32 x i8> %4953, i8 %4957, i32 17
  %4959 = extractelement <32 x i32> %4868, i32 18
  %4960 = sext i32 %4959 to i64
  %4961 = getelementptr inbounds i8, i8* %7, i64 %4960
  %4962 = load i8, i8* %4961, align 1, !tbaa !394
  %4963 = insertelement <32 x i8> %4958, i8 %4962, i32 18
  %4964 = extractelement <32 x i32> %4868, i32 19
  %4965 = sext i32 %4964 to i64
  %4966 = getelementptr inbounds i8, i8* %7, i64 %4965
  %4967 = load i8, i8* %4966, align 1, !tbaa !394
  %4968 = insertelement <32 x i8> %4963, i8 %4967, i32 19
  %4969 = extractelement <32 x i32> %4868, i32 20
  %4970 = sext i32 %4969 to i64
  %4971 = getelementptr inbounds i8, i8* %7, i64 %4970
  %4972 = load i8, i8* %4971, align 1, !tbaa !394
  %4973 = insertelement <32 x i8> %4968, i8 %4972, i32 20
  %4974 = extractelement <32 x i32> %4868, i32 21
  %4975 = sext i32 %4974 to i64
  %4976 = getelementptr inbounds i8, i8* %7, i64 %4975
  %4977 = load i8, i8* %4976, align 1, !tbaa !394
  %4978 = insertelement <32 x i8> %4973, i8 %4977, i32 21
  %4979 = extractelement <32 x i32> %4868, i32 22
  %4980 = sext i32 %4979 to i64
  %4981 = getelementptr inbounds i8, i8* %7, i64 %4980
  %4982 = load i8, i8* %4981, align 1, !tbaa !394
  %4983 = insertelement <32 x i8> %4978, i8 %4982, i32 22
  %4984 = extractelement <32 x i32> %4868, i32 23
  %4985 = sext i32 %4984 to i64
  %4986 = getelementptr inbounds i8, i8* %7, i64 %4985
  %4987 = load i8, i8* %4986, align 1, !tbaa !394
  %4988 = insertelement <32 x i8> %4983, i8 %4987, i32 23
  %4989 = extractelement <32 x i32> %4868, i32 24
  %4990 = sext i32 %4989 to i64
  %4991 = getelementptr inbounds i8, i8* %7, i64 %4990
  %4992 = load i8, i8* %4991, align 1, !tbaa !394
  %4993 = insertelement <32 x i8> %4988, i8 %4992, i32 24
  %4994 = extractelement <32 x i32> %4868, i32 25
  %4995 = sext i32 %4994 to i64
  %4996 = getelementptr inbounds i8, i8* %7, i64 %4995
  %4997 = load i8, i8* %4996, align 1, !tbaa !394
  %4998 = insertelement <32 x i8> %4993, i8 %4997, i32 25
  %4999 = extractelement <32 x i32> %4868, i32 26
  %5000 = sext i32 %4999 to i64
  %5001 = getelementptr inbounds i8, i8* %7, i64 %5000
  %5002 = load i8, i8* %5001, align 1, !tbaa !394
  %5003 = insertelement <32 x i8> %4998, i8 %5002, i32 26
  %5004 = extractelement <32 x i32> %4868, i32 27
  %5005 = sext i32 %5004 to i64
  %5006 = getelementptr inbounds i8, i8* %7, i64 %5005
  %5007 = load i8, i8* %5006, align 1, !tbaa !394
  %5008 = insertelement <32 x i8> %5003, i8 %5007, i32 27
  %5009 = extractelement <32 x i32> %4868, i32 28
  %5010 = sext i32 %5009 to i64
  %5011 = getelementptr inbounds i8, i8* %7, i64 %5010
  %5012 = load i8, i8* %5011, align 1, !tbaa !394
  %5013 = insertelement <32 x i8> %5008, i8 %5012, i32 28
  %5014 = extractelement <32 x i32> %4868, i32 29
  %5015 = sext i32 %5014 to i64
  %5016 = getelementptr inbounds i8, i8* %7, i64 %5015
  %5017 = load i8, i8* %5016, align 1, !tbaa !394
  %5018 = insertelement <32 x i8> %5013, i8 %5017, i32 29
  %5019 = extractelement <32 x i32> %4868, i32 30
  %5020 = sext i32 %5019 to i64
  %5021 = getelementptr inbounds i8, i8* %7, i64 %5020
  %5022 = load i8, i8* %5021, align 1, !tbaa !394
  %5023 = insertelement <32 x i8> %5018, i8 %5022, i32 30
  %5024 = extractelement <32 x i32> %4868, i32 31
  %5025 = sext i32 %5024 to i64
  %5026 = getelementptr inbounds i8, i8* %7, i64 %5025
  %5027 = load i8, i8* %5026, align 1, !tbaa !394
  %t220.s = insertelement <32 x i8> %5023, i8 %5027, i32 31
  %5028 = add nsw <32 x i32> %t217, %4501
  %5029 = extractelement <32 x i32> %5028, i32 0
  %5030 = sext i32 %5029 to i64
  %5031 = getelementptr inbounds i8, i8* %7, i64 %5030
  %5032 = load i8, i8* %5031, align 1, !tbaa !394
  %5033 = insertelement <32 x i8> undef, i8 %5032, i32 0
  %5034 = extractelement <32 x i32> %5028, i32 1
  %5035 = sext i32 %5034 to i64
  %5036 = getelementptr inbounds i8, i8* %7, i64 %5035
  %5037 = load i8, i8* %5036, align 1, !tbaa !394
  %5038 = insertelement <32 x i8> %5033, i8 %5037, i32 1
  %5039 = extractelement <32 x i32> %5028, i32 2
  %5040 = sext i32 %5039 to i64
  %5041 = getelementptr inbounds i8, i8* %7, i64 %5040
  %5042 = load i8, i8* %5041, align 1, !tbaa !394
  %5043 = insertelement <32 x i8> %5038, i8 %5042, i32 2
  %5044 = extractelement <32 x i32> %5028, i32 3
  %5045 = sext i32 %5044 to i64
  %5046 = getelementptr inbounds i8, i8* %7, i64 %5045
  %5047 = load i8, i8* %5046, align 1, !tbaa !394
  %5048 = insertelement <32 x i8> %5043, i8 %5047, i32 3
  %5049 = extractelement <32 x i32> %5028, i32 4
  %5050 = sext i32 %5049 to i64
  %5051 = getelementptr inbounds i8, i8* %7, i64 %5050
  %5052 = load i8, i8* %5051, align 1, !tbaa !394
  %5053 = insertelement <32 x i8> %5048, i8 %5052, i32 4
  %5054 = extractelement <32 x i32> %5028, i32 5
  %5055 = sext i32 %5054 to i64
  %5056 = getelementptr inbounds i8, i8* %7, i64 %5055
  %5057 = load i8, i8* %5056, align 1, !tbaa !394
  %5058 = insertelement <32 x i8> %5053, i8 %5057, i32 5
  %5059 = extractelement <32 x i32> %5028, i32 6
  %5060 = sext i32 %5059 to i64
  %5061 = getelementptr inbounds i8, i8* %7, i64 %5060
  %5062 = load i8, i8* %5061, align 1, !tbaa !394
  %5063 = insertelement <32 x i8> %5058, i8 %5062, i32 6
  %5064 = extractelement <32 x i32> %5028, i32 7
  %5065 = sext i32 %5064 to i64
  %5066 = getelementptr inbounds i8, i8* %7, i64 %5065
  %5067 = load i8, i8* %5066, align 1, !tbaa !394
  %5068 = insertelement <32 x i8> %5063, i8 %5067, i32 7
  %5069 = extractelement <32 x i32> %5028, i32 8
  %5070 = sext i32 %5069 to i64
  %5071 = getelementptr inbounds i8, i8* %7, i64 %5070
  %5072 = load i8, i8* %5071, align 1, !tbaa !394
  %5073 = insertelement <32 x i8> %5068, i8 %5072, i32 8
  %5074 = extractelement <32 x i32> %5028, i32 9
  %5075 = sext i32 %5074 to i64
  %5076 = getelementptr inbounds i8, i8* %7, i64 %5075
  %5077 = load i8, i8* %5076, align 1, !tbaa !394
  %5078 = insertelement <32 x i8> %5073, i8 %5077, i32 9
  %5079 = extractelement <32 x i32> %5028, i32 10
  %5080 = sext i32 %5079 to i64
  %5081 = getelementptr inbounds i8, i8* %7, i64 %5080
  %5082 = load i8, i8* %5081, align 1, !tbaa !394
  %5083 = insertelement <32 x i8> %5078, i8 %5082, i32 10
  %5084 = extractelement <32 x i32> %5028, i32 11
  %5085 = sext i32 %5084 to i64
  %5086 = getelementptr inbounds i8, i8* %7, i64 %5085
  %5087 = load i8, i8* %5086, align 1, !tbaa !394
  %5088 = insertelement <32 x i8> %5083, i8 %5087, i32 11
  %5089 = extractelement <32 x i32> %5028, i32 12
  %5090 = sext i32 %5089 to i64
  %5091 = getelementptr inbounds i8, i8* %7, i64 %5090
  %5092 = load i8, i8* %5091, align 1, !tbaa !394
  %5093 = insertelement <32 x i8> %5088, i8 %5092, i32 12
  %5094 = extractelement <32 x i32> %5028, i32 13
  %5095 = sext i32 %5094 to i64
  %5096 = getelementptr inbounds i8, i8* %7, i64 %5095
  %5097 = load i8, i8* %5096, align 1, !tbaa !394
  %5098 = insertelement <32 x i8> %5093, i8 %5097, i32 13
  %5099 = extractelement <32 x i32> %5028, i32 14
  %5100 = sext i32 %5099 to i64
  %5101 = getelementptr inbounds i8, i8* %7, i64 %5100
  %5102 = load i8, i8* %5101, align 1, !tbaa !394
  %5103 = insertelement <32 x i8> %5098, i8 %5102, i32 14
  %5104 = extractelement <32 x i32> %5028, i32 15
  %5105 = sext i32 %5104 to i64
  %5106 = getelementptr inbounds i8, i8* %7, i64 %5105
  %5107 = load i8, i8* %5106, align 1, !tbaa !394
  %5108 = insertelement <32 x i8> %5103, i8 %5107, i32 15
  %5109 = extractelement <32 x i32> %5028, i32 16
  %5110 = sext i32 %5109 to i64
  %5111 = getelementptr inbounds i8, i8* %7, i64 %5110
  %5112 = load i8, i8* %5111, align 1, !tbaa !394
  %5113 = insertelement <32 x i8> %5108, i8 %5112, i32 16
  %5114 = extractelement <32 x i32> %5028, i32 17
  %5115 = sext i32 %5114 to i64
  %5116 = getelementptr inbounds i8, i8* %7, i64 %5115
  %5117 = load i8, i8* %5116, align 1, !tbaa !394
  %5118 = insertelement <32 x i8> %5113, i8 %5117, i32 17
  %5119 = extractelement <32 x i32> %5028, i32 18
  %5120 = sext i32 %5119 to i64
  %5121 = getelementptr inbounds i8, i8* %7, i64 %5120
  %5122 = load i8, i8* %5121, align 1, !tbaa !394
  %5123 = insertelement <32 x i8> %5118, i8 %5122, i32 18
  %5124 = extractelement <32 x i32> %5028, i32 19
  %5125 = sext i32 %5124 to i64
  %5126 = getelementptr inbounds i8, i8* %7, i64 %5125
  %5127 = load i8, i8* %5126, align 1, !tbaa !394
  %5128 = insertelement <32 x i8> %5123, i8 %5127, i32 19
  %5129 = extractelement <32 x i32> %5028, i32 20
  %5130 = sext i32 %5129 to i64
  %5131 = getelementptr inbounds i8, i8* %7, i64 %5130
  %5132 = load i8, i8* %5131, align 1, !tbaa !394
  %5133 = insertelement <32 x i8> %5128, i8 %5132, i32 20
  %5134 = extractelement <32 x i32> %5028, i32 21
  %5135 = sext i32 %5134 to i64
  %5136 = getelementptr inbounds i8, i8* %7, i64 %5135
  %5137 = load i8, i8* %5136, align 1, !tbaa !394
  %5138 = insertelement <32 x i8> %5133, i8 %5137, i32 21
  %5139 = extractelement <32 x i32> %5028, i32 22
  %5140 = sext i32 %5139 to i64
  %5141 = getelementptr inbounds i8, i8* %7, i64 %5140
  %5142 = load i8, i8* %5141, align 1, !tbaa !394
  %5143 = insertelement <32 x i8> %5138, i8 %5142, i32 22
  %5144 = extractelement <32 x i32> %5028, i32 23
  %5145 = sext i32 %5144 to i64
  %5146 = getelementptr inbounds i8, i8* %7, i64 %5145
  %5147 = load i8, i8* %5146, align 1, !tbaa !394
  %5148 = insertelement <32 x i8> %5143, i8 %5147, i32 23
  %5149 = extractelement <32 x i32> %5028, i32 24
  %5150 = sext i32 %5149 to i64
  %5151 = getelementptr inbounds i8, i8* %7, i64 %5150
  %5152 = load i8, i8* %5151, align 1, !tbaa !394
  %5153 = insertelement <32 x i8> %5148, i8 %5152, i32 24
  %5154 = extractelement <32 x i32> %5028, i32 25
  %5155 = sext i32 %5154 to i64
  %5156 = getelementptr inbounds i8, i8* %7, i64 %5155
  %5157 = load i8, i8* %5156, align 1, !tbaa !394
  %5158 = insertelement <32 x i8> %5153, i8 %5157, i32 25
  %5159 = extractelement <32 x i32> %5028, i32 26
  %5160 = sext i32 %5159 to i64
  %5161 = getelementptr inbounds i8, i8* %7, i64 %5160
  %5162 = load i8, i8* %5161, align 1, !tbaa !394
  %5163 = insertelement <32 x i8> %5158, i8 %5162, i32 26
  %5164 = extractelement <32 x i32> %5028, i32 27
  %5165 = sext i32 %5164 to i64
  %5166 = getelementptr inbounds i8, i8* %7, i64 %5165
  %5167 = load i8, i8* %5166, align 1, !tbaa !394
  %5168 = insertelement <32 x i8> %5163, i8 %5167, i32 27
  %5169 = extractelement <32 x i32> %5028, i32 28
  %5170 = sext i32 %5169 to i64
  %5171 = getelementptr inbounds i8, i8* %7, i64 %5170
  %5172 = load i8, i8* %5171, align 1, !tbaa !394
  %5173 = insertelement <32 x i8> %5168, i8 %5172, i32 28
  %5174 = extractelement <32 x i32> %5028, i32 29
  %5175 = sext i32 %5174 to i64
  %5176 = getelementptr inbounds i8, i8* %7, i64 %5175
  %5177 = load i8, i8* %5176, align 1, !tbaa !394
  %5178 = insertelement <32 x i8> %5173, i8 %5177, i32 29
  %5179 = extractelement <32 x i32> %5028, i32 30
  %5180 = sext i32 %5179 to i64
  %5181 = getelementptr inbounds i8, i8* %7, i64 %5180
  %5182 = load i8, i8* %5181, align 1, !tbaa !394
  %5183 = insertelement <32 x i8> %5178, i8 %5182, i32 30
  %5184 = extractelement <32 x i32> %5028, i32 31
  %5185 = sext i32 %5184 to i64
  %5186 = getelementptr inbounds i8, i8* %7, i64 %5185
  %5187 = load i8, i8* %5186, align 1, !tbaa !394
  %t221.s = insertelement <32 x i8> %5183, i8 %5187, i32 31
  %5188 = add nsw <32 x i32> %t212, %4494
  %5189 = extractelement <32 x i32> %5188, i32 0
  %5190 = sext i32 %5189 to i64
  %5191 = getelementptr inbounds i8, i8* %7, i64 %5190
  %5192 = load i8, i8* %5191, align 1, !tbaa !394
  %5193 = insertelement <32 x i8> undef, i8 %5192, i32 0
  %5194 = extractelement <32 x i32> %5188, i32 1
  %5195 = sext i32 %5194 to i64
  %5196 = getelementptr inbounds i8, i8* %7, i64 %5195
  %5197 = load i8, i8* %5196, align 1, !tbaa !394
  %5198 = insertelement <32 x i8> %5193, i8 %5197, i32 1
  %5199 = extractelement <32 x i32> %5188, i32 2
  %5200 = sext i32 %5199 to i64
  %5201 = getelementptr inbounds i8, i8* %7, i64 %5200
  %5202 = load i8, i8* %5201, align 1, !tbaa !394
  %5203 = insertelement <32 x i8> %5198, i8 %5202, i32 2
  %5204 = extractelement <32 x i32> %5188, i32 3
  %5205 = sext i32 %5204 to i64
  %5206 = getelementptr inbounds i8, i8* %7, i64 %5205
  %5207 = load i8, i8* %5206, align 1, !tbaa !394
  %5208 = insertelement <32 x i8> %5203, i8 %5207, i32 3
  %5209 = extractelement <32 x i32> %5188, i32 4
  %5210 = sext i32 %5209 to i64
  %5211 = getelementptr inbounds i8, i8* %7, i64 %5210
  %5212 = load i8, i8* %5211, align 1, !tbaa !394
  %5213 = insertelement <32 x i8> %5208, i8 %5212, i32 4
  %5214 = extractelement <32 x i32> %5188, i32 5
  %5215 = sext i32 %5214 to i64
  %5216 = getelementptr inbounds i8, i8* %7, i64 %5215
  %5217 = load i8, i8* %5216, align 1, !tbaa !394
  %5218 = insertelement <32 x i8> %5213, i8 %5217, i32 5
  %5219 = extractelement <32 x i32> %5188, i32 6
  %5220 = sext i32 %5219 to i64
  %5221 = getelementptr inbounds i8, i8* %7, i64 %5220
  %5222 = load i8, i8* %5221, align 1, !tbaa !394
  %5223 = insertelement <32 x i8> %5218, i8 %5222, i32 6
  %5224 = extractelement <32 x i32> %5188, i32 7
  %5225 = sext i32 %5224 to i64
  %5226 = getelementptr inbounds i8, i8* %7, i64 %5225
  %5227 = load i8, i8* %5226, align 1, !tbaa !394
  %5228 = insertelement <32 x i8> %5223, i8 %5227, i32 7
  %5229 = extractelement <32 x i32> %5188, i32 8
  %5230 = sext i32 %5229 to i64
  %5231 = getelementptr inbounds i8, i8* %7, i64 %5230
  %5232 = load i8, i8* %5231, align 1, !tbaa !394
  %5233 = insertelement <32 x i8> %5228, i8 %5232, i32 8
  %5234 = extractelement <32 x i32> %5188, i32 9
  %5235 = sext i32 %5234 to i64
  %5236 = getelementptr inbounds i8, i8* %7, i64 %5235
  %5237 = load i8, i8* %5236, align 1, !tbaa !394
  %5238 = insertelement <32 x i8> %5233, i8 %5237, i32 9
  %5239 = extractelement <32 x i32> %5188, i32 10
  %5240 = sext i32 %5239 to i64
  %5241 = getelementptr inbounds i8, i8* %7, i64 %5240
  %5242 = load i8, i8* %5241, align 1, !tbaa !394
  %5243 = insertelement <32 x i8> %5238, i8 %5242, i32 10
  %5244 = extractelement <32 x i32> %5188, i32 11
  %5245 = sext i32 %5244 to i64
  %5246 = getelementptr inbounds i8, i8* %7, i64 %5245
  %5247 = load i8, i8* %5246, align 1, !tbaa !394
  %5248 = insertelement <32 x i8> %5243, i8 %5247, i32 11
  %5249 = extractelement <32 x i32> %5188, i32 12
  %5250 = sext i32 %5249 to i64
  %5251 = getelementptr inbounds i8, i8* %7, i64 %5250
  %5252 = load i8, i8* %5251, align 1, !tbaa !394
  %5253 = insertelement <32 x i8> %5248, i8 %5252, i32 12
  %5254 = extractelement <32 x i32> %5188, i32 13
  %5255 = sext i32 %5254 to i64
  %5256 = getelementptr inbounds i8, i8* %7, i64 %5255
  %5257 = load i8, i8* %5256, align 1, !tbaa !394
  %5258 = insertelement <32 x i8> %5253, i8 %5257, i32 13
  %5259 = extractelement <32 x i32> %5188, i32 14
  %5260 = sext i32 %5259 to i64
  %5261 = getelementptr inbounds i8, i8* %7, i64 %5260
  %5262 = load i8, i8* %5261, align 1, !tbaa !394
  %5263 = insertelement <32 x i8> %5258, i8 %5262, i32 14
  %5264 = extractelement <32 x i32> %5188, i32 15
  %5265 = sext i32 %5264 to i64
  %5266 = getelementptr inbounds i8, i8* %7, i64 %5265
  %5267 = load i8, i8* %5266, align 1, !tbaa !394
  %5268 = insertelement <32 x i8> %5263, i8 %5267, i32 15
  %5269 = extractelement <32 x i32> %5188, i32 16
  %5270 = sext i32 %5269 to i64
  %5271 = getelementptr inbounds i8, i8* %7, i64 %5270
  %5272 = load i8, i8* %5271, align 1, !tbaa !394
  %5273 = insertelement <32 x i8> %5268, i8 %5272, i32 16
  %5274 = extractelement <32 x i32> %5188, i32 17
  %5275 = sext i32 %5274 to i64
  %5276 = getelementptr inbounds i8, i8* %7, i64 %5275
  %5277 = load i8, i8* %5276, align 1, !tbaa !394
  %5278 = insertelement <32 x i8> %5273, i8 %5277, i32 17
  %5279 = extractelement <32 x i32> %5188, i32 18
  %5280 = sext i32 %5279 to i64
  %5281 = getelementptr inbounds i8, i8* %7, i64 %5280
  %5282 = load i8, i8* %5281, align 1, !tbaa !394
  %5283 = insertelement <32 x i8> %5278, i8 %5282, i32 18
  %5284 = extractelement <32 x i32> %5188, i32 19
  %5285 = sext i32 %5284 to i64
  %5286 = getelementptr inbounds i8, i8* %7, i64 %5285
  %5287 = load i8, i8* %5286, align 1, !tbaa !394
  %5288 = insertelement <32 x i8> %5283, i8 %5287, i32 19
  %5289 = extractelement <32 x i32> %5188, i32 20
  %5290 = sext i32 %5289 to i64
  %5291 = getelementptr inbounds i8, i8* %7, i64 %5290
  %5292 = load i8, i8* %5291, align 1, !tbaa !394
  %5293 = insertelement <32 x i8> %5288, i8 %5292, i32 20
  %5294 = extractelement <32 x i32> %5188, i32 21
  %5295 = sext i32 %5294 to i64
  %5296 = getelementptr inbounds i8, i8* %7, i64 %5295
  %5297 = load i8, i8* %5296, align 1, !tbaa !394
  %5298 = insertelement <32 x i8> %5293, i8 %5297, i32 21
  %5299 = extractelement <32 x i32> %5188, i32 22
  %5300 = sext i32 %5299 to i64
  %5301 = getelementptr inbounds i8, i8* %7, i64 %5300
  %5302 = load i8, i8* %5301, align 1, !tbaa !394
  %5303 = insertelement <32 x i8> %5298, i8 %5302, i32 22
  %5304 = extractelement <32 x i32> %5188, i32 23
  %5305 = sext i32 %5304 to i64
  %5306 = getelementptr inbounds i8, i8* %7, i64 %5305
  %5307 = load i8, i8* %5306, align 1, !tbaa !394
  %5308 = insertelement <32 x i8> %5303, i8 %5307, i32 23
  %5309 = extractelement <32 x i32> %5188, i32 24
  %5310 = sext i32 %5309 to i64
  %5311 = getelementptr inbounds i8, i8* %7, i64 %5310
  %5312 = load i8, i8* %5311, align 1, !tbaa !394
  %5313 = insertelement <32 x i8> %5308, i8 %5312, i32 24
  %5314 = extractelement <32 x i32> %5188, i32 25
  %5315 = sext i32 %5314 to i64
  %5316 = getelementptr inbounds i8, i8* %7, i64 %5315
  %5317 = load i8, i8* %5316, align 1, !tbaa !394
  %5318 = insertelement <32 x i8> %5313, i8 %5317, i32 25
  %5319 = extractelement <32 x i32> %5188, i32 26
  %5320 = sext i32 %5319 to i64
  %5321 = getelementptr inbounds i8, i8* %7, i64 %5320
  %5322 = load i8, i8* %5321, align 1, !tbaa !394
  %5323 = insertelement <32 x i8> %5318, i8 %5322, i32 26
  %5324 = extractelement <32 x i32> %5188, i32 27
  %5325 = sext i32 %5324 to i64
  %5326 = getelementptr inbounds i8, i8* %7, i64 %5325
  %5327 = load i8, i8* %5326, align 1, !tbaa !394
  %5328 = insertelement <32 x i8> %5323, i8 %5327, i32 27
  %5329 = extractelement <32 x i32> %5188, i32 28
  %5330 = sext i32 %5329 to i64
  %5331 = getelementptr inbounds i8, i8* %7, i64 %5330
  %5332 = load i8, i8* %5331, align 1, !tbaa !394
  %5333 = insertelement <32 x i8> %5328, i8 %5332, i32 28
  %5334 = extractelement <32 x i32> %5188, i32 29
  %5335 = sext i32 %5334 to i64
  %5336 = getelementptr inbounds i8, i8* %7, i64 %5335
  %5337 = load i8, i8* %5336, align 1, !tbaa !394
  %5338 = insertelement <32 x i8> %5333, i8 %5337, i32 29
  %5339 = extractelement <32 x i32> %5188, i32 30
  %5340 = sext i32 %5339 to i64
  %5341 = getelementptr inbounds i8, i8* %7, i64 %5340
  %5342 = load i8, i8* %5341, align 1, !tbaa !394
  %5343 = insertelement <32 x i8> %5338, i8 %5342, i32 30
  %5344 = extractelement <32 x i32> %5188, i32 31
  %5345 = sext i32 %5344 to i64
  %5346 = getelementptr inbounds i8, i8* %7, i64 %5345
  %5347 = load i8, i8* %5346, align 1, !tbaa !394
  %5348 = insertelement <32 x i8> %5343, i8 %5347, i32 31
  %5349 = zext <32 x i8> %5348 to <32 x i16>
  %5350 = shl nuw nsw <32 x i16> %5349, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %5351 = zext <32 x i8> %t216.s to <32 x i16>
  %5352 = zext <32 x i8> %t218.s to <32 x i16>
  %5353 = add nuw nsw <32 x i16> %5352, %5351
  %5354 = add nuw nsw <32 x i16> %5353, %5350
  %5355 = add nsw <32 x i32> %t212, %4501
  %5356 = extractelement <32 x i32> %5355, i32 0
  %5357 = sext i32 %5356 to i64
  %5358 = getelementptr inbounds i8, i8* %7, i64 %5357
  %5359 = load i8, i8* %5358, align 1, !tbaa !394
  %5360 = insertelement <32 x i8> undef, i8 %5359, i32 0
  %5361 = extractelement <32 x i32> %5355, i32 1
  %5362 = sext i32 %5361 to i64
  %5363 = getelementptr inbounds i8, i8* %7, i64 %5362
  %5364 = load i8, i8* %5363, align 1, !tbaa !394
  %5365 = insertelement <32 x i8> %5360, i8 %5364, i32 1
  %5366 = extractelement <32 x i32> %5355, i32 2
  %5367 = sext i32 %5366 to i64
  %5368 = getelementptr inbounds i8, i8* %7, i64 %5367
  %5369 = load i8, i8* %5368, align 1, !tbaa !394
  %5370 = insertelement <32 x i8> %5365, i8 %5369, i32 2
  %5371 = extractelement <32 x i32> %5355, i32 3
  %5372 = sext i32 %5371 to i64
  %5373 = getelementptr inbounds i8, i8* %7, i64 %5372
  %5374 = load i8, i8* %5373, align 1, !tbaa !394
  %5375 = insertelement <32 x i8> %5370, i8 %5374, i32 3
  %5376 = extractelement <32 x i32> %5355, i32 4
  %5377 = sext i32 %5376 to i64
  %5378 = getelementptr inbounds i8, i8* %7, i64 %5377
  %5379 = load i8, i8* %5378, align 1, !tbaa !394
  %5380 = insertelement <32 x i8> %5375, i8 %5379, i32 4
  %5381 = extractelement <32 x i32> %5355, i32 5
  %5382 = sext i32 %5381 to i64
  %5383 = getelementptr inbounds i8, i8* %7, i64 %5382
  %5384 = load i8, i8* %5383, align 1, !tbaa !394
  %5385 = insertelement <32 x i8> %5380, i8 %5384, i32 5
  %5386 = extractelement <32 x i32> %5355, i32 6
  %5387 = sext i32 %5386 to i64
  %5388 = getelementptr inbounds i8, i8* %7, i64 %5387
  %5389 = load i8, i8* %5388, align 1, !tbaa !394
  %5390 = insertelement <32 x i8> %5385, i8 %5389, i32 6
  %5391 = extractelement <32 x i32> %5355, i32 7
  %5392 = sext i32 %5391 to i64
  %5393 = getelementptr inbounds i8, i8* %7, i64 %5392
  %5394 = load i8, i8* %5393, align 1, !tbaa !394
  %5395 = insertelement <32 x i8> %5390, i8 %5394, i32 7
  %5396 = extractelement <32 x i32> %5355, i32 8
  %5397 = sext i32 %5396 to i64
  %5398 = getelementptr inbounds i8, i8* %7, i64 %5397
  %5399 = load i8, i8* %5398, align 1, !tbaa !394
  %5400 = insertelement <32 x i8> %5395, i8 %5399, i32 8
  %5401 = extractelement <32 x i32> %5355, i32 9
  %5402 = sext i32 %5401 to i64
  %5403 = getelementptr inbounds i8, i8* %7, i64 %5402
  %5404 = load i8, i8* %5403, align 1, !tbaa !394
  %5405 = insertelement <32 x i8> %5400, i8 %5404, i32 9
  %5406 = extractelement <32 x i32> %5355, i32 10
  %5407 = sext i32 %5406 to i64
  %5408 = getelementptr inbounds i8, i8* %7, i64 %5407
  %5409 = load i8, i8* %5408, align 1, !tbaa !394
  %5410 = insertelement <32 x i8> %5405, i8 %5409, i32 10
  %5411 = extractelement <32 x i32> %5355, i32 11
  %5412 = sext i32 %5411 to i64
  %5413 = getelementptr inbounds i8, i8* %7, i64 %5412
  %5414 = load i8, i8* %5413, align 1, !tbaa !394
  %5415 = insertelement <32 x i8> %5410, i8 %5414, i32 11
  %5416 = extractelement <32 x i32> %5355, i32 12
  %5417 = sext i32 %5416 to i64
  %5418 = getelementptr inbounds i8, i8* %7, i64 %5417
  %5419 = load i8, i8* %5418, align 1, !tbaa !394
  %5420 = insertelement <32 x i8> %5415, i8 %5419, i32 12
  %5421 = extractelement <32 x i32> %5355, i32 13
  %5422 = sext i32 %5421 to i64
  %5423 = getelementptr inbounds i8, i8* %7, i64 %5422
  %5424 = load i8, i8* %5423, align 1, !tbaa !394
  %5425 = insertelement <32 x i8> %5420, i8 %5424, i32 13
  %5426 = extractelement <32 x i32> %5355, i32 14
  %5427 = sext i32 %5426 to i64
  %5428 = getelementptr inbounds i8, i8* %7, i64 %5427
  %5429 = load i8, i8* %5428, align 1, !tbaa !394
  %5430 = insertelement <32 x i8> %5425, i8 %5429, i32 14
  %5431 = extractelement <32 x i32> %5355, i32 15
  %5432 = sext i32 %5431 to i64
  %5433 = getelementptr inbounds i8, i8* %7, i64 %5432
  %5434 = load i8, i8* %5433, align 1, !tbaa !394
  %5435 = insertelement <32 x i8> %5430, i8 %5434, i32 15
  %5436 = extractelement <32 x i32> %5355, i32 16
  %5437 = sext i32 %5436 to i64
  %5438 = getelementptr inbounds i8, i8* %7, i64 %5437
  %5439 = load i8, i8* %5438, align 1, !tbaa !394
  %5440 = insertelement <32 x i8> %5435, i8 %5439, i32 16
  %5441 = extractelement <32 x i32> %5355, i32 17
  %5442 = sext i32 %5441 to i64
  %5443 = getelementptr inbounds i8, i8* %7, i64 %5442
  %5444 = load i8, i8* %5443, align 1, !tbaa !394
  %5445 = insertelement <32 x i8> %5440, i8 %5444, i32 17
  %5446 = extractelement <32 x i32> %5355, i32 18
  %5447 = sext i32 %5446 to i64
  %5448 = getelementptr inbounds i8, i8* %7, i64 %5447
  %5449 = load i8, i8* %5448, align 1, !tbaa !394
  %5450 = insertelement <32 x i8> %5445, i8 %5449, i32 18
  %5451 = extractelement <32 x i32> %5355, i32 19
  %5452 = sext i32 %5451 to i64
  %5453 = getelementptr inbounds i8, i8* %7, i64 %5452
  %5454 = load i8, i8* %5453, align 1, !tbaa !394
  %5455 = insertelement <32 x i8> %5450, i8 %5454, i32 19
  %5456 = extractelement <32 x i32> %5355, i32 20
  %5457 = sext i32 %5456 to i64
  %5458 = getelementptr inbounds i8, i8* %7, i64 %5457
  %5459 = load i8, i8* %5458, align 1, !tbaa !394
  %5460 = insertelement <32 x i8> %5455, i8 %5459, i32 20
  %5461 = extractelement <32 x i32> %5355, i32 21
  %5462 = sext i32 %5461 to i64
  %5463 = getelementptr inbounds i8, i8* %7, i64 %5462
  %5464 = load i8, i8* %5463, align 1, !tbaa !394
  %5465 = insertelement <32 x i8> %5460, i8 %5464, i32 21
  %5466 = extractelement <32 x i32> %5355, i32 22
  %5467 = sext i32 %5466 to i64
  %5468 = getelementptr inbounds i8, i8* %7, i64 %5467
  %5469 = load i8, i8* %5468, align 1, !tbaa !394
  %5470 = insertelement <32 x i8> %5465, i8 %5469, i32 22
  %5471 = extractelement <32 x i32> %5355, i32 23
  %5472 = sext i32 %5471 to i64
  %5473 = getelementptr inbounds i8, i8* %7, i64 %5472
  %5474 = load i8, i8* %5473, align 1, !tbaa !394
  %5475 = insertelement <32 x i8> %5470, i8 %5474, i32 23
  %5476 = extractelement <32 x i32> %5355, i32 24
  %5477 = sext i32 %5476 to i64
  %5478 = getelementptr inbounds i8, i8* %7, i64 %5477
  %5479 = load i8, i8* %5478, align 1, !tbaa !394
  %5480 = insertelement <32 x i8> %5475, i8 %5479, i32 24
  %5481 = extractelement <32 x i32> %5355, i32 25
  %5482 = sext i32 %5481 to i64
  %5483 = getelementptr inbounds i8, i8* %7, i64 %5482
  %5484 = load i8, i8* %5483, align 1, !tbaa !394
  %5485 = insertelement <32 x i8> %5480, i8 %5484, i32 25
  %5486 = extractelement <32 x i32> %5355, i32 26
  %5487 = sext i32 %5486 to i64
  %5488 = getelementptr inbounds i8, i8* %7, i64 %5487
  %5489 = load i8, i8* %5488, align 1, !tbaa !394
  %5490 = insertelement <32 x i8> %5485, i8 %5489, i32 26
  %5491 = extractelement <32 x i32> %5355, i32 27
  %5492 = sext i32 %5491 to i64
  %5493 = getelementptr inbounds i8, i8* %7, i64 %5492
  %5494 = load i8, i8* %5493, align 1, !tbaa !394
  %5495 = insertelement <32 x i8> %5490, i8 %5494, i32 27
  %5496 = extractelement <32 x i32> %5355, i32 28
  %5497 = sext i32 %5496 to i64
  %5498 = getelementptr inbounds i8, i8* %7, i64 %5497
  %5499 = load i8, i8* %5498, align 1, !tbaa !394
  %5500 = insertelement <32 x i8> %5495, i8 %5499, i32 28
  %5501 = extractelement <32 x i32> %5355, i32 29
  %5502 = sext i32 %5501 to i64
  %5503 = getelementptr inbounds i8, i8* %7, i64 %5502
  %5504 = load i8, i8* %5503, align 1, !tbaa !394
  %5505 = insertelement <32 x i8> %5500, i8 %5504, i32 29
  %5506 = extractelement <32 x i32> %5355, i32 30
  %5507 = sext i32 %5506 to i64
  %5508 = getelementptr inbounds i8, i8* %7, i64 %5507
  %5509 = load i8, i8* %5508, align 1, !tbaa !394
  %5510 = insertelement <32 x i8> %5505, i8 %5509, i32 30
  %5511 = extractelement <32 x i32> %5355, i32 31
  %5512 = sext i32 %5511 to i64
  %5513 = getelementptr inbounds i8, i8* %7, i64 %5512
  %5514 = load i8, i8* %5513, align 1, !tbaa !394
  %5515 = insertelement <32 x i8> %5510, i8 %5514, i32 31
  %5516 = zext <32 x i8> %5515 to <32 x i16>
  %5517 = shl nuw nsw <32 x i16> %5516, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %5518 = zext <32 x i8> %t220.s to <32 x i16>
  %5519 = zext <32 x i8> %t221.s to <32 x i16>
  %5520 = add nuw nsw <32 x i16> %5519, %5518
  %5521 = add nuw nsw <32 x i16> %5520, %5517
  %5522 = shufflevector <32 x i16> %5354, <32 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5523 = shufflevector <32 x i16> %5521, <32 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5524 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %5522, <16 x i16> %5523) #10
  %5525 = shufflevector <32 x i16> %5354, <32 x i16> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5526 = shufflevector <32 x i16> %5521, <32 x i16> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5527 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %5525, <16 x i16> %5526) #10
  %5528 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %5523, <16 x i16> %5522) #10
  %5529 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %5526, <16 x i16> %5525) #10
  %5530 = or <16 x i16> %5524, %5528
  %5531 = or <16 x i16> %5527, %5529
  %5532 = add nsw <32 x i32> %t215, %t238
  %5533 = extractelement <32 x i32> %5532, i32 0
  %5534 = sext i32 %5533 to i64
  %5535 = getelementptr inbounds i8, i8* %7, i64 %5534
  %5536 = load i8, i8* %5535, align 1, !tbaa !394
  %5537 = insertelement <32 x i8> undef, i8 %5536, i32 0
  %5538 = extractelement <32 x i32> %5532, i32 1
  %5539 = sext i32 %5538 to i64
  %5540 = getelementptr inbounds i8, i8* %7, i64 %5539
  %5541 = load i8, i8* %5540, align 1, !tbaa !394
  %5542 = insertelement <32 x i8> %5537, i8 %5541, i32 1
  %5543 = extractelement <32 x i32> %5532, i32 2
  %5544 = sext i32 %5543 to i64
  %5545 = getelementptr inbounds i8, i8* %7, i64 %5544
  %5546 = load i8, i8* %5545, align 1, !tbaa !394
  %5547 = insertelement <32 x i8> %5542, i8 %5546, i32 2
  %5548 = extractelement <32 x i32> %5532, i32 3
  %5549 = sext i32 %5548 to i64
  %5550 = getelementptr inbounds i8, i8* %7, i64 %5549
  %5551 = load i8, i8* %5550, align 1, !tbaa !394
  %5552 = insertelement <32 x i8> %5547, i8 %5551, i32 3
  %5553 = extractelement <32 x i32> %5532, i32 4
  %5554 = sext i32 %5553 to i64
  %5555 = getelementptr inbounds i8, i8* %7, i64 %5554
  %5556 = load i8, i8* %5555, align 1, !tbaa !394
  %5557 = insertelement <32 x i8> %5552, i8 %5556, i32 4
  %5558 = extractelement <32 x i32> %5532, i32 5
  %5559 = sext i32 %5558 to i64
  %5560 = getelementptr inbounds i8, i8* %7, i64 %5559
  %5561 = load i8, i8* %5560, align 1, !tbaa !394
  %5562 = insertelement <32 x i8> %5557, i8 %5561, i32 5
  %5563 = extractelement <32 x i32> %5532, i32 6
  %5564 = sext i32 %5563 to i64
  %5565 = getelementptr inbounds i8, i8* %7, i64 %5564
  %5566 = load i8, i8* %5565, align 1, !tbaa !394
  %5567 = insertelement <32 x i8> %5562, i8 %5566, i32 6
  %5568 = extractelement <32 x i32> %5532, i32 7
  %5569 = sext i32 %5568 to i64
  %5570 = getelementptr inbounds i8, i8* %7, i64 %5569
  %5571 = load i8, i8* %5570, align 1, !tbaa !394
  %5572 = insertelement <32 x i8> %5567, i8 %5571, i32 7
  %5573 = extractelement <32 x i32> %5532, i32 8
  %5574 = sext i32 %5573 to i64
  %5575 = getelementptr inbounds i8, i8* %7, i64 %5574
  %5576 = load i8, i8* %5575, align 1, !tbaa !394
  %5577 = insertelement <32 x i8> %5572, i8 %5576, i32 8
  %5578 = extractelement <32 x i32> %5532, i32 9
  %5579 = sext i32 %5578 to i64
  %5580 = getelementptr inbounds i8, i8* %7, i64 %5579
  %5581 = load i8, i8* %5580, align 1, !tbaa !394
  %5582 = insertelement <32 x i8> %5577, i8 %5581, i32 9
  %5583 = extractelement <32 x i32> %5532, i32 10
  %5584 = sext i32 %5583 to i64
  %5585 = getelementptr inbounds i8, i8* %7, i64 %5584
  %5586 = load i8, i8* %5585, align 1, !tbaa !394
  %5587 = insertelement <32 x i8> %5582, i8 %5586, i32 10
  %5588 = extractelement <32 x i32> %5532, i32 11
  %5589 = sext i32 %5588 to i64
  %5590 = getelementptr inbounds i8, i8* %7, i64 %5589
  %5591 = load i8, i8* %5590, align 1, !tbaa !394
  %5592 = insertelement <32 x i8> %5587, i8 %5591, i32 11
  %5593 = extractelement <32 x i32> %5532, i32 12
  %5594 = sext i32 %5593 to i64
  %5595 = getelementptr inbounds i8, i8* %7, i64 %5594
  %5596 = load i8, i8* %5595, align 1, !tbaa !394
  %5597 = insertelement <32 x i8> %5592, i8 %5596, i32 12
  %5598 = extractelement <32 x i32> %5532, i32 13
  %5599 = sext i32 %5598 to i64
  %5600 = getelementptr inbounds i8, i8* %7, i64 %5599
  %5601 = load i8, i8* %5600, align 1, !tbaa !394
  %5602 = insertelement <32 x i8> %5597, i8 %5601, i32 13
  %5603 = extractelement <32 x i32> %5532, i32 14
  %5604 = sext i32 %5603 to i64
  %5605 = getelementptr inbounds i8, i8* %7, i64 %5604
  %5606 = load i8, i8* %5605, align 1, !tbaa !394
  %5607 = insertelement <32 x i8> %5602, i8 %5606, i32 14
  %5608 = extractelement <32 x i32> %5532, i32 15
  %5609 = sext i32 %5608 to i64
  %5610 = getelementptr inbounds i8, i8* %7, i64 %5609
  %5611 = load i8, i8* %5610, align 1, !tbaa !394
  %5612 = insertelement <32 x i8> %5607, i8 %5611, i32 15
  %5613 = extractelement <32 x i32> %5532, i32 16
  %5614 = sext i32 %5613 to i64
  %5615 = getelementptr inbounds i8, i8* %7, i64 %5614
  %5616 = load i8, i8* %5615, align 1, !tbaa !394
  %5617 = insertelement <32 x i8> %5612, i8 %5616, i32 16
  %5618 = extractelement <32 x i32> %5532, i32 17
  %5619 = sext i32 %5618 to i64
  %5620 = getelementptr inbounds i8, i8* %7, i64 %5619
  %5621 = load i8, i8* %5620, align 1, !tbaa !394
  %5622 = insertelement <32 x i8> %5617, i8 %5621, i32 17
  %5623 = extractelement <32 x i32> %5532, i32 18
  %5624 = sext i32 %5623 to i64
  %5625 = getelementptr inbounds i8, i8* %7, i64 %5624
  %5626 = load i8, i8* %5625, align 1, !tbaa !394
  %5627 = insertelement <32 x i8> %5622, i8 %5626, i32 18
  %5628 = extractelement <32 x i32> %5532, i32 19
  %5629 = sext i32 %5628 to i64
  %5630 = getelementptr inbounds i8, i8* %7, i64 %5629
  %5631 = load i8, i8* %5630, align 1, !tbaa !394
  %5632 = insertelement <32 x i8> %5627, i8 %5631, i32 19
  %5633 = extractelement <32 x i32> %5532, i32 20
  %5634 = sext i32 %5633 to i64
  %5635 = getelementptr inbounds i8, i8* %7, i64 %5634
  %5636 = load i8, i8* %5635, align 1, !tbaa !394
  %5637 = insertelement <32 x i8> %5632, i8 %5636, i32 20
  %5638 = extractelement <32 x i32> %5532, i32 21
  %5639 = sext i32 %5638 to i64
  %5640 = getelementptr inbounds i8, i8* %7, i64 %5639
  %5641 = load i8, i8* %5640, align 1, !tbaa !394
  %5642 = insertelement <32 x i8> %5637, i8 %5641, i32 21
  %5643 = extractelement <32 x i32> %5532, i32 22
  %5644 = sext i32 %5643 to i64
  %5645 = getelementptr inbounds i8, i8* %7, i64 %5644
  %5646 = load i8, i8* %5645, align 1, !tbaa !394
  %5647 = insertelement <32 x i8> %5642, i8 %5646, i32 22
  %5648 = extractelement <32 x i32> %5532, i32 23
  %5649 = sext i32 %5648 to i64
  %5650 = getelementptr inbounds i8, i8* %7, i64 %5649
  %5651 = load i8, i8* %5650, align 1, !tbaa !394
  %5652 = insertelement <32 x i8> %5647, i8 %5651, i32 23
  %5653 = extractelement <32 x i32> %5532, i32 24
  %5654 = sext i32 %5653 to i64
  %5655 = getelementptr inbounds i8, i8* %7, i64 %5654
  %5656 = load i8, i8* %5655, align 1, !tbaa !394
  %5657 = insertelement <32 x i8> %5652, i8 %5656, i32 24
  %5658 = extractelement <32 x i32> %5532, i32 25
  %5659 = sext i32 %5658 to i64
  %5660 = getelementptr inbounds i8, i8* %7, i64 %5659
  %5661 = load i8, i8* %5660, align 1, !tbaa !394
  %5662 = insertelement <32 x i8> %5657, i8 %5661, i32 25
  %5663 = extractelement <32 x i32> %5532, i32 26
  %5664 = sext i32 %5663 to i64
  %5665 = getelementptr inbounds i8, i8* %7, i64 %5664
  %5666 = load i8, i8* %5665, align 1, !tbaa !394
  %5667 = insertelement <32 x i8> %5662, i8 %5666, i32 26
  %5668 = extractelement <32 x i32> %5532, i32 27
  %5669 = sext i32 %5668 to i64
  %5670 = getelementptr inbounds i8, i8* %7, i64 %5669
  %5671 = load i8, i8* %5670, align 1, !tbaa !394
  %5672 = insertelement <32 x i8> %5667, i8 %5671, i32 27
  %5673 = extractelement <32 x i32> %5532, i32 28
  %5674 = sext i32 %5673 to i64
  %5675 = getelementptr inbounds i8, i8* %7, i64 %5674
  %5676 = load i8, i8* %5675, align 1, !tbaa !394
  %5677 = insertelement <32 x i8> %5672, i8 %5676, i32 28
  %5678 = extractelement <32 x i32> %5532, i32 29
  %5679 = sext i32 %5678 to i64
  %5680 = getelementptr inbounds i8, i8* %7, i64 %5679
  %5681 = load i8, i8* %5680, align 1, !tbaa !394
  %5682 = insertelement <32 x i8> %5677, i8 %5681, i32 29
  %5683 = extractelement <32 x i32> %5532, i32 30
  %5684 = sext i32 %5683 to i64
  %5685 = getelementptr inbounds i8, i8* %7, i64 %5684
  %5686 = load i8, i8* %5685, align 1, !tbaa !394
  %5687 = insertelement <32 x i8> %5682, i8 %5686, i32 30
  %5688 = extractelement <32 x i32> %5532, i32 31
  %5689 = sext i32 %5688 to i64
  %5690 = getelementptr inbounds i8, i8* %7, i64 %5689
  %5691 = load i8, i8* %5690, align 1, !tbaa !394
  %5692 = insertelement <32 x i8> %5687, i8 %5691, i32 31
  %5693 = zext <32 x i8> %5692 to <32 x i16>
  %5694 = shl nuw nsw <32 x i16> %5693, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %5695 = add nuw nsw <32 x i16> %5518, %5351
  %5696 = add nuw nsw <32 x i16> %5695, %5694
  %5697 = add nsw <32 x i32> %t217, %t238
  %5698 = extractelement <32 x i32> %5697, i32 0
  %5699 = sext i32 %5698 to i64
  %5700 = getelementptr inbounds i8, i8* %7, i64 %5699
  %5701 = load i8, i8* %5700, align 1, !tbaa !394
  %5702 = insertelement <32 x i8> undef, i8 %5701, i32 0
  %5703 = extractelement <32 x i32> %5697, i32 1
  %5704 = sext i32 %5703 to i64
  %5705 = getelementptr inbounds i8, i8* %7, i64 %5704
  %5706 = load i8, i8* %5705, align 1, !tbaa !394
  %5707 = insertelement <32 x i8> %5702, i8 %5706, i32 1
  %5708 = extractelement <32 x i32> %5697, i32 2
  %5709 = sext i32 %5708 to i64
  %5710 = getelementptr inbounds i8, i8* %7, i64 %5709
  %5711 = load i8, i8* %5710, align 1, !tbaa !394
  %5712 = insertelement <32 x i8> %5707, i8 %5711, i32 2
  %5713 = extractelement <32 x i32> %5697, i32 3
  %5714 = sext i32 %5713 to i64
  %5715 = getelementptr inbounds i8, i8* %7, i64 %5714
  %5716 = load i8, i8* %5715, align 1, !tbaa !394
  %5717 = insertelement <32 x i8> %5712, i8 %5716, i32 3
  %5718 = extractelement <32 x i32> %5697, i32 4
  %5719 = sext i32 %5718 to i64
  %5720 = getelementptr inbounds i8, i8* %7, i64 %5719
  %5721 = load i8, i8* %5720, align 1, !tbaa !394
  %5722 = insertelement <32 x i8> %5717, i8 %5721, i32 4
  %5723 = extractelement <32 x i32> %5697, i32 5
  %5724 = sext i32 %5723 to i64
  %5725 = getelementptr inbounds i8, i8* %7, i64 %5724
  %5726 = load i8, i8* %5725, align 1, !tbaa !394
  %5727 = insertelement <32 x i8> %5722, i8 %5726, i32 5
  %5728 = extractelement <32 x i32> %5697, i32 6
  %5729 = sext i32 %5728 to i64
  %5730 = getelementptr inbounds i8, i8* %7, i64 %5729
  %5731 = load i8, i8* %5730, align 1, !tbaa !394
  %5732 = insertelement <32 x i8> %5727, i8 %5731, i32 6
  %5733 = extractelement <32 x i32> %5697, i32 7
  %5734 = sext i32 %5733 to i64
  %5735 = getelementptr inbounds i8, i8* %7, i64 %5734
  %5736 = load i8, i8* %5735, align 1, !tbaa !394
  %5737 = insertelement <32 x i8> %5732, i8 %5736, i32 7
  %5738 = extractelement <32 x i32> %5697, i32 8
  %5739 = sext i32 %5738 to i64
  %5740 = getelementptr inbounds i8, i8* %7, i64 %5739
  %5741 = load i8, i8* %5740, align 1, !tbaa !394
  %5742 = insertelement <32 x i8> %5737, i8 %5741, i32 8
  %5743 = extractelement <32 x i32> %5697, i32 9
  %5744 = sext i32 %5743 to i64
  %5745 = getelementptr inbounds i8, i8* %7, i64 %5744
  %5746 = load i8, i8* %5745, align 1, !tbaa !394
  %5747 = insertelement <32 x i8> %5742, i8 %5746, i32 9
  %5748 = extractelement <32 x i32> %5697, i32 10
  %5749 = sext i32 %5748 to i64
  %5750 = getelementptr inbounds i8, i8* %7, i64 %5749
  %5751 = load i8, i8* %5750, align 1, !tbaa !394
  %5752 = insertelement <32 x i8> %5747, i8 %5751, i32 10
  %5753 = extractelement <32 x i32> %5697, i32 11
  %5754 = sext i32 %5753 to i64
  %5755 = getelementptr inbounds i8, i8* %7, i64 %5754
  %5756 = load i8, i8* %5755, align 1, !tbaa !394
  %5757 = insertelement <32 x i8> %5752, i8 %5756, i32 11
  %5758 = extractelement <32 x i32> %5697, i32 12
  %5759 = sext i32 %5758 to i64
  %5760 = getelementptr inbounds i8, i8* %7, i64 %5759
  %5761 = load i8, i8* %5760, align 1, !tbaa !394
  %5762 = insertelement <32 x i8> %5757, i8 %5761, i32 12
  %5763 = extractelement <32 x i32> %5697, i32 13
  %5764 = sext i32 %5763 to i64
  %5765 = getelementptr inbounds i8, i8* %7, i64 %5764
  %5766 = load i8, i8* %5765, align 1, !tbaa !394
  %5767 = insertelement <32 x i8> %5762, i8 %5766, i32 13
  %5768 = extractelement <32 x i32> %5697, i32 14
  %5769 = sext i32 %5768 to i64
  %5770 = getelementptr inbounds i8, i8* %7, i64 %5769
  %5771 = load i8, i8* %5770, align 1, !tbaa !394
  %5772 = insertelement <32 x i8> %5767, i8 %5771, i32 14
  %5773 = extractelement <32 x i32> %5697, i32 15
  %5774 = sext i32 %5773 to i64
  %5775 = getelementptr inbounds i8, i8* %7, i64 %5774
  %5776 = load i8, i8* %5775, align 1, !tbaa !394
  %5777 = insertelement <32 x i8> %5772, i8 %5776, i32 15
  %5778 = extractelement <32 x i32> %5697, i32 16
  %5779 = sext i32 %5778 to i64
  %5780 = getelementptr inbounds i8, i8* %7, i64 %5779
  %5781 = load i8, i8* %5780, align 1, !tbaa !394
  %5782 = insertelement <32 x i8> %5777, i8 %5781, i32 16
  %5783 = extractelement <32 x i32> %5697, i32 17
  %5784 = sext i32 %5783 to i64
  %5785 = getelementptr inbounds i8, i8* %7, i64 %5784
  %5786 = load i8, i8* %5785, align 1, !tbaa !394
  %5787 = insertelement <32 x i8> %5782, i8 %5786, i32 17
  %5788 = extractelement <32 x i32> %5697, i32 18
  %5789 = sext i32 %5788 to i64
  %5790 = getelementptr inbounds i8, i8* %7, i64 %5789
  %5791 = load i8, i8* %5790, align 1, !tbaa !394
  %5792 = insertelement <32 x i8> %5787, i8 %5791, i32 18
  %5793 = extractelement <32 x i32> %5697, i32 19
  %5794 = sext i32 %5793 to i64
  %5795 = getelementptr inbounds i8, i8* %7, i64 %5794
  %5796 = load i8, i8* %5795, align 1, !tbaa !394
  %5797 = insertelement <32 x i8> %5792, i8 %5796, i32 19
  %5798 = extractelement <32 x i32> %5697, i32 20
  %5799 = sext i32 %5798 to i64
  %5800 = getelementptr inbounds i8, i8* %7, i64 %5799
  %5801 = load i8, i8* %5800, align 1, !tbaa !394
  %5802 = insertelement <32 x i8> %5797, i8 %5801, i32 20
  %5803 = extractelement <32 x i32> %5697, i32 21
  %5804 = sext i32 %5803 to i64
  %5805 = getelementptr inbounds i8, i8* %7, i64 %5804
  %5806 = load i8, i8* %5805, align 1, !tbaa !394
  %5807 = insertelement <32 x i8> %5802, i8 %5806, i32 21
  %5808 = extractelement <32 x i32> %5697, i32 22
  %5809 = sext i32 %5808 to i64
  %5810 = getelementptr inbounds i8, i8* %7, i64 %5809
  %5811 = load i8, i8* %5810, align 1, !tbaa !394
  %5812 = insertelement <32 x i8> %5807, i8 %5811, i32 22
  %5813 = extractelement <32 x i32> %5697, i32 23
  %5814 = sext i32 %5813 to i64
  %5815 = getelementptr inbounds i8, i8* %7, i64 %5814
  %5816 = load i8, i8* %5815, align 1, !tbaa !394
  %5817 = insertelement <32 x i8> %5812, i8 %5816, i32 23
  %5818 = extractelement <32 x i32> %5697, i32 24
  %5819 = sext i32 %5818 to i64
  %5820 = getelementptr inbounds i8, i8* %7, i64 %5819
  %5821 = load i8, i8* %5820, align 1, !tbaa !394
  %5822 = insertelement <32 x i8> %5817, i8 %5821, i32 24
  %5823 = extractelement <32 x i32> %5697, i32 25
  %5824 = sext i32 %5823 to i64
  %5825 = getelementptr inbounds i8, i8* %7, i64 %5824
  %5826 = load i8, i8* %5825, align 1, !tbaa !394
  %5827 = insertelement <32 x i8> %5822, i8 %5826, i32 25
  %5828 = extractelement <32 x i32> %5697, i32 26
  %5829 = sext i32 %5828 to i64
  %5830 = getelementptr inbounds i8, i8* %7, i64 %5829
  %5831 = load i8, i8* %5830, align 1, !tbaa !394
  %5832 = insertelement <32 x i8> %5827, i8 %5831, i32 26
  %5833 = extractelement <32 x i32> %5697, i32 27
  %5834 = sext i32 %5833 to i64
  %5835 = getelementptr inbounds i8, i8* %7, i64 %5834
  %5836 = load i8, i8* %5835, align 1, !tbaa !394
  %5837 = insertelement <32 x i8> %5832, i8 %5836, i32 27
  %5838 = extractelement <32 x i32> %5697, i32 28
  %5839 = sext i32 %5838 to i64
  %5840 = getelementptr inbounds i8, i8* %7, i64 %5839
  %5841 = load i8, i8* %5840, align 1, !tbaa !394
  %5842 = insertelement <32 x i8> %5837, i8 %5841, i32 28
  %5843 = extractelement <32 x i32> %5697, i32 29
  %5844 = sext i32 %5843 to i64
  %5845 = getelementptr inbounds i8, i8* %7, i64 %5844
  %5846 = load i8, i8* %5845, align 1, !tbaa !394
  %5847 = insertelement <32 x i8> %5842, i8 %5846, i32 29
  %5848 = extractelement <32 x i32> %5697, i32 30
  %5849 = sext i32 %5848 to i64
  %5850 = getelementptr inbounds i8, i8* %7, i64 %5849
  %5851 = load i8, i8* %5850, align 1, !tbaa !394
  %5852 = insertelement <32 x i8> %5847, i8 %5851, i32 30
  %5853 = extractelement <32 x i32> %5697, i32 31
  %5854 = sext i32 %5853 to i64
  %5855 = getelementptr inbounds i8, i8* %7, i64 %5854
  %5856 = load i8, i8* %5855, align 1, !tbaa !394
  %5857 = insertelement <32 x i8> %5852, i8 %5856, i32 31
  %5858 = zext <32 x i8> %5857 to <32 x i16>
  %5859 = shl nuw nsw <32 x i16> %5858, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %5860 = add nuw nsw <32 x i16> %5519, %5352
  %5861 = add nuw nsw <32 x i16> %5860, %5859
  %5862 = shufflevector <32 x i16> %5696, <32 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5863 = shufflevector <32 x i16> %5861, <32 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5864 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %5862, <16 x i16> %5863) #10
  %5865 = shufflevector <32 x i16> %5696, <32 x i16> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5866 = shufflevector <32 x i16> %5861, <32 x i16> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5867 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %5865, <16 x i16> %5866) #10
  %5868 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %5863, <16 x i16> %5862) #10
  %5869 = tail call <16 x i16> @llvm.usub.sat.v16i16(<16 x i16> %5866, <16 x i16> %5865) #10
  %5870 = or <16 x i16> %5864, %5868
  %5871 = or <16 x i16> %5867, %5869
  %5872 = add nuw nsw <16 x i16> %5870, %5530
  %5873 = add nuw nsw <16 x i16> %5871, %5531
  %a97 = shufflevector <16 x i16> %5872, <16 x i16> %5873, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5874 = icmp ult <32 x i16> %a97, <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>
  %5875 = select <32 x i1> %5874, <32 x i16> %a97, <32 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>
  %5876 = trunc <32 x i16> %5875 to <32 x i8>
  %5877 = sext i32 %output.s0.x.v0.base.s48 to i64
  %5878 = add nsw i64 %5877, %4507
  %5879 = getelementptr inbounds i8, i8* %20, i64 %5878
  %5880 = bitcast i8* %5879 to <32 x i8>*
  store <32 x i8> %5876, <32 x i8>* %5880, align 1, !tbaa !397
  %5881 = add nuw nsw i32 %output.s0.x.x47, 1
  %.not261 = icmp eq i32 %5881, %t240
  br i1 %.not261, label %"end for output.s0.x.x46", label %"for output.s0.x.x45"

"end for output.s0.x.x46":                        ; preds = %"for output.s0.x.x45", %"for output.s0.y.rebased42"
  %indvars.iv.next471 = add nuw nsw i64 %indvars.iv470, 1
  %5882 = add nuw nsw i32 %output.s0.y.rebased44, 1
  %.not260 = icmp eq i64 %indvars.iv.next471, %1647
  br i1 %.not260, label %"assert succeeded52", label %"for output.s0.y.rebased42"

"assert succeeded52":                             ; preds = %"end for output.s0.x.x46", %"end for output.s0.y.rebased32", %_halide_buffer_is_bounds_query.exit324
  %5883 = load i8*, i8** %host.i, align 8, !tbaa !172
  %5884 = load i8, i8* %code.i.i, align 2, !tbaa !305
  %conv.i.i347 = zext i8 %5884 to i32
  %5885 = load i8, i8* %bits.i.i, align 1, !tbaa !136
  %conv3.i.i349 = zext i8 %5885 to i32
  %shl.i.i350 = shl nuw nsw i32 %conv3.i.i349, 8
  %or.i.i351 = or i32 %shl.i.i350, %conv.i.i347
  %5886 = load i16, i16* %lanes.i.i, align 2, !tbaa !306
  %conv4.i.i353 = zext i16 %5886 to i32
  %shl5.i.i354 = shl nuw i32 %conv4.i.i353, 16
  %or6.i.i355 = or i32 %or.i.i351, %shl5.i.i354
  %5887 = load i64, i64* %flags.i.i.i, align 8, !tbaa !308
  %5888 = load i32, i32* %dimensions.i, align 4, !tbaa !175
  %5889 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i, align 8, !tbaa !176
  %min.i361 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5889, i64 0, i32 0
  %5890 = load i32, i32* %min.i361, align 4, !tbaa !181
  %extent.i363 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5889, i64 0, i32 1
  %5891 = load i32, i32* %extent.i363, align 4, !tbaa !178
  %stride.i365 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5889, i64 0, i32 2
  %5892 = load i32, i32* %stride.i365, align 4, !tbaa !182
  %min.i367 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5889, i64 1, i32 0
  %5893 = load i32, i32* %min.i367, align 4, !tbaa !181
  %extent.i369 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5889, i64 1, i32 1
  %5894 = load i32, i32* %extent.i369, align 4, !tbaa !178
  %stride.i371 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5889, i64 1, i32 2
  %5895 = load i32, i32* %stride.i371, align 4, !tbaa !182
  %5896 = load i8*, i8** %host.i277, align 8, !tbaa !172
  %5897 = load i8, i8* %code.i.i278, align 2, !tbaa !305
  %conv.i.i374 = zext i8 %5897 to i32
  %5898 = load i8, i8* %bits.i.i280, align 1, !tbaa !136
  %conv3.i.i376 = zext i8 %5898 to i32
  %shl.i.i377 = shl nuw nsw i32 %conv3.i.i376, 8
  %or.i.i378 = or i32 %shl.i.i377, %conv.i.i374
  %5899 = load i16, i16* %lanes.i.i284, align 2, !tbaa !306
  %conv4.i.i380 = zext i16 %5899 to i32
  %shl5.i.i381 = shl nuw i32 %conv4.i.i380, 16
  %or6.i.i382 = or i32 %or.i.i378, %shl5.i.i381
  %5900 = load i64, i64* %flags.i.i.i288, align 8, !tbaa !308
  %5901 = load i32, i32* %dimensions.i291, align 4, !tbaa !175
  %5902 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i292, align 8, !tbaa !176
  %min.i388 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5902, i64 0, i32 0
  %5903 = load i32, i32* %min.i388, align 4, !tbaa !181
  %extent.i390 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5902, i64 0, i32 1
  %5904 = load i32, i32* %extent.i390, align 4, !tbaa !178
  %stride.i392 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5902, i64 0, i32 2
  %5905 = load i32, i32* %stride.i392, align 4, !tbaa !182
  %min.i394 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5902, i64 1, i32 0
  %5906 = load i32, i32* %min.i394, align 4, !tbaa !181
  %extent.i396 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5902, i64 1, i32 1
  %5907 = load i32, i32* %extent.i396, align 4, !tbaa !178
  %stride.i398 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5902, i64 1, i32 2
  %5908 = load i32, i32* %stride.i398, align 4, !tbaa !182
  %a108 = add nsw i32 %5904, %5903
  %b110 = add nsw i32 %5891, %5890
  %5909 = icmp slt i32 %5904, 32
  %5910 = select i1 %5909, i32 %5904, i32 32
  %a114 = add nsw i32 %5910, %5903
  %b108 = add nsw i32 %b110, -1
  %5911 = icmp sgt i32 %b108, %a108
  %a105 = select i1 %5911, i32 %a108, i32 %b108
  %b109 = add nsw i32 %b110, 1
  %.not224 = icmp slt i32 %b110, %a108
  %5912 = select i1 %.not224, i32 %b109, i32 %a108
  %b107 = add nsw i32 %5912, -2
  %5913 = icmp sgt i32 %a105, %b107
  %a104 = select i1 %5913, i32 %a105, i32 %b107
  %5914 = icmp sgt i32 %b110, %a108
  %5915 = select i1 %5914, i32 %a108, i32 %b110
  %b106 = add nsw i32 %5915, -1
  %.not225 = icmp slt i32 %a104, %5915
  %a103 = select i1 %.not225, i32 %b106, i32 %a104
  %5916 = icmp sgt i32 %a103, %5890
  %5917 = select i1 %5916, i32 %a103, i32 %5890
  %b114 = add nsw i32 %b110, 32
  %5918 = icmp sgt i32 %b114, %a114
  %a111 = select i1 %5918, i32 %a114, i32 %b114
  %b115 = add nsw i32 %b110, 30
  %5919 = icmp sgt i32 %b115, %a114
  %5920 = select i1 %5919, i32 %a114, i32 %b115
  %b113 = add nsw i32 %5920, 2
  %5921 = icmp sgt i32 %b113, %a111
  %a110 = select i1 %5921, i32 %a111, i32 %b113
  %b116 = add nsw i32 %b110, 31
  %5922 = icmp sgt i32 %b116, %a114
  %5923 = select i1 %5922, i32 %a114, i32 %b116
  %b112 = add nsw i32 %5923, 1
  %.not226 = icmp slt i32 %5923, %a110
  %5924 = select i1 %.not226, i32 %b112, i32 %a110
  %a109 = add nsw i32 %5924, -33
  %5925 = icmp sgt i32 %a109, %5890
  %5926 = select i1 %5925, i32 %a109, i32 %5890
  %a127 = add nsw i32 %5907, %5906
  %a129 = add nsw i32 %5894, %5893
  %b127 = add nsw i32 %a129, -1
  %5927 = icmp sgt i32 %b127, %a127
  %a124 = select i1 %5927, i32 %a127, i32 %b127
  %b128 = add nsw i32 %a129, 1
  %.not227 = icmp slt i32 %a129, %a127
  %5928 = select i1 %.not227, i32 %b128, i32 %a127
  %b126 = add nsw i32 %5928, -2
  %5929 = icmp sgt i32 %a124, %b126
  %a123 = select i1 %5929, i32 %a124, i32 %b126
  %5930 = icmp sgt i32 %a129, %a127
  %5931 = select i1 %5930, i32 %a127, i32 %a129
  %b125 = add nsw i32 %5931, -1
  %.not228 = icmp slt i32 %a123, %5931
  %a122 = select i1 %.not228, i32 %b125, i32 %a123
  %5932 = icmp sgt i32 %a122, %5893
  %5933 = select i1 %5932, i32 %a122, i32 %5893
  %5934 = icmp sgt i32 %5906, %a129
  %5935 = select i1 %5934, i32 %a129, i32 %5906
  %a128 = add nsw i32 %5935, -1
  %5936 = icmp sgt i32 %a128, %5893
  %5937 = select i1 %5936, i32 %a128, i32 %5893
  %cmp.i400 = icmp eq i8* %5883, null
  br i1 %cmp.i400, label %_halide_buffer_is_bounds_query.exit404, label %after_bb73

_halide_buffer_is_bounds_query.exit404:           ; preds = %"assert succeeded52"
  %device.i401 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %input.buffer, i64 0, i32 0
  %5938 = load i64, i64* %device.i401, align 8, !tbaa !174
  %cmp1.i402 = icmp eq i64 %5938, 0
  br i1 %cmp1.i402, label %_halide_buffer_init.exit430, label %after_bb73

after_bb73:                                       ; preds = %"assert succeeded52", %_halide_buffer_is_bounds_query.exit404, %_halide_buffer_init.exit430
  %5939 = phi i8* [ %5896, %"assert succeeded52" ], [ %5896, %_halide_buffer_is_bounds_query.exit404 ], [ %.pre487, %_halide_buffer_init.exit430 ]
  %cmp.i406 = icmp eq i8* %5939, null
  br i1 %cmp.i406, label %_halide_buffer_is_bounds_query.exit410, label %after_bb76

_halide_buffer_is_bounds_query.exit410:           ; preds = %after_bb73
  %device.i407 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %output.buffer, i64 0, i32 0
  %5940 = load i64, i64* %device.i407, align 8, !tbaa !174
  %cmp1.i408 = icmp eq i64 %5940, 0
  br i1 %cmp1.i408, label %_halide_buffer_init.exit462, label %after_bb76

_halide_buffer_init.exit430:                      ; preds = %_halide_buffer_is_bounds_query.exit404
  %input.extent.0.required.s68 = sub nsw i32 %5917, %5926
  %5941 = add nsw i32 %input.extent.0.required.s68, 1
  %input.extent.1.required.s71 = sub i32 1, %5937
  %5942 = add i32 %input.extent.1.required.s71, %5933
  %5943 = getelementptr inbounds [8 x i32], [8 x i32]* %1, i64 0, i64 0
  store i32 %5926, i32* %5943, align 4
  %5944 = getelementptr inbounds [8 x i32], [8 x i32]* %1, i64 0, i64 1
  store i32 %5941, i32* %5944, align 4
  %5945 = getelementptr inbounds [8 x i32], [8 x i32]* %1, i64 0, i64 2
  store i32 1, i32* %5945, align 4
  %5946 = getelementptr inbounds [8 x i32], [8 x i32]* %1, i64 0, i64 3
  store i32 0, i32* %5946, align 4
  %5947 = getelementptr inbounds [8 x i32], [8 x i32]* %1, i64 0, i64 4
  store i32 %5937, i32* %5947, align 4
  %5948 = getelementptr inbounds [8 x i32], [8 x i32]* %1, i64 0, i64 5
  store i32 %5942, i32* %5948, align 4
  %5949 = getelementptr inbounds [8 x i32], [8 x i32]* %1, i64 0, i64 6
  store i32 %5941, i32* %5949, align 4
  %5950 = getelementptr inbounds [8 x i32], [8 x i32]* %1, i64 0, i64 7
  store i32 0, i32* %5950, align 4
  %5951 = bitcast %struct.halide_buffer_t* %input.buffer to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(24) %5951, i8 0, i64 24, i1 false)
  store i8 1, i8* %code.i.i, align 8, !tbaa !387
  store i8 8, i8* %bits.i.i, align 1, !tbaa !388
  store i16 1, i16* %lanes.i.i, align 2, !tbaa !389
  store i32 2, i32* %dimensions.i, align 4, !tbaa !175
  %5952 = bitcast %struct.halide_dimension_t* %5889 to i8*
  %5953 = bitcast [8 x i32]* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %5952, i8* nonnull align 4 dereferenceable(16) %5953, i64 16, i1 false) #10, !tbaa.struct !177
  %.pre.i423 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i, align 8, !tbaa !176
  %arrayidx.i424 = getelementptr inbounds [8 x i32], [8 x i32]* %1, i64 0, i64 4
  %arrayidx12.i425 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i423, i64 1
  %5954 = bitcast %struct.halide_dimension_t* %arrayidx12.i425 to i8*
  %5955 = bitcast i32* %arrayidx.i424 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %5954, i8* nonnull align 4 dereferenceable(16) %5955, i64 16, i1 false) #10, !tbaa.struct !177
  store i64 0, i64* %flags.i.i.i, align 8, !tbaa !308
  %.pre487 = load i8*, i8** %host.i277, align 8, !tbaa !172
  br label %after_bb73

after_bb76:                                       ; preds = %after_bb73, %_halide_buffer_is_bounds_query.exit410, %_halide_buffer_init.exit462
  %5956 = load i8*, i8** %host.i, align 8, !tbaa !172
  %cmp.i432 = icmp eq i8* %5956, null
  br i1 %cmp.i432, label %land.rhs.i435, label %_halide_buffer_is_bounds_query.exit436

land.rhs.i435:                                    ; preds = %after_bb76
  %device.i433 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %input.buffer, i64 0, i32 0
  %5957 = load i64, i64* %device.i433, align 8, !tbaa !174
  %cmp1.i434 = icmp eq i64 %5957, 0
  br label %_halide_buffer_is_bounds_query.exit436

_halide_buffer_is_bounds_query.exit436:           ; preds = %after_bb76, %land.rhs.i435
  %5958 = phi i1 [ false, %after_bb76 ], [ %cmp1.i434, %land.rhs.i435 ]
  %5959 = load i8*, i8** %host.i277, align 8, !tbaa !172
  %cmp.i438 = icmp eq i8* %5959, null
  br i1 %cmp.i438, label %land.rhs.i441, label %_halide_buffer_is_bounds_query.exit442

land.rhs.i441:                                    ; preds = %_halide_buffer_is_bounds_query.exit436
  %device.i439 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %output.buffer, i64 0, i32 0
  %5960 = load i64, i64* %device.i439, align 8, !tbaa !174
  %cmp1.i440 = icmp eq i64 %5960, 0
  br label %_halide_buffer_is_bounds_query.exit442

_halide_buffer_is_bounds_query.exit442:           ; preds = %_halide_buffer_is_bounds_query.exit436, %land.rhs.i441
  %5961 = phi i1 [ false, %_halide_buffer_is_bounds_query.exit436 ], [ %cmp1.i440, %land.rhs.i441 ]
  %5962 = or i1 %5958, %5961
  br i1 %5962, label %destructor_block, label %then_bb81

_halide_buffer_init.exit462:                      ; preds = %_halide_buffer_is_bounds_query.exit410
  %5963 = icmp sgt i32 %5904, 32
  %t29679 = select i1 %5963, i32 %5904, i32 32
  %5964 = bitcast %struct.halide_dimension_t** %dim.i292 to i8**
  %5965 = load i8*, i8** %5964, align 8, !tbaa !176
  %5966 = add nsw i32 %a114, -32
  %5967 = getelementptr inbounds [8 x i32], [8 x i32]* %0, i64 0, i64 0
  store i32 %5966, i32* %5967, align 4
  %5968 = getelementptr inbounds [8 x i32], [8 x i32]* %0, i64 0, i64 1
  store i32 %t29679, i32* %5968, align 4
  %5969 = getelementptr inbounds [8 x i32], [8 x i32]* %0, i64 0, i64 2
  store i32 1, i32* %5969, align 4
  %5970 = getelementptr inbounds [8 x i32], [8 x i32]* %0, i64 0, i64 3
  store i32 0, i32* %5970, align 4
  %5971 = getelementptr inbounds [8 x i32], [8 x i32]* %0, i64 0, i64 4
  store i32 %5906, i32* %5971, align 4
  %5972 = getelementptr inbounds [8 x i32], [8 x i32]* %0, i64 0, i64 5
  store i32 %5907, i32* %5972, align 4
  %5973 = getelementptr inbounds [8 x i32], [8 x i32]* %0, i64 0, i64 6
  store i32 %t29679, i32* %5973, align 4
  %5974 = getelementptr inbounds [8 x i32], [8 x i32]* %0, i64 0, i64 7
  store i32 0, i32* %5974, align 4
  %5975 = bitcast %struct.halide_buffer_t* %output.buffer to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(24) %5975, i8 0, i64 24, i1 false)
  store i8 1, i8* %code.i.i278, align 8, !tbaa !387
  store i8 8, i8* %bits.i.i280, align 1, !tbaa !388
  store i16 1, i16* %lanes.i.i284, align 2, !tbaa !389
  store i32 2, i32* %dimensions.i291, align 4, !tbaa !175
  %5976 = bitcast [8 x i32]* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %5965, i8* nonnull align 4 dereferenceable(16) %5976, i64 16, i1 false) #10, !tbaa.struct !177
  %.pre.i455 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i292, align 8, !tbaa !176
  %arrayidx.i456 = getelementptr inbounds [8 x i32], [8 x i32]* %0, i64 0, i64 4
  %arrayidx12.i457 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i455, i64 1
  %5977 = bitcast %struct.halide_dimension_t* %arrayidx12.i457 to i8*
  %5978 = bitcast i32* %arrayidx.i456 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %5977, i8* nonnull align 4 dereferenceable(16) %5978, i64 16, i1 false) #10, !tbaa.struct !177
  store i64 0, i64* %flags.i.i.i288, align 8, !tbaa !308
  br label %after_bb76

then_bb81:                                        ; preds = %_halide_buffer_is_bounds_query.exit442
  %5979 = icmp ne i32 %or6.i.i355, 67585
  %5980 = zext i1 %5979 to i64
  %.not229 = icmp eq i32 %5888, 2
  %.not230 = icmp eq i32 %or6.i.i382, 67585
  %5981 = select i1 %.not230, i64 0, i64 4
  %.not231 = icmp eq i32 %5901, 2
  %5982 = select i1 %.not231, i64 0, i64 8
  %.not232 = icmp slt i32 %5917, %b110
  %5983 = select i1 %.not232, i64 0, i64 16
  %5984 = lshr i32 %5891, 26
  %5985 = and i32 %5984, 32
  %5986 = zext i32 %5985 to i64
  %.not233 = icmp slt i32 %5933, %a129
  %5987 = select i1 %.not233, i64 0, i64 64
  %5988 = lshr i32 %5894, 24
  %5989 = and i32 %5988, 128
  %5990 = zext i32 %5989 to i64
  %5991 = select i1 %5909, i64 256, i64 0
  %5992 = lshr i32 %5907, 22
  %5993 = and i32 %5992, 512
  %5994 = zext i32 %5993 to i64
  %.not234 = icmp eq i32 %5892, 1
  %5995 = select i1 %.not234, i64 0, i64 1024
  %.not235 = icmp eq i32 %5905, 1
  %5996 = select i1 %.not235, i64 0, i64 2048
  %5997 = select i1 %.not229, i64 -9223372036854775808, i64 -9223372036854775806
  %5998 = or i64 %5997, %5980
  %5999 = or i64 %5998, %5986
  %6000 = or i64 %5999, %5995
  %6001 = or i64 %6000, %5990
  %6002 = or i64 %6001, %5982
  %6003 = or i64 %6002, %5981
  %6004 = or i64 %6003, %5991
  %6005 = or i64 %6004, %5996
  %6006 = or i64 %6005, %5994
  %6007 = or i64 %6006, %5983
  %6008 = or i64 %6007, %5987
  %6009 = tail call i64 @llvm.cttz.i64(i64 %6008, i1 true), !range !390
  %6010 = trunc i64 %6009 to i32
  switch i32 %6010, label %no_errors_bb83 [
    i32 0, label %assert_failed84
    i32 1, label %assert_failed85
    i32 2, label %assert_failed86
    i32 3, label %assert_failed87
    i32 4, label %assert_failed88
    i32 5, label %assert_failed89
    i32 6, label %assert_failed90
    i32 7, label %assert_failed91
    i32 8, label %assert_failed92
    i32 9, label %assert_failed94
    i32 10, label %assert_failed95
    i32 11, label %assert_failed96
  ], !prof !391

no_errors_bb83:                                   ; preds = %then_bb81
  %6011 = sext i32 %5894 to i64
  %6012 = sext i32 %5891 to i64
  %input.total_extent.197 = mul nsw i64 %6011, %6012
  %6013 = sext i32 %5907 to i64
  %6014 = sext i32 %5904 to i64
  %output.total_extent.198 = mul nsw i64 %6013, %6014
  %input.extent.057.lobit = lshr i32 %5891, 31
  %6015 = zext i32 %input.extent.057.lobit to i64
  %6016 = sext i32 %5895 to i64
  %x4 = mul nsw i64 %6016, %6011
  %6017 = tail call i64 @llvm.abs.i64(i64 %x4, i1 true)
  %6018 = icmp ugt i64 %6017, 2147483647
  %6019 = select i1 %6018, i64 2, i64 0
  %6020 = icmp sgt i64 %input.total_extent.197, 2147483647
  %6021 = select i1 %6020, i64 4, i64 0
  %6022 = lshr i32 %5904, 28
  %6023 = and i32 %6022, 8
  %6024 = zext i32 %6023 to i64
  %6025 = sext i32 %5908 to i64
  %x5 = mul nsw i64 %6025, %6013
  %6026 = tail call i64 @llvm.abs.i64(i64 %x5, i1 true)
  %6027 = icmp ugt i64 %6026, 2147483647
  %6028 = select i1 %6027, i64 16, i64 0
  %6029 = icmp sgt i64 %output.total_extent.198, 2147483647
  %6030 = select i1 %6029, i64 32, i64 0
  %and.i.i.i357 = shl i64 %5887, 5
  %6031 = and i64 %and.i.i.i357, 64
  %and.i.i.i384 = shl i64 %5900, 6
  %6032 = and i64 %and.i.i.i384, 128
  %6033 = icmp eq i8* %5896, null
  %6034 = select i1 %6033, i64 512, i64 0
  %6035 = select i1 %cmp.i400, i64 -9223372036854775552, i64 -9223372036854775808
  %6036 = or i64 %6035, %6031
  %6037 = or i64 %6036, %6015
  %6038 = or i64 %6037, %6021
  %6039 = or i64 %6038, %6034
  %6040 = or i64 %6039, %6019
  %6041 = or i64 %6040, %6032
  %6042 = or i64 %6041, %6024
  %6043 = or i64 %6042, %6030
  %6044 = or i64 %6043, %6028
  %6045 = tail call i64 @llvm.cttz.i64(i64 %6044, i1 true), !range !390
  %6046 = trunc i64 %6045 to i32
  switch i32 %6046, label %"produce output110" [
    i32 0, label %assert_failed100
    i32 1, label %assert_failed101
    i32 2, label %assert_failed102
    i32 3, label %assert_failed103
    i32 4, label %assert_failed104
    i32 5, label %assert_failed105
    i32 6, label %assert_failed106
    i32 7, label %assert_failed107
    i32 8, label %assert_failed108
    i32 9, label %assert_failed109
  ], !prof !392

assert_failed84:                                  ; preds = %then_bb81
  %6047 = tail call i32 @halide_error_bad_type(i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.203, i64 0, i64 0), i32 %or6.i.i355, i32 67585) #10
  ret i32 %6047

assert_failed85:                                  ; preds = %then_bb81
  %6048 = tail call i32 @halide_error_bad_dimensions(i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.203, i64 0, i64 0), i32 %5888, i32 2) #10
  ret i32 %6048

assert_failed86:                                  ; preds = %then_bb81
  %6049 = tail call i32 @halide_error_bad_type(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.204, i64 0, i64 0), i32 %or6.i.i382, i32 67585) #10
  ret i32 %6049

assert_failed87:                                  ; preds = %then_bb81
  %6050 = tail call i32 @halide_error_bad_dimensions(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.204, i64 0, i64 0), i32 %5901, i32 2) #10
  ret i32 %6050

assert_failed88:                                  ; preds = %then_bb81
  %6051 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.203, i64 0, i64 0), i32 0, i32 %5926, i32 %5917, i32 %5890, i32 %b108) #10
  ret i32 %6051

assert_failed89:                                  ; preds = %then_bb81
  %6052 = tail call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.203, i64 0, i64 0), i32 0, i32 %5891) #10
  ret i32 %6052

assert_failed90:                                  ; preds = %then_bb81
  %6053 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.203, i64 0, i64 0), i32 1, i32 %5937, i32 %5933, i32 %5893, i32 %b127) #10
  ret i32 %6053

assert_failed91:                                  ; preds = %then_bb81
  %6054 = tail call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.203, i64 0, i64 0), i32 1, i32 %5894) #10
  ret i32 %6054

assert_failed92:                                  ; preds = %then_bb81
  %6055 = add nsw i32 %a114, -32
  %6056 = add nsw i32 %a108, -1
  %6057 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.204, i64 0, i64 0), i32 0, i32 %6055, i32 %6056, i32 %5903, i32 %6056) #10
  ret i32 %6057

assert_failed94:                                  ; preds = %then_bb81
  %6058 = tail call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.204, i64 0, i64 0), i32 1, i32 %5907) #10
  ret i32 %6058

assert_failed95:                                  ; preds = %then_bb81
  %6059 = tail call i32 @halide_error_constraint_violated(i8* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.205, i64 0, i64 0), i32 %5892, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.206, i64 0, i64 0), i32 1) #10
  ret i32 %6059

assert_failed96:                                  ; preds = %then_bb81
  %6060 = tail call i32 @halide_error_constraint_violated(i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str.207, i64 0, i64 0), i32 %5905, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.206, i64 0, i64 0), i32 1) #10
  ret i32 %6060

assert_failed100:                                 ; preds = %no_errors_bb83
  %6061 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str, i64 0, i64 0), i64 %6012, i64 2147483647) #10
  ret i32 %6061

assert_failed101:                                 ; preds = %no_errors_bb83
  %6062 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str, i64 0, i64 0), i64 %6017, i64 2147483647) #10
  ret i32 %6062

assert_failed102:                                 ; preds = %no_errors_bb83
  %6063 = tail call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str, i64 0, i64 0), i64 %input.total_extent.197, i64 2147483647) #10
  ret i32 %6063

assert_failed103:                                 ; preds = %no_errors_bb83
  %6064 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i64 0, i64 0), i64 %6014, i64 2147483647) #10
  ret i32 %6064

assert_failed104:                                 ; preds = %no_errors_bb83
  %6065 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i64 0, i64 0), i64 %6026, i64 2147483647) #10
  ret i32 %6065

assert_failed105:                                 ; preds = %no_errors_bb83
  %6066 = tail call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i64 0, i64 0), i64 %output.total_extent.198, i64 2147483647) #10
  ret i32 %6066

assert_failed106:                                 ; preds = %no_errors_bb83
  %6067 = tail call i32 @halide_error_device_dirty_with_no_device_support(i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.203, i64 0, i64 0)) #10
  ret i32 %6067

assert_failed107:                                 ; preds = %no_errors_bb83
  %6068 = tail call i32 @halide_error_device_dirty_with_no_device_support(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.204, i64 0, i64 0)) #10
  ret i32 %6068

assert_failed108:                                 ; preds = %no_errors_bb83
  %6069 = tail call i32 @halide_error_host_is_null(i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.203, i64 0, i64 0)) #10
  ret i32 %6069

assert_failed109:                                 ; preds = %no_errors_bb83
  %6070 = tail call i32 @halide_error_host_is_null(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.204, i64 0, i64 0)) #10
  ret i32 %6070

"produce output110":                              ; preds = %no_errors_bb83
  %a136 = add nsw i32 %5893, 1
  %.not236 = icmp sgt i32 %5906, %5893
  %a135 = select i1 %.not236, i32 %5906, i32 %a136
  %6071 = icmp sgt i32 %a127, %a135
  %output.s0.y.prologue111 = select i1 %6071, i32 %a135, i32 %a127
  %.not237 = icmp slt i32 %a135, %a129
  %a137 = select i1 %.not237, i32 %b127, i32 %a135
  %6072 = icmp sgt i32 %a127, %a137
  %output.s0.y.epilogue112 = select i1 %6072, i32 %a137, i32 %a127
  %6073 = add nsw i32 %5904, 31
  %t240113 = ashr i32 %6073, 5
  %t239114 = sub nsw i32 %output.s0.y.prologue111, %5906
  %t242115 = sub nsw i32 %5906, %5893
  %6074 = mul nsw i32 %5908, %5906
  %6075 = icmp sgt i32 %t239114, 0
  br i1 %6075, label %"for output.s0.y.rebased118.preheader", label %"produce output110.end for output.s0.y.rebased119_crit_edge", !prof !393

"produce output110.end for output.s0.y.rebased119_crit_edge": ; preds = %"produce output110"
  %.pre488 = add nsw i32 %5904, -32
  br label %"end for output.s0.y.rebased119"

"for output.s0.y.rebased118.preheader":           ; preds = %"produce output110"
  %a141 = add nsw i32 %5894, -1
  %6076 = icmp sgt i32 %5904, 0
  %b145 = add nsw i32 %5904, -32
  %6077 = insertelement <32 x i32> undef, i32 %b108, i32 0
  %6078 = shufflevector <32 x i32> %6077, <32 x i32> undef, <16 x i32> zeroinitializer
  %6079 = insertelement <32 x i32> undef, i32 %5890, i32 0
  %6080 = shufflevector <32 x i32> %6079, <32 x i32> undef, <16 x i32> zeroinitializer
  %zext = zext i32 %t239114 to i64
  br label %"for output.s0.y.rebased118"

"for output.s0.y.rebased118":                     ; preds = %"for output.s0.y.rebased118.preheader", %"end for output.s0.x.x123"
  %indvars.iv473 = phi i64 [ 0, %"for output.s0.y.rebased118.preheader" ], [ %indvars.iv.next474, %"end for output.s0.x.x123" ]
  %output.s0.y.rebased120 = phi i32 [ 0, %"for output.s0.y.rebased118.preheader" ], [ %7454, %"end for output.s0.x.x123" ]
  %b144 = add nsw i32 %output.s0.y.rebased120, %t242115
  %a140 = add nsw i32 %b144, 2
  %6081 = icmp sgt i32 %5894, %a140
  %a158 = select i1 %6081, i32 %a140, i32 %5894
  %.not246 = icmp slt i32 %b144, %5894
  %a154 = select i1 %.not246, i32 %b144, i32 %a141
  %6082 = icmp sgt i32 %b144, %5894
  %a157 = select i1 %6082, i32 %5894, i32 %b144
  br i1 %6076, label %"for output.s0.x.x122.preheader", label %"end for output.s0.x.x123", !prof !393

"for output.s0.x.x122.preheader":                 ; preds = %"for output.s0.y.rebased118"
  %6083 = trunc i64 %indvars.iv473 to i32
  %t247121 = mul i32 %5908, %6083
  %6084 = icmp sgt i32 %a157, 1
  %6085 = select i1 %6084, i32 %a157, i32 1
  %6086 = add nsw i32 %6085, -1
  %6087 = mul nsw i32 %6086, %5895
  %6088 = sub nsw i32 %6087, %5890
  %6089 = insertelement <32 x i32> undef, i32 %6088, i32 0
  %6090 = shufflevector <32 x i32> %6089, <32 x i32> undef, <32 x i32> zeroinitializer
  %6091 = icmp sgt i32 %a158, 1
  %6092 = select i1 %6091, i32 %a158, i32 1
  %6093 = add nsw i32 %6092, -1
  %6094 = mul nsw i32 %6093, %5895
  %6095 = sub nsw i32 %6094, %5890
  %6096 = insertelement <32 x i32> undef, i32 %6095, i32 0
  %6097 = shufflevector <32 x i32> %6096, <32 x i32> undef, <32 x i32> zeroinitializer
  %6098 = icmp sgt i32 %a154, 0
  %6099 = select i1 %6098, i32 %a154, i32 0
  %6100 = mul nsw i32 %6099, %5895
  %6101 = sub nsw i32 %6100, %5890
  %6102 = insertelement <32 x i32> undef, i32 %6101, i32 0
  %t232133 = shufflevector <32 x i32> %6102, <32 x i32> undef, <32 x i32> zeroinitializer
  %6103 = sext i32 %t247121 to i64
  br label %"for output.s0.x.x122"

"end for output.s0.y.rebased119":                 ; preds = %"end for output.s0.x.x123", %"produce output110.end for output.s0.y.rebased119_crit_edge"
  %a164.pre-phi = phi i32 [ %.pre488, %"produce output110.end for output.s0.y.rebased119_crit_edge" ], [ %b145, %"end for output.s0.x.x123" ]
  %6104 = sub nsw i32 %5890, %5903
  %a160 = ashr i32 %6104, 5
  %6105 = icmp sgt i32 %a160, -1
  %6106 = select i1 %6105, i32 %a160, i32 -1
  %a159 = add nsw i32 %6106, 1
  %6107 = icmp sgt i32 %t240113, %a159
  %b163 = select i1 %6107, i32 %a159, i32 %t240113
  %b167 = sub nsw i32 %b110, %5903
  %6108 = icmp sgt i32 %b167, %a164.pre-phi
  %a163 = select i1 %6108, i32 %a164.pre-phi, i32 %b167
  %a165 = add nsw i32 %5904, 1
  %6109 = icmp sgt i32 %b167, %a165
  %6110 = select i1 %6109, i32 %a165, i32 %b167
  %b165 = add nsw i32 %6110, -33
  %6111 = icmp sgt i32 %b165, %a163
  %a162 = select i1 %6111, i32 %a163, i32 %b165
  %b164 = add nsw i32 %5904, -1
  %6112 = icmp sgt i32 %b164, %a162
  %6113 = select i1 %6112, i32 %a162, i32 %b164
  %6114 = ashr i32 %6113, 5
  %a161 = add nsw i32 %6114, 1
  %.not238 = icmp slt i32 %6114, %b163
  %t251135 = select i1 %.not238, i32 %b163, i32 %a161
  %t253136 = sub nsw i32 %output.s0.y.prologue111, %5893
  %t249137 = sub nsw i32 %output.s0.y.epilogue112, %output.s0.y.prologue111
  %6115 = icmp sgt i32 %t249137, 0
  br i1 %6115, label %"for output.s0.y.rebased139.preheader", label %"end for output.s0.y.rebased140", !prof !393

"for output.s0.y.rebased139.preheader":           ; preds = %"end for output.s0.y.rebased119"
  %6116 = icmp sgt i32 %b163, 0
  %6117 = insertelement <32 x i32> undef, i32 %b108, i32 0
  %6118 = shufflevector <32 x i32> %6117, <32 x i32> undef, <16 x i32> zeroinitializer
  %6119 = insertelement <32 x i32> undef, i32 %5890, i32 0
  %6120 = shufflevector <32 x i32> %6119, <32 x i32> undef, <16 x i32> zeroinitializer
  %t272159 = sub nsw i32 %5903, %5890
  %t266160 = sub nsw i32 %t251135, %b163
  %6121 = icmp sgt i32 %t266160, 0
  %6122 = sext i32 %b163 to i64
  %t273178 = sub nsw i32 %t240113, %t251135
  %6123 = icmp sgt i32 %t273178, 0
  %zext482 = zext i32 %t249137 to i64
  %zext478 = zext i32 %t266160 to i64
  br label %"for output.s0.y.rebased139"

"for output.s0.x.x122":                           ; preds = %"for output.s0.x.x122.preheader", %"for output.s0.x.x122"
  %output.s0.x.x124 = phi i32 [ %7453, %"for output.s0.x.x122" ], [ 0, %"for output.s0.x.x122.preheader" ]
  %a143 = shl nsw i32 %output.s0.x.x124, 5
  %6124 = icmp sgt i32 %b145, %a143
  %output.s0.x.v0.base.s125 = select i1 %6124, i32 %a143, i32 %b145
  %6125 = add nsw i32 %output.s0.x.v0.base.s125, %5903
  %6126 = insertelement <32 x i32> undef, i32 %6125, i32 0
  %6127 = shufflevector <32 x i32> %6126, <32 x i32> undef, <32 x i32> zeroinitializer
  %a145 = add nsw <32 x i32> %6127, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6128 = shufflevector <32 x i32> %a145, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6129 = icmp sgt <16 x i32> %6078, %6128
  %6130 = shufflevector <32 x i32> %a145, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6131 = icmp sgt <16 x i32> %6078, %6130
  %6132 = select <16 x i1> %6129, <16 x i32> %6128, <16 x i32> %6078
  %6133 = select <16 x i1> %6131, <16 x i32> %6130, <16 x i32> %6078
  %6134 = icmp sgt <16 x i32> %6132, %6080
  %6135 = icmp sgt <16 x i32> %6133, %6080
  %6136 = select <16 x i1> %6134, <16 x i32> %6132, <16 x i32> %6080
  %6137 = select <16 x i1> %6135, <16 x i32> %6133, <16 x i32> %6080
  %t163126 = shufflevector <16 x i32> %6136, <16 x i32> %6137, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6138 = add nsw i32 %6125, -1
  %6139 = insertelement <32 x i32> undef, i32 %6138, i32 0
  %6140 = shufflevector <32 x i32> %6139, <32 x i32> undef, <32 x i32> zeroinitializer
  %a147 = add nsw <32 x i32> %6140, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6141 = shufflevector <32 x i32> %a147, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6142 = icmp sgt <16 x i32> %6078, %6141
  %6143 = shufflevector <32 x i32> %a147, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6144 = icmp sgt <16 x i32> %6078, %6143
  %6145 = select <16 x i1> %6142, <16 x i32> %6141, <16 x i32> %6078
  %6146 = select <16 x i1> %6144, <16 x i32> %6143, <16 x i32> %6078
  %6147 = icmp sgt <16 x i32> %6145, %6080
  %6148 = icmp sgt <16 x i32> %6146, %6080
  %6149 = select <16 x i1> %6147, <16 x i32> %6145, <16 x i32> %6080
  %6150 = select <16 x i1> %6148, <16 x i32> %6146, <16 x i32> %6080
  %t166127 = shufflevector <16 x i32> %6149, <16 x i32> %6150, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6151 = add nsw <32 x i32> %t166127, %6090
  %6152 = extractelement <32 x i32> %6151, i32 0
  %6153 = sext i32 %6152 to i64
  %6154 = getelementptr inbounds i8, i8* %5883, i64 %6153
  %6155 = load i8, i8* %6154, align 1, !tbaa !394
  %6156 = insertelement <32 x i8> undef, i8 %6155, i32 0
  %6157 = extractelement <32 x i32> %6151, i32 1
  %6158 = sext i32 %6157 to i64
  %6159 = getelementptr inbounds i8, i8* %5883, i64 %6158
  %6160 = load i8, i8* %6159, align 1, !tbaa !394
  %6161 = insertelement <32 x i8> %6156, i8 %6160, i32 1
  %6162 = extractelement <32 x i32> %6151, i32 2
  %6163 = sext i32 %6162 to i64
  %6164 = getelementptr inbounds i8, i8* %5883, i64 %6163
  %6165 = load i8, i8* %6164, align 1, !tbaa !394
  %6166 = insertelement <32 x i8> %6161, i8 %6165, i32 2
  %6167 = extractelement <32 x i32> %6151, i32 3
  %6168 = sext i32 %6167 to i64
  %6169 = getelementptr inbounds i8, i8* %5883, i64 %6168
  %6170 = load i8, i8* %6169, align 1, !tbaa !394
  %6171 = insertelement <32 x i8> %6166, i8 %6170, i32 3
  %6172 = extractelement <32 x i32> %6151, i32 4
  %6173 = sext i32 %6172 to i64
  %6174 = getelementptr inbounds i8, i8* %5883, i64 %6173
  %6175 = load i8, i8* %6174, align 1, !tbaa !394
  %6176 = insertelement <32 x i8> %6171, i8 %6175, i32 4
  %6177 = extractelement <32 x i32> %6151, i32 5
  %6178 = sext i32 %6177 to i64
  %6179 = getelementptr inbounds i8, i8* %5883, i64 %6178
  %6180 = load i8, i8* %6179, align 1, !tbaa !394
  %6181 = insertelement <32 x i8> %6176, i8 %6180, i32 5
  %6182 = extractelement <32 x i32> %6151, i32 6
  %6183 = sext i32 %6182 to i64
  %6184 = getelementptr inbounds i8, i8* %5883, i64 %6183
  %6185 = load i8, i8* %6184, align 1, !tbaa !394
  %6186 = insertelement <32 x i8> %6181, i8 %6185, i32 6
  %6187 = extractelement <32 x i32> %6151, i32 7
  %6188 = sext i32 %6187 to i64
  %6189 = getelementptr inbounds i8, i8* %5883, i64 %6188
  %6190 = load i8, i8* %6189, align 1, !tbaa !394
  %6191 = insertelement <32 x i8> %6186, i8 %6190, i32 7
  %6192 = extractelement <32 x i32> %6151, i32 8
  %6193 = sext i32 %6192 to i64
  %6194 = getelementptr inbounds i8, i8* %5883, i64 %6193
  %6195 = load i8, i8* %6194, align 1, !tbaa !394
  %6196 = insertelement <32 x i8> %6191, i8 %6195, i32 8
  %6197 = extractelement <32 x i32> %6151, i32 9
  %6198 = sext i32 %6197 to i64
  %6199 = getelementptr inbounds i8, i8* %5883, i64 %6198
  %6200 = load i8, i8* %6199, align 1, !tbaa !394
  %6201 = insertelement <32 x i8> %6196, i8 %6200, i32 9
  %6202 = extractelement <32 x i32> %6151, i32 10
  %6203 = sext i32 %6202 to i64
  %6204 = getelementptr inbounds i8, i8* %5883, i64 %6203
  %6205 = load i8, i8* %6204, align 1, !tbaa !394
  %6206 = insertelement <32 x i8> %6201, i8 %6205, i32 10
  %6207 = extractelement <32 x i32> %6151, i32 11
  %6208 = sext i32 %6207 to i64
  %6209 = getelementptr inbounds i8, i8* %5883, i64 %6208
  %6210 = load i8, i8* %6209, align 1, !tbaa !394
  %6211 = insertelement <32 x i8> %6206, i8 %6210, i32 11
  %6212 = extractelement <32 x i32> %6151, i32 12
  %6213 = sext i32 %6212 to i64
  %6214 = getelementptr inbounds i8, i8* %5883, i64 %6213
  %6215 = load i8, i8* %6214, align 1, !tbaa !394
  %6216 = insertelement <32 x i8> %6211, i8 %6215, i32 12
  %6217 = extractelement <32 x i32> %6151, i32 13
  %6218 = sext i32 %6217 to i64
  %6219 = getelementptr inbounds i8, i8* %5883, i64 %6218
  %6220 = load i8, i8* %6219, align 1, !tbaa !394
  %6221 = insertelement <32 x i8> %6216, i8 %6220, i32 13
  %6222 = extractelement <32 x i32> %6151, i32 14
  %6223 = sext i32 %6222 to i64
  %6224 = getelementptr inbounds i8, i8* %5883, i64 %6223
  %6225 = load i8, i8* %6224, align 1, !tbaa !394
  %6226 = insertelement <32 x i8> %6221, i8 %6225, i32 14
  %6227 = extractelement <32 x i32> %6151, i32 15
  %6228 = sext i32 %6227 to i64
  %6229 = getelementptr inbounds i8, i8* %5883, i64 %6228
  %6230 = load i8, i8* %6229, align 1, !tbaa !394
  %6231 = insertelement <32 x i8> %6226, i8 %6230, i32 15
  %6232 = extractelement <32 x i32> %6151, i32 16
  %6233 = sext i32 %6232 to i64
  %6234 = getelementptr inbounds i8, i8* %5883, i64 %6233
  %6235 = load i8, i8* %6234, align 1, !tbaa !394
  %6236 = insertelement <32 x i8> %6231, i8 %6235, i32 16
  %6237 = extractelement <32 x i32> %6151, i32 17
  %6238 = sext i32 %6237 to i64
  %6239 = getelementptr inbounds i8, i8* %5883, i64 %6238
  %6240 = load i8, i8* %6239, align 1, !tbaa !394
  %6241 = insertelement <32 x i8> %6236, i8 %6240, i32 17
  %6242 = extractelement <32 x i32> %6151, i32 18
  %6243 = sext i32 %6242 to i64
  %6244 = getelementptr inbounds i8, i8* %5883, i64 %6243
  %6245 = load i8, i8* %6244, align 1, !tbaa !394
  %6246 = insertelement <32 x i8> %6241, i8 %6245, i32 18
  %6247 = extractelement <32 x i32> %6151, i32 19
  %6248 = sext i32 %6247 to i64
  %6249 = getelementptr inbounds i8, i8* %5883, i64 %6248
  %6250 = load i8, i8* %6249, align 1, !tbaa !394
  %6251 = insertelement <32 x i8> %6246, i8 %6250, i32 19
  %6252 = extractelement <32 x i32> %6151, i32 20
  %6253 = sext i32 %6252 to i64
  %6254 = getelementptr inbounds i8, i8* %5883, i64 %6253
  %6255 = load i8, i8* %6254, align 1, !tbaa !394
  %6256 = insertelement <32 x i8> %6251, i8 %6255, i32 20
  %6257 = extractelement <32 x i32> %6151, i32 21
  %6258 = sext i32 %6257 to i64
  %6259 = getelementptr inbounds i8, i8* %5883, i64 %6258
  %6260 = load i8, i8* %6259, align 1, !tbaa !394
  %6261 = insertelement <32 x i8> %6256, i8 %6260, i32 21
  %6262 = extractelement <32 x i32> %6151, i32 22
  %6263 = sext i32 %6262 to i64
  %6264 = getelementptr inbounds i8, i8* %5883, i64 %6263
  %6265 = load i8, i8* %6264, align 1, !tbaa !394
  %6266 = insertelement <32 x i8> %6261, i8 %6265, i32 22
  %6267 = extractelement <32 x i32> %6151, i32 23
  %6268 = sext i32 %6267 to i64
  %6269 = getelementptr inbounds i8, i8* %5883, i64 %6268
  %6270 = load i8, i8* %6269, align 1, !tbaa !394
  %6271 = insertelement <32 x i8> %6266, i8 %6270, i32 23
  %6272 = extractelement <32 x i32> %6151, i32 24
  %6273 = sext i32 %6272 to i64
  %6274 = getelementptr inbounds i8, i8* %5883, i64 %6273
  %6275 = load i8, i8* %6274, align 1, !tbaa !394
  %6276 = insertelement <32 x i8> %6271, i8 %6275, i32 24
  %6277 = extractelement <32 x i32> %6151, i32 25
  %6278 = sext i32 %6277 to i64
  %6279 = getelementptr inbounds i8, i8* %5883, i64 %6278
  %6280 = load i8, i8* %6279, align 1, !tbaa !394
  %6281 = insertelement <32 x i8> %6276, i8 %6280, i32 25
  %6282 = extractelement <32 x i32> %6151, i32 26
  %6283 = sext i32 %6282 to i64
  %6284 = getelementptr inbounds i8, i8* %5883, i64 %6283
  %6285 = load i8, i8* %6284, align 1, !tbaa !394
  %6286 = insertelement <32 x i8> %6281, i8 %6285, i32 26
  %6287 = extractelement <32 x i32> %6151, i32 27
  %6288 = sext i32 %6287 to i64
  %6289 = getelementptr inbounds i8, i8* %5883, i64 %6288
  %6290 = load i8, i8* %6289, align 1, !tbaa !394
  %6291 = insertelement <32 x i8> %6286, i8 %6290, i32 27
  %6292 = extractelement <32 x i32> %6151, i32 28
  %6293 = sext i32 %6292 to i64
  %6294 = getelementptr inbounds i8, i8* %5883, i64 %6293
  %6295 = load i8, i8* %6294, align 1, !tbaa !394
  %6296 = insertelement <32 x i8> %6291, i8 %6295, i32 28
  %6297 = extractelement <32 x i32> %6151, i32 29
  %6298 = sext i32 %6297 to i64
  %6299 = getelementptr inbounds i8, i8* %5883, i64 %6298
  %6300 = load i8, i8* %6299, align 1, !tbaa !394
  %6301 = insertelement <32 x i8> %6296, i8 %6300, i32 29
  %6302 = extractelement <32 x i32> %6151, i32 30
  %6303 = sext i32 %6302 to i64
  %6304 = getelementptr inbounds i8, i8* %5883, i64 %6303
  %6305 = load i8, i8* %6304, align 1, !tbaa !394
  %6306 = insertelement <32 x i8> %6301, i8 %6305, i32 30
  %6307 = extractelement <32 x i32> %6151, i32 31
  %6308 = sext i32 %6307 to i64
  %6309 = getelementptr inbounds i8, i8* %5883, i64 %6308
  %6310 = load i8, i8* %6309, align 1, !tbaa !394
  %t167.s128 = insertelement <32 x i8> %6306, i8 %6310, i32 31
  %6311 = add nsw i32 %6125, 1
  %6312 = insertelement <32 x i32> undef, i32 %6311, i32 0
  %6313 = shufflevector <32 x i32> %6312, <32 x i32> undef, <32 x i32> zeroinitializer
  %a150 = add nsw <32 x i32> %6313, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6314 = shufflevector <32 x i32> %a150, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6315 = icmp sgt <16 x i32> %6078, %6314
  %6316 = shufflevector <32 x i32> %a150, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6317 = icmp sgt <16 x i32> %6078, %6316
  %6318 = select <16 x i1> %6315, <16 x i32> %6314, <16 x i32> %6078
  %6319 = select <16 x i1> %6317, <16 x i32> %6316, <16 x i32> %6078
  %6320 = icmp sgt <16 x i32> %6318, %6080
  %6321 = icmp sgt <16 x i32> %6319, %6080
  %6322 = select <16 x i1> %6320, <16 x i32> %6318, <16 x i32> %6080
  %6323 = select <16 x i1> %6321, <16 x i32> %6319, <16 x i32> %6080
  %t168129 = shufflevector <16 x i32> %6322, <16 x i32> %6323, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6324 = add nsw <32 x i32> %t168129, %6090
  %6325 = extractelement <32 x i32> %6324, i32 0
  %6326 = sext i32 %6325 to i64
  %6327 = getelementptr inbounds i8, i8* %5883, i64 %6326
  %6328 = load i8, i8* %6327, align 1, !tbaa !394
  %6329 = insertelement <32 x i8> undef, i8 %6328, i32 0
  %6330 = extractelement <32 x i32> %6324, i32 1
  %6331 = sext i32 %6330 to i64
  %6332 = getelementptr inbounds i8, i8* %5883, i64 %6331
  %6333 = load i8, i8* %6332, align 1, !tbaa !394
  %6334 = insertelement <32 x i8> %6329, i8 %6333, i32 1
  %6335 = extractelement <32 x i32> %6324, i32 2
  %6336 = sext i32 %6335 to i64
  %6337 = getelementptr inbounds i8, i8* %5883, i64 %6336
  %6338 = load i8, i8* %6337, align 1, !tbaa !394
  %6339 = insertelement <32 x i8> %6334, i8 %6338, i32 2
  %6340 = extractelement <32 x i32> %6324, i32 3
  %6341 = sext i32 %6340 to i64
  %6342 = getelementptr inbounds i8, i8* %5883, i64 %6341
  %6343 = load i8, i8* %6342, align 1, !tbaa !394
  %6344 = insertelement <32 x i8> %6339, i8 %6343, i32 3
  %6345 = extractelement <32 x i32> %6324, i32 4
  %6346 = sext i32 %6345 to i64
  %6347 = getelementptr inbounds i8, i8* %5883, i64 %6346
  %6348 = load i8, i8* %6347, align 1, !tbaa !394
  %6349 = insertelement <32 x i8> %6344, i8 %6348, i32 4
  %6350 = extractelement <32 x i32> %6324, i32 5
  %6351 = sext i32 %6350 to i64
  %6352 = getelementptr inbounds i8, i8* %5883, i64 %6351
  %6353 = load i8, i8* %6352, align 1, !tbaa !394
  %6354 = insertelement <32 x i8> %6349, i8 %6353, i32 5
  %6355 = extractelement <32 x i32> %6324, i32 6
  %6356 = sext i32 %6355 to i64
  %6357 = getelementptr inbounds i8, i8* %5883, i64 %6356
  %6358 = load i8, i8* %6357, align 1, !tbaa !394
  %6359 = insertelement <32 x i8> %6354, i8 %6358, i32 6
  %6360 = extractelement <32 x i32> %6324, i32 7
  %6361 = sext i32 %6360 to i64
  %6362 = getelementptr inbounds i8, i8* %5883, i64 %6361
  %6363 = load i8, i8* %6362, align 1, !tbaa !394
  %6364 = insertelement <32 x i8> %6359, i8 %6363, i32 7
  %6365 = extractelement <32 x i32> %6324, i32 8
  %6366 = sext i32 %6365 to i64
  %6367 = getelementptr inbounds i8, i8* %5883, i64 %6366
  %6368 = load i8, i8* %6367, align 1, !tbaa !394
  %6369 = insertelement <32 x i8> %6364, i8 %6368, i32 8
  %6370 = extractelement <32 x i32> %6324, i32 9
  %6371 = sext i32 %6370 to i64
  %6372 = getelementptr inbounds i8, i8* %5883, i64 %6371
  %6373 = load i8, i8* %6372, align 1, !tbaa !394
  %6374 = insertelement <32 x i8> %6369, i8 %6373, i32 9
  %6375 = extractelement <32 x i32> %6324, i32 10
  %6376 = sext i32 %6375 to i64
  %6377 = getelementptr inbounds i8, i8* %5883, i64 %6376
  %6378 = load i8, i8* %6377, align 1, !tbaa !394
  %6379 = insertelement <32 x i8> %6374, i8 %6378, i32 10
  %6380 = extractelement <32 x i32> %6324, i32 11
  %6381 = sext i32 %6380 to i64
  %6382 = getelementptr inbounds i8, i8* %5883, i64 %6381
  %6383 = load i8, i8* %6382, align 1, !tbaa !394
  %6384 = insertelement <32 x i8> %6379, i8 %6383, i32 11
  %6385 = extractelement <32 x i32> %6324, i32 12
  %6386 = sext i32 %6385 to i64
  %6387 = getelementptr inbounds i8, i8* %5883, i64 %6386
  %6388 = load i8, i8* %6387, align 1, !tbaa !394
  %6389 = insertelement <32 x i8> %6384, i8 %6388, i32 12
  %6390 = extractelement <32 x i32> %6324, i32 13
  %6391 = sext i32 %6390 to i64
  %6392 = getelementptr inbounds i8, i8* %5883, i64 %6391
  %6393 = load i8, i8* %6392, align 1, !tbaa !394
  %6394 = insertelement <32 x i8> %6389, i8 %6393, i32 13
  %6395 = extractelement <32 x i32> %6324, i32 14
  %6396 = sext i32 %6395 to i64
  %6397 = getelementptr inbounds i8, i8* %5883, i64 %6396
  %6398 = load i8, i8* %6397, align 1, !tbaa !394
  %6399 = insertelement <32 x i8> %6394, i8 %6398, i32 14
  %6400 = extractelement <32 x i32> %6324, i32 15
  %6401 = sext i32 %6400 to i64
  %6402 = getelementptr inbounds i8, i8* %5883, i64 %6401
  %6403 = load i8, i8* %6402, align 1, !tbaa !394
  %6404 = insertelement <32 x i8> %6399, i8 %6403, i32 15
  %6405 = extractelement <32 x i32> %6324, i32 16
  %6406 = sext i32 %6405 to i64
  %6407 = getelementptr inbounds i8, i8* %5883, i64 %6406
  %6408 = load i8, i8* %6407, align 1, !tbaa !394
  %6409 = insertelement <32 x i8> %6404, i8 %6408, i32 16
  %6410 = extractelement <32 x i32> %6324, i32 17
  %6411 = sext i32 %6410 to i64
  %6412 = getelementptr inbounds i8, i8* %5883, i64 %6411
  %6413 = load i8, i8* %6412, align 1, !tbaa !394
  %6414 = insertelement <32 x i8> %6409, i8 %6413, i32 17
  %6415 = extractelement <32 x i32> %6324, i32 18
  %6416 = sext i32 %6415 to i64
  %6417 = getelementptr inbounds i8, i8* %5883, i64 %6416
  %6418 = load i8, i8* %6417, align 1, !tbaa !394
  %6419 = insertelement <32 x i8> %6414, i8 %6418, i32 18
  %6420 = extractelement <32 x i32> %6324, i32 19
  %6421 = sext i32 %6420 to i64
  %6422 = getelementptr inbounds i8, i8* %5883, i64 %6421
  %6423 = load i8, i8* %6422, align 1, !tbaa !394
  %6424 = insertelement <32 x i8> %6419, i8 %6423, i32 19
  %6425 = extractelement <32 x i32> %6324, i32 20
  %6426 = sext i32 %6425 to i64
  %6427 = getelementptr inbounds i8, i8* %5883, i64 %6426
  %6428 = load i8, i8* %6427, align 1, !tbaa !394
  %6429 = insertelement <32 x i8> %6424, i8 %6428, i32 20
  %6430 = extractelement <32 x i32> %6324, i32 21
  %6431 = sext i32 %6430 to i64
  %6432 = getelementptr inbounds i8, i8* %5883, i64 %6431
  %6433 = load i8, i8* %6432, align 1, !tbaa !394
  %6434 = insertelement <32 x i8> %6429, i8 %6433, i32 21
  %6435 = extractelement <32 x i32> %6324, i32 22
  %6436 = sext i32 %6435 to i64
  %6437 = getelementptr inbounds i8, i8* %5883, i64 %6436
  %6438 = load i8, i8* %6437, align 1, !tbaa !394
  %6439 = insertelement <32 x i8> %6434, i8 %6438, i32 22
  %6440 = extractelement <32 x i32> %6324, i32 23
  %6441 = sext i32 %6440 to i64
  %6442 = getelementptr inbounds i8, i8* %5883, i64 %6441
  %6443 = load i8, i8* %6442, align 1, !tbaa !394
  %6444 = insertelement <32 x i8> %6439, i8 %6443, i32 23
  %6445 = extractelement <32 x i32> %6324, i32 24
  %6446 = sext i32 %6445 to i64
  %6447 = getelementptr inbounds i8, i8* %5883, i64 %6446
  %6448 = load i8, i8* %6447, align 1, !tbaa !394
  %6449 = insertelement <32 x i8> %6444, i8 %6448, i32 24
  %6450 = extractelement <32 x i32> %6324, i32 25
  %6451 = sext i32 %6450 to i64
  %6452 = getelementptr inbounds i8, i8* %5883, i64 %6451
  %6453 = load i8, i8* %6452, align 1, !tbaa !394
  %6454 = insertelement <32 x i8> %6449, i8 %6453, i32 25
  %6455 = extractelement <32 x i32> %6324, i32 26
  %6456 = sext i32 %6455 to i64
  %6457 = getelementptr inbounds i8, i8* %5883, i64 %6456
  %6458 = load i8, i8* %6457, align 1, !tbaa !394
  %6459 = insertelement <32 x i8> %6454, i8 %6458, i32 26
  %6460 = extractelement <32 x i32> %6324, i32 27
  %6461 = sext i32 %6460 to i64
  %6462 = getelementptr inbounds i8, i8* %5883, i64 %6461
  %6463 = load i8, i8* %6462, align 1, !tbaa !394
  %6464 = insertelement <32 x i8> %6459, i8 %6463, i32 27
  %6465 = extractelement <32 x i32> %6324, i32 28
  %6466 = sext i32 %6465 to i64
  %6467 = getelementptr inbounds i8, i8* %5883, i64 %6466
  %6468 = load i8, i8* %6467, align 1, !tbaa !394
  %6469 = insertelement <32 x i8> %6464, i8 %6468, i32 28
  %6470 = extractelement <32 x i32> %6324, i32 29
  %6471 = sext i32 %6470 to i64
  %6472 = getelementptr inbounds i8, i8* %5883, i64 %6471
  %6473 = load i8, i8* %6472, align 1, !tbaa !394
  %6474 = insertelement <32 x i8> %6469, i8 %6473, i32 29
  %6475 = extractelement <32 x i32> %6324, i32 30
  %6476 = sext i32 %6475 to i64
  %6477 = getelementptr inbounds i8, i8* %5883, i64 %6476
  %6478 = load i8, i8* %6477, align 1, !tbaa !394
  %6479 = insertelement <32 x i8> %6474, i8 %6478, i32 30
  %6480 = extractelement <32 x i32> %6324, i32 31
  %6481 = sext i32 %6480 to i64
  %6482 = getelementptr inbounds i8, i8* %5883, i64 %6481
  %6483 = load i8, i8* %6482, align 1, !tbaa !394
  %t169.s130 = insertelement <32 x i8> %6479, i8 %6483, i32 31
  %6484 = add nsw <32 x i32> %t166127, %6097
  %6485 = extractelement <32 x i32> %6484, i32 0
  %6486 = sext i32 %6485 to i64
  %6487 = getelementptr inbounds i8, i8* %5883, i64 %6486
  %6488 = load i8, i8* %6487, align 1, !tbaa !394
  %6489 = insertelement <32 x i8> undef, i8 %6488, i32 0
  %6490 = extractelement <32 x i32> %6484, i32 1
  %6491 = sext i32 %6490 to i64
  %6492 = getelementptr inbounds i8, i8* %5883, i64 %6491
  %6493 = load i8, i8* %6492, align 1, !tbaa !394
  %6494 = insertelement <32 x i8> %6489, i8 %6493, i32 1
  %6495 = extractelement <32 x i32> %6484, i32 2
  %6496 = sext i32 %6495 to i64
  %6497 = getelementptr inbounds i8, i8* %5883, i64 %6496
  %6498 = load i8, i8* %6497, align 1, !tbaa !394
  %6499 = insertelement <32 x i8> %6494, i8 %6498, i32 2
  %6500 = extractelement <32 x i32> %6484, i32 3
  %6501 = sext i32 %6500 to i64
  %6502 = getelementptr inbounds i8, i8* %5883, i64 %6501
  %6503 = load i8, i8* %6502, align 1, !tbaa !394
  %6504 = insertelement <32 x i8> %6499, i8 %6503, i32 3
  %6505 = extractelement <32 x i32> %6484, i32 4
  %6506 = sext i32 %6505 to i64
  %6507 = getelementptr inbounds i8, i8* %5883, i64 %6506
  %6508 = load i8, i8* %6507, align 1, !tbaa !394
  %6509 = insertelement <32 x i8> %6504, i8 %6508, i32 4
  %6510 = extractelement <32 x i32> %6484, i32 5
  %6511 = sext i32 %6510 to i64
  %6512 = getelementptr inbounds i8, i8* %5883, i64 %6511
  %6513 = load i8, i8* %6512, align 1, !tbaa !394
  %6514 = insertelement <32 x i8> %6509, i8 %6513, i32 5
  %6515 = extractelement <32 x i32> %6484, i32 6
  %6516 = sext i32 %6515 to i64
  %6517 = getelementptr inbounds i8, i8* %5883, i64 %6516
  %6518 = load i8, i8* %6517, align 1, !tbaa !394
  %6519 = insertelement <32 x i8> %6514, i8 %6518, i32 6
  %6520 = extractelement <32 x i32> %6484, i32 7
  %6521 = sext i32 %6520 to i64
  %6522 = getelementptr inbounds i8, i8* %5883, i64 %6521
  %6523 = load i8, i8* %6522, align 1, !tbaa !394
  %6524 = insertelement <32 x i8> %6519, i8 %6523, i32 7
  %6525 = extractelement <32 x i32> %6484, i32 8
  %6526 = sext i32 %6525 to i64
  %6527 = getelementptr inbounds i8, i8* %5883, i64 %6526
  %6528 = load i8, i8* %6527, align 1, !tbaa !394
  %6529 = insertelement <32 x i8> %6524, i8 %6528, i32 8
  %6530 = extractelement <32 x i32> %6484, i32 9
  %6531 = sext i32 %6530 to i64
  %6532 = getelementptr inbounds i8, i8* %5883, i64 %6531
  %6533 = load i8, i8* %6532, align 1, !tbaa !394
  %6534 = insertelement <32 x i8> %6529, i8 %6533, i32 9
  %6535 = extractelement <32 x i32> %6484, i32 10
  %6536 = sext i32 %6535 to i64
  %6537 = getelementptr inbounds i8, i8* %5883, i64 %6536
  %6538 = load i8, i8* %6537, align 1, !tbaa !394
  %6539 = insertelement <32 x i8> %6534, i8 %6538, i32 10
  %6540 = extractelement <32 x i32> %6484, i32 11
  %6541 = sext i32 %6540 to i64
  %6542 = getelementptr inbounds i8, i8* %5883, i64 %6541
  %6543 = load i8, i8* %6542, align 1, !tbaa !394
  %6544 = insertelement <32 x i8> %6539, i8 %6543, i32 11
  %6545 = extractelement <32 x i32> %6484, i32 12
  %6546 = sext i32 %6545 to i64
  %6547 = getelementptr inbounds i8, i8* %5883, i64 %6546
  %6548 = load i8, i8* %6547, align 1, !tbaa !394
  %6549 = insertelement <32 x i8> %6544, i8 %6548, i32 12
  %6550 = extractelement <32 x i32> %6484, i32 13
  %6551 = sext i32 %6550 to i64
  %6552 = getelementptr inbounds i8, i8* %5883, i64 %6551
  %6553 = load i8, i8* %6552, align 1, !tbaa !394
  %6554 = insertelement <32 x i8> %6549, i8 %6553, i32 13
  %6555 = extractelement <32 x i32> %6484, i32 14
  %6556 = sext i32 %6555 to i64
  %6557 = getelementptr inbounds i8, i8* %5883, i64 %6556
  %6558 = load i8, i8* %6557, align 1, !tbaa !394
  %6559 = insertelement <32 x i8> %6554, i8 %6558, i32 14
  %6560 = extractelement <32 x i32> %6484, i32 15
  %6561 = sext i32 %6560 to i64
  %6562 = getelementptr inbounds i8, i8* %5883, i64 %6561
  %6563 = load i8, i8* %6562, align 1, !tbaa !394
  %6564 = insertelement <32 x i8> %6559, i8 %6563, i32 15
  %6565 = extractelement <32 x i32> %6484, i32 16
  %6566 = sext i32 %6565 to i64
  %6567 = getelementptr inbounds i8, i8* %5883, i64 %6566
  %6568 = load i8, i8* %6567, align 1, !tbaa !394
  %6569 = insertelement <32 x i8> %6564, i8 %6568, i32 16
  %6570 = extractelement <32 x i32> %6484, i32 17
  %6571 = sext i32 %6570 to i64
  %6572 = getelementptr inbounds i8, i8* %5883, i64 %6571
  %6573 = load i8, i8* %6572, align 1, !tbaa !394
  %6574 = insertelement <32 x i8> %6569, i8 %6573, i32 17
  %6575 = extractelement <32 x i32> %6484, i32 18
  %6576 = sext i32 %6575 to i64
  %6577 = getelementptr inbounds i8, i8* %5883, i64 %6576
  %6578 = load i8, i8* %6577, align 1, !tbaa !394
  %6579 = insertelement <32 x i8> %6574, i8 %6578, i32 18
  %6580 = extractelement <32 x i32> %6484, i32 19
  %6581 = sext i32 %6580 to i64
  %6582 = getelementptr inbounds i8, i8* %5883, i64 %6581
  %6583 = load i8, i8* %6582, align 1, !tbaa !394
  %6584 = insertelement <32 x i8> %6579, i8 %6583, i32 19
  %6585 = extractelement <32 x i32> %6484, i32 20
  %6586 = sext i32 %6585 to i64
  %6587 = getelementptr inbounds i8, i8* %5883, i64 %6586
  %6588 = load i8, i8* %6587, align 1, !tbaa !394
  %6589 = insertelement <32 x i8> %6584, i8 %6588, i32 20
  %6590 = extractelement <32 x i32> %6484, i32 21
  %6591 = sext i32 %6590 to i64
  %6592 = getelementptr inbounds i8, i8* %5883, i64 %6591
  %6593 = load i8, i8* %6592, align 1, !tbaa !394
  %6594 = insertelement <32 x i8> %6589, i8 %6593, i32 21
  %6595 = extractelement <32 x i32> %6484, i32 22
  %6596 = sext i32 %6595 to i64
  %6597 = getelementptr inbounds i8, i8* %5883, i64 %6596
  %6598 = load i8, i8* %6597, align 1, !tbaa !394
  %6599 = insertelement <32 x i8> %6594, i8 %6598, i32 22
  %6600 = extractelement <32 x i32> %6484, i32 23
  %6601 = sext i32 %6600 to i64
  %6602 = getelementptr inbounds i8, i8* %5883, i64 %6601
  %6603 = load i8, i8* %6602, align 1, !tbaa !394
  %6604 = insertelement <32 x i8> %6599, i8 %6603, i32 23
  %6605 = extractelement <32 x i32> %6484, i32 24
  %6606 = sext i32 %6605 to i64
  %6607 = getelementptr inbounds i8, i8* %5883, i64 %6606
  %6608 = load i8, i8* %6607, align 1, !tbaa !394
  %6609 = insertelement <32 x i8> %6604, i8 %6608, i32 24
  %6610 = extractelement <32 x i32> %6484, i32 25
  %6611 = sext i32 %6610 to i64
  %6612 = getelementptr inbounds i8, i8* %5883, i64 %6611
  %6613 = load i8, i8* %6612, align 1, !tbaa !394
  %6614 = insertelement <32 x i8> %6609, i8 %6613, i32 25
  %6615 = extractelement <32 x i32> %6484, i32 26
  %6616 = sext i32 %6615 to i64
  %6617 = getelementptr inbounds i8, i8* %5883, i64 %6616
  %6618 = load i8, i8* %6617, align 1, !tbaa !394
  %6619 = insertelement <32 x i8> %6614, i8 %6618, i32 26
  %6620 = extractelement <32 x i32> %6484, i32 27
  %6621 = sext i32 %6620 to i64
  %6622 = getelementptr inbounds i8, i8* %5883, i64 %6621
  %6623 = load i8, i8* %6622, align 1, !tbaa !394
  %6624 = insertelement <32 x i8> %6619, i8 %6623, i32 27
  %6625 = extractelement <32 x i32> %6484, i32 28
  %6626 = sext i32 %6625 to i64
  %6627 = getelementptr inbounds i8, i8* %5883, i64 %6626
  %6628 = load i8, i8* %6627, align 1, !tbaa !394
  %6629 = insertelement <32 x i8> %6624, i8 %6628, i32 28
  %6630 = extractelement <32 x i32> %6484, i32 29
  %6631 = sext i32 %6630 to i64
  %6632 = getelementptr inbounds i8, i8* %5883, i64 %6631
  %6633 = load i8, i8* %6632, align 1, !tbaa !394
  %6634 = insertelement <32 x i8> %6629, i8 %6633, i32 29
  %6635 = extractelement <32 x i32> %6484, i32 30
  %6636 = sext i32 %6635 to i64
  %6637 = getelementptr inbounds i8, i8* %5883, i64 %6636
  %6638 = load i8, i8* %6637, align 1, !tbaa !394
  %6639 = insertelement <32 x i8> %6634, i8 %6638, i32 30
  %6640 = extractelement <32 x i32> %6484, i32 31
  %6641 = sext i32 %6640 to i64
  %6642 = getelementptr inbounds i8, i8* %5883, i64 %6641
  %6643 = load i8, i8* %6642, align 1, !tbaa !394
  %t171.s131 = insertelement <32 x i8> %6639, i8 %6643, i32 31
  %6644 = add nsw <32 x i32> %t168129, %6097
  %6645 = extractelement <32 x i32> %6644, i32 0
  %6646 = sext i32 %6645 to i64
  %6647 = getelementptr inbounds i8, i8* %5883, i64 %6646
  %6648 = load i8, i8* %6647, align 1, !tbaa !394
  %6649 = insertelement <32 x i8> undef, i8 %6648, i32 0
  %6650 = extractelement <32 x i32> %6644, i32 1
  %6651 = sext i32 %6650 to i64
  %6652 = getelementptr inbounds i8, i8* %5883, i64 %6651
  %6653 = load i8, i8* %6652, align 1, !tbaa !394
  %6654 = insertelement <32 x i8> %6649, i8 %6653, i32 1
  %6655 = extractelement <32 x i32> %6644, i32 2
  %6656 = sext i32 %6655 to i64
  %6657 = getelementptr inbounds i8, i8* %5883, i64 %6656
  %6658 = load i8, i8* %6657, align 1, !tbaa !394
  %6659 = insertelement <32 x i8> %6654, i8 %6658, i32 2
  %6660 = extractelement <32 x i32> %6644, i32 3
  %6661 = sext i32 %6660 to i64
  %6662 = getelementptr inbounds i8, i8* %5883, i64 %6661
  %6663 = load i8, i8* %6662, align 1, !tbaa !394
  %6664 = insertelement <32 x i8> %6659, i8 %6663, i32 3
  %6665 = extractelement <32 x i32> %6644, i32 4
  %6666 = sext i32 %6665 to i64
  %6667 = getelementptr inbounds i8, i8* %5883, i64 %6666
  %6668 = load i8, i8* %6667, align 1, !tbaa !394
  %6669 = insertelement <32 x i8> %6664, i8 %6668, i32 4
  %6670 = extractelement <32 x i32> %6644, i32 5
  %6671 = sext i32 %6670 to i64
  %6672 = getelementptr inbounds i8, i8* %5883, i64 %6671
  %6673 = load i8, i8* %6672, align 1, !tbaa !394
  %6674 = insertelement <32 x i8> %6669, i8 %6673, i32 5
  %6675 = extractelement <32 x i32> %6644, i32 6
  %6676 = sext i32 %6675 to i64
  %6677 = getelementptr inbounds i8, i8* %5883, i64 %6676
  %6678 = load i8, i8* %6677, align 1, !tbaa !394
  %6679 = insertelement <32 x i8> %6674, i8 %6678, i32 6
  %6680 = extractelement <32 x i32> %6644, i32 7
  %6681 = sext i32 %6680 to i64
  %6682 = getelementptr inbounds i8, i8* %5883, i64 %6681
  %6683 = load i8, i8* %6682, align 1, !tbaa !394
  %6684 = insertelement <32 x i8> %6679, i8 %6683, i32 7
  %6685 = extractelement <32 x i32> %6644, i32 8
  %6686 = sext i32 %6685 to i64
  %6687 = getelementptr inbounds i8, i8* %5883, i64 %6686
  %6688 = load i8, i8* %6687, align 1, !tbaa !394
  %6689 = insertelement <32 x i8> %6684, i8 %6688, i32 8
  %6690 = extractelement <32 x i32> %6644, i32 9
  %6691 = sext i32 %6690 to i64
  %6692 = getelementptr inbounds i8, i8* %5883, i64 %6691
  %6693 = load i8, i8* %6692, align 1, !tbaa !394
  %6694 = insertelement <32 x i8> %6689, i8 %6693, i32 9
  %6695 = extractelement <32 x i32> %6644, i32 10
  %6696 = sext i32 %6695 to i64
  %6697 = getelementptr inbounds i8, i8* %5883, i64 %6696
  %6698 = load i8, i8* %6697, align 1, !tbaa !394
  %6699 = insertelement <32 x i8> %6694, i8 %6698, i32 10
  %6700 = extractelement <32 x i32> %6644, i32 11
  %6701 = sext i32 %6700 to i64
  %6702 = getelementptr inbounds i8, i8* %5883, i64 %6701
  %6703 = load i8, i8* %6702, align 1, !tbaa !394
  %6704 = insertelement <32 x i8> %6699, i8 %6703, i32 11
  %6705 = extractelement <32 x i32> %6644, i32 12
  %6706 = sext i32 %6705 to i64
  %6707 = getelementptr inbounds i8, i8* %5883, i64 %6706
  %6708 = load i8, i8* %6707, align 1, !tbaa !394
  %6709 = insertelement <32 x i8> %6704, i8 %6708, i32 12
  %6710 = extractelement <32 x i32> %6644, i32 13
  %6711 = sext i32 %6710 to i64
  %6712 = getelementptr inbounds i8, i8* %5883, i64 %6711
  %6713 = load i8, i8* %6712, align 1, !tbaa !394
  %6714 = insertelement <32 x i8> %6709, i8 %6713, i32 13
  %6715 = extractelement <32 x i32> %6644, i32 14
  %6716 = sext i32 %6715 to i64
  %6717 = getelementptr inbounds i8, i8* %5883, i64 %6716
  %6718 = load i8, i8* %6717, align 1, !tbaa !394
  %6719 = insertelement <32 x i8> %6714, i8 %6718, i32 14
  %6720 = extractelement <32 x i32> %6644, i32 15
  %6721 = sext i32 %6720 to i64
  %6722 = getelementptr inbounds i8, i8* %5883, i64 %6721
  %6723 = load i8, i8* %6722, align 1, !tbaa !394
  %6724 = insertelement <32 x i8> %6719, i8 %6723, i32 15
  %6725 = extractelement <32 x i32> %6644, i32 16
  %6726 = sext i32 %6725 to i64
  %6727 = getelementptr inbounds i8, i8* %5883, i64 %6726
  %6728 = load i8, i8* %6727, align 1, !tbaa !394
  %6729 = insertelement <32 x i8> %6724, i8 %6728, i32 16
  %6730 = extractelement <32 x i32> %6644, i32 17
  %6731 = sext i32 %6730 to i64
  %6732 = getelementptr inbounds i8, i8* %5883, i64 %6731
  %6733 = load i8, i8* %6732, align 1, !tbaa !394
  %6734 = insertelement <32 x i8> %6729, i8 %6733, i32 17
  %6735 = extractelement <32 x i32> %6644, i32 18
  %6736 = sext i32 %6735 to i64
  %6737 = getelementptr inbounds i8, i8* %5883, i64 %6736
  %6738 = load i8, i8* %6737, align 1, !tbaa !394
  %6739 = insertelement <32 x i8> %6734, i8 %6738, i32 18
  %6740 = extractelement <32 x i32> %6644, i32 19
  %6741 = sext i32 %6740 to i64
  %6742 = getelementptr inbounds i8, i8* %5883, i64 %6741
  %6743 = load i8, i8* %6742, align 1, !tbaa !394
  %6744 = insertelement <32 x i8> %6739, i8 %6743, i32 19
  %6745 = extractelement <32 x i32> %6644, i32 20
  %6746 = sext i32 %6745 to i64
  %6747 = getelementptr inbounds i8, i8* %5883, i64 %6746
  %6748 = load i8, i8* %6747, align 1, !tbaa !394
  %6749 = insertelement <32 x i8> %6744, i8 %6748, i32 20
  %6750 = extractelement <32 x i32> %6644, i32 21
  %6751 = sext i32 %6750 to i64
  %6752 = getelementptr inbounds i8, i8* %5883, i64 %6751
  %6753 = load i8, i8* %6752, align 1, !tbaa !394
  %6754 = insertelement <32 x i8> %6749, i8 %6753, i32 21
  %6755 = extractelement <32 x i32> %6644, i32 22
  %6756 = sext i32 %6755 to i64
  %6757 = getelementptr inbounds i8, i8* %5883, i64 %6756
  %6758 = load i8, i8* %6757, align 1, !tbaa !394
  %6759 = insertelement <32 x i8> %6754, i8 %6758, i32 22
  %6760 = extractelement <32 x i32> %6644, i32 23
  %6761 = sext i32 %6760 to i64
  %6762 = getelementptr inbounds i8, i8* %5883, i64 %6761
  %6763 = load i8, i8* %6762, align 1, !tbaa !394
  %6764 = insertelement <32 x i8> %6759, i8 %6763, i32 23
  %6765 = extractelement <32 x i32> %6644, i32 24
  %6766 = sext i32 %6765 to i64
  %6767 = getelementptr inbounds i8, i8* %5883, i64 %6766
  %6768 = load i8, i8* %6767, align 1, !tbaa !394
  %6769 = insertelement <32 x i8> %6764, i8 %6768, i32 24
  %6770 = extractelement <32 x i32> %6644, i32 25
  %6771 = sext i32 %6770 to i64
  %6772 = getelementptr inbounds i8, i8* %5883, i64 %6771
  %6773 = load i8, i8* %6772, align 1, !tbaa !394
  %6774 = insertelement <32 x i8> %6769, i8 %6773, i32 25
  %6775 = extractelement <32 x i32> %6644, i32 26
  %6776 = sext i32 %6775 to i64
  %6777 = getelementptr inbounds i8, i8* %5883, i64 %6776
  %6778 = load i8, i8* %6777, align 1, !tbaa !394
  %6779 = insertelement <32 x i8> %6774, i8 %6778, i32 26
  %6780 = extractelement <32 x i32> %6644, i32 27
  %6781 = sext i32 %6780 to i64
  %6782 = getelementptr inbounds i8, i8* %5883, i64 %6781
  %6783 = load i8, i8* %6782, align 1, !tbaa !394
  %6784 = insertelement <32 x i8> %6779, i8 %6783, i32 27
  %6785 = extractelement <32 x i32> %6644, i32 28
  %6786 = sext i32 %6785 to i64
  %6787 = getelementptr inbounds i8, i8* %5883, i64 %6786
  %6788 = load i8, i8* %6787, align 1, !tbaa !394
  %6789 = insertelement <32 x i8> %6784, i8 %6788, i32 28
  %6790 = extractelement <32 x i32> %6644, i32 29
  %6791 = sext i32 %6790 to i64
  %6792 = getelementptr inbounds i8, i8* %5883, i64 %6791
  %6793 = load i8, i8* %6792, align 1, !tbaa !394
  %6794 = insertelement <32 x i8> %6789, i8 %6793, i32 29
  %6795 = extractelement <32 x i32> %6644, i32 30
  %6796 = sext i32 %6795 to i64
  %6797 = getelementptr inbounds i8, i8* %5883, i64 %6796
  %6798 = load i8, i8* %6797, align 1, !tbaa !394
  %6799 = insertelement <32 x i8> %6794, i8 %6798, i32 30
  %6800 = extractelement <32 x i32> %6644, i32 31
  %6801 = sext i32 %6800 to i64
  %6802 = getelementptr inbounds i8, i8* %5883, i64 %6801
  %6803 = load i8, i8* %6802, align 1, !tbaa !394
  %t172.s132 = insertelement <32 x i8> %6799, i8 %6803, i32 31
  %6804 = add nsw <32 x i32> %t163126, %6090
  %6805 = extractelement <32 x i32> %6804, i32 0
  %6806 = sext i32 %6805 to i64
  %6807 = getelementptr inbounds i8, i8* %5883, i64 %6806
  %6808 = load i8, i8* %6807, align 1, !tbaa !394
  %6809 = insertelement <32 x i8> undef, i8 %6808, i32 0
  %6810 = extractelement <32 x i32> %6804, i32 1
  %6811 = sext i32 %6810 to i64
  %6812 = getelementptr inbounds i8, i8* %5883, i64 %6811
  %6813 = load i8, i8* %6812, align 1, !tbaa !394
  %6814 = insertelement <32 x i8> %6809, i8 %6813, i32 1
  %6815 = extractelement <32 x i32> %6804, i32 2
  %6816 = sext i32 %6815 to i64
  %6817 = getelementptr inbounds i8, i8* %5883, i64 %6816
  %6818 = load i8, i8* %6817, align 1, !tbaa !394
  %6819 = insertelement <32 x i8> %6814, i8 %6818, i32 2
  %6820 = extractelement <32 x i32> %6804, i32 3
  %6821 = sext i32 %6820 to i64
  %6822 = getelementptr inbounds i8, i8* %5883, i64 %6821
  %6823 = load i8, i8* %6822, align 1, !tbaa !394
  %6824 = insertelement <32 x i8> %6819, i8 %6823, i32 3
  %6825 = extractelement <32 x i32> %6804, i32 4
  %6826 = sext i32 %6825 to i64
  %6827 = getelementptr inbounds i8, i8* %5883, i64 %6826
  %6828 = load i8, i8* %6827, align 1, !tbaa !394
  %6829 = insertelement <32 x i8> %6824, i8 %6828, i32 4
  %6830 = extractelement <32 x i32> %6804, i32 5
  %6831 = sext i32 %6830 to i64
  %6832 = getelementptr inbounds i8, i8* %5883, i64 %6831
  %6833 = load i8, i8* %6832, align 1, !tbaa !394
  %6834 = insertelement <32 x i8> %6829, i8 %6833, i32 5
  %6835 = extractelement <32 x i32> %6804, i32 6
  %6836 = sext i32 %6835 to i64
  %6837 = getelementptr inbounds i8, i8* %5883, i64 %6836
  %6838 = load i8, i8* %6837, align 1, !tbaa !394
  %6839 = insertelement <32 x i8> %6834, i8 %6838, i32 6
  %6840 = extractelement <32 x i32> %6804, i32 7
  %6841 = sext i32 %6840 to i64
  %6842 = getelementptr inbounds i8, i8* %5883, i64 %6841
  %6843 = load i8, i8* %6842, align 1, !tbaa !394
  %6844 = insertelement <32 x i8> %6839, i8 %6843, i32 7
  %6845 = extractelement <32 x i32> %6804, i32 8
  %6846 = sext i32 %6845 to i64
  %6847 = getelementptr inbounds i8, i8* %5883, i64 %6846
  %6848 = load i8, i8* %6847, align 1, !tbaa !394
  %6849 = insertelement <32 x i8> %6844, i8 %6848, i32 8
  %6850 = extractelement <32 x i32> %6804, i32 9
  %6851 = sext i32 %6850 to i64
  %6852 = getelementptr inbounds i8, i8* %5883, i64 %6851
  %6853 = load i8, i8* %6852, align 1, !tbaa !394
  %6854 = insertelement <32 x i8> %6849, i8 %6853, i32 9
  %6855 = extractelement <32 x i32> %6804, i32 10
  %6856 = sext i32 %6855 to i64
  %6857 = getelementptr inbounds i8, i8* %5883, i64 %6856
  %6858 = load i8, i8* %6857, align 1, !tbaa !394
  %6859 = insertelement <32 x i8> %6854, i8 %6858, i32 10
  %6860 = extractelement <32 x i32> %6804, i32 11
  %6861 = sext i32 %6860 to i64
  %6862 = getelementptr inbounds i8, i8* %5883, i64 %6861
  %6863 = load i8, i8* %6862, align 1, !tbaa !394
  %6864 = insertelement <32 x i8> %6859, i8 %6863, i32 11
  %6865 = extractelement <32 x i32> %6804, i32 12
  %6866 = sext i32 %6865 to i64
  %6867 = getelementptr inbounds i8, i8* %5883, i64 %6866
  %6868 = load i8, i8* %6867, align 1, !tbaa !394
  %6869 = insertelement <32 x i8> %6864, i8 %6868, i32 12
  %6870 = extractelement <32 x i32> %6804, i32 13
  %6871 = sext i32 %6870 to i64
  %6872 = getelementptr inbounds i8, i8* %5883, i64 %6871
  %6873 = load i8, i8* %6872, align 1, !tbaa !394
  %6874 = insertelement <32 x i8> %6869, i8 %6873, i32 13
  %6875 = extractelement <32 x i32> %6804, i32 14
  %6876 = sext i32 %6875 to i64
  %6877 = getelementptr inbounds i8, i8* %5883, i64 %6876
  %6878 = load i8, i8* %6877, align 1, !tbaa !394
  %6879 = insertelement <32 x i8> %6874, i8 %6878, i32 14
  %6880 = extractelement <32 x i32> %6804, i32 15
  %6881 = sext i32 %6880 to i64
  %6882 = getelementptr inbounds i8, i8* %5883, i64 %6881
  %6883 = load i8, i8* %6882, align 1, !tbaa !394
  %6884 = insertelement <32 x i8> %6879, i8 %6883, i32 15
  %6885 = extractelement <32 x i32> %6804, i32 16
  %6886 = sext i32 %6885 to i64
  %6887 = getelementptr inbounds i8, i8* %5883, i64 %6886
  %6888 = load i8, i8* %6887, align 1, !tbaa !394
  %6889 = insertelement <32 x i8> %6884, i8 %6888, i32 16
  %6890 = extractelement <32 x i32> %6804, i32 17
  %6891 = sext i32 %6890 to i64
  %6892 = getelementptr inbounds i8, i8* %5883, i64 %6891
  %6893 = load i8, i8* %6892, align 1, !tbaa !394
  %6894 = insertelement <32 x i8> %6889, i8 %6893, i32 17
  %6895 = extractelement <32 x i32> %6804, i32 18
  %6896 = sext i32 %6895 to i64
  %6897 = getelementptr inbounds i8, i8* %5883, i64 %6896
  %6898 = load i8, i8* %6897, align 1, !tbaa !394
  %6899 = insertelement <32 x i8> %6894, i8 %6898, i32 18
  %6900 = extractelement <32 x i32> %6804, i32 19
  %6901 = sext i32 %6900 to i64
  %6902 = getelementptr inbounds i8, i8* %5883, i64 %6901
  %6903 = load i8, i8* %6902, align 1, !tbaa !394
  %6904 = insertelement <32 x i8> %6899, i8 %6903, i32 19
  %6905 = extractelement <32 x i32> %6804, i32 20
  %6906 = sext i32 %6905 to i64
  %6907 = getelementptr inbounds i8, i8* %5883, i64 %6906
  %6908 = load i8, i8* %6907, align 1, !tbaa !394
  %6909 = insertelement <32 x i8> %6904, i8 %6908, i32 20
  %6910 = extractelement <32 x i32> %6804, i32 21
  %6911 = sext i32 %6910 to i64
  %6912 = getelementptr inbounds i8, i8* %5883, i64 %6911
  %6913 = load i8, i8* %6912, align 1, !tbaa !394
  %6914 = insertelement <32 x i8> %6909, i8 %6913, i32 21
  %6915 = extractelement <32 x i32> %6804, i32 22
  %6916 = sext i32 %6915 to i64
  %6917 = getelementptr inbounds i8, i8* %5883, i64 %6916
  %6918 = load i8, i8* %6917, align 1, !tbaa !394
  %6919 = insertelement <32 x i8> %6914, i8 %6918, i32 22
  %6920 = extractelement <32 x i32> %6804, i32 23
  %6921 = sext i32 %6920 to i64
  %6922 = getelementptr inbounds i8, i8* %5883, i64 %6921
  %6923 = load i8, i8* %6922, align 1, !tbaa !394
  %6924 = insertelement <32 x i8> %6919, i8 %6923, i32 23
  %6925 = extractelement <32 x i32> %6804, i32 24
  %6926 = sext i32 %6925 to i64
  %6927 = getelementptr inbounds i8, i8* %5883, i64 %6926
  %6928 = load i8, i8* %6927, align 1, !tbaa !394
  %6929 = insertelement <32 x i8> %6924, i8 %6928, i32 24
  %6930 = extractelement <32 x i32> %6804, i32 25
  %6931 = sext i32 %6930 to i64
  %6932 = getelementptr inbounds i8, i8* %5883, i64 %6931
  %6933 = load i8, i8* %6932, align 1, !tbaa !394
  %6934 = insertelement <32 x i8> %6929, i8 %6933, i32 25
  %6935 = extractelement <32 x i32> %6804, i32 26
  %6936 = sext i32 %6935 to i64
  %6937 = getelementptr inbounds i8, i8* %5883, i64 %6936
  %6938 = load i8, i8* %6937, align 1, !tbaa !394
  %6939 = insertelement <32 x i8> %6934, i8 %6938, i32 26
  %6940 = extractelement <32 x i32> %6804, i32 27
  %6941 = sext i32 %6940 to i64
  %6942 = getelementptr inbounds i8, i8* %5883, i64 %6941
  %6943 = load i8, i8* %6942, align 1, !tbaa !394
  %6944 = insertelement <32 x i8> %6939, i8 %6943, i32 27
  %6945 = extractelement <32 x i32> %6804, i32 28
  %6946 = sext i32 %6945 to i64
  %6947 = getelementptr inbounds i8, i8* %5883, i64 %6946
  %6948 = load i8, i8* %6947, align 1, !tbaa !394
  %6949 = insertelement <32 x i8> %6944, i8 %6948, i32 28
  %6950 = extractelement <32 x i32> %6804, i32 29
  %6951 = sext i32 %6950 to i64
  %6952 = getelementptr inbounds i8, i8* %5883, i64 %6951
  %6953 = load i8, i8* %6952, align 1, !tbaa !394
  %6954 = insertelement <32 x i8> %6949, i8 %6953, i32 29
  %6955 = extractelement <32 x i32> %6804, i32 30
  %6956 = sext i32 %6955 to i64
  %6957 = getelementptr inbounds i8, i8* %5883, i64 %6956
  %6958 = load i8, i8* %6957, align 1, !tbaa !394
  %6959 = insertelement <32 x i8> %6954, i8 %6958, i32 30
  %6960 = extractelement <32 x i32> %6804, i32 31
  %6961 = sext i32 %6960 to i64
  %6962 = getelementptr inbounds i8, i8* %5883, i64 %6961
  %6963 = load i8, i8* %6962, align 1, !tbaa !394
  %6964 = insertelement <32 x i8> %6959, i8 %6963, i32 31
  %6965 = add nsw <32 x i32> %t163126, %6097
  %6966 = extractelement <32 x i32> %6965, i32 0
  %6967 = sext i32 %6966 to i64
  %6968 = getelementptr inbounds i8, i8* %5883, i64 %6967
  %6969 = load i8, i8* %6968, align 1, !tbaa !394
  %6970 = insertelement <32 x i8> undef, i8 %6969, i32 0
  %6971 = extractelement <32 x i32> %6965, i32 1
  %6972 = sext i32 %6971 to i64
  %6973 = getelementptr inbounds i8, i8* %5883, i64 %6972
  %6974 = load i8, i8* %6973, align 1, !tbaa !394
  %6975 = insertelement <32 x i8> %6970, i8 %6974, i32 1
  %6976 = extractelement <32 x i32> %6965, i32 2
  %6977 = sext i32 %6976 to i64
  %6978 = getelementptr inbounds i8, i8* %5883, i64 %6977
  %6979 = load i8, i8* %6978, align 1, !tbaa !394
  %6980 = insertelement <32 x i8> %6975, i8 %6979, i32 2
  %6981 = extractelement <32 x i32> %6965, i32 3
  %6982 = sext i32 %6981 to i64
  %6983 = getelementptr inbounds i8, i8* %5883, i64 %6982
  %6984 = load i8, i8* %6983, align 1, !tbaa !394
  %6985 = insertelement <32 x i8> %6980, i8 %6984, i32 3
  %6986 = extractelement <32 x i32> %6965, i32 4
  %6987 = sext i32 %6986 to i64
  %6988 = getelementptr inbounds i8, i8* %5883, i64 %6987
  %6989 = load i8, i8* %6988, align 1, !tbaa !394
  %6990 = insertelement <32 x i8> %6985, i8 %6989, i32 4
  %6991 = extractelement <32 x i32> %6965, i32 5
  %6992 = sext i32 %6991 to i64
  %6993 = getelementptr inbounds i8, i8* %5883, i64 %6992
  %6994 = load i8, i8* %6993, align 1, !tbaa !394
  %6995 = insertelement <32 x i8> %6990, i8 %6994, i32 5
  %6996 = extractelement <32 x i32> %6965, i32 6
  %6997 = sext i32 %6996 to i64
  %6998 = getelementptr inbounds i8, i8* %5883, i64 %6997
  %6999 = load i8, i8* %6998, align 1, !tbaa !394
  %7000 = insertelement <32 x i8> %6995, i8 %6999, i32 6
  %7001 = extractelement <32 x i32> %6965, i32 7
  %7002 = sext i32 %7001 to i64
  %7003 = getelementptr inbounds i8, i8* %5883, i64 %7002
  %7004 = load i8, i8* %7003, align 1, !tbaa !394
  %7005 = insertelement <32 x i8> %7000, i8 %7004, i32 7
  %7006 = extractelement <32 x i32> %6965, i32 8
  %7007 = sext i32 %7006 to i64
  %7008 = getelementptr inbounds i8, i8* %5883, i64 %7007
  %7009 = load i8, i8* %7008, align 1, !tbaa !394
  %7010 = insertelement <32 x i8> %7005, i8 %7009, i32 8
  %7011 = extractelement <32 x i32> %6965, i32 9
  %7012 = sext i32 %7011 to i64
  %7013 = getelementptr inbounds i8, i8* %5883, i64 %7012
  %7014 = load i8, i8* %7013, align 1, !tbaa !394
  %7015 = insertelement <32 x i8> %7010, i8 %7014, i32 9
  %7016 = extractelement <32 x i32> %6965, i32 10
  %7017 = sext i32 %7016 to i64
  %7018 = getelementptr inbounds i8, i8* %5883, i64 %7017
  %7019 = load i8, i8* %7018, align 1, !tbaa !394
  %7020 = insertelement <32 x i8> %7015, i8 %7019, i32 10
  %7021 = extractelement <32 x i32> %6965, i32 11
  %7022 = sext i32 %7021 to i64
  %7023 = getelementptr inbounds i8, i8* %5883, i64 %7022
  %7024 = load i8, i8* %7023, align 1, !tbaa !394
  %7025 = insertelement <32 x i8> %7020, i8 %7024, i32 11
  %7026 = extractelement <32 x i32> %6965, i32 12
  %7027 = sext i32 %7026 to i64
  %7028 = getelementptr inbounds i8, i8* %5883, i64 %7027
  %7029 = load i8, i8* %7028, align 1, !tbaa !394
  %7030 = insertelement <32 x i8> %7025, i8 %7029, i32 12
  %7031 = extractelement <32 x i32> %6965, i32 13
  %7032 = sext i32 %7031 to i64
  %7033 = getelementptr inbounds i8, i8* %5883, i64 %7032
  %7034 = load i8, i8* %7033, align 1, !tbaa !394
  %7035 = insertelement <32 x i8> %7030, i8 %7034, i32 13
  %7036 = extractelement <32 x i32> %6965, i32 14
  %7037 = sext i32 %7036 to i64
  %7038 = getelementptr inbounds i8, i8* %5883, i64 %7037
  %7039 = load i8, i8* %7038, align 1, !tbaa !394
  %7040 = insertelement <32 x i8> %7035, i8 %7039, i32 14
  %7041 = extractelement <32 x i32> %6965, i32 15
  %7042 = sext i32 %7041 to i64
  %7043 = getelementptr inbounds i8, i8* %5883, i64 %7042
  %7044 = load i8, i8* %7043, align 1, !tbaa !394
  %7045 = insertelement <32 x i8> %7040, i8 %7044, i32 15
  %7046 = extractelement <32 x i32> %6965, i32 16
  %7047 = sext i32 %7046 to i64
  %7048 = getelementptr inbounds i8, i8* %5883, i64 %7047
  %7049 = load i8, i8* %7048, align 1, !tbaa !394
  %7050 = insertelement <32 x i8> %7045, i8 %7049, i32 16
  %7051 = extractelement <32 x i32> %6965, i32 17
  %7052 = sext i32 %7051 to i64
  %7053 = getelementptr inbounds i8, i8* %5883, i64 %7052
  %7054 = load i8, i8* %7053, align 1, !tbaa !394
  %7055 = insertelement <32 x i8> %7050, i8 %7054, i32 17
  %7056 = extractelement <32 x i32> %6965, i32 18
  %7057 = sext i32 %7056 to i64
  %7058 = getelementptr inbounds i8, i8* %5883, i64 %7057
  %7059 = load i8, i8* %7058, align 1, !tbaa !394
  %7060 = insertelement <32 x i8> %7055, i8 %7059, i32 18
  %7061 = extractelement <32 x i32> %6965, i32 19
  %7062 = sext i32 %7061 to i64
  %7063 = getelementptr inbounds i8, i8* %5883, i64 %7062
  %7064 = load i8, i8* %7063, align 1, !tbaa !394
  %7065 = insertelement <32 x i8> %7060, i8 %7064, i32 19
  %7066 = extractelement <32 x i32> %6965, i32 20
  %7067 = sext i32 %7066 to i64
  %7068 = getelementptr inbounds i8, i8* %5883, i64 %7067
  %7069 = load i8, i8* %7068, align 1, !tbaa !394
  %7070 = insertelement <32 x i8> %7065, i8 %7069, i32 20
  %7071 = extractelement <32 x i32> %6965, i32 21
  %7072 = sext i32 %7071 to i64
  %7073 = getelementptr inbounds i8, i8* %5883, i64 %7072
  %7074 = load i8, i8* %7073, align 1, !tbaa !394
  %7075 = insertelement <32 x i8> %7070, i8 %7074, i32 21
  %7076 = extractelement <32 x i32> %6965, i32 22
  %7077 = sext i32 %7076 to i64
  %7078 = getelementptr inbounds i8, i8* %5883, i64 %7077
  %7079 = load i8, i8* %7078, align 1, !tbaa !394
  %7080 = insertelement <32 x i8> %7075, i8 %7079, i32 22
  %7081 = extractelement <32 x i32> %6965, i32 23
  %7082 = sext i32 %7081 to i64
  %7083 = getelementptr inbounds i8, i8* %5883, i64 %7082
  %7084 = load i8, i8* %7083, align 1, !tbaa !394
  %7085 = insertelement <32 x i8> %7080, i8 %7084, i32 23
  %7086 = extractelement <32 x i32> %6965, i32 24
  %7087 = sext i32 %7086 to i64
  %7088 = getelementptr inbounds i8, i8* %5883, i64 %7087
  %7089 = load i8, i8* %7088, align 1, !tbaa !394
  %7090 = insertelement <32 x i8> %7085, i8 %7089, i32 24
  %7091 = extractelement <32 x i32> %6965, i32 25
  %7092 = sext i32 %7091 to i64
  %7093 = getelementptr inbounds i8, i8* %5883, i64 %7092
  %7094 = load i8, i8* %7093, align 1, !tbaa !394
  %7095 = insertelement <32 x i8> %7090, i8 %7094, i32 25
  %7096 = extractelement <32 x i32> %6965, i32 26
  %7097 = sext i32 %7096 to i64
  %7098 = getelementptr inbounds i8, i8* %5883, i64 %7097
  %7099 = load i8, i8* %7098, align 1, !tbaa !394
  %7100 = insertelement <32 x i8> %7095, i8 %7099, i32 26
  %7101 = extractelement <32 x i32> %6965, i32 27
  %7102 = sext i32 %7101 to i64
  %7103 = getelementptr inbounds i8, i8* %5883, i64 %7102
  %7104 = load i8, i8* %7103, align 1, !tbaa !394
  %7105 = insertelement <32 x i8> %7100, i8 %7104, i32 27
  %7106 = extractelement <32 x i32> %6965, i32 28
  %7107 = sext i32 %7106 to i64
  %7108 = getelementptr inbounds i8, i8* %5883, i64 %7107
  %7109 = load i8, i8* %7108, align 1, !tbaa !394
  %7110 = insertelement <32 x i8> %7105, i8 %7109, i32 28
  %7111 = extractelement <32 x i32> %6965, i32 29
  %7112 = sext i32 %7111 to i64
  %7113 = getelementptr inbounds i8, i8* %5883, i64 %7112
  %7114 = load i8, i8* %7113, align 1, !tbaa !394
  %7115 = insertelement <32 x i8> %7110, i8 %7114, i32 29
  %7116 = extractelement <32 x i32> %6965, i32 30
  %7117 = sext i32 %7116 to i64
  %7118 = getelementptr inbounds i8, i8* %5883, i64 %7117
  %7119 = load i8, i8* %7118, align 1, !tbaa !394
  %7120 = insertelement <32 x i8> %7115, i8 %7119, i32 30
  %7121 = extractelement <32 x i32> %6965, i32 31
  %7122 = sext i32 %7121 to i64
  %7123 = getelementptr inbounds i8, i8* %5883, i64 %7122
  %7124 = load i8, i8* %7123, align 1, !tbaa !394
  %7125 = insertelement <32 x i8> %7120, i8 %7124, i32 31
  %7126 = add nsw <32 x i32> %t166127, %t232133
  %7127 = extractelement <32 x i32> %7126, i32 0
  %7128 = sext i32 %7127 to i64
  %7129 = getelementptr inbounds i8, i8* %5883, i64 %7128
  %7130 = load i8, i8* %7129, align 1, !tbaa !394
  %7131 = insertelement <32 x i8> undef, i8 %7130, i32 0
  %7132 = extractelement <32 x i32> %7126, i32 1
  %7133 = sext i32 %7132 to i64
  %7134 = getelementptr inbounds i8, i8* %5883, i64 %7133
  %7135 = load i8, i8* %7134, align 1, !tbaa !394
  %7136 = insertelement <32 x i8> %7131, i8 %7135, i32 1
  %7137 = extractelement <32 x i32> %7126, i32 2
  %7138 = sext i32 %7137 to i64
  %7139 = getelementptr inbounds i8, i8* %5883, i64 %7138
  %7140 = load i8, i8* %7139, align 1, !tbaa !394
  %7141 = insertelement <32 x i8> %7136, i8 %7140, i32 2
  %7142 = extractelement <32 x i32> %7126, i32 3
  %7143 = sext i32 %7142 to i64
  %7144 = getelementptr inbounds i8, i8* %5883, i64 %7143
  %7145 = load i8, i8* %7144, align 1, !tbaa !394
  %7146 = insertelement <32 x i8> %7141, i8 %7145, i32 3
  %7147 = extractelement <32 x i32> %7126, i32 4
  %7148 = sext i32 %7147 to i64
  %7149 = getelementptr inbounds i8, i8* %5883, i64 %7148
  %7150 = load i8, i8* %7149, align 1, !tbaa !394
  %7151 = insertelement <32 x i8> %7146, i8 %7150, i32 4
  %7152 = extractelement <32 x i32> %7126, i32 5
  %7153 = sext i32 %7152 to i64
  %7154 = getelementptr inbounds i8, i8* %5883, i64 %7153
  %7155 = load i8, i8* %7154, align 1, !tbaa !394
  %7156 = insertelement <32 x i8> %7151, i8 %7155, i32 5
  %7157 = extractelement <32 x i32> %7126, i32 6
  %7158 = sext i32 %7157 to i64
  %7159 = getelementptr inbounds i8, i8* %5883, i64 %7158
  %7160 = load i8, i8* %7159, align 1, !tbaa !394
  %7161 = insertelement <32 x i8> %7156, i8 %7160, i32 6
  %7162 = extractelement <32 x i32> %7126, i32 7
  %7163 = sext i32 %7162 to i64
  %7164 = getelementptr inbounds i8, i8* %5883, i64 %7163
  %7165 = load i8, i8* %7164, align 1, !tbaa !394
  %7166 = insertelement <32 x i8> %7161, i8 %7165, i32 7
  %7167 = extractelement <32 x i32> %7126, i32 8
  %7168 = sext i32 %7167 to i64
  %7169 = getelementptr inbounds i8, i8* %5883, i64 %7168
  %7170 = load i8, i8* %7169, align 1, !tbaa !394
  %7171 = insertelement <32 x i8> %7166, i8 %7170, i32 8
  %7172 = extractelement <32 x i32> %7126, i32 9
  %7173 = sext i32 %7172 to i64
  %7174 = getelementptr inbounds i8, i8* %5883, i64 %7173
  %7175 = load i8, i8* %7174, align 1, !tbaa !394
  %7176 = insertelement <32 x i8> %7171, i8 %7175, i32 9
  %7177 = extractelement <32 x i32> %7126, i32 10
  %7178 = sext i32 %7177 to i64
  %7179 = getelementptr inbounds i8, i8* %5883, i64 %7178
  %7180 = load i8, i8* %7179, align 1, !tbaa !394
  %7181 = insertelement <32 x i8> %7176, i8 %7180, i32 10
  %7182 = extractelement <32 x i32> %7126, i32 11
  %7183 = sext i32 %7182 to i64
  %7184 = getelementptr inbounds i8, i8* %5883, i64 %7183
  %7185 = load i8, i8* %7184, align 1, !tbaa !394
  %7186 = insertelement <32 x i8> %7181, i8 %7185, i32 11
  %7187 = extractelement <32 x i32> %7126, i32 12
  %7188 = sext i32 %7187 to i64
  %7189 = getelementptr inbounds i8, i8* %5883, i64 %7188
  %7190 = load i8, i8* %7189, align 1, !tbaa !394
  %7191 = insertelement <32 x i8> %7186, i8 %7190, i32 12
  %7192 = extractelement <32 x i32> %7126, i32 13
  %7193 = sext i32 %7192 to i64
  %7194 = getelementptr inbounds i8, i8* %5883, i64 %7193
  %7195 = load i8, i8* %7194, align 1, !tbaa !394
  %7196 = insertelement <32 x i8> %7191, i8 %7195, i32 13
  %7197 = extractelement <32 x i32> %7126, i32 14
  %7198 = sext i32 %7197 to i64
  %7199 = getelementptr inbounds i8, i8* %5883, i64 %7198
  %7200 = load i8, i8* %7199, align 1, !tbaa !394
  %7201 = insertelement <32 x i8> %7196, i8 %7200, i32 14
  %7202 = extractelement <32 x i32> %7126, i32 15
  %7203 = sext i32 %7202 to i64
  %7204 = getelementptr inbounds i8, i8* %5883, i64 %7203
  %7205 = load i8, i8* %7204, align 1, !tbaa !394
  %7206 = insertelement <32 x i8> %7201, i8 %7205, i32 15
  %7207 = extractelement <32 x i32> %7126, i32 16
  %7208 = sext i32 %7207 to i64
  %7209 = getelementptr inbounds i8, i8* %5883, i64 %7208
  %7210 = load i8, i8* %7209, align 1, !tbaa !394
  %7211 = insertelement <32 x i8> %7206, i8 %7210, i32 16
  %7212 = extractelement <32 x i32> %7126, i32 17
  %7213 = sext i32 %7212 to i64
  %7214 = getelementptr inbounds i8, i8* %5883, i64 %7213
  %7215 = load i8, i8* %7214, align 1, !tbaa !394
  %7216 = insertelement <32 x i8> %7211, i8 %7215, i32 17
  %7217 = extractelement <32 x i32> %7126, i32 18
  %7218 = sext i32 %7217 to i64
  %7219 = getelementptr inbounds i8, i8* %5883, i64 %7218
  %7220 = load i8, i8* %7219, align 1, !tbaa !394
  %7221 = insertelement <32 x i8> %7216, i8 %7220, i32 18
  %7222 = extractelement <32 x i32> %7126, i32 19
  %7223 = sext i32 %7222 to i64
  %7224 = getelementptr inbounds i8, i8* %5883, i64 %7223
  %7225 = load i8, i8* %7224, align 1, !tbaa !394
  %7226 = insertelement <32 x i8> %7221, i8 %7225, i32 19
  %7227 = extractelement <32 x i32> %7126, i32 20
  %7228 = sext i32 %7227 to i64
  %7229 = getelementptr inbounds i8, i8* %5883, i64 %7228
  %7230 = load i8, i8* %7229, align 1, !tbaa !394
  %7231 = insertelement <32 x i8> %7226, i8 %7230, i32 20
  %7232 = extractelement <32 x i32> %7126, i32 21
  %7233 = sext i32 %7232 to i64
  %7234 = getelementptr inbounds i8, i8* %5883, i64 %7233
  %7235 = load i8, i8* %7234, align 1, !tbaa !394
  %7236 = insertelement <32 x i8> %7231, i8 %7235, i32 21
  %7237 = extractelement <32 x i32> %7126, i32 22
  %7238 = sext i32 %7237 to i64
  %7239 = getelementptr inbounds i8, i8* %5883, i64 %7238
  %7240 = load i8, i8* %7239, align 1, !tbaa !394
  %7241 = insertelement <32 x i8> %7236, i8 %7240, i32 22
  %7242 = extractelement <32 x i32> %7126, i32 23
  %7243 = sext i32 %7242 to i64
  %7244 = getelementptr inbounds i8, i8* %5883, i64 %7243
  %7245 = load i8, i8* %7244, align 1, !tbaa !394
  %7246 = insertelement <32 x i8> %7241, i8 %7245, i32 23
  %7247 = extractelement <32 x i32> %7126, i32 24
  %7248 = sext i32 %7247 to i64
  %7249 = getelementptr inbounds i8, i8* %5883, i64 %7248
  %7250 = load i8, i8* %7249, align 1, !tbaa !394
  %7251 = insertelement <32 x i8> %7246, i8 %7250, i32 24
  %7252 = extractelement <32 x i32> %7126, i32 25
  %7253 = sext i32 %7252 to i64
  %7254 = getelementptr inbounds i8, i8* %5883, i64 %7253
  %7255 = load i8, i8* %7254, align 1, !tbaa !394
  %7256 = insertelement <32 x i8> %7251, i8 %7255, i32 25
  %7257 = extractelement <32 x i32> %7126, i32 26
  %7258 = sext i32 %7257 to i64
  %7259 = getelementptr inbounds i8, i8* %5883, i64 %7258
  %7260 = load i8, i8* %7259, align 1, !tbaa !394
  %7261 = insertelement <32 x i8> %7256, i8 %7260, i32 26
  %7262 = extractelement <32 x i32> %7126, i32 27
  %7263 = sext i32 %7262 to i64
  %7264 = getelementptr inbounds i8, i8* %5883, i64 %7263
  %7265 = load i8, i8* %7264, align 1, !tbaa !394
  %7266 = insertelement <32 x i8> %7261, i8 %7265, i32 27
  %7267 = extractelement <32 x i32> %7126, i32 28
  %7268 = sext i32 %7267 to i64
  %7269 = getelementptr inbounds i8, i8* %5883, i64 %7268
  %7270 = load i8, i8* %7269, align 1, !tbaa !394
  %7271 = insertelement <32 x i8> %7266, i8 %7270, i32 28
  %7272 = extractelement <32 x i32> %7126, i32 29
  %7273 = sext i32 %7272 to i64
  %7274 = getelementptr inbounds i8, i8* %5883, i64 %7273
  %7275 = load i8, i8* %7274, align 1, !tbaa !394
  %7276 = insertelement <32 x i8> %7271, i8 %7275, i32 29
  %7277 = extractelement <32 x i32> %7126, i32 30
  %7278 = sext i32 %7277 to i64
  %7279 = getelementptr inbounds i8, i8* %5883, i64 %7278
  %7280 = load i8, i8* %7279, align 1, !tbaa !394
  %7281 = insertelement <32 x i8> %7276, i8 %7280, i32 30
  %7282 = extractelement <32 x i32> %7126, i32 31
  %7283 = sext i32 %7282 to i64
  %7284 = getelementptr inbounds i8, i8* %5883, i64 %7283
  %7285 = load i8, i8* %7284, align 1, !tbaa !394
  %7286 = insertelement <32 x i8> %7281, i8 %7285, i32 31
  %7287 = add nsw <32 x i32> %t168129, %t232133
  %7288 = extractelement <32 x i32> %7287, i32 0
  %7289 = sext i32 %7288 to i64
  %7290 = getelementptr inbounds i8, i8* %5883, i64 %7289
  %7291 = load i8, i8* %7290, align 1, !tbaa !394
  %7292 = insertelement <32 x i8> undef, i8 %7291, i32 0
  %7293 = extractelement <32 x i32> %7287, i32 1
  %7294 = sext i32 %7293 to i64
  %7295 = getelementptr inbounds i8, i8* %5883, i64 %7294
  %7296 = load i8, i8* %7295, align 1, !tbaa !394
  %7297 = insertelement <32 x i8> %7292, i8 %7296, i32 1
  %7298 = extractelement <32 x i32> %7287, i32 2
  %7299 = sext i32 %7298 to i64
  %7300 = getelementptr inbounds i8, i8* %5883, i64 %7299
  %7301 = load i8, i8* %7300, align 1, !tbaa !394
  %7302 = insertelement <32 x i8> %7297, i8 %7301, i32 2
  %7303 = extractelement <32 x i32> %7287, i32 3
  %7304 = sext i32 %7303 to i64
  %7305 = getelementptr inbounds i8, i8* %5883, i64 %7304
  %7306 = load i8, i8* %7305, align 1, !tbaa !394
  %7307 = insertelement <32 x i8> %7302, i8 %7306, i32 3
  %7308 = extractelement <32 x i32> %7287, i32 4
  %7309 = sext i32 %7308 to i64
  %7310 = getelementptr inbounds i8, i8* %5883, i64 %7309
  %7311 = load i8, i8* %7310, align 1, !tbaa !394
  %7312 = insertelement <32 x i8> %7307, i8 %7311, i32 4
  %7313 = extractelement <32 x i32> %7287, i32 5
  %7314 = sext i32 %7313 to i64
  %7315 = getelementptr inbounds i8, i8* %5883, i64 %7314
  %7316 = load i8, i8* %7315, align 1, !tbaa !394
  %7317 = insertelement <32 x i8> %7312, i8 %7316, i32 5
  %7318 = extractelement <32 x i32> %7287, i32 6
  %7319 = sext i32 %7318 to i64
  %7320 = getelementptr inbounds i8, i8* %5883, i64 %7319
  %7321 = load i8, i8* %7320, align 1, !tbaa !394
  %7322 = insertelement <32 x i8> %7317, i8 %7321, i32 6
  %7323 = extractelement <32 x i32> %7287, i32 7
  %7324 = sext i32 %7323 to i64
  %7325 = getelementptr inbounds i8, i8* %5883, i64 %7324
  %7326 = load i8, i8* %7325, align 1, !tbaa !394
  %7327 = insertelement <32 x i8> %7322, i8 %7326, i32 7
  %7328 = extractelement <32 x i32> %7287, i32 8
  %7329 = sext i32 %7328 to i64
  %7330 = getelementptr inbounds i8, i8* %5883, i64 %7329
  %7331 = load i8, i8* %7330, align 1, !tbaa !394
  %7332 = insertelement <32 x i8> %7327, i8 %7331, i32 8
  %7333 = extractelement <32 x i32> %7287, i32 9
  %7334 = sext i32 %7333 to i64
  %7335 = getelementptr inbounds i8, i8* %5883, i64 %7334
  %7336 = load i8, i8* %7335, align 1, !tbaa !394
  %7337 = insertelement <32 x i8> %7332, i8 %7336, i32 9
  %7338 = extractelement <32 x i32> %7287, i32 10
  %7339 = sext i32 %7338 to i64
  %7340 = getelementptr inbounds i8, i8* %5883, i64 %7339
  %7341 = load i8, i8* %7340, align 1, !tbaa !394
  %7342 = insertelement <32 x i8> %7337, i8 %7341, i32 10
  %7343 = extractelement <32 x i32> %7287, i32 11
  %7344 = sext i32 %7343 to i64
  %7345 = getelementptr inbounds i8, i8* %5883, i64 %7344
  %7346 = load i8, i8* %7345, align 1, !tbaa !394
  %7347 = insertelement <32 x i8> %7342, i8 %7346, i32 11
  %7348 = extractelement <32 x i32> %7287, i32 12
  %7349 = sext i32 %7348 to i64
  %7350 = getelementptr inbounds i8, i8* %5883, i64 %7349
  %7351 = load i8, i8* %7350, align 1, !tbaa !394
  %7352 = insertelement <32 x i8> %7347, i8 %7351, i32 12
  %7353 = extractelement <32 x i32> %7287, i32 13
  %7354 = sext i32 %7353 to i64
  %7355 = getelementptr inbounds i8, i8* %5883, i64 %7354
  %7356 = load i8, i8* %7355, align 1, !tbaa !394
  %7357 = insertelement <32 x i8> %7352, i8 %7356, i32 13
  %7358 = extractelement <32 x i32> %7287, i32 14
  %7359 = sext i32 %7358 to i64
  %7360 = getelementptr inbounds i8, i8* %5883, i64 %7359
  %7361 = load i8, i8* %7360, align 1, !tbaa !394
  %7362 = insertelement <32 x i8> %7357, i8 %7361, i32 14
  %7363 = extractelement <32 x i32> %7287, i32 15
  %7364 = sext i32 %7363 to i64
  %7365 = getelementptr inbounds i8, i8* %5883, i64 %7364
  %7366 = load i8, i8* %7365, align 1, !tbaa !394
  %7367 = insertelement <32 x i8> %7362, i8 %7366, i32 15
  %7368 = extractelement <32 x i32> %7287, i32 16
  %7369 = sext i32 %7368 to i64
  %7370 = getelementptr inbounds i8, i8* %5883, i64 %7369
  %7371 = load i8, i8* %7370, align 1, !tbaa !394
  %7372 = insertelement <32 x i8> %7367, i8 %7371, i32 16
  %7373 = extractelement <32 x i32> %7287, i32 17
  %7374 = sext i32 %7373 to i64
  %7375 = getelementptr inbounds i8, i8* %5883, i64 %7374
  %7376 = load i8, i8* %7375, align 1, !tbaa !394
  %7377 = insertelement <32 x i8> %7372, i8 %7376, i32 17
  %7378 = extractelement <32 x i32> %7287, i32 18
  %7379 = sext i32 %7378 to i64
  %7380 = getelementptr inbounds i8, i8* %5883, i64 %7379
  %7381 = load i8, i8* %7380, align 1, !tbaa !394
  %7382 = insertelement <32 x i8> %7377, i8 %7381, i32 18
  %7383 = extractelement <32 x i32> %7287, i32 19
  %7384 = sext i32 %7383 to i64
  %7385 = getelementptr inbounds i8, i8* %5883, i64 %7384
  %7386 = load i8, i8* %7385, align 1, !tbaa !394
  %7387 = insertelement <32 x i8> %7382, i8 %7386, i32 19
  %7388 = extractelement <32 x i32> %7287, i32 20
  %7389 = sext i32 %7388 to i64
  %7390 = getelementptr inbounds i8, i8* %5883, i64 %7389
  %7391 = load i8, i8* %7390, align 1, !tbaa !394
  %7392 = insertelement <32 x i8> %7387, i8 %7391, i32 20
  %7393 = extractelement <32 x i32> %7287, i32 21
  %7394 = sext i32 %7393 to i64
  %7395 = getelementptr inbounds i8, i8* %5883, i64 %7394
  %7396 = load i8, i8* %7395, align 1, !tbaa !394
  %7397 = insertelement <32 x i8> %7392, i8 %7396, i32 21
  %7398 = extractelement <32 x i32> %7287, i32 22
  %7399 = sext i32 %7398 to i64
  %7400 = getelementptr inbounds i8, i8* %5883, i64 %7399
  %7401 = load i8, i8* %7400, align 1, !tbaa !394
  %7402 = insertelement <32 x i8> %7397, i8 %7401, i32 22
  %7403 = extractelement <32 x i32> %7287, i32 23
  %7404 = sext i32 %7403 to i64
  %7405 = getelementptr inbounds i8, i8* %5883, i64 %7404
  %7406 = load i8, i8* %7405, align 1, !tbaa !394
  %7407 = insertelement <32 x i8> %7402, i8 %7406, i32 23
  %7408 = extractelement <32 x i32> %7287, i32 24
  %7409 = sext i32 %7408 to i64
  %7410 = getelementptr inbounds i8, i8* %5883, i64 %7409
  %7411 = load i8, i8* %7410, align 1, !tbaa !394
  %7412 = insertelement <32 x i8> %7407, i8 %7411, i32 24
  %7413 = extractelement <32 x i32> %7287, i32 25
  %7414 = sext i32 %7413 to i64
  %7415 = getelementptr inbounds i8, i8* %5883, i64 %7414
  %7416 = load i8, i8* %7415, align 1, !tbaa !394
  %7417 = insertelement <32 x i8> %7412, i8 %7416, i32 25
  %7418 = extractelement <32 x i32> %7287, i32 26
  %7419 = sext i32 %7418 to i64
  %7420 = getelementptr inbounds i8, i8* %5883, i64 %7419
  %7421 = load i8, i8* %7420, align 1, !tbaa !394
  %7422 = insertelement <32 x i8> %7417, i8 %7421, i32 26
  %7423 = extractelement <32 x i32> %7287, i32 27
  %7424 = sext i32 %7423 to i64
  %7425 = getelementptr inbounds i8, i8* %5883, i64 %7424
  %7426 = load i8, i8* %7425, align 1, !tbaa !394
  %7427 = insertelement <32 x i8> %7422, i8 %7426, i32 27
  %7428 = extractelement <32 x i32> %7287, i32 28
  %7429 = sext i32 %7428 to i64
  %7430 = getelementptr inbounds i8, i8* %5883, i64 %7429
  %7431 = load i8, i8* %7430, align 1, !tbaa !394
  %7432 = insertelement <32 x i8> %7427, i8 %7431, i32 28
  %7433 = extractelement <32 x i32> %7287, i32 29
  %7434 = sext i32 %7433 to i64
  %7435 = getelementptr inbounds i8, i8* %5883, i64 %7434
  %7436 = load i8, i8* %7435, align 1, !tbaa !394
  %7437 = insertelement <32 x i8> %7432, i8 %7436, i32 29
  %7438 = extractelement <32 x i32> %7287, i32 30
  %7439 = sext i32 %7438 to i64
  %7440 = getelementptr inbounds i8, i8* %5883, i64 %7439
  %7441 = load i8, i8* %7440, align 1, !tbaa !394
  %7442 = insertelement <32 x i8> %7437, i8 %7441, i32 30
  %7443 = extractelement <32 x i32> %7287, i32 31
  %7444 = sext i32 %7443 to i64
  %7445 = getelementptr inbounds i8, i8* %5883, i64 %7444
  %7446 = load i8, i8* %7445, align 1, !tbaa !394
  %7447 = insertelement <32 x i8> %7442, i8 %7446, i32 31
  %7448 = tail call <32 x i8> @hydride.node.0(<32 x i8> %6964, <32 x i8> %t167.s128, <32 x i8> %t169.s130, <32 x i8> %7125, <32 x i8> %t171.s131, <32 x i8> %t172.s132, <32 x i8> %6964, <32 x i8> %7125, <32 x i8> %7286, <32 x i8> %7447) #10
  %7449 = sext i32 %output.s0.x.v0.base.s125 to i64
  %7450 = add nsw i64 %7449, %6103
  %7451 = getelementptr inbounds i8, i8* %5896, i64 %7450
  %7452 = bitcast i8* %7451 to <32 x i8>*
  store <32 x i8> %7448, <32 x i8>* %7452, align 1, !tbaa !397
  %7453 = add nuw nsw i32 %output.s0.x.x124, 1
  %.not248 = icmp eq i32 %7453, %t240113
  br i1 %.not248, label %"end for output.s0.x.x123", label %"for output.s0.x.x122"

"end for output.s0.x.x123":                       ; preds = %"for output.s0.x.x122", %"for output.s0.y.rebased118"
  %indvars.iv.next474 = add nuw nsw i64 %indvars.iv473, 1
  %7454 = add nuw nsw i32 %output.s0.y.rebased120, 1
  %7455 = icmp eq i64 %indvars.iv.next474, %zext
  br i1 %7455, label %"end for output.s0.y.rebased119", label %"for output.s0.y.rebased118"

"for output.s0.y.rebased139":                     ; preds = %"for output.s0.y.rebased139.preheader", %"end for output.s0.x.x.rebased181"
  %indvars.iv479 = phi i64 [ 0, %"for output.s0.y.rebased139.preheader" ], [ %indvars.iv.next480, %"end for output.s0.x.x.rebased181" ]
  %output.s0.y.rebased141 = phi i32 [ 0, %"for output.s0.y.rebased139.preheader" ], [ %10180, %"end for output.s0.x.x.rebased181" ]
  %t265142 = add nsw i32 %output.s0.y.rebased141, %t253136
  %7456 = add nsw i32 %t265142, 1
  %7457 = mul nsw i32 %7456, %5895
  %t262143 = sub nsw i32 %7457, %5890
  %7458 = add nsw i32 %t265142, -1
  %7459 = mul nsw i32 %7458, %5895
  %t261144 = sub nsw i32 %7459, %5890
  %7460 = trunc i64 %indvars.iv479 to i32
  %7461 = add i32 %output.s0.y.prologue111, %7460
  %7462 = mul i32 %7461, %5908
  %t264145 = sub i32 %7462, %6074
  br i1 %6116, label %"for output.s0.x.x146.preheader", label %"for output.s0.y.rebased139.end for output.s0.x.x147_crit_edge", !prof !393

"for output.s0.y.rebased139.end for output.s0.x.x147_crit_edge": ; preds = %"for output.s0.y.rebased139"
  %.pre489 = mul nsw i32 %t265142, %5895
  br label %"end for output.s0.x.x147"

"for output.s0.x.x146.preheader":                 ; preds = %"for output.s0.y.rebased139"
  %7463 = insertelement <32 x i32> undef, i32 %t261144, i32 0
  %7464 = shufflevector <32 x i32> %7463, <32 x i32> undef, <32 x i32> zeroinitializer
  %7465 = insertelement <32 x i32> undef, i32 %t262143, i32 0
  %7466 = shufflevector <32 x i32> %7465, <32 x i32> undef, <32 x i32> zeroinitializer
  %7467 = mul nsw i32 %t265142, %5895
  %7468 = sub nsw i32 %7467, %5890
  %7469 = insertelement <32 x i32> undef, i32 %7468, i32 0
  %t235157 = shufflevector <32 x i32> %7469, <32 x i32> undef, <32 x i32> zeroinitializer
  %7470 = sext i32 %t264145 to i64
  br label %"for output.s0.x.x146"

"end for output.s0.y.rebased140":                 ; preds = %"end for output.s0.x.x.rebased181", %"end for output.s0.y.rebased119"
  %t279193 = sub nsw i32 %a127, %output.s0.y.epilogue112
  %t282194 = sub nsw i32 %output.s0.y.epilogue112, %5893
  %7471 = icmp sgt i32 %t279193, 0
  br i1 %7471, label %"for output.s0.y.rebased197.preheader", label %destructor_block, !prof !393

"for output.s0.y.rebased197.preheader":           ; preds = %"end for output.s0.y.rebased140"
  %a181 = add nsw i32 %5894, -1
  %7472 = icmp sgt i32 %5904, 0
  %7473 = insertelement <32 x i32> undef, i32 %b108, i32 0
  %7474 = shufflevector <32 x i32> %7473, <32 x i32> undef, <16 x i32> zeroinitializer
  %7475 = insertelement <32 x i32> undef, i32 %5890, i32 0
  %7476 = shufflevector <32 x i32> %7475, <32 x i32> undef, <16 x i32> zeroinitializer
  %zext486 = zext i32 %t279193 to i64
  br label %"for output.s0.y.rebased197"

"for output.s0.x.x146":                           ; preds = %"for output.s0.x.x146.preheader", %"for output.s0.x.x146"
  %output.s0.x.x148 = phi i32 [ %8806, %"for output.s0.x.x146" ], [ 0, %"for output.s0.x.x146.preheader" ]
  %a166 = shl nsw i32 %output.s0.x.x148, 5
  %7477 = icmp sgt i32 %a164.pre-phi, %a166
  %output.s0.x.v0.base.s149 = select i1 %7477, i32 %a166, i32 %a164.pre-phi
  %7478 = add nsw i32 %output.s0.x.v0.base.s149, %5903
  %7479 = insertelement <32 x i32> undef, i32 %7478, i32 0
  %7480 = shufflevector <32 x i32> %7479, <32 x i32> undef, <32 x i32> zeroinitializer
  %a168 = add nsw <32 x i32> %7480, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7481 = shufflevector <32 x i32> %a168, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %7482 = icmp sgt <16 x i32> %6118, %7481
  %7483 = shufflevector <32 x i32> %a168, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7484 = icmp sgt <16 x i32> %6118, %7483
  %7485 = select <16 x i1> %7482, <16 x i32> %7481, <16 x i32> %6118
  %7486 = select <16 x i1> %7484, <16 x i32> %7483, <16 x i32> %6118
  %7487 = icmp sgt <16 x i32> %7485, %6120
  %7488 = icmp sgt <16 x i32> %7486, %6120
  %7489 = select <16 x i1> %7487, <16 x i32> %7485, <16 x i32> %6120
  %7490 = select <16 x i1> %7488, <16 x i32> %7486, <16 x i32> %6120
  %t177150 = shufflevector <16 x i32> %7489, <16 x i32> %7490, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7491 = add nsw i32 %7478, -1
  %7492 = insertelement <32 x i32> undef, i32 %7491, i32 0
  %7493 = shufflevector <32 x i32> %7492, <32 x i32> undef, <32 x i32> zeroinitializer
  %a170 = add nsw <32 x i32> %7493, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7494 = shufflevector <32 x i32> %a170, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %7495 = icmp sgt <16 x i32> %6118, %7494
  %7496 = shufflevector <32 x i32> %a170, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7497 = icmp sgt <16 x i32> %6118, %7496
  %7498 = select <16 x i1> %7495, <16 x i32> %7494, <16 x i32> %6118
  %7499 = select <16 x i1> %7497, <16 x i32> %7496, <16 x i32> %6118
  %7500 = icmp sgt <16 x i32> %7498, %6120
  %7501 = icmp sgt <16 x i32> %7499, %6120
  %7502 = select <16 x i1> %7500, <16 x i32> %7498, <16 x i32> %6120
  %7503 = select <16 x i1> %7501, <16 x i32> %7499, <16 x i32> %6120
  %t180151 = shufflevector <16 x i32> %7502, <16 x i32> %7503, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7504 = add nsw <32 x i32> %t180151, %7464
  %7505 = extractelement <32 x i32> %7504, i32 0
  %7506 = sext i32 %7505 to i64
  %7507 = getelementptr inbounds i8, i8* %5883, i64 %7506
  %7508 = load i8, i8* %7507, align 1, !tbaa !394
  %7509 = insertelement <32 x i8> undef, i8 %7508, i32 0
  %7510 = extractelement <32 x i32> %7504, i32 1
  %7511 = sext i32 %7510 to i64
  %7512 = getelementptr inbounds i8, i8* %5883, i64 %7511
  %7513 = load i8, i8* %7512, align 1, !tbaa !394
  %7514 = insertelement <32 x i8> %7509, i8 %7513, i32 1
  %7515 = extractelement <32 x i32> %7504, i32 2
  %7516 = sext i32 %7515 to i64
  %7517 = getelementptr inbounds i8, i8* %5883, i64 %7516
  %7518 = load i8, i8* %7517, align 1, !tbaa !394
  %7519 = insertelement <32 x i8> %7514, i8 %7518, i32 2
  %7520 = extractelement <32 x i32> %7504, i32 3
  %7521 = sext i32 %7520 to i64
  %7522 = getelementptr inbounds i8, i8* %5883, i64 %7521
  %7523 = load i8, i8* %7522, align 1, !tbaa !394
  %7524 = insertelement <32 x i8> %7519, i8 %7523, i32 3
  %7525 = extractelement <32 x i32> %7504, i32 4
  %7526 = sext i32 %7525 to i64
  %7527 = getelementptr inbounds i8, i8* %5883, i64 %7526
  %7528 = load i8, i8* %7527, align 1, !tbaa !394
  %7529 = insertelement <32 x i8> %7524, i8 %7528, i32 4
  %7530 = extractelement <32 x i32> %7504, i32 5
  %7531 = sext i32 %7530 to i64
  %7532 = getelementptr inbounds i8, i8* %5883, i64 %7531
  %7533 = load i8, i8* %7532, align 1, !tbaa !394
  %7534 = insertelement <32 x i8> %7529, i8 %7533, i32 5
  %7535 = extractelement <32 x i32> %7504, i32 6
  %7536 = sext i32 %7535 to i64
  %7537 = getelementptr inbounds i8, i8* %5883, i64 %7536
  %7538 = load i8, i8* %7537, align 1, !tbaa !394
  %7539 = insertelement <32 x i8> %7534, i8 %7538, i32 6
  %7540 = extractelement <32 x i32> %7504, i32 7
  %7541 = sext i32 %7540 to i64
  %7542 = getelementptr inbounds i8, i8* %5883, i64 %7541
  %7543 = load i8, i8* %7542, align 1, !tbaa !394
  %7544 = insertelement <32 x i8> %7539, i8 %7543, i32 7
  %7545 = extractelement <32 x i32> %7504, i32 8
  %7546 = sext i32 %7545 to i64
  %7547 = getelementptr inbounds i8, i8* %5883, i64 %7546
  %7548 = load i8, i8* %7547, align 1, !tbaa !394
  %7549 = insertelement <32 x i8> %7544, i8 %7548, i32 8
  %7550 = extractelement <32 x i32> %7504, i32 9
  %7551 = sext i32 %7550 to i64
  %7552 = getelementptr inbounds i8, i8* %5883, i64 %7551
  %7553 = load i8, i8* %7552, align 1, !tbaa !394
  %7554 = insertelement <32 x i8> %7549, i8 %7553, i32 9
  %7555 = extractelement <32 x i32> %7504, i32 10
  %7556 = sext i32 %7555 to i64
  %7557 = getelementptr inbounds i8, i8* %5883, i64 %7556
  %7558 = load i8, i8* %7557, align 1, !tbaa !394
  %7559 = insertelement <32 x i8> %7554, i8 %7558, i32 10
  %7560 = extractelement <32 x i32> %7504, i32 11
  %7561 = sext i32 %7560 to i64
  %7562 = getelementptr inbounds i8, i8* %5883, i64 %7561
  %7563 = load i8, i8* %7562, align 1, !tbaa !394
  %7564 = insertelement <32 x i8> %7559, i8 %7563, i32 11
  %7565 = extractelement <32 x i32> %7504, i32 12
  %7566 = sext i32 %7565 to i64
  %7567 = getelementptr inbounds i8, i8* %5883, i64 %7566
  %7568 = load i8, i8* %7567, align 1, !tbaa !394
  %7569 = insertelement <32 x i8> %7564, i8 %7568, i32 12
  %7570 = extractelement <32 x i32> %7504, i32 13
  %7571 = sext i32 %7570 to i64
  %7572 = getelementptr inbounds i8, i8* %5883, i64 %7571
  %7573 = load i8, i8* %7572, align 1, !tbaa !394
  %7574 = insertelement <32 x i8> %7569, i8 %7573, i32 13
  %7575 = extractelement <32 x i32> %7504, i32 14
  %7576 = sext i32 %7575 to i64
  %7577 = getelementptr inbounds i8, i8* %5883, i64 %7576
  %7578 = load i8, i8* %7577, align 1, !tbaa !394
  %7579 = insertelement <32 x i8> %7574, i8 %7578, i32 14
  %7580 = extractelement <32 x i32> %7504, i32 15
  %7581 = sext i32 %7580 to i64
  %7582 = getelementptr inbounds i8, i8* %5883, i64 %7581
  %7583 = load i8, i8* %7582, align 1, !tbaa !394
  %7584 = insertelement <32 x i8> %7579, i8 %7583, i32 15
  %7585 = extractelement <32 x i32> %7504, i32 16
  %7586 = sext i32 %7585 to i64
  %7587 = getelementptr inbounds i8, i8* %5883, i64 %7586
  %7588 = load i8, i8* %7587, align 1, !tbaa !394
  %7589 = insertelement <32 x i8> %7584, i8 %7588, i32 16
  %7590 = extractelement <32 x i32> %7504, i32 17
  %7591 = sext i32 %7590 to i64
  %7592 = getelementptr inbounds i8, i8* %5883, i64 %7591
  %7593 = load i8, i8* %7592, align 1, !tbaa !394
  %7594 = insertelement <32 x i8> %7589, i8 %7593, i32 17
  %7595 = extractelement <32 x i32> %7504, i32 18
  %7596 = sext i32 %7595 to i64
  %7597 = getelementptr inbounds i8, i8* %5883, i64 %7596
  %7598 = load i8, i8* %7597, align 1, !tbaa !394
  %7599 = insertelement <32 x i8> %7594, i8 %7598, i32 18
  %7600 = extractelement <32 x i32> %7504, i32 19
  %7601 = sext i32 %7600 to i64
  %7602 = getelementptr inbounds i8, i8* %5883, i64 %7601
  %7603 = load i8, i8* %7602, align 1, !tbaa !394
  %7604 = insertelement <32 x i8> %7599, i8 %7603, i32 19
  %7605 = extractelement <32 x i32> %7504, i32 20
  %7606 = sext i32 %7605 to i64
  %7607 = getelementptr inbounds i8, i8* %5883, i64 %7606
  %7608 = load i8, i8* %7607, align 1, !tbaa !394
  %7609 = insertelement <32 x i8> %7604, i8 %7608, i32 20
  %7610 = extractelement <32 x i32> %7504, i32 21
  %7611 = sext i32 %7610 to i64
  %7612 = getelementptr inbounds i8, i8* %5883, i64 %7611
  %7613 = load i8, i8* %7612, align 1, !tbaa !394
  %7614 = insertelement <32 x i8> %7609, i8 %7613, i32 21
  %7615 = extractelement <32 x i32> %7504, i32 22
  %7616 = sext i32 %7615 to i64
  %7617 = getelementptr inbounds i8, i8* %5883, i64 %7616
  %7618 = load i8, i8* %7617, align 1, !tbaa !394
  %7619 = insertelement <32 x i8> %7614, i8 %7618, i32 22
  %7620 = extractelement <32 x i32> %7504, i32 23
  %7621 = sext i32 %7620 to i64
  %7622 = getelementptr inbounds i8, i8* %5883, i64 %7621
  %7623 = load i8, i8* %7622, align 1, !tbaa !394
  %7624 = insertelement <32 x i8> %7619, i8 %7623, i32 23
  %7625 = extractelement <32 x i32> %7504, i32 24
  %7626 = sext i32 %7625 to i64
  %7627 = getelementptr inbounds i8, i8* %5883, i64 %7626
  %7628 = load i8, i8* %7627, align 1, !tbaa !394
  %7629 = insertelement <32 x i8> %7624, i8 %7628, i32 24
  %7630 = extractelement <32 x i32> %7504, i32 25
  %7631 = sext i32 %7630 to i64
  %7632 = getelementptr inbounds i8, i8* %5883, i64 %7631
  %7633 = load i8, i8* %7632, align 1, !tbaa !394
  %7634 = insertelement <32 x i8> %7629, i8 %7633, i32 25
  %7635 = extractelement <32 x i32> %7504, i32 26
  %7636 = sext i32 %7635 to i64
  %7637 = getelementptr inbounds i8, i8* %5883, i64 %7636
  %7638 = load i8, i8* %7637, align 1, !tbaa !394
  %7639 = insertelement <32 x i8> %7634, i8 %7638, i32 26
  %7640 = extractelement <32 x i32> %7504, i32 27
  %7641 = sext i32 %7640 to i64
  %7642 = getelementptr inbounds i8, i8* %5883, i64 %7641
  %7643 = load i8, i8* %7642, align 1, !tbaa !394
  %7644 = insertelement <32 x i8> %7639, i8 %7643, i32 27
  %7645 = extractelement <32 x i32> %7504, i32 28
  %7646 = sext i32 %7645 to i64
  %7647 = getelementptr inbounds i8, i8* %5883, i64 %7646
  %7648 = load i8, i8* %7647, align 1, !tbaa !394
  %7649 = insertelement <32 x i8> %7644, i8 %7648, i32 28
  %7650 = extractelement <32 x i32> %7504, i32 29
  %7651 = sext i32 %7650 to i64
  %7652 = getelementptr inbounds i8, i8* %5883, i64 %7651
  %7653 = load i8, i8* %7652, align 1, !tbaa !394
  %7654 = insertelement <32 x i8> %7649, i8 %7653, i32 29
  %7655 = extractelement <32 x i32> %7504, i32 30
  %7656 = sext i32 %7655 to i64
  %7657 = getelementptr inbounds i8, i8* %5883, i64 %7656
  %7658 = load i8, i8* %7657, align 1, !tbaa !394
  %7659 = insertelement <32 x i8> %7654, i8 %7658, i32 30
  %7660 = extractelement <32 x i32> %7504, i32 31
  %7661 = sext i32 %7660 to i64
  %7662 = getelementptr inbounds i8, i8* %5883, i64 %7661
  %7663 = load i8, i8* %7662, align 1, !tbaa !394
  %t181.s152 = insertelement <32 x i8> %7659, i8 %7663, i32 31
  %7664 = add nsw i32 %7478, 1
  %7665 = insertelement <32 x i32> undef, i32 %7664, i32 0
  %7666 = shufflevector <32 x i32> %7665, <32 x i32> undef, <32 x i32> zeroinitializer
  %a172 = add nsw <32 x i32> %7666, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7667 = shufflevector <32 x i32> %a172, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %7668 = icmp sgt <16 x i32> %6118, %7667
  %7669 = shufflevector <32 x i32> %a172, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7670 = icmp sgt <16 x i32> %6118, %7669
  %7671 = select <16 x i1> %7668, <16 x i32> %7667, <16 x i32> %6118
  %7672 = select <16 x i1> %7670, <16 x i32> %7669, <16 x i32> %6118
  %7673 = icmp sgt <16 x i32> %7671, %6120
  %7674 = icmp sgt <16 x i32> %7672, %6120
  %7675 = select <16 x i1> %7673, <16 x i32> %7671, <16 x i32> %6120
  %7676 = select <16 x i1> %7674, <16 x i32> %7672, <16 x i32> %6120
  %t182153 = shufflevector <16 x i32> %7675, <16 x i32> %7676, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7677 = add nsw <32 x i32> %t182153, %7464
  %7678 = extractelement <32 x i32> %7677, i32 0
  %7679 = sext i32 %7678 to i64
  %7680 = getelementptr inbounds i8, i8* %5883, i64 %7679
  %7681 = load i8, i8* %7680, align 1, !tbaa !394
  %7682 = insertelement <32 x i8> undef, i8 %7681, i32 0
  %7683 = extractelement <32 x i32> %7677, i32 1
  %7684 = sext i32 %7683 to i64
  %7685 = getelementptr inbounds i8, i8* %5883, i64 %7684
  %7686 = load i8, i8* %7685, align 1, !tbaa !394
  %7687 = insertelement <32 x i8> %7682, i8 %7686, i32 1
  %7688 = extractelement <32 x i32> %7677, i32 2
  %7689 = sext i32 %7688 to i64
  %7690 = getelementptr inbounds i8, i8* %5883, i64 %7689
  %7691 = load i8, i8* %7690, align 1, !tbaa !394
  %7692 = insertelement <32 x i8> %7687, i8 %7691, i32 2
  %7693 = extractelement <32 x i32> %7677, i32 3
  %7694 = sext i32 %7693 to i64
  %7695 = getelementptr inbounds i8, i8* %5883, i64 %7694
  %7696 = load i8, i8* %7695, align 1, !tbaa !394
  %7697 = insertelement <32 x i8> %7692, i8 %7696, i32 3
  %7698 = extractelement <32 x i32> %7677, i32 4
  %7699 = sext i32 %7698 to i64
  %7700 = getelementptr inbounds i8, i8* %5883, i64 %7699
  %7701 = load i8, i8* %7700, align 1, !tbaa !394
  %7702 = insertelement <32 x i8> %7697, i8 %7701, i32 4
  %7703 = extractelement <32 x i32> %7677, i32 5
  %7704 = sext i32 %7703 to i64
  %7705 = getelementptr inbounds i8, i8* %5883, i64 %7704
  %7706 = load i8, i8* %7705, align 1, !tbaa !394
  %7707 = insertelement <32 x i8> %7702, i8 %7706, i32 5
  %7708 = extractelement <32 x i32> %7677, i32 6
  %7709 = sext i32 %7708 to i64
  %7710 = getelementptr inbounds i8, i8* %5883, i64 %7709
  %7711 = load i8, i8* %7710, align 1, !tbaa !394
  %7712 = insertelement <32 x i8> %7707, i8 %7711, i32 6
  %7713 = extractelement <32 x i32> %7677, i32 7
  %7714 = sext i32 %7713 to i64
  %7715 = getelementptr inbounds i8, i8* %5883, i64 %7714
  %7716 = load i8, i8* %7715, align 1, !tbaa !394
  %7717 = insertelement <32 x i8> %7712, i8 %7716, i32 7
  %7718 = extractelement <32 x i32> %7677, i32 8
  %7719 = sext i32 %7718 to i64
  %7720 = getelementptr inbounds i8, i8* %5883, i64 %7719
  %7721 = load i8, i8* %7720, align 1, !tbaa !394
  %7722 = insertelement <32 x i8> %7717, i8 %7721, i32 8
  %7723 = extractelement <32 x i32> %7677, i32 9
  %7724 = sext i32 %7723 to i64
  %7725 = getelementptr inbounds i8, i8* %5883, i64 %7724
  %7726 = load i8, i8* %7725, align 1, !tbaa !394
  %7727 = insertelement <32 x i8> %7722, i8 %7726, i32 9
  %7728 = extractelement <32 x i32> %7677, i32 10
  %7729 = sext i32 %7728 to i64
  %7730 = getelementptr inbounds i8, i8* %5883, i64 %7729
  %7731 = load i8, i8* %7730, align 1, !tbaa !394
  %7732 = insertelement <32 x i8> %7727, i8 %7731, i32 10
  %7733 = extractelement <32 x i32> %7677, i32 11
  %7734 = sext i32 %7733 to i64
  %7735 = getelementptr inbounds i8, i8* %5883, i64 %7734
  %7736 = load i8, i8* %7735, align 1, !tbaa !394
  %7737 = insertelement <32 x i8> %7732, i8 %7736, i32 11
  %7738 = extractelement <32 x i32> %7677, i32 12
  %7739 = sext i32 %7738 to i64
  %7740 = getelementptr inbounds i8, i8* %5883, i64 %7739
  %7741 = load i8, i8* %7740, align 1, !tbaa !394
  %7742 = insertelement <32 x i8> %7737, i8 %7741, i32 12
  %7743 = extractelement <32 x i32> %7677, i32 13
  %7744 = sext i32 %7743 to i64
  %7745 = getelementptr inbounds i8, i8* %5883, i64 %7744
  %7746 = load i8, i8* %7745, align 1, !tbaa !394
  %7747 = insertelement <32 x i8> %7742, i8 %7746, i32 13
  %7748 = extractelement <32 x i32> %7677, i32 14
  %7749 = sext i32 %7748 to i64
  %7750 = getelementptr inbounds i8, i8* %5883, i64 %7749
  %7751 = load i8, i8* %7750, align 1, !tbaa !394
  %7752 = insertelement <32 x i8> %7747, i8 %7751, i32 14
  %7753 = extractelement <32 x i32> %7677, i32 15
  %7754 = sext i32 %7753 to i64
  %7755 = getelementptr inbounds i8, i8* %5883, i64 %7754
  %7756 = load i8, i8* %7755, align 1, !tbaa !394
  %7757 = insertelement <32 x i8> %7752, i8 %7756, i32 15
  %7758 = extractelement <32 x i32> %7677, i32 16
  %7759 = sext i32 %7758 to i64
  %7760 = getelementptr inbounds i8, i8* %5883, i64 %7759
  %7761 = load i8, i8* %7760, align 1, !tbaa !394
  %7762 = insertelement <32 x i8> %7757, i8 %7761, i32 16
  %7763 = extractelement <32 x i32> %7677, i32 17
  %7764 = sext i32 %7763 to i64
  %7765 = getelementptr inbounds i8, i8* %5883, i64 %7764
  %7766 = load i8, i8* %7765, align 1, !tbaa !394
  %7767 = insertelement <32 x i8> %7762, i8 %7766, i32 17
  %7768 = extractelement <32 x i32> %7677, i32 18
  %7769 = sext i32 %7768 to i64
  %7770 = getelementptr inbounds i8, i8* %5883, i64 %7769
  %7771 = load i8, i8* %7770, align 1, !tbaa !394
  %7772 = insertelement <32 x i8> %7767, i8 %7771, i32 18
  %7773 = extractelement <32 x i32> %7677, i32 19
  %7774 = sext i32 %7773 to i64
  %7775 = getelementptr inbounds i8, i8* %5883, i64 %7774
  %7776 = load i8, i8* %7775, align 1, !tbaa !394
  %7777 = insertelement <32 x i8> %7772, i8 %7776, i32 19
  %7778 = extractelement <32 x i32> %7677, i32 20
  %7779 = sext i32 %7778 to i64
  %7780 = getelementptr inbounds i8, i8* %5883, i64 %7779
  %7781 = load i8, i8* %7780, align 1, !tbaa !394
  %7782 = insertelement <32 x i8> %7777, i8 %7781, i32 20
  %7783 = extractelement <32 x i32> %7677, i32 21
  %7784 = sext i32 %7783 to i64
  %7785 = getelementptr inbounds i8, i8* %5883, i64 %7784
  %7786 = load i8, i8* %7785, align 1, !tbaa !394
  %7787 = insertelement <32 x i8> %7782, i8 %7786, i32 21
  %7788 = extractelement <32 x i32> %7677, i32 22
  %7789 = sext i32 %7788 to i64
  %7790 = getelementptr inbounds i8, i8* %5883, i64 %7789
  %7791 = load i8, i8* %7790, align 1, !tbaa !394
  %7792 = insertelement <32 x i8> %7787, i8 %7791, i32 22
  %7793 = extractelement <32 x i32> %7677, i32 23
  %7794 = sext i32 %7793 to i64
  %7795 = getelementptr inbounds i8, i8* %5883, i64 %7794
  %7796 = load i8, i8* %7795, align 1, !tbaa !394
  %7797 = insertelement <32 x i8> %7792, i8 %7796, i32 23
  %7798 = extractelement <32 x i32> %7677, i32 24
  %7799 = sext i32 %7798 to i64
  %7800 = getelementptr inbounds i8, i8* %5883, i64 %7799
  %7801 = load i8, i8* %7800, align 1, !tbaa !394
  %7802 = insertelement <32 x i8> %7797, i8 %7801, i32 24
  %7803 = extractelement <32 x i32> %7677, i32 25
  %7804 = sext i32 %7803 to i64
  %7805 = getelementptr inbounds i8, i8* %5883, i64 %7804
  %7806 = load i8, i8* %7805, align 1, !tbaa !394
  %7807 = insertelement <32 x i8> %7802, i8 %7806, i32 25
  %7808 = extractelement <32 x i32> %7677, i32 26
  %7809 = sext i32 %7808 to i64
  %7810 = getelementptr inbounds i8, i8* %5883, i64 %7809
  %7811 = load i8, i8* %7810, align 1, !tbaa !394
  %7812 = insertelement <32 x i8> %7807, i8 %7811, i32 26
  %7813 = extractelement <32 x i32> %7677, i32 27
  %7814 = sext i32 %7813 to i64
  %7815 = getelementptr inbounds i8, i8* %5883, i64 %7814
  %7816 = load i8, i8* %7815, align 1, !tbaa !394
  %7817 = insertelement <32 x i8> %7812, i8 %7816, i32 27
  %7818 = extractelement <32 x i32> %7677, i32 28
  %7819 = sext i32 %7818 to i64
  %7820 = getelementptr inbounds i8, i8* %5883, i64 %7819
  %7821 = load i8, i8* %7820, align 1, !tbaa !394
  %7822 = insertelement <32 x i8> %7817, i8 %7821, i32 28
  %7823 = extractelement <32 x i32> %7677, i32 29
  %7824 = sext i32 %7823 to i64
  %7825 = getelementptr inbounds i8, i8* %5883, i64 %7824
  %7826 = load i8, i8* %7825, align 1, !tbaa !394
  %7827 = insertelement <32 x i8> %7822, i8 %7826, i32 29
  %7828 = extractelement <32 x i32> %7677, i32 30
  %7829 = sext i32 %7828 to i64
  %7830 = getelementptr inbounds i8, i8* %5883, i64 %7829
  %7831 = load i8, i8* %7830, align 1, !tbaa !394
  %7832 = insertelement <32 x i8> %7827, i8 %7831, i32 30
  %7833 = extractelement <32 x i32> %7677, i32 31
  %7834 = sext i32 %7833 to i64
  %7835 = getelementptr inbounds i8, i8* %5883, i64 %7834
  %7836 = load i8, i8* %7835, align 1, !tbaa !394
  %t183.s154 = insertelement <32 x i8> %7832, i8 %7836, i32 31
  %7837 = add nsw <32 x i32> %t180151, %7466
  %7838 = extractelement <32 x i32> %7837, i32 0
  %7839 = sext i32 %7838 to i64
  %7840 = getelementptr inbounds i8, i8* %5883, i64 %7839
  %7841 = load i8, i8* %7840, align 1, !tbaa !394
  %7842 = insertelement <32 x i8> undef, i8 %7841, i32 0
  %7843 = extractelement <32 x i32> %7837, i32 1
  %7844 = sext i32 %7843 to i64
  %7845 = getelementptr inbounds i8, i8* %5883, i64 %7844
  %7846 = load i8, i8* %7845, align 1, !tbaa !394
  %7847 = insertelement <32 x i8> %7842, i8 %7846, i32 1
  %7848 = extractelement <32 x i32> %7837, i32 2
  %7849 = sext i32 %7848 to i64
  %7850 = getelementptr inbounds i8, i8* %5883, i64 %7849
  %7851 = load i8, i8* %7850, align 1, !tbaa !394
  %7852 = insertelement <32 x i8> %7847, i8 %7851, i32 2
  %7853 = extractelement <32 x i32> %7837, i32 3
  %7854 = sext i32 %7853 to i64
  %7855 = getelementptr inbounds i8, i8* %5883, i64 %7854
  %7856 = load i8, i8* %7855, align 1, !tbaa !394
  %7857 = insertelement <32 x i8> %7852, i8 %7856, i32 3
  %7858 = extractelement <32 x i32> %7837, i32 4
  %7859 = sext i32 %7858 to i64
  %7860 = getelementptr inbounds i8, i8* %5883, i64 %7859
  %7861 = load i8, i8* %7860, align 1, !tbaa !394
  %7862 = insertelement <32 x i8> %7857, i8 %7861, i32 4
  %7863 = extractelement <32 x i32> %7837, i32 5
  %7864 = sext i32 %7863 to i64
  %7865 = getelementptr inbounds i8, i8* %5883, i64 %7864
  %7866 = load i8, i8* %7865, align 1, !tbaa !394
  %7867 = insertelement <32 x i8> %7862, i8 %7866, i32 5
  %7868 = extractelement <32 x i32> %7837, i32 6
  %7869 = sext i32 %7868 to i64
  %7870 = getelementptr inbounds i8, i8* %5883, i64 %7869
  %7871 = load i8, i8* %7870, align 1, !tbaa !394
  %7872 = insertelement <32 x i8> %7867, i8 %7871, i32 6
  %7873 = extractelement <32 x i32> %7837, i32 7
  %7874 = sext i32 %7873 to i64
  %7875 = getelementptr inbounds i8, i8* %5883, i64 %7874
  %7876 = load i8, i8* %7875, align 1, !tbaa !394
  %7877 = insertelement <32 x i8> %7872, i8 %7876, i32 7
  %7878 = extractelement <32 x i32> %7837, i32 8
  %7879 = sext i32 %7878 to i64
  %7880 = getelementptr inbounds i8, i8* %5883, i64 %7879
  %7881 = load i8, i8* %7880, align 1, !tbaa !394
  %7882 = insertelement <32 x i8> %7877, i8 %7881, i32 8
  %7883 = extractelement <32 x i32> %7837, i32 9
  %7884 = sext i32 %7883 to i64
  %7885 = getelementptr inbounds i8, i8* %5883, i64 %7884
  %7886 = load i8, i8* %7885, align 1, !tbaa !394
  %7887 = insertelement <32 x i8> %7882, i8 %7886, i32 9
  %7888 = extractelement <32 x i32> %7837, i32 10
  %7889 = sext i32 %7888 to i64
  %7890 = getelementptr inbounds i8, i8* %5883, i64 %7889
  %7891 = load i8, i8* %7890, align 1, !tbaa !394
  %7892 = insertelement <32 x i8> %7887, i8 %7891, i32 10
  %7893 = extractelement <32 x i32> %7837, i32 11
  %7894 = sext i32 %7893 to i64
  %7895 = getelementptr inbounds i8, i8* %5883, i64 %7894
  %7896 = load i8, i8* %7895, align 1, !tbaa !394
  %7897 = insertelement <32 x i8> %7892, i8 %7896, i32 11
  %7898 = extractelement <32 x i32> %7837, i32 12
  %7899 = sext i32 %7898 to i64
  %7900 = getelementptr inbounds i8, i8* %5883, i64 %7899
  %7901 = load i8, i8* %7900, align 1, !tbaa !394
  %7902 = insertelement <32 x i8> %7897, i8 %7901, i32 12
  %7903 = extractelement <32 x i32> %7837, i32 13
  %7904 = sext i32 %7903 to i64
  %7905 = getelementptr inbounds i8, i8* %5883, i64 %7904
  %7906 = load i8, i8* %7905, align 1, !tbaa !394
  %7907 = insertelement <32 x i8> %7902, i8 %7906, i32 13
  %7908 = extractelement <32 x i32> %7837, i32 14
  %7909 = sext i32 %7908 to i64
  %7910 = getelementptr inbounds i8, i8* %5883, i64 %7909
  %7911 = load i8, i8* %7910, align 1, !tbaa !394
  %7912 = insertelement <32 x i8> %7907, i8 %7911, i32 14
  %7913 = extractelement <32 x i32> %7837, i32 15
  %7914 = sext i32 %7913 to i64
  %7915 = getelementptr inbounds i8, i8* %5883, i64 %7914
  %7916 = load i8, i8* %7915, align 1, !tbaa !394
  %7917 = insertelement <32 x i8> %7912, i8 %7916, i32 15
  %7918 = extractelement <32 x i32> %7837, i32 16
  %7919 = sext i32 %7918 to i64
  %7920 = getelementptr inbounds i8, i8* %5883, i64 %7919
  %7921 = load i8, i8* %7920, align 1, !tbaa !394
  %7922 = insertelement <32 x i8> %7917, i8 %7921, i32 16
  %7923 = extractelement <32 x i32> %7837, i32 17
  %7924 = sext i32 %7923 to i64
  %7925 = getelementptr inbounds i8, i8* %5883, i64 %7924
  %7926 = load i8, i8* %7925, align 1, !tbaa !394
  %7927 = insertelement <32 x i8> %7922, i8 %7926, i32 17
  %7928 = extractelement <32 x i32> %7837, i32 18
  %7929 = sext i32 %7928 to i64
  %7930 = getelementptr inbounds i8, i8* %5883, i64 %7929
  %7931 = load i8, i8* %7930, align 1, !tbaa !394
  %7932 = insertelement <32 x i8> %7927, i8 %7931, i32 18
  %7933 = extractelement <32 x i32> %7837, i32 19
  %7934 = sext i32 %7933 to i64
  %7935 = getelementptr inbounds i8, i8* %5883, i64 %7934
  %7936 = load i8, i8* %7935, align 1, !tbaa !394
  %7937 = insertelement <32 x i8> %7932, i8 %7936, i32 19
  %7938 = extractelement <32 x i32> %7837, i32 20
  %7939 = sext i32 %7938 to i64
  %7940 = getelementptr inbounds i8, i8* %5883, i64 %7939
  %7941 = load i8, i8* %7940, align 1, !tbaa !394
  %7942 = insertelement <32 x i8> %7937, i8 %7941, i32 20
  %7943 = extractelement <32 x i32> %7837, i32 21
  %7944 = sext i32 %7943 to i64
  %7945 = getelementptr inbounds i8, i8* %5883, i64 %7944
  %7946 = load i8, i8* %7945, align 1, !tbaa !394
  %7947 = insertelement <32 x i8> %7942, i8 %7946, i32 21
  %7948 = extractelement <32 x i32> %7837, i32 22
  %7949 = sext i32 %7948 to i64
  %7950 = getelementptr inbounds i8, i8* %5883, i64 %7949
  %7951 = load i8, i8* %7950, align 1, !tbaa !394
  %7952 = insertelement <32 x i8> %7947, i8 %7951, i32 22
  %7953 = extractelement <32 x i32> %7837, i32 23
  %7954 = sext i32 %7953 to i64
  %7955 = getelementptr inbounds i8, i8* %5883, i64 %7954
  %7956 = load i8, i8* %7955, align 1, !tbaa !394
  %7957 = insertelement <32 x i8> %7952, i8 %7956, i32 23
  %7958 = extractelement <32 x i32> %7837, i32 24
  %7959 = sext i32 %7958 to i64
  %7960 = getelementptr inbounds i8, i8* %5883, i64 %7959
  %7961 = load i8, i8* %7960, align 1, !tbaa !394
  %7962 = insertelement <32 x i8> %7957, i8 %7961, i32 24
  %7963 = extractelement <32 x i32> %7837, i32 25
  %7964 = sext i32 %7963 to i64
  %7965 = getelementptr inbounds i8, i8* %5883, i64 %7964
  %7966 = load i8, i8* %7965, align 1, !tbaa !394
  %7967 = insertelement <32 x i8> %7962, i8 %7966, i32 25
  %7968 = extractelement <32 x i32> %7837, i32 26
  %7969 = sext i32 %7968 to i64
  %7970 = getelementptr inbounds i8, i8* %5883, i64 %7969
  %7971 = load i8, i8* %7970, align 1, !tbaa !394
  %7972 = insertelement <32 x i8> %7967, i8 %7971, i32 26
  %7973 = extractelement <32 x i32> %7837, i32 27
  %7974 = sext i32 %7973 to i64
  %7975 = getelementptr inbounds i8, i8* %5883, i64 %7974
  %7976 = load i8, i8* %7975, align 1, !tbaa !394
  %7977 = insertelement <32 x i8> %7972, i8 %7976, i32 27
  %7978 = extractelement <32 x i32> %7837, i32 28
  %7979 = sext i32 %7978 to i64
  %7980 = getelementptr inbounds i8, i8* %5883, i64 %7979
  %7981 = load i8, i8* %7980, align 1, !tbaa !394
  %7982 = insertelement <32 x i8> %7977, i8 %7981, i32 28
  %7983 = extractelement <32 x i32> %7837, i32 29
  %7984 = sext i32 %7983 to i64
  %7985 = getelementptr inbounds i8, i8* %5883, i64 %7984
  %7986 = load i8, i8* %7985, align 1, !tbaa !394
  %7987 = insertelement <32 x i8> %7982, i8 %7986, i32 29
  %7988 = extractelement <32 x i32> %7837, i32 30
  %7989 = sext i32 %7988 to i64
  %7990 = getelementptr inbounds i8, i8* %5883, i64 %7989
  %7991 = load i8, i8* %7990, align 1, !tbaa !394
  %7992 = insertelement <32 x i8> %7987, i8 %7991, i32 30
  %7993 = extractelement <32 x i32> %7837, i32 31
  %7994 = sext i32 %7993 to i64
  %7995 = getelementptr inbounds i8, i8* %5883, i64 %7994
  %7996 = load i8, i8* %7995, align 1, !tbaa !394
  %t185.s155 = insertelement <32 x i8> %7992, i8 %7996, i32 31
  %7997 = add nsw <32 x i32> %t182153, %7466
  %7998 = extractelement <32 x i32> %7997, i32 0
  %7999 = sext i32 %7998 to i64
  %8000 = getelementptr inbounds i8, i8* %5883, i64 %7999
  %8001 = load i8, i8* %8000, align 1, !tbaa !394
  %8002 = insertelement <32 x i8> undef, i8 %8001, i32 0
  %8003 = extractelement <32 x i32> %7997, i32 1
  %8004 = sext i32 %8003 to i64
  %8005 = getelementptr inbounds i8, i8* %5883, i64 %8004
  %8006 = load i8, i8* %8005, align 1, !tbaa !394
  %8007 = insertelement <32 x i8> %8002, i8 %8006, i32 1
  %8008 = extractelement <32 x i32> %7997, i32 2
  %8009 = sext i32 %8008 to i64
  %8010 = getelementptr inbounds i8, i8* %5883, i64 %8009
  %8011 = load i8, i8* %8010, align 1, !tbaa !394
  %8012 = insertelement <32 x i8> %8007, i8 %8011, i32 2
  %8013 = extractelement <32 x i32> %7997, i32 3
  %8014 = sext i32 %8013 to i64
  %8015 = getelementptr inbounds i8, i8* %5883, i64 %8014
  %8016 = load i8, i8* %8015, align 1, !tbaa !394
  %8017 = insertelement <32 x i8> %8012, i8 %8016, i32 3
  %8018 = extractelement <32 x i32> %7997, i32 4
  %8019 = sext i32 %8018 to i64
  %8020 = getelementptr inbounds i8, i8* %5883, i64 %8019
  %8021 = load i8, i8* %8020, align 1, !tbaa !394
  %8022 = insertelement <32 x i8> %8017, i8 %8021, i32 4
  %8023 = extractelement <32 x i32> %7997, i32 5
  %8024 = sext i32 %8023 to i64
  %8025 = getelementptr inbounds i8, i8* %5883, i64 %8024
  %8026 = load i8, i8* %8025, align 1, !tbaa !394
  %8027 = insertelement <32 x i8> %8022, i8 %8026, i32 5
  %8028 = extractelement <32 x i32> %7997, i32 6
  %8029 = sext i32 %8028 to i64
  %8030 = getelementptr inbounds i8, i8* %5883, i64 %8029
  %8031 = load i8, i8* %8030, align 1, !tbaa !394
  %8032 = insertelement <32 x i8> %8027, i8 %8031, i32 6
  %8033 = extractelement <32 x i32> %7997, i32 7
  %8034 = sext i32 %8033 to i64
  %8035 = getelementptr inbounds i8, i8* %5883, i64 %8034
  %8036 = load i8, i8* %8035, align 1, !tbaa !394
  %8037 = insertelement <32 x i8> %8032, i8 %8036, i32 7
  %8038 = extractelement <32 x i32> %7997, i32 8
  %8039 = sext i32 %8038 to i64
  %8040 = getelementptr inbounds i8, i8* %5883, i64 %8039
  %8041 = load i8, i8* %8040, align 1, !tbaa !394
  %8042 = insertelement <32 x i8> %8037, i8 %8041, i32 8
  %8043 = extractelement <32 x i32> %7997, i32 9
  %8044 = sext i32 %8043 to i64
  %8045 = getelementptr inbounds i8, i8* %5883, i64 %8044
  %8046 = load i8, i8* %8045, align 1, !tbaa !394
  %8047 = insertelement <32 x i8> %8042, i8 %8046, i32 9
  %8048 = extractelement <32 x i32> %7997, i32 10
  %8049 = sext i32 %8048 to i64
  %8050 = getelementptr inbounds i8, i8* %5883, i64 %8049
  %8051 = load i8, i8* %8050, align 1, !tbaa !394
  %8052 = insertelement <32 x i8> %8047, i8 %8051, i32 10
  %8053 = extractelement <32 x i32> %7997, i32 11
  %8054 = sext i32 %8053 to i64
  %8055 = getelementptr inbounds i8, i8* %5883, i64 %8054
  %8056 = load i8, i8* %8055, align 1, !tbaa !394
  %8057 = insertelement <32 x i8> %8052, i8 %8056, i32 11
  %8058 = extractelement <32 x i32> %7997, i32 12
  %8059 = sext i32 %8058 to i64
  %8060 = getelementptr inbounds i8, i8* %5883, i64 %8059
  %8061 = load i8, i8* %8060, align 1, !tbaa !394
  %8062 = insertelement <32 x i8> %8057, i8 %8061, i32 12
  %8063 = extractelement <32 x i32> %7997, i32 13
  %8064 = sext i32 %8063 to i64
  %8065 = getelementptr inbounds i8, i8* %5883, i64 %8064
  %8066 = load i8, i8* %8065, align 1, !tbaa !394
  %8067 = insertelement <32 x i8> %8062, i8 %8066, i32 13
  %8068 = extractelement <32 x i32> %7997, i32 14
  %8069 = sext i32 %8068 to i64
  %8070 = getelementptr inbounds i8, i8* %5883, i64 %8069
  %8071 = load i8, i8* %8070, align 1, !tbaa !394
  %8072 = insertelement <32 x i8> %8067, i8 %8071, i32 14
  %8073 = extractelement <32 x i32> %7997, i32 15
  %8074 = sext i32 %8073 to i64
  %8075 = getelementptr inbounds i8, i8* %5883, i64 %8074
  %8076 = load i8, i8* %8075, align 1, !tbaa !394
  %8077 = insertelement <32 x i8> %8072, i8 %8076, i32 15
  %8078 = extractelement <32 x i32> %7997, i32 16
  %8079 = sext i32 %8078 to i64
  %8080 = getelementptr inbounds i8, i8* %5883, i64 %8079
  %8081 = load i8, i8* %8080, align 1, !tbaa !394
  %8082 = insertelement <32 x i8> %8077, i8 %8081, i32 16
  %8083 = extractelement <32 x i32> %7997, i32 17
  %8084 = sext i32 %8083 to i64
  %8085 = getelementptr inbounds i8, i8* %5883, i64 %8084
  %8086 = load i8, i8* %8085, align 1, !tbaa !394
  %8087 = insertelement <32 x i8> %8082, i8 %8086, i32 17
  %8088 = extractelement <32 x i32> %7997, i32 18
  %8089 = sext i32 %8088 to i64
  %8090 = getelementptr inbounds i8, i8* %5883, i64 %8089
  %8091 = load i8, i8* %8090, align 1, !tbaa !394
  %8092 = insertelement <32 x i8> %8087, i8 %8091, i32 18
  %8093 = extractelement <32 x i32> %7997, i32 19
  %8094 = sext i32 %8093 to i64
  %8095 = getelementptr inbounds i8, i8* %5883, i64 %8094
  %8096 = load i8, i8* %8095, align 1, !tbaa !394
  %8097 = insertelement <32 x i8> %8092, i8 %8096, i32 19
  %8098 = extractelement <32 x i32> %7997, i32 20
  %8099 = sext i32 %8098 to i64
  %8100 = getelementptr inbounds i8, i8* %5883, i64 %8099
  %8101 = load i8, i8* %8100, align 1, !tbaa !394
  %8102 = insertelement <32 x i8> %8097, i8 %8101, i32 20
  %8103 = extractelement <32 x i32> %7997, i32 21
  %8104 = sext i32 %8103 to i64
  %8105 = getelementptr inbounds i8, i8* %5883, i64 %8104
  %8106 = load i8, i8* %8105, align 1, !tbaa !394
  %8107 = insertelement <32 x i8> %8102, i8 %8106, i32 21
  %8108 = extractelement <32 x i32> %7997, i32 22
  %8109 = sext i32 %8108 to i64
  %8110 = getelementptr inbounds i8, i8* %5883, i64 %8109
  %8111 = load i8, i8* %8110, align 1, !tbaa !394
  %8112 = insertelement <32 x i8> %8107, i8 %8111, i32 22
  %8113 = extractelement <32 x i32> %7997, i32 23
  %8114 = sext i32 %8113 to i64
  %8115 = getelementptr inbounds i8, i8* %5883, i64 %8114
  %8116 = load i8, i8* %8115, align 1, !tbaa !394
  %8117 = insertelement <32 x i8> %8112, i8 %8116, i32 23
  %8118 = extractelement <32 x i32> %7997, i32 24
  %8119 = sext i32 %8118 to i64
  %8120 = getelementptr inbounds i8, i8* %5883, i64 %8119
  %8121 = load i8, i8* %8120, align 1, !tbaa !394
  %8122 = insertelement <32 x i8> %8117, i8 %8121, i32 24
  %8123 = extractelement <32 x i32> %7997, i32 25
  %8124 = sext i32 %8123 to i64
  %8125 = getelementptr inbounds i8, i8* %5883, i64 %8124
  %8126 = load i8, i8* %8125, align 1, !tbaa !394
  %8127 = insertelement <32 x i8> %8122, i8 %8126, i32 25
  %8128 = extractelement <32 x i32> %7997, i32 26
  %8129 = sext i32 %8128 to i64
  %8130 = getelementptr inbounds i8, i8* %5883, i64 %8129
  %8131 = load i8, i8* %8130, align 1, !tbaa !394
  %8132 = insertelement <32 x i8> %8127, i8 %8131, i32 26
  %8133 = extractelement <32 x i32> %7997, i32 27
  %8134 = sext i32 %8133 to i64
  %8135 = getelementptr inbounds i8, i8* %5883, i64 %8134
  %8136 = load i8, i8* %8135, align 1, !tbaa !394
  %8137 = insertelement <32 x i8> %8132, i8 %8136, i32 27
  %8138 = extractelement <32 x i32> %7997, i32 28
  %8139 = sext i32 %8138 to i64
  %8140 = getelementptr inbounds i8, i8* %5883, i64 %8139
  %8141 = load i8, i8* %8140, align 1, !tbaa !394
  %8142 = insertelement <32 x i8> %8137, i8 %8141, i32 28
  %8143 = extractelement <32 x i32> %7997, i32 29
  %8144 = sext i32 %8143 to i64
  %8145 = getelementptr inbounds i8, i8* %5883, i64 %8144
  %8146 = load i8, i8* %8145, align 1, !tbaa !394
  %8147 = insertelement <32 x i8> %8142, i8 %8146, i32 29
  %8148 = extractelement <32 x i32> %7997, i32 30
  %8149 = sext i32 %8148 to i64
  %8150 = getelementptr inbounds i8, i8* %5883, i64 %8149
  %8151 = load i8, i8* %8150, align 1, !tbaa !394
  %8152 = insertelement <32 x i8> %8147, i8 %8151, i32 30
  %8153 = extractelement <32 x i32> %7997, i32 31
  %8154 = sext i32 %8153 to i64
  %8155 = getelementptr inbounds i8, i8* %5883, i64 %8154
  %8156 = load i8, i8* %8155, align 1, !tbaa !394
  %t186.s156 = insertelement <32 x i8> %8152, i8 %8156, i32 31
  %8157 = add nsw <32 x i32> %t177150, %7464
  %8158 = extractelement <32 x i32> %8157, i32 0
  %8159 = sext i32 %8158 to i64
  %8160 = getelementptr inbounds i8, i8* %5883, i64 %8159
  %8161 = load i8, i8* %8160, align 1, !tbaa !394
  %8162 = insertelement <32 x i8> undef, i8 %8161, i32 0
  %8163 = extractelement <32 x i32> %8157, i32 1
  %8164 = sext i32 %8163 to i64
  %8165 = getelementptr inbounds i8, i8* %5883, i64 %8164
  %8166 = load i8, i8* %8165, align 1, !tbaa !394
  %8167 = insertelement <32 x i8> %8162, i8 %8166, i32 1
  %8168 = extractelement <32 x i32> %8157, i32 2
  %8169 = sext i32 %8168 to i64
  %8170 = getelementptr inbounds i8, i8* %5883, i64 %8169
  %8171 = load i8, i8* %8170, align 1, !tbaa !394
  %8172 = insertelement <32 x i8> %8167, i8 %8171, i32 2
  %8173 = extractelement <32 x i32> %8157, i32 3
  %8174 = sext i32 %8173 to i64
  %8175 = getelementptr inbounds i8, i8* %5883, i64 %8174
  %8176 = load i8, i8* %8175, align 1, !tbaa !394
  %8177 = insertelement <32 x i8> %8172, i8 %8176, i32 3
  %8178 = extractelement <32 x i32> %8157, i32 4
  %8179 = sext i32 %8178 to i64
  %8180 = getelementptr inbounds i8, i8* %5883, i64 %8179
  %8181 = load i8, i8* %8180, align 1, !tbaa !394
  %8182 = insertelement <32 x i8> %8177, i8 %8181, i32 4
  %8183 = extractelement <32 x i32> %8157, i32 5
  %8184 = sext i32 %8183 to i64
  %8185 = getelementptr inbounds i8, i8* %5883, i64 %8184
  %8186 = load i8, i8* %8185, align 1, !tbaa !394
  %8187 = insertelement <32 x i8> %8182, i8 %8186, i32 5
  %8188 = extractelement <32 x i32> %8157, i32 6
  %8189 = sext i32 %8188 to i64
  %8190 = getelementptr inbounds i8, i8* %5883, i64 %8189
  %8191 = load i8, i8* %8190, align 1, !tbaa !394
  %8192 = insertelement <32 x i8> %8187, i8 %8191, i32 6
  %8193 = extractelement <32 x i32> %8157, i32 7
  %8194 = sext i32 %8193 to i64
  %8195 = getelementptr inbounds i8, i8* %5883, i64 %8194
  %8196 = load i8, i8* %8195, align 1, !tbaa !394
  %8197 = insertelement <32 x i8> %8192, i8 %8196, i32 7
  %8198 = extractelement <32 x i32> %8157, i32 8
  %8199 = sext i32 %8198 to i64
  %8200 = getelementptr inbounds i8, i8* %5883, i64 %8199
  %8201 = load i8, i8* %8200, align 1, !tbaa !394
  %8202 = insertelement <32 x i8> %8197, i8 %8201, i32 8
  %8203 = extractelement <32 x i32> %8157, i32 9
  %8204 = sext i32 %8203 to i64
  %8205 = getelementptr inbounds i8, i8* %5883, i64 %8204
  %8206 = load i8, i8* %8205, align 1, !tbaa !394
  %8207 = insertelement <32 x i8> %8202, i8 %8206, i32 9
  %8208 = extractelement <32 x i32> %8157, i32 10
  %8209 = sext i32 %8208 to i64
  %8210 = getelementptr inbounds i8, i8* %5883, i64 %8209
  %8211 = load i8, i8* %8210, align 1, !tbaa !394
  %8212 = insertelement <32 x i8> %8207, i8 %8211, i32 10
  %8213 = extractelement <32 x i32> %8157, i32 11
  %8214 = sext i32 %8213 to i64
  %8215 = getelementptr inbounds i8, i8* %5883, i64 %8214
  %8216 = load i8, i8* %8215, align 1, !tbaa !394
  %8217 = insertelement <32 x i8> %8212, i8 %8216, i32 11
  %8218 = extractelement <32 x i32> %8157, i32 12
  %8219 = sext i32 %8218 to i64
  %8220 = getelementptr inbounds i8, i8* %5883, i64 %8219
  %8221 = load i8, i8* %8220, align 1, !tbaa !394
  %8222 = insertelement <32 x i8> %8217, i8 %8221, i32 12
  %8223 = extractelement <32 x i32> %8157, i32 13
  %8224 = sext i32 %8223 to i64
  %8225 = getelementptr inbounds i8, i8* %5883, i64 %8224
  %8226 = load i8, i8* %8225, align 1, !tbaa !394
  %8227 = insertelement <32 x i8> %8222, i8 %8226, i32 13
  %8228 = extractelement <32 x i32> %8157, i32 14
  %8229 = sext i32 %8228 to i64
  %8230 = getelementptr inbounds i8, i8* %5883, i64 %8229
  %8231 = load i8, i8* %8230, align 1, !tbaa !394
  %8232 = insertelement <32 x i8> %8227, i8 %8231, i32 14
  %8233 = extractelement <32 x i32> %8157, i32 15
  %8234 = sext i32 %8233 to i64
  %8235 = getelementptr inbounds i8, i8* %5883, i64 %8234
  %8236 = load i8, i8* %8235, align 1, !tbaa !394
  %8237 = insertelement <32 x i8> %8232, i8 %8236, i32 15
  %8238 = extractelement <32 x i32> %8157, i32 16
  %8239 = sext i32 %8238 to i64
  %8240 = getelementptr inbounds i8, i8* %5883, i64 %8239
  %8241 = load i8, i8* %8240, align 1, !tbaa !394
  %8242 = insertelement <32 x i8> %8237, i8 %8241, i32 16
  %8243 = extractelement <32 x i32> %8157, i32 17
  %8244 = sext i32 %8243 to i64
  %8245 = getelementptr inbounds i8, i8* %5883, i64 %8244
  %8246 = load i8, i8* %8245, align 1, !tbaa !394
  %8247 = insertelement <32 x i8> %8242, i8 %8246, i32 17
  %8248 = extractelement <32 x i32> %8157, i32 18
  %8249 = sext i32 %8248 to i64
  %8250 = getelementptr inbounds i8, i8* %5883, i64 %8249
  %8251 = load i8, i8* %8250, align 1, !tbaa !394
  %8252 = insertelement <32 x i8> %8247, i8 %8251, i32 18
  %8253 = extractelement <32 x i32> %8157, i32 19
  %8254 = sext i32 %8253 to i64
  %8255 = getelementptr inbounds i8, i8* %5883, i64 %8254
  %8256 = load i8, i8* %8255, align 1, !tbaa !394
  %8257 = insertelement <32 x i8> %8252, i8 %8256, i32 19
  %8258 = extractelement <32 x i32> %8157, i32 20
  %8259 = sext i32 %8258 to i64
  %8260 = getelementptr inbounds i8, i8* %5883, i64 %8259
  %8261 = load i8, i8* %8260, align 1, !tbaa !394
  %8262 = insertelement <32 x i8> %8257, i8 %8261, i32 20
  %8263 = extractelement <32 x i32> %8157, i32 21
  %8264 = sext i32 %8263 to i64
  %8265 = getelementptr inbounds i8, i8* %5883, i64 %8264
  %8266 = load i8, i8* %8265, align 1, !tbaa !394
  %8267 = insertelement <32 x i8> %8262, i8 %8266, i32 21
  %8268 = extractelement <32 x i32> %8157, i32 22
  %8269 = sext i32 %8268 to i64
  %8270 = getelementptr inbounds i8, i8* %5883, i64 %8269
  %8271 = load i8, i8* %8270, align 1, !tbaa !394
  %8272 = insertelement <32 x i8> %8267, i8 %8271, i32 22
  %8273 = extractelement <32 x i32> %8157, i32 23
  %8274 = sext i32 %8273 to i64
  %8275 = getelementptr inbounds i8, i8* %5883, i64 %8274
  %8276 = load i8, i8* %8275, align 1, !tbaa !394
  %8277 = insertelement <32 x i8> %8272, i8 %8276, i32 23
  %8278 = extractelement <32 x i32> %8157, i32 24
  %8279 = sext i32 %8278 to i64
  %8280 = getelementptr inbounds i8, i8* %5883, i64 %8279
  %8281 = load i8, i8* %8280, align 1, !tbaa !394
  %8282 = insertelement <32 x i8> %8277, i8 %8281, i32 24
  %8283 = extractelement <32 x i32> %8157, i32 25
  %8284 = sext i32 %8283 to i64
  %8285 = getelementptr inbounds i8, i8* %5883, i64 %8284
  %8286 = load i8, i8* %8285, align 1, !tbaa !394
  %8287 = insertelement <32 x i8> %8282, i8 %8286, i32 25
  %8288 = extractelement <32 x i32> %8157, i32 26
  %8289 = sext i32 %8288 to i64
  %8290 = getelementptr inbounds i8, i8* %5883, i64 %8289
  %8291 = load i8, i8* %8290, align 1, !tbaa !394
  %8292 = insertelement <32 x i8> %8287, i8 %8291, i32 26
  %8293 = extractelement <32 x i32> %8157, i32 27
  %8294 = sext i32 %8293 to i64
  %8295 = getelementptr inbounds i8, i8* %5883, i64 %8294
  %8296 = load i8, i8* %8295, align 1, !tbaa !394
  %8297 = insertelement <32 x i8> %8292, i8 %8296, i32 27
  %8298 = extractelement <32 x i32> %8157, i32 28
  %8299 = sext i32 %8298 to i64
  %8300 = getelementptr inbounds i8, i8* %5883, i64 %8299
  %8301 = load i8, i8* %8300, align 1, !tbaa !394
  %8302 = insertelement <32 x i8> %8297, i8 %8301, i32 28
  %8303 = extractelement <32 x i32> %8157, i32 29
  %8304 = sext i32 %8303 to i64
  %8305 = getelementptr inbounds i8, i8* %5883, i64 %8304
  %8306 = load i8, i8* %8305, align 1, !tbaa !394
  %8307 = insertelement <32 x i8> %8302, i8 %8306, i32 29
  %8308 = extractelement <32 x i32> %8157, i32 30
  %8309 = sext i32 %8308 to i64
  %8310 = getelementptr inbounds i8, i8* %5883, i64 %8309
  %8311 = load i8, i8* %8310, align 1, !tbaa !394
  %8312 = insertelement <32 x i8> %8307, i8 %8311, i32 30
  %8313 = extractelement <32 x i32> %8157, i32 31
  %8314 = sext i32 %8313 to i64
  %8315 = getelementptr inbounds i8, i8* %5883, i64 %8314
  %8316 = load i8, i8* %8315, align 1, !tbaa !394
  %8317 = insertelement <32 x i8> %8312, i8 %8316, i32 31
  %8318 = add nsw <32 x i32> %t177150, %7466
  %8319 = extractelement <32 x i32> %8318, i32 0
  %8320 = sext i32 %8319 to i64
  %8321 = getelementptr inbounds i8, i8* %5883, i64 %8320
  %8322 = load i8, i8* %8321, align 1, !tbaa !394
  %8323 = insertelement <32 x i8> undef, i8 %8322, i32 0
  %8324 = extractelement <32 x i32> %8318, i32 1
  %8325 = sext i32 %8324 to i64
  %8326 = getelementptr inbounds i8, i8* %5883, i64 %8325
  %8327 = load i8, i8* %8326, align 1, !tbaa !394
  %8328 = insertelement <32 x i8> %8323, i8 %8327, i32 1
  %8329 = extractelement <32 x i32> %8318, i32 2
  %8330 = sext i32 %8329 to i64
  %8331 = getelementptr inbounds i8, i8* %5883, i64 %8330
  %8332 = load i8, i8* %8331, align 1, !tbaa !394
  %8333 = insertelement <32 x i8> %8328, i8 %8332, i32 2
  %8334 = extractelement <32 x i32> %8318, i32 3
  %8335 = sext i32 %8334 to i64
  %8336 = getelementptr inbounds i8, i8* %5883, i64 %8335
  %8337 = load i8, i8* %8336, align 1, !tbaa !394
  %8338 = insertelement <32 x i8> %8333, i8 %8337, i32 3
  %8339 = extractelement <32 x i32> %8318, i32 4
  %8340 = sext i32 %8339 to i64
  %8341 = getelementptr inbounds i8, i8* %5883, i64 %8340
  %8342 = load i8, i8* %8341, align 1, !tbaa !394
  %8343 = insertelement <32 x i8> %8338, i8 %8342, i32 4
  %8344 = extractelement <32 x i32> %8318, i32 5
  %8345 = sext i32 %8344 to i64
  %8346 = getelementptr inbounds i8, i8* %5883, i64 %8345
  %8347 = load i8, i8* %8346, align 1, !tbaa !394
  %8348 = insertelement <32 x i8> %8343, i8 %8347, i32 5
  %8349 = extractelement <32 x i32> %8318, i32 6
  %8350 = sext i32 %8349 to i64
  %8351 = getelementptr inbounds i8, i8* %5883, i64 %8350
  %8352 = load i8, i8* %8351, align 1, !tbaa !394
  %8353 = insertelement <32 x i8> %8348, i8 %8352, i32 6
  %8354 = extractelement <32 x i32> %8318, i32 7
  %8355 = sext i32 %8354 to i64
  %8356 = getelementptr inbounds i8, i8* %5883, i64 %8355
  %8357 = load i8, i8* %8356, align 1, !tbaa !394
  %8358 = insertelement <32 x i8> %8353, i8 %8357, i32 7
  %8359 = extractelement <32 x i32> %8318, i32 8
  %8360 = sext i32 %8359 to i64
  %8361 = getelementptr inbounds i8, i8* %5883, i64 %8360
  %8362 = load i8, i8* %8361, align 1, !tbaa !394
  %8363 = insertelement <32 x i8> %8358, i8 %8362, i32 8
  %8364 = extractelement <32 x i32> %8318, i32 9
  %8365 = sext i32 %8364 to i64
  %8366 = getelementptr inbounds i8, i8* %5883, i64 %8365
  %8367 = load i8, i8* %8366, align 1, !tbaa !394
  %8368 = insertelement <32 x i8> %8363, i8 %8367, i32 9
  %8369 = extractelement <32 x i32> %8318, i32 10
  %8370 = sext i32 %8369 to i64
  %8371 = getelementptr inbounds i8, i8* %5883, i64 %8370
  %8372 = load i8, i8* %8371, align 1, !tbaa !394
  %8373 = insertelement <32 x i8> %8368, i8 %8372, i32 10
  %8374 = extractelement <32 x i32> %8318, i32 11
  %8375 = sext i32 %8374 to i64
  %8376 = getelementptr inbounds i8, i8* %5883, i64 %8375
  %8377 = load i8, i8* %8376, align 1, !tbaa !394
  %8378 = insertelement <32 x i8> %8373, i8 %8377, i32 11
  %8379 = extractelement <32 x i32> %8318, i32 12
  %8380 = sext i32 %8379 to i64
  %8381 = getelementptr inbounds i8, i8* %5883, i64 %8380
  %8382 = load i8, i8* %8381, align 1, !tbaa !394
  %8383 = insertelement <32 x i8> %8378, i8 %8382, i32 12
  %8384 = extractelement <32 x i32> %8318, i32 13
  %8385 = sext i32 %8384 to i64
  %8386 = getelementptr inbounds i8, i8* %5883, i64 %8385
  %8387 = load i8, i8* %8386, align 1, !tbaa !394
  %8388 = insertelement <32 x i8> %8383, i8 %8387, i32 13
  %8389 = extractelement <32 x i32> %8318, i32 14
  %8390 = sext i32 %8389 to i64
  %8391 = getelementptr inbounds i8, i8* %5883, i64 %8390
  %8392 = load i8, i8* %8391, align 1, !tbaa !394
  %8393 = insertelement <32 x i8> %8388, i8 %8392, i32 14
  %8394 = extractelement <32 x i32> %8318, i32 15
  %8395 = sext i32 %8394 to i64
  %8396 = getelementptr inbounds i8, i8* %5883, i64 %8395
  %8397 = load i8, i8* %8396, align 1, !tbaa !394
  %8398 = insertelement <32 x i8> %8393, i8 %8397, i32 15
  %8399 = extractelement <32 x i32> %8318, i32 16
  %8400 = sext i32 %8399 to i64
  %8401 = getelementptr inbounds i8, i8* %5883, i64 %8400
  %8402 = load i8, i8* %8401, align 1, !tbaa !394
  %8403 = insertelement <32 x i8> %8398, i8 %8402, i32 16
  %8404 = extractelement <32 x i32> %8318, i32 17
  %8405 = sext i32 %8404 to i64
  %8406 = getelementptr inbounds i8, i8* %5883, i64 %8405
  %8407 = load i8, i8* %8406, align 1, !tbaa !394
  %8408 = insertelement <32 x i8> %8403, i8 %8407, i32 17
  %8409 = extractelement <32 x i32> %8318, i32 18
  %8410 = sext i32 %8409 to i64
  %8411 = getelementptr inbounds i8, i8* %5883, i64 %8410
  %8412 = load i8, i8* %8411, align 1, !tbaa !394
  %8413 = insertelement <32 x i8> %8408, i8 %8412, i32 18
  %8414 = extractelement <32 x i32> %8318, i32 19
  %8415 = sext i32 %8414 to i64
  %8416 = getelementptr inbounds i8, i8* %5883, i64 %8415
  %8417 = load i8, i8* %8416, align 1, !tbaa !394
  %8418 = insertelement <32 x i8> %8413, i8 %8417, i32 19
  %8419 = extractelement <32 x i32> %8318, i32 20
  %8420 = sext i32 %8419 to i64
  %8421 = getelementptr inbounds i8, i8* %5883, i64 %8420
  %8422 = load i8, i8* %8421, align 1, !tbaa !394
  %8423 = insertelement <32 x i8> %8418, i8 %8422, i32 20
  %8424 = extractelement <32 x i32> %8318, i32 21
  %8425 = sext i32 %8424 to i64
  %8426 = getelementptr inbounds i8, i8* %5883, i64 %8425
  %8427 = load i8, i8* %8426, align 1, !tbaa !394
  %8428 = insertelement <32 x i8> %8423, i8 %8427, i32 21
  %8429 = extractelement <32 x i32> %8318, i32 22
  %8430 = sext i32 %8429 to i64
  %8431 = getelementptr inbounds i8, i8* %5883, i64 %8430
  %8432 = load i8, i8* %8431, align 1, !tbaa !394
  %8433 = insertelement <32 x i8> %8428, i8 %8432, i32 22
  %8434 = extractelement <32 x i32> %8318, i32 23
  %8435 = sext i32 %8434 to i64
  %8436 = getelementptr inbounds i8, i8* %5883, i64 %8435
  %8437 = load i8, i8* %8436, align 1, !tbaa !394
  %8438 = insertelement <32 x i8> %8433, i8 %8437, i32 23
  %8439 = extractelement <32 x i32> %8318, i32 24
  %8440 = sext i32 %8439 to i64
  %8441 = getelementptr inbounds i8, i8* %5883, i64 %8440
  %8442 = load i8, i8* %8441, align 1, !tbaa !394
  %8443 = insertelement <32 x i8> %8438, i8 %8442, i32 24
  %8444 = extractelement <32 x i32> %8318, i32 25
  %8445 = sext i32 %8444 to i64
  %8446 = getelementptr inbounds i8, i8* %5883, i64 %8445
  %8447 = load i8, i8* %8446, align 1, !tbaa !394
  %8448 = insertelement <32 x i8> %8443, i8 %8447, i32 25
  %8449 = extractelement <32 x i32> %8318, i32 26
  %8450 = sext i32 %8449 to i64
  %8451 = getelementptr inbounds i8, i8* %5883, i64 %8450
  %8452 = load i8, i8* %8451, align 1, !tbaa !394
  %8453 = insertelement <32 x i8> %8448, i8 %8452, i32 26
  %8454 = extractelement <32 x i32> %8318, i32 27
  %8455 = sext i32 %8454 to i64
  %8456 = getelementptr inbounds i8, i8* %5883, i64 %8455
  %8457 = load i8, i8* %8456, align 1, !tbaa !394
  %8458 = insertelement <32 x i8> %8453, i8 %8457, i32 27
  %8459 = extractelement <32 x i32> %8318, i32 28
  %8460 = sext i32 %8459 to i64
  %8461 = getelementptr inbounds i8, i8* %5883, i64 %8460
  %8462 = load i8, i8* %8461, align 1, !tbaa !394
  %8463 = insertelement <32 x i8> %8458, i8 %8462, i32 28
  %8464 = extractelement <32 x i32> %8318, i32 29
  %8465 = sext i32 %8464 to i64
  %8466 = getelementptr inbounds i8, i8* %5883, i64 %8465
  %8467 = load i8, i8* %8466, align 1, !tbaa !394
  %8468 = insertelement <32 x i8> %8463, i8 %8467, i32 29
  %8469 = extractelement <32 x i32> %8318, i32 30
  %8470 = sext i32 %8469 to i64
  %8471 = getelementptr inbounds i8, i8* %5883, i64 %8470
  %8472 = load i8, i8* %8471, align 1, !tbaa !394
  %8473 = insertelement <32 x i8> %8468, i8 %8472, i32 30
  %8474 = extractelement <32 x i32> %8318, i32 31
  %8475 = sext i32 %8474 to i64
  %8476 = getelementptr inbounds i8, i8* %5883, i64 %8475
  %8477 = load i8, i8* %8476, align 1, !tbaa !394
  %8478 = insertelement <32 x i8> %8473, i8 %8477, i32 31
  %8479 = add nsw <32 x i32> %t180151, %t235157
  %8480 = extractelement <32 x i32> %8479, i32 0
  %8481 = sext i32 %8480 to i64
  %8482 = getelementptr inbounds i8, i8* %5883, i64 %8481
  %8483 = load i8, i8* %8482, align 1, !tbaa !394
  %8484 = insertelement <32 x i8> undef, i8 %8483, i32 0
  %8485 = extractelement <32 x i32> %8479, i32 1
  %8486 = sext i32 %8485 to i64
  %8487 = getelementptr inbounds i8, i8* %5883, i64 %8486
  %8488 = load i8, i8* %8487, align 1, !tbaa !394
  %8489 = insertelement <32 x i8> %8484, i8 %8488, i32 1
  %8490 = extractelement <32 x i32> %8479, i32 2
  %8491 = sext i32 %8490 to i64
  %8492 = getelementptr inbounds i8, i8* %5883, i64 %8491
  %8493 = load i8, i8* %8492, align 1, !tbaa !394
  %8494 = insertelement <32 x i8> %8489, i8 %8493, i32 2
  %8495 = extractelement <32 x i32> %8479, i32 3
  %8496 = sext i32 %8495 to i64
  %8497 = getelementptr inbounds i8, i8* %5883, i64 %8496
  %8498 = load i8, i8* %8497, align 1, !tbaa !394
  %8499 = insertelement <32 x i8> %8494, i8 %8498, i32 3
  %8500 = extractelement <32 x i32> %8479, i32 4
  %8501 = sext i32 %8500 to i64
  %8502 = getelementptr inbounds i8, i8* %5883, i64 %8501
  %8503 = load i8, i8* %8502, align 1, !tbaa !394
  %8504 = insertelement <32 x i8> %8499, i8 %8503, i32 4
  %8505 = extractelement <32 x i32> %8479, i32 5
  %8506 = sext i32 %8505 to i64
  %8507 = getelementptr inbounds i8, i8* %5883, i64 %8506
  %8508 = load i8, i8* %8507, align 1, !tbaa !394
  %8509 = insertelement <32 x i8> %8504, i8 %8508, i32 5
  %8510 = extractelement <32 x i32> %8479, i32 6
  %8511 = sext i32 %8510 to i64
  %8512 = getelementptr inbounds i8, i8* %5883, i64 %8511
  %8513 = load i8, i8* %8512, align 1, !tbaa !394
  %8514 = insertelement <32 x i8> %8509, i8 %8513, i32 6
  %8515 = extractelement <32 x i32> %8479, i32 7
  %8516 = sext i32 %8515 to i64
  %8517 = getelementptr inbounds i8, i8* %5883, i64 %8516
  %8518 = load i8, i8* %8517, align 1, !tbaa !394
  %8519 = insertelement <32 x i8> %8514, i8 %8518, i32 7
  %8520 = extractelement <32 x i32> %8479, i32 8
  %8521 = sext i32 %8520 to i64
  %8522 = getelementptr inbounds i8, i8* %5883, i64 %8521
  %8523 = load i8, i8* %8522, align 1, !tbaa !394
  %8524 = insertelement <32 x i8> %8519, i8 %8523, i32 8
  %8525 = extractelement <32 x i32> %8479, i32 9
  %8526 = sext i32 %8525 to i64
  %8527 = getelementptr inbounds i8, i8* %5883, i64 %8526
  %8528 = load i8, i8* %8527, align 1, !tbaa !394
  %8529 = insertelement <32 x i8> %8524, i8 %8528, i32 9
  %8530 = extractelement <32 x i32> %8479, i32 10
  %8531 = sext i32 %8530 to i64
  %8532 = getelementptr inbounds i8, i8* %5883, i64 %8531
  %8533 = load i8, i8* %8532, align 1, !tbaa !394
  %8534 = insertelement <32 x i8> %8529, i8 %8533, i32 10
  %8535 = extractelement <32 x i32> %8479, i32 11
  %8536 = sext i32 %8535 to i64
  %8537 = getelementptr inbounds i8, i8* %5883, i64 %8536
  %8538 = load i8, i8* %8537, align 1, !tbaa !394
  %8539 = insertelement <32 x i8> %8534, i8 %8538, i32 11
  %8540 = extractelement <32 x i32> %8479, i32 12
  %8541 = sext i32 %8540 to i64
  %8542 = getelementptr inbounds i8, i8* %5883, i64 %8541
  %8543 = load i8, i8* %8542, align 1, !tbaa !394
  %8544 = insertelement <32 x i8> %8539, i8 %8543, i32 12
  %8545 = extractelement <32 x i32> %8479, i32 13
  %8546 = sext i32 %8545 to i64
  %8547 = getelementptr inbounds i8, i8* %5883, i64 %8546
  %8548 = load i8, i8* %8547, align 1, !tbaa !394
  %8549 = insertelement <32 x i8> %8544, i8 %8548, i32 13
  %8550 = extractelement <32 x i32> %8479, i32 14
  %8551 = sext i32 %8550 to i64
  %8552 = getelementptr inbounds i8, i8* %5883, i64 %8551
  %8553 = load i8, i8* %8552, align 1, !tbaa !394
  %8554 = insertelement <32 x i8> %8549, i8 %8553, i32 14
  %8555 = extractelement <32 x i32> %8479, i32 15
  %8556 = sext i32 %8555 to i64
  %8557 = getelementptr inbounds i8, i8* %5883, i64 %8556
  %8558 = load i8, i8* %8557, align 1, !tbaa !394
  %8559 = insertelement <32 x i8> %8554, i8 %8558, i32 15
  %8560 = extractelement <32 x i32> %8479, i32 16
  %8561 = sext i32 %8560 to i64
  %8562 = getelementptr inbounds i8, i8* %5883, i64 %8561
  %8563 = load i8, i8* %8562, align 1, !tbaa !394
  %8564 = insertelement <32 x i8> %8559, i8 %8563, i32 16
  %8565 = extractelement <32 x i32> %8479, i32 17
  %8566 = sext i32 %8565 to i64
  %8567 = getelementptr inbounds i8, i8* %5883, i64 %8566
  %8568 = load i8, i8* %8567, align 1, !tbaa !394
  %8569 = insertelement <32 x i8> %8564, i8 %8568, i32 17
  %8570 = extractelement <32 x i32> %8479, i32 18
  %8571 = sext i32 %8570 to i64
  %8572 = getelementptr inbounds i8, i8* %5883, i64 %8571
  %8573 = load i8, i8* %8572, align 1, !tbaa !394
  %8574 = insertelement <32 x i8> %8569, i8 %8573, i32 18
  %8575 = extractelement <32 x i32> %8479, i32 19
  %8576 = sext i32 %8575 to i64
  %8577 = getelementptr inbounds i8, i8* %5883, i64 %8576
  %8578 = load i8, i8* %8577, align 1, !tbaa !394
  %8579 = insertelement <32 x i8> %8574, i8 %8578, i32 19
  %8580 = extractelement <32 x i32> %8479, i32 20
  %8581 = sext i32 %8580 to i64
  %8582 = getelementptr inbounds i8, i8* %5883, i64 %8581
  %8583 = load i8, i8* %8582, align 1, !tbaa !394
  %8584 = insertelement <32 x i8> %8579, i8 %8583, i32 20
  %8585 = extractelement <32 x i32> %8479, i32 21
  %8586 = sext i32 %8585 to i64
  %8587 = getelementptr inbounds i8, i8* %5883, i64 %8586
  %8588 = load i8, i8* %8587, align 1, !tbaa !394
  %8589 = insertelement <32 x i8> %8584, i8 %8588, i32 21
  %8590 = extractelement <32 x i32> %8479, i32 22
  %8591 = sext i32 %8590 to i64
  %8592 = getelementptr inbounds i8, i8* %5883, i64 %8591
  %8593 = load i8, i8* %8592, align 1, !tbaa !394
  %8594 = insertelement <32 x i8> %8589, i8 %8593, i32 22
  %8595 = extractelement <32 x i32> %8479, i32 23
  %8596 = sext i32 %8595 to i64
  %8597 = getelementptr inbounds i8, i8* %5883, i64 %8596
  %8598 = load i8, i8* %8597, align 1, !tbaa !394
  %8599 = insertelement <32 x i8> %8594, i8 %8598, i32 23
  %8600 = extractelement <32 x i32> %8479, i32 24
  %8601 = sext i32 %8600 to i64
  %8602 = getelementptr inbounds i8, i8* %5883, i64 %8601
  %8603 = load i8, i8* %8602, align 1, !tbaa !394
  %8604 = insertelement <32 x i8> %8599, i8 %8603, i32 24
  %8605 = extractelement <32 x i32> %8479, i32 25
  %8606 = sext i32 %8605 to i64
  %8607 = getelementptr inbounds i8, i8* %5883, i64 %8606
  %8608 = load i8, i8* %8607, align 1, !tbaa !394
  %8609 = insertelement <32 x i8> %8604, i8 %8608, i32 25
  %8610 = extractelement <32 x i32> %8479, i32 26
  %8611 = sext i32 %8610 to i64
  %8612 = getelementptr inbounds i8, i8* %5883, i64 %8611
  %8613 = load i8, i8* %8612, align 1, !tbaa !394
  %8614 = insertelement <32 x i8> %8609, i8 %8613, i32 26
  %8615 = extractelement <32 x i32> %8479, i32 27
  %8616 = sext i32 %8615 to i64
  %8617 = getelementptr inbounds i8, i8* %5883, i64 %8616
  %8618 = load i8, i8* %8617, align 1, !tbaa !394
  %8619 = insertelement <32 x i8> %8614, i8 %8618, i32 27
  %8620 = extractelement <32 x i32> %8479, i32 28
  %8621 = sext i32 %8620 to i64
  %8622 = getelementptr inbounds i8, i8* %5883, i64 %8621
  %8623 = load i8, i8* %8622, align 1, !tbaa !394
  %8624 = insertelement <32 x i8> %8619, i8 %8623, i32 28
  %8625 = extractelement <32 x i32> %8479, i32 29
  %8626 = sext i32 %8625 to i64
  %8627 = getelementptr inbounds i8, i8* %5883, i64 %8626
  %8628 = load i8, i8* %8627, align 1, !tbaa !394
  %8629 = insertelement <32 x i8> %8624, i8 %8628, i32 29
  %8630 = extractelement <32 x i32> %8479, i32 30
  %8631 = sext i32 %8630 to i64
  %8632 = getelementptr inbounds i8, i8* %5883, i64 %8631
  %8633 = load i8, i8* %8632, align 1, !tbaa !394
  %8634 = insertelement <32 x i8> %8629, i8 %8633, i32 30
  %8635 = extractelement <32 x i32> %8479, i32 31
  %8636 = sext i32 %8635 to i64
  %8637 = getelementptr inbounds i8, i8* %5883, i64 %8636
  %8638 = load i8, i8* %8637, align 1, !tbaa !394
  %8639 = insertelement <32 x i8> %8634, i8 %8638, i32 31
  %8640 = add nsw <32 x i32> %t182153, %t235157
  %8641 = extractelement <32 x i32> %8640, i32 0
  %8642 = sext i32 %8641 to i64
  %8643 = getelementptr inbounds i8, i8* %5883, i64 %8642
  %8644 = load i8, i8* %8643, align 1, !tbaa !394
  %8645 = insertelement <32 x i8> undef, i8 %8644, i32 0
  %8646 = extractelement <32 x i32> %8640, i32 1
  %8647 = sext i32 %8646 to i64
  %8648 = getelementptr inbounds i8, i8* %5883, i64 %8647
  %8649 = load i8, i8* %8648, align 1, !tbaa !394
  %8650 = insertelement <32 x i8> %8645, i8 %8649, i32 1
  %8651 = extractelement <32 x i32> %8640, i32 2
  %8652 = sext i32 %8651 to i64
  %8653 = getelementptr inbounds i8, i8* %5883, i64 %8652
  %8654 = load i8, i8* %8653, align 1, !tbaa !394
  %8655 = insertelement <32 x i8> %8650, i8 %8654, i32 2
  %8656 = extractelement <32 x i32> %8640, i32 3
  %8657 = sext i32 %8656 to i64
  %8658 = getelementptr inbounds i8, i8* %5883, i64 %8657
  %8659 = load i8, i8* %8658, align 1, !tbaa !394
  %8660 = insertelement <32 x i8> %8655, i8 %8659, i32 3
  %8661 = extractelement <32 x i32> %8640, i32 4
  %8662 = sext i32 %8661 to i64
  %8663 = getelementptr inbounds i8, i8* %5883, i64 %8662
  %8664 = load i8, i8* %8663, align 1, !tbaa !394
  %8665 = insertelement <32 x i8> %8660, i8 %8664, i32 4
  %8666 = extractelement <32 x i32> %8640, i32 5
  %8667 = sext i32 %8666 to i64
  %8668 = getelementptr inbounds i8, i8* %5883, i64 %8667
  %8669 = load i8, i8* %8668, align 1, !tbaa !394
  %8670 = insertelement <32 x i8> %8665, i8 %8669, i32 5
  %8671 = extractelement <32 x i32> %8640, i32 6
  %8672 = sext i32 %8671 to i64
  %8673 = getelementptr inbounds i8, i8* %5883, i64 %8672
  %8674 = load i8, i8* %8673, align 1, !tbaa !394
  %8675 = insertelement <32 x i8> %8670, i8 %8674, i32 6
  %8676 = extractelement <32 x i32> %8640, i32 7
  %8677 = sext i32 %8676 to i64
  %8678 = getelementptr inbounds i8, i8* %5883, i64 %8677
  %8679 = load i8, i8* %8678, align 1, !tbaa !394
  %8680 = insertelement <32 x i8> %8675, i8 %8679, i32 7
  %8681 = extractelement <32 x i32> %8640, i32 8
  %8682 = sext i32 %8681 to i64
  %8683 = getelementptr inbounds i8, i8* %5883, i64 %8682
  %8684 = load i8, i8* %8683, align 1, !tbaa !394
  %8685 = insertelement <32 x i8> %8680, i8 %8684, i32 8
  %8686 = extractelement <32 x i32> %8640, i32 9
  %8687 = sext i32 %8686 to i64
  %8688 = getelementptr inbounds i8, i8* %5883, i64 %8687
  %8689 = load i8, i8* %8688, align 1, !tbaa !394
  %8690 = insertelement <32 x i8> %8685, i8 %8689, i32 9
  %8691 = extractelement <32 x i32> %8640, i32 10
  %8692 = sext i32 %8691 to i64
  %8693 = getelementptr inbounds i8, i8* %5883, i64 %8692
  %8694 = load i8, i8* %8693, align 1, !tbaa !394
  %8695 = insertelement <32 x i8> %8690, i8 %8694, i32 10
  %8696 = extractelement <32 x i32> %8640, i32 11
  %8697 = sext i32 %8696 to i64
  %8698 = getelementptr inbounds i8, i8* %5883, i64 %8697
  %8699 = load i8, i8* %8698, align 1, !tbaa !394
  %8700 = insertelement <32 x i8> %8695, i8 %8699, i32 11
  %8701 = extractelement <32 x i32> %8640, i32 12
  %8702 = sext i32 %8701 to i64
  %8703 = getelementptr inbounds i8, i8* %5883, i64 %8702
  %8704 = load i8, i8* %8703, align 1, !tbaa !394
  %8705 = insertelement <32 x i8> %8700, i8 %8704, i32 12
  %8706 = extractelement <32 x i32> %8640, i32 13
  %8707 = sext i32 %8706 to i64
  %8708 = getelementptr inbounds i8, i8* %5883, i64 %8707
  %8709 = load i8, i8* %8708, align 1, !tbaa !394
  %8710 = insertelement <32 x i8> %8705, i8 %8709, i32 13
  %8711 = extractelement <32 x i32> %8640, i32 14
  %8712 = sext i32 %8711 to i64
  %8713 = getelementptr inbounds i8, i8* %5883, i64 %8712
  %8714 = load i8, i8* %8713, align 1, !tbaa !394
  %8715 = insertelement <32 x i8> %8710, i8 %8714, i32 14
  %8716 = extractelement <32 x i32> %8640, i32 15
  %8717 = sext i32 %8716 to i64
  %8718 = getelementptr inbounds i8, i8* %5883, i64 %8717
  %8719 = load i8, i8* %8718, align 1, !tbaa !394
  %8720 = insertelement <32 x i8> %8715, i8 %8719, i32 15
  %8721 = extractelement <32 x i32> %8640, i32 16
  %8722 = sext i32 %8721 to i64
  %8723 = getelementptr inbounds i8, i8* %5883, i64 %8722
  %8724 = load i8, i8* %8723, align 1, !tbaa !394
  %8725 = insertelement <32 x i8> %8720, i8 %8724, i32 16
  %8726 = extractelement <32 x i32> %8640, i32 17
  %8727 = sext i32 %8726 to i64
  %8728 = getelementptr inbounds i8, i8* %5883, i64 %8727
  %8729 = load i8, i8* %8728, align 1, !tbaa !394
  %8730 = insertelement <32 x i8> %8725, i8 %8729, i32 17
  %8731 = extractelement <32 x i32> %8640, i32 18
  %8732 = sext i32 %8731 to i64
  %8733 = getelementptr inbounds i8, i8* %5883, i64 %8732
  %8734 = load i8, i8* %8733, align 1, !tbaa !394
  %8735 = insertelement <32 x i8> %8730, i8 %8734, i32 18
  %8736 = extractelement <32 x i32> %8640, i32 19
  %8737 = sext i32 %8736 to i64
  %8738 = getelementptr inbounds i8, i8* %5883, i64 %8737
  %8739 = load i8, i8* %8738, align 1, !tbaa !394
  %8740 = insertelement <32 x i8> %8735, i8 %8739, i32 19
  %8741 = extractelement <32 x i32> %8640, i32 20
  %8742 = sext i32 %8741 to i64
  %8743 = getelementptr inbounds i8, i8* %5883, i64 %8742
  %8744 = load i8, i8* %8743, align 1, !tbaa !394
  %8745 = insertelement <32 x i8> %8740, i8 %8744, i32 20
  %8746 = extractelement <32 x i32> %8640, i32 21
  %8747 = sext i32 %8746 to i64
  %8748 = getelementptr inbounds i8, i8* %5883, i64 %8747
  %8749 = load i8, i8* %8748, align 1, !tbaa !394
  %8750 = insertelement <32 x i8> %8745, i8 %8749, i32 21
  %8751 = extractelement <32 x i32> %8640, i32 22
  %8752 = sext i32 %8751 to i64
  %8753 = getelementptr inbounds i8, i8* %5883, i64 %8752
  %8754 = load i8, i8* %8753, align 1, !tbaa !394
  %8755 = insertelement <32 x i8> %8750, i8 %8754, i32 22
  %8756 = extractelement <32 x i32> %8640, i32 23
  %8757 = sext i32 %8756 to i64
  %8758 = getelementptr inbounds i8, i8* %5883, i64 %8757
  %8759 = load i8, i8* %8758, align 1, !tbaa !394
  %8760 = insertelement <32 x i8> %8755, i8 %8759, i32 23
  %8761 = extractelement <32 x i32> %8640, i32 24
  %8762 = sext i32 %8761 to i64
  %8763 = getelementptr inbounds i8, i8* %5883, i64 %8762
  %8764 = load i8, i8* %8763, align 1, !tbaa !394
  %8765 = insertelement <32 x i8> %8760, i8 %8764, i32 24
  %8766 = extractelement <32 x i32> %8640, i32 25
  %8767 = sext i32 %8766 to i64
  %8768 = getelementptr inbounds i8, i8* %5883, i64 %8767
  %8769 = load i8, i8* %8768, align 1, !tbaa !394
  %8770 = insertelement <32 x i8> %8765, i8 %8769, i32 25
  %8771 = extractelement <32 x i32> %8640, i32 26
  %8772 = sext i32 %8771 to i64
  %8773 = getelementptr inbounds i8, i8* %5883, i64 %8772
  %8774 = load i8, i8* %8773, align 1, !tbaa !394
  %8775 = insertelement <32 x i8> %8770, i8 %8774, i32 26
  %8776 = extractelement <32 x i32> %8640, i32 27
  %8777 = sext i32 %8776 to i64
  %8778 = getelementptr inbounds i8, i8* %5883, i64 %8777
  %8779 = load i8, i8* %8778, align 1, !tbaa !394
  %8780 = insertelement <32 x i8> %8775, i8 %8779, i32 27
  %8781 = extractelement <32 x i32> %8640, i32 28
  %8782 = sext i32 %8781 to i64
  %8783 = getelementptr inbounds i8, i8* %5883, i64 %8782
  %8784 = load i8, i8* %8783, align 1, !tbaa !394
  %8785 = insertelement <32 x i8> %8780, i8 %8784, i32 28
  %8786 = extractelement <32 x i32> %8640, i32 29
  %8787 = sext i32 %8786 to i64
  %8788 = getelementptr inbounds i8, i8* %5883, i64 %8787
  %8789 = load i8, i8* %8788, align 1, !tbaa !394
  %8790 = insertelement <32 x i8> %8785, i8 %8789, i32 29
  %8791 = extractelement <32 x i32> %8640, i32 30
  %8792 = sext i32 %8791 to i64
  %8793 = getelementptr inbounds i8, i8* %5883, i64 %8792
  %8794 = load i8, i8* %8793, align 1, !tbaa !394
  %8795 = insertelement <32 x i8> %8790, i8 %8794, i32 30
  %8796 = extractelement <32 x i32> %8640, i32 31
  %8797 = sext i32 %8796 to i64
  %8798 = getelementptr inbounds i8, i8* %5883, i64 %8797
  %8799 = load i8, i8* %8798, align 1, !tbaa !394
  %8800 = insertelement <32 x i8> %8795, i8 %8799, i32 31
  %8801 = tail call <32 x i8> @hydride.node.1(<32 x i8> %8317, <32 x i8> %t181.s152, <32 x i8> %t183.s154, <32 x i8> %8478, <32 x i8> %t185.s155, <32 x i8> %t186.s156, <32 x i8> %8317, <32 x i8> %8478, <32 x i8> %8639, <32 x i8> %8800) #10
  %8802 = sext i32 %output.s0.x.v0.base.s149 to i64
  %8803 = add nsw i64 %8802, %7470
  %8804 = getelementptr inbounds i8, i8* %5896, i64 %8803
  %8805 = bitcast i8* %8804 to <32 x i8>*
  store <32 x i8> %8801, <32 x i8>* %8805, align 1, !tbaa !397
  %8806 = add nuw nsw i32 %output.s0.x.x148, 1
  %.not245 = icmp eq i32 %8806, %b163
  br i1 %.not245, label %"end for output.s0.x.x147", label %"for output.s0.x.x146"

"end for output.s0.x.x147":                       ; preds = %"for output.s0.x.x146", %"for output.s0.y.rebased139.end for output.s0.x.x147_crit_edge"
  %.pre-phi = phi i32 [ %.pre489, %"for output.s0.y.rebased139.end for output.s0.x.x147_crit_edge" ], [ %7467, %"for output.s0.x.x146" ]
  br i1 %6121, label %"for output.s0.x.x.rebased165.preheader", label %"end for output.s0.x.x.rebased166", !prof !393

"for output.s0.x.x.rebased165.preheader":         ; preds = %"end for output.s0.x.x147"
  %8807 = sext i32 %t264145 to i64
  br label %"for output.s0.x.x.rebased165"

"for output.s0.x.x.rebased165":                   ; preds = %"for output.s0.x.x.rebased165.preheader", %"for output.s0.x.x.rebased165"
  %indvars.iv476 = phi i64 [ 0, %"for output.s0.x.x.rebased165.preheader" ], [ %indvars.iv.next477, %"for output.s0.x.x.rebased165" ]
  %output.s0.x.x.rebased167 = phi i32 [ 0, %"for output.s0.x.x.rebased165.preheader" ], [ %8840, %"for output.s0.x.x.rebased165" ]
  %8808 = add nsw i32 %output.s0.x.x.rebased167, %b163
  %8809 = shl nsw i32 %8808, 5
  %t267162 = add i32 %8809, %t272159
  %t190168 = add i32 %t267162, %7459
  %8810 = sext i32 %t190168 to i64
  %8811 = getelementptr inbounds i8, i8* %5883, i64 %8810
  %8812 = getelementptr inbounds i8, i8* %8811, i64 -1
  %8813 = bitcast i8* %8812 to <32 x i8>*
  %t191.s169 = load <32 x i8>, <32 x i8>* %8813, align 1, !tbaa !394
  %8814 = getelementptr inbounds i8, i8* %8811, i64 1
  %8815 = bitcast i8* %8814 to <32 x i8>*
  %t192.s170 = load <32 x i8>, <32 x i8>* %8815, align 1, !tbaa !394
  %t193171 = add i32 %t267162, %7457
  %8816 = sext i32 %t193171 to i64
  %8817 = getelementptr inbounds i8, i8* %5883, i64 %8816
  %8818 = getelementptr inbounds i8, i8* %8817, i64 -1
  %8819 = bitcast i8* %8818 to <32 x i8>*
  %t194.s172 = load <32 x i8>, <32 x i8>* %8819, align 1, !tbaa !394
  %8820 = getelementptr inbounds i8, i8* %8817, i64 1
  %8821 = bitcast i8* %8820 to <32 x i8>*
  %t195.s173 = load <32 x i8>, <32 x i8>* %8821, align 1, !tbaa !394
  %t196174 = add i32 %t267162, %.pre-phi
  %8822 = bitcast i8* %8811 to <32 x i8>*
  %8823 = load <32 x i8>, <32 x i8>* %8822, align 1, !tbaa !394
  %8824 = bitcast i8* %8817 to <32 x i8>*
  %8825 = load <32 x i8>, <32 x i8>* %8824, align 1, !tbaa !394
  %8826 = sext i32 %t196174 to i64
  %8827 = getelementptr inbounds i8, i8* %5883, i64 %8826
  %8828 = getelementptr inbounds i8, i8* %8827, i64 -1
  %8829 = bitcast i8* %8828 to <32 x i8>*
  %8830 = load <32 x i8>, <32 x i8>* %8829, align 1, !tbaa !394
  %8831 = getelementptr inbounds i8, i8* %8827, i64 1
  %8832 = bitcast i8* %8831 to <32 x i8>*
  %8833 = load <32 x i8>, <32 x i8>* %8832, align 1, !tbaa !394
  %8834 = tail call <32 x i8> @hydride.node.2(<32 x i8> %8823, <32 x i8> %t191.s169, <32 x i8> %t192.s170, <32 x i8> %8825, <32 x i8> %t194.s172, <32 x i8> %t195.s173, <32 x i8> %8830, <32 x i8> %8833, <32 x i8> %8830, <32 x i8> %8833) #10
  %8835 = add nsw i64 %indvars.iv476, %6122
  %8836 = shl nsw i64 %8835, 5
  %8837 = add nsw i64 %8836, %8807
  %8838 = getelementptr inbounds i8, i8* %5896, i64 %8837
  %8839 = bitcast i8* %8838 to <32 x i8>*
  store <32 x i8> %8834, <32 x i8>* %8839, align 1, !tbaa !397
  %indvars.iv.next477 = add nuw nsw i64 %indvars.iv476, 1
  %8840 = add nuw nsw i32 %output.s0.x.x.rebased167, 1
  %8841 = icmp eq i64 %indvars.iv.next477, %zext478
  br i1 %8841, label %"end for output.s0.x.x.rebased166", label %"for output.s0.x.x.rebased165"

"end for output.s0.x.x.rebased166":               ; preds = %"for output.s0.x.x.rebased165", %"end for output.s0.x.x147"
  br i1 %6123, label %"for output.s0.x.x.rebased180.preheader", label %"end for output.s0.x.x.rebased181", !prof !393

"for output.s0.x.x.rebased180.preheader":         ; preds = %"end for output.s0.x.x.rebased166"
  %8842 = insertelement <32 x i32> undef, i32 %t261144, i32 0
  %8843 = shufflevector <32 x i32> %8842, <32 x i32> undef, <32 x i32> zeroinitializer
  %8844 = insertelement <32 x i32> undef, i32 %t262143, i32 0
  %8845 = shufflevector <32 x i32> %8844, <32 x i32> undef, <32 x i32> zeroinitializer
  %8846 = sub nsw i32 %.pre-phi, %5890
  %8847 = insertelement <32 x i32> undef, i32 %8846, i32 0
  %t237191 = shufflevector <32 x i32> %8847, <32 x i32> undef, <32 x i32> zeroinitializer
  %8848 = sext i32 %t264145 to i64
  br label %"for output.s0.x.x.rebased180"

"for output.s0.x.x.rebased180":                   ; preds = %"for output.s0.x.x.rebased180.preheader", %"for output.s0.x.x.rebased180"
  %output.s0.x.x.rebased182 = phi i32 [ %10179, %"for output.s0.x.x.rebased180" ], [ 0, %"for output.s0.x.x.rebased180.preheader" ]
  %8849 = add nsw i32 %output.s0.x.x.rebased182, %t251135
  %a173 = shl nsw i32 %8849, 5
  %8850 = icmp sgt i32 %a164.pre-phi, %a173
  %output.s0.x.v0.base.s183 = select i1 %8850, i32 %a173, i32 %a164.pre-phi
  %8851 = add nsw i32 %output.s0.x.v0.base.s183, %5903
  %8852 = insertelement <32 x i32> undef, i32 %8851, i32 0
  %8853 = shufflevector <32 x i32> %8852, <32 x i32> undef, <32 x i32> zeroinitializer
  %a175 = add nsw <32 x i32> %8853, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %8854 = shufflevector <32 x i32> %a175, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %8855 = icmp sgt <16 x i32> %6118, %8854
  %8856 = shufflevector <32 x i32> %a175, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %8857 = icmp sgt <16 x i32> %6118, %8856
  %8858 = select <16 x i1> %8855, <16 x i32> %8854, <16 x i32> %6118
  %8859 = select <16 x i1> %8857, <16 x i32> %8856, <16 x i32> %6118
  %8860 = icmp sgt <16 x i32> %8858, %6120
  %8861 = icmp sgt <16 x i32> %8859, %6120
  %8862 = select <16 x i1> %8860, <16 x i32> %8858, <16 x i32> %6120
  %8863 = select <16 x i1> %8861, <16 x i32> %8859, <16 x i32> %6120
  %t199184 = shufflevector <16 x i32> %8862, <16 x i32> %8863, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %8864 = add nsw i32 %8851, -1
  %8865 = insertelement <32 x i32> undef, i32 %8864, i32 0
  %8866 = shufflevector <32 x i32> %8865, <32 x i32> undef, <32 x i32> zeroinitializer
  %a177 = add nsw <32 x i32> %8866, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %8867 = shufflevector <32 x i32> %a177, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %8868 = icmp sgt <16 x i32> %6118, %8867
  %8869 = shufflevector <32 x i32> %a177, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %8870 = icmp sgt <16 x i32> %6118, %8869
  %8871 = select <16 x i1> %8868, <16 x i32> %8867, <16 x i32> %6118
  %8872 = select <16 x i1> %8870, <16 x i32> %8869, <16 x i32> %6118
  %8873 = icmp sgt <16 x i32> %8871, %6120
  %8874 = icmp sgt <16 x i32> %8872, %6120
  %8875 = select <16 x i1> %8873, <16 x i32> %8871, <16 x i32> %6120
  %8876 = select <16 x i1> %8874, <16 x i32> %8872, <16 x i32> %6120
  %t202185 = shufflevector <16 x i32> %8875, <16 x i32> %8876, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %8877 = add nsw <32 x i32> %t202185, %8843
  %8878 = extractelement <32 x i32> %8877, i32 0
  %8879 = sext i32 %8878 to i64
  %8880 = getelementptr inbounds i8, i8* %5883, i64 %8879
  %8881 = load i8, i8* %8880, align 1, !tbaa !394
  %8882 = insertelement <32 x i8> undef, i8 %8881, i32 0
  %8883 = extractelement <32 x i32> %8877, i32 1
  %8884 = sext i32 %8883 to i64
  %8885 = getelementptr inbounds i8, i8* %5883, i64 %8884
  %8886 = load i8, i8* %8885, align 1, !tbaa !394
  %8887 = insertelement <32 x i8> %8882, i8 %8886, i32 1
  %8888 = extractelement <32 x i32> %8877, i32 2
  %8889 = sext i32 %8888 to i64
  %8890 = getelementptr inbounds i8, i8* %5883, i64 %8889
  %8891 = load i8, i8* %8890, align 1, !tbaa !394
  %8892 = insertelement <32 x i8> %8887, i8 %8891, i32 2
  %8893 = extractelement <32 x i32> %8877, i32 3
  %8894 = sext i32 %8893 to i64
  %8895 = getelementptr inbounds i8, i8* %5883, i64 %8894
  %8896 = load i8, i8* %8895, align 1, !tbaa !394
  %8897 = insertelement <32 x i8> %8892, i8 %8896, i32 3
  %8898 = extractelement <32 x i32> %8877, i32 4
  %8899 = sext i32 %8898 to i64
  %8900 = getelementptr inbounds i8, i8* %5883, i64 %8899
  %8901 = load i8, i8* %8900, align 1, !tbaa !394
  %8902 = insertelement <32 x i8> %8897, i8 %8901, i32 4
  %8903 = extractelement <32 x i32> %8877, i32 5
  %8904 = sext i32 %8903 to i64
  %8905 = getelementptr inbounds i8, i8* %5883, i64 %8904
  %8906 = load i8, i8* %8905, align 1, !tbaa !394
  %8907 = insertelement <32 x i8> %8902, i8 %8906, i32 5
  %8908 = extractelement <32 x i32> %8877, i32 6
  %8909 = sext i32 %8908 to i64
  %8910 = getelementptr inbounds i8, i8* %5883, i64 %8909
  %8911 = load i8, i8* %8910, align 1, !tbaa !394
  %8912 = insertelement <32 x i8> %8907, i8 %8911, i32 6
  %8913 = extractelement <32 x i32> %8877, i32 7
  %8914 = sext i32 %8913 to i64
  %8915 = getelementptr inbounds i8, i8* %5883, i64 %8914
  %8916 = load i8, i8* %8915, align 1, !tbaa !394
  %8917 = insertelement <32 x i8> %8912, i8 %8916, i32 7
  %8918 = extractelement <32 x i32> %8877, i32 8
  %8919 = sext i32 %8918 to i64
  %8920 = getelementptr inbounds i8, i8* %5883, i64 %8919
  %8921 = load i8, i8* %8920, align 1, !tbaa !394
  %8922 = insertelement <32 x i8> %8917, i8 %8921, i32 8
  %8923 = extractelement <32 x i32> %8877, i32 9
  %8924 = sext i32 %8923 to i64
  %8925 = getelementptr inbounds i8, i8* %5883, i64 %8924
  %8926 = load i8, i8* %8925, align 1, !tbaa !394
  %8927 = insertelement <32 x i8> %8922, i8 %8926, i32 9
  %8928 = extractelement <32 x i32> %8877, i32 10
  %8929 = sext i32 %8928 to i64
  %8930 = getelementptr inbounds i8, i8* %5883, i64 %8929
  %8931 = load i8, i8* %8930, align 1, !tbaa !394
  %8932 = insertelement <32 x i8> %8927, i8 %8931, i32 10
  %8933 = extractelement <32 x i32> %8877, i32 11
  %8934 = sext i32 %8933 to i64
  %8935 = getelementptr inbounds i8, i8* %5883, i64 %8934
  %8936 = load i8, i8* %8935, align 1, !tbaa !394
  %8937 = insertelement <32 x i8> %8932, i8 %8936, i32 11
  %8938 = extractelement <32 x i32> %8877, i32 12
  %8939 = sext i32 %8938 to i64
  %8940 = getelementptr inbounds i8, i8* %5883, i64 %8939
  %8941 = load i8, i8* %8940, align 1, !tbaa !394
  %8942 = insertelement <32 x i8> %8937, i8 %8941, i32 12
  %8943 = extractelement <32 x i32> %8877, i32 13
  %8944 = sext i32 %8943 to i64
  %8945 = getelementptr inbounds i8, i8* %5883, i64 %8944
  %8946 = load i8, i8* %8945, align 1, !tbaa !394
  %8947 = insertelement <32 x i8> %8942, i8 %8946, i32 13
  %8948 = extractelement <32 x i32> %8877, i32 14
  %8949 = sext i32 %8948 to i64
  %8950 = getelementptr inbounds i8, i8* %5883, i64 %8949
  %8951 = load i8, i8* %8950, align 1, !tbaa !394
  %8952 = insertelement <32 x i8> %8947, i8 %8951, i32 14
  %8953 = extractelement <32 x i32> %8877, i32 15
  %8954 = sext i32 %8953 to i64
  %8955 = getelementptr inbounds i8, i8* %5883, i64 %8954
  %8956 = load i8, i8* %8955, align 1, !tbaa !394
  %8957 = insertelement <32 x i8> %8952, i8 %8956, i32 15
  %8958 = extractelement <32 x i32> %8877, i32 16
  %8959 = sext i32 %8958 to i64
  %8960 = getelementptr inbounds i8, i8* %5883, i64 %8959
  %8961 = load i8, i8* %8960, align 1, !tbaa !394
  %8962 = insertelement <32 x i8> %8957, i8 %8961, i32 16
  %8963 = extractelement <32 x i32> %8877, i32 17
  %8964 = sext i32 %8963 to i64
  %8965 = getelementptr inbounds i8, i8* %5883, i64 %8964
  %8966 = load i8, i8* %8965, align 1, !tbaa !394
  %8967 = insertelement <32 x i8> %8962, i8 %8966, i32 17
  %8968 = extractelement <32 x i32> %8877, i32 18
  %8969 = sext i32 %8968 to i64
  %8970 = getelementptr inbounds i8, i8* %5883, i64 %8969
  %8971 = load i8, i8* %8970, align 1, !tbaa !394
  %8972 = insertelement <32 x i8> %8967, i8 %8971, i32 18
  %8973 = extractelement <32 x i32> %8877, i32 19
  %8974 = sext i32 %8973 to i64
  %8975 = getelementptr inbounds i8, i8* %5883, i64 %8974
  %8976 = load i8, i8* %8975, align 1, !tbaa !394
  %8977 = insertelement <32 x i8> %8972, i8 %8976, i32 19
  %8978 = extractelement <32 x i32> %8877, i32 20
  %8979 = sext i32 %8978 to i64
  %8980 = getelementptr inbounds i8, i8* %5883, i64 %8979
  %8981 = load i8, i8* %8980, align 1, !tbaa !394
  %8982 = insertelement <32 x i8> %8977, i8 %8981, i32 20
  %8983 = extractelement <32 x i32> %8877, i32 21
  %8984 = sext i32 %8983 to i64
  %8985 = getelementptr inbounds i8, i8* %5883, i64 %8984
  %8986 = load i8, i8* %8985, align 1, !tbaa !394
  %8987 = insertelement <32 x i8> %8982, i8 %8986, i32 21
  %8988 = extractelement <32 x i32> %8877, i32 22
  %8989 = sext i32 %8988 to i64
  %8990 = getelementptr inbounds i8, i8* %5883, i64 %8989
  %8991 = load i8, i8* %8990, align 1, !tbaa !394
  %8992 = insertelement <32 x i8> %8987, i8 %8991, i32 22
  %8993 = extractelement <32 x i32> %8877, i32 23
  %8994 = sext i32 %8993 to i64
  %8995 = getelementptr inbounds i8, i8* %5883, i64 %8994
  %8996 = load i8, i8* %8995, align 1, !tbaa !394
  %8997 = insertelement <32 x i8> %8992, i8 %8996, i32 23
  %8998 = extractelement <32 x i32> %8877, i32 24
  %8999 = sext i32 %8998 to i64
  %9000 = getelementptr inbounds i8, i8* %5883, i64 %8999
  %9001 = load i8, i8* %9000, align 1, !tbaa !394
  %9002 = insertelement <32 x i8> %8997, i8 %9001, i32 24
  %9003 = extractelement <32 x i32> %8877, i32 25
  %9004 = sext i32 %9003 to i64
  %9005 = getelementptr inbounds i8, i8* %5883, i64 %9004
  %9006 = load i8, i8* %9005, align 1, !tbaa !394
  %9007 = insertelement <32 x i8> %9002, i8 %9006, i32 25
  %9008 = extractelement <32 x i32> %8877, i32 26
  %9009 = sext i32 %9008 to i64
  %9010 = getelementptr inbounds i8, i8* %5883, i64 %9009
  %9011 = load i8, i8* %9010, align 1, !tbaa !394
  %9012 = insertelement <32 x i8> %9007, i8 %9011, i32 26
  %9013 = extractelement <32 x i32> %8877, i32 27
  %9014 = sext i32 %9013 to i64
  %9015 = getelementptr inbounds i8, i8* %5883, i64 %9014
  %9016 = load i8, i8* %9015, align 1, !tbaa !394
  %9017 = insertelement <32 x i8> %9012, i8 %9016, i32 27
  %9018 = extractelement <32 x i32> %8877, i32 28
  %9019 = sext i32 %9018 to i64
  %9020 = getelementptr inbounds i8, i8* %5883, i64 %9019
  %9021 = load i8, i8* %9020, align 1, !tbaa !394
  %9022 = insertelement <32 x i8> %9017, i8 %9021, i32 28
  %9023 = extractelement <32 x i32> %8877, i32 29
  %9024 = sext i32 %9023 to i64
  %9025 = getelementptr inbounds i8, i8* %5883, i64 %9024
  %9026 = load i8, i8* %9025, align 1, !tbaa !394
  %9027 = insertelement <32 x i8> %9022, i8 %9026, i32 29
  %9028 = extractelement <32 x i32> %8877, i32 30
  %9029 = sext i32 %9028 to i64
  %9030 = getelementptr inbounds i8, i8* %5883, i64 %9029
  %9031 = load i8, i8* %9030, align 1, !tbaa !394
  %9032 = insertelement <32 x i8> %9027, i8 %9031, i32 30
  %9033 = extractelement <32 x i32> %8877, i32 31
  %9034 = sext i32 %9033 to i64
  %9035 = getelementptr inbounds i8, i8* %5883, i64 %9034
  %9036 = load i8, i8* %9035, align 1, !tbaa !394
  %t203.s186 = insertelement <32 x i8> %9032, i8 %9036, i32 31
  %9037 = add nsw i32 %8851, 1
  %9038 = insertelement <32 x i32> undef, i32 %9037, i32 0
  %9039 = shufflevector <32 x i32> %9038, <32 x i32> undef, <32 x i32> zeroinitializer
  %a179 = add nsw <32 x i32> %9039, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %9040 = shufflevector <32 x i32> %a179, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %9041 = icmp sgt <16 x i32> %6118, %9040
  %9042 = shufflevector <32 x i32> %a179, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %9043 = icmp sgt <16 x i32> %6118, %9042
  %9044 = select <16 x i1> %9041, <16 x i32> %9040, <16 x i32> %6118
  %9045 = select <16 x i1> %9043, <16 x i32> %9042, <16 x i32> %6118
  %9046 = icmp sgt <16 x i32> %9044, %6120
  %9047 = icmp sgt <16 x i32> %9045, %6120
  %9048 = select <16 x i1> %9046, <16 x i32> %9044, <16 x i32> %6120
  %9049 = select <16 x i1> %9047, <16 x i32> %9045, <16 x i32> %6120
  %t204187 = shufflevector <16 x i32> %9048, <16 x i32> %9049, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %9050 = add nsw <32 x i32> %t204187, %8843
  %9051 = extractelement <32 x i32> %9050, i32 0
  %9052 = sext i32 %9051 to i64
  %9053 = getelementptr inbounds i8, i8* %5883, i64 %9052
  %9054 = load i8, i8* %9053, align 1, !tbaa !394
  %9055 = insertelement <32 x i8> undef, i8 %9054, i32 0
  %9056 = extractelement <32 x i32> %9050, i32 1
  %9057 = sext i32 %9056 to i64
  %9058 = getelementptr inbounds i8, i8* %5883, i64 %9057
  %9059 = load i8, i8* %9058, align 1, !tbaa !394
  %9060 = insertelement <32 x i8> %9055, i8 %9059, i32 1
  %9061 = extractelement <32 x i32> %9050, i32 2
  %9062 = sext i32 %9061 to i64
  %9063 = getelementptr inbounds i8, i8* %5883, i64 %9062
  %9064 = load i8, i8* %9063, align 1, !tbaa !394
  %9065 = insertelement <32 x i8> %9060, i8 %9064, i32 2
  %9066 = extractelement <32 x i32> %9050, i32 3
  %9067 = sext i32 %9066 to i64
  %9068 = getelementptr inbounds i8, i8* %5883, i64 %9067
  %9069 = load i8, i8* %9068, align 1, !tbaa !394
  %9070 = insertelement <32 x i8> %9065, i8 %9069, i32 3
  %9071 = extractelement <32 x i32> %9050, i32 4
  %9072 = sext i32 %9071 to i64
  %9073 = getelementptr inbounds i8, i8* %5883, i64 %9072
  %9074 = load i8, i8* %9073, align 1, !tbaa !394
  %9075 = insertelement <32 x i8> %9070, i8 %9074, i32 4
  %9076 = extractelement <32 x i32> %9050, i32 5
  %9077 = sext i32 %9076 to i64
  %9078 = getelementptr inbounds i8, i8* %5883, i64 %9077
  %9079 = load i8, i8* %9078, align 1, !tbaa !394
  %9080 = insertelement <32 x i8> %9075, i8 %9079, i32 5
  %9081 = extractelement <32 x i32> %9050, i32 6
  %9082 = sext i32 %9081 to i64
  %9083 = getelementptr inbounds i8, i8* %5883, i64 %9082
  %9084 = load i8, i8* %9083, align 1, !tbaa !394
  %9085 = insertelement <32 x i8> %9080, i8 %9084, i32 6
  %9086 = extractelement <32 x i32> %9050, i32 7
  %9087 = sext i32 %9086 to i64
  %9088 = getelementptr inbounds i8, i8* %5883, i64 %9087
  %9089 = load i8, i8* %9088, align 1, !tbaa !394
  %9090 = insertelement <32 x i8> %9085, i8 %9089, i32 7
  %9091 = extractelement <32 x i32> %9050, i32 8
  %9092 = sext i32 %9091 to i64
  %9093 = getelementptr inbounds i8, i8* %5883, i64 %9092
  %9094 = load i8, i8* %9093, align 1, !tbaa !394
  %9095 = insertelement <32 x i8> %9090, i8 %9094, i32 8
  %9096 = extractelement <32 x i32> %9050, i32 9
  %9097 = sext i32 %9096 to i64
  %9098 = getelementptr inbounds i8, i8* %5883, i64 %9097
  %9099 = load i8, i8* %9098, align 1, !tbaa !394
  %9100 = insertelement <32 x i8> %9095, i8 %9099, i32 9
  %9101 = extractelement <32 x i32> %9050, i32 10
  %9102 = sext i32 %9101 to i64
  %9103 = getelementptr inbounds i8, i8* %5883, i64 %9102
  %9104 = load i8, i8* %9103, align 1, !tbaa !394
  %9105 = insertelement <32 x i8> %9100, i8 %9104, i32 10
  %9106 = extractelement <32 x i32> %9050, i32 11
  %9107 = sext i32 %9106 to i64
  %9108 = getelementptr inbounds i8, i8* %5883, i64 %9107
  %9109 = load i8, i8* %9108, align 1, !tbaa !394
  %9110 = insertelement <32 x i8> %9105, i8 %9109, i32 11
  %9111 = extractelement <32 x i32> %9050, i32 12
  %9112 = sext i32 %9111 to i64
  %9113 = getelementptr inbounds i8, i8* %5883, i64 %9112
  %9114 = load i8, i8* %9113, align 1, !tbaa !394
  %9115 = insertelement <32 x i8> %9110, i8 %9114, i32 12
  %9116 = extractelement <32 x i32> %9050, i32 13
  %9117 = sext i32 %9116 to i64
  %9118 = getelementptr inbounds i8, i8* %5883, i64 %9117
  %9119 = load i8, i8* %9118, align 1, !tbaa !394
  %9120 = insertelement <32 x i8> %9115, i8 %9119, i32 13
  %9121 = extractelement <32 x i32> %9050, i32 14
  %9122 = sext i32 %9121 to i64
  %9123 = getelementptr inbounds i8, i8* %5883, i64 %9122
  %9124 = load i8, i8* %9123, align 1, !tbaa !394
  %9125 = insertelement <32 x i8> %9120, i8 %9124, i32 14
  %9126 = extractelement <32 x i32> %9050, i32 15
  %9127 = sext i32 %9126 to i64
  %9128 = getelementptr inbounds i8, i8* %5883, i64 %9127
  %9129 = load i8, i8* %9128, align 1, !tbaa !394
  %9130 = insertelement <32 x i8> %9125, i8 %9129, i32 15
  %9131 = extractelement <32 x i32> %9050, i32 16
  %9132 = sext i32 %9131 to i64
  %9133 = getelementptr inbounds i8, i8* %5883, i64 %9132
  %9134 = load i8, i8* %9133, align 1, !tbaa !394
  %9135 = insertelement <32 x i8> %9130, i8 %9134, i32 16
  %9136 = extractelement <32 x i32> %9050, i32 17
  %9137 = sext i32 %9136 to i64
  %9138 = getelementptr inbounds i8, i8* %5883, i64 %9137
  %9139 = load i8, i8* %9138, align 1, !tbaa !394
  %9140 = insertelement <32 x i8> %9135, i8 %9139, i32 17
  %9141 = extractelement <32 x i32> %9050, i32 18
  %9142 = sext i32 %9141 to i64
  %9143 = getelementptr inbounds i8, i8* %5883, i64 %9142
  %9144 = load i8, i8* %9143, align 1, !tbaa !394
  %9145 = insertelement <32 x i8> %9140, i8 %9144, i32 18
  %9146 = extractelement <32 x i32> %9050, i32 19
  %9147 = sext i32 %9146 to i64
  %9148 = getelementptr inbounds i8, i8* %5883, i64 %9147
  %9149 = load i8, i8* %9148, align 1, !tbaa !394
  %9150 = insertelement <32 x i8> %9145, i8 %9149, i32 19
  %9151 = extractelement <32 x i32> %9050, i32 20
  %9152 = sext i32 %9151 to i64
  %9153 = getelementptr inbounds i8, i8* %5883, i64 %9152
  %9154 = load i8, i8* %9153, align 1, !tbaa !394
  %9155 = insertelement <32 x i8> %9150, i8 %9154, i32 20
  %9156 = extractelement <32 x i32> %9050, i32 21
  %9157 = sext i32 %9156 to i64
  %9158 = getelementptr inbounds i8, i8* %5883, i64 %9157
  %9159 = load i8, i8* %9158, align 1, !tbaa !394
  %9160 = insertelement <32 x i8> %9155, i8 %9159, i32 21
  %9161 = extractelement <32 x i32> %9050, i32 22
  %9162 = sext i32 %9161 to i64
  %9163 = getelementptr inbounds i8, i8* %5883, i64 %9162
  %9164 = load i8, i8* %9163, align 1, !tbaa !394
  %9165 = insertelement <32 x i8> %9160, i8 %9164, i32 22
  %9166 = extractelement <32 x i32> %9050, i32 23
  %9167 = sext i32 %9166 to i64
  %9168 = getelementptr inbounds i8, i8* %5883, i64 %9167
  %9169 = load i8, i8* %9168, align 1, !tbaa !394
  %9170 = insertelement <32 x i8> %9165, i8 %9169, i32 23
  %9171 = extractelement <32 x i32> %9050, i32 24
  %9172 = sext i32 %9171 to i64
  %9173 = getelementptr inbounds i8, i8* %5883, i64 %9172
  %9174 = load i8, i8* %9173, align 1, !tbaa !394
  %9175 = insertelement <32 x i8> %9170, i8 %9174, i32 24
  %9176 = extractelement <32 x i32> %9050, i32 25
  %9177 = sext i32 %9176 to i64
  %9178 = getelementptr inbounds i8, i8* %5883, i64 %9177
  %9179 = load i8, i8* %9178, align 1, !tbaa !394
  %9180 = insertelement <32 x i8> %9175, i8 %9179, i32 25
  %9181 = extractelement <32 x i32> %9050, i32 26
  %9182 = sext i32 %9181 to i64
  %9183 = getelementptr inbounds i8, i8* %5883, i64 %9182
  %9184 = load i8, i8* %9183, align 1, !tbaa !394
  %9185 = insertelement <32 x i8> %9180, i8 %9184, i32 26
  %9186 = extractelement <32 x i32> %9050, i32 27
  %9187 = sext i32 %9186 to i64
  %9188 = getelementptr inbounds i8, i8* %5883, i64 %9187
  %9189 = load i8, i8* %9188, align 1, !tbaa !394
  %9190 = insertelement <32 x i8> %9185, i8 %9189, i32 27
  %9191 = extractelement <32 x i32> %9050, i32 28
  %9192 = sext i32 %9191 to i64
  %9193 = getelementptr inbounds i8, i8* %5883, i64 %9192
  %9194 = load i8, i8* %9193, align 1, !tbaa !394
  %9195 = insertelement <32 x i8> %9190, i8 %9194, i32 28
  %9196 = extractelement <32 x i32> %9050, i32 29
  %9197 = sext i32 %9196 to i64
  %9198 = getelementptr inbounds i8, i8* %5883, i64 %9197
  %9199 = load i8, i8* %9198, align 1, !tbaa !394
  %9200 = insertelement <32 x i8> %9195, i8 %9199, i32 29
  %9201 = extractelement <32 x i32> %9050, i32 30
  %9202 = sext i32 %9201 to i64
  %9203 = getelementptr inbounds i8, i8* %5883, i64 %9202
  %9204 = load i8, i8* %9203, align 1, !tbaa !394
  %9205 = insertelement <32 x i8> %9200, i8 %9204, i32 30
  %9206 = extractelement <32 x i32> %9050, i32 31
  %9207 = sext i32 %9206 to i64
  %9208 = getelementptr inbounds i8, i8* %5883, i64 %9207
  %9209 = load i8, i8* %9208, align 1, !tbaa !394
  %t205.s188 = insertelement <32 x i8> %9205, i8 %9209, i32 31
  %9210 = add nsw <32 x i32> %t202185, %8845
  %9211 = extractelement <32 x i32> %9210, i32 0
  %9212 = sext i32 %9211 to i64
  %9213 = getelementptr inbounds i8, i8* %5883, i64 %9212
  %9214 = load i8, i8* %9213, align 1, !tbaa !394
  %9215 = insertelement <32 x i8> undef, i8 %9214, i32 0
  %9216 = extractelement <32 x i32> %9210, i32 1
  %9217 = sext i32 %9216 to i64
  %9218 = getelementptr inbounds i8, i8* %5883, i64 %9217
  %9219 = load i8, i8* %9218, align 1, !tbaa !394
  %9220 = insertelement <32 x i8> %9215, i8 %9219, i32 1
  %9221 = extractelement <32 x i32> %9210, i32 2
  %9222 = sext i32 %9221 to i64
  %9223 = getelementptr inbounds i8, i8* %5883, i64 %9222
  %9224 = load i8, i8* %9223, align 1, !tbaa !394
  %9225 = insertelement <32 x i8> %9220, i8 %9224, i32 2
  %9226 = extractelement <32 x i32> %9210, i32 3
  %9227 = sext i32 %9226 to i64
  %9228 = getelementptr inbounds i8, i8* %5883, i64 %9227
  %9229 = load i8, i8* %9228, align 1, !tbaa !394
  %9230 = insertelement <32 x i8> %9225, i8 %9229, i32 3
  %9231 = extractelement <32 x i32> %9210, i32 4
  %9232 = sext i32 %9231 to i64
  %9233 = getelementptr inbounds i8, i8* %5883, i64 %9232
  %9234 = load i8, i8* %9233, align 1, !tbaa !394
  %9235 = insertelement <32 x i8> %9230, i8 %9234, i32 4
  %9236 = extractelement <32 x i32> %9210, i32 5
  %9237 = sext i32 %9236 to i64
  %9238 = getelementptr inbounds i8, i8* %5883, i64 %9237
  %9239 = load i8, i8* %9238, align 1, !tbaa !394
  %9240 = insertelement <32 x i8> %9235, i8 %9239, i32 5
  %9241 = extractelement <32 x i32> %9210, i32 6
  %9242 = sext i32 %9241 to i64
  %9243 = getelementptr inbounds i8, i8* %5883, i64 %9242
  %9244 = load i8, i8* %9243, align 1, !tbaa !394
  %9245 = insertelement <32 x i8> %9240, i8 %9244, i32 6
  %9246 = extractelement <32 x i32> %9210, i32 7
  %9247 = sext i32 %9246 to i64
  %9248 = getelementptr inbounds i8, i8* %5883, i64 %9247
  %9249 = load i8, i8* %9248, align 1, !tbaa !394
  %9250 = insertelement <32 x i8> %9245, i8 %9249, i32 7
  %9251 = extractelement <32 x i32> %9210, i32 8
  %9252 = sext i32 %9251 to i64
  %9253 = getelementptr inbounds i8, i8* %5883, i64 %9252
  %9254 = load i8, i8* %9253, align 1, !tbaa !394
  %9255 = insertelement <32 x i8> %9250, i8 %9254, i32 8
  %9256 = extractelement <32 x i32> %9210, i32 9
  %9257 = sext i32 %9256 to i64
  %9258 = getelementptr inbounds i8, i8* %5883, i64 %9257
  %9259 = load i8, i8* %9258, align 1, !tbaa !394
  %9260 = insertelement <32 x i8> %9255, i8 %9259, i32 9
  %9261 = extractelement <32 x i32> %9210, i32 10
  %9262 = sext i32 %9261 to i64
  %9263 = getelementptr inbounds i8, i8* %5883, i64 %9262
  %9264 = load i8, i8* %9263, align 1, !tbaa !394
  %9265 = insertelement <32 x i8> %9260, i8 %9264, i32 10
  %9266 = extractelement <32 x i32> %9210, i32 11
  %9267 = sext i32 %9266 to i64
  %9268 = getelementptr inbounds i8, i8* %5883, i64 %9267
  %9269 = load i8, i8* %9268, align 1, !tbaa !394
  %9270 = insertelement <32 x i8> %9265, i8 %9269, i32 11
  %9271 = extractelement <32 x i32> %9210, i32 12
  %9272 = sext i32 %9271 to i64
  %9273 = getelementptr inbounds i8, i8* %5883, i64 %9272
  %9274 = load i8, i8* %9273, align 1, !tbaa !394
  %9275 = insertelement <32 x i8> %9270, i8 %9274, i32 12
  %9276 = extractelement <32 x i32> %9210, i32 13
  %9277 = sext i32 %9276 to i64
  %9278 = getelementptr inbounds i8, i8* %5883, i64 %9277
  %9279 = load i8, i8* %9278, align 1, !tbaa !394
  %9280 = insertelement <32 x i8> %9275, i8 %9279, i32 13
  %9281 = extractelement <32 x i32> %9210, i32 14
  %9282 = sext i32 %9281 to i64
  %9283 = getelementptr inbounds i8, i8* %5883, i64 %9282
  %9284 = load i8, i8* %9283, align 1, !tbaa !394
  %9285 = insertelement <32 x i8> %9280, i8 %9284, i32 14
  %9286 = extractelement <32 x i32> %9210, i32 15
  %9287 = sext i32 %9286 to i64
  %9288 = getelementptr inbounds i8, i8* %5883, i64 %9287
  %9289 = load i8, i8* %9288, align 1, !tbaa !394
  %9290 = insertelement <32 x i8> %9285, i8 %9289, i32 15
  %9291 = extractelement <32 x i32> %9210, i32 16
  %9292 = sext i32 %9291 to i64
  %9293 = getelementptr inbounds i8, i8* %5883, i64 %9292
  %9294 = load i8, i8* %9293, align 1, !tbaa !394
  %9295 = insertelement <32 x i8> %9290, i8 %9294, i32 16
  %9296 = extractelement <32 x i32> %9210, i32 17
  %9297 = sext i32 %9296 to i64
  %9298 = getelementptr inbounds i8, i8* %5883, i64 %9297
  %9299 = load i8, i8* %9298, align 1, !tbaa !394
  %9300 = insertelement <32 x i8> %9295, i8 %9299, i32 17
  %9301 = extractelement <32 x i32> %9210, i32 18
  %9302 = sext i32 %9301 to i64
  %9303 = getelementptr inbounds i8, i8* %5883, i64 %9302
  %9304 = load i8, i8* %9303, align 1, !tbaa !394
  %9305 = insertelement <32 x i8> %9300, i8 %9304, i32 18
  %9306 = extractelement <32 x i32> %9210, i32 19
  %9307 = sext i32 %9306 to i64
  %9308 = getelementptr inbounds i8, i8* %5883, i64 %9307
  %9309 = load i8, i8* %9308, align 1, !tbaa !394
  %9310 = insertelement <32 x i8> %9305, i8 %9309, i32 19
  %9311 = extractelement <32 x i32> %9210, i32 20
  %9312 = sext i32 %9311 to i64
  %9313 = getelementptr inbounds i8, i8* %5883, i64 %9312
  %9314 = load i8, i8* %9313, align 1, !tbaa !394
  %9315 = insertelement <32 x i8> %9310, i8 %9314, i32 20
  %9316 = extractelement <32 x i32> %9210, i32 21
  %9317 = sext i32 %9316 to i64
  %9318 = getelementptr inbounds i8, i8* %5883, i64 %9317
  %9319 = load i8, i8* %9318, align 1, !tbaa !394
  %9320 = insertelement <32 x i8> %9315, i8 %9319, i32 21
  %9321 = extractelement <32 x i32> %9210, i32 22
  %9322 = sext i32 %9321 to i64
  %9323 = getelementptr inbounds i8, i8* %5883, i64 %9322
  %9324 = load i8, i8* %9323, align 1, !tbaa !394
  %9325 = insertelement <32 x i8> %9320, i8 %9324, i32 22
  %9326 = extractelement <32 x i32> %9210, i32 23
  %9327 = sext i32 %9326 to i64
  %9328 = getelementptr inbounds i8, i8* %5883, i64 %9327
  %9329 = load i8, i8* %9328, align 1, !tbaa !394
  %9330 = insertelement <32 x i8> %9325, i8 %9329, i32 23
  %9331 = extractelement <32 x i32> %9210, i32 24
  %9332 = sext i32 %9331 to i64
  %9333 = getelementptr inbounds i8, i8* %5883, i64 %9332
  %9334 = load i8, i8* %9333, align 1, !tbaa !394
  %9335 = insertelement <32 x i8> %9330, i8 %9334, i32 24
  %9336 = extractelement <32 x i32> %9210, i32 25
  %9337 = sext i32 %9336 to i64
  %9338 = getelementptr inbounds i8, i8* %5883, i64 %9337
  %9339 = load i8, i8* %9338, align 1, !tbaa !394
  %9340 = insertelement <32 x i8> %9335, i8 %9339, i32 25
  %9341 = extractelement <32 x i32> %9210, i32 26
  %9342 = sext i32 %9341 to i64
  %9343 = getelementptr inbounds i8, i8* %5883, i64 %9342
  %9344 = load i8, i8* %9343, align 1, !tbaa !394
  %9345 = insertelement <32 x i8> %9340, i8 %9344, i32 26
  %9346 = extractelement <32 x i32> %9210, i32 27
  %9347 = sext i32 %9346 to i64
  %9348 = getelementptr inbounds i8, i8* %5883, i64 %9347
  %9349 = load i8, i8* %9348, align 1, !tbaa !394
  %9350 = insertelement <32 x i8> %9345, i8 %9349, i32 27
  %9351 = extractelement <32 x i32> %9210, i32 28
  %9352 = sext i32 %9351 to i64
  %9353 = getelementptr inbounds i8, i8* %5883, i64 %9352
  %9354 = load i8, i8* %9353, align 1, !tbaa !394
  %9355 = insertelement <32 x i8> %9350, i8 %9354, i32 28
  %9356 = extractelement <32 x i32> %9210, i32 29
  %9357 = sext i32 %9356 to i64
  %9358 = getelementptr inbounds i8, i8* %5883, i64 %9357
  %9359 = load i8, i8* %9358, align 1, !tbaa !394
  %9360 = insertelement <32 x i8> %9355, i8 %9359, i32 29
  %9361 = extractelement <32 x i32> %9210, i32 30
  %9362 = sext i32 %9361 to i64
  %9363 = getelementptr inbounds i8, i8* %5883, i64 %9362
  %9364 = load i8, i8* %9363, align 1, !tbaa !394
  %9365 = insertelement <32 x i8> %9360, i8 %9364, i32 30
  %9366 = extractelement <32 x i32> %9210, i32 31
  %9367 = sext i32 %9366 to i64
  %9368 = getelementptr inbounds i8, i8* %5883, i64 %9367
  %9369 = load i8, i8* %9368, align 1, !tbaa !394
  %t207.s189 = insertelement <32 x i8> %9365, i8 %9369, i32 31
  %9370 = add nsw <32 x i32> %t204187, %8845
  %9371 = extractelement <32 x i32> %9370, i32 0
  %9372 = sext i32 %9371 to i64
  %9373 = getelementptr inbounds i8, i8* %5883, i64 %9372
  %9374 = load i8, i8* %9373, align 1, !tbaa !394
  %9375 = insertelement <32 x i8> undef, i8 %9374, i32 0
  %9376 = extractelement <32 x i32> %9370, i32 1
  %9377 = sext i32 %9376 to i64
  %9378 = getelementptr inbounds i8, i8* %5883, i64 %9377
  %9379 = load i8, i8* %9378, align 1, !tbaa !394
  %9380 = insertelement <32 x i8> %9375, i8 %9379, i32 1
  %9381 = extractelement <32 x i32> %9370, i32 2
  %9382 = sext i32 %9381 to i64
  %9383 = getelementptr inbounds i8, i8* %5883, i64 %9382
  %9384 = load i8, i8* %9383, align 1, !tbaa !394
  %9385 = insertelement <32 x i8> %9380, i8 %9384, i32 2
  %9386 = extractelement <32 x i32> %9370, i32 3
  %9387 = sext i32 %9386 to i64
  %9388 = getelementptr inbounds i8, i8* %5883, i64 %9387
  %9389 = load i8, i8* %9388, align 1, !tbaa !394
  %9390 = insertelement <32 x i8> %9385, i8 %9389, i32 3
  %9391 = extractelement <32 x i32> %9370, i32 4
  %9392 = sext i32 %9391 to i64
  %9393 = getelementptr inbounds i8, i8* %5883, i64 %9392
  %9394 = load i8, i8* %9393, align 1, !tbaa !394
  %9395 = insertelement <32 x i8> %9390, i8 %9394, i32 4
  %9396 = extractelement <32 x i32> %9370, i32 5
  %9397 = sext i32 %9396 to i64
  %9398 = getelementptr inbounds i8, i8* %5883, i64 %9397
  %9399 = load i8, i8* %9398, align 1, !tbaa !394
  %9400 = insertelement <32 x i8> %9395, i8 %9399, i32 5
  %9401 = extractelement <32 x i32> %9370, i32 6
  %9402 = sext i32 %9401 to i64
  %9403 = getelementptr inbounds i8, i8* %5883, i64 %9402
  %9404 = load i8, i8* %9403, align 1, !tbaa !394
  %9405 = insertelement <32 x i8> %9400, i8 %9404, i32 6
  %9406 = extractelement <32 x i32> %9370, i32 7
  %9407 = sext i32 %9406 to i64
  %9408 = getelementptr inbounds i8, i8* %5883, i64 %9407
  %9409 = load i8, i8* %9408, align 1, !tbaa !394
  %9410 = insertelement <32 x i8> %9405, i8 %9409, i32 7
  %9411 = extractelement <32 x i32> %9370, i32 8
  %9412 = sext i32 %9411 to i64
  %9413 = getelementptr inbounds i8, i8* %5883, i64 %9412
  %9414 = load i8, i8* %9413, align 1, !tbaa !394
  %9415 = insertelement <32 x i8> %9410, i8 %9414, i32 8
  %9416 = extractelement <32 x i32> %9370, i32 9
  %9417 = sext i32 %9416 to i64
  %9418 = getelementptr inbounds i8, i8* %5883, i64 %9417
  %9419 = load i8, i8* %9418, align 1, !tbaa !394
  %9420 = insertelement <32 x i8> %9415, i8 %9419, i32 9
  %9421 = extractelement <32 x i32> %9370, i32 10
  %9422 = sext i32 %9421 to i64
  %9423 = getelementptr inbounds i8, i8* %5883, i64 %9422
  %9424 = load i8, i8* %9423, align 1, !tbaa !394
  %9425 = insertelement <32 x i8> %9420, i8 %9424, i32 10
  %9426 = extractelement <32 x i32> %9370, i32 11
  %9427 = sext i32 %9426 to i64
  %9428 = getelementptr inbounds i8, i8* %5883, i64 %9427
  %9429 = load i8, i8* %9428, align 1, !tbaa !394
  %9430 = insertelement <32 x i8> %9425, i8 %9429, i32 11
  %9431 = extractelement <32 x i32> %9370, i32 12
  %9432 = sext i32 %9431 to i64
  %9433 = getelementptr inbounds i8, i8* %5883, i64 %9432
  %9434 = load i8, i8* %9433, align 1, !tbaa !394
  %9435 = insertelement <32 x i8> %9430, i8 %9434, i32 12
  %9436 = extractelement <32 x i32> %9370, i32 13
  %9437 = sext i32 %9436 to i64
  %9438 = getelementptr inbounds i8, i8* %5883, i64 %9437
  %9439 = load i8, i8* %9438, align 1, !tbaa !394
  %9440 = insertelement <32 x i8> %9435, i8 %9439, i32 13
  %9441 = extractelement <32 x i32> %9370, i32 14
  %9442 = sext i32 %9441 to i64
  %9443 = getelementptr inbounds i8, i8* %5883, i64 %9442
  %9444 = load i8, i8* %9443, align 1, !tbaa !394
  %9445 = insertelement <32 x i8> %9440, i8 %9444, i32 14
  %9446 = extractelement <32 x i32> %9370, i32 15
  %9447 = sext i32 %9446 to i64
  %9448 = getelementptr inbounds i8, i8* %5883, i64 %9447
  %9449 = load i8, i8* %9448, align 1, !tbaa !394
  %9450 = insertelement <32 x i8> %9445, i8 %9449, i32 15
  %9451 = extractelement <32 x i32> %9370, i32 16
  %9452 = sext i32 %9451 to i64
  %9453 = getelementptr inbounds i8, i8* %5883, i64 %9452
  %9454 = load i8, i8* %9453, align 1, !tbaa !394
  %9455 = insertelement <32 x i8> %9450, i8 %9454, i32 16
  %9456 = extractelement <32 x i32> %9370, i32 17
  %9457 = sext i32 %9456 to i64
  %9458 = getelementptr inbounds i8, i8* %5883, i64 %9457
  %9459 = load i8, i8* %9458, align 1, !tbaa !394
  %9460 = insertelement <32 x i8> %9455, i8 %9459, i32 17
  %9461 = extractelement <32 x i32> %9370, i32 18
  %9462 = sext i32 %9461 to i64
  %9463 = getelementptr inbounds i8, i8* %5883, i64 %9462
  %9464 = load i8, i8* %9463, align 1, !tbaa !394
  %9465 = insertelement <32 x i8> %9460, i8 %9464, i32 18
  %9466 = extractelement <32 x i32> %9370, i32 19
  %9467 = sext i32 %9466 to i64
  %9468 = getelementptr inbounds i8, i8* %5883, i64 %9467
  %9469 = load i8, i8* %9468, align 1, !tbaa !394
  %9470 = insertelement <32 x i8> %9465, i8 %9469, i32 19
  %9471 = extractelement <32 x i32> %9370, i32 20
  %9472 = sext i32 %9471 to i64
  %9473 = getelementptr inbounds i8, i8* %5883, i64 %9472
  %9474 = load i8, i8* %9473, align 1, !tbaa !394
  %9475 = insertelement <32 x i8> %9470, i8 %9474, i32 20
  %9476 = extractelement <32 x i32> %9370, i32 21
  %9477 = sext i32 %9476 to i64
  %9478 = getelementptr inbounds i8, i8* %5883, i64 %9477
  %9479 = load i8, i8* %9478, align 1, !tbaa !394
  %9480 = insertelement <32 x i8> %9475, i8 %9479, i32 21
  %9481 = extractelement <32 x i32> %9370, i32 22
  %9482 = sext i32 %9481 to i64
  %9483 = getelementptr inbounds i8, i8* %5883, i64 %9482
  %9484 = load i8, i8* %9483, align 1, !tbaa !394
  %9485 = insertelement <32 x i8> %9480, i8 %9484, i32 22
  %9486 = extractelement <32 x i32> %9370, i32 23
  %9487 = sext i32 %9486 to i64
  %9488 = getelementptr inbounds i8, i8* %5883, i64 %9487
  %9489 = load i8, i8* %9488, align 1, !tbaa !394
  %9490 = insertelement <32 x i8> %9485, i8 %9489, i32 23
  %9491 = extractelement <32 x i32> %9370, i32 24
  %9492 = sext i32 %9491 to i64
  %9493 = getelementptr inbounds i8, i8* %5883, i64 %9492
  %9494 = load i8, i8* %9493, align 1, !tbaa !394
  %9495 = insertelement <32 x i8> %9490, i8 %9494, i32 24
  %9496 = extractelement <32 x i32> %9370, i32 25
  %9497 = sext i32 %9496 to i64
  %9498 = getelementptr inbounds i8, i8* %5883, i64 %9497
  %9499 = load i8, i8* %9498, align 1, !tbaa !394
  %9500 = insertelement <32 x i8> %9495, i8 %9499, i32 25
  %9501 = extractelement <32 x i32> %9370, i32 26
  %9502 = sext i32 %9501 to i64
  %9503 = getelementptr inbounds i8, i8* %5883, i64 %9502
  %9504 = load i8, i8* %9503, align 1, !tbaa !394
  %9505 = insertelement <32 x i8> %9500, i8 %9504, i32 26
  %9506 = extractelement <32 x i32> %9370, i32 27
  %9507 = sext i32 %9506 to i64
  %9508 = getelementptr inbounds i8, i8* %5883, i64 %9507
  %9509 = load i8, i8* %9508, align 1, !tbaa !394
  %9510 = insertelement <32 x i8> %9505, i8 %9509, i32 27
  %9511 = extractelement <32 x i32> %9370, i32 28
  %9512 = sext i32 %9511 to i64
  %9513 = getelementptr inbounds i8, i8* %5883, i64 %9512
  %9514 = load i8, i8* %9513, align 1, !tbaa !394
  %9515 = insertelement <32 x i8> %9510, i8 %9514, i32 28
  %9516 = extractelement <32 x i32> %9370, i32 29
  %9517 = sext i32 %9516 to i64
  %9518 = getelementptr inbounds i8, i8* %5883, i64 %9517
  %9519 = load i8, i8* %9518, align 1, !tbaa !394
  %9520 = insertelement <32 x i8> %9515, i8 %9519, i32 29
  %9521 = extractelement <32 x i32> %9370, i32 30
  %9522 = sext i32 %9521 to i64
  %9523 = getelementptr inbounds i8, i8* %5883, i64 %9522
  %9524 = load i8, i8* %9523, align 1, !tbaa !394
  %9525 = insertelement <32 x i8> %9520, i8 %9524, i32 30
  %9526 = extractelement <32 x i32> %9370, i32 31
  %9527 = sext i32 %9526 to i64
  %9528 = getelementptr inbounds i8, i8* %5883, i64 %9527
  %9529 = load i8, i8* %9528, align 1, !tbaa !394
  %t208.s190 = insertelement <32 x i8> %9525, i8 %9529, i32 31
  %9530 = add nsw <32 x i32> %t199184, %8843
  %9531 = extractelement <32 x i32> %9530, i32 0
  %9532 = sext i32 %9531 to i64
  %9533 = getelementptr inbounds i8, i8* %5883, i64 %9532
  %9534 = load i8, i8* %9533, align 1, !tbaa !394
  %9535 = insertelement <32 x i8> undef, i8 %9534, i32 0
  %9536 = extractelement <32 x i32> %9530, i32 1
  %9537 = sext i32 %9536 to i64
  %9538 = getelementptr inbounds i8, i8* %5883, i64 %9537
  %9539 = load i8, i8* %9538, align 1, !tbaa !394
  %9540 = insertelement <32 x i8> %9535, i8 %9539, i32 1
  %9541 = extractelement <32 x i32> %9530, i32 2
  %9542 = sext i32 %9541 to i64
  %9543 = getelementptr inbounds i8, i8* %5883, i64 %9542
  %9544 = load i8, i8* %9543, align 1, !tbaa !394
  %9545 = insertelement <32 x i8> %9540, i8 %9544, i32 2
  %9546 = extractelement <32 x i32> %9530, i32 3
  %9547 = sext i32 %9546 to i64
  %9548 = getelementptr inbounds i8, i8* %5883, i64 %9547
  %9549 = load i8, i8* %9548, align 1, !tbaa !394
  %9550 = insertelement <32 x i8> %9545, i8 %9549, i32 3
  %9551 = extractelement <32 x i32> %9530, i32 4
  %9552 = sext i32 %9551 to i64
  %9553 = getelementptr inbounds i8, i8* %5883, i64 %9552
  %9554 = load i8, i8* %9553, align 1, !tbaa !394
  %9555 = insertelement <32 x i8> %9550, i8 %9554, i32 4
  %9556 = extractelement <32 x i32> %9530, i32 5
  %9557 = sext i32 %9556 to i64
  %9558 = getelementptr inbounds i8, i8* %5883, i64 %9557
  %9559 = load i8, i8* %9558, align 1, !tbaa !394
  %9560 = insertelement <32 x i8> %9555, i8 %9559, i32 5
  %9561 = extractelement <32 x i32> %9530, i32 6
  %9562 = sext i32 %9561 to i64
  %9563 = getelementptr inbounds i8, i8* %5883, i64 %9562
  %9564 = load i8, i8* %9563, align 1, !tbaa !394
  %9565 = insertelement <32 x i8> %9560, i8 %9564, i32 6
  %9566 = extractelement <32 x i32> %9530, i32 7
  %9567 = sext i32 %9566 to i64
  %9568 = getelementptr inbounds i8, i8* %5883, i64 %9567
  %9569 = load i8, i8* %9568, align 1, !tbaa !394
  %9570 = insertelement <32 x i8> %9565, i8 %9569, i32 7
  %9571 = extractelement <32 x i32> %9530, i32 8
  %9572 = sext i32 %9571 to i64
  %9573 = getelementptr inbounds i8, i8* %5883, i64 %9572
  %9574 = load i8, i8* %9573, align 1, !tbaa !394
  %9575 = insertelement <32 x i8> %9570, i8 %9574, i32 8
  %9576 = extractelement <32 x i32> %9530, i32 9
  %9577 = sext i32 %9576 to i64
  %9578 = getelementptr inbounds i8, i8* %5883, i64 %9577
  %9579 = load i8, i8* %9578, align 1, !tbaa !394
  %9580 = insertelement <32 x i8> %9575, i8 %9579, i32 9
  %9581 = extractelement <32 x i32> %9530, i32 10
  %9582 = sext i32 %9581 to i64
  %9583 = getelementptr inbounds i8, i8* %5883, i64 %9582
  %9584 = load i8, i8* %9583, align 1, !tbaa !394
  %9585 = insertelement <32 x i8> %9580, i8 %9584, i32 10
  %9586 = extractelement <32 x i32> %9530, i32 11
  %9587 = sext i32 %9586 to i64
  %9588 = getelementptr inbounds i8, i8* %5883, i64 %9587
  %9589 = load i8, i8* %9588, align 1, !tbaa !394
  %9590 = insertelement <32 x i8> %9585, i8 %9589, i32 11
  %9591 = extractelement <32 x i32> %9530, i32 12
  %9592 = sext i32 %9591 to i64
  %9593 = getelementptr inbounds i8, i8* %5883, i64 %9592
  %9594 = load i8, i8* %9593, align 1, !tbaa !394
  %9595 = insertelement <32 x i8> %9590, i8 %9594, i32 12
  %9596 = extractelement <32 x i32> %9530, i32 13
  %9597 = sext i32 %9596 to i64
  %9598 = getelementptr inbounds i8, i8* %5883, i64 %9597
  %9599 = load i8, i8* %9598, align 1, !tbaa !394
  %9600 = insertelement <32 x i8> %9595, i8 %9599, i32 13
  %9601 = extractelement <32 x i32> %9530, i32 14
  %9602 = sext i32 %9601 to i64
  %9603 = getelementptr inbounds i8, i8* %5883, i64 %9602
  %9604 = load i8, i8* %9603, align 1, !tbaa !394
  %9605 = insertelement <32 x i8> %9600, i8 %9604, i32 14
  %9606 = extractelement <32 x i32> %9530, i32 15
  %9607 = sext i32 %9606 to i64
  %9608 = getelementptr inbounds i8, i8* %5883, i64 %9607
  %9609 = load i8, i8* %9608, align 1, !tbaa !394
  %9610 = insertelement <32 x i8> %9605, i8 %9609, i32 15
  %9611 = extractelement <32 x i32> %9530, i32 16
  %9612 = sext i32 %9611 to i64
  %9613 = getelementptr inbounds i8, i8* %5883, i64 %9612
  %9614 = load i8, i8* %9613, align 1, !tbaa !394
  %9615 = insertelement <32 x i8> %9610, i8 %9614, i32 16
  %9616 = extractelement <32 x i32> %9530, i32 17
  %9617 = sext i32 %9616 to i64
  %9618 = getelementptr inbounds i8, i8* %5883, i64 %9617
  %9619 = load i8, i8* %9618, align 1, !tbaa !394
  %9620 = insertelement <32 x i8> %9615, i8 %9619, i32 17
  %9621 = extractelement <32 x i32> %9530, i32 18
  %9622 = sext i32 %9621 to i64
  %9623 = getelementptr inbounds i8, i8* %5883, i64 %9622
  %9624 = load i8, i8* %9623, align 1, !tbaa !394
  %9625 = insertelement <32 x i8> %9620, i8 %9624, i32 18
  %9626 = extractelement <32 x i32> %9530, i32 19
  %9627 = sext i32 %9626 to i64
  %9628 = getelementptr inbounds i8, i8* %5883, i64 %9627
  %9629 = load i8, i8* %9628, align 1, !tbaa !394
  %9630 = insertelement <32 x i8> %9625, i8 %9629, i32 19
  %9631 = extractelement <32 x i32> %9530, i32 20
  %9632 = sext i32 %9631 to i64
  %9633 = getelementptr inbounds i8, i8* %5883, i64 %9632
  %9634 = load i8, i8* %9633, align 1, !tbaa !394
  %9635 = insertelement <32 x i8> %9630, i8 %9634, i32 20
  %9636 = extractelement <32 x i32> %9530, i32 21
  %9637 = sext i32 %9636 to i64
  %9638 = getelementptr inbounds i8, i8* %5883, i64 %9637
  %9639 = load i8, i8* %9638, align 1, !tbaa !394
  %9640 = insertelement <32 x i8> %9635, i8 %9639, i32 21
  %9641 = extractelement <32 x i32> %9530, i32 22
  %9642 = sext i32 %9641 to i64
  %9643 = getelementptr inbounds i8, i8* %5883, i64 %9642
  %9644 = load i8, i8* %9643, align 1, !tbaa !394
  %9645 = insertelement <32 x i8> %9640, i8 %9644, i32 22
  %9646 = extractelement <32 x i32> %9530, i32 23
  %9647 = sext i32 %9646 to i64
  %9648 = getelementptr inbounds i8, i8* %5883, i64 %9647
  %9649 = load i8, i8* %9648, align 1, !tbaa !394
  %9650 = insertelement <32 x i8> %9645, i8 %9649, i32 23
  %9651 = extractelement <32 x i32> %9530, i32 24
  %9652 = sext i32 %9651 to i64
  %9653 = getelementptr inbounds i8, i8* %5883, i64 %9652
  %9654 = load i8, i8* %9653, align 1, !tbaa !394
  %9655 = insertelement <32 x i8> %9650, i8 %9654, i32 24
  %9656 = extractelement <32 x i32> %9530, i32 25
  %9657 = sext i32 %9656 to i64
  %9658 = getelementptr inbounds i8, i8* %5883, i64 %9657
  %9659 = load i8, i8* %9658, align 1, !tbaa !394
  %9660 = insertelement <32 x i8> %9655, i8 %9659, i32 25
  %9661 = extractelement <32 x i32> %9530, i32 26
  %9662 = sext i32 %9661 to i64
  %9663 = getelementptr inbounds i8, i8* %5883, i64 %9662
  %9664 = load i8, i8* %9663, align 1, !tbaa !394
  %9665 = insertelement <32 x i8> %9660, i8 %9664, i32 26
  %9666 = extractelement <32 x i32> %9530, i32 27
  %9667 = sext i32 %9666 to i64
  %9668 = getelementptr inbounds i8, i8* %5883, i64 %9667
  %9669 = load i8, i8* %9668, align 1, !tbaa !394
  %9670 = insertelement <32 x i8> %9665, i8 %9669, i32 27
  %9671 = extractelement <32 x i32> %9530, i32 28
  %9672 = sext i32 %9671 to i64
  %9673 = getelementptr inbounds i8, i8* %5883, i64 %9672
  %9674 = load i8, i8* %9673, align 1, !tbaa !394
  %9675 = insertelement <32 x i8> %9670, i8 %9674, i32 28
  %9676 = extractelement <32 x i32> %9530, i32 29
  %9677 = sext i32 %9676 to i64
  %9678 = getelementptr inbounds i8, i8* %5883, i64 %9677
  %9679 = load i8, i8* %9678, align 1, !tbaa !394
  %9680 = insertelement <32 x i8> %9675, i8 %9679, i32 29
  %9681 = extractelement <32 x i32> %9530, i32 30
  %9682 = sext i32 %9681 to i64
  %9683 = getelementptr inbounds i8, i8* %5883, i64 %9682
  %9684 = load i8, i8* %9683, align 1, !tbaa !394
  %9685 = insertelement <32 x i8> %9680, i8 %9684, i32 30
  %9686 = extractelement <32 x i32> %9530, i32 31
  %9687 = sext i32 %9686 to i64
  %9688 = getelementptr inbounds i8, i8* %5883, i64 %9687
  %9689 = load i8, i8* %9688, align 1, !tbaa !394
  %9690 = insertelement <32 x i8> %9685, i8 %9689, i32 31
  %9691 = add nsw <32 x i32> %t199184, %8845
  %9692 = extractelement <32 x i32> %9691, i32 0
  %9693 = sext i32 %9692 to i64
  %9694 = getelementptr inbounds i8, i8* %5883, i64 %9693
  %9695 = load i8, i8* %9694, align 1, !tbaa !394
  %9696 = insertelement <32 x i8> undef, i8 %9695, i32 0
  %9697 = extractelement <32 x i32> %9691, i32 1
  %9698 = sext i32 %9697 to i64
  %9699 = getelementptr inbounds i8, i8* %5883, i64 %9698
  %9700 = load i8, i8* %9699, align 1, !tbaa !394
  %9701 = insertelement <32 x i8> %9696, i8 %9700, i32 1
  %9702 = extractelement <32 x i32> %9691, i32 2
  %9703 = sext i32 %9702 to i64
  %9704 = getelementptr inbounds i8, i8* %5883, i64 %9703
  %9705 = load i8, i8* %9704, align 1, !tbaa !394
  %9706 = insertelement <32 x i8> %9701, i8 %9705, i32 2
  %9707 = extractelement <32 x i32> %9691, i32 3
  %9708 = sext i32 %9707 to i64
  %9709 = getelementptr inbounds i8, i8* %5883, i64 %9708
  %9710 = load i8, i8* %9709, align 1, !tbaa !394
  %9711 = insertelement <32 x i8> %9706, i8 %9710, i32 3
  %9712 = extractelement <32 x i32> %9691, i32 4
  %9713 = sext i32 %9712 to i64
  %9714 = getelementptr inbounds i8, i8* %5883, i64 %9713
  %9715 = load i8, i8* %9714, align 1, !tbaa !394
  %9716 = insertelement <32 x i8> %9711, i8 %9715, i32 4
  %9717 = extractelement <32 x i32> %9691, i32 5
  %9718 = sext i32 %9717 to i64
  %9719 = getelementptr inbounds i8, i8* %5883, i64 %9718
  %9720 = load i8, i8* %9719, align 1, !tbaa !394
  %9721 = insertelement <32 x i8> %9716, i8 %9720, i32 5
  %9722 = extractelement <32 x i32> %9691, i32 6
  %9723 = sext i32 %9722 to i64
  %9724 = getelementptr inbounds i8, i8* %5883, i64 %9723
  %9725 = load i8, i8* %9724, align 1, !tbaa !394
  %9726 = insertelement <32 x i8> %9721, i8 %9725, i32 6
  %9727 = extractelement <32 x i32> %9691, i32 7
  %9728 = sext i32 %9727 to i64
  %9729 = getelementptr inbounds i8, i8* %5883, i64 %9728
  %9730 = load i8, i8* %9729, align 1, !tbaa !394
  %9731 = insertelement <32 x i8> %9726, i8 %9730, i32 7
  %9732 = extractelement <32 x i32> %9691, i32 8
  %9733 = sext i32 %9732 to i64
  %9734 = getelementptr inbounds i8, i8* %5883, i64 %9733
  %9735 = load i8, i8* %9734, align 1, !tbaa !394
  %9736 = insertelement <32 x i8> %9731, i8 %9735, i32 8
  %9737 = extractelement <32 x i32> %9691, i32 9
  %9738 = sext i32 %9737 to i64
  %9739 = getelementptr inbounds i8, i8* %5883, i64 %9738
  %9740 = load i8, i8* %9739, align 1, !tbaa !394
  %9741 = insertelement <32 x i8> %9736, i8 %9740, i32 9
  %9742 = extractelement <32 x i32> %9691, i32 10
  %9743 = sext i32 %9742 to i64
  %9744 = getelementptr inbounds i8, i8* %5883, i64 %9743
  %9745 = load i8, i8* %9744, align 1, !tbaa !394
  %9746 = insertelement <32 x i8> %9741, i8 %9745, i32 10
  %9747 = extractelement <32 x i32> %9691, i32 11
  %9748 = sext i32 %9747 to i64
  %9749 = getelementptr inbounds i8, i8* %5883, i64 %9748
  %9750 = load i8, i8* %9749, align 1, !tbaa !394
  %9751 = insertelement <32 x i8> %9746, i8 %9750, i32 11
  %9752 = extractelement <32 x i32> %9691, i32 12
  %9753 = sext i32 %9752 to i64
  %9754 = getelementptr inbounds i8, i8* %5883, i64 %9753
  %9755 = load i8, i8* %9754, align 1, !tbaa !394
  %9756 = insertelement <32 x i8> %9751, i8 %9755, i32 12
  %9757 = extractelement <32 x i32> %9691, i32 13
  %9758 = sext i32 %9757 to i64
  %9759 = getelementptr inbounds i8, i8* %5883, i64 %9758
  %9760 = load i8, i8* %9759, align 1, !tbaa !394
  %9761 = insertelement <32 x i8> %9756, i8 %9760, i32 13
  %9762 = extractelement <32 x i32> %9691, i32 14
  %9763 = sext i32 %9762 to i64
  %9764 = getelementptr inbounds i8, i8* %5883, i64 %9763
  %9765 = load i8, i8* %9764, align 1, !tbaa !394
  %9766 = insertelement <32 x i8> %9761, i8 %9765, i32 14
  %9767 = extractelement <32 x i32> %9691, i32 15
  %9768 = sext i32 %9767 to i64
  %9769 = getelementptr inbounds i8, i8* %5883, i64 %9768
  %9770 = load i8, i8* %9769, align 1, !tbaa !394
  %9771 = insertelement <32 x i8> %9766, i8 %9770, i32 15
  %9772 = extractelement <32 x i32> %9691, i32 16
  %9773 = sext i32 %9772 to i64
  %9774 = getelementptr inbounds i8, i8* %5883, i64 %9773
  %9775 = load i8, i8* %9774, align 1, !tbaa !394
  %9776 = insertelement <32 x i8> %9771, i8 %9775, i32 16
  %9777 = extractelement <32 x i32> %9691, i32 17
  %9778 = sext i32 %9777 to i64
  %9779 = getelementptr inbounds i8, i8* %5883, i64 %9778
  %9780 = load i8, i8* %9779, align 1, !tbaa !394
  %9781 = insertelement <32 x i8> %9776, i8 %9780, i32 17
  %9782 = extractelement <32 x i32> %9691, i32 18
  %9783 = sext i32 %9782 to i64
  %9784 = getelementptr inbounds i8, i8* %5883, i64 %9783
  %9785 = load i8, i8* %9784, align 1, !tbaa !394
  %9786 = insertelement <32 x i8> %9781, i8 %9785, i32 18
  %9787 = extractelement <32 x i32> %9691, i32 19
  %9788 = sext i32 %9787 to i64
  %9789 = getelementptr inbounds i8, i8* %5883, i64 %9788
  %9790 = load i8, i8* %9789, align 1, !tbaa !394
  %9791 = insertelement <32 x i8> %9786, i8 %9790, i32 19
  %9792 = extractelement <32 x i32> %9691, i32 20
  %9793 = sext i32 %9792 to i64
  %9794 = getelementptr inbounds i8, i8* %5883, i64 %9793
  %9795 = load i8, i8* %9794, align 1, !tbaa !394
  %9796 = insertelement <32 x i8> %9791, i8 %9795, i32 20
  %9797 = extractelement <32 x i32> %9691, i32 21
  %9798 = sext i32 %9797 to i64
  %9799 = getelementptr inbounds i8, i8* %5883, i64 %9798
  %9800 = load i8, i8* %9799, align 1, !tbaa !394
  %9801 = insertelement <32 x i8> %9796, i8 %9800, i32 21
  %9802 = extractelement <32 x i32> %9691, i32 22
  %9803 = sext i32 %9802 to i64
  %9804 = getelementptr inbounds i8, i8* %5883, i64 %9803
  %9805 = load i8, i8* %9804, align 1, !tbaa !394
  %9806 = insertelement <32 x i8> %9801, i8 %9805, i32 22
  %9807 = extractelement <32 x i32> %9691, i32 23
  %9808 = sext i32 %9807 to i64
  %9809 = getelementptr inbounds i8, i8* %5883, i64 %9808
  %9810 = load i8, i8* %9809, align 1, !tbaa !394
  %9811 = insertelement <32 x i8> %9806, i8 %9810, i32 23
  %9812 = extractelement <32 x i32> %9691, i32 24
  %9813 = sext i32 %9812 to i64
  %9814 = getelementptr inbounds i8, i8* %5883, i64 %9813
  %9815 = load i8, i8* %9814, align 1, !tbaa !394
  %9816 = insertelement <32 x i8> %9811, i8 %9815, i32 24
  %9817 = extractelement <32 x i32> %9691, i32 25
  %9818 = sext i32 %9817 to i64
  %9819 = getelementptr inbounds i8, i8* %5883, i64 %9818
  %9820 = load i8, i8* %9819, align 1, !tbaa !394
  %9821 = insertelement <32 x i8> %9816, i8 %9820, i32 25
  %9822 = extractelement <32 x i32> %9691, i32 26
  %9823 = sext i32 %9822 to i64
  %9824 = getelementptr inbounds i8, i8* %5883, i64 %9823
  %9825 = load i8, i8* %9824, align 1, !tbaa !394
  %9826 = insertelement <32 x i8> %9821, i8 %9825, i32 26
  %9827 = extractelement <32 x i32> %9691, i32 27
  %9828 = sext i32 %9827 to i64
  %9829 = getelementptr inbounds i8, i8* %5883, i64 %9828
  %9830 = load i8, i8* %9829, align 1, !tbaa !394
  %9831 = insertelement <32 x i8> %9826, i8 %9830, i32 27
  %9832 = extractelement <32 x i32> %9691, i32 28
  %9833 = sext i32 %9832 to i64
  %9834 = getelementptr inbounds i8, i8* %5883, i64 %9833
  %9835 = load i8, i8* %9834, align 1, !tbaa !394
  %9836 = insertelement <32 x i8> %9831, i8 %9835, i32 28
  %9837 = extractelement <32 x i32> %9691, i32 29
  %9838 = sext i32 %9837 to i64
  %9839 = getelementptr inbounds i8, i8* %5883, i64 %9838
  %9840 = load i8, i8* %9839, align 1, !tbaa !394
  %9841 = insertelement <32 x i8> %9836, i8 %9840, i32 29
  %9842 = extractelement <32 x i32> %9691, i32 30
  %9843 = sext i32 %9842 to i64
  %9844 = getelementptr inbounds i8, i8* %5883, i64 %9843
  %9845 = load i8, i8* %9844, align 1, !tbaa !394
  %9846 = insertelement <32 x i8> %9841, i8 %9845, i32 30
  %9847 = extractelement <32 x i32> %9691, i32 31
  %9848 = sext i32 %9847 to i64
  %9849 = getelementptr inbounds i8, i8* %5883, i64 %9848
  %9850 = load i8, i8* %9849, align 1, !tbaa !394
  %9851 = insertelement <32 x i8> %9846, i8 %9850, i32 31
  %9852 = add nsw <32 x i32> %t202185, %t237191
  %9853 = extractelement <32 x i32> %9852, i32 0
  %9854 = sext i32 %9853 to i64
  %9855 = getelementptr inbounds i8, i8* %5883, i64 %9854
  %9856 = load i8, i8* %9855, align 1, !tbaa !394
  %9857 = insertelement <32 x i8> undef, i8 %9856, i32 0
  %9858 = extractelement <32 x i32> %9852, i32 1
  %9859 = sext i32 %9858 to i64
  %9860 = getelementptr inbounds i8, i8* %5883, i64 %9859
  %9861 = load i8, i8* %9860, align 1, !tbaa !394
  %9862 = insertelement <32 x i8> %9857, i8 %9861, i32 1
  %9863 = extractelement <32 x i32> %9852, i32 2
  %9864 = sext i32 %9863 to i64
  %9865 = getelementptr inbounds i8, i8* %5883, i64 %9864
  %9866 = load i8, i8* %9865, align 1, !tbaa !394
  %9867 = insertelement <32 x i8> %9862, i8 %9866, i32 2
  %9868 = extractelement <32 x i32> %9852, i32 3
  %9869 = sext i32 %9868 to i64
  %9870 = getelementptr inbounds i8, i8* %5883, i64 %9869
  %9871 = load i8, i8* %9870, align 1, !tbaa !394
  %9872 = insertelement <32 x i8> %9867, i8 %9871, i32 3
  %9873 = extractelement <32 x i32> %9852, i32 4
  %9874 = sext i32 %9873 to i64
  %9875 = getelementptr inbounds i8, i8* %5883, i64 %9874
  %9876 = load i8, i8* %9875, align 1, !tbaa !394
  %9877 = insertelement <32 x i8> %9872, i8 %9876, i32 4
  %9878 = extractelement <32 x i32> %9852, i32 5
  %9879 = sext i32 %9878 to i64
  %9880 = getelementptr inbounds i8, i8* %5883, i64 %9879
  %9881 = load i8, i8* %9880, align 1, !tbaa !394
  %9882 = insertelement <32 x i8> %9877, i8 %9881, i32 5
  %9883 = extractelement <32 x i32> %9852, i32 6
  %9884 = sext i32 %9883 to i64
  %9885 = getelementptr inbounds i8, i8* %5883, i64 %9884
  %9886 = load i8, i8* %9885, align 1, !tbaa !394
  %9887 = insertelement <32 x i8> %9882, i8 %9886, i32 6
  %9888 = extractelement <32 x i32> %9852, i32 7
  %9889 = sext i32 %9888 to i64
  %9890 = getelementptr inbounds i8, i8* %5883, i64 %9889
  %9891 = load i8, i8* %9890, align 1, !tbaa !394
  %9892 = insertelement <32 x i8> %9887, i8 %9891, i32 7
  %9893 = extractelement <32 x i32> %9852, i32 8
  %9894 = sext i32 %9893 to i64
  %9895 = getelementptr inbounds i8, i8* %5883, i64 %9894
  %9896 = load i8, i8* %9895, align 1, !tbaa !394
  %9897 = insertelement <32 x i8> %9892, i8 %9896, i32 8
  %9898 = extractelement <32 x i32> %9852, i32 9
  %9899 = sext i32 %9898 to i64
  %9900 = getelementptr inbounds i8, i8* %5883, i64 %9899
  %9901 = load i8, i8* %9900, align 1, !tbaa !394
  %9902 = insertelement <32 x i8> %9897, i8 %9901, i32 9
  %9903 = extractelement <32 x i32> %9852, i32 10
  %9904 = sext i32 %9903 to i64
  %9905 = getelementptr inbounds i8, i8* %5883, i64 %9904
  %9906 = load i8, i8* %9905, align 1, !tbaa !394
  %9907 = insertelement <32 x i8> %9902, i8 %9906, i32 10
  %9908 = extractelement <32 x i32> %9852, i32 11
  %9909 = sext i32 %9908 to i64
  %9910 = getelementptr inbounds i8, i8* %5883, i64 %9909
  %9911 = load i8, i8* %9910, align 1, !tbaa !394
  %9912 = insertelement <32 x i8> %9907, i8 %9911, i32 11
  %9913 = extractelement <32 x i32> %9852, i32 12
  %9914 = sext i32 %9913 to i64
  %9915 = getelementptr inbounds i8, i8* %5883, i64 %9914
  %9916 = load i8, i8* %9915, align 1, !tbaa !394
  %9917 = insertelement <32 x i8> %9912, i8 %9916, i32 12
  %9918 = extractelement <32 x i32> %9852, i32 13
  %9919 = sext i32 %9918 to i64
  %9920 = getelementptr inbounds i8, i8* %5883, i64 %9919
  %9921 = load i8, i8* %9920, align 1, !tbaa !394
  %9922 = insertelement <32 x i8> %9917, i8 %9921, i32 13
  %9923 = extractelement <32 x i32> %9852, i32 14
  %9924 = sext i32 %9923 to i64
  %9925 = getelementptr inbounds i8, i8* %5883, i64 %9924
  %9926 = load i8, i8* %9925, align 1, !tbaa !394
  %9927 = insertelement <32 x i8> %9922, i8 %9926, i32 14
  %9928 = extractelement <32 x i32> %9852, i32 15
  %9929 = sext i32 %9928 to i64
  %9930 = getelementptr inbounds i8, i8* %5883, i64 %9929
  %9931 = load i8, i8* %9930, align 1, !tbaa !394
  %9932 = insertelement <32 x i8> %9927, i8 %9931, i32 15
  %9933 = extractelement <32 x i32> %9852, i32 16
  %9934 = sext i32 %9933 to i64
  %9935 = getelementptr inbounds i8, i8* %5883, i64 %9934
  %9936 = load i8, i8* %9935, align 1, !tbaa !394
  %9937 = insertelement <32 x i8> %9932, i8 %9936, i32 16
  %9938 = extractelement <32 x i32> %9852, i32 17
  %9939 = sext i32 %9938 to i64
  %9940 = getelementptr inbounds i8, i8* %5883, i64 %9939
  %9941 = load i8, i8* %9940, align 1, !tbaa !394
  %9942 = insertelement <32 x i8> %9937, i8 %9941, i32 17
  %9943 = extractelement <32 x i32> %9852, i32 18
  %9944 = sext i32 %9943 to i64
  %9945 = getelementptr inbounds i8, i8* %5883, i64 %9944
  %9946 = load i8, i8* %9945, align 1, !tbaa !394
  %9947 = insertelement <32 x i8> %9942, i8 %9946, i32 18
  %9948 = extractelement <32 x i32> %9852, i32 19
  %9949 = sext i32 %9948 to i64
  %9950 = getelementptr inbounds i8, i8* %5883, i64 %9949
  %9951 = load i8, i8* %9950, align 1, !tbaa !394
  %9952 = insertelement <32 x i8> %9947, i8 %9951, i32 19
  %9953 = extractelement <32 x i32> %9852, i32 20
  %9954 = sext i32 %9953 to i64
  %9955 = getelementptr inbounds i8, i8* %5883, i64 %9954
  %9956 = load i8, i8* %9955, align 1, !tbaa !394
  %9957 = insertelement <32 x i8> %9952, i8 %9956, i32 20
  %9958 = extractelement <32 x i32> %9852, i32 21
  %9959 = sext i32 %9958 to i64
  %9960 = getelementptr inbounds i8, i8* %5883, i64 %9959
  %9961 = load i8, i8* %9960, align 1, !tbaa !394
  %9962 = insertelement <32 x i8> %9957, i8 %9961, i32 21
  %9963 = extractelement <32 x i32> %9852, i32 22
  %9964 = sext i32 %9963 to i64
  %9965 = getelementptr inbounds i8, i8* %5883, i64 %9964
  %9966 = load i8, i8* %9965, align 1, !tbaa !394
  %9967 = insertelement <32 x i8> %9962, i8 %9966, i32 22
  %9968 = extractelement <32 x i32> %9852, i32 23
  %9969 = sext i32 %9968 to i64
  %9970 = getelementptr inbounds i8, i8* %5883, i64 %9969
  %9971 = load i8, i8* %9970, align 1, !tbaa !394
  %9972 = insertelement <32 x i8> %9967, i8 %9971, i32 23
  %9973 = extractelement <32 x i32> %9852, i32 24
  %9974 = sext i32 %9973 to i64
  %9975 = getelementptr inbounds i8, i8* %5883, i64 %9974
  %9976 = load i8, i8* %9975, align 1, !tbaa !394
  %9977 = insertelement <32 x i8> %9972, i8 %9976, i32 24
  %9978 = extractelement <32 x i32> %9852, i32 25
  %9979 = sext i32 %9978 to i64
  %9980 = getelementptr inbounds i8, i8* %5883, i64 %9979
  %9981 = load i8, i8* %9980, align 1, !tbaa !394
  %9982 = insertelement <32 x i8> %9977, i8 %9981, i32 25
  %9983 = extractelement <32 x i32> %9852, i32 26
  %9984 = sext i32 %9983 to i64
  %9985 = getelementptr inbounds i8, i8* %5883, i64 %9984
  %9986 = load i8, i8* %9985, align 1, !tbaa !394
  %9987 = insertelement <32 x i8> %9982, i8 %9986, i32 26
  %9988 = extractelement <32 x i32> %9852, i32 27
  %9989 = sext i32 %9988 to i64
  %9990 = getelementptr inbounds i8, i8* %5883, i64 %9989
  %9991 = load i8, i8* %9990, align 1, !tbaa !394
  %9992 = insertelement <32 x i8> %9987, i8 %9991, i32 27
  %9993 = extractelement <32 x i32> %9852, i32 28
  %9994 = sext i32 %9993 to i64
  %9995 = getelementptr inbounds i8, i8* %5883, i64 %9994
  %9996 = load i8, i8* %9995, align 1, !tbaa !394
  %9997 = insertelement <32 x i8> %9992, i8 %9996, i32 28
  %9998 = extractelement <32 x i32> %9852, i32 29
  %9999 = sext i32 %9998 to i64
  %10000 = getelementptr inbounds i8, i8* %5883, i64 %9999
  %10001 = load i8, i8* %10000, align 1, !tbaa !394
  %10002 = insertelement <32 x i8> %9997, i8 %10001, i32 29
  %10003 = extractelement <32 x i32> %9852, i32 30
  %10004 = sext i32 %10003 to i64
  %10005 = getelementptr inbounds i8, i8* %5883, i64 %10004
  %10006 = load i8, i8* %10005, align 1, !tbaa !394
  %10007 = insertelement <32 x i8> %10002, i8 %10006, i32 30
  %10008 = extractelement <32 x i32> %9852, i32 31
  %10009 = sext i32 %10008 to i64
  %10010 = getelementptr inbounds i8, i8* %5883, i64 %10009
  %10011 = load i8, i8* %10010, align 1, !tbaa !394
  %10012 = insertelement <32 x i8> %10007, i8 %10011, i32 31
  %10013 = add nsw <32 x i32> %t204187, %t237191
  %10014 = extractelement <32 x i32> %10013, i32 0
  %10015 = sext i32 %10014 to i64
  %10016 = getelementptr inbounds i8, i8* %5883, i64 %10015
  %10017 = load i8, i8* %10016, align 1, !tbaa !394
  %10018 = insertelement <32 x i8> undef, i8 %10017, i32 0
  %10019 = extractelement <32 x i32> %10013, i32 1
  %10020 = sext i32 %10019 to i64
  %10021 = getelementptr inbounds i8, i8* %5883, i64 %10020
  %10022 = load i8, i8* %10021, align 1, !tbaa !394
  %10023 = insertelement <32 x i8> %10018, i8 %10022, i32 1
  %10024 = extractelement <32 x i32> %10013, i32 2
  %10025 = sext i32 %10024 to i64
  %10026 = getelementptr inbounds i8, i8* %5883, i64 %10025
  %10027 = load i8, i8* %10026, align 1, !tbaa !394
  %10028 = insertelement <32 x i8> %10023, i8 %10027, i32 2
  %10029 = extractelement <32 x i32> %10013, i32 3
  %10030 = sext i32 %10029 to i64
  %10031 = getelementptr inbounds i8, i8* %5883, i64 %10030
  %10032 = load i8, i8* %10031, align 1, !tbaa !394
  %10033 = insertelement <32 x i8> %10028, i8 %10032, i32 3
  %10034 = extractelement <32 x i32> %10013, i32 4
  %10035 = sext i32 %10034 to i64
  %10036 = getelementptr inbounds i8, i8* %5883, i64 %10035
  %10037 = load i8, i8* %10036, align 1, !tbaa !394
  %10038 = insertelement <32 x i8> %10033, i8 %10037, i32 4
  %10039 = extractelement <32 x i32> %10013, i32 5
  %10040 = sext i32 %10039 to i64
  %10041 = getelementptr inbounds i8, i8* %5883, i64 %10040
  %10042 = load i8, i8* %10041, align 1, !tbaa !394
  %10043 = insertelement <32 x i8> %10038, i8 %10042, i32 5
  %10044 = extractelement <32 x i32> %10013, i32 6
  %10045 = sext i32 %10044 to i64
  %10046 = getelementptr inbounds i8, i8* %5883, i64 %10045
  %10047 = load i8, i8* %10046, align 1, !tbaa !394
  %10048 = insertelement <32 x i8> %10043, i8 %10047, i32 6
  %10049 = extractelement <32 x i32> %10013, i32 7
  %10050 = sext i32 %10049 to i64
  %10051 = getelementptr inbounds i8, i8* %5883, i64 %10050
  %10052 = load i8, i8* %10051, align 1, !tbaa !394
  %10053 = insertelement <32 x i8> %10048, i8 %10052, i32 7
  %10054 = extractelement <32 x i32> %10013, i32 8
  %10055 = sext i32 %10054 to i64
  %10056 = getelementptr inbounds i8, i8* %5883, i64 %10055
  %10057 = load i8, i8* %10056, align 1, !tbaa !394
  %10058 = insertelement <32 x i8> %10053, i8 %10057, i32 8
  %10059 = extractelement <32 x i32> %10013, i32 9
  %10060 = sext i32 %10059 to i64
  %10061 = getelementptr inbounds i8, i8* %5883, i64 %10060
  %10062 = load i8, i8* %10061, align 1, !tbaa !394
  %10063 = insertelement <32 x i8> %10058, i8 %10062, i32 9
  %10064 = extractelement <32 x i32> %10013, i32 10
  %10065 = sext i32 %10064 to i64
  %10066 = getelementptr inbounds i8, i8* %5883, i64 %10065
  %10067 = load i8, i8* %10066, align 1, !tbaa !394
  %10068 = insertelement <32 x i8> %10063, i8 %10067, i32 10
  %10069 = extractelement <32 x i32> %10013, i32 11
  %10070 = sext i32 %10069 to i64
  %10071 = getelementptr inbounds i8, i8* %5883, i64 %10070
  %10072 = load i8, i8* %10071, align 1, !tbaa !394
  %10073 = insertelement <32 x i8> %10068, i8 %10072, i32 11
  %10074 = extractelement <32 x i32> %10013, i32 12
  %10075 = sext i32 %10074 to i64
  %10076 = getelementptr inbounds i8, i8* %5883, i64 %10075
  %10077 = load i8, i8* %10076, align 1, !tbaa !394
  %10078 = insertelement <32 x i8> %10073, i8 %10077, i32 12
  %10079 = extractelement <32 x i32> %10013, i32 13
  %10080 = sext i32 %10079 to i64
  %10081 = getelementptr inbounds i8, i8* %5883, i64 %10080
  %10082 = load i8, i8* %10081, align 1, !tbaa !394
  %10083 = insertelement <32 x i8> %10078, i8 %10082, i32 13
  %10084 = extractelement <32 x i32> %10013, i32 14
  %10085 = sext i32 %10084 to i64
  %10086 = getelementptr inbounds i8, i8* %5883, i64 %10085
  %10087 = load i8, i8* %10086, align 1, !tbaa !394
  %10088 = insertelement <32 x i8> %10083, i8 %10087, i32 14
  %10089 = extractelement <32 x i32> %10013, i32 15
  %10090 = sext i32 %10089 to i64
  %10091 = getelementptr inbounds i8, i8* %5883, i64 %10090
  %10092 = load i8, i8* %10091, align 1, !tbaa !394
  %10093 = insertelement <32 x i8> %10088, i8 %10092, i32 15
  %10094 = extractelement <32 x i32> %10013, i32 16
  %10095 = sext i32 %10094 to i64
  %10096 = getelementptr inbounds i8, i8* %5883, i64 %10095
  %10097 = load i8, i8* %10096, align 1, !tbaa !394
  %10098 = insertelement <32 x i8> %10093, i8 %10097, i32 16
  %10099 = extractelement <32 x i32> %10013, i32 17
  %10100 = sext i32 %10099 to i64
  %10101 = getelementptr inbounds i8, i8* %5883, i64 %10100
  %10102 = load i8, i8* %10101, align 1, !tbaa !394
  %10103 = insertelement <32 x i8> %10098, i8 %10102, i32 17
  %10104 = extractelement <32 x i32> %10013, i32 18
  %10105 = sext i32 %10104 to i64
  %10106 = getelementptr inbounds i8, i8* %5883, i64 %10105
  %10107 = load i8, i8* %10106, align 1, !tbaa !394
  %10108 = insertelement <32 x i8> %10103, i8 %10107, i32 18
  %10109 = extractelement <32 x i32> %10013, i32 19
  %10110 = sext i32 %10109 to i64
  %10111 = getelementptr inbounds i8, i8* %5883, i64 %10110
  %10112 = load i8, i8* %10111, align 1, !tbaa !394
  %10113 = insertelement <32 x i8> %10108, i8 %10112, i32 19
  %10114 = extractelement <32 x i32> %10013, i32 20
  %10115 = sext i32 %10114 to i64
  %10116 = getelementptr inbounds i8, i8* %5883, i64 %10115
  %10117 = load i8, i8* %10116, align 1, !tbaa !394
  %10118 = insertelement <32 x i8> %10113, i8 %10117, i32 20
  %10119 = extractelement <32 x i32> %10013, i32 21
  %10120 = sext i32 %10119 to i64
  %10121 = getelementptr inbounds i8, i8* %5883, i64 %10120
  %10122 = load i8, i8* %10121, align 1, !tbaa !394
  %10123 = insertelement <32 x i8> %10118, i8 %10122, i32 21
  %10124 = extractelement <32 x i32> %10013, i32 22
  %10125 = sext i32 %10124 to i64
  %10126 = getelementptr inbounds i8, i8* %5883, i64 %10125
  %10127 = load i8, i8* %10126, align 1, !tbaa !394
  %10128 = insertelement <32 x i8> %10123, i8 %10127, i32 22
  %10129 = extractelement <32 x i32> %10013, i32 23
  %10130 = sext i32 %10129 to i64
  %10131 = getelementptr inbounds i8, i8* %5883, i64 %10130
  %10132 = load i8, i8* %10131, align 1, !tbaa !394
  %10133 = insertelement <32 x i8> %10128, i8 %10132, i32 23
  %10134 = extractelement <32 x i32> %10013, i32 24
  %10135 = sext i32 %10134 to i64
  %10136 = getelementptr inbounds i8, i8* %5883, i64 %10135
  %10137 = load i8, i8* %10136, align 1, !tbaa !394
  %10138 = insertelement <32 x i8> %10133, i8 %10137, i32 24
  %10139 = extractelement <32 x i32> %10013, i32 25
  %10140 = sext i32 %10139 to i64
  %10141 = getelementptr inbounds i8, i8* %5883, i64 %10140
  %10142 = load i8, i8* %10141, align 1, !tbaa !394
  %10143 = insertelement <32 x i8> %10138, i8 %10142, i32 25
  %10144 = extractelement <32 x i32> %10013, i32 26
  %10145 = sext i32 %10144 to i64
  %10146 = getelementptr inbounds i8, i8* %5883, i64 %10145
  %10147 = load i8, i8* %10146, align 1, !tbaa !394
  %10148 = insertelement <32 x i8> %10143, i8 %10147, i32 26
  %10149 = extractelement <32 x i32> %10013, i32 27
  %10150 = sext i32 %10149 to i64
  %10151 = getelementptr inbounds i8, i8* %5883, i64 %10150
  %10152 = load i8, i8* %10151, align 1, !tbaa !394
  %10153 = insertelement <32 x i8> %10148, i8 %10152, i32 27
  %10154 = extractelement <32 x i32> %10013, i32 28
  %10155 = sext i32 %10154 to i64
  %10156 = getelementptr inbounds i8, i8* %5883, i64 %10155
  %10157 = load i8, i8* %10156, align 1, !tbaa !394
  %10158 = insertelement <32 x i8> %10153, i8 %10157, i32 28
  %10159 = extractelement <32 x i32> %10013, i32 29
  %10160 = sext i32 %10159 to i64
  %10161 = getelementptr inbounds i8, i8* %5883, i64 %10160
  %10162 = load i8, i8* %10161, align 1, !tbaa !394
  %10163 = insertelement <32 x i8> %10158, i8 %10162, i32 29
  %10164 = extractelement <32 x i32> %10013, i32 30
  %10165 = sext i32 %10164 to i64
  %10166 = getelementptr inbounds i8, i8* %5883, i64 %10165
  %10167 = load i8, i8* %10166, align 1, !tbaa !394
  %10168 = insertelement <32 x i8> %10163, i8 %10167, i32 30
  %10169 = extractelement <32 x i32> %10013, i32 31
  %10170 = sext i32 %10169 to i64
  %10171 = getelementptr inbounds i8, i8* %5883, i64 %10170
  %10172 = load i8, i8* %10171, align 1, !tbaa !394
  %10173 = insertelement <32 x i8> %10168, i8 %10172, i32 31
  %10174 = tail call <32 x i8> @hydride.node.3(<32 x i8> %9690, <32 x i8> %t203.s186, <32 x i8> %t205.s188, <32 x i8> %9851, <32 x i8> %t207.s189, <32 x i8> %t208.s190, <32 x i8> %9690, <32 x i8> %9851, <32 x i8> %10012, <32 x i8> %10173) #10
  %10175 = sext i32 %output.s0.x.v0.base.s183 to i64
  %10176 = add nsw i64 %10175, %8848
  %10177 = getelementptr inbounds i8, i8* %5896, i64 %10176
  %10178 = bitcast i8* %10177 to <32 x i8>*
  store <32 x i8> %10174, <32 x i8>* %10178, align 1, !tbaa !397
  %10179 = add nuw nsw i32 %output.s0.x.x.rebased182, 1
  %.not243 = icmp eq i32 %10179, %t273178
  br i1 %.not243, label %"end for output.s0.x.x.rebased181", label %"for output.s0.x.x.rebased180"

"end for output.s0.x.x.rebased181":               ; preds = %"for output.s0.x.x.rebased180", %"end for output.s0.x.x.rebased166"
  %indvars.iv.next480 = add nuw nsw i64 %indvars.iv479, 1
  %10180 = add nuw nsw i32 %output.s0.y.rebased141, 1
  %10181 = icmp eq i64 %indvars.iv.next480, %zext482
  br i1 %10181, label %"end for output.s0.y.rebased140", label %"for output.s0.y.rebased139"

"for output.s0.y.rebased197":                     ; preds = %"for output.s0.y.rebased197.preheader", %"end for output.s0.x.x202"
  %indvars.iv483 = phi i64 [ 0, %"for output.s0.y.rebased197.preheader" ], [ %indvars.iv.next484, %"end for output.s0.x.x202" ]
  %output.s0.y.rebased199 = phi i32 [ 0, %"for output.s0.y.rebased197.preheader" ], [ %11537, %"end for output.s0.x.x202" ]
  %b184 = add nsw i32 %output.s0.y.rebased199, %t282194
  %a180 = add nsw i32 %b184, 2
  %10182 = icmp sgt i32 %5894, %a180
  %a198 = select i1 %10182, i32 %a180, i32 %5894
  %.not239 = icmp slt i32 %b184, %5894
  %a194 = select i1 %.not239, i32 %b184, i32 %a181
  %10183 = icmp sgt i32 %b184, %5894
  %a197 = select i1 %10183, i32 %5894, i32 %b184
  br i1 %7472, label %"for output.s0.x.x201.preheader", label %"end for output.s0.x.x202", !prof !393

"for output.s0.x.x201.preheader":                 ; preds = %"for output.s0.y.rebased197"
  %10184 = trunc i64 %indvars.iv483 to i32
  %10185 = add i32 %output.s0.y.epilogue112, %10184
  %10186 = mul i32 %10185, %5908
  %t287200 = sub i32 %10186, %6074
  %10187 = icmp sgt i32 %a197, 1
  %10188 = select i1 %10187, i32 %a197, i32 1
  %10189 = add nsw i32 %10188, -1
  %10190 = mul nsw i32 %10189, %5895
  %10191 = sub nsw i32 %10190, %5890
  %10192 = insertelement <32 x i32> undef, i32 %10191, i32 0
  %10193 = shufflevector <32 x i32> %10192, <32 x i32> undef, <32 x i32> zeroinitializer
  %10194 = icmp sgt i32 %a198, 1
  %10195 = select i1 %10194, i32 %a198, i32 1
  %10196 = add nsw i32 %10195, -1
  %10197 = mul nsw i32 %10196, %5895
  %10198 = sub nsw i32 %10197, %5890
  %10199 = insertelement <32 x i32> undef, i32 %10198, i32 0
  %10200 = shufflevector <32 x i32> %10199, <32 x i32> undef, <32 x i32> zeroinitializer
  %10201 = icmp sgt i32 %a194, 0
  %10202 = select i1 %10201, i32 %a194, i32 0
  %10203 = mul nsw i32 %10202, %5895
  %10204 = sub nsw i32 %10203, %5890
  %10205 = insertelement <32 x i32> undef, i32 %10204, i32 0
  %t238212 = shufflevector <32 x i32> %10205, <32 x i32> undef, <32 x i32> zeroinitializer
  %10206 = sext i32 %t287200 to i64
  br label %"for output.s0.x.x201"

"for output.s0.x.x201":                           ; preds = %"for output.s0.x.x201.preheader", %"for output.s0.x.x201"
  %output.s0.x.x203 = phi i32 [ %11536, %"for output.s0.x.x201" ], [ 0, %"for output.s0.x.x201.preheader" ]
  %a183 = shl nsw i32 %output.s0.x.x203, 5
  %10207 = icmp sgt i32 %a164.pre-phi, %a183
  %output.s0.x.v0.base.s204 = select i1 %10207, i32 %a183, i32 %a164.pre-phi
  %10208 = add nsw i32 %output.s0.x.v0.base.s204, %5903
  %10209 = insertelement <32 x i32> undef, i32 %10208, i32 0
  %10210 = shufflevector <32 x i32> %10209, <32 x i32> undef, <32 x i32> zeroinitializer
  %a185 = add nsw <32 x i32> %10210, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %10211 = shufflevector <32 x i32> %a185, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %10212 = icmp sgt <16 x i32> %7474, %10211
  %10213 = shufflevector <32 x i32> %a185, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %10214 = icmp sgt <16 x i32> %7474, %10213
  %10215 = select <16 x i1> %10212, <16 x i32> %10211, <16 x i32> %7474
  %10216 = select <16 x i1> %10214, <16 x i32> %10213, <16 x i32> %7474
  %10217 = icmp sgt <16 x i32> %10215, %7476
  %10218 = icmp sgt <16 x i32> %10216, %7476
  %10219 = select <16 x i1> %10217, <16 x i32> %10215, <16 x i32> %7476
  %10220 = select <16 x i1> %10218, <16 x i32> %10216, <16 x i32> %7476
  %t212205 = shufflevector <16 x i32> %10219, <16 x i32> %10220, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %10221 = add nsw i32 %10208, -1
  %10222 = insertelement <32 x i32> undef, i32 %10221, i32 0
  %10223 = shufflevector <32 x i32> %10222, <32 x i32> undef, <32 x i32> zeroinitializer
  %a187 = add nsw <32 x i32> %10223, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %10224 = shufflevector <32 x i32> %a187, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %10225 = icmp sgt <16 x i32> %7474, %10224
  %10226 = shufflevector <32 x i32> %a187, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %10227 = icmp sgt <16 x i32> %7474, %10226
  %10228 = select <16 x i1> %10225, <16 x i32> %10224, <16 x i32> %7474
  %10229 = select <16 x i1> %10227, <16 x i32> %10226, <16 x i32> %7474
  %10230 = icmp sgt <16 x i32> %10228, %7476
  %10231 = icmp sgt <16 x i32> %10229, %7476
  %10232 = select <16 x i1> %10230, <16 x i32> %10228, <16 x i32> %7476
  %10233 = select <16 x i1> %10231, <16 x i32> %10229, <16 x i32> %7476
  %t215206 = shufflevector <16 x i32> %10232, <16 x i32> %10233, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %10234 = add nsw <32 x i32> %t215206, %10193
  %10235 = extractelement <32 x i32> %10234, i32 0
  %10236 = sext i32 %10235 to i64
  %10237 = getelementptr inbounds i8, i8* %5883, i64 %10236
  %10238 = load i8, i8* %10237, align 1, !tbaa !394
  %10239 = insertelement <32 x i8> undef, i8 %10238, i32 0
  %10240 = extractelement <32 x i32> %10234, i32 1
  %10241 = sext i32 %10240 to i64
  %10242 = getelementptr inbounds i8, i8* %5883, i64 %10241
  %10243 = load i8, i8* %10242, align 1, !tbaa !394
  %10244 = insertelement <32 x i8> %10239, i8 %10243, i32 1
  %10245 = extractelement <32 x i32> %10234, i32 2
  %10246 = sext i32 %10245 to i64
  %10247 = getelementptr inbounds i8, i8* %5883, i64 %10246
  %10248 = load i8, i8* %10247, align 1, !tbaa !394
  %10249 = insertelement <32 x i8> %10244, i8 %10248, i32 2
  %10250 = extractelement <32 x i32> %10234, i32 3
  %10251 = sext i32 %10250 to i64
  %10252 = getelementptr inbounds i8, i8* %5883, i64 %10251
  %10253 = load i8, i8* %10252, align 1, !tbaa !394
  %10254 = insertelement <32 x i8> %10249, i8 %10253, i32 3
  %10255 = extractelement <32 x i32> %10234, i32 4
  %10256 = sext i32 %10255 to i64
  %10257 = getelementptr inbounds i8, i8* %5883, i64 %10256
  %10258 = load i8, i8* %10257, align 1, !tbaa !394
  %10259 = insertelement <32 x i8> %10254, i8 %10258, i32 4
  %10260 = extractelement <32 x i32> %10234, i32 5
  %10261 = sext i32 %10260 to i64
  %10262 = getelementptr inbounds i8, i8* %5883, i64 %10261
  %10263 = load i8, i8* %10262, align 1, !tbaa !394
  %10264 = insertelement <32 x i8> %10259, i8 %10263, i32 5
  %10265 = extractelement <32 x i32> %10234, i32 6
  %10266 = sext i32 %10265 to i64
  %10267 = getelementptr inbounds i8, i8* %5883, i64 %10266
  %10268 = load i8, i8* %10267, align 1, !tbaa !394
  %10269 = insertelement <32 x i8> %10264, i8 %10268, i32 6
  %10270 = extractelement <32 x i32> %10234, i32 7
  %10271 = sext i32 %10270 to i64
  %10272 = getelementptr inbounds i8, i8* %5883, i64 %10271
  %10273 = load i8, i8* %10272, align 1, !tbaa !394
  %10274 = insertelement <32 x i8> %10269, i8 %10273, i32 7
  %10275 = extractelement <32 x i32> %10234, i32 8
  %10276 = sext i32 %10275 to i64
  %10277 = getelementptr inbounds i8, i8* %5883, i64 %10276
  %10278 = load i8, i8* %10277, align 1, !tbaa !394
  %10279 = insertelement <32 x i8> %10274, i8 %10278, i32 8
  %10280 = extractelement <32 x i32> %10234, i32 9
  %10281 = sext i32 %10280 to i64
  %10282 = getelementptr inbounds i8, i8* %5883, i64 %10281
  %10283 = load i8, i8* %10282, align 1, !tbaa !394
  %10284 = insertelement <32 x i8> %10279, i8 %10283, i32 9
  %10285 = extractelement <32 x i32> %10234, i32 10
  %10286 = sext i32 %10285 to i64
  %10287 = getelementptr inbounds i8, i8* %5883, i64 %10286
  %10288 = load i8, i8* %10287, align 1, !tbaa !394
  %10289 = insertelement <32 x i8> %10284, i8 %10288, i32 10
  %10290 = extractelement <32 x i32> %10234, i32 11
  %10291 = sext i32 %10290 to i64
  %10292 = getelementptr inbounds i8, i8* %5883, i64 %10291
  %10293 = load i8, i8* %10292, align 1, !tbaa !394
  %10294 = insertelement <32 x i8> %10289, i8 %10293, i32 11
  %10295 = extractelement <32 x i32> %10234, i32 12
  %10296 = sext i32 %10295 to i64
  %10297 = getelementptr inbounds i8, i8* %5883, i64 %10296
  %10298 = load i8, i8* %10297, align 1, !tbaa !394
  %10299 = insertelement <32 x i8> %10294, i8 %10298, i32 12
  %10300 = extractelement <32 x i32> %10234, i32 13
  %10301 = sext i32 %10300 to i64
  %10302 = getelementptr inbounds i8, i8* %5883, i64 %10301
  %10303 = load i8, i8* %10302, align 1, !tbaa !394
  %10304 = insertelement <32 x i8> %10299, i8 %10303, i32 13
  %10305 = extractelement <32 x i32> %10234, i32 14
  %10306 = sext i32 %10305 to i64
  %10307 = getelementptr inbounds i8, i8* %5883, i64 %10306
  %10308 = load i8, i8* %10307, align 1, !tbaa !394
  %10309 = insertelement <32 x i8> %10304, i8 %10308, i32 14
  %10310 = extractelement <32 x i32> %10234, i32 15
  %10311 = sext i32 %10310 to i64
  %10312 = getelementptr inbounds i8, i8* %5883, i64 %10311
  %10313 = load i8, i8* %10312, align 1, !tbaa !394
  %10314 = insertelement <32 x i8> %10309, i8 %10313, i32 15
  %10315 = extractelement <32 x i32> %10234, i32 16
  %10316 = sext i32 %10315 to i64
  %10317 = getelementptr inbounds i8, i8* %5883, i64 %10316
  %10318 = load i8, i8* %10317, align 1, !tbaa !394
  %10319 = insertelement <32 x i8> %10314, i8 %10318, i32 16
  %10320 = extractelement <32 x i32> %10234, i32 17
  %10321 = sext i32 %10320 to i64
  %10322 = getelementptr inbounds i8, i8* %5883, i64 %10321
  %10323 = load i8, i8* %10322, align 1, !tbaa !394
  %10324 = insertelement <32 x i8> %10319, i8 %10323, i32 17
  %10325 = extractelement <32 x i32> %10234, i32 18
  %10326 = sext i32 %10325 to i64
  %10327 = getelementptr inbounds i8, i8* %5883, i64 %10326
  %10328 = load i8, i8* %10327, align 1, !tbaa !394
  %10329 = insertelement <32 x i8> %10324, i8 %10328, i32 18
  %10330 = extractelement <32 x i32> %10234, i32 19
  %10331 = sext i32 %10330 to i64
  %10332 = getelementptr inbounds i8, i8* %5883, i64 %10331
  %10333 = load i8, i8* %10332, align 1, !tbaa !394
  %10334 = insertelement <32 x i8> %10329, i8 %10333, i32 19
  %10335 = extractelement <32 x i32> %10234, i32 20
  %10336 = sext i32 %10335 to i64
  %10337 = getelementptr inbounds i8, i8* %5883, i64 %10336
  %10338 = load i8, i8* %10337, align 1, !tbaa !394
  %10339 = insertelement <32 x i8> %10334, i8 %10338, i32 20
  %10340 = extractelement <32 x i32> %10234, i32 21
  %10341 = sext i32 %10340 to i64
  %10342 = getelementptr inbounds i8, i8* %5883, i64 %10341
  %10343 = load i8, i8* %10342, align 1, !tbaa !394
  %10344 = insertelement <32 x i8> %10339, i8 %10343, i32 21
  %10345 = extractelement <32 x i32> %10234, i32 22
  %10346 = sext i32 %10345 to i64
  %10347 = getelementptr inbounds i8, i8* %5883, i64 %10346
  %10348 = load i8, i8* %10347, align 1, !tbaa !394
  %10349 = insertelement <32 x i8> %10344, i8 %10348, i32 22
  %10350 = extractelement <32 x i32> %10234, i32 23
  %10351 = sext i32 %10350 to i64
  %10352 = getelementptr inbounds i8, i8* %5883, i64 %10351
  %10353 = load i8, i8* %10352, align 1, !tbaa !394
  %10354 = insertelement <32 x i8> %10349, i8 %10353, i32 23
  %10355 = extractelement <32 x i32> %10234, i32 24
  %10356 = sext i32 %10355 to i64
  %10357 = getelementptr inbounds i8, i8* %5883, i64 %10356
  %10358 = load i8, i8* %10357, align 1, !tbaa !394
  %10359 = insertelement <32 x i8> %10354, i8 %10358, i32 24
  %10360 = extractelement <32 x i32> %10234, i32 25
  %10361 = sext i32 %10360 to i64
  %10362 = getelementptr inbounds i8, i8* %5883, i64 %10361
  %10363 = load i8, i8* %10362, align 1, !tbaa !394
  %10364 = insertelement <32 x i8> %10359, i8 %10363, i32 25
  %10365 = extractelement <32 x i32> %10234, i32 26
  %10366 = sext i32 %10365 to i64
  %10367 = getelementptr inbounds i8, i8* %5883, i64 %10366
  %10368 = load i8, i8* %10367, align 1, !tbaa !394
  %10369 = insertelement <32 x i8> %10364, i8 %10368, i32 26
  %10370 = extractelement <32 x i32> %10234, i32 27
  %10371 = sext i32 %10370 to i64
  %10372 = getelementptr inbounds i8, i8* %5883, i64 %10371
  %10373 = load i8, i8* %10372, align 1, !tbaa !394
  %10374 = insertelement <32 x i8> %10369, i8 %10373, i32 27
  %10375 = extractelement <32 x i32> %10234, i32 28
  %10376 = sext i32 %10375 to i64
  %10377 = getelementptr inbounds i8, i8* %5883, i64 %10376
  %10378 = load i8, i8* %10377, align 1, !tbaa !394
  %10379 = insertelement <32 x i8> %10374, i8 %10378, i32 28
  %10380 = extractelement <32 x i32> %10234, i32 29
  %10381 = sext i32 %10380 to i64
  %10382 = getelementptr inbounds i8, i8* %5883, i64 %10381
  %10383 = load i8, i8* %10382, align 1, !tbaa !394
  %10384 = insertelement <32 x i8> %10379, i8 %10383, i32 29
  %10385 = extractelement <32 x i32> %10234, i32 30
  %10386 = sext i32 %10385 to i64
  %10387 = getelementptr inbounds i8, i8* %5883, i64 %10386
  %10388 = load i8, i8* %10387, align 1, !tbaa !394
  %10389 = insertelement <32 x i8> %10384, i8 %10388, i32 30
  %10390 = extractelement <32 x i32> %10234, i32 31
  %10391 = sext i32 %10390 to i64
  %10392 = getelementptr inbounds i8, i8* %5883, i64 %10391
  %10393 = load i8, i8* %10392, align 1, !tbaa !394
  %t216.s207 = insertelement <32 x i8> %10389, i8 %10393, i32 31
  %10394 = add nsw i32 %10208, 1
  %10395 = insertelement <32 x i32> undef, i32 %10394, i32 0
  %10396 = shufflevector <32 x i32> %10395, <32 x i32> undef, <32 x i32> zeroinitializer
  %a190 = add nsw <32 x i32> %10396, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %10397 = shufflevector <32 x i32> %a190, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %10398 = icmp sgt <16 x i32> %7474, %10397
  %10399 = shufflevector <32 x i32> %a190, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %10400 = icmp sgt <16 x i32> %7474, %10399
  %10401 = select <16 x i1> %10398, <16 x i32> %10397, <16 x i32> %7474
  %10402 = select <16 x i1> %10400, <16 x i32> %10399, <16 x i32> %7474
  %10403 = icmp sgt <16 x i32> %10401, %7476
  %10404 = icmp sgt <16 x i32> %10402, %7476
  %10405 = select <16 x i1> %10403, <16 x i32> %10401, <16 x i32> %7476
  %10406 = select <16 x i1> %10404, <16 x i32> %10402, <16 x i32> %7476
  %t217208 = shufflevector <16 x i32> %10405, <16 x i32> %10406, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %10407 = add nsw <32 x i32> %t217208, %10193
  %10408 = extractelement <32 x i32> %10407, i32 0
  %10409 = sext i32 %10408 to i64
  %10410 = getelementptr inbounds i8, i8* %5883, i64 %10409
  %10411 = load i8, i8* %10410, align 1, !tbaa !394
  %10412 = insertelement <32 x i8> undef, i8 %10411, i32 0
  %10413 = extractelement <32 x i32> %10407, i32 1
  %10414 = sext i32 %10413 to i64
  %10415 = getelementptr inbounds i8, i8* %5883, i64 %10414
  %10416 = load i8, i8* %10415, align 1, !tbaa !394
  %10417 = insertelement <32 x i8> %10412, i8 %10416, i32 1
  %10418 = extractelement <32 x i32> %10407, i32 2
  %10419 = sext i32 %10418 to i64
  %10420 = getelementptr inbounds i8, i8* %5883, i64 %10419
  %10421 = load i8, i8* %10420, align 1, !tbaa !394
  %10422 = insertelement <32 x i8> %10417, i8 %10421, i32 2
  %10423 = extractelement <32 x i32> %10407, i32 3
  %10424 = sext i32 %10423 to i64
  %10425 = getelementptr inbounds i8, i8* %5883, i64 %10424
  %10426 = load i8, i8* %10425, align 1, !tbaa !394
  %10427 = insertelement <32 x i8> %10422, i8 %10426, i32 3
  %10428 = extractelement <32 x i32> %10407, i32 4
  %10429 = sext i32 %10428 to i64
  %10430 = getelementptr inbounds i8, i8* %5883, i64 %10429
  %10431 = load i8, i8* %10430, align 1, !tbaa !394
  %10432 = insertelement <32 x i8> %10427, i8 %10431, i32 4
  %10433 = extractelement <32 x i32> %10407, i32 5
  %10434 = sext i32 %10433 to i64
  %10435 = getelementptr inbounds i8, i8* %5883, i64 %10434
  %10436 = load i8, i8* %10435, align 1, !tbaa !394
  %10437 = insertelement <32 x i8> %10432, i8 %10436, i32 5
  %10438 = extractelement <32 x i32> %10407, i32 6
  %10439 = sext i32 %10438 to i64
  %10440 = getelementptr inbounds i8, i8* %5883, i64 %10439
  %10441 = load i8, i8* %10440, align 1, !tbaa !394
  %10442 = insertelement <32 x i8> %10437, i8 %10441, i32 6
  %10443 = extractelement <32 x i32> %10407, i32 7
  %10444 = sext i32 %10443 to i64
  %10445 = getelementptr inbounds i8, i8* %5883, i64 %10444
  %10446 = load i8, i8* %10445, align 1, !tbaa !394
  %10447 = insertelement <32 x i8> %10442, i8 %10446, i32 7
  %10448 = extractelement <32 x i32> %10407, i32 8
  %10449 = sext i32 %10448 to i64
  %10450 = getelementptr inbounds i8, i8* %5883, i64 %10449
  %10451 = load i8, i8* %10450, align 1, !tbaa !394
  %10452 = insertelement <32 x i8> %10447, i8 %10451, i32 8
  %10453 = extractelement <32 x i32> %10407, i32 9
  %10454 = sext i32 %10453 to i64
  %10455 = getelementptr inbounds i8, i8* %5883, i64 %10454
  %10456 = load i8, i8* %10455, align 1, !tbaa !394
  %10457 = insertelement <32 x i8> %10452, i8 %10456, i32 9
  %10458 = extractelement <32 x i32> %10407, i32 10
  %10459 = sext i32 %10458 to i64
  %10460 = getelementptr inbounds i8, i8* %5883, i64 %10459
  %10461 = load i8, i8* %10460, align 1, !tbaa !394
  %10462 = insertelement <32 x i8> %10457, i8 %10461, i32 10
  %10463 = extractelement <32 x i32> %10407, i32 11
  %10464 = sext i32 %10463 to i64
  %10465 = getelementptr inbounds i8, i8* %5883, i64 %10464
  %10466 = load i8, i8* %10465, align 1, !tbaa !394
  %10467 = insertelement <32 x i8> %10462, i8 %10466, i32 11
  %10468 = extractelement <32 x i32> %10407, i32 12
  %10469 = sext i32 %10468 to i64
  %10470 = getelementptr inbounds i8, i8* %5883, i64 %10469
  %10471 = load i8, i8* %10470, align 1, !tbaa !394
  %10472 = insertelement <32 x i8> %10467, i8 %10471, i32 12
  %10473 = extractelement <32 x i32> %10407, i32 13
  %10474 = sext i32 %10473 to i64
  %10475 = getelementptr inbounds i8, i8* %5883, i64 %10474
  %10476 = load i8, i8* %10475, align 1, !tbaa !394
  %10477 = insertelement <32 x i8> %10472, i8 %10476, i32 13
  %10478 = extractelement <32 x i32> %10407, i32 14
  %10479 = sext i32 %10478 to i64
  %10480 = getelementptr inbounds i8, i8* %5883, i64 %10479
  %10481 = load i8, i8* %10480, align 1, !tbaa !394
  %10482 = insertelement <32 x i8> %10477, i8 %10481, i32 14
  %10483 = extractelement <32 x i32> %10407, i32 15
  %10484 = sext i32 %10483 to i64
  %10485 = getelementptr inbounds i8, i8* %5883, i64 %10484
  %10486 = load i8, i8* %10485, align 1, !tbaa !394
  %10487 = insertelement <32 x i8> %10482, i8 %10486, i32 15
  %10488 = extractelement <32 x i32> %10407, i32 16
  %10489 = sext i32 %10488 to i64
  %10490 = getelementptr inbounds i8, i8* %5883, i64 %10489
  %10491 = load i8, i8* %10490, align 1, !tbaa !394
  %10492 = insertelement <32 x i8> %10487, i8 %10491, i32 16
  %10493 = extractelement <32 x i32> %10407, i32 17
  %10494 = sext i32 %10493 to i64
  %10495 = getelementptr inbounds i8, i8* %5883, i64 %10494
  %10496 = load i8, i8* %10495, align 1, !tbaa !394
  %10497 = insertelement <32 x i8> %10492, i8 %10496, i32 17
  %10498 = extractelement <32 x i32> %10407, i32 18
  %10499 = sext i32 %10498 to i64
  %10500 = getelementptr inbounds i8, i8* %5883, i64 %10499
  %10501 = load i8, i8* %10500, align 1, !tbaa !394
  %10502 = insertelement <32 x i8> %10497, i8 %10501, i32 18
  %10503 = extractelement <32 x i32> %10407, i32 19
  %10504 = sext i32 %10503 to i64
  %10505 = getelementptr inbounds i8, i8* %5883, i64 %10504
  %10506 = load i8, i8* %10505, align 1, !tbaa !394
  %10507 = insertelement <32 x i8> %10502, i8 %10506, i32 19
  %10508 = extractelement <32 x i32> %10407, i32 20
  %10509 = sext i32 %10508 to i64
  %10510 = getelementptr inbounds i8, i8* %5883, i64 %10509
  %10511 = load i8, i8* %10510, align 1, !tbaa !394
  %10512 = insertelement <32 x i8> %10507, i8 %10511, i32 20
  %10513 = extractelement <32 x i32> %10407, i32 21
  %10514 = sext i32 %10513 to i64
  %10515 = getelementptr inbounds i8, i8* %5883, i64 %10514
  %10516 = load i8, i8* %10515, align 1, !tbaa !394
  %10517 = insertelement <32 x i8> %10512, i8 %10516, i32 21
  %10518 = extractelement <32 x i32> %10407, i32 22
  %10519 = sext i32 %10518 to i64
  %10520 = getelementptr inbounds i8, i8* %5883, i64 %10519
  %10521 = load i8, i8* %10520, align 1, !tbaa !394
  %10522 = insertelement <32 x i8> %10517, i8 %10521, i32 22
  %10523 = extractelement <32 x i32> %10407, i32 23
  %10524 = sext i32 %10523 to i64
  %10525 = getelementptr inbounds i8, i8* %5883, i64 %10524
  %10526 = load i8, i8* %10525, align 1, !tbaa !394
  %10527 = insertelement <32 x i8> %10522, i8 %10526, i32 23
  %10528 = extractelement <32 x i32> %10407, i32 24
  %10529 = sext i32 %10528 to i64
  %10530 = getelementptr inbounds i8, i8* %5883, i64 %10529
  %10531 = load i8, i8* %10530, align 1, !tbaa !394
  %10532 = insertelement <32 x i8> %10527, i8 %10531, i32 24
  %10533 = extractelement <32 x i32> %10407, i32 25
  %10534 = sext i32 %10533 to i64
  %10535 = getelementptr inbounds i8, i8* %5883, i64 %10534
  %10536 = load i8, i8* %10535, align 1, !tbaa !394
  %10537 = insertelement <32 x i8> %10532, i8 %10536, i32 25
  %10538 = extractelement <32 x i32> %10407, i32 26
  %10539 = sext i32 %10538 to i64
  %10540 = getelementptr inbounds i8, i8* %5883, i64 %10539
  %10541 = load i8, i8* %10540, align 1, !tbaa !394
  %10542 = insertelement <32 x i8> %10537, i8 %10541, i32 26
  %10543 = extractelement <32 x i32> %10407, i32 27
  %10544 = sext i32 %10543 to i64
  %10545 = getelementptr inbounds i8, i8* %5883, i64 %10544
  %10546 = load i8, i8* %10545, align 1, !tbaa !394
  %10547 = insertelement <32 x i8> %10542, i8 %10546, i32 27
  %10548 = extractelement <32 x i32> %10407, i32 28
  %10549 = sext i32 %10548 to i64
  %10550 = getelementptr inbounds i8, i8* %5883, i64 %10549
  %10551 = load i8, i8* %10550, align 1, !tbaa !394
  %10552 = insertelement <32 x i8> %10547, i8 %10551, i32 28
  %10553 = extractelement <32 x i32> %10407, i32 29
  %10554 = sext i32 %10553 to i64
  %10555 = getelementptr inbounds i8, i8* %5883, i64 %10554
  %10556 = load i8, i8* %10555, align 1, !tbaa !394
  %10557 = insertelement <32 x i8> %10552, i8 %10556, i32 29
  %10558 = extractelement <32 x i32> %10407, i32 30
  %10559 = sext i32 %10558 to i64
  %10560 = getelementptr inbounds i8, i8* %5883, i64 %10559
  %10561 = load i8, i8* %10560, align 1, !tbaa !394
  %10562 = insertelement <32 x i8> %10557, i8 %10561, i32 30
  %10563 = extractelement <32 x i32> %10407, i32 31
  %10564 = sext i32 %10563 to i64
  %10565 = getelementptr inbounds i8, i8* %5883, i64 %10564
  %10566 = load i8, i8* %10565, align 1, !tbaa !394
  %t218.s209 = insertelement <32 x i8> %10562, i8 %10566, i32 31
  %10567 = add nsw <32 x i32> %t215206, %10200
  %10568 = extractelement <32 x i32> %10567, i32 0
  %10569 = sext i32 %10568 to i64
  %10570 = getelementptr inbounds i8, i8* %5883, i64 %10569
  %10571 = load i8, i8* %10570, align 1, !tbaa !394
  %10572 = insertelement <32 x i8> undef, i8 %10571, i32 0
  %10573 = extractelement <32 x i32> %10567, i32 1
  %10574 = sext i32 %10573 to i64
  %10575 = getelementptr inbounds i8, i8* %5883, i64 %10574
  %10576 = load i8, i8* %10575, align 1, !tbaa !394
  %10577 = insertelement <32 x i8> %10572, i8 %10576, i32 1
  %10578 = extractelement <32 x i32> %10567, i32 2
  %10579 = sext i32 %10578 to i64
  %10580 = getelementptr inbounds i8, i8* %5883, i64 %10579
  %10581 = load i8, i8* %10580, align 1, !tbaa !394
  %10582 = insertelement <32 x i8> %10577, i8 %10581, i32 2
  %10583 = extractelement <32 x i32> %10567, i32 3
  %10584 = sext i32 %10583 to i64
  %10585 = getelementptr inbounds i8, i8* %5883, i64 %10584
  %10586 = load i8, i8* %10585, align 1, !tbaa !394
  %10587 = insertelement <32 x i8> %10582, i8 %10586, i32 3
  %10588 = extractelement <32 x i32> %10567, i32 4
  %10589 = sext i32 %10588 to i64
  %10590 = getelementptr inbounds i8, i8* %5883, i64 %10589
  %10591 = load i8, i8* %10590, align 1, !tbaa !394
  %10592 = insertelement <32 x i8> %10587, i8 %10591, i32 4
  %10593 = extractelement <32 x i32> %10567, i32 5
  %10594 = sext i32 %10593 to i64
  %10595 = getelementptr inbounds i8, i8* %5883, i64 %10594
  %10596 = load i8, i8* %10595, align 1, !tbaa !394
  %10597 = insertelement <32 x i8> %10592, i8 %10596, i32 5
  %10598 = extractelement <32 x i32> %10567, i32 6
  %10599 = sext i32 %10598 to i64
  %10600 = getelementptr inbounds i8, i8* %5883, i64 %10599
  %10601 = load i8, i8* %10600, align 1, !tbaa !394
  %10602 = insertelement <32 x i8> %10597, i8 %10601, i32 6
  %10603 = extractelement <32 x i32> %10567, i32 7
  %10604 = sext i32 %10603 to i64
  %10605 = getelementptr inbounds i8, i8* %5883, i64 %10604
  %10606 = load i8, i8* %10605, align 1, !tbaa !394
  %10607 = insertelement <32 x i8> %10602, i8 %10606, i32 7
  %10608 = extractelement <32 x i32> %10567, i32 8
  %10609 = sext i32 %10608 to i64
  %10610 = getelementptr inbounds i8, i8* %5883, i64 %10609
  %10611 = load i8, i8* %10610, align 1, !tbaa !394
  %10612 = insertelement <32 x i8> %10607, i8 %10611, i32 8
  %10613 = extractelement <32 x i32> %10567, i32 9
  %10614 = sext i32 %10613 to i64
  %10615 = getelementptr inbounds i8, i8* %5883, i64 %10614
  %10616 = load i8, i8* %10615, align 1, !tbaa !394
  %10617 = insertelement <32 x i8> %10612, i8 %10616, i32 9
  %10618 = extractelement <32 x i32> %10567, i32 10
  %10619 = sext i32 %10618 to i64
  %10620 = getelementptr inbounds i8, i8* %5883, i64 %10619
  %10621 = load i8, i8* %10620, align 1, !tbaa !394
  %10622 = insertelement <32 x i8> %10617, i8 %10621, i32 10
  %10623 = extractelement <32 x i32> %10567, i32 11
  %10624 = sext i32 %10623 to i64
  %10625 = getelementptr inbounds i8, i8* %5883, i64 %10624
  %10626 = load i8, i8* %10625, align 1, !tbaa !394
  %10627 = insertelement <32 x i8> %10622, i8 %10626, i32 11
  %10628 = extractelement <32 x i32> %10567, i32 12
  %10629 = sext i32 %10628 to i64
  %10630 = getelementptr inbounds i8, i8* %5883, i64 %10629
  %10631 = load i8, i8* %10630, align 1, !tbaa !394
  %10632 = insertelement <32 x i8> %10627, i8 %10631, i32 12
  %10633 = extractelement <32 x i32> %10567, i32 13
  %10634 = sext i32 %10633 to i64
  %10635 = getelementptr inbounds i8, i8* %5883, i64 %10634
  %10636 = load i8, i8* %10635, align 1, !tbaa !394
  %10637 = insertelement <32 x i8> %10632, i8 %10636, i32 13
  %10638 = extractelement <32 x i32> %10567, i32 14
  %10639 = sext i32 %10638 to i64
  %10640 = getelementptr inbounds i8, i8* %5883, i64 %10639
  %10641 = load i8, i8* %10640, align 1, !tbaa !394
  %10642 = insertelement <32 x i8> %10637, i8 %10641, i32 14
  %10643 = extractelement <32 x i32> %10567, i32 15
  %10644 = sext i32 %10643 to i64
  %10645 = getelementptr inbounds i8, i8* %5883, i64 %10644
  %10646 = load i8, i8* %10645, align 1, !tbaa !394
  %10647 = insertelement <32 x i8> %10642, i8 %10646, i32 15
  %10648 = extractelement <32 x i32> %10567, i32 16
  %10649 = sext i32 %10648 to i64
  %10650 = getelementptr inbounds i8, i8* %5883, i64 %10649
  %10651 = load i8, i8* %10650, align 1, !tbaa !394
  %10652 = insertelement <32 x i8> %10647, i8 %10651, i32 16
  %10653 = extractelement <32 x i32> %10567, i32 17
  %10654 = sext i32 %10653 to i64
  %10655 = getelementptr inbounds i8, i8* %5883, i64 %10654
  %10656 = load i8, i8* %10655, align 1, !tbaa !394
  %10657 = insertelement <32 x i8> %10652, i8 %10656, i32 17
  %10658 = extractelement <32 x i32> %10567, i32 18
  %10659 = sext i32 %10658 to i64
  %10660 = getelementptr inbounds i8, i8* %5883, i64 %10659
  %10661 = load i8, i8* %10660, align 1, !tbaa !394
  %10662 = insertelement <32 x i8> %10657, i8 %10661, i32 18
  %10663 = extractelement <32 x i32> %10567, i32 19
  %10664 = sext i32 %10663 to i64
  %10665 = getelementptr inbounds i8, i8* %5883, i64 %10664
  %10666 = load i8, i8* %10665, align 1, !tbaa !394
  %10667 = insertelement <32 x i8> %10662, i8 %10666, i32 19
  %10668 = extractelement <32 x i32> %10567, i32 20
  %10669 = sext i32 %10668 to i64
  %10670 = getelementptr inbounds i8, i8* %5883, i64 %10669
  %10671 = load i8, i8* %10670, align 1, !tbaa !394
  %10672 = insertelement <32 x i8> %10667, i8 %10671, i32 20
  %10673 = extractelement <32 x i32> %10567, i32 21
  %10674 = sext i32 %10673 to i64
  %10675 = getelementptr inbounds i8, i8* %5883, i64 %10674
  %10676 = load i8, i8* %10675, align 1, !tbaa !394
  %10677 = insertelement <32 x i8> %10672, i8 %10676, i32 21
  %10678 = extractelement <32 x i32> %10567, i32 22
  %10679 = sext i32 %10678 to i64
  %10680 = getelementptr inbounds i8, i8* %5883, i64 %10679
  %10681 = load i8, i8* %10680, align 1, !tbaa !394
  %10682 = insertelement <32 x i8> %10677, i8 %10681, i32 22
  %10683 = extractelement <32 x i32> %10567, i32 23
  %10684 = sext i32 %10683 to i64
  %10685 = getelementptr inbounds i8, i8* %5883, i64 %10684
  %10686 = load i8, i8* %10685, align 1, !tbaa !394
  %10687 = insertelement <32 x i8> %10682, i8 %10686, i32 23
  %10688 = extractelement <32 x i32> %10567, i32 24
  %10689 = sext i32 %10688 to i64
  %10690 = getelementptr inbounds i8, i8* %5883, i64 %10689
  %10691 = load i8, i8* %10690, align 1, !tbaa !394
  %10692 = insertelement <32 x i8> %10687, i8 %10691, i32 24
  %10693 = extractelement <32 x i32> %10567, i32 25
  %10694 = sext i32 %10693 to i64
  %10695 = getelementptr inbounds i8, i8* %5883, i64 %10694
  %10696 = load i8, i8* %10695, align 1, !tbaa !394
  %10697 = insertelement <32 x i8> %10692, i8 %10696, i32 25
  %10698 = extractelement <32 x i32> %10567, i32 26
  %10699 = sext i32 %10698 to i64
  %10700 = getelementptr inbounds i8, i8* %5883, i64 %10699
  %10701 = load i8, i8* %10700, align 1, !tbaa !394
  %10702 = insertelement <32 x i8> %10697, i8 %10701, i32 26
  %10703 = extractelement <32 x i32> %10567, i32 27
  %10704 = sext i32 %10703 to i64
  %10705 = getelementptr inbounds i8, i8* %5883, i64 %10704
  %10706 = load i8, i8* %10705, align 1, !tbaa !394
  %10707 = insertelement <32 x i8> %10702, i8 %10706, i32 27
  %10708 = extractelement <32 x i32> %10567, i32 28
  %10709 = sext i32 %10708 to i64
  %10710 = getelementptr inbounds i8, i8* %5883, i64 %10709
  %10711 = load i8, i8* %10710, align 1, !tbaa !394
  %10712 = insertelement <32 x i8> %10707, i8 %10711, i32 28
  %10713 = extractelement <32 x i32> %10567, i32 29
  %10714 = sext i32 %10713 to i64
  %10715 = getelementptr inbounds i8, i8* %5883, i64 %10714
  %10716 = load i8, i8* %10715, align 1, !tbaa !394
  %10717 = insertelement <32 x i8> %10712, i8 %10716, i32 29
  %10718 = extractelement <32 x i32> %10567, i32 30
  %10719 = sext i32 %10718 to i64
  %10720 = getelementptr inbounds i8, i8* %5883, i64 %10719
  %10721 = load i8, i8* %10720, align 1, !tbaa !394
  %10722 = insertelement <32 x i8> %10717, i8 %10721, i32 30
  %10723 = extractelement <32 x i32> %10567, i32 31
  %10724 = sext i32 %10723 to i64
  %10725 = getelementptr inbounds i8, i8* %5883, i64 %10724
  %10726 = load i8, i8* %10725, align 1, !tbaa !394
  %t220.s210 = insertelement <32 x i8> %10722, i8 %10726, i32 31
  %10727 = add nsw <32 x i32> %t217208, %10200
  %10728 = extractelement <32 x i32> %10727, i32 0
  %10729 = sext i32 %10728 to i64
  %10730 = getelementptr inbounds i8, i8* %5883, i64 %10729
  %10731 = load i8, i8* %10730, align 1, !tbaa !394
  %10732 = insertelement <32 x i8> undef, i8 %10731, i32 0
  %10733 = extractelement <32 x i32> %10727, i32 1
  %10734 = sext i32 %10733 to i64
  %10735 = getelementptr inbounds i8, i8* %5883, i64 %10734
  %10736 = load i8, i8* %10735, align 1, !tbaa !394
  %10737 = insertelement <32 x i8> %10732, i8 %10736, i32 1
  %10738 = extractelement <32 x i32> %10727, i32 2
  %10739 = sext i32 %10738 to i64
  %10740 = getelementptr inbounds i8, i8* %5883, i64 %10739
  %10741 = load i8, i8* %10740, align 1, !tbaa !394
  %10742 = insertelement <32 x i8> %10737, i8 %10741, i32 2
  %10743 = extractelement <32 x i32> %10727, i32 3
  %10744 = sext i32 %10743 to i64
  %10745 = getelementptr inbounds i8, i8* %5883, i64 %10744
  %10746 = load i8, i8* %10745, align 1, !tbaa !394
  %10747 = insertelement <32 x i8> %10742, i8 %10746, i32 3
  %10748 = extractelement <32 x i32> %10727, i32 4
  %10749 = sext i32 %10748 to i64
  %10750 = getelementptr inbounds i8, i8* %5883, i64 %10749
  %10751 = load i8, i8* %10750, align 1, !tbaa !394
  %10752 = insertelement <32 x i8> %10747, i8 %10751, i32 4
  %10753 = extractelement <32 x i32> %10727, i32 5
  %10754 = sext i32 %10753 to i64
  %10755 = getelementptr inbounds i8, i8* %5883, i64 %10754
  %10756 = load i8, i8* %10755, align 1, !tbaa !394
  %10757 = insertelement <32 x i8> %10752, i8 %10756, i32 5
  %10758 = extractelement <32 x i32> %10727, i32 6
  %10759 = sext i32 %10758 to i64
  %10760 = getelementptr inbounds i8, i8* %5883, i64 %10759
  %10761 = load i8, i8* %10760, align 1, !tbaa !394
  %10762 = insertelement <32 x i8> %10757, i8 %10761, i32 6
  %10763 = extractelement <32 x i32> %10727, i32 7
  %10764 = sext i32 %10763 to i64
  %10765 = getelementptr inbounds i8, i8* %5883, i64 %10764
  %10766 = load i8, i8* %10765, align 1, !tbaa !394
  %10767 = insertelement <32 x i8> %10762, i8 %10766, i32 7
  %10768 = extractelement <32 x i32> %10727, i32 8
  %10769 = sext i32 %10768 to i64
  %10770 = getelementptr inbounds i8, i8* %5883, i64 %10769
  %10771 = load i8, i8* %10770, align 1, !tbaa !394
  %10772 = insertelement <32 x i8> %10767, i8 %10771, i32 8
  %10773 = extractelement <32 x i32> %10727, i32 9
  %10774 = sext i32 %10773 to i64
  %10775 = getelementptr inbounds i8, i8* %5883, i64 %10774
  %10776 = load i8, i8* %10775, align 1, !tbaa !394
  %10777 = insertelement <32 x i8> %10772, i8 %10776, i32 9
  %10778 = extractelement <32 x i32> %10727, i32 10
  %10779 = sext i32 %10778 to i64
  %10780 = getelementptr inbounds i8, i8* %5883, i64 %10779
  %10781 = load i8, i8* %10780, align 1, !tbaa !394
  %10782 = insertelement <32 x i8> %10777, i8 %10781, i32 10
  %10783 = extractelement <32 x i32> %10727, i32 11
  %10784 = sext i32 %10783 to i64
  %10785 = getelementptr inbounds i8, i8* %5883, i64 %10784
  %10786 = load i8, i8* %10785, align 1, !tbaa !394
  %10787 = insertelement <32 x i8> %10782, i8 %10786, i32 11
  %10788 = extractelement <32 x i32> %10727, i32 12
  %10789 = sext i32 %10788 to i64
  %10790 = getelementptr inbounds i8, i8* %5883, i64 %10789
  %10791 = load i8, i8* %10790, align 1, !tbaa !394
  %10792 = insertelement <32 x i8> %10787, i8 %10791, i32 12
  %10793 = extractelement <32 x i32> %10727, i32 13
  %10794 = sext i32 %10793 to i64
  %10795 = getelementptr inbounds i8, i8* %5883, i64 %10794
  %10796 = load i8, i8* %10795, align 1, !tbaa !394
  %10797 = insertelement <32 x i8> %10792, i8 %10796, i32 13
  %10798 = extractelement <32 x i32> %10727, i32 14
  %10799 = sext i32 %10798 to i64
  %10800 = getelementptr inbounds i8, i8* %5883, i64 %10799
  %10801 = load i8, i8* %10800, align 1, !tbaa !394
  %10802 = insertelement <32 x i8> %10797, i8 %10801, i32 14
  %10803 = extractelement <32 x i32> %10727, i32 15
  %10804 = sext i32 %10803 to i64
  %10805 = getelementptr inbounds i8, i8* %5883, i64 %10804
  %10806 = load i8, i8* %10805, align 1, !tbaa !394
  %10807 = insertelement <32 x i8> %10802, i8 %10806, i32 15
  %10808 = extractelement <32 x i32> %10727, i32 16
  %10809 = sext i32 %10808 to i64
  %10810 = getelementptr inbounds i8, i8* %5883, i64 %10809
  %10811 = load i8, i8* %10810, align 1, !tbaa !394
  %10812 = insertelement <32 x i8> %10807, i8 %10811, i32 16
  %10813 = extractelement <32 x i32> %10727, i32 17
  %10814 = sext i32 %10813 to i64
  %10815 = getelementptr inbounds i8, i8* %5883, i64 %10814
  %10816 = load i8, i8* %10815, align 1, !tbaa !394
  %10817 = insertelement <32 x i8> %10812, i8 %10816, i32 17
  %10818 = extractelement <32 x i32> %10727, i32 18
  %10819 = sext i32 %10818 to i64
  %10820 = getelementptr inbounds i8, i8* %5883, i64 %10819
  %10821 = load i8, i8* %10820, align 1, !tbaa !394
  %10822 = insertelement <32 x i8> %10817, i8 %10821, i32 18
  %10823 = extractelement <32 x i32> %10727, i32 19
  %10824 = sext i32 %10823 to i64
  %10825 = getelementptr inbounds i8, i8* %5883, i64 %10824
  %10826 = load i8, i8* %10825, align 1, !tbaa !394
  %10827 = insertelement <32 x i8> %10822, i8 %10826, i32 19
  %10828 = extractelement <32 x i32> %10727, i32 20
  %10829 = sext i32 %10828 to i64
  %10830 = getelementptr inbounds i8, i8* %5883, i64 %10829
  %10831 = load i8, i8* %10830, align 1, !tbaa !394
  %10832 = insertelement <32 x i8> %10827, i8 %10831, i32 20
  %10833 = extractelement <32 x i32> %10727, i32 21
  %10834 = sext i32 %10833 to i64
  %10835 = getelementptr inbounds i8, i8* %5883, i64 %10834
  %10836 = load i8, i8* %10835, align 1, !tbaa !394
  %10837 = insertelement <32 x i8> %10832, i8 %10836, i32 21
  %10838 = extractelement <32 x i32> %10727, i32 22
  %10839 = sext i32 %10838 to i64
  %10840 = getelementptr inbounds i8, i8* %5883, i64 %10839
  %10841 = load i8, i8* %10840, align 1, !tbaa !394
  %10842 = insertelement <32 x i8> %10837, i8 %10841, i32 22
  %10843 = extractelement <32 x i32> %10727, i32 23
  %10844 = sext i32 %10843 to i64
  %10845 = getelementptr inbounds i8, i8* %5883, i64 %10844
  %10846 = load i8, i8* %10845, align 1, !tbaa !394
  %10847 = insertelement <32 x i8> %10842, i8 %10846, i32 23
  %10848 = extractelement <32 x i32> %10727, i32 24
  %10849 = sext i32 %10848 to i64
  %10850 = getelementptr inbounds i8, i8* %5883, i64 %10849
  %10851 = load i8, i8* %10850, align 1, !tbaa !394
  %10852 = insertelement <32 x i8> %10847, i8 %10851, i32 24
  %10853 = extractelement <32 x i32> %10727, i32 25
  %10854 = sext i32 %10853 to i64
  %10855 = getelementptr inbounds i8, i8* %5883, i64 %10854
  %10856 = load i8, i8* %10855, align 1, !tbaa !394
  %10857 = insertelement <32 x i8> %10852, i8 %10856, i32 25
  %10858 = extractelement <32 x i32> %10727, i32 26
  %10859 = sext i32 %10858 to i64
  %10860 = getelementptr inbounds i8, i8* %5883, i64 %10859
  %10861 = load i8, i8* %10860, align 1, !tbaa !394
  %10862 = insertelement <32 x i8> %10857, i8 %10861, i32 26
  %10863 = extractelement <32 x i32> %10727, i32 27
  %10864 = sext i32 %10863 to i64
  %10865 = getelementptr inbounds i8, i8* %5883, i64 %10864
  %10866 = load i8, i8* %10865, align 1, !tbaa !394
  %10867 = insertelement <32 x i8> %10862, i8 %10866, i32 27
  %10868 = extractelement <32 x i32> %10727, i32 28
  %10869 = sext i32 %10868 to i64
  %10870 = getelementptr inbounds i8, i8* %5883, i64 %10869
  %10871 = load i8, i8* %10870, align 1, !tbaa !394
  %10872 = insertelement <32 x i8> %10867, i8 %10871, i32 28
  %10873 = extractelement <32 x i32> %10727, i32 29
  %10874 = sext i32 %10873 to i64
  %10875 = getelementptr inbounds i8, i8* %5883, i64 %10874
  %10876 = load i8, i8* %10875, align 1, !tbaa !394
  %10877 = insertelement <32 x i8> %10872, i8 %10876, i32 29
  %10878 = extractelement <32 x i32> %10727, i32 30
  %10879 = sext i32 %10878 to i64
  %10880 = getelementptr inbounds i8, i8* %5883, i64 %10879
  %10881 = load i8, i8* %10880, align 1, !tbaa !394
  %10882 = insertelement <32 x i8> %10877, i8 %10881, i32 30
  %10883 = extractelement <32 x i32> %10727, i32 31
  %10884 = sext i32 %10883 to i64
  %10885 = getelementptr inbounds i8, i8* %5883, i64 %10884
  %10886 = load i8, i8* %10885, align 1, !tbaa !394
  %t221.s211 = insertelement <32 x i8> %10882, i8 %10886, i32 31
  %10887 = add nsw <32 x i32> %t212205, %10193
  %10888 = extractelement <32 x i32> %10887, i32 0
  %10889 = sext i32 %10888 to i64
  %10890 = getelementptr inbounds i8, i8* %5883, i64 %10889
  %10891 = load i8, i8* %10890, align 1, !tbaa !394
  %10892 = insertelement <32 x i8> undef, i8 %10891, i32 0
  %10893 = extractelement <32 x i32> %10887, i32 1
  %10894 = sext i32 %10893 to i64
  %10895 = getelementptr inbounds i8, i8* %5883, i64 %10894
  %10896 = load i8, i8* %10895, align 1, !tbaa !394
  %10897 = insertelement <32 x i8> %10892, i8 %10896, i32 1
  %10898 = extractelement <32 x i32> %10887, i32 2
  %10899 = sext i32 %10898 to i64
  %10900 = getelementptr inbounds i8, i8* %5883, i64 %10899
  %10901 = load i8, i8* %10900, align 1, !tbaa !394
  %10902 = insertelement <32 x i8> %10897, i8 %10901, i32 2
  %10903 = extractelement <32 x i32> %10887, i32 3
  %10904 = sext i32 %10903 to i64
  %10905 = getelementptr inbounds i8, i8* %5883, i64 %10904
  %10906 = load i8, i8* %10905, align 1, !tbaa !394
  %10907 = insertelement <32 x i8> %10902, i8 %10906, i32 3
  %10908 = extractelement <32 x i32> %10887, i32 4
  %10909 = sext i32 %10908 to i64
  %10910 = getelementptr inbounds i8, i8* %5883, i64 %10909
  %10911 = load i8, i8* %10910, align 1, !tbaa !394
  %10912 = insertelement <32 x i8> %10907, i8 %10911, i32 4
  %10913 = extractelement <32 x i32> %10887, i32 5
  %10914 = sext i32 %10913 to i64
  %10915 = getelementptr inbounds i8, i8* %5883, i64 %10914
  %10916 = load i8, i8* %10915, align 1, !tbaa !394
  %10917 = insertelement <32 x i8> %10912, i8 %10916, i32 5
  %10918 = extractelement <32 x i32> %10887, i32 6
  %10919 = sext i32 %10918 to i64
  %10920 = getelementptr inbounds i8, i8* %5883, i64 %10919
  %10921 = load i8, i8* %10920, align 1, !tbaa !394
  %10922 = insertelement <32 x i8> %10917, i8 %10921, i32 6
  %10923 = extractelement <32 x i32> %10887, i32 7
  %10924 = sext i32 %10923 to i64
  %10925 = getelementptr inbounds i8, i8* %5883, i64 %10924
  %10926 = load i8, i8* %10925, align 1, !tbaa !394
  %10927 = insertelement <32 x i8> %10922, i8 %10926, i32 7
  %10928 = extractelement <32 x i32> %10887, i32 8
  %10929 = sext i32 %10928 to i64
  %10930 = getelementptr inbounds i8, i8* %5883, i64 %10929
  %10931 = load i8, i8* %10930, align 1, !tbaa !394
  %10932 = insertelement <32 x i8> %10927, i8 %10931, i32 8
  %10933 = extractelement <32 x i32> %10887, i32 9
  %10934 = sext i32 %10933 to i64
  %10935 = getelementptr inbounds i8, i8* %5883, i64 %10934
  %10936 = load i8, i8* %10935, align 1, !tbaa !394
  %10937 = insertelement <32 x i8> %10932, i8 %10936, i32 9
  %10938 = extractelement <32 x i32> %10887, i32 10
  %10939 = sext i32 %10938 to i64
  %10940 = getelementptr inbounds i8, i8* %5883, i64 %10939
  %10941 = load i8, i8* %10940, align 1, !tbaa !394
  %10942 = insertelement <32 x i8> %10937, i8 %10941, i32 10
  %10943 = extractelement <32 x i32> %10887, i32 11
  %10944 = sext i32 %10943 to i64
  %10945 = getelementptr inbounds i8, i8* %5883, i64 %10944
  %10946 = load i8, i8* %10945, align 1, !tbaa !394
  %10947 = insertelement <32 x i8> %10942, i8 %10946, i32 11
  %10948 = extractelement <32 x i32> %10887, i32 12
  %10949 = sext i32 %10948 to i64
  %10950 = getelementptr inbounds i8, i8* %5883, i64 %10949
  %10951 = load i8, i8* %10950, align 1, !tbaa !394
  %10952 = insertelement <32 x i8> %10947, i8 %10951, i32 12
  %10953 = extractelement <32 x i32> %10887, i32 13
  %10954 = sext i32 %10953 to i64
  %10955 = getelementptr inbounds i8, i8* %5883, i64 %10954
  %10956 = load i8, i8* %10955, align 1, !tbaa !394
  %10957 = insertelement <32 x i8> %10952, i8 %10956, i32 13
  %10958 = extractelement <32 x i32> %10887, i32 14
  %10959 = sext i32 %10958 to i64
  %10960 = getelementptr inbounds i8, i8* %5883, i64 %10959
  %10961 = load i8, i8* %10960, align 1, !tbaa !394
  %10962 = insertelement <32 x i8> %10957, i8 %10961, i32 14
  %10963 = extractelement <32 x i32> %10887, i32 15
  %10964 = sext i32 %10963 to i64
  %10965 = getelementptr inbounds i8, i8* %5883, i64 %10964
  %10966 = load i8, i8* %10965, align 1, !tbaa !394
  %10967 = insertelement <32 x i8> %10962, i8 %10966, i32 15
  %10968 = extractelement <32 x i32> %10887, i32 16
  %10969 = sext i32 %10968 to i64
  %10970 = getelementptr inbounds i8, i8* %5883, i64 %10969
  %10971 = load i8, i8* %10970, align 1, !tbaa !394
  %10972 = insertelement <32 x i8> %10967, i8 %10971, i32 16
  %10973 = extractelement <32 x i32> %10887, i32 17
  %10974 = sext i32 %10973 to i64
  %10975 = getelementptr inbounds i8, i8* %5883, i64 %10974
  %10976 = load i8, i8* %10975, align 1, !tbaa !394
  %10977 = insertelement <32 x i8> %10972, i8 %10976, i32 17
  %10978 = extractelement <32 x i32> %10887, i32 18
  %10979 = sext i32 %10978 to i64
  %10980 = getelementptr inbounds i8, i8* %5883, i64 %10979
  %10981 = load i8, i8* %10980, align 1, !tbaa !394
  %10982 = insertelement <32 x i8> %10977, i8 %10981, i32 18
  %10983 = extractelement <32 x i32> %10887, i32 19
  %10984 = sext i32 %10983 to i64
  %10985 = getelementptr inbounds i8, i8* %5883, i64 %10984
  %10986 = load i8, i8* %10985, align 1, !tbaa !394
  %10987 = insertelement <32 x i8> %10982, i8 %10986, i32 19
  %10988 = extractelement <32 x i32> %10887, i32 20
  %10989 = sext i32 %10988 to i64
  %10990 = getelementptr inbounds i8, i8* %5883, i64 %10989
  %10991 = load i8, i8* %10990, align 1, !tbaa !394
  %10992 = insertelement <32 x i8> %10987, i8 %10991, i32 20
  %10993 = extractelement <32 x i32> %10887, i32 21
  %10994 = sext i32 %10993 to i64
  %10995 = getelementptr inbounds i8, i8* %5883, i64 %10994
  %10996 = load i8, i8* %10995, align 1, !tbaa !394
  %10997 = insertelement <32 x i8> %10992, i8 %10996, i32 21
  %10998 = extractelement <32 x i32> %10887, i32 22
  %10999 = sext i32 %10998 to i64
  %11000 = getelementptr inbounds i8, i8* %5883, i64 %10999
  %11001 = load i8, i8* %11000, align 1, !tbaa !394
  %11002 = insertelement <32 x i8> %10997, i8 %11001, i32 22
  %11003 = extractelement <32 x i32> %10887, i32 23
  %11004 = sext i32 %11003 to i64
  %11005 = getelementptr inbounds i8, i8* %5883, i64 %11004
  %11006 = load i8, i8* %11005, align 1, !tbaa !394
  %11007 = insertelement <32 x i8> %11002, i8 %11006, i32 23
  %11008 = extractelement <32 x i32> %10887, i32 24
  %11009 = sext i32 %11008 to i64
  %11010 = getelementptr inbounds i8, i8* %5883, i64 %11009
  %11011 = load i8, i8* %11010, align 1, !tbaa !394
  %11012 = insertelement <32 x i8> %11007, i8 %11011, i32 24
  %11013 = extractelement <32 x i32> %10887, i32 25
  %11014 = sext i32 %11013 to i64
  %11015 = getelementptr inbounds i8, i8* %5883, i64 %11014
  %11016 = load i8, i8* %11015, align 1, !tbaa !394
  %11017 = insertelement <32 x i8> %11012, i8 %11016, i32 25
  %11018 = extractelement <32 x i32> %10887, i32 26
  %11019 = sext i32 %11018 to i64
  %11020 = getelementptr inbounds i8, i8* %5883, i64 %11019
  %11021 = load i8, i8* %11020, align 1, !tbaa !394
  %11022 = insertelement <32 x i8> %11017, i8 %11021, i32 26
  %11023 = extractelement <32 x i32> %10887, i32 27
  %11024 = sext i32 %11023 to i64
  %11025 = getelementptr inbounds i8, i8* %5883, i64 %11024
  %11026 = load i8, i8* %11025, align 1, !tbaa !394
  %11027 = insertelement <32 x i8> %11022, i8 %11026, i32 27
  %11028 = extractelement <32 x i32> %10887, i32 28
  %11029 = sext i32 %11028 to i64
  %11030 = getelementptr inbounds i8, i8* %5883, i64 %11029
  %11031 = load i8, i8* %11030, align 1, !tbaa !394
  %11032 = insertelement <32 x i8> %11027, i8 %11031, i32 28
  %11033 = extractelement <32 x i32> %10887, i32 29
  %11034 = sext i32 %11033 to i64
  %11035 = getelementptr inbounds i8, i8* %5883, i64 %11034
  %11036 = load i8, i8* %11035, align 1, !tbaa !394
  %11037 = insertelement <32 x i8> %11032, i8 %11036, i32 29
  %11038 = extractelement <32 x i32> %10887, i32 30
  %11039 = sext i32 %11038 to i64
  %11040 = getelementptr inbounds i8, i8* %5883, i64 %11039
  %11041 = load i8, i8* %11040, align 1, !tbaa !394
  %11042 = insertelement <32 x i8> %11037, i8 %11041, i32 30
  %11043 = extractelement <32 x i32> %10887, i32 31
  %11044 = sext i32 %11043 to i64
  %11045 = getelementptr inbounds i8, i8* %5883, i64 %11044
  %11046 = load i8, i8* %11045, align 1, !tbaa !394
  %11047 = insertelement <32 x i8> %11042, i8 %11046, i32 31
  %11048 = add nsw <32 x i32> %t212205, %10200
  %11049 = extractelement <32 x i32> %11048, i32 0
  %11050 = sext i32 %11049 to i64
  %11051 = getelementptr inbounds i8, i8* %5883, i64 %11050
  %11052 = load i8, i8* %11051, align 1, !tbaa !394
  %11053 = insertelement <32 x i8> undef, i8 %11052, i32 0
  %11054 = extractelement <32 x i32> %11048, i32 1
  %11055 = sext i32 %11054 to i64
  %11056 = getelementptr inbounds i8, i8* %5883, i64 %11055
  %11057 = load i8, i8* %11056, align 1, !tbaa !394
  %11058 = insertelement <32 x i8> %11053, i8 %11057, i32 1
  %11059 = extractelement <32 x i32> %11048, i32 2
  %11060 = sext i32 %11059 to i64
  %11061 = getelementptr inbounds i8, i8* %5883, i64 %11060
  %11062 = load i8, i8* %11061, align 1, !tbaa !394
  %11063 = insertelement <32 x i8> %11058, i8 %11062, i32 2
  %11064 = extractelement <32 x i32> %11048, i32 3
  %11065 = sext i32 %11064 to i64
  %11066 = getelementptr inbounds i8, i8* %5883, i64 %11065
  %11067 = load i8, i8* %11066, align 1, !tbaa !394
  %11068 = insertelement <32 x i8> %11063, i8 %11067, i32 3
  %11069 = extractelement <32 x i32> %11048, i32 4
  %11070 = sext i32 %11069 to i64
  %11071 = getelementptr inbounds i8, i8* %5883, i64 %11070
  %11072 = load i8, i8* %11071, align 1, !tbaa !394
  %11073 = insertelement <32 x i8> %11068, i8 %11072, i32 4
  %11074 = extractelement <32 x i32> %11048, i32 5
  %11075 = sext i32 %11074 to i64
  %11076 = getelementptr inbounds i8, i8* %5883, i64 %11075
  %11077 = load i8, i8* %11076, align 1, !tbaa !394
  %11078 = insertelement <32 x i8> %11073, i8 %11077, i32 5
  %11079 = extractelement <32 x i32> %11048, i32 6
  %11080 = sext i32 %11079 to i64
  %11081 = getelementptr inbounds i8, i8* %5883, i64 %11080
  %11082 = load i8, i8* %11081, align 1, !tbaa !394
  %11083 = insertelement <32 x i8> %11078, i8 %11082, i32 6
  %11084 = extractelement <32 x i32> %11048, i32 7
  %11085 = sext i32 %11084 to i64
  %11086 = getelementptr inbounds i8, i8* %5883, i64 %11085
  %11087 = load i8, i8* %11086, align 1, !tbaa !394
  %11088 = insertelement <32 x i8> %11083, i8 %11087, i32 7
  %11089 = extractelement <32 x i32> %11048, i32 8
  %11090 = sext i32 %11089 to i64
  %11091 = getelementptr inbounds i8, i8* %5883, i64 %11090
  %11092 = load i8, i8* %11091, align 1, !tbaa !394
  %11093 = insertelement <32 x i8> %11088, i8 %11092, i32 8
  %11094 = extractelement <32 x i32> %11048, i32 9
  %11095 = sext i32 %11094 to i64
  %11096 = getelementptr inbounds i8, i8* %5883, i64 %11095
  %11097 = load i8, i8* %11096, align 1, !tbaa !394
  %11098 = insertelement <32 x i8> %11093, i8 %11097, i32 9
  %11099 = extractelement <32 x i32> %11048, i32 10
  %11100 = sext i32 %11099 to i64
  %11101 = getelementptr inbounds i8, i8* %5883, i64 %11100
  %11102 = load i8, i8* %11101, align 1, !tbaa !394
  %11103 = insertelement <32 x i8> %11098, i8 %11102, i32 10
  %11104 = extractelement <32 x i32> %11048, i32 11
  %11105 = sext i32 %11104 to i64
  %11106 = getelementptr inbounds i8, i8* %5883, i64 %11105
  %11107 = load i8, i8* %11106, align 1, !tbaa !394
  %11108 = insertelement <32 x i8> %11103, i8 %11107, i32 11
  %11109 = extractelement <32 x i32> %11048, i32 12
  %11110 = sext i32 %11109 to i64
  %11111 = getelementptr inbounds i8, i8* %5883, i64 %11110
  %11112 = load i8, i8* %11111, align 1, !tbaa !394
  %11113 = insertelement <32 x i8> %11108, i8 %11112, i32 12
  %11114 = extractelement <32 x i32> %11048, i32 13
  %11115 = sext i32 %11114 to i64
  %11116 = getelementptr inbounds i8, i8* %5883, i64 %11115
  %11117 = load i8, i8* %11116, align 1, !tbaa !394
  %11118 = insertelement <32 x i8> %11113, i8 %11117, i32 13
  %11119 = extractelement <32 x i32> %11048, i32 14
  %11120 = sext i32 %11119 to i64
  %11121 = getelementptr inbounds i8, i8* %5883, i64 %11120
  %11122 = load i8, i8* %11121, align 1, !tbaa !394
  %11123 = insertelement <32 x i8> %11118, i8 %11122, i32 14
  %11124 = extractelement <32 x i32> %11048, i32 15
  %11125 = sext i32 %11124 to i64
  %11126 = getelementptr inbounds i8, i8* %5883, i64 %11125
  %11127 = load i8, i8* %11126, align 1, !tbaa !394
  %11128 = insertelement <32 x i8> %11123, i8 %11127, i32 15
  %11129 = extractelement <32 x i32> %11048, i32 16
  %11130 = sext i32 %11129 to i64
  %11131 = getelementptr inbounds i8, i8* %5883, i64 %11130
  %11132 = load i8, i8* %11131, align 1, !tbaa !394
  %11133 = insertelement <32 x i8> %11128, i8 %11132, i32 16
  %11134 = extractelement <32 x i32> %11048, i32 17
  %11135 = sext i32 %11134 to i64
  %11136 = getelementptr inbounds i8, i8* %5883, i64 %11135
  %11137 = load i8, i8* %11136, align 1, !tbaa !394
  %11138 = insertelement <32 x i8> %11133, i8 %11137, i32 17
  %11139 = extractelement <32 x i32> %11048, i32 18
  %11140 = sext i32 %11139 to i64
  %11141 = getelementptr inbounds i8, i8* %5883, i64 %11140
  %11142 = load i8, i8* %11141, align 1, !tbaa !394
  %11143 = insertelement <32 x i8> %11138, i8 %11142, i32 18
  %11144 = extractelement <32 x i32> %11048, i32 19
  %11145 = sext i32 %11144 to i64
  %11146 = getelementptr inbounds i8, i8* %5883, i64 %11145
  %11147 = load i8, i8* %11146, align 1, !tbaa !394
  %11148 = insertelement <32 x i8> %11143, i8 %11147, i32 19
  %11149 = extractelement <32 x i32> %11048, i32 20
  %11150 = sext i32 %11149 to i64
  %11151 = getelementptr inbounds i8, i8* %5883, i64 %11150
  %11152 = load i8, i8* %11151, align 1, !tbaa !394
  %11153 = insertelement <32 x i8> %11148, i8 %11152, i32 20
  %11154 = extractelement <32 x i32> %11048, i32 21
  %11155 = sext i32 %11154 to i64
  %11156 = getelementptr inbounds i8, i8* %5883, i64 %11155
  %11157 = load i8, i8* %11156, align 1, !tbaa !394
  %11158 = insertelement <32 x i8> %11153, i8 %11157, i32 21
  %11159 = extractelement <32 x i32> %11048, i32 22
  %11160 = sext i32 %11159 to i64
  %11161 = getelementptr inbounds i8, i8* %5883, i64 %11160
  %11162 = load i8, i8* %11161, align 1, !tbaa !394
  %11163 = insertelement <32 x i8> %11158, i8 %11162, i32 22
  %11164 = extractelement <32 x i32> %11048, i32 23
  %11165 = sext i32 %11164 to i64
  %11166 = getelementptr inbounds i8, i8* %5883, i64 %11165
  %11167 = load i8, i8* %11166, align 1, !tbaa !394
  %11168 = insertelement <32 x i8> %11163, i8 %11167, i32 23
  %11169 = extractelement <32 x i32> %11048, i32 24
  %11170 = sext i32 %11169 to i64
  %11171 = getelementptr inbounds i8, i8* %5883, i64 %11170
  %11172 = load i8, i8* %11171, align 1, !tbaa !394
  %11173 = insertelement <32 x i8> %11168, i8 %11172, i32 24
  %11174 = extractelement <32 x i32> %11048, i32 25
  %11175 = sext i32 %11174 to i64
  %11176 = getelementptr inbounds i8, i8* %5883, i64 %11175
  %11177 = load i8, i8* %11176, align 1, !tbaa !394
  %11178 = insertelement <32 x i8> %11173, i8 %11177, i32 25
  %11179 = extractelement <32 x i32> %11048, i32 26
  %11180 = sext i32 %11179 to i64
  %11181 = getelementptr inbounds i8, i8* %5883, i64 %11180
  %11182 = load i8, i8* %11181, align 1, !tbaa !394
  %11183 = insertelement <32 x i8> %11178, i8 %11182, i32 26
  %11184 = extractelement <32 x i32> %11048, i32 27
  %11185 = sext i32 %11184 to i64
  %11186 = getelementptr inbounds i8, i8* %5883, i64 %11185
  %11187 = load i8, i8* %11186, align 1, !tbaa !394
  %11188 = insertelement <32 x i8> %11183, i8 %11187, i32 27
  %11189 = extractelement <32 x i32> %11048, i32 28
  %11190 = sext i32 %11189 to i64
  %11191 = getelementptr inbounds i8, i8* %5883, i64 %11190
  %11192 = load i8, i8* %11191, align 1, !tbaa !394
  %11193 = insertelement <32 x i8> %11188, i8 %11192, i32 28
  %11194 = extractelement <32 x i32> %11048, i32 29
  %11195 = sext i32 %11194 to i64
  %11196 = getelementptr inbounds i8, i8* %5883, i64 %11195
  %11197 = load i8, i8* %11196, align 1, !tbaa !394
  %11198 = insertelement <32 x i8> %11193, i8 %11197, i32 29
  %11199 = extractelement <32 x i32> %11048, i32 30
  %11200 = sext i32 %11199 to i64
  %11201 = getelementptr inbounds i8, i8* %5883, i64 %11200
  %11202 = load i8, i8* %11201, align 1, !tbaa !394
  %11203 = insertelement <32 x i8> %11198, i8 %11202, i32 30
  %11204 = extractelement <32 x i32> %11048, i32 31
  %11205 = sext i32 %11204 to i64
  %11206 = getelementptr inbounds i8, i8* %5883, i64 %11205
  %11207 = load i8, i8* %11206, align 1, !tbaa !394
  %11208 = insertelement <32 x i8> %11203, i8 %11207, i32 31
  %11209 = add nsw <32 x i32> %t215206, %t238212
  %11210 = extractelement <32 x i32> %11209, i32 0
  %11211 = sext i32 %11210 to i64
  %11212 = getelementptr inbounds i8, i8* %5883, i64 %11211
  %11213 = load i8, i8* %11212, align 1, !tbaa !394
  %11214 = insertelement <32 x i8> undef, i8 %11213, i32 0
  %11215 = extractelement <32 x i32> %11209, i32 1
  %11216 = sext i32 %11215 to i64
  %11217 = getelementptr inbounds i8, i8* %5883, i64 %11216
  %11218 = load i8, i8* %11217, align 1, !tbaa !394
  %11219 = insertelement <32 x i8> %11214, i8 %11218, i32 1
  %11220 = extractelement <32 x i32> %11209, i32 2
  %11221 = sext i32 %11220 to i64
  %11222 = getelementptr inbounds i8, i8* %5883, i64 %11221
  %11223 = load i8, i8* %11222, align 1, !tbaa !394
  %11224 = insertelement <32 x i8> %11219, i8 %11223, i32 2
  %11225 = extractelement <32 x i32> %11209, i32 3
  %11226 = sext i32 %11225 to i64
  %11227 = getelementptr inbounds i8, i8* %5883, i64 %11226
  %11228 = load i8, i8* %11227, align 1, !tbaa !394
  %11229 = insertelement <32 x i8> %11224, i8 %11228, i32 3
  %11230 = extractelement <32 x i32> %11209, i32 4
  %11231 = sext i32 %11230 to i64
  %11232 = getelementptr inbounds i8, i8* %5883, i64 %11231
  %11233 = load i8, i8* %11232, align 1, !tbaa !394
  %11234 = insertelement <32 x i8> %11229, i8 %11233, i32 4
  %11235 = extractelement <32 x i32> %11209, i32 5
  %11236 = sext i32 %11235 to i64
  %11237 = getelementptr inbounds i8, i8* %5883, i64 %11236
  %11238 = load i8, i8* %11237, align 1, !tbaa !394
  %11239 = insertelement <32 x i8> %11234, i8 %11238, i32 5
  %11240 = extractelement <32 x i32> %11209, i32 6
  %11241 = sext i32 %11240 to i64
  %11242 = getelementptr inbounds i8, i8* %5883, i64 %11241
  %11243 = load i8, i8* %11242, align 1, !tbaa !394
  %11244 = insertelement <32 x i8> %11239, i8 %11243, i32 6
  %11245 = extractelement <32 x i32> %11209, i32 7
  %11246 = sext i32 %11245 to i64
  %11247 = getelementptr inbounds i8, i8* %5883, i64 %11246
  %11248 = load i8, i8* %11247, align 1, !tbaa !394
  %11249 = insertelement <32 x i8> %11244, i8 %11248, i32 7
  %11250 = extractelement <32 x i32> %11209, i32 8
  %11251 = sext i32 %11250 to i64
  %11252 = getelementptr inbounds i8, i8* %5883, i64 %11251
  %11253 = load i8, i8* %11252, align 1, !tbaa !394
  %11254 = insertelement <32 x i8> %11249, i8 %11253, i32 8
  %11255 = extractelement <32 x i32> %11209, i32 9
  %11256 = sext i32 %11255 to i64
  %11257 = getelementptr inbounds i8, i8* %5883, i64 %11256
  %11258 = load i8, i8* %11257, align 1, !tbaa !394
  %11259 = insertelement <32 x i8> %11254, i8 %11258, i32 9
  %11260 = extractelement <32 x i32> %11209, i32 10
  %11261 = sext i32 %11260 to i64
  %11262 = getelementptr inbounds i8, i8* %5883, i64 %11261
  %11263 = load i8, i8* %11262, align 1, !tbaa !394
  %11264 = insertelement <32 x i8> %11259, i8 %11263, i32 10
  %11265 = extractelement <32 x i32> %11209, i32 11
  %11266 = sext i32 %11265 to i64
  %11267 = getelementptr inbounds i8, i8* %5883, i64 %11266
  %11268 = load i8, i8* %11267, align 1, !tbaa !394
  %11269 = insertelement <32 x i8> %11264, i8 %11268, i32 11
  %11270 = extractelement <32 x i32> %11209, i32 12
  %11271 = sext i32 %11270 to i64
  %11272 = getelementptr inbounds i8, i8* %5883, i64 %11271
  %11273 = load i8, i8* %11272, align 1, !tbaa !394
  %11274 = insertelement <32 x i8> %11269, i8 %11273, i32 12
  %11275 = extractelement <32 x i32> %11209, i32 13
  %11276 = sext i32 %11275 to i64
  %11277 = getelementptr inbounds i8, i8* %5883, i64 %11276
  %11278 = load i8, i8* %11277, align 1, !tbaa !394
  %11279 = insertelement <32 x i8> %11274, i8 %11278, i32 13
  %11280 = extractelement <32 x i32> %11209, i32 14
  %11281 = sext i32 %11280 to i64
  %11282 = getelementptr inbounds i8, i8* %5883, i64 %11281
  %11283 = load i8, i8* %11282, align 1, !tbaa !394
  %11284 = insertelement <32 x i8> %11279, i8 %11283, i32 14
  %11285 = extractelement <32 x i32> %11209, i32 15
  %11286 = sext i32 %11285 to i64
  %11287 = getelementptr inbounds i8, i8* %5883, i64 %11286
  %11288 = load i8, i8* %11287, align 1, !tbaa !394
  %11289 = insertelement <32 x i8> %11284, i8 %11288, i32 15
  %11290 = extractelement <32 x i32> %11209, i32 16
  %11291 = sext i32 %11290 to i64
  %11292 = getelementptr inbounds i8, i8* %5883, i64 %11291
  %11293 = load i8, i8* %11292, align 1, !tbaa !394
  %11294 = insertelement <32 x i8> %11289, i8 %11293, i32 16
  %11295 = extractelement <32 x i32> %11209, i32 17
  %11296 = sext i32 %11295 to i64
  %11297 = getelementptr inbounds i8, i8* %5883, i64 %11296
  %11298 = load i8, i8* %11297, align 1, !tbaa !394
  %11299 = insertelement <32 x i8> %11294, i8 %11298, i32 17
  %11300 = extractelement <32 x i32> %11209, i32 18
  %11301 = sext i32 %11300 to i64
  %11302 = getelementptr inbounds i8, i8* %5883, i64 %11301
  %11303 = load i8, i8* %11302, align 1, !tbaa !394
  %11304 = insertelement <32 x i8> %11299, i8 %11303, i32 18
  %11305 = extractelement <32 x i32> %11209, i32 19
  %11306 = sext i32 %11305 to i64
  %11307 = getelementptr inbounds i8, i8* %5883, i64 %11306
  %11308 = load i8, i8* %11307, align 1, !tbaa !394
  %11309 = insertelement <32 x i8> %11304, i8 %11308, i32 19
  %11310 = extractelement <32 x i32> %11209, i32 20
  %11311 = sext i32 %11310 to i64
  %11312 = getelementptr inbounds i8, i8* %5883, i64 %11311
  %11313 = load i8, i8* %11312, align 1, !tbaa !394
  %11314 = insertelement <32 x i8> %11309, i8 %11313, i32 20
  %11315 = extractelement <32 x i32> %11209, i32 21
  %11316 = sext i32 %11315 to i64
  %11317 = getelementptr inbounds i8, i8* %5883, i64 %11316
  %11318 = load i8, i8* %11317, align 1, !tbaa !394
  %11319 = insertelement <32 x i8> %11314, i8 %11318, i32 21
  %11320 = extractelement <32 x i32> %11209, i32 22
  %11321 = sext i32 %11320 to i64
  %11322 = getelementptr inbounds i8, i8* %5883, i64 %11321
  %11323 = load i8, i8* %11322, align 1, !tbaa !394
  %11324 = insertelement <32 x i8> %11319, i8 %11323, i32 22
  %11325 = extractelement <32 x i32> %11209, i32 23
  %11326 = sext i32 %11325 to i64
  %11327 = getelementptr inbounds i8, i8* %5883, i64 %11326
  %11328 = load i8, i8* %11327, align 1, !tbaa !394
  %11329 = insertelement <32 x i8> %11324, i8 %11328, i32 23
  %11330 = extractelement <32 x i32> %11209, i32 24
  %11331 = sext i32 %11330 to i64
  %11332 = getelementptr inbounds i8, i8* %5883, i64 %11331
  %11333 = load i8, i8* %11332, align 1, !tbaa !394
  %11334 = insertelement <32 x i8> %11329, i8 %11333, i32 24
  %11335 = extractelement <32 x i32> %11209, i32 25
  %11336 = sext i32 %11335 to i64
  %11337 = getelementptr inbounds i8, i8* %5883, i64 %11336
  %11338 = load i8, i8* %11337, align 1, !tbaa !394
  %11339 = insertelement <32 x i8> %11334, i8 %11338, i32 25
  %11340 = extractelement <32 x i32> %11209, i32 26
  %11341 = sext i32 %11340 to i64
  %11342 = getelementptr inbounds i8, i8* %5883, i64 %11341
  %11343 = load i8, i8* %11342, align 1, !tbaa !394
  %11344 = insertelement <32 x i8> %11339, i8 %11343, i32 26
  %11345 = extractelement <32 x i32> %11209, i32 27
  %11346 = sext i32 %11345 to i64
  %11347 = getelementptr inbounds i8, i8* %5883, i64 %11346
  %11348 = load i8, i8* %11347, align 1, !tbaa !394
  %11349 = insertelement <32 x i8> %11344, i8 %11348, i32 27
  %11350 = extractelement <32 x i32> %11209, i32 28
  %11351 = sext i32 %11350 to i64
  %11352 = getelementptr inbounds i8, i8* %5883, i64 %11351
  %11353 = load i8, i8* %11352, align 1, !tbaa !394
  %11354 = insertelement <32 x i8> %11349, i8 %11353, i32 28
  %11355 = extractelement <32 x i32> %11209, i32 29
  %11356 = sext i32 %11355 to i64
  %11357 = getelementptr inbounds i8, i8* %5883, i64 %11356
  %11358 = load i8, i8* %11357, align 1, !tbaa !394
  %11359 = insertelement <32 x i8> %11354, i8 %11358, i32 29
  %11360 = extractelement <32 x i32> %11209, i32 30
  %11361 = sext i32 %11360 to i64
  %11362 = getelementptr inbounds i8, i8* %5883, i64 %11361
  %11363 = load i8, i8* %11362, align 1, !tbaa !394
  %11364 = insertelement <32 x i8> %11359, i8 %11363, i32 30
  %11365 = extractelement <32 x i32> %11209, i32 31
  %11366 = sext i32 %11365 to i64
  %11367 = getelementptr inbounds i8, i8* %5883, i64 %11366
  %11368 = load i8, i8* %11367, align 1, !tbaa !394
  %11369 = insertelement <32 x i8> %11364, i8 %11368, i32 31
  %11370 = add nsw <32 x i32> %t217208, %t238212
  %11371 = extractelement <32 x i32> %11370, i32 0
  %11372 = sext i32 %11371 to i64
  %11373 = getelementptr inbounds i8, i8* %5883, i64 %11372
  %11374 = load i8, i8* %11373, align 1, !tbaa !394
  %11375 = insertelement <32 x i8> undef, i8 %11374, i32 0
  %11376 = extractelement <32 x i32> %11370, i32 1
  %11377 = sext i32 %11376 to i64
  %11378 = getelementptr inbounds i8, i8* %5883, i64 %11377
  %11379 = load i8, i8* %11378, align 1, !tbaa !394
  %11380 = insertelement <32 x i8> %11375, i8 %11379, i32 1
  %11381 = extractelement <32 x i32> %11370, i32 2
  %11382 = sext i32 %11381 to i64
  %11383 = getelementptr inbounds i8, i8* %5883, i64 %11382
  %11384 = load i8, i8* %11383, align 1, !tbaa !394
  %11385 = insertelement <32 x i8> %11380, i8 %11384, i32 2
  %11386 = extractelement <32 x i32> %11370, i32 3
  %11387 = sext i32 %11386 to i64
  %11388 = getelementptr inbounds i8, i8* %5883, i64 %11387
  %11389 = load i8, i8* %11388, align 1, !tbaa !394
  %11390 = insertelement <32 x i8> %11385, i8 %11389, i32 3
  %11391 = extractelement <32 x i32> %11370, i32 4
  %11392 = sext i32 %11391 to i64
  %11393 = getelementptr inbounds i8, i8* %5883, i64 %11392
  %11394 = load i8, i8* %11393, align 1, !tbaa !394
  %11395 = insertelement <32 x i8> %11390, i8 %11394, i32 4
  %11396 = extractelement <32 x i32> %11370, i32 5
  %11397 = sext i32 %11396 to i64
  %11398 = getelementptr inbounds i8, i8* %5883, i64 %11397
  %11399 = load i8, i8* %11398, align 1, !tbaa !394
  %11400 = insertelement <32 x i8> %11395, i8 %11399, i32 5
  %11401 = extractelement <32 x i32> %11370, i32 6
  %11402 = sext i32 %11401 to i64
  %11403 = getelementptr inbounds i8, i8* %5883, i64 %11402
  %11404 = load i8, i8* %11403, align 1, !tbaa !394
  %11405 = insertelement <32 x i8> %11400, i8 %11404, i32 6
  %11406 = extractelement <32 x i32> %11370, i32 7
  %11407 = sext i32 %11406 to i64
  %11408 = getelementptr inbounds i8, i8* %5883, i64 %11407
  %11409 = load i8, i8* %11408, align 1, !tbaa !394
  %11410 = insertelement <32 x i8> %11405, i8 %11409, i32 7
  %11411 = extractelement <32 x i32> %11370, i32 8
  %11412 = sext i32 %11411 to i64
  %11413 = getelementptr inbounds i8, i8* %5883, i64 %11412
  %11414 = load i8, i8* %11413, align 1, !tbaa !394
  %11415 = insertelement <32 x i8> %11410, i8 %11414, i32 8
  %11416 = extractelement <32 x i32> %11370, i32 9
  %11417 = sext i32 %11416 to i64
  %11418 = getelementptr inbounds i8, i8* %5883, i64 %11417
  %11419 = load i8, i8* %11418, align 1, !tbaa !394
  %11420 = insertelement <32 x i8> %11415, i8 %11419, i32 9
  %11421 = extractelement <32 x i32> %11370, i32 10
  %11422 = sext i32 %11421 to i64
  %11423 = getelementptr inbounds i8, i8* %5883, i64 %11422
  %11424 = load i8, i8* %11423, align 1, !tbaa !394
  %11425 = insertelement <32 x i8> %11420, i8 %11424, i32 10
  %11426 = extractelement <32 x i32> %11370, i32 11
  %11427 = sext i32 %11426 to i64
  %11428 = getelementptr inbounds i8, i8* %5883, i64 %11427
  %11429 = load i8, i8* %11428, align 1, !tbaa !394
  %11430 = insertelement <32 x i8> %11425, i8 %11429, i32 11
  %11431 = extractelement <32 x i32> %11370, i32 12
  %11432 = sext i32 %11431 to i64
  %11433 = getelementptr inbounds i8, i8* %5883, i64 %11432
  %11434 = load i8, i8* %11433, align 1, !tbaa !394
  %11435 = insertelement <32 x i8> %11430, i8 %11434, i32 12
  %11436 = extractelement <32 x i32> %11370, i32 13
  %11437 = sext i32 %11436 to i64
  %11438 = getelementptr inbounds i8, i8* %5883, i64 %11437
  %11439 = load i8, i8* %11438, align 1, !tbaa !394
  %11440 = insertelement <32 x i8> %11435, i8 %11439, i32 13
  %11441 = extractelement <32 x i32> %11370, i32 14
  %11442 = sext i32 %11441 to i64
  %11443 = getelementptr inbounds i8, i8* %5883, i64 %11442
  %11444 = load i8, i8* %11443, align 1, !tbaa !394
  %11445 = insertelement <32 x i8> %11440, i8 %11444, i32 14
  %11446 = extractelement <32 x i32> %11370, i32 15
  %11447 = sext i32 %11446 to i64
  %11448 = getelementptr inbounds i8, i8* %5883, i64 %11447
  %11449 = load i8, i8* %11448, align 1, !tbaa !394
  %11450 = insertelement <32 x i8> %11445, i8 %11449, i32 15
  %11451 = extractelement <32 x i32> %11370, i32 16
  %11452 = sext i32 %11451 to i64
  %11453 = getelementptr inbounds i8, i8* %5883, i64 %11452
  %11454 = load i8, i8* %11453, align 1, !tbaa !394
  %11455 = insertelement <32 x i8> %11450, i8 %11454, i32 16
  %11456 = extractelement <32 x i32> %11370, i32 17
  %11457 = sext i32 %11456 to i64
  %11458 = getelementptr inbounds i8, i8* %5883, i64 %11457
  %11459 = load i8, i8* %11458, align 1, !tbaa !394
  %11460 = insertelement <32 x i8> %11455, i8 %11459, i32 17
  %11461 = extractelement <32 x i32> %11370, i32 18
  %11462 = sext i32 %11461 to i64
  %11463 = getelementptr inbounds i8, i8* %5883, i64 %11462
  %11464 = load i8, i8* %11463, align 1, !tbaa !394
  %11465 = insertelement <32 x i8> %11460, i8 %11464, i32 18
  %11466 = extractelement <32 x i32> %11370, i32 19
  %11467 = sext i32 %11466 to i64
  %11468 = getelementptr inbounds i8, i8* %5883, i64 %11467
  %11469 = load i8, i8* %11468, align 1, !tbaa !394
  %11470 = insertelement <32 x i8> %11465, i8 %11469, i32 19
  %11471 = extractelement <32 x i32> %11370, i32 20
  %11472 = sext i32 %11471 to i64
  %11473 = getelementptr inbounds i8, i8* %5883, i64 %11472
  %11474 = load i8, i8* %11473, align 1, !tbaa !394
  %11475 = insertelement <32 x i8> %11470, i8 %11474, i32 20
  %11476 = extractelement <32 x i32> %11370, i32 21
  %11477 = sext i32 %11476 to i64
  %11478 = getelementptr inbounds i8, i8* %5883, i64 %11477
  %11479 = load i8, i8* %11478, align 1, !tbaa !394
  %11480 = insertelement <32 x i8> %11475, i8 %11479, i32 21
  %11481 = extractelement <32 x i32> %11370, i32 22
  %11482 = sext i32 %11481 to i64
  %11483 = getelementptr inbounds i8, i8* %5883, i64 %11482
  %11484 = load i8, i8* %11483, align 1, !tbaa !394
  %11485 = insertelement <32 x i8> %11480, i8 %11484, i32 22
  %11486 = extractelement <32 x i32> %11370, i32 23
  %11487 = sext i32 %11486 to i64
  %11488 = getelementptr inbounds i8, i8* %5883, i64 %11487
  %11489 = load i8, i8* %11488, align 1, !tbaa !394
  %11490 = insertelement <32 x i8> %11485, i8 %11489, i32 23
  %11491 = extractelement <32 x i32> %11370, i32 24
  %11492 = sext i32 %11491 to i64
  %11493 = getelementptr inbounds i8, i8* %5883, i64 %11492
  %11494 = load i8, i8* %11493, align 1, !tbaa !394
  %11495 = insertelement <32 x i8> %11490, i8 %11494, i32 24
  %11496 = extractelement <32 x i32> %11370, i32 25
  %11497 = sext i32 %11496 to i64
  %11498 = getelementptr inbounds i8, i8* %5883, i64 %11497
  %11499 = load i8, i8* %11498, align 1, !tbaa !394
  %11500 = insertelement <32 x i8> %11495, i8 %11499, i32 25
  %11501 = extractelement <32 x i32> %11370, i32 26
  %11502 = sext i32 %11501 to i64
  %11503 = getelementptr inbounds i8, i8* %5883, i64 %11502
  %11504 = load i8, i8* %11503, align 1, !tbaa !394
  %11505 = insertelement <32 x i8> %11500, i8 %11504, i32 26
  %11506 = extractelement <32 x i32> %11370, i32 27
  %11507 = sext i32 %11506 to i64
  %11508 = getelementptr inbounds i8, i8* %5883, i64 %11507
  %11509 = load i8, i8* %11508, align 1, !tbaa !394
  %11510 = insertelement <32 x i8> %11505, i8 %11509, i32 27
  %11511 = extractelement <32 x i32> %11370, i32 28
  %11512 = sext i32 %11511 to i64
  %11513 = getelementptr inbounds i8, i8* %5883, i64 %11512
  %11514 = load i8, i8* %11513, align 1, !tbaa !394
  %11515 = insertelement <32 x i8> %11510, i8 %11514, i32 28
  %11516 = extractelement <32 x i32> %11370, i32 29
  %11517 = sext i32 %11516 to i64
  %11518 = getelementptr inbounds i8, i8* %5883, i64 %11517
  %11519 = load i8, i8* %11518, align 1, !tbaa !394
  %11520 = insertelement <32 x i8> %11515, i8 %11519, i32 29
  %11521 = extractelement <32 x i32> %11370, i32 30
  %11522 = sext i32 %11521 to i64
  %11523 = getelementptr inbounds i8, i8* %5883, i64 %11522
  %11524 = load i8, i8* %11523, align 1, !tbaa !394
  %11525 = insertelement <32 x i8> %11520, i8 %11524, i32 30
  %11526 = extractelement <32 x i32> %11370, i32 31
  %11527 = sext i32 %11526 to i64
  %11528 = getelementptr inbounds i8, i8* %5883, i64 %11527
  %11529 = load i8, i8* %11528, align 1, !tbaa !394
  %11530 = insertelement <32 x i8> %11525, i8 %11529, i32 31
  %11531 = tail call <32 x i8> @hydride.node.4(<32 x i8> %11047, <32 x i8> %t216.s207, <32 x i8> %t218.s209, <32 x i8> %11208, <32 x i8> %t220.s210, <32 x i8> %t221.s211, <32 x i8> %11047, <32 x i8> %11208, <32 x i8> %11369, <32 x i8> %11530) #10
  %11532 = sext i32 %output.s0.x.v0.base.s204 to i64
  %11533 = add nsw i64 %11532, %10206
  %11534 = getelementptr inbounds i8, i8* %5896, i64 %11533
  %11535 = bitcast i8* %11534 to <32 x i8>*
  store <32 x i8> %11531, <32 x i8>* %11535, align 1, !tbaa !397
  %11536 = add nuw nsw i32 %output.s0.x.x203, 1
  %.not241 = icmp eq i32 %11536, %t240113
  br i1 %.not241, label %"end for output.s0.x.x202", label %"for output.s0.x.x201"

"end for output.s0.x.x202":                       ; preds = %"for output.s0.x.x201", %"for output.s0.y.rebased197"
  %indvars.iv.next484 = add nuw nsw i64 %indvars.iv483, 1
  %11537 = add nuw nsw i32 %output.s0.y.rebased199, 1
  %11538 = icmp eq i64 %indvars.iv.next484, %zext486
  br i1 %11538, label %destructor_block, label %"for output.s0.y.rebased197"
}

; Function Attrs: nounwind
define i32 @sobel3x3_argv(i8** nocapture readonly %0) local_unnamed_addr #10 {
entry:
  %1 = bitcast i8** %0 to %struct.halide_buffer_t**
  %2 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %1, align 8
  %3 = getelementptr i8*, i8** %0, i64 1
  %4 = bitcast i8** %3 to %struct.halide_buffer_t**
  %5 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %4, align 8
  %6 = tail call i32 @sobel3x3(%struct.halide_buffer_t* %2, %struct.halide_buffer_t* %5) #17
  ret i32 %6
}

; Function Attrs: norecurse nounwind readnone willreturn
define nonnull %struct.halide_filter_metadata_t* @sobel3x3_metadata() local_unnamed_addr #11 {
entry:
  ret %struct.halide_filter_metadata_t* @sobel3x3_metadata_storage
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.cttz.i64(i64, i1 immarg) #7

declare <32 x i8> @hydride.node.0(<32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>) local_unnamed_addr

declare <32 x i8> @hydride.node.1(<32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>) local_unnamed_addr

declare <32 x i8> @hydride.node.2(<32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>) local_unnamed_addr

declare <32 x i8> @hydride.node.3(<32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>) local_unnamed_addr

declare <32 x i8> @hydride.node.4(<32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>, <32 x i8>) local_unnamed_addr

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare <16 x i16> @llvm.usub.sat.v16i16(<16 x i16>, <16 x i16>) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.abs.i64(i64, i1 immarg) #7

; Function Attrs: nofree nosync nounwind willreturn writeonly
declare void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32>, <8 x i32*>, i32 immarg, <8 x i1>) #12

; Function Attrs: nofree nosync nounwind readonly willreturn
declare <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*>, i32 immarg, <4 x i1>, <4 x i32>) #13

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i64 @llvm.vector.reduce.add.v4i64(<4 x i64>) #14

attributes #0 = { nounwind mustprogress "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-builtins" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind willreturn mustprogress "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nosync nounwind willreturn writeonly }
attributes #6 = { alwaysinline nounwind willreturn mustprogress "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #8 = { nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "reciprocal-estimates"="none" }
attributes #10 = { nounwind }
attributes #11 = { norecurse nounwind readnone willreturn }
attributes #12 = { nofree nosync nounwind willreturn writeonly }
attributes #13 = { nofree nosync nounwind readonly willreturn }
attributes #14 = { nofree nosync nounwind readnone willreturn }
attributes #15 = { nobuiltin nounwind "no-builtins" }
attributes #16 = { nobuiltin "no-builtins" }
attributes #17 = { noinline }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6, !7, !8}
!llvm.ident = !{!9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 2, !"halide_use_soft_float_abi", i32 0}
!3 = !{i32 2, !"halide_mcpu", !"sapphirerapids"}
!4 = !{i32 2, !"halide_mattrs", !"+fma,+f16c,+avx512f,+avx512cd,+avx512vl,+avx512bw,+avx512dq,+avx512ifma,+avx512vbmi,+avx512bf16,+avx512vnni,+amx-int8,+amx-bf16"}
!5 = !{i32 2, !"halide_mabi", !""}
!6 = !{i32 2, !"halide_use_pic", i32 1}
!7 = !{i32 2, !"halide_use_large_code_model", i32 0}
!8 = !{i32 2, !"halide_per_instruction_fast_math_flags", i32 0}
!9 = !{!"clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)"}
!10 = !{!11, !11, i64 0}
!11 = !{!"any pointer", !12, i64 0}
!12 = !{!"omnipotent char", !13, i64 0}
!13 = !{!"Simple C++ TBAA"}
!14 = !{!12, !12, i64 0}
!15 = !{!16, !16, i64 0}
!16 = !{!"bool", !12, i64 0}
!17 = !{i8 0, i8 2}
!18 = !{!19, !19, i64 0}
!19 = !{!"long", !12, i64 0}
!20 = !{!21, !11, i64 0}
!21 = !{!"_ZTSN6Halide7Runtime8Internal4workE", !22, i64 0, !11, i64 56, !11, i64 64, !11, i64 72, !23, i64 80, !11, i64 88, !23, i64 96, !11, i64 104, !23, i64 112, !23, i64 116, !23, i64 120, !16, i64 124}
!22 = !{!"_ZTS22halide_parallel_task_t", !11, i64 0, !11, i64 8, !11, i64 16, !11, i64 24, !23, i64 32, !23, i64 36, !23, i64 40, !23, i64 44, !16, i64 48}
!23 = !{!"int", !12, i64 0}
!24 = !{!21, !23, i64 36}
!25 = !{!21, !23, i64 40}
!26 = !{!21, !16, i64 48}
!27 = !{!21, !11, i64 24}
!28 = !{!21, !23, i64 32}
!29 = !{!21, !11, i64 8}
!30 = !{!21, !23, i64 44}
!31 = !{!21, !11, i64 16}
!32 = !{!21, !11, i64 56}
!33 = !{!21, !11, i64 104}
!34 = !{!21, !23, i64 116}
!35 = !{!21, !23, i64 112}
!36 = !{!21, !23, i64 120}
!37 = !{!21, !16, i64 124}
!38 = !{!21, !11, i64 72}
!39 = !{!21, !23, i64 80}
!40 = !{!21, !11, i64 88}
!41 = !{!42, !42, i64 0}
!42 = !{!"vtable pointer", !13, i64 0}
!43 = !{!44, !11, i64 8}
!44 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE", !11, i64 8}
!45 = !{!46, !16, i64 2121}
!46 = !{!"_ZTSN6Halide7Runtime8Internal12work_queue_tE", !47, i64 0, !23, i64 8, !23, i64 12, !11, i64 16, !23, i64 24, !23, i64 28, !23, i64 32, !48, i64 40, !48, i64 48, !48, i64 56, !23, i64 64, !23, i64 68, !12, i64 72, !16, i64 2120, !16, i64 2121, !23, i64 2124}
!47 = !{!"_ZTS12halide_mutex", !12, i64 0}
!48 = !{!"_ZTS11halide_cond", !12, i64 0}
!49 = distinct !{!49, !50}
!50 = !{!"llvm.loop.mustprogress"}
!51 = !{!46, !23, i64 8}
!52 = !{!46, !23, i64 24}
!53 = !{!46, !23, i64 2124}
!54 = !{!46, !23, i64 28}
!55 = distinct !{!55, !50}
!56 = !{!21, !23, i64 96}
!57 = !{!46, !11, i64 16}
!58 = !{!21, !11, i64 64}
!59 = !{!46, !23, i64 68}
!60 = !{!46, !23, i64 32}
!61 = distinct !{!61, !50}
!62 = distinct !{!62, !50}
!63 = !{!46, !16, i64 2120}
!64 = distinct !{!64, !50}
!65 = !{!66, !11, i64 0}
!66 = !{!"_ZTS26halide_semaphore_acquire_t", !11, i64 0, !23, i64 8}
!67 = !{!66, !23, i64 8}
!68 = distinct !{!68, !50}
!69 = !{!46, !23, i64 64}
!70 = distinct !{!70, !50}
!71 = distinct !{!71, !50}
!72 = !{i64 0, i64 8, !10, i64 8, i64 8, !10, i64 16, i64 8, !10, i64 24, i64 8, !10, i64 32, i64 4, !73, i64 36, i64 4, !73, i64 40, i64 4, !73, i64 44, i64 4, !73, i64 48, i64 1, !15, i64 56, i64 8, !10, i64 64, i64 8, !10, i64 72, i64 8, !10, i64 80, i64 4, !73, i64 88, i64 8, !10, i64 96, i64 4, !73, i64 104, i64 8, !10, i64 112, i64 4, !73, i64 116, i64 4, !73, i64 120, i64 4, !73, i64 124, i64 1, !15}
!73 = !{!23, !23, i64 0}
!74 = !{i64 0, i64 8, !10, i64 8, i64 8, !10, i64 16, i64 8, !10, i64 24, i64 4, !73, i64 28, i64 4, !73, i64 32, i64 4, !73, i64 36, i64 4, !73, i64 40, i64 1, !15, i64 48, i64 8, !10, i64 56, i64 8, !10, i64 64, i64 8, !10, i64 72, i64 4, !73, i64 80, i64 8, !10, i64 88, i64 4, !73, i64 96, i64 8, !10, i64 104, i64 4, !73, i64 108, i64 4, !73, i64 112, i64 4, !73, i64 116, i64 1, !15}
!75 = !{i64 0, i64 8, !10, i64 8, i64 8, !10, i64 16, i64 8, !10, i64 24, i64 4, !73, i64 32, i64 8, !10, i64 40, i64 4, !73, i64 48, i64 8, !10, i64 56, i64 4, !73, i64 60, i64 4, !73, i64 64, i64 4, !73, i64 68, i64 1, !15}
!76 = !{i64 0, i64 8, !10, i64 8, i64 4, !73, i64 12, i64 4, !73, i64 16, i64 4, !73, i64 20, i64 1, !15}
!77 = distinct !{!77, !50}
!78 = distinct !{!78, !50}
!79 = !{!80, !11, i64 144}
!80 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization10queue_dataE", !81, i64 0, !84, i64 136, !11, i64 144, !84, i64 152}
!81 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization13thread_parkerE", !82, i64 0, !83, i64 64, !16, i64 128}
!82 = !{!"_ZTS15pthread_mutex_t", !12, i64 0}
!83 = !{!"_ZTS14pthread_cond_t", !12, i64 0}
!84 = !{!"long long", !12, i64 0}
!85 = !{!86, !11, i64 16}
!86 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization11hash_bucketE", !87, i64 0, !11, i64 8, !11, i64 16}
!87 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization9word_lockE", !84, i64 0}
!88 = distinct !{!88, !50}
!89 = !{!80, !84, i64 152}
!90 = !{!81, !16, i64 128}
!91 = distinct !{!91, !50}
!92 = !{!93, !11, i64 152}
!93 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization20word_lock_queue_dataE", !81, i64 0, !11, i64 136, !11, i64 144, !11, i64 152}
!94 = !{!93, !11, i64 136}
!95 = !{!93, !11, i64 144}
!96 = distinct !{!96, !50}
!97 = distinct !{!97, !50}
!98 = distinct !{!98, !50}
!99 = !{!100, !11, i64 8}
!100 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization25broadcast_parking_controlE", !11, i64 8, !11, i64 16}
!101 = !{!100, !11, i64 16}
!102 = !{!103, !11, i64 8}
!103 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization20wait_parking_controlE", !11, i64 8, !11, i64 16}
!104 = !{!103, !11, i64 16}
!105 = !{!80, !84, i64 136}
!106 = !{!107, !16, i64 0}
!107 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization15validate_actionE", !16, i64 0, !84, i64 8}
!108 = !{!107, !84, i64 8}
!109 = !{!86, !11, i64 8}
!110 = !{!84, !84, i64 0}
!111 = !{!112, !11, i64 0}
!112 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization11bucket_pairE", !11, i64 0, !11, i64 8}
!113 = distinct !{!113, !50}
!114 = !{!112, !11, i64 8}
!115 = !{!116, !11, i64 0}
!116 = !{!"_ZTSN6Halide7Runtime8Internal14spawned_threadE", !11, i64 0, !11, i64 8, !19, i64 16}
!117 = !{!116, !11, i64 8}
!118 = !{!116, !19, i64 16}
!119 = !{!22, !23, i64 40}
!120 = !{i64 0, i64 8, !10, i64 8, i64 8, !10, i64 16, i64 8, !10, i64 24, i64 8, !10, i64 32, i64 4, !73, i64 36, i64 4, !73, i64 40, i64 4, !73, i64 44, i64 4, !73, i64 48, i64 1, !15}
!121 = distinct !{!121, !50}
!122 = distinct !{!122, !50}
!123 = distinct !{!123, !50}
!124 = !{!125, !11, i64 8}
!125 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization22signal_parking_controlE", !11, i64 8, !11, i64 16}
!126 = !{!125, !11, i64 16}
!127 = !{!128, !11, i64 0}
!128 = !{!"_ZTS18halide_mutex_array", !11, i64 0}
!129 = distinct !{!129, !50}
!130 = !{!131, !134, i64 34}
!131 = !{!"_ZTS20halide_trace_event_t", !11, i64 0, !11, i64 8, !11, i64 16, !11, i64 24, !132, i64 32, !135, i64 36, !23, i64 40, !23, i64 44, !23, i64 48}
!132 = !{!"_ZTS13halide_type_t", !133, i64 0, !12, i64 1, !134, i64 2}
!133 = !{!"_ZTS18halide_type_code_t", !12, i64 0}
!134 = !{!"short", !12, i64 0}
!135 = !{!"_ZTS25halide_trace_event_code_t", !12, i64 0}
!136 = !{!132, !12, i64 1}
!137 = !{!131, !23, i64 48}
!138 = !{!131, !11, i64 0}
!139 = !{!131, !11, i64 24}
!140 = !{!141, !23, i64 0}
!141 = !{!"_ZTSN6Halide7Runtime8Internal23SharedExclusiveSpinLockE", !23, i64 0}
!142 = !{!143, !23, i64 4}
!143 = !{!"_ZTSN6Halide7Runtime8Internal11TraceBufferE", !141, i64 0, !23, i64 4, !23, i64 8, !12, i64 12}
!144 = !{!143, !23, i64 8}
!145 = distinct !{!145, !50}
!146 = !{!147, !23, i64 0}
!147 = !{!"_ZTS21halide_trace_packet_t", !23, i64 0, !23, i64 4, !132, i64 8, !135, i64 12, !23, i64 16, !23, i64 20, !23, i64 24}
!148 = !{!147, !23, i64 4}
!149 = !{!131, !11, i64 16}
!150 = !{!131, !11, i64 8}
!151 = !{!147, !23, i64 24}
!152 = !{!147, !134, i64 10}
!153 = distinct !{!153, !50}
!154 = !{!131, !135, i64 36}
!155 = !{!131, !12, i64 33}
!156 = distinct !{!156, !50}
!157 = !{!131, !23, i64 44}
!158 = distinct !{!158, !50, !159}
!159 = !{!"llvm.loop.peeled.count", i32 1}
!160 = !{!131, !133, i64 32}
!161 = !{!134, !134, i64 0}
!162 = !{!163, !163, i64 0}
!163 = !{!"float", !12, i64 0}
!164 = !{!165, !165, i64 0}
!165 = !{!"double", !12, i64 0}
!166 = distinct !{!166, !50, !159}
!167 = distinct !{!167, !50}
!168 = !{!131, !23, i64 40}
!169 = distinct !{!169, !50}
!170 = distinct !{!170, !50}
!171 = distinct !{!171, !50}
!172 = !{!173, !11, i64 16}
!173 = !{!"_ZTS15halide_buffer_t", !84, i64 0, !11, i64 8, !11, i64 16, !84, i64 24, !132, i64 32, !23, i64 36, !11, i64 40, !11, i64 48}
!174 = !{!173, !84, i64 0}
!175 = !{!173, !23, i64 36}
!176 = !{!173, !11, i64 40}
!177 = !{i64 0, i64 4, !73, i64 4, i64 4, !73, i64 8, i64 4, !73, i64 12, i64 4, !73}
!178 = !{!179, !23, i64 4}
!179 = !{!"_ZTS18halide_dimension_t", !23, i64 0, !23, i64 4, !23, i64 8, !23, i64 12}
!180 = distinct !{!180, !50}
!181 = !{!179, !23, i64 0}
!182 = !{!179, !23, i64 8}
!183 = distinct !{!183, !50, !184}
!184 = !{!"llvm.loop.isvectorized", i32 1}
!185 = distinct !{!185, !186}
!186 = !{!"llvm.loop.unroll.disable"}
!187 = distinct !{!187, !50, !188, !184}
!188 = !{!"llvm.loop.unroll.runtime.disable"}
!189 = !{!190, !134, i64 0}
!190 = !{!"_ZTSN6Halide7Runtime8Internal18halide_tiff_headerE", !134, i64 0, !134, i64 2, !23, i64 4, !134, i64 8, !12, i64 10, !23, i64 190, !12, i64 194, !12, i64 202}
!191 = !{!190, !134, i64 2}
!192 = !{!190, !23, i64 4}
!193 = !{!190, !134, i64 8}
!194 = !{!195, !134, i64 0}
!195 = !{!"_ZTSN6Halide7Runtime8Internal8tiff_tagE", !134, i64 0, !134, i64 2, !23, i64 4, !12, i64 8}
!196 = !{!195, !134, i64 2}
!197 = !{!195, !23, i64 4}
!198 = distinct !{!198, !50}
!199 = distinct !{!199, !50}
!200 = distinct !{!200, !50}
!201 = distinct !{!201, !50}
!202 = distinct !{!202, !50}
!203 = !{!204}
!204 = distinct !{!204, !205}
!205 = distinct !{!205, !"LVerDomain"}
!206 = !{!207}
!207 = distinct !{!207, !205}
!208 = distinct !{!208, !50, !184}
!209 = distinct !{!209, !186}
!210 = distinct !{!210, !186}
!211 = distinct !{!211, !50, !184}
!212 = distinct !{!212, !186}
!213 = distinct !{!213, !50, !184}
!214 = distinct !{!214, !50, !184}
!215 = distinct !{!215, !50, !188, !184}
!216 = distinct !{!216, !50, !184}
!217 = distinct !{!217, !50, !188, !184}
!218 = distinct !{!218, !50, !184}
!219 = distinct !{!219, !50, !188, !184}
!220 = distinct !{!220, !50}
!221 = distinct !{!221, !50, !184}
!222 = distinct !{!222, !50, !188, !184}
!223 = distinct !{!223, !50}
!224 = distinct !{!224, !50}
!225 = distinct !{!225, !50}
!226 = distinct !{!226, !50}
!227 = !{!228, !11, i64 0}
!228 = !{!"_ZTSN6Halide7Runtime8Internal10CacheEntryE", !11, i64 0, !11, i64 8, !11, i64 16, !11, i64 24, !19, i64 32, !11, i64 40, !23, i64 48, !23, i64 52, !23, i64 56, !23, i64 60, !11, i64 64, !11, i64 72, !84, i64 80, !16, i64 88}
!229 = distinct !{!229, !50}
!230 = !{!228, !23, i64 56}
!231 = !{!228, !11, i64 24}
!232 = !{!228, !11, i64 72}
!233 = distinct !{!233, !50}
!234 = distinct !{!234, !50}
!235 = !{!236, !84, i64 0}
!236 = !{!"_ZTSN6Halide7Runtime8Internal11device_copyE", !84, i64 0, !84, i64 8, !84, i64 16, !12, i64 24, !12, i64 152, !12, i64 280, !84, i64 408}
!237 = !{!236, !84, i64 8}
!238 = !{!236, !84, i64 408}
!239 = distinct !{!239, !50}
!240 = !{!236, !84, i64 16}
!241 = distinct !{!241, !50, !184}
!242 = distinct !{!242, !50, !188, !184}
!243 = distinct !{!243, !50}
!244 = distinct !{!244, !186}
!245 = distinct !{!245, !50}
!246 = distinct !{!246, !50}
!247 = distinct !{!247, !50}
!248 = !{i64 0, i64 8, !110, i64 8, i64 8, !110, i64 16, i64 8, !110, i64 24, i64 128, !14, i64 152, i64 128, !14, i64 280, i64 128, !14, i64 408, i64 8, !110}
!249 = distinct !{!249, !50}
!250 = !{!179, !23, i64 12}
!251 = !{!228, !11, i64 16}
!252 = !{!228, !19, i64 32}
!253 = !{!228, !23, i64 48}
!254 = !{!228, !23, i64 52}
!255 = !{!228, !23, i64 60}
!256 = !{!228, !11, i64 64}
!257 = !{!228, !11, i64 40}
!258 = distinct !{!258, !50}
!259 = distinct !{!259, !50}
!260 = distinct !{!260, !50}
!261 = !{!228, !16, i64 88}
!262 = !{!228, !84, i64 80}
!263 = !{i64 0, i64 8, !110, i64 8, i64 8, !10, i64 16, i64 8, !10, i64 24, i64 8, !110, i64 32, i64 1, !264, i64 33, i64 1, !14, i64 34, i64 2, !161, i64 36, i64 4, !73, i64 40, i64 8, !10, i64 48, i64 8, !10}
!264 = !{!133, !133, i64 0}
!265 = distinct !{!265, !50}
!266 = distinct !{!266, !186}
!267 = distinct !{!267, !50}
!268 = !{!228, !11, i64 8}
!269 = distinct !{!269, !50}
!270 = distinct !{!270, !50, !184}
!271 = distinct !{!271, !50, !188, !184}
!272 = distinct !{!272, !50, !184}
!273 = distinct !{!273, !50, !188, !184}
!274 = distinct !{!274, !50}
!275 = distinct !{!275, !50}
!276 = distinct !{!276, !50}
!277 = distinct !{!277, !50}
!278 = distinct !{!278, !50}
!279 = distinct !{!279, !50, !184}
!280 = distinct !{!280, !50, !188, !184}
!281 = distinct !{!281, !50, !184}
!282 = distinct !{!282, !50, !188, !184}
!283 = distinct !{!283, !50}
!284 = !{!285, !23, i64 8}
!285 = !{!"_ZTSN6Halide7Runtime8Internal16CacheBlockHeaderE", !11, i64 0, !23, i64 8}
!286 = !{!285, !11, i64 0}
!287 = distinct !{!287, !50}
!288 = distinct !{!288, !186}
!289 = distinct !{!289, !50}
!290 = distinct !{!290, !50}
!291 = distinct !{!291, !50}
!292 = distinct !{!292, !50, !184}
!293 = distinct !{!293, !50, !188, !184}
!294 = distinct !{!294, !50, !184}
!295 = distinct !{!295, !50, !188, !184}
!296 = distinct !{!296, !50}
!297 = distinct !{!297, !50}
!298 = distinct !{!298, !50}
!299 = distinct !{!299, !50}
!300 = distinct !{!300, !50}
!301 = distinct !{!301, !50}
!302 = distinct !{!302, !50}
!303 = distinct !{!303, !50}
!304 = distinct !{!304, !50}
!305 = !{!132, !133, i64 0}
!306 = !{!132, !134, i64 2}
!307 = !{!173, !11, i64 8}
!308 = !{!173, !84, i64 24}
!309 = distinct !{!309, !50}
!310 = !{!311, !11, i64 0}
!311 = !{!"_ZTS29halide_device_allocation_pool", !11, i64 0, !11, i64 8}
!312 = distinct !{!312, !50}
!313 = !{!311, !11, i64 8}
!314 = !{!315, !11, i64 120}
!315 = !{!"_ZTS25halide_device_interface_t", !11, i64 0, !11, i64 8, !11, i64 16, !11, i64 24, !11, i64 32, !11, i64 40, !11, i64 48, !11, i64 56, !11, i64 64, !11, i64 72, !11, i64 80, !11, i64 88, !11, i64 96, !11, i64 104, !11, i64 112, !11, i64 120}
!316 = !{!317, !11, i64 48}
!317 = !{!"_ZTS30halide_device_interface_impl_t", !11, i64 0, !11, i64 8, !11, i64 16, !11, i64 24, !11, i64 32, !11, i64 40, !11, i64 48, !11, i64 56, !11, i64 64, !11, i64 72, !11, i64 80, !11, i64 88, !11, i64 96, !11, i64 104, !11, i64 112, !11, i64 120}
!318 = !{!317, !11, i64 40}
!319 = !{!317, !11, i64 56}
!320 = !{!317, !11, i64 0}
!321 = !{!317, !11, i64 16}
!322 = !{!317, !11, i64 8}
!323 = !{!317, !11, i64 32}
!324 = !{!317, !11, i64 24}
!325 = !{!317, !11, i64 64}
!326 = !{!317, !11, i64 72}
!327 = distinct !{!327, !50, !184}
!328 = distinct !{!328, !50, !188, !184}
!329 = distinct !{!329, !50, !184}
!330 = distinct !{!330, !50, !188, !184}
!331 = !{!317, !11, i64 112}
!332 = !{!317, !11, i64 120}
!333 = !{!317, !11, i64 80}
!334 = !{!317, !11, i64 88}
!335 = !{!317, !11, i64 96}
!336 = !{!317, !11, i64 104}
!337 = !{i32 22, i32 33}
!338 = !{!339, !11, i64 40}
!339 = !{!"_ZTS21halide_profiler_state", !47, i64 0, !23, i64 8, !23, i64 12, !23, i64 16, !23, i64 20, !11, i64 24, !11, i64 32, !11, i64 40}
!340 = !{!339, !23, i64 16}
!341 = !{!342, !84, i64 0}
!342 = !{!"_ZTS30halide_profiler_pipeline_stats", !84, i64 0, !84, i64 8, !84, i64 16, !84, i64 24, !84, i64 32, !84, i64 40, !11, i64 48, !11, i64 56, !11, i64 64, !23, i64 72, !23, i64 76, !23, i64 80, !23, i64 84, !23, i64 88}
!343 = !{!342, !23, i64 80}
!344 = !{!342, !84, i64 32}
!345 = !{!342, !84, i64 40}
!346 = !{!342, !11, i64 48}
!347 = !{!342, !23, i64 84}
!348 = !{!342, !23, i64 88}
!349 = !{!342, !84, i64 16}
!350 = !{!342, !84, i64 24}
!351 = !{!342, !23, i64 72}
!352 = !{!342, !11, i64 56}
!353 = distinct !{!353, !50}
!354 = !{!355, !84, i64 32}
!355 = !{!"_ZTS26halide_profiler_func_stats", !84, i64 0, !84, i64 8, !84, i64 16, !84, i64 24, !84, i64 32, !84, i64 40, !84, i64 48, !11, i64 56, !23, i64 64}
!356 = !{!355, !84, i64 0}
!357 = !{!355, !11, i64 56}
!358 = distinct !{!358, !50}
!359 = distinct !{!359, !50}
!360 = distinct !{!360, !50}
!361 = !{!355, !84, i64 40}
!362 = !{!355, !84, i64 48}
!363 = distinct !{!363, !50}
!364 = !{!355, !84, i64 16}
!365 = distinct !{!365, !50}
!366 = !{!355, !23, i64 64}
!367 = distinct !{!367, !50}
!368 = !{!355, !84, i64 24}
!369 = distinct !{!369, !50}
!370 = distinct !{!370, !50}
!371 = !{!339, !11, i64 24}
!372 = !{!342, !11, i64 64}
!373 = distinct !{!373, !50}
!374 = !{!339, !23, i64 12}
!375 = distinct !{!375, !50}
!376 = !{!342, !23, i64 76}
!377 = distinct !{!377, !50}
!378 = distinct !{!378, !50}
!379 = !{!339, !11, i64 32}
!380 = !{!339, !23, i64 20}
!381 = !{!339, !23, i64 8}
!382 = distinct !{!382, !50}
!383 = distinct !{!383, !50}
!384 = distinct !{!384, !50}
!385 = distinct !{!385, !50}
!386 = !{!"branch_weights", i32 0, i32 1073741824}
!387 = !{!173, !133, i64 32}
!388 = !{!173, !12, i64 33}
!389 = !{!173, !134, i64 34}
!390 = !{i64 0, i64 64}
!391 = !{!"branch_weights", i32 1073741824, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0}
!392 = !{!"branch_weights", i32 1073741824, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0}
!393 = !{!"branch_weights", i32 1073741824, i32 0}
!394 = !{!395, !395, i64 0}
!395 = !{!"input", !396, i64 0}
!396 = !{!"Halide buffer"}
!397 = !{!398, !398, i64 0}
!398 = !{!"output", !396, i64 0}
