; ModuleID = 'conv2d.c'
source_filename = "conv2d.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @conv2D(i32* noalias nocapture %0, i16* noalias nocapture readonly %1, [64 x i16]* noalias nocapture readonly %2) local_unnamed_addr #0 {
  %4 = load i16, i16* %1, align 2, !tbaa !2
  %5 = sext i16 %4 to i32
  %6 = getelementptr inbounds i16, i16* %1, i64 1
  %7 = load i16, i16* %6, align 2, !tbaa !2
  %8 = sext i16 %7 to i32
  %9 = getelementptr inbounds i16, i16* %1, i64 2
  %10 = bitcast i16* %9 to <2 x i16>*
  %11 = load <2 x i16>, <2 x i16>* %10, align 2, !tbaa !2
  %12 = getelementptr inbounds i16, i16* %1, i64 4
  %13 = bitcast i16* %12 to <2 x i16>*
  %14 = load <2 x i16>, <2 x i16>* %13, align 2, !tbaa !2
  %15 = getelementptr inbounds i16, i16* %1, i64 6
  %16 = bitcast i16* %15 to <2 x i16>*
  %17 = load <2 x i16>, <2 x i16>* %16, align 2, !tbaa !2
  %18 = getelementptr inbounds i16, i16* %1, i64 8
  %19 = bitcast i16* %18 to <2 x i16>*
  %20 = load <2 x i16>, <2 x i16>* %19, align 2, !tbaa !2
  %21 = getelementptr inbounds i16, i16* %1, i64 10
  %22 = bitcast i16* %21 to <2 x i16>*
  %23 = load <2 x i16>, <2 x i16>* %22, align 2, !tbaa !2
  %24 = getelementptr inbounds i16, i16* %1, i64 12
  %25 = bitcast i16* %24 to <2 x i16>*
  %26 = load <2 x i16>, <2 x i16>* %25, align 2, !tbaa !2
  %27 = getelementptr inbounds i16, i16* %1, i64 14
  %28 = bitcast i16* %27 to <2 x i16>*
  %29 = load <2 x i16>, <2 x i16>* %28, align 2, !tbaa !2
  %30 = getelementptr inbounds i16, i16* %1, i64 16
  %31 = bitcast i16* %30 to <2 x i16>*
  %32 = load <2 x i16>, <2 x i16>* %31, align 2, !tbaa !2
  %33 = getelementptr inbounds i16, i16* %1, i64 18
  %34 = bitcast i16* %33 to <2 x i16>*
  %35 = load <2 x i16>, <2 x i16>* %34, align 2, !tbaa !2
  %36 = getelementptr inbounds i16, i16* %1, i64 20
  %37 = bitcast i16* %36 to <2 x i16>*
  %38 = load <2 x i16>, <2 x i16>* %37, align 2, !tbaa !2
  %39 = getelementptr inbounds i16, i16* %1, i64 22
  %40 = bitcast i16* %39 to <2 x i16>*
  %41 = load <2 x i16>, <2 x i16>* %40, align 2, !tbaa !2
  %42 = getelementptr inbounds i16, i16* %1, i64 24
  %43 = bitcast i16* %42 to <2 x i16>*
  %44 = load <2 x i16>, <2 x i16>* %43, align 2, !tbaa !2
  %45 = getelementptr inbounds i16, i16* %1, i64 26
  %46 = bitcast i16* %45 to <2 x i16>*
  %47 = load <2 x i16>, <2 x i16>* %46, align 2, !tbaa !2
  %48 = getelementptr inbounds i16, i16* %1, i64 28
  %49 = bitcast i16* %48 to <2 x i16>*
  %50 = load <2 x i16>, <2 x i16>* %49, align 2, !tbaa !2
  %51 = getelementptr inbounds i16, i16* %1, i64 30
  %52 = bitcast i16* %51 to <2 x i16>*
  %53 = load <2 x i16>, <2 x i16>* %52, align 2, !tbaa !2
  %54 = getelementptr inbounds i16, i16* %1, i64 32
  %55 = bitcast i16* %54 to <2 x i16>*
  %56 = load <2 x i16>, <2 x i16>* %55, align 2, !tbaa !2
  %57 = getelementptr inbounds i16, i16* %1, i64 34
  %58 = bitcast i16* %57 to <2 x i16>*
  %59 = load <2 x i16>, <2 x i16>* %58, align 2, !tbaa !2
  %60 = getelementptr inbounds i16, i16* %1, i64 36
  %61 = bitcast i16* %60 to <2 x i16>*
  %62 = load <2 x i16>, <2 x i16>* %61, align 2, !tbaa !2
  %63 = getelementptr inbounds i16, i16* %1, i64 38
  %64 = bitcast i16* %63 to <2 x i16>*
  %65 = load <2 x i16>, <2 x i16>* %64, align 2, !tbaa !2
  %66 = getelementptr inbounds i16, i16* %1, i64 40
  %67 = bitcast i16* %66 to <2 x i16>*
  %68 = load <2 x i16>, <2 x i16>* %67, align 2, !tbaa !2
  %69 = getelementptr inbounds i16, i16* %1, i64 42
  %70 = bitcast i16* %69 to <2 x i16>*
  %71 = load <2 x i16>, <2 x i16>* %70, align 2, !tbaa !2
  %72 = getelementptr inbounds i16, i16* %1, i64 44
  %73 = bitcast i16* %72 to <2 x i16>*
  %74 = load <2 x i16>, <2 x i16>* %73, align 2, !tbaa !2
  %75 = getelementptr inbounds i16, i16* %1, i64 46
  %76 = bitcast i16* %75 to <2 x i16>*
  %77 = load <2 x i16>, <2 x i16>* %76, align 2, !tbaa !2
  %78 = getelementptr inbounds i16, i16* %1, i64 48
  %79 = bitcast i16* %78 to <2 x i16>*
  %80 = load <2 x i16>, <2 x i16>* %79, align 2, !tbaa !2
  %81 = getelementptr inbounds i16, i16* %1, i64 50
  %82 = bitcast i16* %81 to <2 x i16>*
  %83 = load <2 x i16>, <2 x i16>* %82, align 2, !tbaa !2
  %84 = getelementptr inbounds i16, i16* %1, i64 52
  %85 = bitcast i16* %84 to <2 x i16>*
  %86 = load <2 x i16>, <2 x i16>* %85, align 2, !tbaa !2
  %87 = getelementptr inbounds i16, i16* %1, i64 54
  %88 = bitcast i16* %87 to <2 x i16>*
  %89 = load <2 x i16>, <2 x i16>* %88, align 2, !tbaa !2
  %90 = getelementptr inbounds i16, i16* %1, i64 56
  %91 = bitcast i16* %90 to <2 x i16>*
  %92 = load <2 x i16>, <2 x i16>* %91, align 2, !tbaa !2
  %93 = getelementptr inbounds i16, i16* %1, i64 58
  %94 = bitcast i16* %93 to <2 x i16>*
  %95 = load <2 x i16>, <2 x i16>* %94, align 2, !tbaa !2
  %96 = getelementptr inbounds i16, i16* %1, i64 60
  %97 = bitcast i16* %96 to <2 x i16>*
  %98 = load <2 x i16>, <2 x i16>* %97, align 2, !tbaa !2
  %99 = getelementptr inbounds i16, i16* %1, i64 62
  %100 = bitcast i16* %99 to <2 x i16>*
  %101 = load <2 x i16>, <2 x i16>* %100, align 2, !tbaa !2
  %102 = shufflevector <2 x i16> %11, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %103 = shufflevector <2 x i16> %14, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %104 = shufflevector <2 x i16> %17, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %105 = shufflevector <2 x i16> %20, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %106 = shufflevector <2 x i16> %23, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %107 = shufflevector <2 x i16> %26, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %108 = shufflevector <2 x i16> %29, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %109 = shufflevector <2 x i16> %32, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %110 = shufflevector <2 x i16> %35, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %111 = shufflevector <2 x i16> %38, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %112 = shufflevector <2 x i16> %41, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %113 = shufflevector <2 x i16> %44, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %114 = shufflevector <2 x i16> %47, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %115 = shufflevector <2 x i16> %50, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %116 = shufflevector <2 x i16> %53, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %117 = shufflevector <2 x i16> %56, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %118 = shufflevector <2 x i16> %59, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %119 = shufflevector <2 x i16> %62, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %120 = shufflevector <2 x i16> %65, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %121 = shufflevector <2 x i16> %68, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %122 = shufflevector <2 x i16> %71, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %123 = shufflevector <2 x i16> %74, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %124 = shufflevector <2 x i16> %77, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %125 = shufflevector <2 x i16> %80, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %126 = shufflevector <2 x i16> %83, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %127 = shufflevector <2 x i16> %86, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %128 = shufflevector <2 x i16> %89, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %129 = shufflevector <2 x i16> %92, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %130 = shufflevector <2 x i16> %95, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %131 = shufflevector <2 x i16> %98, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  %132 = shufflevector <2 x i16> %101, <2 x i16> undef, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  br label %133

133:                                              ; preds = %133, %3
  %134 = phi i64 [ 0, %3 ], [ %989, %133 ]
  %135 = getelementptr inbounds i32, i32* %0, i64 %134
  %136 = or i64 %134, 1
  %137 = or i64 %134, 2
  %138 = or i64 %134, 3
  %139 = bitcast i32* %135 to <4 x i32>*
  %140 = load <4 x i32>, <4 x i32>* %139, align 4, !tbaa !6
  %141 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 0
  %142 = load i16, i16* %141, align 2, !tbaa !2
  %143 = sext i16 %142 to i32
  %144 = mul nsw i32 %143, %5
  %145 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 1
  %146 = load i16, i16* %145, align 2, !tbaa !2
  %147 = sext i16 %146 to i32
  %148 = mul nsw i32 %147, %8
  %149 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 2
  %150 = load i16, i16* %149, align 2, !tbaa !2
  %151 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 3
  %152 = load i16, i16* %151, align 2, !tbaa !2
  %153 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 4
  %154 = load i16, i16* %153, align 2, !tbaa !2
  %155 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 5
  %156 = load i16, i16* %155, align 2, !tbaa !2
  %157 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 6
  %158 = load i16, i16* %157, align 2, !tbaa !2
  %159 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 7
  %160 = load i16, i16* %159, align 2, !tbaa !2
  %161 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 8
  %162 = load i16, i16* %161, align 2, !tbaa !2
  %163 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 9
  %164 = load i16, i16* %163, align 2, !tbaa !2
  %165 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 10
  %166 = load i16, i16* %165, align 2, !tbaa !2
  %167 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 11
  %168 = load i16, i16* %167, align 2, !tbaa !2
  %169 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 12
  %170 = load i16, i16* %169, align 2, !tbaa !2
  %171 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 13
  %172 = load i16, i16* %171, align 2, !tbaa !2
  %173 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 14
  %174 = load i16, i16* %173, align 2, !tbaa !2
  %175 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 15
  %176 = load i16, i16* %175, align 2, !tbaa !2
  %177 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 16
  %178 = load i16, i16* %177, align 2, !tbaa !2
  %179 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 17
  %180 = load i16, i16* %179, align 2, !tbaa !2
  %181 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 18
  %182 = load i16, i16* %181, align 2, !tbaa !2
  %183 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 19
  %184 = load i16, i16* %183, align 2, !tbaa !2
  %185 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 20
  %186 = load i16, i16* %185, align 2, !tbaa !2
  %187 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 21
  %188 = load i16, i16* %187, align 2, !tbaa !2
  %189 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 22
  %190 = load i16, i16* %189, align 2, !tbaa !2
  %191 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 23
  %192 = load i16, i16* %191, align 2, !tbaa !2
  %193 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 24
  %194 = load i16, i16* %193, align 2, !tbaa !2
  %195 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 25
  %196 = load i16, i16* %195, align 2, !tbaa !2
  %197 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 26
  %198 = load i16, i16* %197, align 2, !tbaa !2
  %199 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 27
  %200 = load i16, i16* %199, align 2, !tbaa !2
  %201 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 28
  %202 = load i16, i16* %201, align 2, !tbaa !2
  %203 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 29
  %204 = load i16, i16* %203, align 2, !tbaa !2
  %205 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 30
  %206 = load i16, i16* %205, align 2, !tbaa !2
  %207 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 31
  %208 = load i16, i16* %207, align 2, !tbaa !2
  %209 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 32
  %210 = load i16, i16* %209, align 2, !tbaa !2
  %211 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 33
  %212 = load i16, i16* %211, align 2, !tbaa !2
  %213 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 34
  %214 = load i16, i16* %213, align 2, !tbaa !2
  %215 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 35
  %216 = load i16, i16* %215, align 2, !tbaa !2
  %217 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 36
  %218 = load i16, i16* %217, align 2, !tbaa !2
  %219 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 37
  %220 = load i16, i16* %219, align 2, !tbaa !2
  %221 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 38
  %222 = load i16, i16* %221, align 2, !tbaa !2
  %223 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 39
  %224 = load i16, i16* %223, align 2, !tbaa !2
  %225 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 40
  %226 = load i16, i16* %225, align 2, !tbaa !2
  %227 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 41
  %228 = load i16, i16* %227, align 2, !tbaa !2
  %229 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 42
  %230 = load i16, i16* %229, align 2, !tbaa !2
  %231 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 43
  %232 = load i16, i16* %231, align 2, !tbaa !2
  %233 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 44
  %234 = load i16, i16* %233, align 2, !tbaa !2
  %235 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 45
  %236 = load i16, i16* %235, align 2, !tbaa !2
  %237 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 46
  %238 = load i16, i16* %237, align 2, !tbaa !2
  %239 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 47
  %240 = load i16, i16* %239, align 2, !tbaa !2
  %241 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 48
  %242 = load i16, i16* %241, align 2, !tbaa !2
  %243 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 49
  %244 = load i16, i16* %243, align 2, !tbaa !2
  %245 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 50
  %246 = load i16, i16* %245, align 2, !tbaa !2
  %247 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 51
  %248 = load i16, i16* %247, align 2, !tbaa !2
  %249 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 52
  %250 = load i16, i16* %249, align 2, !tbaa !2
  %251 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 53
  %252 = load i16, i16* %251, align 2, !tbaa !2
  %253 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 54
  %254 = load i16, i16* %253, align 2, !tbaa !2
  %255 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 55
  %256 = load i16, i16* %255, align 2, !tbaa !2
  %257 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 56
  %258 = load i16, i16* %257, align 2, !tbaa !2
  %259 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 57
  %260 = load i16, i16* %259, align 2, !tbaa !2
  %261 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 58
  %262 = load i16, i16* %261, align 2, !tbaa !2
  %263 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 59
  %264 = load i16, i16* %263, align 2, !tbaa !2
  %265 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 60
  %266 = load i16, i16* %265, align 2, !tbaa !2
  %267 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 61
  %268 = load i16, i16* %267, align 2, !tbaa !2
  %269 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 62
  %270 = load i16, i16* %269, align 2, !tbaa !2
  %271 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %134, i64 63
  %272 = load i16, i16* %271, align 2, !tbaa !2
  %273 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 0
  %274 = load i16, i16* %273, align 2, !tbaa !2
  %275 = sext i16 %274 to i32
  %276 = mul nsw i32 %275, %5
  %277 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 0
  %278 = load i16, i16* %277, align 2, !tbaa !2
  %279 = sext i16 %278 to i32
  %280 = mul nsw i32 %279, %5
  %281 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 0
  %282 = load i16, i16* %281, align 2, !tbaa !2
  %283 = sext i16 %282 to i32
  %284 = mul nsw i32 %283, %5
  %285 = insertelement <4 x i32> undef, i32 %276, i64 1
  %286 = insertelement <4 x i32> %285, i32 %284, i64 3
  %287 = insertelement <4 x i32> %286, i32 %280, i64 2
  %288 = insertelement <4 x i32> %287, i32 %144, i64 0
  %289 = add <4 x i32> %140, %288
  %290 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 1
  %291 = load i16, i16* %290, align 2, !tbaa !2
  %292 = sext i16 %291 to i32
  %293 = mul nsw i32 %292, %8
  %294 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 1
  %295 = load i16, i16* %294, align 2, !tbaa !2
  %296 = sext i16 %295 to i32
  %297 = mul nsw i32 %296, %8
  %298 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 1
  %299 = load i16, i16* %298, align 2, !tbaa !2
  %300 = sext i16 %299 to i32
  %301 = mul nsw i32 %300, %8
  %302 = insertelement <4 x i32> undef, i32 %301, i64 3
  %303 = insertelement <4 x i32> %302, i32 %293, i64 1
  %304 = insertelement <4 x i32> %303, i32 %148, i64 0
  %305 = insertelement <4 x i32> %304, i32 %297, i64 2
  %306 = add <4 x i32> %289, %305
  %307 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 2
  %308 = load i16, i16* %307, align 2, !tbaa !2
  %309 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 3
  %310 = load i16, i16* %309, align 2, !tbaa !2
  %311 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 2
  %312 = load i16, i16* %311, align 2, !tbaa !2
  %313 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 3
  %314 = load i16, i16* %313, align 2, !tbaa !2
  %315 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 2
  %316 = load i16, i16* %315, align 2, !tbaa !2
  %317 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 3
  %318 = load i16, i16* %317, align 2, !tbaa !2
  %319 = insertelement <8 x i16> undef, i16 %312, i64 4
  %320 = insertelement <8 x i16> %319, i16 %150, i64 0
  %321 = insertelement <8 x i16> %320, i16 %316, i64 6
  %322 = insertelement <8 x i16> %321, i16 %152, i64 1
  %323 = insertelement <8 x i16> %322, i16 %308, i64 2
  %324 = insertelement <8 x i16> %323, i16 %318, i64 7
  %325 = insertelement <8 x i16> %324, i16 %314, i64 5
  %326 = insertelement <8 x i16> %325, i16 %310, i64 3
  %327 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %102, <8 x i16> %326) #2
  %328 = add <4 x i32> %306, %327
  %329 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 4
  %330 = load i16, i16* %329, align 2, !tbaa !2
  %331 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 5
  %332 = load i16, i16* %331, align 2, !tbaa !2
  %333 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 4
  %334 = load i16, i16* %333, align 2, !tbaa !2
  %335 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 5
  %336 = load i16, i16* %335, align 2, !tbaa !2
  %337 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 4
  %338 = load i16, i16* %337, align 2, !tbaa !2
  %339 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 5
  %340 = load i16, i16* %339, align 2, !tbaa !2
  %341 = insertelement <8 x i16> undef, i16 %334, i64 4
  %342 = insertelement <8 x i16> %341, i16 %154, i64 0
  %343 = insertelement <8 x i16> %342, i16 %340, i64 7
  %344 = insertelement <8 x i16> %343, i16 %332, i64 3
  %345 = insertelement <8 x i16> %344, i16 %336, i64 5
  %346 = insertelement <8 x i16> %345, i16 %330, i64 2
  %347 = insertelement <8 x i16> %346, i16 %156, i64 1
  %348 = insertelement <8 x i16> %347, i16 %338, i64 6
  %349 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %103, <8 x i16> %348) #2
  %350 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 6
  %351 = load i16, i16* %350, align 2, !tbaa !2
  %352 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 7
  %353 = load i16, i16* %352, align 2, !tbaa !2
  %354 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 6
  %355 = load i16, i16* %354, align 2, !tbaa !2
  %356 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 7
  %357 = load i16, i16* %356, align 2, !tbaa !2
  %358 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 6
  %359 = load i16, i16* %358, align 2, !tbaa !2
  %360 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 7
  %361 = load i16, i16* %360, align 2, !tbaa !2
  %362 = insertelement <8 x i16> undef, i16 %355, i64 4
  %363 = insertelement <8 x i16> %362, i16 %353, i64 3
  %364 = insertelement <8 x i16> %363, i16 %361, i64 7
  %365 = insertelement <8 x i16> %364, i16 %158, i64 0
  %366 = insertelement <8 x i16> %365, i16 %351, i64 2
  %367 = insertelement <8 x i16> %366, i16 %357, i64 5
  %368 = insertelement <8 x i16> %367, i16 %359, i64 6
  %369 = insertelement <8 x i16> %368, i16 %160, i64 1
  %370 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %104, <8 x i16> %369) #2
  %371 = add <4 x i32> %349, %370
  %372 = add <4 x i32> %328, %371
  %373 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 8
  %374 = load i16, i16* %373, align 2, !tbaa !2
  %375 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 9
  %376 = load i16, i16* %375, align 2, !tbaa !2
  %377 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 8
  %378 = load i16, i16* %377, align 2, !tbaa !2
  %379 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 9
  %380 = load i16, i16* %379, align 2, !tbaa !2
  %381 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 8
  %382 = load i16, i16* %381, align 2, !tbaa !2
  %383 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 9
  %384 = load i16, i16* %383, align 2, !tbaa !2
  %385 = insertelement <8 x i16> undef, i16 %378, i64 4
  %386 = insertelement <8 x i16> %385, i16 %384, i64 7
  %387 = insertelement <8 x i16> %386, i16 %162, i64 0
  %388 = insertelement <8 x i16> %387, i16 %164, i64 1
  %389 = insertelement <8 x i16> %388, i16 %376, i64 3
  %390 = insertelement <8 x i16> %389, i16 %374, i64 2
  %391 = insertelement <8 x i16> %390, i16 %382, i64 6
  %392 = insertelement <8 x i16> %391, i16 %380, i64 5
  %393 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %105, <8 x i16> %392) #2
  %394 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 10
  %395 = load i16, i16* %394, align 2, !tbaa !2
  %396 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 11
  %397 = load i16, i16* %396, align 2, !tbaa !2
  %398 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 10
  %399 = load i16, i16* %398, align 2, !tbaa !2
  %400 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 11
  %401 = load i16, i16* %400, align 2, !tbaa !2
  %402 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 10
  %403 = load i16, i16* %402, align 2, !tbaa !2
  %404 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 11
  %405 = load i16, i16* %404, align 2, !tbaa !2
  %406 = insertelement <8 x i16> undef, i16 %395, i64 2
  %407 = insertelement <8 x i16> %406, i16 %405, i64 7
  %408 = insertelement <8 x i16> %407, i16 %401, i64 5
  %409 = insertelement <8 x i16> %408, i16 %403, i64 6
  %410 = insertelement <8 x i16> %409, i16 %166, i64 0
  %411 = insertelement <8 x i16> %410, i16 %397, i64 3
  %412 = insertelement <8 x i16> %411, i16 %399, i64 4
  %413 = insertelement <8 x i16> %412, i16 %168, i64 1
  %414 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %106, <8 x i16> %413) #2
  %415 = add <4 x i32> %393, %414
  %416 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 12
  %417 = load i16, i16* %416, align 2, !tbaa !2
  %418 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 13
  %419 = load i16, i16* %418, align 2, !tbaa !2
  %420 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 12
  %421 = load i16, i16* %420, align 2, !tbaa !2
  %422 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 13
  %423 = load i16, i16* %422, align 2, !tbaa !2
  %424 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 12
  %425 = load i16, i16* %424, align 2, !tbaa !2
  %426 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 13
  %427 = load i16, i16* %426, align 2, !tbaa !2
  %428 = insertelement <8 x i16> undef, i16 %419, i64 3
  %429 = insertelement <8 x i16> %428, i16 %427, i64 7
  %430 = insertelement <8 x i16> %429, i16 %170, i64 0
  %431 = insertelement <8 x i16> %430, i16 %423, i64 5
  %432 = insertelement <8 x i16> %431, i16 %425, i64 6
  %433 = insertelement <8 x i16> %432, i16 %172, i64 1
  %434 = insertelement <8 x i16> %433, i16 %417, i64 2
  %435 = insertelement <8 x i16> %434, i16 %421, i64 4
  %436 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %107, <8 x i16> %435) #2
  %437 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 14
  %438 = load i16, i16* %437, align 2, !tbaa !2
  %439 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 15
  %440 = load i16, i16* %439, align 2, !tbaa !2
  %441 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 14
  %442 = load i16, i16* %441, align 2, !tbaa !2
  %443 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 15
  %444 = load i16, i16* %443, align 2, !tbaa !2
  %445 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 14
  %446 = load i16, i16* %445, align 2, !tbaa !2
  %447 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 15
  %448 = load i16, i16* %447, align 2, !tbaa !2
  %449 = insertelement <8 x i16> undef, i16 %442, i64 4
  %450 = insertelement <8 x i16> %449, i16 %444, i64 5
  %451 = insertelement <8 x i16> %450, i16 %448, i64 7
  %452 = insertelement <8 x i16> %451, i16 %174, i64 0
  %453 = insertelement <8 x i16> %452, i16 %438, i64 2
  %454 = insertelement <8 x i16> %453, i16 %446, i64 6
  %455 = insertelement <8 x i16> %454, i16 %440, i64 3
  %456 = insertelement <8 x i16> %455, i16 %176, i64 1
  %457 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %108, <8 x i16> %456) #2
  %458 = add <4 x i32> %436, %457
  %459 = add <4 x i32> %415, %458
  %460 = add <4 x i32> %372, %459
  %461 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 16
  %462 = load i16, i16* %461, align 2, !tbaa !2
  %463 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 17
  %464 = load i16, i16* %463, align 2, !tbaa !2
  %465 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 16
  %466 = load i16, i16* %465, align 2, !tbaa !2
  %467 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 17
  %468 = load i16, i16* %467, align 2, !tbaa !2
  %469 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 16
  %470 = load i16, i16* %469, align 2, !tbaa !2
  %471 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 17
  %472 = load i16, i16* %471, align 2, !tbaa !2
  %473 = insertelement <8 x i16> undef, i16 %470, i64 6
  %474 = insertelement <8 x i16> %473, i16 %466, i64 4
  %475 = insertelement <8 x i16> %474, i16 %180, i64 1
  %476 = insertelement <8 x i16> %475, i16 %472, i64 7
  %477 = insertelement <8 x i16> %476, i16 %178, i64 0
  %478 = insertelement <8 x i16> %477, i16 %468, i64 5
  %479 = insertelement <8 x i16> %478, i16 %464, i64 3
  %480 = insertelement <8 x i16> %479, i16 %462, i64 2
  %481 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %109, <8 x i16> %480) #2
  %482 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 18
  %483 = load i16, i16* %482, align 2, !tbaa !2
  %484 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 19
  %485 = load i16, i16* %484, align 2, !tbaa !2
  %486 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 18
  %487 = load i16, i16* %486, align 2, !tbaa !2
  %488 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 19
  %489 = load i16, i16* %488, align 2, !tbaa !2
  %490 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 18
  %491 = load i16, i16* %490, align 2, !tbaa !2
  %492 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 19
  %493 = load i16, i16* %492, align 2, !tbaa !2
  %494 = insertelement <8 x i16> undef, i16 %184, i64 1
  %495 = insertelement <8 x i16> %494, i16 %487, i64 4
  %496 = insertelement <8 x i16> %495, i16 %489, i64 5
  %497 = insertelement <8 x i16> %496, i16 %485, i64 3
  %498 = insertelement <8 x i16> %497, i16 %491, i64 6
  %499 = insertelement <8 x i16> %498, i16 %493, i64 7
  %500 = insertelement <8 x i16> %499, i16 %182, i64 0
  %501 = insertelement <8 x i16> %500, i16 %483, i64 2
  %502 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %110, <8 x i16> %501) #2
  %503 = add <4 x i32> %481, %502
  %504 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 20
  %505 = load i16, i16* %504, align 2, !tbaa !2
  %506 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 21
  %507 = load i16, i16* %506, align 2, !tbaa !2
  %508 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 20
  %509 = load i16, i16* %508, align 2, !tbaa !2
  %510 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 21
  %511 = load i16, i16* %510, align 2, !tbaa !2
  %512 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 20
  %513 = load i16, i16* %512, align 2, !tbaa !2
  %514 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 21
  %515 = load i16, i16* %514, align 2, !tbaa !2
  %516 = insertelement <8 x i16> undef, i16 %507, i64 3
  %517 = insertelement <8 x i16> %516, i16 %505, i64 2
  %518 = insertelement <8 x i16> %517, i16 %511, i64 5
  %519 = insertelement <8 x i16> %518, i16 %513, i64 6
  %520 = insertelement <8 x i16> %519, i16 %188, i64 1
  %521 = insertelement <8 x i16> %520, i16 %186, i64 0
  %522 = insertelement <8 x i16> %521, i16 %515, i64 7
  %523 = insertelement <8 x i16> %522, i16 %509, i64 4
  %524 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %111, <8 x i16> %523) #2
  %525 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 22
  %526 = load i16, i16* %525, align 2, !tbaa !2
  %527 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 23
  %528 = load i16, i16* %527, align 2, !tbaa !2
  %529 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 22
  %530 = load i16, i16* %529, align 2, !tbaa !2
  %531 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 23
  %532 = load i16, i16* %531, align 2, !tbaa !2
  %533 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 22
  %534 = load i16, i16* %533, align 2, !tbaa !2
  %535 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 23
  %536 = load i16, i16* %535, align 2, !tbaa !2
  %537 = insertelement <8 x i16> undef, i16 %536, i64 7
  %538 = insertelement <8 x i16> %537, i16 %528, i64 3
  %539 = insertelement <8 x i16> %538, i16 %530, i64 4
  %540 = insertelement <8 x i16> %539, i16 %534, i64 6
  %541 = insertelement <8 x i16> %540, i16 %526, i64 2
  %542 = insertelement <8 x i16> %541, i16 %192, i64 1
  %543 = insertelement <8 x i16> %542, i16 %190, i64 0
  %544 = insertelement <8 x i16> %543, i16 %532, i64 5
  %545 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %112, <8 x i16> %544) #2
  %546 = add <4 x i32> %524, %545
  %547 = add <4 x i32> %503, %546
  %548 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 24
  %549 = load i16, i16* %548, align 2, !tbaa !2
  %550 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 25
  %551 = load i16, i16* %550, align 2, !tbaa !2
  %552 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 24
  %553 = load i16, i16* %552, align 2, !tbaa !2
  %554 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 25
  %555 = load i16, i16* %554, align 2, !tbaa !2
  %556 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 24
  %557 = load i16, i16* %556, align 2, !tbaa !2
  %558 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 25
  %559 = load i16, i16* %558, align 2, !tbaa !2
  %560 = insertelement <8 x i16> undef, i16 %555, i64 5
  %561 = insertelement <8 x i16> %560, i16 %196, i64 1
  %562 = insertelement <8 x i16> %561, i16 %557, i64 6
  %563 = insertelement <8 x i16> %562, i16 %549, i64 2
  %564 = insertelement <8 x i16> %563, i16 %194, i64 0
  %565 = insertelement <8 x i16> %564, i16 %553, i64 4
  %566 = insertelement <8 x i16> %565, i16 %551, i64 3
  %567 = insertelement <8 x i16> %566, i16 %559, i64 7
  %568 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %113, <8 x i16> %567) #2
  %569 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 26
  %570 = load i16, i16* %569, align 2, !tbaa !2
  %571 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 27
  %572 = load i16, i16* %571, align 2, !tbaa !2
  %573 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 26
  %574 = load i16, i16* %573, align 2, !tbaa !2
  %575 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 27
  %576 = load i16, i16* %575, align 2, !tbaa !2
  %577 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 26
  %578 = load i16, i16* %577, align 2, !tbaa !2
  %579 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 27
  %580 = load i16, i16* %579, align 2, !tbaa !2
  %581 = insertelement <8 x i16> undef, i16 %572, i64 3
  %582 = insertelement <8 x i16> %581, i16 %578, i64 6
  %583 = insertelement <8 x i16> %582, i16 %576, i64 5
  %584 = insertelement <8 x i16> %583, i16 %200, i64 1
  %585 = insertelement <8 x i16> %584, i16 %580, i64 7
  %586 = insertelement <8 x i16> %585, i16 %574, i64 4
  %587 = insertelement <8 x i16> %586, i16 %570, i64 2
  %588 = insertelement <8 x i16> %587, i16 %198, i64 0
  %589 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %114, <8 x i16> %588) #2
  %590 = add <4 x i32> %568, %589
  %591 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 28
  %592 = load i16, i16* %591, align 2, !tbaa !2
  %593 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 29
  %594 = load i16, i16* %593, align 2, !tbaa !2
  %595 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 28
  %596 = load i16, i16* %595, align 2, !tbaa !2
  %597 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 29
  %598 = load i16, i16* %597, align 2, !tbaa !2
  %599 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 28
  %600 = load i16, i16* %599, align 2, !tbaa !2
  %601 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 29
  %602 = load i16, i16* %601, align 2, !tbaa !2
  %603 = insertelement <8 x i16> undef, i16 %598, i64 5
  %604 = insertelement <8 x i16> %603, i16 %594, i64 3
  %605 = insertelement <8 x i16> %604, i16 %596, i64 4
  %606 = insertelement <8 x i16> %605, i16 %602, i64 7
  %607 = insertelement <8 x i16> %606, i16 %202, i64 0
  %608 = insertelement <8 x i16> %607, i16 %204, i64 1
  %609 = insertelement <8 x i16> %608, i16 %592, i64 2
  %610 = insertelement <8 x i16> %609, i16 %600, i64 6
  %611 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %115, <8 x i16> %610) #2
  %612 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 30
  %613 = load i16, i16* %612, align 2, !tbaa !2
  %614 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 31
  %615 = load i16, i16* %614, align 2, !tbaa !2
  %616 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 30
  %617 = load i16, i16* %616, align 2, !tbaa !2
  %618 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 31
  %619 = load i16, i16* %618, align 2, !tbaa !2
  %620 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 30
  %621 = load i16, i16* %620, align 2, !tbaa !2
  %622 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 31
  %623 = load i16, i16* %622, align 2, !tbaa !2
  %624 = insertelement <8 x i16> undef, i16 %623, i64 7
  %625 = insertelement <8 x i16> %624, i16 %613, i64 2
  %626 = insertelement <8 x i16> %625, i16 %208, i64 1
  %627 = insertelement <8 x i16> %626, i16 %617, i64 4
  %628 = insertelement <8 x i16> %627, i16 %206, i64 0
  %629 = insertelement <8 x i16> %628, i16 %621, i64 6
  %630 = insertelement <8 x i16> %629, i16 %615, i64 3
  %631 = insertelement <8 x i16> %630, i16 %619, i64 5
  %632 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %116, <8 x i16> %631) #2
  %633 = add <4 x i32> %611, %632
  %634 = add <4 x i32> %590, %633
  %635 = add <4 x i32> %547, %634
  %636 = add <4 x i32> %460, %635
  %637 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 32
  %638 = load i16, i16* %637, align 2, !tbaa !2
  %639 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 33
  %640 = load i16, i16* %639, align 2, !tbaa !2
  %641 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 32
  %642 = load i16, i16* %641, align 2, !tbaa !2
  %643 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 33
  %644 = load i16, i16* %643, align 2, !tbaa !2
  %645 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 32
  %646 = load i16, i16* %645, align 2, !tbaa !2
  %647 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 33
  %648 = load i16, i16* %647, align 2, !tbaa !2
  %649 = insertelement <8 x i16> undef, i16 %648, i64 7
  %650 = insertelement <8 x i16> %649, i16 %638, i64 2
  %651 = insertelement <8 x i16> %650, i16 %642, i64 4
  %652 = insertelement <8 x i16> %651, i16 %212, i64 1
  %653 = insertelement <8 x i16> %652, i16 %646, i64 6
  %654 = insertelement <8 x i16> %653, i16 %640, i64 3
  %655 = insertelement <8 x i16> %654, i16 %644, i64 5
  %656 = insertelement <8 x i16> %655, i16 %210, i64 0
  %657 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %117, <8 x i16> %656) #2
  %658 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 34
  %659 = load i16, i16* %658, align 2, !tbaa !2
  %660 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 35
  %661 = load i16, i16* %660, align 2, !tbaa !2
  %662 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 34
  %663 = load i16, i16* %662, align 2, !tbaa !2
  %664 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 35
  %665 = load i16, i16* %664, align 2, !tbaa !2
  %666 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 34
  %667 = load i16, i16* %666, align 2, !tbaa !2
  %668 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 35
  %669 = load i16, i16* %668, align 2, !tbaa !2
  %670 = insertelement <8 x i16> undef, i16 %214, i64 0
  %671 = insertelement <8 x i16> %670, i16 %669, i64 7
  %672 = insertelement <8 x i16> %671, i16 %663, i64 4
  %673 = insertelement <8 x i16> %672, i16 %661, i64 3
  %674 = insertelement <8 x i16> %673, i16 %216, i64 1
  %675 = insertelement <8 x i16> %674, i16 %667, i64 6
  %676 = insertelement <8 x i16> %675, i16 %665, i64 5
  %677 = insertelement <8 x i16> %676, i16 %659, i64 2
  %678 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %118, <8 x i16> %677) #2
  %679 = add <4 x i32> %657, %678
  %680 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 36
  %681 = load i16, i16* %680, align 2, !tbaa !2
  %682 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 37
  %683 = load i16, i16* %682, align 2, !tbaa !2
  %684 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 36
  %685 = load i16, i16* %684, align 2, !tbaa !2
  %686 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 37
  %687 = load i16, i16* %686, align 2, !tbaa !2
  %688 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 36
  %689 = load i16, i16* %688, align 2, !tbaa !2
  %690 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 37
  %691 = load i16, i16* %690, align 2, !tbaa !2
  %692 = insertelement <8 x i16> undef, i16 %681, i64 2
  %693 = insertelement <8 x i16> %692, i16 %687, i64 5
  %694 = insertelement <8 x i16> %693, i16 %691, i64 7
  %695 = insertelement <8 x i16> %694, i16 %218, i64 0
  %696 = insertelement <8 x i16> %695, i16 %683, i64 3
  %697 = insertelement <8 x i16> %696, i16 %685, i64 4
  %698 = insertelement <8 x i16> %697, i16 %689, i64 6
  %699 = insertelement <8 x i16> %698, i16 %220, i64 1
  %700 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %119, <8 x i16> %699) #2
  %701 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 38
  %702 = load i16, i16* %701, align 2, !tbaa !2
  %703 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 39
  %704 = load i16, i16* %703, align 2, !tbaa !2
  %705 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 38
  %706 = load i16, i16* %705, align 2, !tbaa !2
  %707 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 39
  %708 = load i16, i16* %707, align 2, !tbaa !2
  %709 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 38
  %710 = load i16, i16* %709, align 2, !tbaa !2
  %711 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 39
  %712 = load i16, i16* %711, align 2, !tbaa !2
  %713 = insertelement <8 x i16> undef, i16 %708, i64 5
  %714 = insertelement <8 x i16> %713, i16 %224, i64 1
  %715 = insertelement <8 x i16> %714, i16 %704, i64 3
  %716 = insertelement <8 x i16> %715, i16 %222, i64 0
  %717 = insertelement <8 x i16> %716, i16 %712, i64 7
  %718 = insertelement <8 x i16> %717, i16 %702, i64 2
  %719 = insertelement <8 x i16> %718, i16 %710, i64 6
  %720 = insertelement <8 x i16> %719, i16 %706, i64 4
  %721 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %120, <8 x i16> %720) #2
  %722 = add <4 x i32> %700, %721
  %723 = add <4 x i32> %679, %722
  %724 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 40
  %725 = load i16, i16* %724, align 2, !tbaa !2
  %726 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 41
  %727 = load i16, i16* %726, align 2, !tbaa !2
  %728 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 40
  %729 = load i16, i16* %728, align 2, !tbaa !2
  %730 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 41
  %731 = load i16, i16* %730, align 2, !tbaa !2
  %732 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 40
  %733 = load i16, i16* %732, align 2, !tbaa !2
  %734 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 41
  %735 = load i16, i16* %734, align 2, !tbaa !2
  %736 = insertelement <8 x i16> undef, i16 %733, i64 6
  %737 = insertelement <8 x i16> %736, i16 %727, i64 3
  %738 = insertelement <8 x i16> %737, i16 %731, i64 5
  %739 = insertelement <8 x i16> %738, i16 %226, i64 0
  %740 = insertelement <8 x i16> %739, i16 %725, i64 2
  %741 = insertelement <8 x i16> %740, i16 %735, i64 7
  %742 = insertelement <8 x i16> %741, i16 %228, i64 1
  %743 = insertelement <8 x i16> %742, i16 %729, i64 4
  %744 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %121, <8 x i16> %743) #2
  %745 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 42
  %746 = load i16, i16* %745, align 2, !tbaa !2
  %747 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 43
  %748 = load i16, i16* %747, align 2, !tbaa !2
  %749 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 42
  %750 = load i16, i16* %749, align 2, !tbaa !2
  %751 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 43
  %752 = load i16, i16* %751, align 2, !tbaa !2
  %753 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 42
  %754 = load i16, i16* %753, align 2, !tbaa !2
  %755 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 43
  %756 = load i16, i16* %755, align 2, !tbaa !2
  %757 = insertelement <8 x i16> undef, i16 %230, i64 0
  %758 = insertelement <8 x i16> %757, i16 %750, i64 4
  %759 = insertelement <8 x i16> %758, i16 %754, i64 6
  %760 = insertelement <8 x i16> %759, i16 %746, i64 2
  %761 = insertelement <8 x i16> %760, i16 %752, i64 5
  %762 = insertelement <8 x i16> %761, i16 %232, i64 1
  %763 = insertelement <8 x i16> %762, i16 %756, i64 7
  %764 = insertelement <8 x i16> %763, i16 %748, i64 3
  %765 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %122, <8 x i16> %764) #2
  %766 = add <4 x i32> %744, %765
  %767 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 44
  %768 = load i16, i16* %767, align 2, !tbaa !2
  %769 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 45
  %770 = load i16, i16* %769, align 2, !tbaa !2
  %771 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 44
  %772 = load i16, i16* %771, align 2, !tbaa !2
  %773 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 45
  %774 = load i16, i16* %773, align 2, !tbaa !2
  %775 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 44
  %776 = load i16, i16* %775, align 2, !tbaa !2
  %777 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 45
  %778 = load i16, i16* %777, align 2, !tbaa !2
  %779 = insertelement <8 x i16> undef, i16 %772, i64 4
  %780 = insertelement <8 x i16> %779, i16 %234, i64 0
  %781 = insertelement <8 x i16> %780, i16 %768, i64 2
  %782 = insertelement <8 x i16> %781, i16 %776, i64 6
  %783 = insertelement <8 x i16> %782, i16 %774, i64 5
  %784 = insertelement <8 x i16> %783, i16 %770, i64 3
  %785 = insertelement <8 x i16> %784, i16 %778, i64 7
  %786 = insertelement <8 x i16> %785, i16 %236, i64 1
  %787 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %123, <8 x i16> %786) #2
  %788 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 46
  %789 = load i16, i16* %788, align 2, !tbaa !2
  %790 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 47
  %791 = load i16, i16* %790, align 2, !tbaa !2
  %792 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 46
  %793 = load i16, i16* %792, align 2, !tbaa !2
  %794 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 47
  %795 = load i16, i16* %794, align 2, !tbaa !2
  %796 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 46
  %797 = load i16, i16* %796, align 2, !tbaa !2
  %798 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 47
  %799 = load i16, i16* %798, align 2, !tbaa !2
  %800 = insertelement <8 x i16> undef, i16 %789, i64 2
  %801 = insertelement <8 x i16> %800, i16 %240, i64 1
  %802 = insertelement <8 x i16> %801, i16 %797, i64 6
  %803 = insertelement <8 x i16> %802, i16 %238, i64 0
  %804 = insertelement <8 x i16> %803, i16 %791, i64 3
  %805 = insertelement <8 x i16> %804, i16 %799, i64 7
  %806 = insertelement <8 x i16> %805, i16 %795, i64 5
  %807 = insertelement <8 x i16> %806, i16 %793, i64 4
  %808 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %124, <8 x i16> %807) #2
  %809 = add <4 x i32> %787, %808
  %810 = add <4 x i32> %766, %809
  %811 = add <4 x i32> %723, %810
  %812 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 48
  %813 = load i16, i16* %812, align 2, !tbaa !2
  %814 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 49
  %815 = load i16, i16* %814, align 2, !tbaa !2
  %816 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 48
  %817 = load i16, i16* %816, align 2, !tbaa !2
  %818 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 49
  %819 = load i16, i16* %818, align 2, !tbaa !2
  %820 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 48
  %821 = load i16, i16* %820, align 2, !tbaa !2
  %822 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 49
  %823 = load i16, i16* %822, align 2, !tbaa !2
  %824 = insertelement <8 x i16> undef, i16 %815, i64 3
  %825 = insertelement <8 x i16> %824, i16 %823, i64 7
  %826 = insertelement <8 x i16> %825, i16 %817, i64 4
  %827 = insertelement <8 x i16> %826, i16 %821, i64 6
  %828 = insertelement <8 x i16> %827, i16 %242, i64 0
  %829 = insertelement <8 x i16> %828, i16 %813, i64 2
  %830 = insertelement <8 x i16> %829, i16 %244, i64 1
  %831 = insertelement <8 x i16> %830, i16 %819, i64 5
  %832 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %125, <8 x i16> %831) #2
  %833 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 50
  %834 = load i16, i16* %833, align 2, !tbaa !2
  %835 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 51
  %836 = load i16, i16* %835, align 2, !tbaa !2
  %837 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 50
  %838 = load i16, i16* %837, align 2, !tbaa !2
  %839 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 51
  %840 = load i16, i16* %839, align 2, !tbaa !2
  %841 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 50
  %842 = load i16, i16* %841, align 2, !tbaa !2
  %843 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 51
  %844 = load i16, i16* %843, align 2, !tbaa !2
  %845 = insertelement <8 x i16> undef, i16 %844, i64 7
  %846 = insertelement <8 x i16> %845, i16 %838, i64 4
  %847 = insertelement <8 x i16> %846, i16 %246, i64 0
  %848 = insertelement <8 x i16> %847, i16 %834, i64 2
  %849 = insertelement <8 x i16> %848, i16 %248, i64 1
  %850 = insertelement <8 x i16> %849, i16 %842, i64 6
  %851 = insertelement <8 x i16> %850, i16 %836, i64 3
  %852 = insertelement <8 x i16> %851, i16 %840, i64 5
  %853 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %126, <8 x i16> %852) #2
  %854 = add <4 x i32> %832, %853
  %855 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 52
  %856 = load i16, i16* %855, align 2, !tbaa !2
  %857 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 53
  %858 = load i16, i16* %857, align 2, !tbaa !2
  %859 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 52
  %860 = load i16, i16* %859, align 2, !tbaa !2
  %861 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 53
  %862 = load i16, i16* %861, align 2, !tbaa !2
  %863 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 52
  %864 = load i16, i16* %863, align 2, !tbaa !2
  %865 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 53
  %866 = load i16, i16* %865, align 2, !tbaa !2
  %867 = insertelement <8 x i16> undef, i16 %250, i64 0
  %868 = insertelement <8 x i16> %867, i16 %862, i64 5
  %869 = insertelement <8 x i16> %868, i16 %860, i64 4
  %870 = insertelement <8 x i16> %869, i16 %856, i64 2
  %871 = insertelement <8 x i16> %870, i16 %864, i64 6
  %872 = insertelement <8 x i16> %871, i16 %866, i64 7
  %873 = insertelement <8 x i16> %872, i16 %252, i64 1
  %874 = insertelement <8 x i16> %873, i16 %858, i64 3
  %875 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %127, <8 x i16> %874) #2
  %876 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 54
  %877 = load i16, i16* %876, align 2, !tbaa !2
  %878 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 55
  %879 = load i16, i16* %878, align 2, !tbaa !2
  %880 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 54
  %881 = load i16, i16* %880, align 2, !tbaa !2
  %882 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 55
  %883 = load i16, i16* %882, align 2, !tbaa !2
  %884 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 54
  %885 = load i16, i16* %884, align 2, !tbaa !2
  %886 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 55
  %887 = load i16, i16* %886, align 2, !tbaa !2
  %888 = insertelement <8 x i16> undef, i16 %256, i64 1
  %889 = insertelement <8 x i16> %888, i16 %879, i64 3
  %890 = insertelement <8 x i16> %889, i16 %885, i64 6
  %891 = insertelement <8 x i16> %890, i16 %883, i64 5
  %892 = insertelement <8 x i16> %891, i16 %254, i64 0
  %893 = insertelement <8 x i16> %892, i16 %877, i64 2
  %894 = insertelement <8 x i16> %893, i16 %881, i64 4
  %895 = insertelement <8 x i16> %894, i16 %887, i64 7
  %896 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %128, <8 x i16> %895) #2
  %897 = add <4 x i32> %875, %896
  %898 = add <4 x i32> %854, %897
  %899 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 56
  %900 = load i16, i16* %899, align 2, !tbaa !2
  %901 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 57
  %902 = load i16, i16* %901, align 2, !tbaa !2
  %903 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 56
  %904 = load i16, i16* %903, align 2, !tbaa !2
  %905 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 57
  %906 = load i16, i16* %905, align 2, !tbaa !2
  %907 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 56
  %908 = load i16, i16* %907, align 2, !tbaa !2
  %909 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 57
  %910 = load i16, i16* %909, align 2, !tbaa !2
  %911 = insertelement <8 x i16> undef, i16 %902, i64 3
  %912 = insertelement <8 x i16> %911, i16 %906, i64 5
  %913 = insertelement <8 x i16> %912, i16 %910, i64 7
  %914 = insertelement <8 x i16> %913, i16 %900, i64 2
  %915 = insertelement <8 x i16> %914, i16 %260, i64 1
  %916 = insertelement <8 x i16> %915, i16 %908, i64 6
  %917 = insertelement <8 x i16> %916, i16 %258, i64 0
  %918 = insertelement <8 x i16> %917, i16 %904, i64 4
  %919 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %129, <8 x i16> %918) #2
  %920 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 58
  %921 = load i16, i16* %920, align 2, !tbaa !2
  %922 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 59
  %923 = load i16, i16* %922, align 2, !tbaa !2
  %924 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 58
  %925 = load i16, i16* %924, align 2, !tbaa !2
  %926 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 59
  %927 = load i16, i16* %926, align 2, !tbaa !2
  %928 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 58
  %929 = load i16, i16* %928, align 2, !tbaa !2
  %930 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 59
  %931 = load i16, i16* %930, align 2, !tbaa !2
  %932 = insertelement <8 x i16> undef, i16 %927, i64 5
  %933 = insertelement <8 x i16> %932, i16 %921, i64 2
  %934 = insertelement <8 x i16> %933, i16 %931, i64 7
  %935 = insertelement <8 x i16> %934, i16 %262, i64 0
  %936 = insertelement <8 x i16> %935, i16 %264, i64 1
  %937 = insertelement <8 x i16> %936, i16 %923, i64 3
  %938 = insertelement <8 x i16> %937, i16 %929, i64 6
  %939 = insertelement <8 x i16> %938, i16 %925, i64 4
  %940 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %130, <8 x i16> %939) #2
  %941 = add <4 x i32> %919, %940
  %942 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 60
  %943 = load i16, i16* %942, align 2, !tbaa !2
  %944 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 61
  %945 = load i16, i16* %944, align 2, !tbaa !2
  %946 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 60
  %947 = load i16, i16* %946, align 2, !tbaa !2
  %948 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 61
  %949 = load i16, i16* %948, align 2, !tbaa !2
  %950 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 60
  %951 = load i16, i16* %950, align 2, !tbaa !2
  %952 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 61
  %953 = load i16, i16* %952, align 2, !tbaa !2
  %954 = insertelement <8 x i16> undef, i16 %949, i64 5
  %955 = insertelement <8 x i16> %954, i16 %951, i64 6
  %956 = insertelement <8 x i16> %955, i16 %268, i64 1
  %957 = insertelement <8 x i16> %956, i16 %947, i64 4
  %958 = insertelement <8 x i16> %957, i16 %953, i64 7
  %959 = insertelement <8 x i16> %958, i16 %943, i64 2
  %960 = insertelement <8 x i16> %959, i16 %266, i64 0
  %961 = insertelement <8 x i16> %960, i16 %945, i64 3
  %962 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %131, <8 x i16> %961) #2
  %963 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 62
  %964 = load i16, i16* %963, align 2, !tbaa !2
  %965 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %136, i64 63
  %966 = load i16, i16* %965, align 2, !tbaa !2
  %967 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 62
  %968 = load i16, i16* %967, align 2, !tbaa !2
  %969 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %137, i64 63
  %970 = load i16, i16* %969, align 2, !tbaa !2
  %971 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 62
  %972 = load i16, i16* %971, align 2, !tbaa !2
  %973 = getelementptr inbounds [64 x i16], [64 x i16]* %2, i64 %138, i64 63
  %974 = load i16, i16* %973, align 2, !tbaa !2
  %975 = insertelement <8 x i16> undef, i16 %966, i64 3
  %976 = insertelement <8 x i16> %975, i16 %970, i64 5
  %977 = insertelement <8 x i16> %976, i16 %272, i64 1
  %978 = insertelement <8 x i16> %977, i16 %972, i64 6
  %979 = insertelement <8 x i16> %978, i16 %270, i64 0
  %980 = insertelement <8 x i16> %979, i16 %964, i64 2
  %981 = insertelement <8 x i16> %980, i16 %968, i64 4
  %982 = insertelement <8 x i16> %981, i16 %974, i64 7
  %983 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %132, <8 x i16> %982) #2
  %984 = add <4 x i32> %962, %983
  %985 = add <4 x i32> %941, %984
  %986 = add <4 x i32> %898, %985
  %987 = add <4 x i32> %811, %986
  %988 = add <4 x i32> %636, %987
  store <4 x i32> %988, <4 x i32>* %139, align 4, !tbaa !6
  %989 = add nuw nsw i64 %134, 4
  %990 = icmp eq i64 %989, 16
  br i1 %990, label %991, label %133

991:                                              ; preds = %133
  ret void
}

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16>, <8 x i16>) #1

attributes #0 = { nofree norecurse nounwind uwtable "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)"}
!2 = !{!3, !3, i64 0}
!3 = !{!"short", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
!6 = !{!7, !7, i64 0}
!7 = !{!"int", !4, i64 0}
