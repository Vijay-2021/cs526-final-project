; ModuleID = "/tmp/gaussian7x7_hvx_depth3.ll"
target triple = "unknown-unknown-unknown"
target datalayout = ""

define <64 x i32> @hydride.node.gaussian7x7_hvx_depth3.0(<128 x i8> %arg, <128 x i8> %arg.1, <128 x i8> %arg.2, <128 x i8> %arg.3, <128 x i8> %arg.4, <128 x i8> %arg.5, <128 x i8> %arg.6, <64 x i16> %arg.7, <128 x i8> %arg.8, <128 x i8> %arg.9, <128 x i8> %arg.10, <128 x i8> %arg.11, <128 x i8> %arg.12, <128 x i8> %arg.13, <64 x i16> %arg.14, <64 x i16> %arg.15, <64 x i16> %arg.16, <128 x i8> %arg.17, <128 x i8> %arg.18, <128 x i8> %arg.19, <128 x i8> %arg.20, <128 x i8> %arg.21, <128 x i8> %arg.22, <128 x i8> %arg.23, <128 x i8> %arg.24, <128 x i8> %arg.25, <128 x i8> %arg.26, <128 x i8> %arg.27, <64 x i16> %arg.28, <128 x i8> %arg.29, <128 x i8> %arg.30, <128 x i8> %arg.31, <128 x i8> %arg.32, <128 x i8> %arg.33, <128 x i8> %arg.34, <128 x i8> %arg.35, <128 x i8> %arg.36, <128 x i8> %arg.37, <128 x i8> %arg.38, <128 x i8> %arg.39, <64 x i32> %arg.40, <64 x i32> %arg.41, <128 x i8> %arg.42, <128 x i8> %arg.43, <128 x i8> %arg.44, <128 x i8> %arg.45, <128 x i8> %arg.46, <64 x i32> %arg.47, <64 x i32> %arg.48)
{
entry:
  %0 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.46, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %1 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %0, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %2 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %1, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %3 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %2, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %4 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %arg.48, <64 x i32> %3, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %5 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.44, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %6 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %5, <128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %7 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %6, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %8 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %7, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %9 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.43, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %10 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %9, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %11 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %12 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %11, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %13 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.42, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %14 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %13, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %15 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %14, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %16 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %15, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %17 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.38, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %18 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %17, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %19 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %20 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %19, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %21 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.37, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %22 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, <128 x i8> %21, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %23 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %22, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %24 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %23, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %25 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.35, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %26 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %25, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %27 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %28 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %27, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %29 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.10, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %30 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, <128 x i8> %29, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %31 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %30, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %32 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %31, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %33 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.9, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %34 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %33, <128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %35 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %34, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %36 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %35, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %37 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.8, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %38 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %37, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %39 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %38, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %40 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %39, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %41 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %36, <64 x i32> %40, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %42 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.1(<64 x i16> <i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300>, <64 x i16> %arg.7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 1, i32 32, i32 1024, i32 1, i32 1, i32 16, i32 2, i32 0)
  %43 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %41, <64 x i32> %42, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %44 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %32, <64 x i32> %43, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %45 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.11, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %46 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %45, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %47 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %46, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %48 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %47, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %49 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %44, <64 x i32> %48, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %50 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.33, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %51 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %50, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %52 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %51, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %53 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %52, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %54 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.32, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %55 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %54, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %56 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %55, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %57 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %56, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %58 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.31, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %59 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %58, <128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %60 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %59, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %61 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %60, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %62 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.30, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %63 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %62, <128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %64 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %63, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %65 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %64, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %66 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_acc_128B_dsl(<64 x i32> %65, <64 x i16> %arg.28, <32 x i32> <i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100>, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 -1, i32 1, i32 1, i32 32, i32 -1, i32 1, i32 1, i32 16, i32 1024, i32 2, i32 0)
  %67 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.29, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %68 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %67, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %69 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %68, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %70 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %69, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %71 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %66, <64 x i32> %70, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %72 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %61, <64 x i32> %71, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %73 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %57, <64 x i32> %72, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %74 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %53, <64 x i32> %73, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %75 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.34, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %76 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %75, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %77 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %76, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %78 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %77, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %79 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %74, <64 x i32> %78, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %80 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %49, <64 x i32> %79, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %81 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.12, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %82 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %81, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %83 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %82, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %84 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %83, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %85 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.26, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %86 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %85, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %87 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %86, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %88 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %87, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %89 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.25, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %90 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %89, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %91 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %90, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %92 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %91, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %93 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.23, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %94 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %93, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %95 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %94, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %96 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %95, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %97 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.22, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %98 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %97, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %99 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %98, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %100 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %99, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %101 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.21, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %102 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %101, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %103 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %102, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %104 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %103, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %105 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %100, <64 x i32> %104, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %106 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %96, <64 x i32> %105, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %107 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.24, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %108 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %107, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %109 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %108, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %110 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %109, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %111 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %106, <64 x i32> %110, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %112 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %92, <64 x i32> %111, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %113 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %88, <64 x i32> %112, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %114 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.27, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %115 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %114, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %116 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %115, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %117 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %116, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %118 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %113, <64 x i32> %117, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %119 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %84, <64 x i32> %118, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %120 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %80, <64 x i32> %119, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %121 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.18, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %122 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %121, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %123 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %122, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %124 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %123, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %125 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.17, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %126 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %125, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %127 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %126, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %128 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %127, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %129 = call <64 x i16> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl.1(<64 x i16> %arg.15, i32 1024, i32 32, i32 0, i32 32, i32 16, i32 32, i32 2, i32 0)
  %130 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_acc_128B_dsl(<64 x i32> %128, <64 x i16> %129, <32 x i32> <i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800>, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 -1, i32 1, i32 1, i32 32, i32 -1, i32 1, i32 1, i32 16, i32 1024, i32 2, i32 0)
  %131 = call <64 x i16> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl.1(<64 x i16> %arg.16, i32 1024, i32 32, i32 0, i32 32, i32 16, i32 32, i32 2, i32 0)
  %132 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.1(<64 x i16> %131, <64 x i16> <i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300>, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 1, i32 32, i32 1024, i32 1, i32 1, i32 16, i32 2, i32 0)
  %133 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %130, <64 x i32> %132, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %134 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.1(<64 x i16> <i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300>, <64 x i16> %arg.14, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 1, i32 32, i32 1024, i32 1, i32 1, i32 16, i32 2, i32 0)
  %135 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %133, <64 x i32> %134, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %136 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %124, <64 x i32> %135, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %137 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.19, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %138 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %137, <128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %139 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %138, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %140 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %139, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %141 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %136, <64 x i32> %140, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %142 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.20, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %143 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, <128 x i8> %142, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %144 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %143, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %145 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %144, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %146 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %141, <64 x i32> %145, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %147 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.13, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %148 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %147, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %149 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %148, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %150 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %149, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %151 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %146, <64 x i32> %150, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %152 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %120, <64 x i32> %151, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %153 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.5, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %154 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %153, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %155 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %154, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %156 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %155, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %157 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.4, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %158 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %157, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %159 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %158, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %160 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %159, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %161 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.2, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %162 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %161, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %163 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %162, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %164 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %163, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %165 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.1, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %166 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %165, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %167 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %166, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %168 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %167, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %169 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %170 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %169, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %171 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %170, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %172 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %171, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %173 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %168, <64 x i32> %172, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %174 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %164, <64 x i32> %173, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %175 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.3, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %176 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %175, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %177 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %176, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %178 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %177, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %179 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %174, <64 x i32> %178, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %180 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %160, <64 x i32> %179, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %181 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %156, <64 x i32> %180, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %182 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.6, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %183 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %182, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %184 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %183, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %185 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %184, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %186 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %181, <64 x i32> %185, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %187 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %152, <64 x i32> %186, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %188 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %28, <64 x i32> %187, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %189 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.36, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %190 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %189, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %191 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %190, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %192 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %191, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %193 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %188, <64 x i32> %192, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %194 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %24, <64 x i32> %193, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %195 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %20, <64 x i32> %194, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %196 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.39, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %197 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %196, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %198 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %197, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %199 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %198, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %200 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %195, <64 x i32> %199, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %201 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %arg.41, <64 x i32> %200, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %202 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %arg.40, <64 x i32> %201, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %203 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %16, <64 x i32> %202, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %204 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %12, <64 x i32> %203, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %205 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %8, <64 x i32> %204, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %206 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.45, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %207 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %206, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %208 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %207, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %209 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %208, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %210 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %205, <64 x i32> %209, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %211 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %210, <64 x i32> %arg.47, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %212 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %4, <64 x i32> %211, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %213 = call <32 x i32> @llvm.hydride.hexagon_V6_vassign_128B_dsl(<64 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %214 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> <i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12>, <1 x i32> <i32 0>, <32 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %215 = call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl(<32 x i32> %214, <32 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %216 = call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl(<32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>, <32 x i32> %215, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %217 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.46, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %218 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %217, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %219 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %218, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %220 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %219, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %221 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %arg.48, <64 x i32> %220, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %222 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.44, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %223 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %222, <128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %224 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %223, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %225 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %224, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %226 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.43, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %227 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %226, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %228 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %227, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %229 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %228, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %230 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.42, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %231 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %230, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %232 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %231, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %233 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %232, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %234 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.38, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %235 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %234, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %236 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %235, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %237 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %236, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %238 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.37, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %239 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, <128 x i8> %238, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %240 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %239, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %241 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %240, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %242 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.35, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %243 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %242, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %244 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %243, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %245 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %244, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %246 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.10, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %247 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, <128 x i8> %246, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %248 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %247, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %249 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %248, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %250 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.9, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %251 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %250, <128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %252 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %251, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %253 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %252, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %254 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.8, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %255 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %254, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %256 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %255, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %257 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %256, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %258 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %253, <64 x i32> %257, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %259 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.1(<64 x i16> <i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300>, <64 x i16> %arg.7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 1, i32 32, i32 1024, i32 1, i32 1, i32 16, i32 2, i32 0)
  %260 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %258, <64 x i32> %259, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %261 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %249, <64 x i32> %260, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %262 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.11, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %263 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %262, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %264 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %263, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %265 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %264, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %266 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %261, <64 x i32> %265, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %267 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.33, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %268 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %267, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %269 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %268, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %270 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %269, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %271 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.32, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %272 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %271, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %273 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %272, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %274 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %273, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %275 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.31, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %276 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %275, <128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %277 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %276, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %278 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %277, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %279 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.30, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %280 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %279, <128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %281 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %280, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %282 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %281, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %283 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_acc_128B_dsl(<64 x i32> %282, <64 x i16> %arg.28, <32 x i32> <i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100>, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 -1, i32 1, i32 1, i32 32, i32 -1, i32 1, i32 1, i32 16, i32 1024, i32 2, i32 0)
  %284 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.29, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %285 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %284, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %286 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %285, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %287 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %286, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %288 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %283, <64 x i32> %287, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %289 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %278, <64 x i32> %288, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %290 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %274, <64 x i32> %289, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %291 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %270, <64 x i32> %290, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %292 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.34, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %293 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %292, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %294 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %293, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %295 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %294, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %296 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %291, <64 x i32> %295, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %297 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %266, <64 x i32> %296, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %298 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.12, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %299 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %298, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %300 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %299, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %301 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %300, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %302 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.26, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %303 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %302, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %304 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %303, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %305 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %304, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %306 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.25, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %307 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %306, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %308 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %307, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %309 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %308, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %310 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.23, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %311 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %310, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %312 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %311, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %313 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %312, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %314 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.22, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %315 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %314, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %316 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %315, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %317 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %316, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %318 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.21, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %319 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %318, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %320 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %319, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %321 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %320, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %322 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %317, <64 x i32> %321, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %323 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %313, <64 x i32> %322, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %324 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.24, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %325 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %324, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %326 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %325, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %327 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %326, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %328 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %323, <64 x i32> %327, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %329 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %309, <64 x i32> %328, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %330 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %305, <64 x i32> %329, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %331 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.27, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %332 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %331, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %333 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %332, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %334 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %333, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %335 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %330, <64 x i32> %334, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %336 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %301, <64 x i32> %335, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %337 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %297, <64 x i32> %336, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %338 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.18, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %339 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %338, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %340 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %339, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %341 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %340, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %342 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.17, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %343 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %342, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %344 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %343, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %345 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %344, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %346 = call <64 x i16> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl.1(<64 x i16> %arg.15, i32 1024, i32 32, i32 0, i32 32, i32 16, i32 32, i32 2, i32 0)
  %347 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_acc_128B_dsl(<64 x i32> %345, <64 x i16> %346, <32 x i32> <i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800>, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 -1, i32 1, i32 1, i32 32, i32 -1, i32 1, i32 1, i32 16, i32 1024, i32 2, i32 0)
  %348 = call <64 x i16> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl.1(<64 x i16> %arg.16, i32 1024, i32 32, i32 0, i32 32, i32 16, i32 32, i32 2, i32 0)
  %349 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.1(<64 x i16> %348, <64 x i16> <i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300>, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 1, i32 32, i32 1024, i32 1, i32 1, i32 16, i32 2, i32 0)
  %350 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %347, <64 x i32> %349, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %351 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.1(<64 x i16> <i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300>, <64 x i16> %arg.14, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 1, i32 32, i32 1024, i32 1, i32 1, i32 16, i32 2, i32 0)
  %352 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %350, <64 x i32> %351, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %353 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %341, <64 x i32> %352, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %354 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.19, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %355 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %354, <128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %356 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %355, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %357 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %356, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %358 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %353, <64 x i32> %357, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %359 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.20, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %360 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, <128 x i8> %359, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %361 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %360, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %362 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %361, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %363 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %358, <64 x i32> %362, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %364 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.13, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %365 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %364, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %366 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %365, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %367 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %366, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %368 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %363, <64 x i32> %367, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %369 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %337, <64 x i32> %368, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %370 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.5, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %371 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %370, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %372 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %371, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %373 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %372, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %374 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.4, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %375 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %374, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %376 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %375, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %377 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %376, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %378 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.2, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %379 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %378, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %380 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %379, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %381 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %380, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %382 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.1, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %383 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %382, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %384 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %383, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %385 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %384, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %386 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %387 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %386, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %388 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %387, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %389 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %388, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %390 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %385, <64 x i32> %389, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %391 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %381, <64 x i32> %390, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %392 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.3, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %393 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %392, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %394 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %393, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %395 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %394, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %396 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %391, <64 x i32> %395, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %397 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %377, <64 x i32> %396, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %398 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %373, <64 x i32> %397, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %399 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.6, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %400 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %399, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %401 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %400, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %402 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %401, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %403 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %398, <64 x i32> %402, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %404 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %369, <64 x i32> %403, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %405 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %245, <64 x i32> %404, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %406 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.36, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %407 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %406, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %408 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %407, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %409 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %408, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %410 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %405, <64 x i32> %409, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %411 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %241, <64 x i32> %410, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %412 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %237, <64 x i32> %411, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %413 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.39, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %414 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %413, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %415 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %414, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %416 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %415, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %417 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %412, <64 x i32> %416, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %418 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %arg.41, <64 x i32> %417, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %419 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %arg.40, <64 x i32> %418, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %420 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %233, <64 x i32> %419, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %421 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %229, <64 x i32> %420, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %422 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %225, <64 x i32> %421, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %423 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.45, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %424 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %423, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %425 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %424, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %426 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %425, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %427 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %422, <64 x i32> %426, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %428 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %427, <64 x i32> %arg.47, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %429 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %221, <64 x i32> %428, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %430 = call <32 x i32> @llvm.hydride.hexagon_V6_lo_128B_dsl.1(<64 x i32> %429, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %431 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> <i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12>, <1 x i32> <i32 0>, <32 x i32> %430, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %432 = call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl(<32 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>, <32 x i32> %431, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %433 = call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl(<32 x i32> %432, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %434 = call <64 x i32> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<32 x i32> %216, <32 x i32> %433, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  ret <64 x i32> %434
}

declare <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg, i32 %arg.1, i32 %arg.2, i32 %arg.3, i32 %arg.4, i32 %arg.5, i32 %arg.6, i32 %arg.7, i32 %arg.8)

declare <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %arg, <128 x i8> %arg.1, i32 %arg.2, i32 %arg.3, i32 %arg.4, i32 %arg.5, i32 %arg.6, i32 %arg.7, i32 %arg.8, i32 %arg.9, i32 %arg.10, i32 %arg.11, i32 %arg.12, i32 %arg.13, i32 %arg.14, i32 %arg.15, i32 %arg.16, i32 %arg.17, i32 %arg.18, i32 %arg.19, i32 %arg.20)

declare <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %arg, i32 %arg.1, i32 %arg.2, i32 %arg.3, i32 %arg.4, i32 %arg.5, i32 %arg.6, i32 %arg.7)

declare <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %arg, i32 %arg.1, i32 %arg.2, i32 %arg.3, i32 %arg.4, i32 %arg.5, i32 %arg.6, i32 %arg.7, i32 %arg.8, i32 %arg.9, i32 %arg.10, i32 %arg.11, i32 %arg.12, i32 %arg.13, i32 %arg.14, i32 %arg.15, i32 %arg.16, i32 %arg.17)

declare <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %arg, <64 x i32> %arg.1, i32 %arg.2, i32 %arg.3, i32 %arg.4, i32 %arg.5, i32 %arg.6, i32 %arg.7, i32 %arg.8)

declare <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %arg, i32 %arg.1, i32 %arg.2, i32 %arg.3, i32 %arg.4, i32 %arg.5, i32 %arg.6, i32 %arg.7, i32 %arg.8, i32 %arg.9)

declare <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.1(<64 x i16> %arg, <64 x i16> %arg.1, i32 %arg.2, i32 %arg.3, i32 %arg.4, i32 %arg.5, i32 %arg.6, i32 %arg.7, i32 %arg.8, i32 %arg.9, i32 %arg.10, i32 %arg.11, i32 %arg.12, i32 %arg.13, i32 %arg.14, i32 %arg.15, i32 %arg.16, i32 %arg.17, i32 %arg.18, i32 %arg.19, i32 %arg.20)

declare <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_acc_128B_dsl(<64 x i32> %arg, <64 x i16> %arg.1, <32 x i32> %arg.2, i32 %arg.3, i32 %arg.4, i32 %arg.5, i32 %arg.6, i32 %arg.7, i32 %arg.8, i32 %arg.9, i32 %arg.10, i32 %arg.11, i32 %arg.12, i32 %arg.13, i32 %arg.14, i32 %arg.15, i32 %arg.16, i32 %arg.17, i32 %arg.18, i32 %arg.19, i32 %arg.20, i32 %arg.21, i32 %arg.22, i32 %arg.23)

declare <64 x i16> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl.1(<64 x i16> %arg, i32 %arg.1, i32 %arg.2, i32 %arg.3, i32 %arg.4, i32 %arg.5, i32 %arg.6, i32 %arg.7, i32 %arg.8)

declare <32 x i32> @llvm.hydride.hexagon_V6_vassign_128B_dsl(<64 x i32> %arg, i32 %arg.1, i32 %arg.2, i32 %arg.3, i32 %arg.4, i32 %arg.5, i32 %arg.6)

declare <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %arg, <1 x i32> %arg.1, <32 x i32> %arg.2, i32 %arg.3, i32 %arg.4, i32 %arg.5, i32 %arg.6, i32 %arg.7, i32 %arg.8, i32 %arg.9)

declare <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl(<32 x i32> %arg, <32 x i32> %arg.1, i32 %arg.2, i32 %arg.3, i32 %arg.4, i32 %arg.5, i32 %arg.6, i32 %arg.7, i32 %arg.8)

declare <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl(<32 x i32> %arg, <32 x i32> %arg.1, i32 %arg.2, i32 %arg.3, i32 %arg.4, i32 %arg.5, i32 %arg.6, i32 %arg.7, i32 %arg.8)

declare <32 x i32> @llvm.hydride.hexagon_V6_lo_128B_dsl.1(<64 x i32> %arg, i32 %arg.1, i32 %arg.2, i32 %arg.3, i32 %arg.4, i32 %arg.5, i32 %arg.6, i32 %arg.7)

declare <64 x i32> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<32 x i32> %arg, <32 x i32> %arg.1, i32 %arg.2, i32 %arg.3, i32 %arg.4, i32 %arg.5, i32 %arg.6, i32 %arg.7, i32 %arg.8, i32 %arg.9, i32 %arg.10, i32 %arg.11)

define <64 x i32> @hydride.node.gaussian7x7_hvx_depth3.1(<128 x i8> %arg, <128 x i8> %arg.1, <128 x i8> %arg.2, <128 x i8> %arg.3, <128 x i8> %arg.4, <128 x i8> %arg.5, <128 x i8> %arg.6, <64 x i16> %arg.7, <128 x i8> %arg.8, <128 x i8> %arg.9, <128 x i8> %arg.10, <128 x i8> %arg.11, <128 x i8> %arg.12, <128 x i8> %arg.13, <64 x i16> %arg.14, <64 x i16> %arg.15, <64 x i16> %arg.16, <128 x i8> %arg.17, <128 x i8> %arg.18, <128 x i8> %arg.19, <128 x i8> %arg.20, <128 x i8> %arg.21, <128 x i8> %arg.22, <128 x i8> %arg.23, <128 x i8> %arg.24, <128 x i8> %arg.25, <128 x i8> %arg.26, <128 x i8> %arg.27, <64 x i16> %arg.28, <128 x i8> %arg.29, <128 x i8> %arg.30, <128 x i8> %arg.31, <128 x i8> %arg.32, <128 x i8> %arg.33, <128 x i8> %arg.34, <128 x i8> %arg.35, <128 x i8> %arg.36, <128 x i8> %arg.37, <128 x i8> %arg.38, <128 x i8> %arg.39, <64 x i32> %arg.40, <64 x i32> %arg.41, <128 x i8> %arg.42, <128 x i8> %arg.43, <128 x i8> %arg.44, <128 x i8> %arg.45, <128 x i8> %arg.46, <64 x i32> %arg.47, <64 x i32> %arg.48)
{
entry:
  %0 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.46, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %1 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %0, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %2 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %1, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %3 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %2, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %4 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %arg.48, <64 x i32> %3, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %5 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.45, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %6 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %5, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %7 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %6, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %8 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %7, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %9 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.43, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %10 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %9, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %11 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %12 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %11, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %13 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.39, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %14 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %13, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %15 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %14, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %16 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %15, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %17 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.37, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %18 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, <128 x i8> %17, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %19 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %20 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %19, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %21 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.36, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %22 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %21, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %23 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %22, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %24 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %23, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %25 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.11, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %26 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %25, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %27 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %28 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %27, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %29 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.8, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %30 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %29, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %31 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.9, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %32 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %31, <128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %33 = call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %30, <128 x i16> %32, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 -1, i32 0)
  %34 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %33, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %35 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %34, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %36 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.1(<64 x i16> <i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300>, <64 x i16> %arg.7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 1, i32 32, i32 1024, i32 1, i32 1, i32 16, i32 2, i32 0)
  %37 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %35, <64 x i32> %36, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %38 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.10, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %39 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, <128 x i8> %38, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %40 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %39, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %41 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %40, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %42 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %37, <64 x i32> %41, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %43 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %28, <64 x i32> %42, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %44 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.34, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %45 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %44, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %46 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %45, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %47 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %46, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %48 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.32, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %49 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %48, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %50 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %49, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %51 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %50, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %52 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.31, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %53 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %52, <128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %54 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %53, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %55 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %54, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %56 = call <64 x i16> @llvm.hydride.hexagon_V6_vpackeh_128B_dsl(<64 x i16> <i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0>, <128 x i8> %arg.30, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 2, i32 32, i32 2, i32 16, i32 0)
  %57 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.2(<64 x i16> %56, <128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %58 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_acc_128B_dsl.1(<128 x i16> %57, <32 x i32> <i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100>, <64 x i16> %arg.28, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 -1, i32 1, i32 1, i32 32, i32 -1, i32 1, i32 1, i32 16, i32 1024, i32 2, i32 0)
  %59 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.29, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %60 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %59, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %61 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %60, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %62 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %61, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %63 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %58, <64 x i32> %62, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %64 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %55, <64 x i32> %63, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %65 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %51, <64 x i32> %64, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %66 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.33, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %67 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %66, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %68 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %67, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %69 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %68, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %70 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %65, <64 x i32> %69, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %71 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %47, <64 x i32> %70, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %72 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %43, <64 x i32> %71, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %73 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.12, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %74 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %73, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %75 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %74, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %76 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %75, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %77 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.27, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %78 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %77, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %79 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %78, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %80 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %79, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %81 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.25, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %82 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %81, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %83 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %82, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %84 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %83, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %85 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.24, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %86 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %85, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %87 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %86, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %88 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %87, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %89 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.22, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %90 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %89, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %91 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %90, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %92 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %91, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %93 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.21, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %94 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %93, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %95 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %94, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %96 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %95, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %97 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %92, <64 x i32> %96, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %98 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.23, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %99 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %98, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %100 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %99, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %101 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %100, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %102 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %97, <64 x i32> %101, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %103 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %88, <64 x i32> %102, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %104 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %84, <64 x i32> %103, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %105 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.26, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %106 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %105, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %107 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %106, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %108 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %107, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %109 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %104, <64 x i32> %108, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %110 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %80, <64 x i32> %109, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %111 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %76, <64 x i32> %110, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %112 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %72, <64 x i32> %111, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %113 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.19, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %114 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %113, <128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %115 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %114, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %116 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %115, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %117 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.17, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %118 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %117, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %119 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %118, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %120 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %119, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %121 = call <64 x i16> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl.1(<64 x i16> %arg.15, i32 1024, i32 32, i32 0, i32 32, i32 16, i32 32, i32 2, i32 0)
  %122 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_acc_128B_dsl(<64 x i32> %120, <64 x i16> %121, <32 x i32> <i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800>, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 -1, i32 1, i32 1, i32 32, i32 -1, i32 1, i32 1, i32 16, i32 1024, i32 2, i32 0)
  %123 = call <64 x i16> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl.1(<64 x i16> %arg.16, i32 1024, i32 32, i32 0, i32 32, i32 16, i32 32, i32 2, i32 0)
  %124 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.1(<64 x i16> %123, <64 x i16> <i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300>, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 1, i32 32, i32 1024, i32 1, i32 1, i32 16, i32 2, i32 0)
  %125 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %122, <64 x i32> %124, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %126 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.1(<64 x i16> <i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300>, <64 x i16> %arg.14, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 1, i32 32, i32 1024, i32 1, i32 1, i32 16, i32 2, i32 0)
  %127 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %125, <64 x i32> %126, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %128 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.18, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %129 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %128, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %130 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %129, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %131 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %130, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %132 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %127, <64 x i32> %131, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %133 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %116, <64 x i32> %132, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %134 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.20, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %135 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, <128 x i8> %134, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %136 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %135, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %137 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %136, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %138 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %133, <64 x i32> %137, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %139 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.13, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %140 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %139, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %141 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %140, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %142 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %141, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %143 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %138, <64 x i32> %142, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %144 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %112, <64 x i32> %143, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %145 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.6, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %146 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %145, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %147 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %146, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %148 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %147, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %149 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.4, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %150 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %149, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %151 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %150, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %152 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %151, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %153 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.3, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %154 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %153, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %155 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %154, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %156 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %155, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %157 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.1, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %158 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %157, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %159 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %158, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %160 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %159, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %161 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %162 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %161, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %163 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %162, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %164 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %163, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %165 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %160, <64 x i32> %164, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %166 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.2, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %167 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %166, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %168 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %167, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %169 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %168, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %170 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %165, <64 x i32> %169, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %171 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %156, <64 x i32> %170, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %172 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %152, <64 x i32> %171, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %173 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.5, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %174 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %173, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %175 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %174, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %176 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %175, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %177 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %172, <64 x i32> %176, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %178 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %148, <64 x i32> %177, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %179 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %144, <64 x i32> %178, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %180 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.35, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %181 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %180, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %182 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %181, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %183 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %182, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %184 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %179, <64 x i32> %183, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %185 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %24, <64 x i32> %184, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %186 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %20, <64 x i32> %185, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %187 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.38, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %188 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %187, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %189 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %188, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %190 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %189, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %191 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %186, <64 x i32> %190, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %192 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %16, <64 x i32> %191, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %193 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %192, <64 x i32> %arg.40, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %194 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.42, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %195 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %194, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %196 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %195, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %197 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddubh_acc_128B_dsl(<64 x i32> %193, <64 x i16> %196, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 -1, i32 1, i32 -1, i32 32, i32 -1, i32 1, i32 -1, i32 16, i32 1024, i32 2, i32 0)
  %198 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %197, <64 x i32> %arg.41, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %199 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %12, <64 x i32> %198, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %200 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.44, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %201 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, <128 x i8> %200, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %202 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %201, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %203 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %202, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %204 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %199, <64 x i32> %203, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %205 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %8, <64 x i32> %204, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %206 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %205, <64 x i32> %arg.47, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %207 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %4, <64 x i32> %206, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %208 = call <32 x i32> @llvm.hydride.hexagon_V6_vassign_128B_dsl(<64 x i32> %207, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %209 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> <i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12>, <1 x i32> <i32 0>, <32 x i32> %208, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %210 = call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl(<32 x i32> %209, <32 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %211 = call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl(<32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>, <32 x i32> %210, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %212 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.46, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %213 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %212, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %214 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %215 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %214, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %216 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %arg.48, <64 x i32> %215, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %217 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.45, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %218 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %217, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %219 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %218, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %220 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %219, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %221 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.43, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %222 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %221, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %223 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %222, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %224 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %223, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %225 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.39, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %226 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %225, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %227 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %226, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %228 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %227, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %229 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.37, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %230 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, <128 x i8> %229, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %231 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %230, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %232 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %231, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %233 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.36, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %234 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %233, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %235 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %234, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %236 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %235, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %237 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.11, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %238 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %237, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %239 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %238, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %240 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %239, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %241 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.8, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %242 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %241, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %243 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.9, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %244 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %243, <128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %245 = call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %242, <128 x i16> %244, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 -1, i32 0)
  %246 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %245, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %247 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %246, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %248 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.1(<64 x i16> <i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300>, <64 x i16> %arg.7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 1, i32 32, i32 1024, i32 1, i32 1, i32 16, i32 2, i32 0)
  %249 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %247, <64 x i32> %248, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %250 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.10, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %251 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, <128 x i8> %250, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %252 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %251, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %253 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %252, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %254 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %249, <64 x i32> %253, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %255 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %240, <64 x i32> %254, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %256 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.34, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %257 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %256, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %258 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %257, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %259 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %258, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %260 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.32, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %261 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %260, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %262 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %261, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %263 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %262, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %264 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.31, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %265 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %264, <128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %266 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %265, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %267 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %266, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %268 = call <64 x i16> @llvm.hydride.hexagon_V6_vpackeh_128B_dsl(<64 x i16> <i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0>, <128 x i8> %arg.30, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 2, i32 32, i32 2, i32 16, i32 0)
  %269 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.2(<64 x i16> %268, <128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %270 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_acc_128B_dsl.1(<128 x i16> %269, <32 x i32> <i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100>, <64 x i16> %arg.28, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 -1, i32 1, i32 1, i32 32, i32 -1, i32 1, i32 1, i32 16, i32 1024, i32 2, i32 0)
  %271 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.29, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %272 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %271, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %273 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %272, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %274 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %273, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %275 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %270, <64 x i32> %274, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %276 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %267, <64 x i32> %275, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %277 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %263, <64 x i32> %276, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %278 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.33, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %279 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %278, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %280 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %279, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %281 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %280, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %282 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %277, <64 x i32> %281, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %283 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %259, <64 x i32> %282, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %284 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %255, <64 x i32> %283, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %285 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.12, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %286 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %285, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %287 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %286, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %288 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %287, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %289 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.27, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %290 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %289, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %291 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %290, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %292 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %291, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %293 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.25, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %294 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %293, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %295 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %294, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %296 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %295, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %297 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.24, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %298 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %297, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %299 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %298, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %300 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %299, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %301 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.22, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %302 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %301, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %303 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %302, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %304 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %303, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %305 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.21, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %306 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %305, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %307 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %306, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %308 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %307, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %309 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %304, <64 x i32> %308, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %310 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.23, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %311 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %310, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %312 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %311, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %313 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %312, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %314 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %309, <64 x i32> %313, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %315 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %300, <64 x i32> %314, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %316 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %296, <64 x i32> %315, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %317 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.26, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %318 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %317, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %319 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %318, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %320 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %319, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %321 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %316, <64 x i32> %320, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %322 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %292, <64 x i32> %321, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %323 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %288, <64 x i32> %322, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %324 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %284, <64 x i32> %323, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %325 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.19, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %326 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %325, <128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %327 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %326, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %328 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %327, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %329 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.17, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %330 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %329, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %331 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %330, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %332 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %331, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %333 = call <64 x i16> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl.1(<64 x i16> %arg.15, i32 1024, i32 32, i32 0, i32 32, i32 16, i32 32, i32 2, i32 0)
  %334 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_acc_128B_dsl(<64 x i32> %332, <64 x i16> %333, <32 x i32> <i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800>, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 -1, i32 1, i32 1, i32 32, i32 -1, i32 1, i32 1, i32 16, i32 1024, i32 2, i32 0)
  %335 = call <64 x i16> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl.1(<64 x i16> %arg.16, i32 1024, i32 32, i32 0, i32 32, i32 16, i32 32, i32 2, i32 0)
  %336 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.1(<64 x i16> %335, <64 x i16> <i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300>, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 1, i32 32, i32 1024, i32 1, i32 1, i32 16, i32 2, i32 0)
  %337 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %334, <64 x i32> %336, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %338 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.1(<64 x i16> <i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300>, <64 x i16> %arg.14, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 1, i32 32, i32 1024, i32 1, i32 1, i32 16, i32 2, i32 0)
  %339 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %337, <64 x i32> %338, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %340 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.18, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %341 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %340, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %342 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %341, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %343 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %342, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %344 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %339, <64 x i32> %343, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %345 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %328, <64 x i32> %344, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %346 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.20, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %347 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, <128 x i8> %346, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %348 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %347, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %349 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %348, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %350 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %345, <64 x i32> %349, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %351 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.13, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %352 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %351, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %353 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %352, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %354 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %353, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %355 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %350, <64 x i32> %354, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %356 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %324, <64 x i32> %355, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %357 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.6, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %358 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %357, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %359 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %358, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %360 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %359, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %361 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.4, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %362 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %361, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %363 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %362, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %364 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %363, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %365 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.3, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %366 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %365, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %367 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %366, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %368 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %367, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %369 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.1, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %370 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %369, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %371 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %370, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %372 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %371, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %373 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %374 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %373, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %375 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %374, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %376 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %375, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %377 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %372, <64 x i32> %376, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %378 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.2, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %379 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %378, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %380 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %379, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %381 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %380, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %382 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %377, <64 x i32> %381, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %383 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %368, <64 x i32> %382, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %384 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %364, <64 x i32> %383, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %385 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.5, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %386 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %385, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %387 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %386, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %388 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %387, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %389 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %384, <64 x i32> %388, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %390 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %360, <64 x i32> %389, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %391 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %356, <64 x i32> %390, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %392 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.35, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %393 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %392, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %394 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %393, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %395 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %394, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %396 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %391, <64 x i32> %395, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %397 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %236, <64 x i32> %396, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %398 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %232, <64 x i32> %397, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %399 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.38, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %400 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %399, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %401 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %400, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %402 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %401, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %403 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %398, <64 x i32> %402, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %404 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %228, <64 x i32> %403, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %405 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %404, <64 x i32> %arg.40, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %406 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.42, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %407 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %406, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %408 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %407, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %409 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddubh_acc_128B_dsl(<64 x i32> %405, <64 x i16> %408, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 -1, i32 1, i32 -1, i32 32, i32 -1, i32 1, i32 -1, i32 16, i32 1024, i32 2, i32 0)
  %410 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %409, <64 x i32> %arg.41, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %411 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %224, <64 x i32> %410, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %412 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.44, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %413 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, <128 x i8> %412, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %414 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %413, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %415 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %414, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %416 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %411, <64 x i32> %415, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %417 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %220, <64 x i32> %416, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %418 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %417, <64 x i32> %arg.47, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %419 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %216, <64 x i32> %418, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %420 = call <32 x i32> @llvm.hydride.hexagon_V6_lo_128B_dsl.1(<64 x i32> %419, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %421 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> <i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12>, <1 x i32> <i32 0>, <32 x i32> %420, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %422 = call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl(<32 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>, <32 x i32> %421, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %423 = call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl(<32 x i32> %422, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %424 = call <64 x i32> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<32 x i32> %211, <32 x i32> %423, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  ret <64 x i32> %424
}

declare <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %arg, i32 %arg.1, i32 %arg.2, i32 %arg.3, i32 %arg.4, i32 %arg.5, i32 %arg.6)

declare <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %arg, <128 x i16> %arg.1, i32 %arg.2, i32 %arg.3, i32 %arg.4, i32 %arg.5, i32 %arg.6, i32 %arg.7, i32 %arg.8)

declare <64 x i16> @llvm.hydride.hexagon_V6_vpackeh_128B_dsl(<64 x i16> %arg, <128 x i8> %arg.1, i32 %arg.2, i32 %arg.3, i32 %arg.4, i32 %arg.5, i32 %arg.6, i32 %arg.7, i32 %arg.8, i32 %arg.9, i32 %arg.10, i32 %arg.11, i32 %arg.12, i32 %arg.13, i32 %arg.14)

declare <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.2(<64 x i16> %arg, <128 x i8> %arg.1, i32 %arg.2, i32 %arg.3, i32 %arg.4, i32 %arg.5, i32 %arg.6, i32 %arg.7, i32 %arg.8, i32 %arg.9, i32 %arg.10, i32 %arg.11, i32 %arg.12, i32 %arg.13, i32 %arg.14, i32 %arg.15, i32 %arg.16, i32 %arg.17, i32 %arg.18, i32 %arg.19, i32 %arg.20)

declare <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_acc_128B_dsl.1(<128 x i16> %arg, <32 x i32> %arg.1, <64 x i16> %arg.2, i32 %arg.3, i32 %arg.4, i32 %arg.5, i32 %arg.6, i32 %arg.7, i32 %arg.8, i32 %arg.9, i32 %arg.10, i32 %arg.11, i32 %arg.12, i32 %arg.13, i32 %arg.14, i32 %arg.15, i32 %arg.16, i32 %arg.17, i32 %arg.18, i32 %arg.19, i32 %arg.20, i32 %arg.21, i32 %arg.22, i32 %arg.23)

declare <64 x i32> @llvm.hydride.hexagon_V6_vaddubh_acc_128B_dsl(<64 x i32> %arg, <64 x i16> %arg.1, <32 x i32> %arg.2, i32 %arg.3, i32 %arg.4, i32 %arg.5, i32 %arg.6, i32 %arg.7, i32 %arg.8, i32 %arg.9, i32 %arg.10, i32 %arg.11, i32 %arg.12, i32 %arg.13, i32 %arg.14, i32 %arg.15, i32 %arg.16, i32 %arg.17, i32 %arg.18, i32 %arg.19, i32 %arg.20, i32 %arg.21, i32 %arg.22, i32 %arg.23)

define <64 x i32> @hydride.node.gaussian7x7_hvx_depth3.2(<128 x i8> %arg, <128 x i8> %arg.1, <128 x i8> %arg.2, <128 x i8> %arg.3, <128 x i8> %arg.4, <128 x i8> %arg.5, <128 x i8> %arg.6, <64 x i16> %arg.7, <128 x i8> %arg.8, <128 x i8> %arg.9, <128 x i8> %arg.10, <128 x i8> %arg.11, <128 x i8> %arg.12, <128 x i8> %arg.13, <64 x i16> %arg.14, <64 x i16> %arg.15, <64 x i16> %arg.16, <128 x i8> %arg.17, <128 x i8> %arg.18, <128 x i8> %arg.19, <128 x i8> %arg.20, <128 x i8> %arg.21, <128 x i8> %arg.22, <128 x i8> %arg.23, <128 x i8> %arg.24, <128 x i8> %arg.25, <128 x i8> %arg.26, <128 x i8> %arg.27, <64 x i16> %arg.28, <128 x i8> %arg.29, <128 x i8> %arg.30, <128 x i8> %arg.31, <128 x i8> %arg.32, <128 x i8> %arg.33, <128 x i8> %arg.34, <128 x i8> %arg.35, <128 x i8> %arg.36, <128 x i8> %arg.37, <128 x i8> %arg.38, <128 x i8> %arg.39, <64 x i32> %arg.40, <64 x i32> %arg.41, <128 x i8> %arg.42, <128 x i8> %arg.43, <128 x i8> %arg.44, <128 x i8> %arg.45, <128 x i8> %arg.46, <64 x i32> %arg.47, <64 x i32> %arg.48)
{
entry:
  %0 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.46, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %1 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %0, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %2 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %1, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %3 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %2, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %4 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %arg.48, <64 x i32> %3, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %5 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.44, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %6 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %5, <128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %7 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %6, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %8 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %7, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %9 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.43, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %10 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %9, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %11 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %12 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %11, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %13 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.42, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %14 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %13, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %15 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %14, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %16 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %15, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %17 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.38, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %18 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %17, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %19 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %20 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %19, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %21 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.37, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %22 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, <128 x i8> %21, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %23 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %22, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %24 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %23, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %25 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.35, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %26 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %25, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %27 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %28 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %27, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %29 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.10, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %30 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, <128 x i8> %29, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %31 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %30, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %32 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %31, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %33 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.9, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %34 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %33, <128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %35 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %34, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %36 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %35, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %37 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.8, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %38 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %37, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %39 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %38, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %40 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %39, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %41 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %36, <64 x i32> %40, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %42 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.1(<64 x i16> <i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300>, <64 x i16> %arg.7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 1, i32 32, i32 1024, i32 1, i32 1, i32 16, i32 2, i32 0)
  %43 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %41, <64 x i32> %42, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %44 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %32, <64 x i32> %43, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %45 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.11, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %46 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %45, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %47 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %46, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %48 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %47, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %49 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %44, <64 x i32> %48, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %50 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.33, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %51 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %50, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %52 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %51, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %53 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %52, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %54 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.32, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %55 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %54, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %56 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %55, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %57 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %56, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %58 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.31, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %59 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %58, <128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %60 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %59, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %61 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %60, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %62 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.30, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %63 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %62, <128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %64 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %63, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %65 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %64, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %66 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_acc_128B_dsl(<64 x i32> %65, <64 x i16> %arg.28, <32 x i32> <i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100>, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 -1, i32 1, i32 1, i32 32, i32 -1, i32 1, i32 1, i32 16, i32 1024, i32 2, i32 0)
  %67 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.29, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %68 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %67, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %69 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %68, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %70 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %69, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %71 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %66, <64 x i32> %70, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %72 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %61, <64 x i32> %71, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %73 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %57, <64 x i32> %72, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %74 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %53, <64 x i32> %73, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %75 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.34, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %76 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %75, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %77 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %76, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %78 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %77, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %79 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %74, <64 x i32> %78, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %80 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %49, <64 x i32> %79, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %81 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.12, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %82 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %81, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %83 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %82, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %84 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %83, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %85 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.26, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %86 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %85, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %87 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %86, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %88 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %87, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %89 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.25, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %90 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %89, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %91 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %90, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %92 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %91, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %93 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.23, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %94 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %93, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %95 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %94, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %96 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %95, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %97 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.22, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %98 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %97, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %99 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %98, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %100 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %99, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %101 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.21, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %102 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %101, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %103 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %102, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %104 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %103, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %105 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %100, <64 x i32> %104, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %106 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %96, <64 x i32> %105, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %107 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.24, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %108 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %107, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %109 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %108, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %110 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %109, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %111 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %106, <64 x i32> %110, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %112 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %92, <64 x i32> %111, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %113 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %88, <64 x i32> %112, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %114 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.27, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %115 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %114, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %116 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %115, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %117 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %116, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %118 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %113, <64 x i32> %117, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %119 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %84, <64 x i32> %118, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %120 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %80, <64 x i32> %119, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %121 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.18, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %122 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %121, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %123 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %122, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %124 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %123, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %125 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.17, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %126 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %125, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %127 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %126, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %128 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %127, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %129 = call <64 x i16> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl.1(<64 x i16> %arg.15, i32 1024, i32 32, i32 0, i32 32, i32 16, i32 32, i32 2, i32 0)
  %130 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_acc_128B_dsl(<64 x i32> %128, <64 x i16> %129, <32 x i32> <i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800>, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 -1, i32 1, i32 1, i32 32, i32 -1, i32 1, i32 1, i32 16, i32 1024, i32 2, i32 0)
  %131 = call <64 x i16> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl.1(<64 x i16> %arg.16, i32 1024, i32 32, i32 0, i32 32, i32 16, i32 32, i32 2, i32 0)
  %132 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.1(<64 x i16> %131, <64 x i16> <i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300>, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 1, i32 32, i32 1024, i32 1, i32 1, i32 16, i32 2, i32 0)
  %133 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %130, <64 x i32> %132, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %134 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.1(<64 x i16> <i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300>, <64 x i16> %arg.14, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 1, i32 32, i32 1024, i32 1, i32 1, i32 16, i32 2, i32 0)
  %135 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %133, <64 x i32> %134, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %136 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %124, <64 x i32> %135, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %137 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.19, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %138 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %137, <128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %139 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %138, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %140 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %139, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %141 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %136, <64 x i32> %140, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %142 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.20, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %143 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, <128 x i8> %142, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %144 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %143, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %145 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %144, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %146 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %141, <64 x i32> %145, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %147 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.13, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %148 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %147, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %149 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %148, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %150 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %149, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %151 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %146, <64 x i32> %150, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %152 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %120, <64 x i32> %151, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %153 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.5, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %154 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %153, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %155 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %154, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %156 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %155, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %157 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.4, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %158 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %157, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %159 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %158, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %160 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %159, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %161 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.2, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %162 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %161, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %163 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %162, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %164 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %163, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %165 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.1, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %166 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %165, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %167 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %166, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %168 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %167, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %169 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %170 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %169, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %171 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %170, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %172 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %171, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %173 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %168, <64 x i32> %172, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %174 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %164, <64 x i32> %173, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %175 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.3, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %176 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %175, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %177 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %176, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %178 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %177, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %179 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %174, <64 x i32> %178, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %180 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %160, <64 x i32> %179, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %181 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %156, <64 x i32> %180, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %182 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.6, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %183 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %182, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %184 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %183, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %185 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %184, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %186 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %181, <64 x i32> %185, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %187 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %152, <64 x i32> %186, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %188 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %28, <64 x i32> %187, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %189 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.36, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %190 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %189, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %191 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %190, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %192 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %191, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %193 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %188, <64 x i32> %192, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %194 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %24, <64 x i32> %193, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %195 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %20, <64 x i32> %194, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %196 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.39, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %197 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %196, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %198 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %197, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %199 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %198, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %200 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %195, <64 x i32> %199, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %201 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %arg.41, <64 x i32> %200, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %202 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %arg.40, <64 x i32> %201, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %203 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %16, <64 x i32> %202, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %204 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %12, <64 x i32> %203, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %205 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %8, <64 x i32> %204, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %206 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.45, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %207 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %206, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %208 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %207, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %209 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %208, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %210 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %205, <64 x i32> %209, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %211 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %210, <64 x i32> %arg.47, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %212 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %4, <64 x i32> %211, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %213 = call <32 x i32> @llvm.hydride.hexagon_V6_vassign_128B_dsl(<64 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %214 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> <i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12>, <1 x i32> <i32 0>, <32 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %215 = call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl(<32 x i32> %214, <32 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %216 = call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl(<32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>, <32 x i32> %215, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %217 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.46, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %218 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %217, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %219 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %218, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %220 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %219, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %221 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %arg.48, <64 x i32> %220, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %222 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.44, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %223 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %222, <128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %224 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %223, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %225 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %224, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %226 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.43, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %227 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %226, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %228 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %227, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %229 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %228, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %230 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.42, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %231 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %230, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %232 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %231, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %233 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %232, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %234 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.38, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %235 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %234, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %236 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %235, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %237 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %236, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %238 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.37, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %239 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, <128 x i8> %238, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %240 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %239, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %241 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %240, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %242 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.35, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %243 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %242, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %244 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %243, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %245 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %244, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %246 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.10, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %247 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, <128 x i8> %246, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %248 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %247, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %249 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %248, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %250 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.9, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %251 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %250, <128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %252 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %251, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %253 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %252, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %254 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.8, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %255 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %254, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %256 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %255, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %257 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %256, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %258 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %253, <64 x i32> %257, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %259 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.1(<64 x i16> <i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300>, <64 x i16> %arg.7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 1, i32 32, i32 1024, i32 1, i32 1, i32 16, i32 2, i32 0)
  %260 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %258, <64 x i32> %259, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %261 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %249, <64 x i32> %260, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %262 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.11, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %263 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %262, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %264 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %263, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %265 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %264, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %266 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %261, <64 x i32> %265, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %267 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.33, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %268 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %267, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %269 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %268, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %270 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %269, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %271 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.32, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %272 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %271, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %273 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %272, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %274 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %273, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %275 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.31, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %276 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %275, <128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %277 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %276, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %278 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %277, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %279 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.30, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %280 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %279, <128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %281 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %280, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %282 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %281, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %283 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_acc_128B_dsl(<64 x i32> %282, <64 x i16> %arg.28, <32 x i32> <i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100>, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 -1, i32 1, i32 1, i32 32, i32 -1, i32 1, i32 1, i32 16, i32 1024, i32 2, i32 0)
  %284 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.29, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %285 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %284, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %286 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %285, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %287 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %286, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %288 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %283, <64 x i32> %287, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %289 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %278, <64 x i32> %288, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %290 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %274, <64 x i32> %289, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %291 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %270, <64 x i32> %290, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %292 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.34, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %293 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %292, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %294 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %293, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %295 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %294, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %296 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %291, <64 x i32> %295, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %297 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %266, <64 x i32> %296, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %298 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.12, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %299 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %298, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %300 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %299, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %301 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %300, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %302 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.26, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %303 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %302, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %304 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %303, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %305 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %304, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %306 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.25, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %307 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %306, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %308 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %307, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %309 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %308, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %310 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.23, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %311 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %310, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %312 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %311, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %313 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %312, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %314 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.22, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %315 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %314, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %316 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %315, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %317 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %316, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %318 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.21, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %319 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %318, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %320 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %319, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %321 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %320, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %322 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %317, <64 x i32> %321, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %323 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %313, <64 x i32> %322, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %324 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.24, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %325 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %324, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %326 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %325, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %327 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %326, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %328 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %323, <64 x i32> %327, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %329 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %309, <64 x i32> %328, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %330 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %305, <64 x i32> %329, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %331 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.27, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %332 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %331, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %333 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %332, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %334 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %333, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %335 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %330, <64 x i32> %334, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %336 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %301, <64 x i32> %335, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %337 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %297, <64 x i32> %336, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %338 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.18, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %339 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %338, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %340 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %339, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %341 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %340, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %342 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.17, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %343 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %342, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %344 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %343, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %345 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %344, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %346 = call <64 x i16> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl.1(<64 x i16> %arg.15, i32 1024, i32 32, i32 0, i32 32, i32 16, i32 32, i32 2, i32 0)
  %347 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_acc_128B_dsl(<64 x i32> %345, <64 x i16> %346, <32 x i32> <i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800>, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 -1, i32 1, i32 1, i32 32, i32 -1, i32 1, i32 1, i32 16, i32 1024, i32 2, i32 0)
  %348 = call <64 x i16> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl.1(<64 x i16> %arg.16, i32 1024, i32 32, i32 0, i32 32, i32 16, i32 32, i32 2, i32 0)
  %349 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.1(<64 x i16> %348, <64 x i16> <i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300>, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 1, i32 32, i32 1024, i32 1, i32 1, i32 16, i32 2, i32 0)
  %350 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %347, <64 x i32> %349, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %351 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.1(<64 x i16> <i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300>, <64 x i16> %arg.14, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 1, i32 32, i32 1024, i32 1, i32 1, i32 16, i32 2, i32 0)
  %352 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %350, <64 x i32> %351, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %353 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %341, <64 x i32> %352, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %354 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.19, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %355 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %354, <128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %356 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %355, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %357 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %356, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %358 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %353, <64 x i32> %357, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %359 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.20, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %360 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, <128 x i8> %359, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %361 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %360, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %362 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %361, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %363 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %358, <64 x i32> %362, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %364 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.13, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %365 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %364, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %366 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %365, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %367 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %366, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %368 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %363, <64 x i32> %367, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %369 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %337, <64 x i32> %368, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %370 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.5, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %371 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %370, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %372 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %371, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %373 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %372, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %374 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.4, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %375 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %374, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %376 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %375, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %377 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %376, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %378 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.2, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %379 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %378, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %380 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %379, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %381 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %380, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %382 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.1, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %383 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %382, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %384 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %383, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %385 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %384, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %386 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %387 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %386, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %388 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %387, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %389 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %388, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %390 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %385, <64 x i32> %389, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %391 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %381, <64 x i32> %390, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %392 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.3, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %393 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %392, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %394 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %393, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %395 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %394, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %396 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %391, <64 x i32> %395, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %397 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %377, <64 x i32> %396, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %398 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %373, <64 x i32> %397, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %399 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.6, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %400 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %399, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %401 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %400, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %402 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %401, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %403 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %398, <64 x i32> %402, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %404 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %369, <64 x i32> %403, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %405 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %245, <64 x i32> %404, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %406 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.36, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %407 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %406, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %408 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %407, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %409 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %408, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %410 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %405, <64 x i32> %409, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %411 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %241, <64 x i32> %410, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %412 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %237, <64 x i32> %411, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %413 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.39, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %414 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %413, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %415 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %414, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %416 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %415, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %417 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %412, <64 x i32> %416, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %418 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %arg.41, <64 x i32> %417, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %419 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %arg.40, <64 x i32> %418, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %420 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %233, <64 x i32> %419, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %421 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %229, <64 x i32> %420, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %422 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %225, <64 x i32> %421, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %423 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.45, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %424 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %423, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %425 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %424, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %426 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %425, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %427 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %422, <64 x i32> %426, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %428 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %427, <64 x i32> %arg.47, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %429 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %221, <64 x i32> %428, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %430 = call <32 x i32> @llvm.hydride.hexagon_V6_lo_128B_dsl.1(<64 x i32> %429, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %431 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> <i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12>, <1 x i32> <i32 0>, <32 x i32> %430, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %432 = call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl(<32 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>, <32 x i32> %431, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %433 = call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl(<32 x i32> %432, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %434 = call <64 x i32> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<32 x i32> %216, <32 x i32> %433, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  ret <64 x i32> %434
}

define <64 x i32> @hydride.node.gaussian7x7_hvx_depth3.3(<128 x i8> %arg, <128 x i8> %arg.1, <128 x i8> %arg.2, <128 x i8> %arg.3, <128 x i8> %arg.4, <128 x i8> %arg.5, <128 x i8> %arg.6, <64 x i16> %arg.7, <128 x i8> %arg.8, <128 x i8> %arg.9, <128 x i8> %arg.10, <128 x i8> %arg.11, <128 x i8> %arg.12, <128 x i8> %arg.13, <64 x i16> %arg.14, <64 x i16> %arg.15, <64 x i16> %arg.16, <128 x i8> %arg.17, <128 x i8> %arg.18, <128 x i8> %arg.19, <128 x i8> %arg.20, <128 x i8> %arg.21, <128 x i8> %arg.22, <128 x i8> %arg.23, <128 x i8> %arg.24, <128 x i8> %arg.25, <128 x i8> %arg.26, <128 x i8> %arg.27, <64 x i16> %arg.28, <128 x i8> %arg.29, <128 x i8> %arg.30, <128 x i8> %arg.31, <128 x i8> %arg.32, <128 x i8> %arg.33, <128 x i8> %arg.34, <128 x i8> %arg.35, <128 x i8> %arg.36, <128 x i8> %arg.37, <128 x i8> %arg.38, <128 x i8> %arg.39, <64 x i32> %arg.40, <64 x i32> %arg.41, <128 x i8> %arg.42, <128 x i8> %arg.43, <128 x i8> %arg.44, <128 x i8> %arg.45, <128 x i8> %arg.46, <64 x i32> %arg.47, <64 x i32> %arg.48)
{
entry:
  %0 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.46, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %1 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %0, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %2 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %1, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %3 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %2, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %4 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %arg.48, <64 x i32> %3, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %5 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.45, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %6 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %5, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %7 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %6, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %8 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %7, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %9 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.43, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %10 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %9, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %11 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %12 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %11, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %13 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.39, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %14 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %13, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %15 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %14, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %16 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %15, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %17 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.37, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %18 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, <128 x i8> %17, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %19 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %20 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %19, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %21 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.36, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %22 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %21, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %23 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %22, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %24 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %23, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %25 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.11, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %26 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %25, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %27 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %28 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %27, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %29 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.8, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %30 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %29, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %31 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.9, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %32 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %31, <128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %33 = call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %30, <128 x i16> %32, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 -1, i32 0)
  %34 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %33, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %35 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %34, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %36 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.1(<64 x i16> <i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300>, <64 x i16> %arg.7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 1, i32 32, i32 1024, i32 1, i32 1, i32 16, i32 2, i32 0)
  %37 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %35, <64 x i32> %36, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %38 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.10, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %39 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, <128 x i8> %38, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %40 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %39, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %41 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %40, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %42 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %37, <64 x i32> %41, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %43 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %28, <64 x i32> %42, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %44 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.34, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %45 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %44, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %46 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %45, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %47 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %46, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %48 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.32, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %49 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %48, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %50 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %49, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %51 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %50, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %52 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.31, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %53 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %52, <128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %54 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %53, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %55 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %54, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %56 = call <64 x i16> @llvm.hydride.hexagon_V6_vpackeh_128B_dsl(<64 x i16> <i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0>, <128 x i8> %arg.30, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 2, i32 32, i32 2, i32 16, i32 0)
  %57 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.2(<64 x i16> %56, <128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %58 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_acc_128B_dsl.1(<128 x i16> %57, <32 x i32> <i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100>, <64 x i16> %arg.28, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 -1, i32 1, i32 1, i32 32, i32 -1, i32 1, i32 1, i32 16, i32 1024, i32 2, i32 0)
  %59 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.29, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %60 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %59, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %61 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %60, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %62 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %61, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %63 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %58, <64 x i32> %62, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %64 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %55, <64 x i32> %63, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %65 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %51, <64 x i32> %64, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %66 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.33, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %67 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %66, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %68 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %67, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %69 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %68, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %70 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %65, <64 x i32> %69, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %71 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %47, <64 x i32> %70, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %72 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %43, <64 x i32> %71, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %73 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.12, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %74 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %73, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %75 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %74, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %76 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %75, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %77 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.27, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %78 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %77, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %79 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %78, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %80 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %79, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %81 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.25, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %82 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %81, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %83 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %82, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %84 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %83, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %85 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.24, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %86 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %85, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %87 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %86, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %88 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %87, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %89 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.22, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %90 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %89, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %91 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %90, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %92 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %91, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %93 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.21, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %94 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %93, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %95 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %94, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %96 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %95, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %97 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %92, <64 x i32> %96, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %98 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.23, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %99 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %98, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %100 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %99, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %101 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %100, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %102 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %97, <64 x i32> %101, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %103 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %88, <64 x i32> %102, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %104 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %84, <64 x i32> %103, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %105 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.26, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %106 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %105, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %107 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %106, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %108 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %107, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %109 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %104, <64 x i32> %108, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %110 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %80, <64 x i32> %109, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %111 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %76, <64 x i32> %110, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %112 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %72, <64 x i32> %111, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %113 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.19, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %114 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %113, <128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %115 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %114, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %116 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %115, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %117 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.17, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %118 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %117, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %119 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %118, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %120 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %119, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %121 = call <64 x i16> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl.1(<64 x i16> %arg.15, i32 1024, i32 32, i32 0, i32 32, i32 16, i32 32, i32 2, i32 0)
  %122 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_acc_128B_dsl(<64 x i32> %120, <64 x i16> %121, <32 x i32> <i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800>, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 -1, i32 1, i32 1, i32 32, i32 -1, i32 1, i32 1, i32 16, i32 1024, i32 2, i32 0)
  %123 = call <64 x i16> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl.1(<64 x i16> %arg.16, i32 1024, i32 32, i32 0, i32 32, i32 16, i32 32, i32 2, i32 0)
  %124 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.1(<64 x i16> %123, <64 x i16> <i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300>, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 1, i32 32, i32 1024, i32 1, i32 1, i32 16, i32 2, i32 0)
  %125 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %122, <64 x i32> %124, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %126 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.1(<64 x i16> <i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300>, <64 x i16> %arg.14, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 1, i32 32, i32 1024, i32 1, i32 1, i32 16, i32 2, i32 0)
  %127 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %125, <64 x i32> %126, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %128 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.18, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %129 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %128, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %130 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %129, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %131 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %130, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %132 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %127, <64 x i32> %131, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %133 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %116, <64 x i32> %132, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %134 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.20, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %135 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, <128 x i8> %134, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %136 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %135, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %137 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %136, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %138 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %133, <64 x i32> %137, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %139 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.13, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %140 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %139, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %141 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %140, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %142 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %141, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %143 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %138, <64 x i32> %142, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %144 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %112, <64 x i32> %143, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %145 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.6, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %146 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %145, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %147 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %146, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %148 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %147, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %149 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.4, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %150 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %149, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %151 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %150, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %152 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %151, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %153 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.3, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %154 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %153, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %155 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %154, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %156 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %155, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %157 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.1, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %158 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %157, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %159 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %158, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %160 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %159, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %161 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %162 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %161, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %163 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %162, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %164 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %163, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %165 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %160, <64 x i32> %164, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %166 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.2, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %167 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %166, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %168 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %167, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %169 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %168, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %170 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %165, <64 x i32> %169, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %171 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %156, <64 x i32> %170, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %172 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %152, <64 x i32> %171, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %173 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.5, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %174 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %173, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %175 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %174, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %176 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %175, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %177 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %172, <64 x i32> %176, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %178 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %148, <64 x i32> %177, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %179 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %144, <64 x i32> %178, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %180 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.35, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %181 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %180, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %182 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %181, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %183 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %182, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %184 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %179, <64 x i32> %183, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %185 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %24, <64 x i32> %184, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %186 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %20, <64 x i32> %185, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %187 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.38, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %188 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %187, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %189 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %188, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %190 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %189, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %191 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %186, <64 x i32> %190, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %192 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %16, <64 x i32> %191, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %193 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %192, <64 x i32> %arg.40, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %194 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.42, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %195 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %194, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %196 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %195, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %197 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddubh_acc_128B_dsl(<64 x i32> %193, <64 x i16> %196, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 -1, i32 1, i32 -1, i32 32, i32 -1, i32 1, i32 -1, i32 16, i32 1024, i32 2, i32 0)
  %198 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %197, <64 x i32> %arg.41, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %199 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %12, <64 x i32> %198, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %200 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.44, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %201 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, <128 x i8> %200, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %202 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %201, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %203 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %202, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %204 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %199, <64 x i32> %203, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %205 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %8, <64 x i32> %204, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %206 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %205, <64 x i32> %arg.47, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %207 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %4, <64 x i32> %206, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %208 = call <32 x i32> @llvm.hydride.hexagon_V6_vassign_128B_dsl(<64 x i32> %207, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %209 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> <i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12>, <1 x i32> <i32 0>, <32 x i32> %208, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %210 = call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl(<32 x i32> %209, <32 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %211 = call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl(<32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>, <32 x i32> %210, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %212 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.46, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %213 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %212, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %214 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %215 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %214, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %216 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %arg.48, <64 x i32> %215, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %217 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.45, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %218 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %217, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %219 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %218, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %220 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %219, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %221 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.43, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %222 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %221, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %223 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %222, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %224 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %223, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %225 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.39, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %226 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %225, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %227 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %226, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %228 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %227, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %229 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.37, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %230 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, <128 x i8> %229, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %231 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %230, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %232 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %231, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %233 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.36, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %234 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %233, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %235 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %234, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %236 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %235, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %237 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.11, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %238 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %237, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %239 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %238, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %240 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %239, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %241 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.8, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %242 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %241, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %243 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.9, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %244 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %243, <128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %245 = call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %242, <128 x i16> %244, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 -1, i32 0)
  %246 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %245, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %247 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %246, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %248 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.1(<64 x i16> <i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300>, <64 x i16> %arg.7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 1, i32 32, i32 1024, i32 1, i32 1, i32 16, i32 2, i32 0)
  %249 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %247, <64 x i32> %248, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %250 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.10, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %251 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, <128 x i8> %250, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %252 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %251, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %253 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %252, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %254 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %249, <64 x i32> %253, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %255 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %240, <64 x i32> %254, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %256 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.34, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %257 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %256, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %258 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %257, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %259 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %258, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %260 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.32, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %261 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %260, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %262 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %261, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %263 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %262, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %264 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.31, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %265 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %264, <128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %266 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %265, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %267 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %266, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %268 = call <64 x i16> @llvm.hydride.hexagon_V6_vpackeh_128B_dsl(<64 x i16> <i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0>, <128 x i8> %arg.30, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 2, i32 32, i32 2, i32 16, i32 0)
  %269 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.2(<64 x i16> %268, <128 x i8> <i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225, i8 225>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 0, i32 0, i32 16, i32 1024, i32 0, i32 0, i32 8, i32 2, i32 0)
  %270 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_acc_128B_dsl.1(<128 x i16> %269, <32 x i32> <i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100, i32 19661100>, <64 x i16> %arg.28, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 -1, i32 1, i32 1, i32 32, i32 -1, i32 1, i32 1, i32 16, i32 1024, i32 2, i32 0)
  %271 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.29, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %272 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %271, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %273 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %272, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %274 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %273, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %275 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %270, <64 x i32> %274, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %276 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %267, <64 x i32> %275, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %277 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %263, <64 x i32> %276, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %278 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.33, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %279 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %278, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %280 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %279, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %281 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %280, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %282 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %277, <64 x i32> %281, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %283 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %259, <64 x i32> %282, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %284 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %255, <64 x i32> %283, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %285 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.12, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %286 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %285, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %287 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %286, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %288 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %287, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %289 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.27, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %290 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %289, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %291 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %290, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %292 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %291, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %293 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.25, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %294 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %293, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %295 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %294, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %296 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %295, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %297 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.24, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %298 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %297, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %299 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %298, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %300 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %299, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %301 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.22, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %302 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %301, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %303 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %302, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %304 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %303, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %305 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.21, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %306 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %305, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %307 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %306, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %308 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %307, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %309 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %304, <64 x i32> %308, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %310 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.23, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %311 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %310, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %312 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %311, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %313 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %312, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %314 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %309, <64 x i32> %313, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %315 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %300, <64 x i32> %314, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %316 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %296, <64 x i32> %315, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %317 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.26, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %318 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %317, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %319 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %318, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %320 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %319, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %321 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %316, <64 x i32> %320, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %322 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %292, <64 x i32> %321, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %323 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %288, <64 x i32> %322, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %324 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %284, <64 x i32> %323, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %325 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.19, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %326 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> %325, <128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %327 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %326, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %328 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %327, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %329 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.17, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %330 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %329, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %331 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %330, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %332 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %331, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %333 = call <64 x i16> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl.1(<64 x i16> %arg.15, i32 1024, i32 32, i32 0, i32 32, i32 16, i32 32, i32 2, i32 0)
  %334 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_acc_128B_dsl(<64 x i32> %332, <64 x i16> %333, <32 x i32> <i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800, i32 26214800>, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 -1, i32 1, i32 1, i32 32, i32 -1, i32 1, i32 1, i32 16, i32 1024, i32 2, i32 0)
  %335 = call <64 x i16> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl.1(<64 x i16> %arg.16, i32 1024, i32 32, i32 0, i32 32, i32 16, i32 32, i32 2, i32 0)
  %336 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.1(<64 x i16> %335, <64 x i16> <i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300>, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 1, i32 32, i32 1024, i32 1, i32 1, i32 16, i32 2, i32 0)
  %337 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %334, <64 x i32> %336, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %338 = call <64 x i32> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl.1(<64 x i16> <i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300, i16 300>, <64 x i16> %arg.14, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 1, i32 32, i32 1024, i32 1, i32 1, i32 16, i32 2, i32 0)
  %339 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %337, <64 x i32> %338, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %340 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.18, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %341 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %340, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %342 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %341, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %343 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %342, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %344 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %339, <64 x i32> %343, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %345 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %328, <64 x i32> %344, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %346 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.20, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %347 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, <128 x i8> %346, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %348 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %347, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %349 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %348, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %350 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %345, <64 x i32> %349, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %351 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.13, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %352 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %351, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %353 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %352, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %354 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %353, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %355 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %350, <64 x i32> %354, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %356 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %324, <64 x i32> %355, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %357 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.6, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %358 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %357, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %359 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %358, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %360 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %359, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %361 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.4, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %362 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %361, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %363 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %362, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %364 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %363, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %365 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.3, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %366 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %365, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %367 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %366, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %368 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %367, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %369 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.1, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %370 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90, i8 90>, <128 x i8> %369, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %371 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %370, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %372 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %371, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %373 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %374 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36, i8 36>, <128 x i8> %373, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 1, i32 16, i32 1024, i32 1, i32 1, i32 8, i32 2, i32 0)
  %375 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %374, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %376 = call <64 x i32> @llvm.hydride.hexagon_V6_vsb_128B_dsl(<64 x i16> %375, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 32, i32 1024, i32 0, i32 16, i32 2, i32 0)
  %377 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %372, <64 x i32> %376, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %378 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.2, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %379 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120, i8 120>, <128 x i8> %378, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %380 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %379, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %381 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %380, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %382 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %377, <64 x i32> %381, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %383 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %368, <64 x i32> %382, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %384 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %364, <64 x i32> %383, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %385 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.5, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %386 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %385, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %387 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %386, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %388 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %387, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %389 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %384, <64 x i32> %388, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %390 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %360, <64 x i32> %389, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %391 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %356, <64 x i32> %390, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %392 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.35, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %393 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %392, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %394 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %393, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %395 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %394, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %396 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %391, <64 x i32> %395, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %397 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %236, <64 x i32> %396, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %398 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %232, <64 x i32> %397, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %399 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.38, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %400 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, <128 x i8> %399, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %401 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %400, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %402 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %401, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %403 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %398, <64 x i32> %402, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %404 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %228, <64 x i32> %403, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %405 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %404, <64 x i32> %arg.40, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %406 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.42, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %407 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>, <128 x i8> %406, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %408 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %407, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %409 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddubh_acc_128B_dsl(<64 x i32> %405, <64 x i16> %408, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 0, i32 512, i32 16, i32 32, i32 1, i32 -1, i32 1, i32 -1, i32 32, i32 -1, i32 1, i32 -1, i32 16, i32 1024, i32 2, i32 0)
  %410 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %409, <64 x i32> %arg.41, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %411 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %224, <64 x i32> %410, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %412 = call <128 x i8> @llvm.hydride.hexagon_V6_vshuffh_128B_dsl(<128 x i8> %arg.44, i32 1024, i32 16, i32 0, i32 16, i32 8, i32 16, i32 8, i32 0)
  %413 = call <128 x i16> @llvm.hydride.hexagon_V6_vmpybv_128B_dsl(<128 x i8> <i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20, i8 20>, <128 x i8> %412, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 16, i32 1, i32 1, i32 0, i32 16, i32 1024, i32 1, i32 0, i32 8, i32 2, i32 0)
  %414 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl.1(<128 x i16> %413, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %415 = call <64 x i32> @llvm.hydride.hexagon_V6_vunpackh_128B_dsl(<64 x i16> %414, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 32, i32 1, i32 0, i32 0)
  %416 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %411, <64 x i32> %415, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %417 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %220, <64 x i32> %416, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %418 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %417, <64 x i32> %arg.47, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %419 = call <64 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i32> %216, <64 x i32> %418, i32 2048, i32 2048, i32 0, i32 2048, i32 32, i32 -1, i32 0)
  %420 = call <32 x i32> @llvm.hydride.hexagon_V6_lo_128B_dsl.1(<64 x i32> %419, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %421 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> <i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12>, <1 x i32> <i32 0>, <32 x i32> %420, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %422 = call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl(<32 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>, <32 x i32> %421, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %423 = call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl(<32 x i32> %422, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %424 = call <64 x i32> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<32 x i32> %211, <32 x i32> %423, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  ret <64 x i32> %424
}
