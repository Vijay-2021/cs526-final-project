; ModuleID = 'conv_nn_hvx128'
source_filename = "/home/arnoor2/Racket/TensorSynth/Rosette-experiments/frontends/halide/src/runtime/qurt_allocator.cpp"
target datalayout = "e-m:e-p:32:32:32-a:0-n16:32-i64:64:64-i32:32:32-i16:16:16-i1:8:8-f32:32:32-f64:64:64-v32:32:32-v64:64:64-v512:512:512-v1024:1024:1024-v2048:2048:2048"
target triple = "hexagon-unknown--elf"

%struct.halide_parallel_task_t = type { i32 (i8*, i32, i32, i8*, i8*)*, i8*, i8*, %struct.halide_semaphore_acquire_t*, i32, i32, i32, i32, i8 }
%struct.halide_semaphore_acquire_t = type { %struct.halide_semaphore_t*, i32 }
%struct.halide_semaphore_t = type { [2 x i64] }
%struct.halide_mutex_array = type { %struct.halide_mutex* }
%struct.halide_mutex = type { [1 x i32] }
%struct.halide_device_allocation_pool = type { i32 (i8*)*, %struct.halide_device_allocation_pool* }
%struct.halide_filter_argument_t = type { i8*, i32, i32, %struct.halide_type_t, %struct.halide_scalar_value_t*, %struct.halide_scalar_value_t*, %struct.halide_scalar_value_t*, %struct.halide_scalar_value_t*, i64** }
%struct.halide_type_t = type { i8, i8, i16 }
%struct.halide_scalar_value_t = type { %union.anon }
%union.anon = type { i64 }
%struct.halide_filter_metadata_t = type { i32, i32, %struct.halide_filter_argument_t*, i8*, i8* }
%struct.halide_thread = type opaque
%struct.halide_buffer_t = type { i64, %struct.halide_device_interface_t*, i8*, i64, %struct.halide_type_t, i32, %struct.halide_dimension_t*, i8* }
%struct.halide_device_interface_t = type { i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, void (i8*, %struct.halide_device_interface_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, i32, i32, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, i64, %struct.halide_device_interface_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, i32*, i32*)*, %struct.halide_device_interface_impl_t* }
%struct.halide_device_interface_impl_t = type { void ()*, void ()*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, i32, i32, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, i64)*, i32 (i8*, %struct.halide_buffer_t*)* }
%struct.halide_dimension_t = type { i32, i32, i32, i32 }
%"struct.Halide::Runtime::Internal::device_copy" = type { i64, i64, i64, [16 x i64], [16 x i64], [16 x i64], i64 }
%"struct.Halide::Runtime::Internal::CpuFeatures" = type { [2 x i64], [2 x i64] }

@_ZN6Halide7Runtime8Internal11buf_is_usedE = linkonce global [10 x i32] zeroinitializer, align 4
@_ZN6Halide7Runtime8Internal7mem_bufE = linkonce local_unnamed_addr global [10 x i8*] zeroinitializer, align 4
@_ZN6Halide7Runtime8Internal13custom_mallocE = linkonce local_unnamed_addr global i8* (i8*, i32)* @halide_default_malloc, align 4
@_ZN6Halide7Runtime8Internal11custom_freeE = linkonce local_unnamed_addr global void (i8*, i8*)* @halide_default_free, align 4
@.str = private unnamed_addr constant [45 x i8] c"custom allocators not supported on Hexagon.\0A\00", align 1
@llvm.global_dtors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_ZN6Halide7Runtime8Internal24halide_allocator_cleanupEv, i8* null }]
@_ZN6Halide7Runtime8Internal14custom_do_taskE = linkonce local_unnamed_addr global i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* @halide_default_do_task, align 4
@_ZN6Halide7Runtime8Internal19custom_do_loop_taskE = linkonce local_unnamed_addr global i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* @halide_default_do_loop_task, align 4
@_ZN6Halide7Runtime8Internal17custom_do_par_forE = linkonce local_unnamed_addr global i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* @halide_default_do_par_for, align 4
@_ZN6Halide7Runtime8Internal24custom_do_parallel_tasksE = linkonce local_unnamed_addr global i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)* @halide_default_do_parallel_tasks, align 4
@.str.1 = private unnamed_addr constant [67 x i8] c"halide_default_do_parallel_tasks not implemented on this platform.\00", align 1
@_ZN6Halide7Runtime8Internal21custom_semaphore_initE = linkonce local_unnamed_addr global i32 (%struct.halide_semaphore_t*, i32)* @halide_default_semaphore_init, align 4
@.str.1.2 = private unnamed_addr constant [64 x i8] c"halide_default_semaphore_init not implemented on this platform.\00", align 1
@_ZN6Halide7Runtime8Internal28custom_semaphore_try_acquireE = linkonce local_unnamed_addr global i1 (%struct.halide_semaphore_t*, i32)* @halide_default_semaphore_try_acquire, align 4
@.str.3 = private unnamed_addr constant [71 x i8] c"halide_default_semaphore_try_acquire not implemented on this platform.\00", align 1
@_ZN6Halide7Runtime8Internal24custom_semaphore_releaseE = linkonce local_unnamed_addr global i32 (%struct.halide_semaphore_t*, i32)* @halide_default_semaphore_release, align 4
@.str.2 = private unnamed_addr constant [67 x i8] c"halide_default_semaphore_release not implemented on this platform.\00", align 1
@_ZN6Halide7Runtime8Internal23halide_fake_mutex_arrayE = linkonce global %struct.halide_mutex_array zeroinitializer, align 4
@.str.4 = private unnamed_addr constant [54 x i8] c"halide_spawn_thread not implemented on this platform.\00", align 1
@.str.5 = private unnamed_addr constant [53 x i8] c"halide_join_thread not implemented on this platform.\00", align 1
@.str.6 = private unnamed_addr constant [69 x i8] c"halide_set_num_threads: only supports a value of 1 on this platform.\00", align 1
@_ZN6Halide7Runtime8Internal17halide_gpu_deviceE = linkonce local_unnamed_addr global i32 0, align 4
@_ZN6Halide7Runtime8Internal22halide_gpu_device_lockE = linkonce global i8 0, align 1
@_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE = linkonce local_unnamed_addr global i8 0, align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"HL_GPU_DEVICE\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"<nullptr>\00", align 1
@.str.1.9 = private unnamed_addr constant [5 x i8] c"-nan\00", align 1
@.str.2.10 = private unnamed_addr constant [4 x i8] c"nan\00", align 1
@.str.3.11 = private unnamed_addr constant [5 x i8] c"-inf\00", align 1
@.str.4.12 = private unnamed_addr constant [4 x i8] c"inf\00", align 1
@.str.5.13 = private unnamed_addr constant [14 x i8] c"-0.000000e+00\00", align 1
@.str.6.14 = private unnamed_addr constant [13 x i8] c"0.000000e+00\00", align 1
@.str.7.15 = private unnamed_addr constant [10 x i8] c"-0.000000\00", align 1
@.str.8.16 = private unnamed_addr constant [9 x i8] c"0.000000\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"e+\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"e-\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"0123456789abcdef\00", align 1
@.str.18 = private unnamed_addr constant [14 x i8] c"bad_type_code\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"handle\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"uint\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"nullptr\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"buffer(\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c", {\00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@_ZN6Halide7Runtime8Internal36halide_reuse_device_allocations_flagE = linkonce local_unnamed_addr global i8 1, align 1
@_ZN6Halide7Runtime8Internal21allocation_pools_lockE = linkonce global %struct.halide_mutex zeroinitializer, align 4
@_ZN6Halide7Runtime8Internal23device_allocation_poolsE = linkonce local_unnamed_addr global %struct.halide_device_allocation_pool* null, align 4
@_ZN6Halide7Runtime8Internal17device_copy_mutexE = linkonce global %struct.halide_mutex zeroinitializer, align 4
@.str.6.17 = private unnamed_addr constant [20 x i8] c"halide_copy_to_host\00", align 1
@.str.7.18 = private unnamed_addr constant [22 x i8] c"halide_copy_to_device\00", align 1
@.str.9.19 = private unnamed_addr constant [61 x i8] c"halide_copy_to_device does not support switching interfaces\0A\00", align 1
@.str.17.20 = private unnamed_addr constant [21 x i8] c"halide_device_malloc\00", align 1
@.str.20.21 = private unnamed_addr constant [59 x i8] c"halide_device_malloc doesn't support switching interfaces\0A\00", align 1
@.str.16.22 = private unnamed_addr constant [19 x i8] c"halide_device_sync\00", align 1
@.str.21.23 = private unnamed_addr constant [19 x i8] c"halide_device_free\00", align 1
@.str.22.24 = private unnamed_addr constant [157 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/frontends/halide/src/runtime/device_interface.cpp:252 halide_abort_if_false() failed: buf->device == 0\0A\00", align 1
@.str.23.25 = private unnamed_addr constant [30 x i8] c"halide_device_and_host_malloc\00", align 1
@.str.25.26 = private unnamed_addr constant [68 x i8] c"halide_device_and_host_malloc doesn't support switching interfaces\0A\00", align 1
@.str.26 = private unnamed_addr constant [42 x i8] c"allocating host and device memory failed\0A\00", align 1
@.str.27 = private unnamed_addr constant [28 x i8] c"halide_device_and_host_free\00", align 1
@.str.28 = private unnamed_addr constant [157 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/frontends/halide/src/runtime/device_interface.cpp:317 halide_abort_if_false() failed: buf->device == 0\0A\00", align 1
@.str.29 = private unnamed_addr constant [38 x i8] c"halide_default_device_and_host_malloc\00", align 1
@.str.30 = private unnamed_addr constant [36 x i8] c"halide_default_device_and_host_free\00", align 1
@.str.31 = private unnamed_addr constant [26 x i8] c"halide_device_wrap_native\00", align 1
@.str.32 = private unnamed_addr constant [64 x i8] c"halide_device_wrap_native doesn't support switching interfaces\0A\00", align 1
@.str.33 = private unnamed_addr constant [28 x i8] c"halide_device_detach_native\00", align 1
@.str.34 = private unnamed_addr constant [157 x i8] c"/home/arnoor2/Racket/TensorSynth/Rosette-experiments/frontends/halide/src/runtime/device_interface.cpp:403 halide_abort_if_false() failed: buf->device == 0\0A\00", align 1
@.str.35 = private unnamed_addr constant [36 x i8] c"halide_default_device_detach_native\00", align 1
@.str.41 = private unnamed_addr constant [64 x i8] c"halide_buffer_copy does not support switching device interfaces\00", align 1
@.str.58 = private unnamed_addr constant [44 x i8] c"device_interface does not support cropping\0A\00", align 1
@.str.59 = private unnamed_addr constant [43 x i8] c"device_interface does not support slicing\0A\00", align 1
@.str.60 = private unnamed_addr constant [52 x i8] c"destination buffer already has a device allocation\0A\00", align 1
@.str.61 = private unnamed_addr constant [48 x i8] c"src and dst must have identical dimensionality\0A\00", align 1
@.str.64 = private unnamed_addr constant [52 x i8] c"dst must have exactly one fewer dimension than src\0A\00", align 1
@.str.36 = private unnamed_addr constant [41 x i8] c"Bounds inference call to external stage \00", align 1
@.str.1.37 = private unnamed_addr constant [27 x i8] c" returned non-zero value: \00", align 1
@.str.2.38 = private unnamed_addr constant [24 x i8] c"Call to external stage \00", align 1
@.str.3.39 = private unnamed_addr constant [18 x i8] c"Bounds given for \00", align 1
@.str.4.40 = private unnamed_addr constant [5 x i8] c" in \00", align 1
@.str.5.41 = private unnamed_addr constant [8 x i8] c" (from \00", align 1
@.str.6.42 = private unnamed_addr constant [5 x i8] c" to \00", align 1
@.str.7.43 = private unnamed_addr constant [38 x i8] c") do not cover required region (from \00", align 1
@.str.8.44 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.9.45 = private unnamed_addr constant [11 x i8] c" has type \00", align 1
@.str.10.46 = private unnamed_addr constant [38 x i8] c" but type of the buffer passed in is \00", align 1
@.str.11.47 = private unnamed_addr constant [31 x i8] c" requires a buffer of exactly \00", align 1
@.str.12.48 = private unnamed_addr constant [43 x i8] c" dimensions, but the buffer passed in has \00", align 1
@.str.13.49 = private unnamed_addr constant [12 x i8] c" dimensions\00", align 1
@.str.14.50 = private unnamed_addr constant [17 x i8] c" is accessed at \00", align 1
@.str.15.51 = private unnamed_addr constant [28 x i8] c", which is before the min (\00", align 1
@.str.16.52 = private unnamed_addr constant [16 x i8] c") in dimension \00", align 1
@.str.17.53 = private unnamed_addr constant [28 x i8] c", which is beyond the max (\00", align 1
@.str.18.54 = private unnamed_addr constant [29 x i8] c"Total allocation for buffer \00", align 1
@.str.19.55 = private unnamed_addr constant [5 x i8] c" is \00", align 1
@.str.20.56 = private unnamed_addr constant [37 x i8] c", which exceeds the maximum size of \00", align 1
@.str.21.57 = private unnamed_addr constant [24 x i8] c"The extents for buffer \00", align 1
@.str.22.58 = private unnamed_addr constant [12 x i8] c" dimension \00", align 1
@.str.23.59 = private unnamed_addr constant [15 x i8] c" is negative (\00", align 1
@.str.24.60 = private unnamed_addr constant [31 x i8] c"Product of extents for buffer \00", align 1
@.str.25.61 = private unnamed_addr constant [29 x i8] c"Applying the constraints on \00", align 1
@.str.26.62 = private unnamed_addr constant [54 x i8] c" to the required region made it smaller in dimension \00", align 1
@.str.27.63 = private unnamed_addr constant [3 x i8] c". \00", align 1
@.str.28.64 = private unnamed_addr constant [16 x i8] c"Required size: \00", align 1
@.str.29.65 = private unnamed_addr constant [19 x i8] c"Constrained size: \00", align 1
@.str.30.66 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.31.67 = private unnamed_addr constant [22 x i8] c"Constraint violated: \00", align 1
@.str.32.68 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.33.69 = private unnamed_addr constant [6 x i8] c") == \00", align 1
@.str.34.70 = private unnamed_addr constant [11 x i8] c"Parameter \00", align 1
@.str.35.71 = private unnamed_addr constant [23 x i8] c" but must be at least \00", align 1
@.str.36.72 = private unnamed_addr constant [22 x i8] c" but must be at most \00", align 1
@.str.37 = private unnamed_addr constant [47 x i8] c"Out of memory (halide_malloc returned nullptr)\00", align 1
@.str.38 = private unnamed_addr constant [17 x i8] c"Buffer argument \00", align 1
@.str.39 = private unnamed_addr constant [12 x i8] c" is nullptr\00", align 1
@.str.40 = private unnamed_addr constant [25 x i8] c"Failed to dump function \00", align 1
@.str.41.73 = private unnamed_addr constant [10 x i8] c" to file \00", align 1
@.str.42 = private unnamed_addr constant [13 x i8] c" with error \00", align 1
@.str.43 = private unnamed_addr constant [21 x i8] c"The host pointer of \00", align 1
@.str.44 = private unnamed_addr constant [22 x i8] c" is not aligned to a \00", align 1
@.str.45 = private unnamed_addr constant [17 x i8] c" bytes boundary.\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c"The buffer \00", align 1
@.str.47 = private unnamed_addr constant [53 x i8] c" is dirty on device, but this pipeline was compiled \00", align 1
@.str.48 = private unnamed_addr constant [43 x i8] c"with no support for device to host copies.\00", align 1
@.str.49 = private unnamed_addr constant [55 x i8] c" is null, but the pipeline will access it on the host.\00", align 1
@.str.50 = private unnamed_addr constant [30 x i8] c"The folded storage dimension \00", align 1
@.str.51 = private unnamed_addr constant [5 x i8] c" of \00", align 1
@.str.52 = private unnamed_addr constant [36 x i8] c" was accessed out of order by loop \00", align 1
@.str.53 = private unnamed_addr constant [23 x i8] c"Cannot fold dimension \00", align 1
@.str.54 = private unnamed_addr constant [36 x i8] c" because an extern stage accesses [\00", align 1
@.str.55 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.56 = private unnamed_addr constant [3 x i8] c"],\00", align 1
@.str.57 = private unnamed_addr constant [47 x i8] c" which is outside the range currently valid: [\00", align 1
@.str.58.74 = private unnamed_addr constant [3 x i8] c"].\00", align 1
@.str.59.75 = private unnamed_addr constant [47 x i8] c" which wraps around the boundary of the fold, \00", align 1
@.str.60.76 = private unnamed_addr constant [30 x i8] c"which occurs at multiples of \00", align 1
@.str.61.77 = private unnamed_addr constant [18 x i8] c"The fold factor (\00", align 1
@.str.62 = private unnamed_addr constant [16 x i8] c") of dimension \00", align 1
@.str.63 = private unnamed_addr constant [61 x i8] c" is too small to store the required region accessed by loop \00", align 1
@.str.64.78 = private unnamed_addr constant [3 x i8] c").\00", align 1
@.str.65 = private unnamed_addr constant [22 x i8] c"Requirement Failed: (\00", align 1
@.str.66 = private unnamed_addr constant [3 x i8] c") \00", align 1
@.str.67 = private unnamed_addr constant [59 x i8] c"A schedule specialized with specialize_fail() was chosen: \00", align 1
@.str.68 = private unnamed_addr constant [55 x i8] c"Buffer has a non-zero device but no device interface.\0A\00", align 1
@.str.69 = private unnamed_addr constant [57 x i8] c"Buffer has a non-null device_interface but device is 0.\0A\00", align 1
@.str.70 = private unnamed_addr constant [49 x i8] c"Buffer has both host and device dirty bits set.\0A\00", align 1
@.str.71 = private unnamed_addr constant [26 x i8] c"Buffer pointer passed to \00", align 1
@.str.72 = private unnamed_addr constant [11 x i8] c" is null.\0A\00", align 1
@.str.73 = private unnamed_addr constant [32 x i8] c"The explicit allocation bound (\00", align 1
@.str.74 = private unnamed_addr constant [45 x i8] c" is too small to store the required region (\00", align 1
@.str.75 = private unnamed_addr constant [77 x i8] c"Buffer could not be cropped (runtime error or unimplemented device option).\0A\00", align 1
@.str.4.91 = private unnamed_addr constant [22 x i8] c"qurt_hvx_lock failed\0A\00", align 1
@.str.7.92 = private unnamed_addr constant [35 x i8] c"Printer buffer allocation failed.\0A\00", align 1
@.str.6.93 = private unnamed_addr constant [24 x i8] c"qurt_hvx_unlock failed\0A\00", align 1
@_ZN6Halide7Runtime8Internal30custom_can_use_target_featuresE = linkonce local_unnamed_addr global i32 (i32, i64*)* @halide_default_can_use_target_features, align 4
@_ZN6Halide7Runtime8Internal36halide_cpu_features_initialized_lockE = linkonce global %struct.halide_mutex zeroinitializer, align 4
@_ZN6Halide7Runtime8Internal31halide_cpu_features_initializedE = linkonce local_unnamed_addr global i8 0, align 1
@_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE = linkonce global [4 x i64] zeroinitializer, align 8
@.str.94 = private unnamed_addr constant [81 x i8] c"Internal error: wrong structure size passed to halide_can_use_target_features()\0A\00", align 1
@0 = private constant i64 0
@1 = private constant [8 x i64*] [i64* @0, i64* null, i64* null, i64* null, i64* null, i64* null, i64* null, i64* null]
@str = private constant [6 x i8] c"input\00", align 32
@str.102 = private constant [11 x i8] c"input_zero\00", align 32
@2 = private constant i64 0
@3 = private constant i64 4
@4 = private constant i64 0
@5 = private constant i64 32
@6 = private constant i64 0
@7 = private constant i64 0
@8 = private constant i64 0
@9 = private constant i64 0
@10 = private constant [12 x i64*] [i64* @2, i64* @3, i64* @4, i64* @5, i64* @6, i64* null, i64* @7, i64* null, i64* @8, i64* null, i64* @9, i64* null]
@str.103 = private constant [7 x i8] c"filter\00", align 32
@str.104 = private constant [12 x i8] c"filter_zero\00", align 32
@11 = private constant i64 0
@12 = private constant [2 x i64*] [i64* @11, i64* null]
@str.105 = private constant [5 x i8] c"bias\00", align 32
@str.106 = private constant [9 x i8] c"stride_x\00", align 32
@str.107 = private constant [9 x i8] c"stride_y\00", align 32
@str.108 = private constant [11 x i8] c"dilation_x\00", align 32
@str.109 = private constant [11 x i8] c"dilation_y\00", align 32
@str.110 = private constant [18 x i8] c"output_multiplier\00", align 32
@str.111 = private constant [13 x i8] c"output_shift\00", align 32
@str.112 = private constant [12 x i8] c"output_zero\00", align 32
@str.113 = private constant [11 x i8] c"output_min\00", align 32
@str.114 = private constant [11 x i8] c"output_max\00", align 32
@13 = private constant i64 0
@14 = private constant [8 x i64*] [i64* @13, i64* null, i64* null, i64* null, i64* null, i64* null, i64* null, i64* null]
@str.115 = private constant [7 x i8] c"output\00", align 32
@15 = private constant [15 x %struct.halide_filter_argument_t] [%struct.halide_filter_argument_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str, i32 0, i32 0), i32 1, i32 4, %struct.halide_type_t { i8 1, i8 8, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** getelementptr inbounds ([8 x i64*], [8 x i64*]* @1, i32 0, i32 0) }, %struct.halide_filter_argument_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.102, i32 0, i32 0), i32 0, i32 0, %struct.halide_type_t { i8 1, i8 8, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** null }, %struct.halide_filter_argument_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.103, i32 0, i32 0), i32 1, i32 6, %struct.halide_type_t { i8 1, i8 8, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** getelementptr inbounds ([12 x i64*], [12 x i64*]* @10, i32 0, i32 0) }, %struct.halide_filter_argument_t { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.104, i32 0, i32 0), i32 0, i32 0, %struct.halide_type_t { i8 1, i8 8, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** null }, %struct.halide_filter_argument_t { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.105, i32 0, i32 0), i32 1, i32 1, %struct.halide_type_t { i8 0, i8 32, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** getelementptr inbounds ([2 x i64*], [2 x i64*]* @12, i32 0, i32 0) }, %struct.halide_filter_argument_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.106, i32 0, i32 0), i32 0, i32 0, %struct.halide_type_t { i8 0, i8 32, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** null }, %struct.halide_filter_argument_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.107, i32 0, i32 0), i32 0, i32 0, %struct.halide_type_t { i8 0, i8 32, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** null }, %struct.halide_filter_argument_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.108, i32 0, i32 0), i32 0, i32 0, %struct.halide_type_t { i8 0, i8 32, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** null }, %struct.halide_filter_argument_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.109, i32 0, i32 0), i32 0, i32 0, %struct.halide_type_t { i8 0, i8 32, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** null }, %struct.halide_filter_argument_t { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str.110, i32 0, i32 0), i32 0, i32 0, %struct.halide_type_t { i8 0, i8 32, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** null }, %struct.halide_filter_argument_t { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.111, i32 0, i32 0), i32 0, i32 0, %struct.halide_type_t { i8 0, i8 32, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** null }, %struct.halide_filter_argument_t { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.112, i32 0, i32 0), i32 0, i32 0, %struct.halide_type_t { i8 1, i8 8, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** null }, %struct.halide_filter_argument_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.113, i32 0, i32 0), i32 0, i32 0, %struct.halide_type_t { i8 1, i8 8, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** null }, %struct.halide_filter_argument_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.114, i32 0, i32 0), i32 0, i32 0, %struct.halide_type_t { i8 1, i8 8, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** null }, %struct.halide_filter_argument_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.115, i32 0, i32 0), i32 2, i32 4, %struct.halide_type_t { i8 1, i8 8, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** getelementptr inbounds ([8 x i64*], [8 x i64*]* @14, i32 0, i32 0) }]
@str.116 = private constant [63 x i8] c"hexagon-32-noos-hvx-hvx_128-hvx_v66-no_asserts-no_bounds_query\00", align 128
@str.117 = private constant [15 x i8] c"conv_nn_hvx128\00", align 32
@conv_nn_hvx128_metadata_storage = private constant %struct.halide_filter_metadata_t { i32 1, i32 15, %struct.halide_filter_argument_t* getelementptr inbounds ([15 x %struct.halide_filter_argument_t], [15 x %struct.halide_filter_argument_t]* @15, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @str.116, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.117, i32 0, i32 0) }
@switch.table.halide_type_to_string = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i32 0, i32 0)], align 4

; Function Attrs: nounwind mustprogress
define linkonce i8* @_ZN6Halide7Runtime8Internal14aligned_mallocEjj(i32 %alignment, i32 %size) local_unnamed_addr #0 {
entry:
  %add = add i32 %alignment, -1
  %sub = add i32 %add, %size
  %neg = sub i32 0, %alignment
  %and = and i32 %sub, %neg
  %add2 = add i32 %and, %alignment
  %call = tail call i8* @malloc(i32 %add2) #14
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %0 = ptrtoint i8* %call to i32
  %add3 = add i32 %alignment, 3
  %sub5 = add i32 %add3, %0
  %and8 = and i32 %sub5, %neg
  %1 = inttoptr i32 %and8 to i8*
  %2 = inttoptr i32 %and8 to i8**
  %arrayidx = getelementptr inbounds i8*, i8** %2, i32 -1
  store i8* %call, i8** %arrayidx, align 4, !tbaa !10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i8* [ %1, %if.end ], [ null, %entry ]
  ret i8* %retval.0
}

declare i8* @malloc(i32) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal12aligned_freeEPv(i8* %ptr) local_unnamed_addr #0 {
entry:
  %tobool.not = icmp eq i8* %ptr, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds i8, i8* %ptr, i32 -4
  %0 = bitcast i8* %arrayidx to i8**
  %1 = load i8*, i8** %0, align 4, !tbaa !10
  tail call void @free(i8* %1) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

declare void @free(i8*) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal24halide_allocator_cleanupEv() #0 {
entry:
  %0 = load i8*, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 0), align 4, !tbaa !10
  tail call void @_ZN6Halide7Runtime8Internal12aligned_freeEPv(i8* %0) #15
  %1 = load i8*, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 1), align 4, !tbaa !10
  tail call void @_ZN6Halide7Runtime8Internal12aligned_freeEPv(i8* %1) #15
  %2 = load i8*, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 2), align 4, !tbaa !10
  tail call void @_ZN6Halide7Runtime8Internal12aligned_freeEPv(i8* %2) #15
  %3 = load i8*, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 3), align 4, !tbaa !10
  tail call void @_ZN6Halide7Runtime8Internal12aligned_freeEPv(i8* %3) #15
  %4 = load i8*, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 4), align 4, !tbaa !10
  tail call void @_ZN6Halide7Runtime8Internal12aligned_freeEPv(i8* %4) #15
  %5 = load i8*, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 5), align 4, !tbaa !10
  tail call void @_ZN6Halide7Runtime8Internal12aligned_freeEPv(i8* %5) #15
  %6 = load i8*, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 6), align 4, !tbaa !10
  tail call void @_ZN6Halide7Runtime8Internal12aligned_freeEPv(i8* %6) #15
  %7 = load i8*, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 7), align 4, !tbaa !10
  tail call void @_ZN6Halide7Runtime8Internal12aligned_freeEPv(i8* %7) #15
  %8 = load i8*, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 8), align 4, !tbaa !10
  tail call void @_ZN6Halide7Runtime8Internal12aligned_freeEPv(i8* %8) #15
  %9 = load i8*, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 9), align 4, !tbaa !10
  tail call void @_ZN6Halide7Runtime8Internal12aligned_freeEPv(i8* %9) #15
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_default_malloc(i8* %user_context, i32 %x) #0 {
entry:
  %cmp = icmp ult i32 %x, 65537
  br i1 %cmp, label %for.body.preheader, label %if.end9

for.body.preheader:                               ; preds = %entry
  %0 = cmpxchg i32* getelementptr inbounds ([10 x i32], [10 x i32]* @_ZN6Halide7Runtime8Internal11buf_is_usedE, i32 0, i32 0), i32 0, i32 1 seq_cst seq_cst
  %cmp2 = extractvalue { i32, i1 } %0, 1
  br i1 %cmp2, label %for.body.preheader.if.then3_crit_edge, label %for.inc

for.body.preheader.if.then3_crit_edge:            ; preds = %for.body.preheader
  %arrayidx.0 = getelementptr inbounds [10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 0
  br label %if.then3

if.then3:                                         ; preds = %for.inc.8.if.then3_crit_edge, %for.inc.7.if.then3_crit_edge, %for.inc.6.if.then3_crit_edge, %for.inc.5.if.then3_crit_edge, %for.inc.4.if.then3_crit_edge, %for.inc.3.if.then3_crit_edge, %for.inc.2.if.then3_crit_edge, %for.inc.1.if.then3_crit_edge, %for.inc.if.then3_crit_edge, %for.body.preheader.if.then3_crit_edge
  %arrayidx.phi = phi i8** [ %arrayidx.0, %for.body.preheader.if.then3_crit_edge ], [ %arrayidx.1, %for.inc.if.then3_crit_edge ], [ %arrayidx.2, %for.inc.1.if.then3_crit_edge ], [ %arrayidx.3, %for.inc.2.if.then3_crit_edge ], [ %arrayidx.4, %for.inc.3.if.then3_crit_edge ], [ %arrayidx.5, %for.inc.4.if.then3_crit_edge ], [ %arrayidx.6, %for.inc.5.if.then3_crit_edge ], [ %arrayidx.7, %for.inc.6.if.then3_crit_edge ], [ %arrayidx.8, %for.inc.7.if.then3_crit_edge ], [ %arrayidx.9, %for.inc.8.if.then3_crit_edge ]
  %1 = load i8*, i8** %arrayidx.phi, align 4, !tbaa !10
  %cmp4 = icmp eq i8* %1, null
  br i1 %cmp4, label %if.then5, label %cleanup11

if.then5:                                         ; preds = %if.then3
  %call = tail call i8* @_ZN6Halide7Runtime8Internal14aligned_mallocEjj(i32 128, i32 65536) #15
  store i8* %call, i8** %arrayidx.phi, align 4, !tbaa !10
  br label %cleanup11

for.inc:                                          ; preds = %for.body.preheader
  %2 = cmpxchg i32* getelementptr inbounds ([10 x i32], [10 x i32]* @_ZN6Halide7Runtime8Internal11buf_is_usedE, i32 0, i32 1), i32 0, i32 1 seq_cst seq_cst
  %cmp2.1 = extractvalue { i32, i1 } %2, 1
  br i1 %cmp2.1, label %for.inc.if.then3_crit_edge, label %for.inc.1

for.inc.if.then3_crit_edge:                       ; preds = %for.inc
  %arrayidx.1 = getelementptr inbounds [10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 1
  br label %if.then3

if.end9:                                          ; preds = %for.inc.8, %entry
  %call10 = tail call i8* @_ZN6Halide7Runtime8Internal14aligned_mallocEjj(i32 128, i32 %x) #15
  br label %cleanup11

cleanup11:                                        ; preds = %if.end9, %if.then5, %if.then3
  %retval.1 = phi i8* [ %call10, %if.end9 ], [ %1, %if.then3 ], [ %call, %if.then5 ]
  ret i8* %retval.1

for.inc.1:                                        ; preds = %for.inc
  %3 = cmpxchg i32* getelementptr inbounds ([10 x i32], [10 x i32]* @_ZN6Halide7Runtime8Internal11buf_is_usedE, i32 0, i32 2), i32 0, i32 1 seq_cst seq_cst
  %cmp2.2 = extractvalue { i32, i1 } %3, 1
  br i1 %cmp2.2, label %for.inc.1.if.then3_crit_edge, label %for.inc.2

for.inc.1.if.then3_crit_edge:                     ; preds = %for.inc.1
  %arrayidx.2 = getelementptr inbounds [10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 2
  br label %if.then3

for.inc.2:                                        ; preds = %for.inc.1
  %4 = cmpxchg i32* getelementptr inbounds ([10 x i32], [10 x i32]* @_ZN6Halide7Runtime8Internal11buf_is_usedE, i32 0, i32 3), i32 0, i32 1 seq_cst seq_cst
  %cmp2.3 = extractvalue { i32, i1 } %4, 1
  br i1 %cmp2.3, label %for.inc.2.if.then3_crit_edge, label %for.inc.3

for.inc.2.if.then3_crit_edge:                     ; preds = %for.inc.2
  %arrayidx.3 = getelementptr inbounds [10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 3
  br label %if.then3

for.inc.3:                                        ; preds = %for.inc.2
  %5 = cmpxchg i32* getelementptr inbounds ([10 x i32], [10 x i32]* @_ZN6Halide7Runtime8Internal11buf_is_usedE, i32 0, i32 4), i32 0, i32 1 seq_cst seq_cst
  %cmp2.4 = extractvalue { i32, i1 } %5, 1
  br i1 %cmp2.4, label %for.inc.3.if.then3_crit_edge, label %for.inc.4

for.inc.3.if.then3_crit_edge:                     ; preds = %for.inc.3
  %arrayidx.4 = getelementptr inbounds [10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 4
  br label %if.then3

for.inc.4:                                        ; preds = %for.inc.3
  %6 = cmpxchg i32* getelementptr inbounds ([10 x i32], [10 x i32]* @_ZN6Halide7Runtime8Internal11buf_is_usedE, i32 0, i32 5), i32 0, i32 1 seq_cst seq_cst
  %cmp2.5 = extractvalue { i32, i1 } %6, 1
  br i1 %cmp2.5, label %for.inc.4.if.then3_crit_edge, label %for.inc.5

for.inc.4.if.then3_crit_edge:                     ; preds = %for.inc.4
  %arrayidx.5 = getelementptr inbounds [10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 5
  br label %if.then3

for.inc.5:                                        ; preds = %for.inc.4
  %7 = cmpxchg i32* getelementptr inbounds ([10 x i32], [10 x i32]* @_ZN6Halide7Runtime8Internal11buf_is_usedE, i32 0, i32 6), i32 0, i32 1 seq_cst seq_cst
  %cmp2.6 = extractvalue { i32, i1 } %7, 1
  br i1 %cmp2.6, label %for.inc.5.if.then3_crit_edge, label %for.inc.6

for.inc.5.if.then3_crit_edge:                     ; preds = %for.inc.5
  %arrayidx.6 = getelementptr inbounds [10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 6
  br label %if.then3

for.inc.6:                                        ; preds = %for.inc.5
  %8 = cmpxchg i32* getelementptr inbounds ([10 x i32], [10 x i32]* @_ZN6Halide7Runtime8Internal11buf_is_usedE, i32 0, i32 7), i32 0, i32 1 seq_cst seq_cst
  %cmp2.7 = extractvalue { i32, i1 } %8, 1
  br i1 %cmp2.7, label %for.inc.6.if.then3_crit_edge, label %for.inc.7

for.inc.6.if.then3_crit_edge:                     ; preds = %for.inc.6
  %arrayidx.7 = getelementptr inbounds [10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 7
  br label %if.then3

for.inc.7:                                        ; preds = %for.inc.6
  %9 = cmpxchg i32* getelementptr inbounds ([10 x i32], [10 x i32]* @_ZN6Halide7Runtime8Internal11buf_is_usedE, i32 0, i32 8), i32 0, i32 1 seq_cst seq_cst
  %cmp2.8 = extractvalue { i32, i1 } %9, 1
  br i1 %cmp2.8, label %for.inc.7.if.then3_crit_edge, label %for.inc.8

for.inc.7.if.then3_crit_edge:                     ; preds = %for.inc.7
  %arrayidx.8 = getelementptr inbounds [10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 8
  br label %if.then3

for.inc.8:                                        ; preds = %for.inc.7
  %10 = cmpxchg i32* getelementptr inbounds ([10 x i32], [10 x i32]* @_ZN6Halide7Runtime8Internal11buf_is_usedE, i32 0, i32 9), i32 0, i32 1 seq_cst seq_cst
  %cmp2.9 = extractvalue { i32, i1 } %10, 1
  br i1 %cmp2.9, label %for.inc.8.if.then3_crit_edge, label %if.end9

for.inc.8.if.then3_crit_edge:                     ; preds = %for.inc.8
  %arrayidx.9 = getelementptr inbounds [10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 9
  br label %if.then3
}

; Function Attrs: nounwind mustprogress
define weak void @halide_default_free(i8* %user_context, i8* %ptr) #0 {
entry:
  %0 = load i8*, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 0), align 4, !tbaa !10
  %cmp1 = icmp eq i8* %0, %ptr
  br i1 %cmp1, label %entry.if.then_crit_edge, label %for.inc

entry.if.then_crit_edge:                          ; preds = %entry
  %arrayidx2.0 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN6Halide7Runtime8Internal11buf_is_usedE, i32 0, i32 0
  br label %if.then

if.then:                                          ; preds = %for.inc.8.if.then_crit_edge, %for.inc.7.if.then_crit_edge, %for.inc.6.if.then_crit_edge, %for.inc.5.if.then_crit_edge, %for.inc.4.if.then_crit_edge, %for.inc.3.if.then_crit_edge, %for.inc.2.if.then_crit_edge, %for.inc.1.if.then_crit_edge, %for.inc.if.then_crit_edge, %entry.if.then_crit_edge
  %arrayidx2.phi = phi i32* [ %arrayidx2.0, %entry.if.then_crit_edge ], [ %arrayidx2.1, %for.inc.if.then_crit_edge ], [ %arrayidx2.2, %for.inc.1.if.then_crit_edge ], [ %arrayidx2.3, %for.inc.2.if.then_crit_edge ], [ %arrayidx2.4, %for.inc.3.if.then_crit_edge ], [ %arrayidx2.5, %for.inc.4.if.then_crit_edge ], [ %arrayidx2.6, %for.inc.5.if.then_crit_edge ], [ %arrayidx2.7, %for.inc.6.if.then_crit_edge ], [ %arrayidx2.8, %for.inc.7.if.then_crit_edge ], [ %arrayidx2.9, %for.inc.8.if.then_crit_edge ]
  store i32 0, i32* %arrayidx2.phi, align 4, !tbaa !14
  br label %return

for.inc:                                          ; preds = %entry
  %1 = load i8*, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 1), align 4, !tbaa !10
  %cmp1.1 = icmp eq i8* %1, %ptr
  br i1 %cmp1.1, label %for.inc.if.then_crit_edge, label %for.inc.1

for.inc.if.then_crit_edge:                        ; preds = %for.inc
  %arrayidx2.1 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN6Halide7Runtime8Internal11buf_is_usedE, i32 0, i32 1
  br label %if.then

return:                                           ; preds = %for.inc.9, %if.then
  ret void

for.inc.1:                                        ; preds = %for.inc
  %2 = load i8*, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 2), align 4, !tbaa !10
  %cmp1.2 = icmp eq i8* %2, %ptr
  br i1 %cmp1.2, label %for.inc.1.if.then_crit_edge, label %for.inc.2

for.inc.1.if.then_crit_edge:                      ; preds = %for.inc.1
  %arrayidx2.2 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN6Halide7Runtime8Internal11buf_is_usedE, i32 0, i32 2
  br label %if.then

for.inc.2:                                        ; preds = %for.inc.1
  %3 = load i8*, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 3), align 4, !tbaa !10
  %cmp1.3 = icmp eq i8* %3, %ptr
  br i1 %cmp1.3, label %for.inc.2.if.then_crit_edge, label %for.inc.3

for.inc.2.if.then_crit_edge:                      ; preds = %for.inc.2
  %arrayidx2.3 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN6Halide7Runtime8Internal11buf_is_usedE, i32 0, i32 3
  br label %if.then

for.inc.3:                                        ; preds = %for.inc.2
  %4 = load i8*, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 4), align 4, !tbaa !10
  %cmp1.4 = icmp eq i8* %4, %ptr
  br i1 %cmp1.4, label %for.inc.3.if.then_crit_edge, label %for.inc.4

for.inc.3.if.then_crit_edge:                      ; preds = %for.inc.3
  %arrayidx2.4 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN6Halide7Runtime8Internal11buf_is_usedE, i32 0, i32 4
  br label %if.then

for.inc.4:                                        ; preds = %for.inc.3
  %5 = load i8*, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 5), align 4, !tbaa !10
  %cmp1.5 = icmp eq i8* %5, %ptr
  br i1 %cmp1.5, label %for.inc.4.if.then_crit_edge, label %for.inc.5

for.inc.4.if.then_crit_edge:                      ; preds = %for.inc.4
  %arrayidx2.5 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN6Halide7Runtime8Internal11buf_is_usedE, i32 0, i32 5
  br label %if.then

for.inc.5:                                        ; preds = %for.inc.4
  %6 = load i8*, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 6), align 4, !tbaa !10
  %cmp1.6 = icmp eq i8* %6, %ptr
  br i1 %cmp1.6, label %for.inc.5.if.then_crit_edge, label %for.inc.6

for.inc.5.if.then_crit_edge:                      ; preds = %for.inc.5
  %arrayidx2.6 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN6Halide7Runtime8Internal11buf_is_usedE, i32 0, i32 6
  br label %if.then

for.inc.6:                                        ; preds = %for.inc.5
  %7 = load i8*, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 7), align 4, !tbaa !10
  %cmp1.7 = icmp eq i8* %7, %ptr
  br i1 %cmp1.7, label %for.inc.6.if.then_crit_edge, label %for.inc.7

for.inc.6.if.then_crit_edge:                      ; preds = %for.inc.6
  %arrayidx2.7 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN6Halide7Runtime8Internal11buf_is_usedE, i32 0, i32 7
  br label %if.then

for.inc.7:                                        ; preds = %for.inc.6
  %8 = load i8*, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 8), align 4, !tbaa !10
  %cmp1.8 = icmp eq i8* %8, %ptr
  br i1 %cmp1.8, label %for.inc.7.if.then_crit_edge, label %for.inc.8

for.inc.7.if.then_crit_edge:                      ; preds = %for.inc.7
  %arrayidx2.8 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN6Halide7Runtime8Internal11buf_is_usedE, i32 0, i32 8
  br label %if.then

for.inc.8:                                        ; preds = %for.inc.7
  %9 = load i8*, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZN6Halide7Runtime8Internal7mem_bufE, i32 0, i32 9), align 4, !tbaa !10
  %cmp1.9 = icmp eq i8* %9, %ptr
  br i1 %cmp1.9, label %for.inc.8.if.then_crit_edge, label %for.inc.9

for.inc.8.if.then_crit_edge:                      ; preds = %for.inc.8
  %arrayidx2.9 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN6Halide7Runtime8Internal11buf_is_usedE, i32 0, i32 9
  br label %if.then

for.inc.9:                                        ; preds = %for.inc.8
  tail call void @_ZN6Halide7Runtime8Internal12aligned_freeEPv(i8* %ptr) #15
  br label %return
}

; Function Attrs: nounwind mustprogress
define weak i8* (i8*, i32)* @halide_set_custom_malloc(i8* (i8*, i32)* %user_malloc) local_unnamed_addr #0 {
entry:
  tail call void @halide_print(i8* null, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i32 0, i32 0)) #14
  %0 = load i8* (i8*, i32)*, i8* (i8*, i32)** @_ZN6Halide7Runtime8Internal13custom_mallocE, align 4, !tbaa !10
  store i8* (i8*, i32)* %user_malloc, i8* (i8*, i32)** @_ZN6Halide7Runtime8Internal13custom_mallocE, align 4, !tbaa !10
  ret i8* (i8*, i32)* %0
}

declare void @halide_print(i8*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak void (i8*, i8*)* @halide_set_custom_free(void (i8*, i8*)* %user_free) local_unnamed_addr #0 {
entry:
  tail call void @halide_print(i8* null, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i32 0, i32 0)) #14
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal11custom_freeE, align 4, !tbaa !10
  store void (i8*, i8*)* %user_free, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal11custom_freeE, align 4, !tbaa !10
  ret void (i8*, i8*)* %0
}

; Function Attrs: nounwind mustprogress
define weak noalias i8* @halide_malloc(i8* %user_context, i32 %x) local_unnamed_addr #0 {
entry:
  %call = tail call i8* @halide_default_malloc(i8* %user_context, i32 %x) #15
  ret i8* %call
}

; Function Attrs: nounwind mustprogress
define weak void @halide_free(i8* %user_context, i8* %ptr) local_unnamed_addr #0 {
entry:
  tail call void @halide_default_free(i8* %user_context, i8* %ptr) #15
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_do_task(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %idx, i8* %closure) #0 {
entry:
  %call = tail call i32 %f(i8* %user_context, i32 %idx, i8* %closure) #14
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_do_loop_task(i8* %user_context, i32 (i8*, i32, i32, i8*, i8*)* %f, i32 %min, i32 %extent, i8* %closure, i8* %task_parent) #0 {
entry:
  %call = tail call i32 %f(i8* %user_context, i32 %min, i32 %extent, i8* %closure, i8* %task_parent) #14
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_do_par_for(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %min, i32 %size, i8* %closure) #0 {
entry:
  %add = add nsw i32 %size, %min
  %cmp11 = icmp sgt i32 %size, 0
  br i1 %cmp11, label %for.body, label %cleanup1

for.cond:                                         ; preds = %for.body
  %cmp = icmp slt i32 %inc, %add
  br i1 %cmp, label %for.body, label %cleanup1, !llvm.loop !16

for.body:                                         ; preds = %entry, %for.cond
  %x.012 = phi i32 [ %inc, %for.cond ], [ %min, %entry ]
  %call = tail call i32 @halide_do_task(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %x.012, i8* %closure) #15
  %tobool.not = icmp eq i32 %call, 0
  %inc = add nsw i32 %x.012, 1
  br i1 %tobool.not, label %for.cond, label %cleanup1

cleanup1:                                         ; preds = %for.body, %for.cond, %entry
  %spec.select = phi i32 [ 0, %entry ], [ %call, %for.body ], [ 0, %for.cond ]
  ret i32 %spec.select
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_do_task(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %idx, i8* %closure) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)*, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)** @_ZN6Halide7Runtime8Internal14custom_do_taskE, align 4, !tbaa !10
  %call = tail call i32 %0(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %idx, i8* %closure) #14
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_do_parallel_tasks(i8* %user_context, i32 %num_tasks, %struct.halide_parallel_task_t* %tasks, i8* %task_parent) #0 {
entry:
  tail call void @halide_error(i8* null, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i32 0, i32 0)) #14
  ret i32 -1
}

declare void @halide_error(i8*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_semaphore_init(%struct.halide_semaphore_t* %s, i32 %n) #0 {
entry:
  tail call void @halide_error(i8* null, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1.2, i32 0, i32 0)) #14
  ret i32 0
}

; Function Attrs: nounwind mustprogress
define weak zeroext i1 @halide_default_semaphore_try_acquire(%struct.halide_semaphore_t* %s, i32 %n) #0 {
entry:
  tail call void @halide_error(i8* null, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.3, i32 0, i32 0)) #14
  ret i1 false
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_semaphore_release(%struct.halide_semaphore_t* %s, i32 %n) #0 {
entry:
  tail call void @halide_error(i8* null, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.2, i32 0, i32 0)) #14
  ret i32 0
}

; Function Attrs: nounwind mustprogress
define weak %struct.halide_thread* @halide_spawn_thread(void (i8*)* %f, i8* %closure) local_unnamed_addr #0 {
entry:
  tail call void @halide_error(i8* null, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.4, i32 0, i32 0)) #14
  ret %struct.halide_thread* null
}

; Function Attrs: nounwind mustprogress
define weak void @halide_join_thread(%struct.halide_thread* %thread_arg) local_unnamed_addr #0 {
entry:
  tail call void @halide_error(i8* null, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.5, i32 0, i32 0)) #14
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_mutex_lock(%struct.halide_mutex* %mutex) local_unnamed_addr #2 {
entry:
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_mutex_unlock(%struct.halide_mutex* %mutex) local_unnamed_addr #2 {
entry:
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak %struct.halide_mutex_array* @halide_mutex_array_create(i32 %sz) local_unnamed_addr #2 {
entry:
  ret %struct.halide_mutex_array* @_ZN6Halide7Runtime8Internal23halide_fake_mutex_arrayE
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_mutex_array_destroy(i8* %user_context, i8* %array) local_unnamed_addr #2 {
entry:
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_mutex_array_lock(%struct.halide_mutex_array* %array, i32 %entry1) local_unnamed_addr #2 {
entry:
  ret i32 0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_mutex_array_unlock(%struct.halide_mutex_array* %array, i32 %entry1) local_unnamed_addr #2 {
entry:
  ret i32 0
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_shutdown_thread_pool() local_unnamed_addr #2 {
entry:
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_set_num_threads(i32 %n) local_unnamed_addr #0 {
entry:
  %cmp.not = icmp eq i32 %n, 1
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @halide_error(i8* null, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.6, i32 0, i32 0)) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i32 1
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* @halide_set_custom_do_task(i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)*, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)** @_ZN6Halide7Runtime8Internal14custom_do_taskE, align 4, !tbaa !10
  store i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %f, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)** @_ZN6Halide7Runtime8Internal14custom_do_taskE, align 4, !tbaa !10
  ret i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* @halide_set_custom_do_par_for(i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)*, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)** @_ZN6Halide7Runtime8Internal17custom_do_par_forE, align 4, !tbaa !10
  store i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %f, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)** @_ZN6Halide7Runtime8Internal17custom_do_par_forE, align 4, !tbaa !10
  ret i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_do_par_for(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %min, i32 %size, i8* %closure) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)*, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)** @_ZN6Halide7Runtime8Internal17custom_do_par_forE, align 4, !tbaa !10
  %call = tail call i32 %0(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %min, i32 %size, i8* %closure) #14
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_do_loop_task(i8* %user_context, i32 (i8*, i32, i32, i8*, i8*)* %f, i32 %min, i32 %size, i8* %closure, i8* %task_parent) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)*, i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)** @_ZN6Halide7Runtime8Internal19custom_do_loop_taskE, align 4, !tbaa !10
  %call = tail call i32 %0(i8* %user_context, i32 (i8*, i32, i32, i8*, i8*)* %f, i32 %min, i32 %size, i8* %closure, i8* %task_parent) #14
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_do_parallel_tasks(i8* %user_context, i32 %num_tasks, %struct.halide_parallel_task_t* %tasks, i8* %task_parent) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)*, i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)** @_ZN6Halide7Runtime8Internal24custom_do_parallel_tasksE, align 4, !tbaa !10
  %call = tail call i32 %0(i8* %user_context, i32 %num_tasks, %struct.halide_parallel_task_t* %tasks, i8* %task_parent) #14
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_semaphore_init(%struct.halide_semaphore_t* %sema, i32 %count) local_unnamed_addr #0 {
entry:
  %0 = load i32 (%struct.halide_semaphore_t*, i32)*, i32 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal21custom_semaphore_initE, align 4, !tbaa !10
  %call = tail call i32 %0(%struct.halide_semaphore_t* %sema, i32 %count) #14
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_semaphore_release(%struct.halide_semaphore_t* %sema, i32 %count) local_unnamed_addr #0 {
entry:
  %0 = load i32 (%struct.halide_semaphore_t*, i32)*, i32 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal24custom_semaphore_releaseE, align 4, !tbaa !10
  %call = tail call i32 %0(%struct.halide_semaphore_t* %sema, i32 %count) #14
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak zeroext i1 @halide_semaphore_try_acquire(%struct.halide_semaphore_t* %sema, i32 %count) local_unnamed_addr #0 {
entry:
  %0 = load i1 (%struct.halide_semaphore_t*, i32)*, i1 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal28custom_semaphore_try_acquireE, align 4, !tbaa !10
  %call = tail call zeroext i1 %0(%struct.halide_semaphore_t* %sema, i32 %count) #14
  ret i1 %call
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #3

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_set_gpu_device(i32 %d) local_unnamed_addr #2 {
entry:
  store i32 %d, i32* @_ZN6Halide7Runtime8Internal17halide_gpu_deviceE, align 4, !tbaa !14
  store i8 1, i8* @_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE, align 1, !tbaa !18
  ret void
}

; Function Attrs: nounwind
define weak i32 @halide_get_gpu_device(i8* %user_context) local_unnamed_addr #4 {
entry:
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i, %entry
  %0 = atomicrmw volatile xchg i8* @_ZN6Halide7Runtime8Internal22halide_gpu_device_lockE, i8 1 acquire
  %tobool.not.i = icmp eq i8 %0, 0
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit, label %while.cond.i, !llvm.loop !20

_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit: ; preds = %while.cond.i
  %1 = load i8, i8* @_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE, align 1, !tbaa !18, !range !21
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %if.then, label %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit.if.end4_crit_edge

_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit.if.end4_crit_edge: ; preds = %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  %.pre = load i32, i32* @_ZN6Halide7Runtime8Internal17halide_gpu_deviceE, align 4, !tbaa !14
  br label %if.end4

if.then:                                          ; preds = %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  %call = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0)) #14
  %tobool1.not = icmp eq i8* %call, null
  br i1 %tobool1.not, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  %call3 = tail call i32 @atoi(i8* nonnull %call) #14
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %storemerge = phi i32 [ %call3, %if.then2 ], [ -1, %if.then ]
  store i32 %storemerge, i32* @_ZN6Halide7Runtime8Internal17halide_gpu_deviceE, align 4, !tbaa !14
  store i8 1, i8* @_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE, align 1, !tbaa !18
  br label %if.end4

if.end4:                                          ; preds = %if.end, %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit.if.end4_crit_edge
  %2 = phi i32 [ %.pre, %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit.if.end4_crit_edge ], [ %storemerge, %if.end ]
  store atomic volatile i8 0, i8* @_ZN6Halide7Runtime8Internal22halide_gpu_device_lockE release, align 1
  ret i32 %2
}

declare i8* @getenv(i8*) local_unnamed_addr #1

declare i32 @atoi(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
define weak i8* @halide_string_to_string(i8* %dst, i8* %end, i8* %arg) local_unnamed_addr #4 {
entry:
  %cmp.not = icmp ult i8* %dst, %end
  br i1 %cmp.not, label %if.end, label %return

if.end:                                           ; preds = %entry
  %tobool.not = icmp eq i8* %arg, null
  %spec.select = select i1 %tobool.not, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i32 0, i32 0), i8* %arg
  br label %if.end5

if.then4:                                         ; preds = %if.end8
  store i8 0, i8* %dst.addr.023, align 1, !tbaa !22
  br label %return

if.end5:                                          ; preds = %if.end8, %if.end
  %arg.addr.124 = phi i8* [ %spec.select, %if.end ], [ %incdec.ptr9, %if.end8 ]
  %dst.addr.023 = phi i8* [ %dst, %if.end ], [ %incdec.ptr, %if.end8 ]
  %0 = load i8, i8* %arg.addr.124, align 1, !tbaa !22
  store i8 %0, i8* %dst.addr.023, align 1, !tbaa !22
  %cmp6 = icmp eq i8 %0, 0
  br i1 %cmp6, label %return, label %if.end8

if.end8:                                          ; preds = %if.end5
  %incdec.ptr = getelementptr inbounds i8, i8* %dst.addr.023, i32 1
  %incdec.ptr9 = getelementptr inbounds i8, i8* %arg.addr.124, i32 1
  %cmp3 = icmp eq i8* %incdec.ptr, %end
  br i1 %cmp3, label %if.then4, label %if.end5

return:                                           ; preds = %if.end5, %if.then4, %entry
  %retval.0 = phi i8* [ %end, %if.then4 ], [ %dst, %entry ], [ %dst.addr.023, %if.end5 ]
  ret i8* %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_uint64_to_string(i8* %dst, i8* %end, i64 %arg, i32 %min_digits) local_unnamed_addr #0 {
entry:
  %buf = alloca [32 x i8], align 1
  %0 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #11
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 31
  store i8 0, i8* %arrayidx, align 1, !tbaa !22
  %add.ptr = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 30
  %cmp13 = icmp sgt i32 %min_digits, 0
  %tobool14 = icmp ne i64 %arg, 0
  %1 = or i1 %tobool14, %cmp13
  br i1 %1, label %entry.for.body_crit_edge, label %for.cond.cleanup

entry.for.body_crit_edge:                         ; preds = %entry
  %inc.1 = add nuw nsw i32 0, 1
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %digits.0.lcssa = phi i8* [ %add.ptr, %entry ], [ %incdec.ptr, %for.body ]
  %incdec.ptr1 = getelementptr inbounds i8, i8* %digits.0.lcssa, i32 1
  %call = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* nonnull %incdec.ptr1) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #11
  ret i8* %call

for.body:                                         ; preds = %entry.for.body_crit_edge, %for.body.for.body_crit_edge
  %arg.addr.017 = phi i64 [ %div, %for.body.for.body_crit_edge ], [ %arg, %entry.for.body_crit_edge ]
  %digits.016 = phi i8* [ %incdec.ptr, %for.body.for.body_crit_edge ], [ %add.ptr, %entry.for.body_crit_edge ]
  %inc.phi = phi i32 [ %inc.0, %for.body.for.body_crit_edge ], [ %inc.1, %entry.for.body_crit_edge ]
  %div = udiv i64 %arg.addr.017, 10
  %mul.neg = mul i64 %div, -10
  %sub = add i64 %mul.neg, %arg.addr.017
  %2 = trunc i64 %sub to i8
  %conv = add i8 %2, 48
  store i8 %conv, i8* %digits.016, align 1, !tbaa !22
  %incdec.ptr = getelementptr inbounds i8, i8* %digits.016, i32 -1
  %cmp = icmp slt i32 %inc.phi, %min_digits
  %3 = icmp ugt i64 %arg.addr.017, 9
  %4 = or i1 %3, %cmp
  br i1 %4, label %for.body.for.body_crit_edge, label %for.cond.cleanup, !llvm.loop !23

for.body.for.body_crit_edge:                      ; preds = %for.body
  %inc.0 = add nuw nsw i32 %inc.phi, 1
  br label %for.body
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind mustprogress
define weak i8* @halide_int64_to_string(i8* %dst, i8* %end, i64 %arg, i32 %min_digits) local_unnamed_addr #0 {
entry:
  %cmp = icmp slt i64 %arg, 0
  %cmp1 = icmp ult i8* %dst, %end
  %or.cond = and i1 %cmp1, %cmp
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %dst, i32 1
  store i8 45, i8* %dst, align 1, !tbaa !22
  %sub = sub nsw i64 0, %arg
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %arg.addr.0 = phi i64 [ %sub, %if.then ], [ %arg, %entry ]
  %dst.addr.0 = phi i8* [ %incdec.ptr, %if.then ], [ %dst, %entry ]
  %call = tail call i8* @halide_uint64_to_string(i8* %dst.addr.0, i8* %end, i64 %arg.addr.0, i32 %min_digits) #15
  ret i8* %call
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_double_to_string(i8* %dst, i8* %end, double %arg, i32 %scientific) local_unnamed_addr #0 {
entry:
  %arg.addr = alloca double, align 8
  %bits = alloca i64, align 8
  %buf = alloca [512 x i8], align 1
  store double %arg, double* %arg.addr, align 8, !tbaa !24
  %0 = bitcast i64* %bits to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #11
  store i64 0, i64* %bits, align 8, !tbaa !26
  %1 = bitcast double* %arg.addr to i8*
  %call = call i8* @memcpy(i8* nonnull %0, i8* nonnull %1, i32 8) #14
  %2 = load i64, i64* %bits, align 8, !tbaa !26
  %and = and i64 %2, 4503599627370495
  %shr = lshr i64 %2, 52
  %3 = trunc i64 %shr to i32
  %conv = and i32 %3, 2047
  %cmp = icmp eq i32 %conv, 2047
  br i1 %cmp, label %if.then, label %if.else15

if.then:                                          ; preds = %entry
  %tobool.not = icmp eq i64 %and, 0
  %tobool10.not = icmp sgt i64 %2, -1
  br i1 %tobool.not, label %if.else9, label %if.then4

if.then4:                                         ; preds = %if.then
  br i1 %tobool10.not, label %if.else, label %if.then6

if.then6:                                         ; preds = %if.then4
  %call7 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.9, i32 0, i32 0)) #15
  br label %cleanup147

if.else:                                          ; preds = %if.then4
  %call8 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.10, i32 0, i32 0)) #15
  br label %cleanup147

if.else9:                                         ; preds = %if.then
  br i1 %tobool10.not, label %if.else13, label %if.then11

if.then11:                                        ; preds = %if.else9
  %call12 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.11, i32 0, i32 0)) #15
  br label %cleanup147

if.else13:                                        ; preds = %if.else9
  %call14 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.12, i32 0, i32 0)) #15
  br label %cleanup147

if.else15:                                        ; preds = %entry
  %cmp16 = icmp eq i32 %conv, 0
  %cmp17 = icmp eq i64 %and, 0
  %or.cond = and i1 %cmp17, %cmp16
  br i1 %or.cond, label %if.then18, label %if.end32

if.then18:                                        ; preds = %if.else15
  %tobool19.not = icmp eq i32 %scientific, 0
  %tobool27.not = icmp sgt i64 %2, -1
  br i1 %tobool19.not, label %if.else26, label %if.then20

if.then20:                                        ; preds = %if.then18
  br i1 %tobool27.not, label %if.else24, label %if.then22

if.then22:                                        ; preds = %if.then20
  %call23 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.13, i32 0, i32 0)) #15
  br label %cleanup147

if.else24:                                        ; preds = %if.then20
  %call25 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6.14, i32 0, i32 0)) #15
  br label %cleanup147

if.else26:                                        ; preds = %if.then18
  br i1 %tobool27.not, label %if.else30, label %if.then28

if.then28:                                        ; preds = %if.else26
  %call29 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7.15, i32 0, i32 0)) #15
  br label %cleanup147

if.else30:                                        ; preds = %if.else26
  %call31 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8.16, i32 0, i32 0)) #15
  br label %cleanup147

if.end32:                                         ; preds = %if.else15
  %tobool33.not = icmp sgt i64 %2, -1
  br i1 %tobool33.not, label %if.end36, label %if.then34

if.then34:                                        ; preds = %if.end32
  %call35 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0)) #15
  %4 = load double, double* %arg.addr, align 8, !tbaa !24
  %fneg = fneg double %4
  store double %fneg, double* %arg.addr, align 8, !tbaa !24
  br label %if.end36

if.end36:                                         ; preds = %if.then34, %if.end32
  %dst.addr.0 = phi i8* [ %call35, %if.then34 ], [ %dst, %if.end32 ]
  %tobool37.not = icmp eq i32 %scientific, 0
  br i1 %tobool37.not, label %if.else61, label %while.condthread-pre-split

while.condthread-pre-split:                       ; preds = %if.end36
  %.pr = load double, double* %arg.addr, align 8, !tbaa !24
  %cmp39276 = fcmp olt double %.pr, 1.000000e+00
  br i1 %cmp39276, label %while.condthread-pre-split.while.body_crit_edge, label %while.cond40thread-pre-split

while.condthread-pre-split.while.body_crit_edge:  ; preds = %while.condthread-pre-split
  %dec.1 = add nsw i32 0, -1
  br label %while.body

while.body:                                       ; preds = %while.condthread-pre-split.while.body_crit_edge, %while.body.while.body_crit_edge
  %dec.phi = phi i32 [ %dec.0, %while.body.while.body_crit_edge ], [ %dec.1, %while.condthread-pre-split.while.body_crit_edge ]
  %5 = phi double [ %mul, %while.body.while.body_crit_edge ], [ %.pr, %while.condthread-pre-split.while.body_crit_edge ]
  %mul = fmul double %5, 1.000000e+01
  %cmp39 = fcmp olt double %mul, 1.000000e+00
  br i1 %cmp39, label %while.body.while.body_crit_edge, label %while.cond.while.cond40thread-pre-split_crit_edge, !llvm.loop !28

while.body.while.body_crit_edge:                  ; preds = %while.body
  %dec.0 = add nsw i32 %dec.phi, -1
  br label %while.body

while.cond.while.cond40thread-pre-split_crit_edge: ; preds = %while.body
  store double %mul, double* %arg.addr, align 8, !tbaa !24
  br label %while.cond40thread-pre-split

while.cond40thread-pre-split:                     ; preds = %while.cond.while.cond40thread-pre-split_crit_edge, %while.condthread-pre-split
  %.pr260 = phi double [ %mul, %while.cond.while.cond40thread-pre-split_crit_edge ], [ %.pr, %while.condthread-pre-split ]
  %exponent_base_10.0.lcssa = phi i32 [ %dec.phi, %while.cond.while.cond40thread-pre-split_crit_edge ], [ 0, %while.condthread-pre-split ]
  %cmp41272 = fcmp ult double %.pr260, 1.000000e+01
  br i1 %cmp41272, label %while.end43, label %while.body42

while.body42:                                     ; preds = %while.cond40thread-pre-split, %while.body42
  %exponent_base_10.1273 = phi i32 [ %inc, %while.body42 ], [ %exponent_base_10.0.lcssa, %while.cond40thread-pre-split ]
  %6 = phi double [ %div, %while.body42 ], [ %.pr260, %while.cond40thread-pre-split ]
  %div = fdiv double %6, 1.000000e+01
  %inc = add nsw i32 %exponent_base_10.1273, 1
  %cmp41 = fcmp ult double %div, 1.000000e+01
  br i1 %cmp41, label %while.cond40.while.end43_crit_edge, label %while.body42, !llvm.loop !29

while.cond40.while.end43_crit_edge:               ; preds = %while.body42
  store double %div, double* %arg.addr, align 8, !tbaa !24
  br label %while.end43

while.end43:                                      ; preds = %while.cond40.while.end43_crit_edge, %while.cond40thread-pre-split
  %.lcssa = phi double [ %div, %while.cond40.while.end43_crit_edge ], [ %.pr260, %while.cond40thread-pre-split ]
  %exponent_base_10.1.lcssa = phi i32 [ %inc, %while.cond40.while.end43_crit_edge ], [ %exponent_base_10.0.lcssa, %while.cond40thread-pre-split ]
  %mul44 = fmul double %.lcssa, 1.000000e+06
  %add = fadd double %mul44, 5.000000e-01
  %conv45 = fptoui double %add to i64
  %div46 = udiv i64 %conv45, 1000000
  %mul47.neg = mul i64 %div46, -1000000
  %sub48 = add i64 %mul47.neg, %conv45
  %call49 = call i8* @halide_int64_to_string(i8* %dst.addr.0, i8* %end, i64 %div46, i32 1) #15
  %call50 = call i8* @halide_string_to_string(i8* %call49, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.66, i32 0, i32 0)) #15
  %call51 = call i8* @halide_int64_to_string(i8* %call50, i8* %end, i64 %sub48, i32 6) #15
  %cmp52 = icmp sgt i32 %exponent_base_10.1.lcssa, -1
  br i1 %cmp52, label %if.then53, label %if.else55

if.then53:                                        ; preds = %while.end43
  %call54 = call i8* @halide_string_to_string(i8* %call51, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0)) #15
  br label %if.end58

if.else55:                                        ; preds = %while.end43
  %call56 = call i8* @halide_string_to_string(i8* %call51, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i32 0, i32 0)) #15
  %sub57 = sub nsw i32 0, %exponent_base_10.1.lcssa
  br label %if.end58

if.end58:                                         ; preds = %if.else55, %if.then53
  %exponent_base_10.2 = phi i32 [ %exponent_base_10.1.lcssa, %if.then53 ], [ %sub57, %if.else55 ]
  %dst.addr.1 = phi i8* [ %call54, %if.then53 ], [ %call56, %if.else55 ]
  %conv59261 = zext i32 %exponent_base_10.2 to i64
  %call60 = call i8* @halide_int64_to_string(i8* %dst.addr.1, i8* %end, i64 %conv59261, i32 2) #15
  br label %cleanup147

if.else61:                                        ; preds = %if.end36
  br i1 %cmp16, label %if.then63, label %if.end65

if.then63:                                        ; preds = %if.else61
  %call64 = call i8* @halide_double_to_string(i8* %dst.addr.0, i8* %end, double 0.000000e+00, i32 0) #15
  br label %cleanup147

if.end65:                                         ; preds = %if.else61
  %add67 = or i64 %and, 4503599627370496
  %sub69 = add nsw i32 %conv, -1075
  %cmp70 = icmp ult i32 %conv, 1075
  br i1 %cmp70, label %if.then71, label %if.end104

if.then71:                                        ; preds = %if.end65
  %cmp72 = icmp ult i32 %conv, 1023
  br i1 %cmp72, label %if.end83, label %if.else75

if.else75:                                        ; preds = %if.then71
  %sub76 = sub nuw nsw i32 1075, %conv
  %sh_prom = zext i32 %sub76 to i64
  %shr77 = lshr i64 %add67, %sh_prom
  %shl80 = shl i64 %shr77, %sh_prom
  %sub81 = sub i64 %add67, %shl80
  br label %if.end83

if.end83:                                         ; preds = %if.else75, %if.then71
  %integer_part.0 = phi i64 [ %shr77, %if.else75 ], [ 0, %if.then71 ]
  %f.0.in = phi i64 [ %sub81, %if.else75 ], [ %add67, %if.then71 ]
  %f.0 = uitofp i64 %f.0.in to double
  %conv84257 = zext i32 %sub69 to i64
  %shl85 = shl i64 %conv84257, 52
  %add87 = add i64 %shl85, 4696837146684686336
  %7 = bitcast i64 %add87 to double
  %mul89 = fmul double %7, %f.0
  %add90 = fadd double %mul89, 5.000000e-01
  %conv91 = fptoui double %add90 to i64
  %conv92 = uitofp i64 %conv91 to double
  %cmp93 = fcmp oeq double %add90, %conv92
  %and95 = and i64 %conv91, 1
  %tobool96.not = icmp ne i64 %and95, 0
  %not.or.cond258 = and i1 %cmp93, %tobool96.not
  %dec98 = sext i1 %not.or.cond258 to i64
  %fractional_part.0 = add i64 %dec98, %conv91
  %cmp100 = icmp eq i64 %fractional_part.0, 1000000
  %inc102 = zext i1 %cmp100 to i64
  %spec.select = add nuw i64 %integer_part.0, %inc102
  %spec.select259 = select i1 %cmp100, i64 0, i64 %fractional_part.0
  br label %if.end104

if.end104:                                        ; preds = %if.end83, %if.end65
  %integer_part.2 = phi i64 [ %spec.select, %if.end83 ], [ %add67, %if.end65 ]
  %integer_exponent.0 = phi i32 [ 0, %if.end83 ], [ %sub69, %if.end65 ]
  %fractional_part.2 = phi i64 [ %spec.select259, %if.end83 ], [ 0, %if.end65 ]
  %8 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %8) #11
  %add.ptr = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 512
  %add.ptr105 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 480
  %call108 = call i8* @halide_int64_to_string(i8* nonnull %add.ptr105, i8* nonnull %add.ptr, i64 %integer_part.2, i32 1) #15
  %cmp109267 = icmp sgt i32 %integer_exponent.0, 0
  br i1 %cmp109267, label %for.cond111.preheader.preheader, label %for.cond.cleanup

for.cond111.preheader.preheader:                  ; preds = %if.end104
  %9 = add nsw i32 %integer_exponent.0, -1
  %xtraiter = and i32 %integer_exponent.0, 3
  %10 = icmp ult i32 %9, 3
  br i1 %10, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.cond111.preheader.preheader.new

for.cond111.preheader.preheader.new:              ; preds = %for.cond111.preheader.preheader
  %unroll_iter = and i32 %integer_exponent.0, -4
  br label %for.cond111.preheader

for.cond111.preheader:                            ; preds = %if.end137.3, %for.cond111.preheader.preheader.new
  %int_part_ptr.0268 = phi i8* [ %add.ptr105, %for.cond111.preheader.preheader.new ], [ %int_part_ptr.1.3, %if.end137.3 ]
  %niter = phi i32 [ %unroll_iter, %for.cond111.preheader.preheader.new ], [ %niter.nsub.3, %if.end137.3 ]
  %add.ptr112 = getelementptr inbounds i8, i8* %int_part_ptr.0268, i32 -1
  %cmp113.not263 = icmp eq i8* %call108, %int_part_ptr.0268
  br i1 %cmp113.not263, label %if.end137, label %for.body115

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %if.end137.3, %for.cond111.preheader.preheader
  %int_part_ptr.1.lcssa.ph = phi i8* [ undef, %for.cond111.preheader.preheader ], [ %int_part_ptr.1.3, %if.end137.3 ]
  %int_part_ptr.0268.unr = phi i8* [ %add.ptr105, %for.cond111.preheader.preheader ], [ %int_part_ptr.1.3, %if.end137.3 ]
  %lcmp.mod.not = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond.cleanup, label %for.cond111.preheader.epil

for.cond111.preheader.epil:                       ; preds = %for.cond.cleanup.loopexit.unr-lcssa, %if.end137.epil
  %int_part_ptr.0268.epil = phi i8* [ %int_part_ptr.1.epil, %if.end137.epil ], [ %int_part_ptr.0268.unr, %for.cond.cleanup.loopexit.unr-lcssa ]
  %epil.iter = phi i32 [ %epil.iter.sub, %if.end137.epil ], [ %xtraiter, %for.cond.cleanup.loopexit.unr-lcssa ]
  %add.ptr112.epil = getelementptr inbounds i8, i8* %int_part_ptr.0268.epil, i32 -1
  %cmp113.not263.epil = icmp eq i8* %call108, %int_part_ptr.0268.epil
  br i1 %cmp113.not263.epil, label %if.end137.epil, label %for.body115.epil

for.body115.epil:                                 ; preds = %for.cond111.preheader.epil, %for.body115.epil
  %p.0265.pn.epil = phi i8* [ %p.0265.epil, %for.body115.epil ], [ %call108, %for.cond111.preheader.epil ]
  %carry.0264.epil = phi i8 [ %carry.1.epil, %for.body115.epil ], [ 0, %for.cond111.preheader.epil ]
  %p.0265.epil = getelementptr inbounds i8, i8* %p.0265.pn.epil, i32 -1
  %11 = load i8, i8* %p.0265.epil, align 1, !tbaa !22
  %sub117.epil = shl i8 %11, 1
  %mul120.epil = add i8 %sub117.epil, -96
  %add121.epil = or i8 %mul120.epil, %carry.0264.epil
  %cmp124.epil = icmp sgt i8 %add121.epil, 9
  %sub127.epil = add i8 %add121.epil, -10
  %carry.1.epil = zext i1 %cmp124.epil to i8
  %new_digit.0.epil = select i1 %cmp124.epil, i8 %sub127.epil, i8 %add121.epil
  %add132.epil = add i8 %new_digit.0.epil, 48
  store i8 %add132.epil, i8* %p.0265.epil, align 1, !tbaa !22
  %cmp113.not.epil = icmp eq i8* %p.0265.epil, %int_part_ptr.0268.epil
  br i1 %cmp113.not.epil, label %for.cond.cleanup114.epil, label %for.body115.epil, !llvm.loop !30

for.cond.cleanup114.epil:                         ; preds = %for.body115.epil
  br i1 %cmp124.epil, label %if.then135.epil, label %if.end137.epil

if.then135.epil:                                  ; preds = %for.cond.cleanup114.epil
  store i8 49, i8* %add.ptr112.epil, align 1, !tbaa !22
  br label %if.end137.epil

if.end137.epil:                                   ; preds = %if.then135.epil, %for.cond.cleanup114.epil, %for.cond111.preheader.epil
  %int_part_ptr.1.epil = phi i8* [ %add.ptr112.epil, %if.then135.epil ], [ %int_part_ptr.0268.epil, %for.cond.cleanup114.epil ], [ %call108, %for.cond111.preheader.epil ]
  %epil.iter.sub = add i32 %epil.iter, -1
  %epil.iter.cmp.not = icmp eq i32 %epil.iter.sub, 0
  br i1 %epil.iter.cmp.not, label %for.cond.cleanup, label %for.cond111.preheader.epil, !llvm.loop !31

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit.unr-lcssa, %if.end137.epil, %if.end104
  %int_part_ptr.0.lcssa = phi i8* [ %add.ptr105, %if.end104 ], [ %int_part_ptr.1.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %int_part_ptr.1.epil, %if.end137.epil ]
  %call141 = call i8* @halide_string_to_string(i8* %dst.addr.0, i8* %end, i8* %int_part_ptr.0.lcssa) #15
  %call142 = call i8* @halide_string_to_string(i8* %call141, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.66, i32 0, i32 0)) #15
  %call143 = call i8* @halide_int64_to_string(i8* %call142, i8* %end, i64 %fractional_part.2, i32 6) #15
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %8) #11
  br label %cleanup147

for.cond.cleanup114:                              ; preds = %for.body115
  br i1 %cmp124, label %if.then135, label %if.end137

for.body115:                                      ; preds = %for.cond111.preheader, %for.body115
  %p.0265.pn = phi i8* [ %p.0265, %for.body115 ], [ %call108, %for.cond111.preheader ]
  %carry.0264 = phi i8 [ %carry.1, %for.body115 ], [ 0, %for.cond111.preheader ]
  %p.0265 = getelementptr inbounds i8, i8* %p.0265.pn, i32 -1
  %12 = load i8, i8* %p.0265, align 1, !tbaa !22
  %sub117 = shl i8 %12, 1
  %mul120 = add i8 %sub117, -96
  %add121 = or i8 %mul120, %carry.0264
  %cmp124 = icmp sgt i8 %add121, 9
  %sub127 = add i8 %add121, -10
  %carry.1 = zext i1 %cmp124 to i8
  %new_digit.0 = select i1 %cmp124, i8 %sub127, i8 %add121
  %add132 = add i8 %new_digit.0, 48
  store i8 %add132, i8* %p.0265, align 1, !tbaa !22
  %cmp113.not = icmp eq i8* %p.0265, %int_part_ptr.0268
  br i1 %cmp113.not, label %for.cond.cleanup114, label %for.body115, !llvm.loop !30

if.then135:                                       ; preds = %for.cond.cleanup114
  store i8 49, i8* %add.ptr112, align 1, !tbaa !22
  br label %if.end137

if.end137:                                        ; preds = %if.then135, %for.cond.cleanup114, %for.cond111.preheader
  %int_part_ptr.1 = phi i8* [ %add.ptr112, %if.then135 ], [ %int_part_ptr.0268, %for.cond.cleanup114 ], [ %call108, %for.cond111.preheader ]
  %add.ptr112.1 = getelementptr inbounds i8, i8* %int_part_ptr.1, i32 -1
  %cmp113.not263.1 = icmp eq i8* %call108, %int_part_ptr.1
  br i1 %cmp113.not263.1, label %if.end137.1, label %for.body115.1

cleanup147:                                       ; preds = %for.cond.cleanup, %if.then63, %if.end58, %if.else30, %if.then28, %if.else24, %if.then22, %if.else13, %if.then11, %if.else, %if.then6
  %retval.1 = phi i8* [ %call7, %if.then6 ], [ %call8, %if.else ], [ %call12, %if.then11 ], [ %call14, %if.else13 ], [ %call23, %if.then22 ], [ %call25, %if.else24 ], [ %call29, %if.then28 ], [ %call31, %if.else30 ], [ %call64, %if.then63 ], [ %call60, %if.end58 ], [ %call143, %for.cond.cleanup ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #11
  ret i8* %retval.1

for.body115.1:                                    ; preds = %if.end137, %for.body115.1
  %p.0265.pn.1 = phi i8* [ %p.0265.1, %for.body115.1 ], [ %call108, %if.end137 ]
  %carry.0264.1 = phi i8 [ %carry.1.1, %for.body115.1 ], [ 0, %if.end137 ]
  %p.0265.1 = getelementptr inbounds i8, i8* %p.0265.pn.1, i32 -1
  %13 = load i8, i8* %p.0265.1, align 1, !tbaa !22
  %sub117.1 = shl i8 %13, 1
  %mul120.1 = add i8 %sub117.1, -96
  %add121.1 = or i8 %mul120.1, %carry.0264.1
  %cmp124.1 = icmp sgt i8 %add121.1, 9
  %sub127.1 = add i8 %add121.1, -10
  %carry.1.1 = zext i1 %cmp124.1 to i8
  %new_digit.0.1 = select i1 %cmp124.1, i8 %sub127.1, i8 %add121.1
  %add132.1 = add i8 %new_digit.0.1, 48
  store i8 %add132.1, i8* %p.0265.1, align 1, !tbaa !22
  %cmp113.not.1 = icmp eq i8* %p.0265.1, %int_part_ptr.1
  br i1 %cmp113.not.1, label %for.cond.cleanup114.1, label %for.body115.1, !llvm.loop !30

for.cond.cleanup114.1:                            ; preds = %for.body115.1
  br i1 %cmp124.1, label %if.then135.1, label %if.end137.1

if.then135.1:                                     ; preds = %for.cond.cleanup114.1
  store i8 49, i8* %add.ptr112.1, align 1, !tbaa !22
  br label %if.end137.1

if.end137.1:                                      ; preds = %if.then135.1, %for.cond.cleanup114.1, %if.end137
  %int_part_ptr.1.1 = phi i8* [ %add.ptr112.1, %if.then135.1 ], [ %int_part_ptr.1, %for.cond.cleanup114.1 ], [ %call108, %if.end137 ]
  %add.ptr112.2 = getelementptr inbounds i8, i8* %int_part_ptr.1.1, i32 -1
  %cmp113.not263.2 = icmp eq i8* %call108, %int_part_ptr.1.1
  br i1 %cmp113.not263.2, label %if.end137.2, label %for.body115.2

for.body115.2:                                    ; preds = %if.end137.1, %for.body115.2
  %p.0265.pn.2 = phi i8* [ %p.0265.2, %for.body115.2 ], [ %call108, %if.end137.1 ]
  %carry.0264.2 = phi i8 [ %carry.1.2, %for.body115.2 ], [ 0, %if.end137.1 ]
  %p.0265.2 = getelementptr inbounds i8, i8* %p.0265.pn.2, i32 -1
  %14 = load i8, i8* %p.0265.2, align 1, !tbaa !22
  %sub117.2 = shl i8 %14, 1
  %mul120.2 = add i8 %sub117.2, -96
  %add121.2 = or i8 %mul120.2, %carry.0264.2
  %cmp124.2 = icmp sgt i8 %add121.2, 9
  %sub127.2 = add i8 %add121.2, -10
  %carry.1.2 = zext i1 %cmp124.2 to i8
  %new_digit.0.2 = select i1 %cmp124.2, i8 %sub127.2, i8 %add121.2
  %add132.2 = add i8 %new_digit.0.2, 48
  store i8 %add132.2, i8* %p.0265.2, align 1, !tbaa !22
  %cmp113.not.2 = icmp eq i8* %p.0265.2, %int_part_ptr.1.1
  br i1 %cmp113.not.2, label %for.cond.cleanup114.2, label %for.body115.2, !llvm.loop !30

for.cond.cleanup114.2:                            ; preds = %for.body115.2
  br i1 %cmp124.2, label %if.then135.2, label %if.end137.2

if.then135.2:                                     ; preds = %for.cond.cleanup114.2
  store i8 49, i8* %add.ptr112.2, align 1, !tbaa !22
  br label %if.end137.2

if.end137.2:                                      ; preds = %if.then135.2, %for.cond.cleanup114.2, %if.end137.1
  %int_part_ptr.1.2 = phi i8* [ %add.ptr112.2, %if.then135.2 ], [ %int_part_ptr.1.1, %for.cond.cleanup114.2 ], [ %call108, %if.end137.1 ]
  %add.ptr112.3 = getelementptr inbounds i8, i8* %int_part_ptr.1.2, i32 -1
  %cmp113.not263.3 = icmp eq i8* %call108, %int_part_ptr.1.2
  br i1 %cmp113.not263.3, label %if.end137.3, label %for.body115.3

for.body115.3:                                    ; preds = %if.end137.2, %for.body115.3
  %p.0265.pn.3 = phi i8* [ %p.0265.3, %for.body115.3 ], [ %call108, %if.end137.2 ]
  %carry.0264.3 = phi i8 [ %carry.1.3, %for.body115.3 ], [ 0, %if.end137.2 ]
  %p.0265.3 = getelementptr inbounds i8, i8* %p.0265.pn.3, i32 -1
  %15 = load i8, i8* %p.0265.3, align 1, !tbaa !22
  %sub117.3 = shl i8 %15, 1
  %mul120.3 = add i8 %sub117.3, -96
  %add121.3 = or i8 %mul120.3, %carry.0264.3
  %cmp124.3 = icmp sgt i8 %add121.3, 9
  %sub127.3 = add i8 %add121.3, -10
  %carry.1.3 = zext i1 %cmp124.3 to i8
  %new_digit.0.3 = select i1 %cmp124.3, i8 %sub127.3, i8 %add121.3
  %add132.3 = add i8 %new_digit.0.3, 48
  store i8 %add132.3, i8* %p.0265.3, align 1, !tbaa !22
  %cmp113.not.3 = icmp eq i8* %p.0265.3, %int_part_ptr.1.2
  br i1 %cmp113.not.3, label %for.cond.cleanup114.3, label %for.body115.3, !llvm.loop !30

for.cond.cleanup114.3:                            ; preds = %for.body115.3
  br i1 %cmp124.3, label %if.then135.3, label %if.end137.3

if.then135.3:                                     ; preds = %for.cond.cleanup114.3
  store i8 49, i8* %add.ptr112.3, align 1, !tbaa !22
  br label %if.end137.3

if.end137.3:                                      ; preds = %if.then135.3, %for.cond.cleanup114.3, %if.end137.2
  %int_part_ptr.1.3 = phi i8* [ %add.ptr112.3, %if.then135.3 ], [ %int_part_ptr.1.2, %for.cond.cleanup114.3 ], [ %call108, %if.end137.2 ]
  %niter.nsub.3 = add i32 %niter, -4
  %niter.ncmp.3 = icmp eq i32 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.cond111.preheader, !llvm.loop !33
}

declare i8* @memcpy(i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i8* @halide_pointer_to_string(i8* %dst, i8* %end, i8* %arg) local_unnamed_addr #0 {
entry:
  %buf = alloca [20 x i8], align 1
  %0 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %0) #11
  call void @llvm.memset.p0i8.i32(i8* nonnull align 1 dereferenceable(20) %0, i8 0, i32 20, i1 false)
  %add.ptr = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i32 0, i32 18
  %1 = ptrtoint i8* %arg to i32
  %idxprom = and i32 %1, 15
  %arrayidx = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13, i32 0, i32 %idxprom
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !22
  %incdec.ptr = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i32 0, i32 17
  store i8 %2, i8* %add.ptr, align 1, !tbaa !22
  %3 = lshr i32 %1, 4
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %cleanup, label %for.cond

for.cond:                                         ; preds = %entry
  %idxprom.1 = and i32 %3, 15
  %arrayidx.1 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13, i32 0, i32 %idxprom.1
  %4 = load i8, i8* %arrayidx.1, align 1, !tbaa !22
  %incdec.ptr.1 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i32 0, i32 16
  store i8 %4, i8* %incdec.ptr, align 1, !tbaa !22
  %5 = lshr i32 %1, 8
  %tobool.not.1 = icmp eq i32 %5, 0
  br i1 %tobool.not.1, label %cleanup, label %for.cond.1

cleanup:                                          ; preds = %for.cond.6, %for.cond.5, %for.cond.4, %for.cond.3, %for.cond.2, %for.cond.1, %for.cond, %entry
  %buf_ptr.016.lcssa = phi i8* [ %add.ptr, %entry ], [ %incdec.ptr, %for.cond ], [ %incdec.ptr.1, %for.cond.1 ], [ %incdec.ptr.2, %for.cond.2 ], [ %incdec.ptr.3, %for.cond.3 ], [ %incdec.ptr.4, %for.cond.4 ], [ %incdec.ptr.5, %for.cond.5 ], [ %incdec.ptr.6, %for.cond.6 ]
  %incdec.ptr.lcssa = phi i8* [ %incdec.ptr, %entry ], [ %incdec.ptr.1, %for.cond ], [ %incdec.ptr.2, %for.cond.1 ], [ %incdec.ptr.3, %for.cond.2 ], [ %incdec.ptr.4, %for.cond.3 ], [ %incdec.ptr.5, %for.cond.4 ], [ %incdec.ptr.6, %for.cond.5 ], [ %incdec.ptr.7, %for.cond.6 ]
  %incdec.ptr1 = getelementptr inbounds i8, i8* %buf_ptr.016.lcssa, i32 -2
  store i8 120, i8* %incdec.ptr.lcssa, align 1, !tbaa !22
  store i8 48, i8* %incdec.ptr1, align 1, !tbaa !22
  %call = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* nonnull %incdec.ptr1) #15
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %0) #11
  ret i8* %call

for.cond.1:                                       ; preds = %for.cond
  %idxprom.2 = and i32 %5, 15
  %arrayidx.2 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13, i32 0, i32 %idxprom.2
  %6 = load i8, i8* %arrayidx.2, align 1, !tbaa !22
  %incdec.ptr.2 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i32 0, i32 15
  store i8 %6, i8* %incdec.ptr.1, align 1, !tbaa !22
  %7 = lshr i32 %1, 12
  %tobool.not.2 = icmp eq i32 %7, 0
  br i1 %tobool.not.2, label %cleanup, label %for.cond.2

for.cond.2:                                       ; preds = %for.cond.1
  %idxprom.3 = and i32 %7, 15
  %arrayidx.3 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13, i32 0, i32 %idxprom.3
  %8 = load i8, i8* %arrayidx.3, align 1, !tbaa !22
  %incdec.ptr.3 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i32 0, i32 14
  store i8 %8, i8* %incdec.ptr.2, align 1, !tbaa !22
  %9 = lshr i32 %1, 16
  %tobool.not.3 = icmp eq i32 %9, 0
  br i1 %tobool.not.3, label %cleanup, label %for.cond.3

for.cond.3:                                       ; preds = %for.cond.2
  %idxprom.4 = and i32 %9, 15
  %arrayidx.4 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13, i32 0, i32 %idxprom.4
  %10 = load i8, i8* %arrayidx.4, align 1, !tbaa !22
  %incdec.ptr.4 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i32 0, i32 13
  store i8 %10, i8* %incdec.ptr.3, align 1, !tbaa !22
  %11 = lshr i32 %1, 20
  %tobool.not.4 = icmp eq i32 %11, 0
  br i1 %tobool.not.4, label %cleanup, label %for.cond.4

for.cond.4:                                       ; preds = %for.cond.3
  %idxprom.5 = and i32 %11, 15
  %arrayidx.5 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13, i32 0, i32 %idxprom.5
  %12 = load i8, i8* %arrayidx.5, align 1, !tbaa !22
  %incdec.ptr.5 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i32 0, i32 12
  store i8 %12, i8* %incdec.ptr.4, align 1, !tbaa !22
  %13 = lshr i32 %1, 24
  %tobool.not.5 = icmp eq i32 %13, 0
  br i1 %tobool.not.5, label %cleanup, label %for.cond.5

for.cond.5:                                       ; preds = %for.cond.4
  %idxprom.6 = and i32 %13, 15
  %arrayidx.6 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13, i32 0, i32 %idxprom.6
  %14 = load i8, i8* %arrayidx.6, align 1, !tbaa !22
  %incdec.ptr.6 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i32 0, i32 11
  store i8 %14, i8* %incdec.ptr.5, align 1, !tbaa !22
  %15 = lshr i32 %1, 28
  %tobool.not.6 = icmp eq i32 %15, 0
  br i1 %tobool.not.6, label %cleanup, label %for.cond.6

for.cond.6:                                       ; preds = %for.cond.5
  %arrayidx.7 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13, i32 0, i32 %15
  %16 = load i8, i8* %arrayidx.7, align 1, !tbaa !22
  %incdec.ptr.7 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i32 0, i32 10
  store i8 %16, i8* %incdec.ptr.6, align 1, !tbaa !22
  br label %cleanup
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #5

; Function Attrs: nounwind mustprogress
define weak i8* @halide_type_to_string(i8* %dst, i8* %end, %struct.halide_type_t* %t) local_unnamed_addr #0 {
entry:
  %code = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %t, i32 0, i32 0
  %0 = load i8, i8* %code, align 2, !tbaa !34
  %1 = icmp ult i8 %0, 4
  br i1 %1, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %2 = sext i8 %0 to i32
  %switch.gep = getelementptr inbounds [4 x i8*], [4 x i8*]* @switch.table.halide_type_to_string, i32 0, i32 %2
  %switch.load = load i8*, i8** %switch.gep, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %code_name.0 = phi i8* [ %switch.load, %switch.lookup ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i32 0, i32 0), %entry ]
  %call = tail call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* nonnull %code_name.0) #15
  %bits = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %t, i32 0, i32 1
  %3 = load i8, i8* %bits, align 1, !tbaa !38
  %conv4 = zext i8 %3 to i64
  %call5 = tail call i8* @halide_uint64_to_string(i8* %call, i8* %end, i64 %conv4, i32 1) #15
  %lanes = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %t, i32 0, i32 2
  %4 = load i16, i16* %lanes, align 2, !tbaa !39
  %cmp.not = icmp eq i16 %4, 1
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %sw.epilog
  %call7 = tail call i8* @halide_string_to_string(i8* %call5, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i32 0, i32 0)) #15
  %5 = load i16, i16* %lanes, align 2, !tbaa !39
  %conv9 = zext i16 %5 to i64
  %call10 = tail call i8* @halide_uint64_to_string(i8* %call7, i8* %end, i64 %conv9, i32 1) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %sw.epilog
  %dst.addr.0 = phi i8* [ %call10, %if.then ], [ %call5, %sw.epilog ]
  ret i8* %dst.addr.0
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_buffer_to_string(i8* %dst, i8* %end, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i32 0, i32 0)) #15
  br label %return

if.end:                                           ; preds = %entry
  %call1 = tail call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0)) #15
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !40
  %call2 = tail call i8* @halide_uint64_to_string(i8* %call1, i8* %end, i64 %0, i32 1) #15
  %call3 = tail call i8* @halide_string_to_string(i8* %call2, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i32 0, i32 0)) #15
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %1 = bitcast %struct.halide_device_interface_t** %device_interface to i8**
  %2 = load i8*, i8** %1, align 8, !tbaa !42
  %call4 = tail call i8* @halide_pointer_to_string(i8* %call3, i8* %end, i8* %2) #15
  %call5 = tail call i8* @halide_string_to_string(i8* %call4, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i32 0, i32 0)) #15
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 2
  %3 = load i8*, i8** %host, align 4, !tbaa !43
  %call6 = tail call i8* @halide_pointer_to_string(i8* %call5, i8* %end, i8* %3) #15
  %call7 = tail call i8* @halide_string_to_string(i8* %call6, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i32 0, i32 0)) #15
  %flags = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 3
  %4 = load i64, i64* %flags, align 8, !tbaa !44
  %call8 = tail call i8* @halide_uint64_to_string(i8* %call7, i8* %end, i64 %4, i32 1) #15
  %call9 = tail call i8* @halide_string_to_string(i8* %call8, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i32 0, i32 0)) #15
  %type = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 4
  %call10 = tail call i8* @halide_type_to_string(i8* %call9, i8* %end, %struct.halide_type_t* nonnull %type) #15
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 5
  %5 = load i32, i32* %dimensions, align 4, !tbaa !45
  %cmp1177 = icmp sgt i32 %5, 0
  br i1 %cmp1177, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %if.end
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 6
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %if.end
  %dst.addr.0.lcssa = phi i8* [ %call10, %if.end ], [ %call24, %for.body ]
  %call25 = tail call i8* @halide_string_to_string(i8* %dst.addr.0.lcssa, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.44, i32 0, i32 0)) #15
  br label %return

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %i.079 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %dst.addr.078 = phi i8* [ %call10, %for.body.lr.ph ], [ %call24, %for.body ]
  %call12 = tail call i8* @halide_string_to_string(i8* %dst.addr.078, i8* %end, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i32 0, i32 0)) #15
  %6 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !46
  %min = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %6, i32 %i.079, i32 0
  %7 = load i32, i32* %min, align 4, !tbaa !47
  %conv = sext i32 %7 to i64
  %call13 = tail call i8* @halide_int64_to_string(i8* %call12, i8* %end, i64 %conv, i32 1) #15
  %call14 = tail call i8* @halide_string_to_string(i8* %call13, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i32 0, i32 0)) #15
  %8 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !46
  %extent = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %8, i32 %i.079, i32 1
  %9 = load i32, i32* %extent, align 4, !tbaa !49
  %conv17 = sext i32 %9 to i64
  %call18 = tail call i8* @halide_int64_to_string(i8* %call14, i8* %end, i64 %conv17, i32 1) #15
  %call19 = tail call i8* @halide_string_to_string(i8* %call18, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i32 0, i32 0)) #15
  %10 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !46
  %stride = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %10, i32 %i.079, i32 2
  %11 = load i32, i32* %stride, align 4, !tbaa !50
  %conv22 = sext i32 %11 to i64
  %call23 = tail call i8* @halide_int64_to_string(i8* %call19, i8* %end, i64 %conv22, i32 1) #15
  %call24 = tail call i8* @halide_string_to_string(i8* %call23, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i32 0)) #15
  %inc = add nuw nsw i32 %i.079, 1
  %12 = load i32, i32* %dimensions, align 4, !tbaa !45
  %cmp11 = icmp slt i32 %inc, %12
  br i1 %cmp11, label %for.body, label %for.cond.cleanup, !llvm.loop !51

return:                                           ; preds = %for.cond.cleanup, %if.then
  %retval.0 = phi i8* [ %call, %if.then ], [ %call25, %for.cond.cleanup ]
  ret i8* %retval.0
}

; Function Attrs: alwaysinline nounwind willreturn mustprogress
define weak i32 @halide_malloc_alignment() local_unnamed_addr #6 {
entry:
  ret i32 128
}

; Function Attrs: nounwind
define weak i32 @halide_reuse_device_allocations(i8* %user_context, i1 zeroext %flag) local_unnamed_addr #4 {
entry:
  %frombool = zext i1 %flag to i8
  store i8 %frombool, i8* @_ZN6Halide7Runtime8Internal36halide_reuse_device_allocations_flagE, align 1, !tbaa !18
  br i1 %flag, label %if.end5, label %if.then

if.then:                                          ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal21allocation_pools_lockE) #14
  %p.014 = load %struct.halide_device_allocation_pool*, %struct.halide_device_allocation_pool** @_ZN6Halide7Runtime8Internal23device_allocation_poolsE, align 4, !tbaa !10
  %cmp.not15 = icmp eq %struct.halide_device_allocation_pool* %p.014, null
  br i1 %cmp.not15, label %for.cond.cleanup, label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %if.then
  %err.0.lcssa = phi i32 [ 0, %if.then ], [ %spec.select, %for.body ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal21allocation_pools_lockE) #14
  br label %if.end5

for.body:                                         ; preds = %if.then, %for.body
  %p.017 = phi %struct.halide_device_allocation_pool* [ %p.0, %for.body ], [ %p.014, %if.then ]
  %err.016 = phi i32 [ %spec.select, %for.body ], [ 0, %if.then ]
  %release_unused = getelementptr inbounds %struct.halide_device_allocation_pool, %struct.halide_device_allocation_pool* %p.017, i32 0, i32 0
  %0 = load i32 (i8*)*, i32 (i8*)** %release_unused, align 4, !tbaa !52
  %call = tail call i32 %0(i8* %user_context) #14
  %tobool3.not = icmp eq i32 %call, 0
  %spec.select = select i1 %tobool3.not, i32 %err.016, i32 %call
  %next = getelementptr inbounds %struct.halide_device_allocation_pool, %struct.halide_device_allocation_pool* %p.017, i32 0, i32 1
  %p.0 = load %struct.halide_device_allocation_pool*, %struct.halide_device_allocation_pool** %next, align 4, !tbaa !10
  %cmp.not = icmp eq %struct.halide_device_allocation_pool* %p.0, null
  br i1 %cmp.not, label %for.cond.cleanup, label %for.body, !llvm.loop !54

if.end5:                                          ; preds = %for.cond.cleanup, %entry
  %err.2 = phi i32 [ 0, %entry ], [ %err.0.lcssa, %for.cond.cleanup ]
  ret i32 %err.2
}

; Function Attrs: nounwind willreturn mustprogress
define weak zeroext i1 @halide_can_reuse_device_allocations(i8* %user_context) local_unnamed_addr #2 {
entry:
  %0 = load i8, i8* @_ZN6Halide7Runtime8Internal36halide_reuse_device_allocations_flagE, align 1, !tbaa !18, !range !21
  %tobool = icmp ne i8 %0, 0
  ret i1 %tobool
}

; Function Attrs: nounwind willreturn
define weak void @halide_register_device_allocation_pool(%struct.halide_device_allocation_pool* %pool) local_unnamed_addr #7 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal21allocation_pools_lockE) #14
  %0 = load %struct.halide_device_allocation_pool*, %struct.halide_device_allocation_pool** @_ZN6Halide7Runtime8Internal23device_allocation_poolsE, align 4, !tbaa !10
  %next = getelementptr inbounds %struct.halide_device_allocation_pool, %struct.halide_device_allocation_pool* %pool, i32 0, i32 1
  store %struct.halide_device_allocation_pool* %0, %struct.halide_device_allocation_pool** %next, align 4, !tbaa !55
  store %struct.halide_device_allocation_pool* %pool, %struct.halide_device_allocation_pool** @_ZN6Halide7Runtime8Internal23device_allocation_poolsE, align 4, !tbaa !10
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal21allocation_pools_lockE) #14
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal18copy_memory_helperERKNS1_11device_copyEixx(%"struct.Halide::Runtime::Internal::device_copy"* nonnull align 8 dereferenceable(416) %copy, i32 %d, i64 %src_off, i64 %dst_off) local_unnamed_addr #0 {
entry:
  %cmp39 = icmp sgt i32 %d, -1
  br i1 %cmp39, label %land.rhs, label %while.end

land.rhs:                                         ; preds = %entry, %while.body
  %d.addr.040 = phi i32 [ %dec, %while.body ], [ %d, %entry ]
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i32 0, i32 3, i32 %d.addr.040
  %0 = load i64, i64* %arrayidx, align 8, !tbaa !26
  %cmp1 = icmp eq i64 %0, 1
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %land.rhs
  %dec = add nsw i32 %d.addr.040, -1
  %cmp = icmp sgt i32 %d.addr.040, 0
  br i1 %cmp, label %land.rhs, label %if.then, !llvm.loop !56

while.end:                                        ; preds = %land.rhs, %entry
  %d.addr.0.lcssa = phi i32 [ %d, %entry ], [ %d.addr.040, %land.rhs ]
  %cmp2 = icmp eq i32 %d.addr.0.lcssa, -1
  br i1 %cmp2, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %while.end
  %arrayidx7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i32 0, i32 3, i32 %d.addr.0.lcssa
  %1 = load i64, i64* %arrayidx7, align 8, !tbaa !26
  %cmp835.not = icmp eq i64 %1, 0
  br i1 %cmp835.not, label %if.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %sub = add nsw i32 %d.addr.0.lcssa, -1
  %arrayidx9 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i32 0, i32 4, i32 %d.addr.0.lcssa
  %arrayidx11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i32 0, i32 5, i32 %d.addr.0.lcssa
  %inc.0 = add nuw i64 0, 1
  br label %for.body

if.then:                                          ; preds = %while.body, %while.end
  %src = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i32 0, i32 0
  %2 = load i64, i64* %src, align 8, !tbaa !57
  %add = add i64 %2, %src_off
  %conv = trunc i64 %add to i32
  %3 = inttoptr i32 %conv to i8*
  %dst = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i32 0, i32 1
  %4 = load i64, i64* %dst, align 8, !tbaa !59
  %add3 = add i64 %4, %dst_off
  %conv4 = trunc i64 %add3 to i32
  %5 = inttoptr i32 %conv4 to i8*
  %chunk_size = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i32 0, i32 6
  %6 = load i64, i64* %chunk_size, align 8, !tbaa !60
  %conv5 = trunc i64 %6 to i32
  %call = tail call i8* @memcpy(i8* %5, i8* %3, i32 %conv5) #14
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %inc.phi = phi i64 [ %inc.0, %for.body.lr.ph ], [ %inc.1, %for.body.for.body_crit_edge ]
  %src_off.addr.037 = phi i64 [ %src_off, %for.body.lr.ph ], [ %add10, %for.body.for.body_crit_edge ]
  %dst_off.addr.036 = phi i64 [ %dst_off, %for.body.lr.ph ], [ %add12, %for.body.for.body_crit_edge ]
  tail call void @_ZN6Halide7Runtime8Internal18copy_memory_helperERKNS1_11device_copyEixx(%"struct.Halide::Runtime::Internal::device_copy"* nonnull align 8 dereferenceable(416) %copy, i32 %sub, i64 %src_off.addr.037, i64 %dst_off.addr.036) #15
  %7 = load i64, i64* %arrayidx9, align 8, !tbaa !26
  %add10 = add i64 %7, %src_off.addr.037
  %8 = load i64, i64* %arrayidx11, align 8, !tbaa !26
  %add12 = add i64 %8, %dst_off.addr.036
  %9 = load i64, i64* %arrayidx7, align 8, !tbaa !26
  %cmp8 = icmp ult i64 %inc.phi, %9
  br i1 %cmp8, label %for.body.for.body_crit_edge, label %if.end, !llvm.loop !61

for.body.for.body_crit_edge:                      ; preds = %for.body
  %inc.1 = add nuw i64 %inc.phi, 1
  br label %for.body

if.end:                                           ; preds = %for.body, %if.then, %for.cond.preheader
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal11copy_memoryERKNS1_11device_copyEPv(%"struct.Halide::Runtime::Internal::device_copy"* nonnull align 8 dereferenceable(416) %copy, i8* %user_context) local_unnamed_addr #0 {
entry:
  %src = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i32 0, i32 0
  %0 = load i64, i64* %src, align 8, !tbaa !57
  %dst = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i32 0, i32 1
  %1 = load i64, i64* %dst, align 8, !tbaa !59
  %cmp.not = icmp eq i64 %0, %1
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %src_begin = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i32 0, i32 2
  %2 = load i64, i64* %src_begin, align 8, !tbaa !62
  tail call void @_ZN6Halide7Runtime8Internal18copy_memory_helperERKNS1_11device_copyEixx(%"struct.Halide::Runtime::Internal::device_copy"* nonnull align 8 dereferenceable(416) %copy, i32 15, i64 %2, i64 0) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal16make_buffer_copyEPK15halide_buffer_tbS4_b(%"struct.Halide::Runtime::Internal::device_copy"* noalias sret(%"struct.Halide::Runtime::Internal::device_copy") align 8 %agg.result, %struct.halide_buffer_t* %src, i1 zeroext %src_host, %struct.halide_buffer_t* %dst, i1 zeroext %dst_host) local_unnamed_addr #0 {
entry:
  %c = alloca %"struct.Halide::Runtime::Internal::device_copy", align 8
  %0 = bitcast %"struct.Halide::Runtime::Internal::device_copy"* %c to i8*
  call void @llvm.lifetime.start.p0i8(i64 416, i8* nonnull %0) #11
  br i1 %src_host, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i32 0, i32 2
  %1 = load i8*, i8** %host, align 4, !tbaa !43
  %2 = ptrtoint i8* %1 to i32
  %3 = zext i32 %2 to i64
  br label %cond.end

cond.false:                                       ; preds = %entry
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i32 0, i32 0
  %4 = load i64, i64* %device, align 8, !tbaa !40
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %3, %cond.true ], [ %4, %cond.false ]
  %src2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 0
  store i64 %cond, i64* %src2, align 8, !tbaa !57
  br i1 %dst_host, label %cond.true4, label %cond.false6

cond.true4:                                       ; preds = %cond.end
  %host5 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i32 0, i32 2
  %5 = load i8*, i8** %host5, align 4, !tbaa !43
  %6 = ptrtoint i8* %5 to i32
  %7 = zext i32 %6 to i64
  br label %cond.end8

cond.false6:                                      ; preds = %cond.end
  %device7 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i32 0, i32 0
  %8 = load i64, i64* %device7, align 8, !tbaa !40
  br label %cond.end8

cond.end8:                                        ; preds = %cond.false6, %cond.true4
  %cond9 = phi i64 [ %7, %cond.true4 ], [ %8, %cond.false6 ]
  %dst10 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 1
  store i64 %cond9, i64* %dst10, align 8, !tbaa !59
  %bits.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i32 0, i32 4, i32 1
  %9 = load i8, i8* %bits.i, align 1, !tbaa !38
  %conv.i = zext i8 %9 to i32
  %add.i = add nuw nsw i32 %conv.i, 7
  %div.i = lshr i32 %add.i, 3
  %conv = zext i32 %div.i to i64
  %chunk_size = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 6
  store i64 %conv, i64* %chunk_size, align 8, !tbaa !60
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 0
  store i64 1, i64* %arrayidx, align 8, !tbaa !26
  %arrayidx11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 0
  store i64 0, i64* %arrayidx11, align 8, !tbaa !26
  %arrayidx12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 0
  store i64 0, i64* %arrayidx12, align 8, !tbaa !26
  %arrayidx.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 1
  store i64 1, i64* %arrayidx.1, align 8, !tbaa !26
  %arrayidx11.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 1
  store i64 0, i64* %arrayidx11.1, align 8, !tbaa !26
  %arrayidx12.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 1
  store i64 0, i64* %arrayidx12.1, align 8, !tbaa !26
  %arrayidx.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 2
  store i64 1, i64* %arrayidx.2, align 8, !tbaa !26
  %arrayidx11.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 2
  store i64 0, i64* %arrayidx11.2, align 8, !tbaa !26
  %arrayidx12.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 2
  store i64 0, i64* %arrayidx12.2, align 8, !tbaa !26
  %arrayidx.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 3
  store i64 1, i64* %arrayidx.3, align 8, !tbaa !26
  %arrayidx11.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 3
  store i64 0, i64* %arrayidx11.3, align 8, !tbaa !26
  %arrayidx12.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 3
  store i64 0, i64* %arrayidx12.3, align 8, !tbaa !26
  %arrayidx.4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 4
  store i64 1, i64* %arrayidx.4, align 8, !tbaa !26
  %arrayidx11.4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 4
  store i64 0, i64* %arrayidx11.4, align 8, !tbaa !26
  %arrayidx12.4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 4
  store i64 0, i64* %arrayidx12.4, align 8, !tbaa !26
  %arrayidx.5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 5
  store i64 1, i64* %arrayidx.5, align 8, !tbaa !26
  %arrayidx11.5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 5
  store i64 0, i64* %arrayidx11.5, align 8, !tbaa !26
  %arrayidx12.5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 5
  store i64 0, i64* %arrayidx12.5, align 8, !tbaa !26
  %arrayidx.6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 6
  store i64 1, i64* %arrayidx.6, align 8, !tbaa !26
  %arrayidx11.6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 6
  store i64 0, i64* %arrayidx11.6, align 8, !tbaa !26
  %arrayidx12.6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 6
  store i64 0, i64* %arrayidx12.6, align 8, !tbaa !26
  %arrayidx.7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 7
  store i64 1, i64* %arrayidx.7, align 8, !tbaa !26
  %arrayidx11.7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 7
  store i64 0, i64* %arrayidx11.7, align 8, !tbaa !26
  %arrayidx12.7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 7
  store i64 0, i64* %arrayidx12.7, align 8, !tbaa !26
  %arrayidx.8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 8
  store i64 1, i64* %arrayidx.8, align 8, !tbaa !26
  %arrayidx11.8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 8
  store i64 0, i64* %arrayidx11.8, align 8, !tbaa !26
  %arrayidx12.8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 8
  store i64 0, i64* %arrayidx12.8, align 8, !tbaa !26
  %arrayidx.9 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 9
  store i64 1, i64* %arrayidx.9, align 8, !tbaa !26
  %arrayidx11.9 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 9
  store i64 0, i64* %arrayidx11.9, align 8, !tbaa !26
  %arrayidx12.9 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 9
  store i64 0, i64* %arrayidx12.9, align 8, !tbaa !26
  %arrayidx.10 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 10
  store i64 1, i64* %arrayidx.10, align 8, !tbaa !26
  %arrayidx11.10 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 10
  store i64 0, i64* %arrayidx11.10, align 8, !tbaa !26
  %arrayidx12.10 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 10
  store i64 0, i64* %arrayidx12.10, align 8, !tbaa !26
  %arrayidx.11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 11
  store i64 1, i64* %arrayidx.11, align 8, !tbaa !26
  %arrayidx11.11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 11
  store i64 0, i64* %arrayidx11.11, align 8, !tbaa !26
  %arrayidx12.11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 11
  store i64 0, i64* %arrayidx12.11, align 8, !tbaa !26
  %arrayidx.12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 12
  store i64 1, i64* %arrayidx.12, align 8, !tbaa !26
  %arrayidx11.12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 12
  store i64 0, i64* %arrayidx11.12, align 8, !tbaa !26
  %arrayidx12.12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 12
  store i64 0, i64* %arrayidx12.12, align 8, !tbaa !26
  %arrayidx.13 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 13
  store i64 1, i64* %arrayidx.13, align 8, !tbaa !26
  %arrayidx11.13 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 13
  store i64 0, i64* %arrayidx11.13, align 8, !tbaa !26
  %arrayidx12.13 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 13
  store i64 0, i64* %arrayidx12.13, align 8, !tbaa !26
  %arrayidx.14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 14
  store i64 1, i64* %arrayidx.14, align 8, !tbaa !26
  %arrayidx11.14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 14
  store i64 0, i64* %arrayidx11.14, align 8, !tbaa !26
  %arrayidx12.14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 14
  store i64 0, i64* %arrayidx12.14, align 8, !tbaa !26
  %arrayidx.15 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 15
  store i64 1, i64* %arrayidx.15, align 8, !tbaa !26
  %arrayidx11.15 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 15
  store i64 0, i64* %arrayidx11.15, align 8, !tbaa !26
  %arrayidx12.15 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 15
  store i64 0, i64* %arrayidx12.15, align 8, !tbaa !26
  %src_begin = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 2
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i32 0, i32 5
  %10 = load i32, i32* %dimensions, align 4, !tbaa !45
  %cmp15248 = icmp sgt i32 %10, 0
  br i1 %cmp15248, label %for.body17.lr.ph, label %for.cond.cleanup16

for.body17.lr.ph:                                 ; preds = %cond.end8
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i32 0, i32 6
  %11 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !46
  %dim20 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i32 0, i32 6
  %12 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim20, align 8, !tbaa !46
  %13 = add i32 %10, -1
  %xtraiter = and i32 %10, 7
  %14 = icmp ult i32 %13, 7
  br i1 %14, label %for.cond.cleanup16.loopexit.unr-lcssa, label %for.body17.lr.ph.new

for.body17.lr.ph.new:                             ; preds = %for.body17.lr.ph
  %unroll_iter = and i32 %10, -8
  br label %for.body17

for.cond.cleanup16.loopexit.unr-lcssa:            ; preds = %for.body17, %for.body17.lr.ph
  %add.lcssa.ph = phi i64 [ undef, %for.body17.lr.ph ], [ %add.7, %for.body17 ]
  %.unr = phi i64 [ 0, %for.body17.lr.ph ], [ %add.7, %for.body17 ]
  %i13.0249.unr = phi i32 [ 0, %for.body17.lr.ph ], [ %inc28.7, %for.body17 ]
  %lcmp.mod.not = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond.cleanup16, label %for.body17.epil

for.body17.epil:                                  ; preds = %for.cond.cleanup16.loopexit.unr-lcssa, %for.body17.epil
  %15 = phi i64 [ %add.epil, %for.body17.epil ], [ %.unr, %for.cond.cleanup16.loopexit.unr-lcssa ]
  %i13.0249.epil = phi i32 [ %inc28.epil, %for.body17.epil ], [ %i13.0249.unr, %for.cond.cleanup16.loopexit.unr-lcssa ]
  %epil.iter = phi i32 [ %epil.iter.sub, %for.body17.epil ], [ %xtraiter, %for.cond.cleanup16.loopexit.unr-lcssa ]
  %stride.epil = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %11, i32 %i13.0249.epil, i32 2
  %16 = load i32, i32* %stride.epil, align 4, !tbaa !50
  %conv19.epil = sext i32 %16 to i64
  %min.epil = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %12, i32 %i13.0249.epil, i32 0
  %17 = load i32, i32* %min.epil, align 4, !tbaa !47
  %min24.epil = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %11, i32 %i13.0249.epil, i32 0
  %18 = load i32, i32* %min24.epil, align 4, !tbaa !47
  %sub.epil = sub nsw i32 %17, %18
  %conv25.epil = sext i32 %sub.epil to i64
  %mul.epil = mul nsw i64 %conv25.epil, %conv19.epil
  %add.epil = add i64 %mul.epil, %15
  %inc28.epil = add nuw nsw i32 %i13.0249.epil, 1
  %epil.iter.sub = add i32 %epil.iter, -1
  %epil.iter.cmp.not = icmp eq i32 %epil.iter.sub, 0
  br i1 %epil.iter.cmp.not, label %for.cond.cleanup16, label %for.body17.epil, !llvm.loop !63

for.cond.cleanup16:                               ; preds = %for.cond.cleanup16.loopexit.unr-lcssa, %for.body17.epil, %cond.end8
  %19 = phi i64 [ 0, %cond.end8 ], [ %add.lcssa.ph, %for.cond.cleanup16.loopexit.unr-lcssa ], [ %add.epil, %for.body17.epil ]
  %mul32 = mul i64 %19, %conv
  store i64 %mul32, i64* %src_begin, align 8, !tbaa !62
  %dimensions34 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i32 0, i32 5
  %20 = load i32, i32* %dimensions34, align 4, !tbaa !45
  %cmp35.not = icmp eq i32 %10, %20
  br i1 %cmp35.not, label %lor.lhs.false, label %if.then

for.body17:                                       ; preds = %for.body17, %for.body17.lr.ph.new
  %21 = phi i64 [ 0, %for.body17.lr.ph.new ], [ %add.7, %for.body17 ]
  %i13.0249 = phi i32 [ 0, %for.body17.lr.ph.new ], [ %inc28.7, %for.body17 ]
  %niter = phi i32 [ %unroll_iter, %for.body17.lr.ph.new ], [ %niter.nsub.7, %for.body17 ]
  %stride = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %11, i32 %i13.0249, i32 2
  %22 = load i32, i32* %stride, align 4, !tbaa !50
  %conv19 = sext i32 %22 to i64
  %min = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %12, i32 %i13.0249, i32 0
  %23 = load i32, i32* %min, align 4, !tbaa !47
  %min24 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %11, i32 %i13.0249, i32 0
  %24 = load i32, i32* %min24, align 4, !tbaa !47
  %sub = sub nsw i32 %23, %24
  %conv25 = sext i32 %sub to i64
  %mul = mul nsw i64 %conv25, %conv19
  %add = add i64 %mul, %21
  %inc28 = or i32 %i13.0249, 1
  %stride.1 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %11, i32 %inc28, i32 2
  %25 = load i32, i32* %stride.1, align 4, !tbaa !50
  %conv19.1 = sext i32 %25 to i64
  %min.1 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %12, i32 %inc28, i32 0
  %26 = load i32, i32* %min.1, align 4, !tbaa !47
  %min24.1 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %11, i32 %inc28, i32 0
  %27 = load i32, i32* %min24.1, align 4, !tbaa !47
  %sub.1 = sub nsw i32 %26, %27
  %conv25.1 = sext i32 %sub.1 to i64
  %mul.1 = mul nsw i64 %conv25.1, %conv19.1
  %add.1 = add i64 %mul.1, %add
  %inc28.1 = or i32 %i13.0249, 2
  %stride.2 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %11, i32 %inc28.1, i32 2
  %28 = load i32, i32* %stride.2, align 4, !tbaa !50
  %conv19.2 = sext i32 %28 to i64
  %min.2 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %12, i32 %inc28.1, i32 0
  %29 = load i32, i32* %min.2, align 4, !tbaa !47
  %min24.2 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %11, i32 %inc28.1, i32 0
  %30 = load i32, i32* %min24.2, align 4, !tbaa !47
  %sub.2 = sub nsw i32 %29, %30
  %conv25.2 = sext i32 %sub.2 to i64
  %mul.2 = mul nsw i64 %conv25.2, %conv19.2
  %add.2 = add i64 %mul.2, %add.1
  %inc28.2 = or i32 %i13.0249, 3
  %stride.3 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %11, i32 %inc28.2, i32 2
  %31 = load i32, i32* %stride.3, align 4, !tbaa !50
  %conv19.3 = sext i32 %31 to i64
  %min.3 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %12, i32 %inc28.2, i32 0
  %32 = load i32, i32* %min.3, align 4, !tbaa !47
  %min24.3 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %11, i32 %inc28.2, i32 0
  %33 = load i32, i32* %min24.3, align 4, !tbaa !47
  %sub.3 = sub nsw i32 %32, %33
  %conv25.3 = sext i32 %sub.3 to i64
  %mul.3 = mul nsw i64 %conv25.3, %conv19.3
  %add.3 = add i64 %mul.3, %add.2
  %inc28.3 = or i32 %i13.0249, 4
  %stride.4 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %11, i32 %inc28.3, i32 2
  %34 = load i32, i32* %stride.4, align 4, !tbaa !50
  %conv19.4 = sext i32 %34 to i64
  %min.4 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %12, i32 %inc28.3, i32 0
  %35 = load i32, i32* %min.4, align 4, !tbaa !47
  %min24.4 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %11, i32 %inc28.3, i32 0
  %36 = load i32, i32* %min24.4, align 4, !tbaa !47
  %sub.4 = sub nsw i32 %35, %36
  %conv25.4 = sext i32 %sub.4 to i64
  %mul.4 = mul nsw i64 %conv25.4, %conv19.4
  %add.4 = add i64 %mul.4, %add.3
  %inc28.4 = or i32 %i13.0249, 5
  %stride.5 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %11, i32 %inc28.4, i32 2
  %37 = load i32, i32* %stride.5, align 4, !tbaa !50
  %conv19.5 = sext i32 %37 to i64
  %min.5 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %12, i32 %inc28.4, i32 0
  %38 = load i32, i32* %min.5, align 4, !tbaa !47
  %min24.5 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %11, i32 %inc28.4, i32 0
  %39 = load i32, i32* %min24.5, align 4, !tbaa !47
  %sub.5 = sub nsw i32 %38, %39
  %conv25.5 = sext i32 %sub.5 to i64
  %mul.5 = mul nsw i64 %conv25.5, %conv19.5
  %add.5 = add i64 %mul.5, %add.4
  %inc28.5 = or i32 %i13.0249, 6
  %stride.6 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %11, i32 %inc28.5, i32 2
  %40 = load i32, i32* %stride.6, align 4, !tbaa !50
  %conv19.6 = sext i32 %40 to i64
  %min.6 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %12, i32 %inc28.5, i32 0
  %41 = load i32, i32* %min.6, align 4, !tbaa !47
  %min24.6 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %11, i32 %inc28.5, i32 0
  %42 = load i32, i32* %min24.6, align 4, !tbaa !47
  %sub.6 = sub nsw i32 %41, %42
  %conv25.6 = sext i32 %sub.6 to i64
  %mul.6 = mul nsw i64 %conv25.6, %conv19.6
  %add.6 = add i64 %mul.6, %add.5
  %inc28.6 = or i32 %i13.0249, 7
  %stride.7 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %11, i32 %inc28.6, i32 2
  %43 = load i32, i32* %stride.7, align 4, !tbaa !50
  %conv19.7 = sext i32 %43 to i64
  %min.7 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %12, i32 %inc28.6, i32 0
  %44 = load i32, i32* %min.7, align 4, !tbaa !47
  %min24.7 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %11, i32 %inc28.6, i32 0
  %45 = load i32, i32* %min24.7, align 4, !tbaa !47
  %sub.7 = sub nsw i32 %44, %45
  %conv25.7 = sext i32 %sub.7 to i64
  %mul.7 = mul nsw i64 %conv25.7, %conv19.7
  %add.7 = add i64 %mul.7, %add.6
  %inc28.7 = add nuw nsw i32 %i13.0249, 8
  %niter.nsub.7 = add i32 %niter, -8
  %niter.ncmp.7 = icmp eq i32 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %for.cond.cleanup16.loopexit.unr-lcssa, label %for.body17, !llvm.loop !64

lor.lhs.false:                                    ; preds = %for.cond.cleanup16
  %bits.i229 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i32 0, i32 4, i32 1
  %46 = load i8, i8* %bits.i229, align 1, !tbaa !38
  %conv.i230 = zext i8 %46 to i32
  %add.i231 = add nuw nsw i32 %conv.i230, 7
  %div.i232 = lshr i32 %add.i231, 3
  %cmp40.not = icmp ne i32 %div.i, %div.i232
  %cmp43 = icmp sgt i32 %10, 16
  %or.cond237 = or i1 %cmp43, %cmp40.not
  br i1 %or.cond237, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %for.cond.cleanup16
  %47 = bitcast %"struct.Halide::Runtime::Internal::device_copy"* %agg.result to i8*
  tail call void @llvm.memset.p0i8.i32(i8* nonnull align 8 dereferenceable(416) %47, i8 0, i32 416, i1 false)
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %cmp45 = icmp eq i32 %div.i, 0
  br i1 %cmp45, label %if.then46, label %for.cond49.preheader

for.cond49.preheader:                             ; preds = %if.end
  br i1 %cmp15248, label %for.body53.lr.ph, label %while.end

for.body53.lr.ph:                                 ; preds = %for.cond49.preheader
  %dim55 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i32 0, i32 6
  %48 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim55, align 8, !tbaa !46
  %dim64 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i32 0, i32 6
  %49 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim64, align 8, !tbaa !46
  br label %for.body53

if.then46:                                        ; preds = %if.end
  %50 = bitcast %"struct.Halide::Runtime::Internal::device_copy"* %agg.result to i8*
  tail call void @llvm.memset.p0i8.i32(i8* nonnull align 8 dereferenceable(416) %50, i8 0, i32 416, i1 false)
  br label %cleanup

while.cond.preheader:                             ; preds = %for.cond.cleanup86
  %.pre = load i64, i64* %chunk_size, align 8, !tbaa !60
  %.pre253 = load i64, i64* %arrayidx11, align 8, !tbaa !26
  %cmp121239 = icmp eq i64 %.pre, %.pre253
  br i1 %cmp121239, label %land.rhs.lr.ph, label %while.end

land.rhs.lr.ph:                                   ; preds = %while.cond.preheader
  %.pre254 = load i64, i64* %arrayidx12, align 8, !tbaa !26
  br label %land.rhs

for.body53:                                       ; preds = %for.cond.cleanup86, %for.body53.lr.ph
  %i48.0246 = phi i32 [ 0, %for.body53.lr.ph ], [ %inc116, %for.cond.cleanup86 ]
  %stride57 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %48, i32 %i48.0246, i32 2
  %51 = load i32, i32* %stride57, align 4, !tbaa !50
  %conv58 = sext i32 %51 to i64
  %mul62 = mul nsw i64 %conv58, %conv
  %stride66 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %49, i32 %i48.0246, i32 2
  %52 = load i32, i32* %stride66, align 4, !tbaa !50
  %conv67 = sext i32 %52 to i64
  %mul71 = mul nsw i64 %conv67, %conv
  %cmp73240.not = icmp eq i32 %i48.0246, 0
  br i1 %cmp73240.not, label %for.end83, label %for.body74.lr.ph

for.body74.lr.ph:                                 ; preds = %for.body53
  %cmp78.not = icmp eq i64 %mul62, 0
  br i1 %cmp78.not, label %for.end83, label %for.body74.us

for.body74.us:                                    ; preds = %for.body74.lr.ph, %for.inc81.us
  %insert.0241.us = phi i32 [ %inc82.us, %for.inc81.us ], [ 0, %for.body74.lr.ph ]
  %arrayidx76.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 %insert.0241.us
  %53 = load i64, i64* %arrayidx76.us, align 8, !tbaa !26
  %cmp77.us = icmp ult i64 %mul62, %53
  br i1 %cmp77.us, label %for.end83, label %for.inc81.us

for.inc81.us:                                     ; preds = %for.body74.us
  %inc82.us = add nuw nsw i32 %insert.0241.us, 1
  %exitcond2.not = icmp eq i32 %inc82.us, %i48.0246
  br i1 %exitcond2.not, label %for.end83, label %for.body74.us, !llvm.loop !65

for.end83:                                        ; preds = %for.inc81.us, %for.body74.us, %for.body74.lr.ph, %for.body53
  %insert.0.lcssa = phi i32 [ 0, %for.body53 ], [ %i48.0246, %for.body74.lr.ph ], [ %i48.0246, %for.inc81.us ], [ %insert.0241.us, %for.body74.us ]
  %cmp85243 = icmp ugt i32 %i48.0246, %insert.0.lcssa
  br i1 %cmp85243, label %for.body87.preheader, label %for.cond.cleanup86

for.body87.preheader:                             ; preds = %for.end83
  %54 = sub i32 %i48.0246, %insert.0.lcssa
  %55 = xor i32 %insert.0.lcssa, -1
  %56 = add i32 %i48.0246, %55
  %xtraiter5 = and i32 %54, 7
  %lcmp.mod6.not = icmp eq i32 %xtraiter5, 0
  br i1 %lcmp.mod6.not, label %for.body87.prol.loopexit, label %for.body87.prol

for.body87.prol:                                  ; preds = %for.body87.preheader, %for.body87.prol
  %j.0244.prol = phi i32 [ %sub89.prol, %for.body87.prol ], [ %i48.0246, %for.body87.preheader ]
  %prol.iter = phi i32 [ %prol.iter.sub, %for.body87.prol ], [ %xtraiter5, %for.body87.preheader ]
  %sub89.prol = add nsw i32 %j.0244.prol, -1
  %arrayidx90.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 %sub89.prol
  %57 = load i64, i64* %arrayidx90.prol, align 8, !tbaa !26
  %arrayidx92.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 %j.0244.prol
  store i64 %57, i64* %arrayidx92.prol, align 8, !tbaa !26
  %arrayidx95.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 %sub89.prol
  %58 = load i64, i64* %arrayidx95.prol, align 8, !tbaa !26
  %arrayidx97.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 %j.0244.prol
  store i64 %58, i64* %arrayidx97.prol, align 8, !tbaa !26
  %arrayidx100.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 %sub89.prol
  %59 = load i64, i64* %arrayidx100.prol, align 8, !tbaa !26
  %arrayidx102.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 %j.0244.prol
  store i64 %59, i64* %arrayidx102.prol, align 8, !tbaa !26
  %prol.iter.sub = add i32 %prol.iter, -1
  %prol.iter.cmp.not = icmp eq i32 %prol.iter.sub, 0
  br i1 %prol.iter.cmp.not, label %for.body87.prol.loopexit, label %for.body87.prol, !llvm.loop !66

for.body87.prol.loopexit:                         ; preds = %for.body87.prol, %for.body87.preheader
  %j.0244.unr = phi i32 [ %i48.0246, %for.body87.preheader ], [ %sub89.prol, %for.body87.prol ]
  %60 = icmp ult i32 %56, 7
  br i1 %60, label %for.cond.cleanup86, label %for.body87

for.cond.cleanup86:                               ; preds = %for.body87.prol.loopexit, %for.body87, %for.end83
  %extent107 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %48, i32 %i48.0246, i32 1
  %61 = load i32, i32* %extent107, align 4, !tbaa !49
  %conv108 = sext i32 %61 to i64
  %arrayidx110 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 %insert.0.lcssa
  store i64 %conv108, i64* %arrayidx110, align 8, !tbaa !26
  %arrayidx112 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 %insert.0.lcssa
  store i64 %mul62, i64* %arrayidx112, align 8, !tbaa !26
  %arrayidx114 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 %insert.0.lcssa
  store i64 %mul71, i64* %arrayidx114, align 8, !tbaa !26
  %inc116 = add nuw nsw i32 %i48.0246, 1
  %exitcond3.not = icmp eq i32 %inc116, %10
  br i1 %exitcond3.not, label %while.cond.preheader, label %for.body53, !llvm.loop !67

for.body87:                                       ; preds = %for.body87.prol.loopexit, %for.body87
  %j.0244 = phi i32 [ %sub89.7, %for.body87 ], [ %j.0244.unr, %for.body87.prol.loopexit ]
  %sub89 = add nsw i32 %j.0244, -1
  %arrayidx90 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 %sub89
  %62 = load i64, i64* %arrayidx90, align 8, !tbaa !26
  %arrayidx92 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 %j.0244
  store i64 %62, i64* %arrayidx92, align 8, !tbaa !26
  %arrayidx95 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 %sub89
  %63 = load i64, i64* %arrayidx95, align 8, !tbaa !26
  %arrayidx97 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 %j.0244
  store i64 %63, i64* %arrayidx97, align 8, !tbaa !26
  %arrayidx100 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 %sub89
  %64 = load i64, i64* %arrayidx100, align 8, !tbaa !26
  %arrayidx102 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 %j.0244
  store i64 %64, i64* %arrayidx102, align 8, !tbaa !26
  %sub89.1 = add nsw i32 %j.0244, -2
  %arrayidx90.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 %sub89.1
  %65 = load i64, i64* %arrayidx90.1, align 8, !tbaa !26
  %arrayidx92.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 %sub89
  store i64 %65, i64* %arrayidx92.1, align 8, !tbaa !26
  %arrayidx95.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 %sub89.1
  %66 = load i64, i64* %arrayidx95.1, align 8, !tbaa !26
  %arrayidx97.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 %sub89
  store i64 %66, i64* %arrayidx97.1, align 8, !tbaa !26
  %arrayidx100.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 %sub89.1
  %67 = load i64, i64* %arrayidx100.1, align 8, !tbaa !26
  %arrayidx102.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 %sub89
  store i64 %67, i64* %arrayidx102.1, align 8, !tbaa !26
  %sub89.2 = add nsw i32 %j.0244, -3
  %arrayidx90.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 %sub89.2
  %68 = load i64, i64* %arrayidx90.2, align 8, !tbaa !26
  %arrayidx92.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 %sub89.1
  store i64 %68, i64* %arrayidx92.2, align 8, !tbaa !26
  %arrayidx95.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 %sub89.2
  %69 = load i64, i64* %arrayidx95.2, align 8, !tbaa !26
  %arrayidx97.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 %sub89.1
  store i64 %69, i64* %arrayidx97.2, align 8, !tbaa !26
  %arrayidx100.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 %sub89.2
  %70 = load i64, i64* %arrayidx100.2, align 8, !tbaa !26
  %arrayidx102.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 %sub89.1
  store i64 %70, i64* %arrayidx102.2, align 8, !tbaa !26
  %sub89.3 = add nsw i32 %j.0244, -4
  %arrayidx90.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 %sub89.3
  %71 = load i64, i64* %arrayidx90.3, align 8, !tbaa !26
  %arrayidx92.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 %sub89.2
  store i64 %71, i64* %arrayidx92.3, align 8, !tbaa !26
  %arrayidx95.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 %sub89.3
  %72 = load i64, i64* %arrayidx95.3, align 8, !tbaa !26
  %arrayidx97.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 %sub89.2
  store i64 %72, i64* %arrayidx97.3, align 8, !tbaa !26
  %arrayidx100.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 %sub89.3
  %73 = load i64, i64* %arrayidx100.3, align 8, !tbaa !26
  %arrayidx102.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 %sub89.2
  store i64 %73, i64* %arrayidx102.3, align 8, !tbaa !26
  %sub89.4 = add nsw i32 %j.0244, -5
  %arrayidx90.4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 %sub89.4
  %74 = load i64, i64* %arrayidx90.4, align 8, !tbaa !26
  %arrayidx92.4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 %sub89.3
  store i64 %74, i64* %arrayidx92.4, align 8, !tbaa !26
  %arrayidx95.4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 %sub89.4
  %75 = load i64, i64* %arrayidx95.4, align 8, !tbaa !26
  %arrayidx97.4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 %sub89.3
  store i64 %75, i64* %arrayidx97.4, align 8, !tbaa !26
  %arrayidx100.4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 %sub89.4
  %76 = load i64, i64* %arrayidx100.4, align 8, !tbaa !26
  %arrayidx102.4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 %sub89.3
  store i64 %76, i64* %arrayidx102.4, align 8, !tbaa !26
  %sub89.5 = add nsw i32 %j.0244, -6
  %arrayidx90.5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 %sub89.5
  %77 = load i64, i64* %arrayidx90.5, align 8, !tbaa !26
  %arrayidx92.5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 %sub89.4
  store i64 %77, i64* %arrayidx92.5, align 8, !tbaa !26
  %arrayidx95.5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 %sub89.5
  %78 = load i64, i64* %arrayidx95.5, align 8, !tbaa !26
  %arrayidx97.5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 %sub89.4
  store i64 %78, i64* %arrayidx97.5, align 8, !tbaa !26
  %arrayidx100.5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 %sub89.5
  %79 = load i64, i64* %arrayidx100.5, align 8, !tbaa !26
  %arrayidx102.5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 %sub89.4
  store i64 %79, i64* %arrayidx102.5, align 8, !tbaa !26
  %sub89.6 = add nsw i32 %j.0244, -7
  %arrayidx90.6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 %sub89.6
  %80 = load i64, i64* %arrayidx90.6, align 8, !tbaa !26
  %arrayidx92.6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 %sub89.5
  store i64 %80, i64* %arrayidx92.6, align 8, !tbaa !26
  %arrayidx95.6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 %sub89.6
  %81 = load i64, i64* %arrayidx95.6, align 8, !tbaa !26
  %arrayidx97.6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 %sub89.5
  store i64 %81, i64* %arrayidx97.6, align 8, !tbaa !26
  %arrayidx100.6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 %sub89.6
  %82 = load i64, i64* %arrayidx100.6, align 8, !tbaa !26
  %arrayidx102.6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 %sub89.5
  store i64 %82, i64* %arrayidx102.6, align 8, !tbaa !26
  %sub89.7 = add nsw i32 %j.0244, -8
  %arrayidx90.7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 %sub89.7
  %83 = load i64, i64* %arrayidx90.7, align 8, !tbaa !26
  %arrayidx92.7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 3, i32 %sub89.6
  store i64 %83, i64* %arrayidx92.7, align 8, !tbaa !26
  %arrayidx95.7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 %sub89.7
  %84 = load i64, i64* %arrayidx95.7, align 8, !tbaa !26
  %arrayidx97.7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 5, i32 %sub89.6
  store i64 %84, i64* %arrayidx97.7, align 8, !tbaa !26
  %arrayidx100.7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 %sub89.7
  %85 = load i64, i64* %arrayidx100.7, align 8, !tbaa !26
  %arrayidx102.7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i32 0, i32 4, i32 %sub89.6
  store i64 %85, i64* %arrayidx102.7, align 8, !tbaa !26
  %cmp85.7 = icmp sgt i32 %sub89.7, %insert.0.lcssa
  br i1 %cmp85.7, label %for.body87, label %for.cond.cleanup86, !llvm.loop !68

land.rhs:                                         ; preds = %while.body, %land.rhs.lr.ph
  %86 = phi i64 [ %.pre254, %land.rhs.lr.ph ], [ %91, %while.body ]
  %87 = phi i64 [ %.pre, %land.rhs.lr.ph ], [ %mul129, %while.body ]
  %cmp125 = icmp eq i64 %87, %86
  br i1 %cmp125, label %while.body, label %while.end

while.body:                                       ; preds = %land.rhs
  %88 = load i64, i64* %arrayidx, align 8, !tbaa !26
  %mul129 = mul i64 %88, %86
  store i64 %mul129, i64* %chunk_size, align 8, !tbaa !60
  %89 = load i64, i64* %arrayidx.1, align 8, !tbaa !26
  store i64 %89, i64* %arrayidx, align 8, !tbaa !26
  %90 = load i64, i64* %arrayidx11.1, align 8, !tbaa !26
  store i64 %90, i64* %arrayidx11, align 8, !tbaa !26
  %91 = load i64, i64* %arrayidx12.1, align 8, !tbaa !26
  store i64 %91, i64* %arrayidx12, align 8, !tbaa !26
  %92 = load i64, i64* %arrayidx.2, align 8, !tbaa !26
  store i64 %92, i64* %arrayidx.1, align 8, !tbaa !26
  %93 = load i64, i64* %arrayidx11.2, align 8, !tbaa !26
  store i64 %93, i64* %arrayidx11.1, align 8, !tbaa !26
  %94 = load i64, i64* %arrayidx12.2, align 8, !tbaa !26
  store i64 %94, i64* %arrayidx12.1, align 8, !tbaa !26
  %95 = load i64, i64* %arrayidx.3, align 8, !tbaa !26
  store i64 %95, i64* %arrayidx.2, align 8, !tbaa !26
  %96 = load i64, i64* %arrayidx11.3, align 8, !tbaa !26
  store i64 %96, i64* %arrayidx11.2, align 8, !tbaa !26
  %97 = load i64, i64* %arrayidx12.3, align 8, !tbaa !26
  store i64 %97, i64* %arrayidx12.2, align 8, !tbaa !26
  %98 = load i64, i64* %arrayidx.4, align 8, !tbaa !26
  store i64 %98, i64* %arrayidx.3, align 8, !tbaa !26
  %99 = load i64, i64* %arrayidx11.4, align 8, !tbaa !26
  store i64 %99, i64* %arrayidx11.3, align 8, !tbaa !26
  %100 = load i64, i64* %arrayidx12.4, align 8, !tbaa !26
  store i64 %100, i64* %arrayidx12.3, align 8, !tbaa !26
  %101 = load i64, i64* %arrayidx.5, align 8, !tbaa !26
  store i64 %101, i64* %arrayidx.4, align 8, !tbaa !26
  %102 = load i64, i64* %arrayidx11.5, align 8, !tbaa !26
  store i64 %102, i64* %arrayidx11.4, align 8, !tbaa !26
  %103 = load i64, i64* %arrayidx12.5, align 8, !tbaa !26
  store i64 %103, i64* %arrayidx12.4, align 8, !tbaa !26
  %104 = load i64, i64* %arrayidx.6, align 8, !tbaa !26
  store i64 %104, i64* %arrayidx.5, align 8, !tbaa !26
  %105 = load i64, i64* %arrayidx11.6, align 8, !tbaa !26
  store i64 %105, i64* %arrayidx11.5, align 8, !tbaa !26
  %106 = load i64, i64* %arrayidx12.6, align 8, !tbaa !26
  store i64 %106, i64* %arrayidx12.5, align 8, !tbaa !26
  %107 = load i64, i64* %arrayidx.7, align 8, !tbaa !26
  store i64 %107, i64* %arrayidx.6, align 8, !tbaa !26
  %108 = load i64, i64* %arrayidx11.7, align 8, !tbaa !26
  store i64 %108, i64* %arrayidx11.6, align 8, !tbaa !26
  %109 = load i64, i64* %arrayidx12.7, align 8, !tbaa !26
  store i64 %109, i64* %arrayidx12.6, align 8, !tbaa !26
  %110 = load i64, i64* %arrayidx.8, align 8, !tbaa !26
  store i64 %110, i64* %arrayidx.7, align 8, !tbaa !26
  %111 = load i64, i64* %arrayidx11.8, align 8, !tbaa !26
  store i64 %111, i64* %arrayidx11.7, align 8, !tbaa !26
  %112 = load i64, i64* %arrayidx12.8, align 8, !tbaa !26
  store i64 %112, i64* %arrayidx12.7, align 8, !tbaa !26
  %113 = load i64, i64* %arrayidx.9, align 8, !tbaa !26
  store i64 %113, i64* %arrayidx.8, align 8, !tbaa !26
  %114 = load i64, i64* %arrayidx11.9, align 8, !tbaa !26
  store i64 %114, i64* %arrayidx11.8, align 8, !tbaa !26
  %115 = load i64, i64* %arrayidx12.9, align 8, !tbaa !26
  store i64 %115, i64* %arrayidx12.8, align 8, !tbaa !26
  %116 = load i64, i64* %arrayidx.10, align 8, !tbaa !26
  store i64 %116, i64* %arrayidx.9, align 8, !tbaa !26
  %117 = load i64, i64* %arrayidx11.10, align 8, !tbaa !26
  store i64 %117, i64* %arrayidx11.9, align 8, !tbaa !26
  %118 = load i64, i64* %arrayidx12.10, align 8, !tbaa !26
  store i64 %118, i64* %arrayidx12.9, align 8, !tbaa !26
  %119 = load i64, i64* %arrayidx.11, align 8, !tbaa !26
  store i64 %119, i64* %arrayidx.10, align 8, !tbaa !26
  %120 = load i64, i64* %arrayidx11.11, align 8, !tbaa !26
  store i64 %120, i64* %arrayidx11.10, align 8, !tbaa !26
  %121 = load i64, i64* %arrayidx12.11, align 8, !tbaa !26
  store i64 %121, i64* %arrayidx12.10, align 8, !tbaa !26
  %122 = load i64, i64* %arrayidx.12, align 8, !tbaa !26
  store i64 %122, i64* %arrayidx.11, align 8, !tbaa !26
  %123 = load i64, i64* %arrayidx11.12, align 8, !tbaa !26
  store i64 %123, i64* %arrayidx11.11, align 8, !tbaa !26
  %124 = load i64, i64* %arrayidx12.12, align 8, !tbaa !26
  store i64 %124, i64* %arrayidx12.11, align 8, !tbaa !26
  %125 = load i64, i64* %arrayidx.13, align 8, !tbaa !26
  store i64 %125, i64* %arrayidx.12, align 8, !tbaa !26
  %126 = load i64, i64* %arrayidx11.13, align 8, !tbaa !26
  store i64 %126, i64* %arrayidx11.12, align 8, !tbaa !26
  %127 = load i64, i64* %arrayidx12.13, align 8, !tbaa !26
  store i64 %127, i64* %arrayidx12.12, align 8, !tbaa !26
  %128 = load i64, i64* %arrayidx.14, align 8, !tbaa !26
  store i64 %128, i64* %arrayidx.13, align 8, !tbaa !26
  %129 = load i64, i64* %arrayidx11.14, align 8, !tbaa !26
  store i64 %129, i64* %arrayidx11.13, align 8, !tbaa !26
  %130 = load i64, i64* %arrayidx12.14, align 8, !tbaa !26
  store i64 %130, i64* %arrayidx12.13, align 8, !tbaa !26
  %131 = load i64, i64* %arrayidx.15, align 8, !tbaa !26
  store i64 %131, i64* %arrayidx.14, align 8, !tbaa !26
  %132 = load i64, i64* %arrayidx11.15, align 8, !tbaa !26
  store i64 %132, i64* %arrayidx11.14, align 8, !tbaa !26
  %133 = load i64, i64* %arrayidx12.15, align 8, !tbaa !26
  store i64 %133, i64* %arrayidx12.14, align 8, !tbaa !26
  store i64 1, i64* %arrayidx.15, align 8, !tbaa !26
  store i64 0, i64* %arrayidx11.15, align 8, !tbaa !26
  store i64 0, i64* %arrayidx12.15, align 8, !tbaa !26
  %cmp121 = icmp eq i64 %mul129, %90
  br i1 %cmp121, label %land.rhs, label %while.end, !llvm.loop !69

while.end:                                        ; preds = %while.body, %land.rhs, %while.cond.preheader, %for.cond49.preheader
  %134 = bitcast %"struct.Halide::Runtime::Internal::device_copy"* %agg.result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 8 dereferenceable(416) %134, i8* nonnull align 8 dereferenceable(416) %0, i32 416, i1 false), !tbaa.struct !70
  br label %cleanup

cleanup:                                          ; preds = %while.end, %if.then46, %if.then
  call void @llvm.lifetime.end.p0i8(i64 416, i8* nonnull %0) #11
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP15halide_buffer_t(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %flags.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 3
  %0 = load i64, i64* %flags.i.i, align 8, !tbaa !44
  %and.i.i = and i64 %0, 2
  %cmp.i.i.not = icmp eq i64 %and.i.i, 0
  br i1 %cmp.i.i.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %1 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !42
  %and.i.i46 = and i64 %0, 1
  %cmp.i.i47.not = icmp eq i64 %and.i.i46, 0
  br i1 %cmp.i.i47.not, label %if.end9, label %return

if.end9:                                          ; preds = %if.end
  %cmp = icmp eq %struct.halide_device_interface_t* %1, null
  br i1 %cmp, label %return, label %if.end15

if.end15:                                         ; preds = %if.end9
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %1, i32 0, i32 15
  %2 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %copy_to_host = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %2, i32 0, i32 6
  %3 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %copy_to_host, align 4, !tbaa !73
  %call16 = tail call i32 %3(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #14
  %cmp17.not = icmp eq i32 %call16, 0
  br i1 %cmp17.not, label %if.end23, label %return

if.end23:                                         ; preds = %if.end15
  %4 = load i64, i64* %flags.i.i, align 8, !tbaa !44
  %and.i.i44 = and i64 %4, -3
  store i64 %and.i.i44, i64* %flags.i.i, align 8, !tbaa !44
  %call24 = tail call i32 @halide_msan_annotate_buffer_is_initialized(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #14
  br label %return

return:                                           ; preds = %if.end23, %if.end15, %if.end9, %if.end, %entry
  %retval.2 = phi i32 [ 0, %entry ], [ 0, %if.end23 ], [ -14, %if.end ], [ -19, %if.end9 ], [ -14, %if.end15 ]
  ret i32 %retval.2
}

; Function Attrs: nounwind mustprogress
define weak void @halide_device_release(i8* %user_context, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %device_interface, i32 0, i32 15
  %0 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %device_release = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %0, i32 0, i32 5
  %1 = load i32 (i8*)*, i32 (i8*)** %device_release, align 4, !tbaa !75
  %call = tail call i32 %1(i8* %user_context) #14
  ret void
}

; Function Attrs: nounwind
define weak i32 @halide_copy_to_host(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #14
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.17, i32 0, i32 0)) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !42
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !40
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !44
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end16.i.split

if.end16.i.split:                                 ; preds = %if.end16.i
  %call11 = tail call i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP15halide_buffer_t(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  br label %cleanup

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split, label %cleanup

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %call12 = tail call i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP15halide_buffer_t(i8* %user_context, %struct.halide_buffer_t* %buf) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16.i.split, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.0 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ %call11, %if.end16.i.split ], [ %call12, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define linkonce i32 @copy_to_device_already_locked(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7.18, i32 0, i32 0)) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !42
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !40
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !44
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit, %if.end16.i
  %cmp1 = icmp eq %struct.halide_device_interface_t* %device_interface, null
  br i1 %cmp1, label %if.then2, label %if.end11

if.then2:                                         ; preds = %if.end
  %device_interface5 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %4 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface5, align 8, !tbaa !42
  %cmp6 = icmp eq %struct.halide_device_interface_t* %4, null
  br i1 %cmp6, label %if.then7, label %if.end11

if.then7:                                         ; preds = %if.then2
  %call8 = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %cleanup

if.end11:                                         ; preds = %if.then2, %if.end
  %device_interface.addr.0 = phi %struct.halide_device_interface_t* [ %device_interface, %if.end ], [ %4, %if.then2 ]
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 0
  %5 = load i64, i64* %device, align 8, !tbaa !40
  %tobool.not = icmp eq i64 %5, 0
  br i1 %tobool.not, label %if.then18, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end11
  %device_interface12 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %6 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface12, align 8, !tbaa !42
  %cmp13.not = icmp eq %struct.halide_device_interface_t* %6, %device_interface.addr.0
  br i1 %cmp13.not, label %if.end27, label %if.then14

if.then14:                                        ; preds = %land.lhs.true
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.9.19, i32 0, i32 0)) #14
  br label %cleanup

if.then18:                                        ; preds = %if.end11
  %call19 = tail call i32 @halide_device_malloc(i8* %user_context, %struct.halide_buffer_t* nonnull %buf, %struct.halide_device_interface_t* nonnull %device_interface.addr.0) #15
  %cmp20.not = icmp eq i32 %call19, 0
  br i1 %cmp20.not, label %if.end27, label %cleanup

if.end27:                                         ; preds = %if.then18, %land.lhs.true
  %flags.i.i97 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 3
  %7 = load i64, i64* %flags.i.i97, align 8, !tbaa !44
  %and.i.i98 = and i64 %7, 1
  %cmp.i.i99.not = icmp eq i64 %and.i.i98, 0
  br i1 %cmp.i.i99.not, label %cleanup, label %if.then29

if.then29:                                        ; preds = %if.end27
  %and.i.i96 = and i64 %7, 2
  %cmp.i.i.not = icmp eq i64 %and.i.i96, 0
  br i1 %cmp.i.i.not, label %if.else, label %cleanup

if.else:                                          ; preds = %if.then29
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %device_interface.addr.0, i32 0, i32 15
  %8 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %copy_to_device = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %8, i32 0, i32 7
  %9 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %copy_to_device, align 4, !tbaa !76
  %call44 = tail call i32 %9(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #14
  %cmp45 = icmp eq i32 %call44, 0
  br i1 %cmp45, label %if.then46, label %cleanup

if.then46:                                        ; preds = %if.else
  %10 = load i64, i64* %flags.i.i97, align 8, !tbaa !44
  %and.i.i = and i64 %10, -2
  store i64 %and.i.i, i64* %flags.i.i97, align 8, !tbaa !44
  br label %cleanup

cleanup:                                          ; preds = %if.then46, %if.else, %if.then29, %if.end27, %if.then18, %if.then14, %if.then7, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.0 = phi i32 [ %call8, %if.then7 ], [ -42, %if.then14 ], [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ 0, %if.then46 ], [ %call19, %if.then18 ], [ -15, %if.then29 ], [ -15, %if.else ], [ 0, %if.end27 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_malloc(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17.20, i32 0, i32 0)) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !42
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !40
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !44
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup12

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface3.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface3.phi.trans.insert, align 8, !tbaa !42
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp4.not = icmp eq %struct.halide_device_interface_t* %4, null
  %cmp5.not = icmp eq %struct.halide_device_interface_t* %4, %device_interface
  %or.cond = or i1 %cmp4.not, %cmp5.not
  br i1 %or.cond, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20.21, i32 0, i32 0)) #14
  br label %cleanup12

if.end7:                                          ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %device_interface, i32 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i32 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 4, !tbaa !77
  tail call void %6() #14
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %device_malloc = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i32 0, i32 2
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_malloc, align 4, !tbaa !78
  %call9 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #14
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i32 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 4, !tbaa !79
  tail call void %10() #14
  %tobool.not = icmp eq i32 %call9, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -16
  ret i32 %spec.select

cleanup12:                                        ; preds = %if.then6, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ -42, %if.then6 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind
define weak i32 @halide_copy_to_device(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #14
  %call = tail call i32 @copy_to_device_already_locked(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) #15
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #14
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_sync(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16.22, i32 0, i32 0)) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !42
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !40
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !44
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup8

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface1.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface1.phi.trans.insert, align 8, !tbaa !42
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp2 = icmp eq %struct.halide_device_interface_t* %4, null
  br i1 %cmp2, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  %call4 = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %cleanup8

if.end5:                                          ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i32 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %device_sync = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i32 0, i32 4
  %6 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_sync, align 4, !tbaa !80
  %call6 = tail call i32 %6(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #14
  %tobool.not = icmp eq i32 %call6, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -17
  ret i32 %spec.select

cleanup8:                                         ; preds = %if.then3, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ %call4, %if.then3 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_free(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21.23, i32 0, i32 0)) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !42
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !40
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !44
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup12

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface1.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface1.phi.trans.insert, align 8, !tbaa !42
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp2.not = icmp eq %struct.halide_device_interface_t* %4, null
  br i1 %cmp2.not, label %if.end11, label %if.then3

if.then3:                                         ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i32 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i32 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 4, !tbaa !77
  tail call void %6() #14
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %device_free = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i32 0, i32 3
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_free, align 4, !tbaa !81
  %call5 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #14
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i32 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 4, !tbaa !79
  tail call void %10() #14
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 0
  %11 = load i64, i64* %device, align 8, !tbaa !40
  %cmp7 = icmp eq i64 %11, 0
  br i1 %cmp7, label %do.end, label %if.then8

if.then8:                                         ; preds = %if.then3
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @.str.22.24, i32 0, i32 0)) #14
  tail call void @abort() #14
  br label %do.end

do.end:                                           ; preds = %if.then8, %if.then3
  %tobool.not = icmp eq i32 %call5, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -18
  ret i32 %spec.select

if.end11:                                         ; preds = %if.end
  %flags3.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 3
  %12 = load i64, i64* %flags3.i.i, align 8, !tbaa !44
  %and.i.i = and i64 %12, -3
  store i64 %and.i.i, i64* %flags3.i.i, align 8, !tbaa !44
  br label %cleanup12

cleanup12:                                        ; preds = %if.end11, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ 0, %if.end11 ]
  ret i32 %retval.1
}

declare void @abort() local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak void @halide_device_free_as_destructor(i8* %user_context, i8* %obj) local_unnamed_addr #0 {
entry:
  %0 = bitcast i8* %obj to %struct.halide_buffer_t*
  %call = tail call i32 @halide_device_free(i8* %user_context, %struct.halide_buffer_t* %0) #15
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_and_host_malloc(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23.25, i32 0, i32 0)) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !42
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !40
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !44
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup14

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface3.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface3.phi.trans.insert, align 8, !tbaa !42
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp4.not = icmp eq %struct.halide_device_interface_t* %4, null
  %cmp5.not = icmp eq %struct.halide_device_interface_t* %4, %device_interface
  %or.cond = or i1 %cmp4.not, %cmp5.not
  br i1 %or.cond, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.25.26, i32 0, i32 0)) #14
  br label %cleanup14

if.end7:                                          ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %device_interface, i32 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i32 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 4, !tbaa !77
  tail call void %6() #14
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %device_and_host_malloc = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i32 0, i32 8
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_and_host_malloc, align 4, !tbaa !82
  %call9 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #14
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i32 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 4, !tbaa !79
  tail call void %10() #14
  %cmp11.not = icmp eq i32 %call9, 0
  br i1 %cmp11.not, label %cleanup14, label %if.then12

if.then12:                                        ; preds = %if.end7
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.26, i32 0, i32 0)) #14
  br label %cleanup14

cleanup14:                                        ; preds = %if.then12, %if.end7, %if.then6, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ -42, %if.then6 ], [ -16, %if.then12 ], [ 0, %if.end7 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_and_host_free(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.27, i32 0, i32 0)) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !42
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !40
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !44
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup18

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface1.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface1.phi.trans.insert, align 8, !tbaa !42
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp2.not = icmp eq %struct.halide_device_interface_t* %4, null
  br i1 %cmp2.not, label %if.else11, label %if.then3

if.then3:                                         ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i32 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i32 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 4, !tbaa !77
  tail call void %6() #14
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %device_and_host_free = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i32 0, i32 9
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_and_host_free, align 4, !tbaa !83
  %call5 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #14
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i32 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 4, !tbaa !79
  tail call void %10() #14
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 0
  %11 = load i64, i64* %device, align 8, !tbaa !40
  %cmp7 = icmp eq i64 %11, 0
  br i1 %cmp7, label %do.end, label %if.then8

if.then8:                                         ; preds = %if.then3
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @.str.28, i32 0, i32 0)) #14
  tail call void @abort() #14
  br label %do.end

do.end:                                           ; preds = %if.then8, %if.then3
  %tobool.not = icmp eq i32 %call5, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -18
  ret i32 %spec.select

if.else11:                                        ; preds = %if.end
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 2
  %12 = load i8*, i8** %host, align 4, !tbaa !43
  %tobool12.not = icmp eq i8* %12, null
  br i1 %tobool12.not, label %if.end17, label %if.then13

if.then13:                                        ; preds = %if.else11
  tail call void @halide_free(i8* %user_context, i8* nonnull %12) #14
  store i8* null, i8** %host, align 4, !tbaa !43
  br label %if.end17

if.end17:                                         ; preds = %if.then13, %if.else11
  %flags3.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 3
  %13 = load i64, i64* %flags3.i.i, align 8, !tbaa !44
  %and.i.i = and i64 %13, -3
  store i64 %and.i.i, i64* %flags3.i.i, align 8, !tbaa !44
  br label %cleanup18

cleanup18:                                        ; preds = %if.end17, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ 0, %if.end17 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_and_host_malloc(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29, i32 0, i32 0)) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !42
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !40
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !44
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %if.end, label %cleanup13

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit, %if.end16.i
  %dimensions.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 5
  %4 = load i32, i32* %dimensions.i.i, align 4, !tbaa !45
  %cmp16.i.i = icmp sgt i32 %4, 0
  br i1 %cmp16.i.i, label %for.body.lr.ph.i.i, label %if.end._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge

if.end._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge: ; preds = %if.end
  %sub.i.0 = sub nsw i32 1, 0
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

for.body.lr.ph.i.i:                               ; preds = %if.end
  %dim.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 6
  %5 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i.i, align 8, !tbaa !46
  %6 = add i32 %4, -1
  %xtraiter = and i32 %4, 7
  %7 = icmp ult i32 %6, 7
  br i1 %7, label %for.body.i11.i.preheader.unr-lcssa, label %for.body.lr.ph.i.i.new

for.body.lr.ph.i.i.new:                           ; preds = %for.body.lr.ph.i.i
  %unroll_iter = and i32 %4, -8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %if.end.i.i.7, %for.body.lr.ph.i.i.new
  %index.019.i.i = phi i32 [ 0, %for.body.lr.ph.i.i.new ], [ %index.1.i.i.7, %if.end.i.i.7 ]
  %i.017.i.i = phi i32 [ 0, %for.body.lr.ph.i.i.new ], [ %inc.i.i.7, %if.end.i.i.7 ]
  %niter = phi i32 [ %unroll_iter, %for.body.lr.ph.i.i.new ], [ %niter.nsub.7, %if.end.i.i.7 ]
  %stride2.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %i.017.i.i, i32 2
  %8 = load i32, i32* %stride2.i.i, align 4, !tbaa !50
  %cmp3.i.i = icmp sgt i32 %8, 0
  br i1 %cmp3.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  %extent.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %i.017.i.i, i32 1
  %9 = load i32, i32* %extent.i.i, align 4, !tbaa !49
  %sub.i.i = add nsw i32 %9, -1
  %mul.i.i = mul nsw i32 %sub.i.i, %8
  %add.i.i = add nsw i32 %mul.i.i, %index.019.i.i
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %for.body.i.i
  %index.1.i.i = phi i32 [ %add.i.i, %if.then.i.i ], [ %index.019.i.i, %for.body.i.i ]
  %inc.i.i = or i32 %i.017.i.i, 1
  %stride2.i.i.1 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i.i, i32 2
  %10 = load i32, i32* %stride2.i.i.1, align 4, !tbaa !50
  %cmp3.i.i.1 = icmp sgt i32 %10, 0
  br i1 %cmp3.i.i.1, label %if.then.i.i.1, label %if.end.i.i.1

for.body.i11.i.preheader.unr-lcssa:               ; preds = %if.end.i.i.7, %for.body.lr.ph.i.i
  %index.1.i.i.lcssa.ph = phi i32 [ undef, %for.body.lr.ph.i.i ], [ %index.1.i.i.7, %if.end.i.i.7 ]
  %index.019.i.i.unr = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %index.1.i.i.7, %if.end.i.i.7 ]
  %i.017.i.i.unr = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc.i.i.7, %if.end.i.i.7 ]
  %lcmp.mod.not = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body.i11.i.preheader, label %for.body.i.i.epil

for.body.i.i.epil:                                ; preds = %for.body.i11.i.preheader.unr-lcssa, %if.end.i.i.epil
  %index.019.i.i.epil = phi i32 [ %index.1.i.i.epil, %if.end.i.i.epil ], [ %index.019.i.i.unr, %for.body.i11.i.preheader.unr-lcssa ]
  %i.017.i.i.epil = phi i32 [ %inc.i.i.epil, %if.end.i.i.epil ], [ %i.017.i.i.unr, %for.body.i11.i.preheader.unr-lcssa ]
  %epil.iter = phi i32 [ %epil.iter.sub, %if.end.i.i.epil ], [ %xtraiter, %for.body.i11.i.preheader.unr-lcssa ]
  %stride2.i.i.epil = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %i.017.i.i.epil, i32 2
  %11 = load i32, i32* %stride2.i.i.epil, align 4, !tbaa !50
  %cmp3.i.i.epil = icmp sgt i32 %11, 0
  br i1 %cmp3.i.i.epil, label %if.then.i.i.epil, label %if.end.i.i.epil

if.then.i.i.epil:                                 ; preds = %for.body.i.i.epil
  %extent.i.i.epil = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %i.017.i.i.epil, i32 1
  %12 = load i32, i32* %extent.i.i.epil, align 4, !tbaa !49
  %sub.i.i.epil = add nsw i32 %12, -1
  %mul.i.i.epil = mul nsw i32 %sub.i.i.epil, %11
  %add.i.i.epil = add nsw i32 %mul.i.i.epil, %index.019.i.i.epil
  br label %if.end.i.i.epil

if.end.i.i.epil:                                  ; preds = %if.then.i.i.epil, %for.body.i.i.epil
  %index.1.i.i.epil = phi i32 [ %add.i.i.epil, %if.then.i.i.epil ], [ %index.019.i.i.epil, %for.body.i.i.epil ]
  %inc.i.i.epil = add nuw nsw i32 %i.017.i.i.epil, 1
  %epil.iter.sub = add i32 %epil.iter, -1
  %epil.iter.cmp.not = icmp eq i32 %epil.iter.sub, 0
  br i1 %epil.iter.cmp.not, label %for.body.i11.i.preheader, label %for.body.i.i.epil, !llvm.loop !84

for.body.i11.i.preheader:                         ; preds = %if.end.i.i.epil, %for.body.i11.i.preheader.unr-lcssa
  %index.1.i.i.lcssa = phi i32 [ %index.1.i.i.lcssa.ph, %for.body.i11.i.preheader.unr-lcssa ], [ %index.1.i.i.epil, %if.end.i.i.epil ]
  %13 = add i32 %4, -1
  %xtraiter5 = and i32 %4, 7
  %14 = icmp ult i32 %13, 7
  br i1 %14, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit.unr-lcssa, label %for.body.i11.i.preheader.new

for.body.i11.i.preheader.new:                     ; preds = %for.body.i11.i.preheader
  %unroll_iter9 = and i32 %4, -8
  br label %for.body.i11.i

for.body.i11.i:                                   ; preds = %if.end.i20.i.7, %for.body.i11.i.preheader.new
  %index.017.i.i = phi i32 [ 0, %for.body.i11.i.preheader.new ], [ %index.1.i17.i.7, %if.end.i20.i.7 ]
  %i.015.i.i = phi i32 [ 0, %for.body.i11.i.preheader.new ], [ %inc.i18.i.7, %if.end.i20.i.7 ]
  %niter10 = phi i32 [ %unroll_iter9, %for.body.i11.i.preheader.new ], [ %niter10.nsub.7, %if.end.i20.i.7 ]
  %stride2.i9.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %i.015.i.i, i32 2
  %15 = load i32, i32* %stride2.i9.i, align 4, !tbaa !50
  %cmp3.i10.i = icmp slt i32 %15, 0
  br i1 %cmp3.i10.i, label %if.then.i16.i, label %if.end.i20.i

if.then.i16.i:                                    ; preds = %for.body.i11.i
  %extent.i12.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %i.015.i.i, i32 1
  %16 = load i32, i32* %extent.i12.i, align 4, !tbaa !49
  %sub.i13.i = add nsw i32 %16, -1
  %mul.i14.i = mul nsw i32 %sub.i13.i, %15
  %add.i15.i = add nsw i32 %mul.i14.i, %index.017.i.i
  br label %if.end.i20.i

if.end.i20.i:                                     ; preds = %if.then.i16.i, %for.body.i11.i
  %index.1.i17.i = phi i32 [ %add.i15.i, %if.then.i16.i ], [ %index.017.i.i, %for.body.i11.i ]
  %inc.i18.i = or i32 %i.015.i.i, 1
  %stride2.i9.i.1 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i18.i, i32 2
  %17 = load i32, i32* %stride2.i9.i.1, align 4, !tbaa !50
  %cmp3.i10.i.1 = icmp slt i32 %17, 0
  br i1 %cmp3.i10.i.1, label %if.then.i16.i.1, label %if.end.i20.i.1

_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit.unr-lcssa: ; preds = %if.end.i20.i.7, %for.body.i11.i.preheader
  %index.1.i17.i.lcssa.ph = phi i32 [ undef, %for.body.i11.i.preheader ], [ %index.1.i17.i.7, %if.end.i20.i.7 ]
  %index.017.i.i.unr = phi i32 [ 0, %for.body.i11.i.preheader ], [ %index.1.i17.i.7, %if.end.i20.i.7 ]
  %i.015.i.i.unr = phi i32 [ 0, %for.body.i11.i.preheader ], [ %inc.i18.i.7, %if.end.i20.i.7 ]
  %lcmp.mod7.not = icmp eq i32 %xtraiter5, 0
  br i1 %lcmp.mod7.not, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i11.i.epil

for.body.i11.i.epil:                              ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit.unr-lcssa, %if.end.i20.i.epil
  %index.017.i.i.epil = phi i32 [ %index.1.i17.i.epil, %if.end.i20.i.epil ], [ %index.017.i.i.unr, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit.unr-lcssa ]
  %i.015.i.i.epil = phi i32 [ %inc.i18.i.epil, %if.end.i20.i.epil ], [ %i.015.i.i.unr, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit.unr-lcssa ]
  %epil.iter6 = phi i32 [ %epil.iter6.sub, %if.end.i20.i.epil ], [ %xtraiter5, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit.unr-lcssa ]
  %stride2.i9.i.epil = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %i.015.i.i.epil, i32 2
  %18 = load i32, i32* %stride2.i9.i.epil, align 4, !tbaa !50
  %cmp3.i10.i.epil = icmp slt i32 %18, 0
  br i1 %cmp3.i10.i.epil, label %if.then.i16.i.epil, label %if.end.i20.i.epil

if.then.i16.i.epil:                               ; preds = %for.body.i11.i.epil
  %extent.i12.i.epil = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %i.015.i.i.epil, i32 1
  %19 = load i32, i32* %extent.i12.i.epil, align 4, !tbaa !49
  %sub.i13.i.epil = add nsw i32 %19, -1
  %mul.i14.i.epil = mul nsw i32 %sub.i13.i.epil, %18
  %add.i15.i.epil = add nsw i32 %mul.i14.i.epil, %index.017.i.i.epil
  br label %if.end.i20.i.epil

if.end.i20.i.epil:                                ; preds = %if.then.i16.i.epil, %for.body.i11.i.epil
  %index.1.i17.i.epil = phi i32 [ %add.i15.i.epil, %if.then.i16.i.epil ], [ %index.017.i.i.epil, %for.body.i11.i.epil ]
  %inc.i18.i.epil = add nuw nsw i32 %i.015.i.i.epil, 1
  %epil.iter6.sub = add i32 %epil.iter6, -1
  %epil.iter6.cmp.not = icmp eq i32 %epil.iter6.sub, 0
  br i1 %epil.iter6.cmp.not, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i11.i.epil, !llvm.loop !85

_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit: ; preds = %if.end.i20.i.epil, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit.unr-lcssa
  %index.1.i17.i.lcssa = phi i32 [ %index.1.i17.i.lcssa.ph, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit.unr-lcssa ], [ %index.1.i17.i.epil, %if.end.i20.i.epil ]
  %add6.i.i = add nsw i32 %index.1.i.i.lcssa, 1
  %sub.i.1 = sub nsw i32 %add6.i.i, %index.1.i17.i.lcssa
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

_ZNK15halide_buffer_t13size_in_bytesEv.exit:      ; preds = %if.end._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit
  %sub.i.phi = phi i32 [ %sub.i.0, %if.end._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge ], [ %sub.i.1, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %bits.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 4, i32 1
  %20 = load i8, i8* %bits.i.i, align 1, !tbaa !38
  %conv.i.i = zext i8 %20 to i32
  %add.i4.i = add nuw nsw i32 %conv.i.i, 7
  %div.i.i = lshr i32 %add.i4.i, 3
  %mul.i = mul i32 %div.i.i, %sub.i.phi
  %call2 = tail call i8* @halide_malloc(i8* %user_context, i32 %mul.i) #14
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 2
  store i8* %call2, i8** %host, align 4, !tbaa !43
  %cmp4 = icmp eq i8* %call2, null
  br i1 %cmp4, label %cleanup13, label %if.end6

if.end6:                                          ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit
  %call7 = tail call i32 @halide_device_malloc(i8* %user_context, %struct.halide_buffer_t* nonnull %buf, %struct.halide_device_interface_t* %device_interface) #15
  %cmp8.not = icmp eq i32 %call7, 0
  br i1 %cmp8.not, label %cleanup13, label %if.then9

if.then9:                                         ; preds = %if.end6
  %21 = load i8*, i8** %host, align 4, !tbaa !43
  tail call void @halide_free(i8* %user_context, i8* %21) #14
  store i8* null, i8** %host, align 4, !tbaa !43
  br label %cleanup13

cleanup13:                                        ; preds = %if.then9, %if.end6, %_ZNK15halide_buffer_t13size_in_bytesEv.exit, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ -1, %_ZNK15halide_buffer_t13size_in_bytesEv.exit ], [ %call7, %if.then9 ], [ 0, %if.end6 ]
  ret i32 %retval.1

if.then.i.i.1:                                    ; preds = %if.end.i.i
  %extent.i.i.1 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i.i, i32 1
  %22 = load i32, i32* %extent.i.i.1, align 4, !tbaa !49
  %sub.i.i.1 = add nsw i32 %22, -1
  %mul.i.i.1 = mul nsw i32 %sub.i.i.1, %10
  %add.i.i.1 = add nsw i32 %mul.i.i.1, %index.1.i.i
  br label %if.end.i.i.1

if.end.i.i.1:                                     ; preds = %if.then.i.i.1, %if.end.i.i
  %index.1.i.i.1 = phi i32 [ %add.i.i.1, %if.then.i.i.1 ], [ %index.1.i.i, %if.end.i.i ]
  %inc.i.i.1 = or i32 %i.017.i.i, 2
  %stride2.i.i.2 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i.i.1, i32 2
  %23 = load i32, i32* %stride2.i.i.2, align 4, !tbaa !50
  %cmp3.i.i.2 = icmp sgt i32 %23, 0
  br i1 %cmp3.i.i.2, label %if.then.i.i.2, label %if.end.i.i.2

if.then.i.i.2:                                    ; preds = %if.end.i.i.1
  %extent.i.i.2 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i.i.1, i32 1
  %24 = load i32, i32* %extent.i.i.2, align 4, !tbaa !49
  %sub.i.i.2 = add nsw i32 %24, -1
  %mul.i.i.2 = mul nsw i32 %sub.i.i.2, %23
  %add.i.i.2 = add nsw i32 %mul.i.i.2, %index.1.i.i.1
  br label %if.end.i.i.2

if.end.i.i.2:                                     ; preds = %if.then.i.i.2, %if.end.i.i.1
  %index.1.i.i.2 = phi i32 [ %add.i.i.2, %if.then.i.i.2 ], [ %index.1.i.i.1, %if.end.i.i.1 ]
  %inc.i.i.2 = or i32 %i.017.i.i, 3
  %stride2.i.i.3 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i.i.2, i32 2
  %25 = load i32, i32* %stride2.i.i.3, align 4, !tbaa !50
  %cmp3.i.i.3 = icmp sgt i32 %25, 0
  br i1 %cmp3.i.i.3, label %if.then.i.i.3, label %if.end.i.i.3

if.then.i.i.3:                                    ; preds = %if.end.i.i.2
  %extent.i.i.3 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i.i.2, i32 1
  %26 = load i32, i32* %extent.i.i.3, align 4, !tbaa !49
  %sub.i.i.3 = add nsw i32 %26, -1
  %mul.i.i.3 = mul nsw i32 %sub.i.i.3, %25
  %add.i.i.3 = add nsw i32 %mul.i.i.3, %index.1.i.i.2
  br label %if.end.i.i.3

if.end.i.i.3:                                     ; preds = %if.then.i.i.3, %if.end.i.i.2
  %index.1.i.i.3 = phi i32 [ %add.i.i.3, %if.then.i.i.3 ], [ %index.1.i.i.2, %if.end.i.i.2 ]
  %inc.i.i.3 = or i32 %i.017.i.i, 4
  %stride2.i.i.4 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i.i.3, i32 2
  %27 = load i32, i32* %stride2.i.i.4, align 4, !tbaa !50
  %cmp3.i.i.4 = icmp sgt i32 %27, 0
  br i1 %cmp3.i.i.4, label %if.then.i.i.4, label %if.end.i.i.4

if.then.i.i.4:                                    ; preds = %if.end.i.i.3
  %extent.i.i.4 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i.i.3, i32 1
  %28 = load i32, i32* %extent.i.i.4, align 4, !tbaa !49
  %sub.i.i.4 = add nsw i32 %28, -1
  %mul.i.i.4 = mul nsw i32 %sub.i.i.4, %27
  %add.i.i.4 = add nsw i32 %mul.i.i.4, %index.1.i.i.3
  br label %if.end.i.i.4

if.end.i.i.4:                                     ; preds = %if.then.i.i.4, %if.end.i.i.3
  %index.1.i.i.4 = phi i32 [ %add.i.i.4, %if.then.i.i.4 ], [ %index.1.i.i.3, %if.end.i.i.3 ]
  %inc.i.i.4 = or i32 %i.017.i.i, 5
  %stride2.i.i.5 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i.i.4, i32 2
  %29 = load i32, i32* %stride2.i.i.5, align 4, !tbaa !50
  %cmp3.i.i.5 = icmp sgt i32 %29, 0
  br i1 %cmp3.i.i.5, label %if.then.i.i.5, label %if.end.i.i.5

if.then.i.i.5:                                    ; preds = %if.end.i.i.4
  %extent.i.i.5 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i.i.4, i32 1
  %30 = load i32, i32* %extent.i.i.5, align 4, !tbaa !49
  %sub.i.i.5 = add nsw i32 %30, -1
  %mul.i.i.5 = mul nsw i32 %sub.i.i.5, %29
  %add.i.i.5 = add nsw i32 %mul.i.i.5, %index.1.i.i.4
  br label %if.end.i.i.5

if.end.i.i.5:                                     ; preds = %if.then.i.i.5, %if.end.i.i.4
  %index.1.i.i.5 = phi i32 [ %add.i.i.5, %if.then.i.i.5 ], [ %index.1.i.i.4, %if.end.i.i.4 ]
  %inc.i.i.5 = or i32 %i.017.i.i, 6
  %stride2.i.i.6 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i.i.5, i32 2
  %31 = load i32, i32* %stride2.i.i.6, align 4, !tbaa !50
  %cmp3.i.i.6 = icmp sgt i32 %31, 0
  br i1 %cmp3.i.i.6, label %if.then.i.i.6, label %if.end.i.i.6

if.then.i.i.6:                                    ; preds = %if.end.i.i.5
  %extent.i.i.6 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i.i.5, i32 1
  %32 = load i32, i32* %extent.i.i.6, align 4, !tbaa !49
  %sub.i.i.6 = add nsw i32 %32, -1
  %mul.i.i.6 = mul nsw i32 %sub.i.i.6, %31
  %add.i.i.6 = add nsw i32 %mul.i.i.6, %index.1.i.i.5
  br label %if.end.i.i.6

if.end.i.i.6:                                     ; preds = %if.then.i.i.6, %if.end.i.i.5
  %index.1.i.i.6 = phi i32 [ %add.i.i.6, %if.then.i.i.6 ], [ %index.1.i.i.5, %if.end.i.i.5 ]
  %inc.i.i.6 = or i32 %i.017.i.i, 7
  %stride2.i.i.7 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i.i.6, i32 2
  %33 = load i32, i32* %stride2.i.i.7, align 4, !tbaa !50
  %cmp3.i.i.7 = icmp sgt i32 %33, 0
  br i1 %cmp3.i.i.7, label %if.then.i.i.7, label %if.end.i.i.7

if.then.i.i.7:                                    ; preds = %if.end.i.i.6
  %extent.i.i.7 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i.i.6, i32 1
  %34 = load i32, i32* %extent.i.i.7, align 4, !tbaa !49
  %sub.i.i.7 = add nsw i32 %34, -1
  %mul.i.i.7 = mul nsw i32 %sub.i.i.7, %33
  %add.i.i.7 = add nsw i32 %mul.i.i.7, %index.1.i.i.6
  br label %if.end.i.i.7

if.end.i.i.7:                                     ; preds = %if.then.i.i.7, %if.end.i.i.6
  %index.1.i.i.7 = phi i32 [ %add.i.i.7, %if.then.i.i.7 ], [ %index.1.i.i.6, %if.end.i.i.6 ]
  %inc.i.i.7 = add nuw nsw i32 %i.017.i.i, 8
  %niter.nsub.7 = add i32 %niter, -8
  %niter.ncmp.7 = icmp eq i32 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %for.body.i11.i.preheader.unr-lcssa, label %for.body.i.i, !llvm.loop !86

if.then.i16.i.1:                                  ; preds = %if.end.i20.i
  %extent.i12.i.1 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i18.i, i32 1
  %35 = load i32, i32* %extent.i12.i.1, align 4, !tbaa !49
  %sub.i13.i.1 = add nsw i32 %35, -1
  %mul.i14.i.1 = mul nsw i32 %sub.i13.i.1, %17
  %add.i15.i.1 = add nsw i32 %mul.i14.i.1, %index.1.i17.i
  br label %if.end.i20.i.1

if.end.i20.i.1:                                   ; preds = %if.then.i16.i.1, %if.end.i20.i
  %index.1.i17.i.1 = phi i32 [ %add.i15.i.1, %if.then.i16.i.1 ], [ %index.1.i17.i, %if.end.i20.i ]
  %inc.i18.i.1 = or i32 %i.015.i.i, 2
  %stride2.i9.i.2 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i18.i.1, i32 2
  %36 = load i32, i32* %stride2.i9.i.2, align 4, !tbaa !50
  %cmp3.i10.i.2 = icmp slt i32 %36, 0
  br i1 %cmp3.i10.i.2, label %if.then.i16.i.2, label %if.end.i20.i.2

if.then.i16.i.2:                                  ; preds = %if.end.i20.i.1
  %extent.i12.i.2 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i18.i.1, i32 1
  %37 = load i32, i32* %extent.i12.i.2, align 4, !tbaa !49
  %sub.i13.i.2 = add nsw i32 %37, -1
  %mul.i14.i.2 = mul nsw i32 %sub.i13.i.2, %36
  %add.i15.i.2 = add nsw i32 %mul.i14.i.2, %index.1.i17.i.1
  br label %if.end.i20.i.2

if.end.i20.i.2:                                   ; preds = %if.then.i16.i.2, %if.end.i20.i.1
  %index.1.i17.i.2 = phi i32 [ %add.i15.i.2, %if.then.i16.i.2 ], [ %index.1.i17.i.1, %if.end.i20.i.1 ]
  %inc.i18.i.2 = or i32 %i.015.i.i, 3
  %stride2.i9.i.3 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i18.i.2, i32 2
  %38 = load i32, i32* %stride2.i9.i.3, align 4, !tbaa !50
  %cmp3.i10.i.3 = icmp slt i32 %38, 0
  br i1 %cmp3.i10.i.3, label %if.then.i16.i.3, label %if.end.i20.i.3

if.then.i16.i.3:                                  ; preds = %if.end.i20.i.2
  %extent.i12.i.3 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i18.i.2, i32 1
  %39 = load i32, i32* %extent.i12.i.3, align 4, !tbaa !49
  %sub.i13.i.3 = add nsw i32 %39, -1
  %mul.i14.i.3 = mul nsw i32 %sub.i13.i.3, %38
  %add.i15.i.3 = add nsw i32 %mul.i14.i.3, %index.1.i17.i.2
  br label %if.end.i20.i.3

if.end.i20.i.3:                                   ; preds = %if.then.i16.i.3, %if.end.i20.i.2
  %index.1.i17.i.3 = phi i32 [ %add.i15.i.3, %if.then.i16.i.3 ], [ %index.1.i17.i.2, %if.end.i20.i.2 ]
  %inc.i18.i.3 = or i32 %i.015.i.i, 4
  %stride2.i9.i.4 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i18.i.3, i32 2
  %40 = load i32, i32* %stride2.i9.i.4, align 4, !tbaa !50
  %cmp3.i10.i.4 = icmp slt i32 %40, 0
  br i1 %cmp3.i10.i.4, label %if.then.i16.i.4, label %if.end.i20.i.4

if.then.i16.i.4:                                  ; preds = %if.end.i20.i.3
  %extent.i12.i.4 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i18.i.3, i32 1
  %41 = load i32, i32* %extent.i12.i.4, align 4, !tbaa !49
  %sub.i13.i.4 = add nsw i32 %41, -1
  %mul.i14.i.4 = mul nsw i32 %sub.i13.i.4, %40
  %add.i15.i.4 = add nsw i32 %mul.i14.i.4, %index.1.i17.i.3
  br label %if.end.i20.i.4

if.end.i20.i.4:                                   ; preds = %if.then.i16.i.4, %if.end.i20.i.3
  %index.1.i17.i.4 = phi i32 [ %add.i15.i.4, %if.then.i16.i.4 ], [ %index.1.i17.i.3, %if.end.i20.i.3 ]
  %inc.i18.i.4 = or i32 %i.015.i.i, 5
  %stride2.i9.i.5 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i18.i.4, i32 2
  %42 = load i32, i32* %stride2.i9.i.5, align 4, !tbaa !50
  %cmp3.i10.i.5 = icmp slt i32 %42, 0
  br i1 %cmp3.i10.i.5, label %if.then.i16.i.5, label %if.end.i20.i.5

if.then.i16.i.5:                                  ; preds = %if.end.i20.i.4
  %extent.i12.i.5 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i18.i.4, i32 1
  %43 = load i32, i32* %extent.i12.i.5, align 4, !tbaa !49
  %sub.i13.i.5 = add nsw i32 %43, -1
  %mul.i14.i.5 = mul nsw i32 %sub.i13.i.5, %42
  %add.i15.i.5 = add nsw i32 %mul.i14.i.5, %index.1.i17.i.4
  br label %if.end.i20.i.5

if.end.i20.i.5:                                   ; preds = %if.then.i16.i.5, %if.end.i20.i.4
  %index.1.i17.i.5 = phi i32 [ %add.i15.i.5, %if.then.i16.i.5 ], [ %index.1.i17.i.4, %if.end.i20.i.4 ]
  %inc.i18.i.5 = or i32 %i.015.i.i, 6
  %stride2.i9.i.6 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i18.i.5, i32 2
  %44 = load i32, i32* %stride2.i9.i.6, align 4, !tbaa !50
  %cmp3.i10.i.6 = icmp slt i32 %44, 0
  br i1 %cmp3.i10.i.6, label %if.then.i16.i.6, label %if.end.i20.i.6

if.then.i16.i.6:                                  ; preds = %if.end.i20.i.5
  %extent.i12.i.6 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i18.i.5, i32 1
  %45 = load i32, i32* %extent.i12.i.6, align 4, !tbaa !49
  %sub.i13.i.6 = add nsw i32 %45, -1
  %mul.i14.i.6 = mul nsw i32 %sub.i13.i.6, %44
  %add.i15.i.6 = add nsw i32 %mul.i14.i.6, %index.1.i17.i.5
  br label %if.end.i20.i.6

if.end.i20.i.6:                                   ; preds = %if.then.i16.i.6, %if.end.i20.i.5
  %index.1.i17.i.6 = phi i32 [ %add.i15.i.6, %if.then.i16.i.6 ], [ %index.1.i17.i.5, %if.end.i20.i.5 ]
  %inc.i18.i.6 = or i32 %i.015.i.i, 7
  %stride2.i9.i.7 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i18.i.6, i32 2
  %46 = load i32, i32* %stride2.i9.i.7, align 4, !tbaa !50
  %cmp3.i10.i.7 = icmp slt i32 %46, 0
  br i1 %cmp3.i10.i.7, label %if.then.i16.i.7, label %if.end.i20.i.7

if.then.i16.i.7:                                  ; preds = %if.end.i20.i.6
  %extent.i12.i.7 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i32 %inc.i18.i.6, i32 1
  %47 = load i32, i32* %extent.i12.i.7, align 4, !tbaa !49
  %sub.i13.i.7 = add nsw i32 %47, -1
  %mul.i14.i.7 = mul nsw i32 %sub.i13.i.7, %46
  %add.i15.i.7 = add nsw i32 %mul.i14.i.7, %index.1.i17.i.6
  br label %if.end.i20.i.7

if.end.i20.i.7:                                   ; preds = %if.then.i16.i.7, %if.end.i20.i.6
  %index.1.i17.i.7 = phi i32 [ %add.i15.i.7, %if.then.i16.i.7 ], [ %index.1.i17.i.6, %if.end.i20.i.6 ]
  %inc.i18.i.7 = add nuw nsw i32 %i.015.i.i, 8
  %niter10.nsub.7 = add i32 %niter10, -8
  %niter10.ncmp.7 = icmp eq i32 %niter10.nsub.7, 0
  br i1 %niter10.ncmp.7, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit.unr-lcssa, label %for.body.i11.i, !llvm.loop !87
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_and_host_free(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.30, i32 0, i32 0)) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !42
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !40
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !44
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end16.i.split

if.end16.i.split:                                 ; preds = %if.end16.i
  %call11 = tail call i32 @halide_device_free(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  br label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split, label %cleanup

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %call12 = tail call i32 @halide_device_free(i8* %user_context, %struct.halide_buffer_t* %buf) #15
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split, %if.end16.i.split
  %phi.call = phi i32 [ %call11, %if.end16.i.split ], [ %call12, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split ]
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 2
  %4 = load i8*, i8** %host, align 4, !tbaa !43
  %tobool.not = icmp eq i8* %4, null
  br i1 %tobool.not, label %if.end5, label %if.then2

if.then2:                                         ; preds = %if.end
  tail call void @halide_free(i8* %user_context, i8* nonnull %4) #14
  store i8* null, i8** %host, align 4, !tbaa !43
  br label %if.end5

if.end5:                                          ; preds = %if.then2, %if.end
  %flags3.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 3
  %5 = load i64, i64* %flags3.i.i, align 8, !tbaa !44
  %and.i.i18 = and i64 %5, -4
  store i64 %and.i.i18, i64* %flags3.i.i, align 8, !tbaa !44
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.0 = phi i32 [ %phi.call, %if.end5 ], [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_wrap_native(i8* %user_context, %struct.halide_buffer_t* %buf, i64 %handle, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.31, i32 0, i32 0)) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !42
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !40
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !44
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup12

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface1.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface1.phi.trans.insert, align 8, !tbaa !42
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp2.not = icmp eq %struct.halide_device_interface_t* %4, null
  %cmp3.not = icmp eq %struct.halide_device_interface_t* %4, %device_interface
  %or.cond = or i1 %cmp2.not, %cmp3.not
  br i1 %or.cond, label %if.end5, label %if.then4

if.then4:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.32, i32 0, i32 0)) #14
  br label %cleanup12

if.end5:                                          ; preds = %if.end
  %device_interface1 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %device_interface, i32 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i32 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 4, !tbaa !77
  tail call void %6() #14
  store %struct.halide_device_interface_t* %device_interface, %struct.halide_device_interface_t** %device_interface1, align 8, !tbaa !42
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %wrap_native = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i32 0, i32 14
  %8 = load i32 (i8*, %struct.halide_buffer_t*, i64)*, i32 (i8*, %struct.halide_buffer_t*, i64)** %wrap_native, align 4, !tbaa !88
  %call8 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf, i64 %handle) #14
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i32 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 4, !tbaa !79
  tail call void %10() #14
  %tobool.not = icmp eq i32 %call8, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -16
  ret i32 %spec.select

cleanup12:                                        ; preds = %if.then4, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ -42, %if.then4 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_detach_native(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i32 0, i32 0)) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !42
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !40
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !44
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface1.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface1.phi.trans.insert, align 8, !tbaa !42
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp2.not = icmp eq %struct.halide_device_interface_t* %4, null
  br i1 %cmp2.not, label %cleanup, label %if.then3

if.then3:                                         ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i32 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i32 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 4, !tbaa !77
  tail call void %6() #14
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %detach_native = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i32 0, i32 15
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %detach_native, align 4, !tbaa !89
  %call5 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #14
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i32 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 4, !tbaa !79
  tail call void %10() #14
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 0
  %11 = load i64, i64* %device, align 8, !tbaa !40
  %cmp7 = icmp eq i64 %11, 0
  br i1 %cmp7, label %do.end, label %if.then8

if.then8:                                         ; preds = %if.then3
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @.str.34, i32 0, i32 0)) #14
  tail call void @abort() #14
  br label %do.end

do.end:                                           ; preds = %if.then8, %if.then3
  %tobool.not = icmp eq i32 %call5, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -33
  ret i32 %spec.select

cleanup:                                          ; preds = %if.end, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.0 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ 0, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_wrap_native(i8* %user_context, %struct.halide_buffer_t* %buf, i64 %handle) local_unnamed_addr #0 {
entry:
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !40
  %cmp.not = icmp eq i64 %0, 0
  br i1 %cmp.not, label %if.end, label %return

if.end:                                           ; preds = %entry
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %1 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !42
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %1, i32 0, i32 15
  %2 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %2, i32 0, i32 0
  %3 = load void ()*, void ()** %use_module, align 4, !tbaa !77
  tail call void %3() #14
  store i64 %handle, i64* %device, align 8, !tbaa !40
  br label %return

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end ], [ -32, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_detach_native(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.35, i32 0, i32 0)) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !42
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !40
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !44
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 0
  %.pre = load i64, i64* %device.phi.trans.insert, align 8, !tbaa !40
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi i64 [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %1, %if.end16.i ]
  %cmp1 = icmp eq i64 %4, 0
  br i1 %cmp1, label %cleanup, label %if.end3

if.end3:                                          ; preds = %if.end
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 0
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %5 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !42
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %5, i32 0, i32 15
  %6 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %6, i32 0, i32 1
  %7 = load void ()*, void ()** %release_module, align 4, !tbaa !79
  tail call void %7() #14
  store i64 0, i64* %device, align 8, !tbaa !40
  store %struct.halide_device_interface_t* null, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !42
  br label %cleanup

cleanup:                                          ; preds = %if.end3, %if.end, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.0 = phi i32 [ 0, %if.end3 ], [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ 0, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak void @halide_device_and_host_free_as_destructor(i8* %user_context, i8* %obj) local_unnamed_addr #0 {
entry:
  %0 = bitcast i8* %obj to %struct.halide_buffer_t*
  %call = tail call i32 @halide_device_and_host_free(i8* %user_context, %struct.halide_buffer_t* %0) #15
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_device_host_nop_free(i8* %user_context, i8* %obj) local_unnamed_addr #2 {
entry:
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_default_buffer_copy(i8* %user_context, %struct.halide_buffer_t* %src, %struct.halide_device_interface_t* %dst_device_interface, %struct.halide_buffer_t* %dst) local_unnamed_addr #2 {
entry:
  ret i32 -39
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_buffer_copy_already_locked(i8* %user_context, %struct.halide_buffer_t* %src, %struct.halide_device_interface_t* %dst_device_interface, %struct.halide_buffer_t* %dst) local_unnamed_addr #0 {
entry:
  %c = alloca %"struct.Halide::Runtime::Internal::device_copy", align 8
  %tobool.not = icmp eq %struct.halide_device_interface_t* %dst_device_interface, null
  br i1 %tobool.not, label %if.end13, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i32 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !42
  %tobool1.not = icmp eq %struct.halide_device_interface_t* %0, null
  %cmp.not = icmp eq %struct.halide_device_interface_t* %0, %dst_device_interface
  %or.cond = or i1 %tobool1.not, %cmp.not
  br i1 %or.cond, label %land.lhs.true5, label %if.then

if.then:                                          ; preds = %land.lhs.true
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.41, i32 0, i32 0)) #14
  br label %cleanup143

land.lhs.true5:                                   ; preds = %land.lhs.true
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i32 0, i32 0
  %1 = load i64, i64* %device, align 8, !tbaa !40
  %tobool6.not = icmp eq i64 %1, 0
  br i1 %tobool6.not, label %if.then7, label %if.end13

if.then7:                                         ; preds = %land.lhs.true5
  %call = tail call i32 @halide_device_malloc(i8* %user_context, %struct.halide_buffer_t* nonnull %dst, %struct.halide_device_interface_t* nonnull %dst_device_interface) #15
  %tobool10.not = icmp eq i32 %call, 0
  br i1 %tobool10.not, label %if.end13, label %cleanup143

if.end13:                                         ; preds = %if.then7, %land.lhs.true5, %entry
  %device14 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i32 0, i32 0
  %2 = load i64, i64* %device14, align 8, !tbaa !40
  %cmp15.not = icmp eq i64 %2, 0
  %host22.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i32 0, i32 2
  %.pre = load i8*, i8** %host22.phi.trans.insert, align 4, !tbaa !43
  %cmp23.not = icmp eq i8* %.pre, null
  br i1 %cmp15.not, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end13
  br i1 %cmp23.not, label %land.end32, label %land.end.thread264

land.end.thread264:                               ; preds = %land.rhs
  %flags.i.i243 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i32 0, i32 3
  %3 = load i64, i64* %flags.i.i243, align 8, !tbaa !44
  %and.i.i244 = and i64 %3, 1
  %cmp.i.i.not = icmp ne i64 %and.i.i244, 0
  br label %land.rhs26

land.end:                                         ; preds = %if.end13
  br i1 %cmp23.not, label %land.end32, label %land.end.land.rhs26_crit_edge

land.end.land.rhs26_crit_edge:                    ; preds = %land.end
  %flags.i.i247.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i32 0, i32 3
  %.pre1 = load i64, i64* %flags.i.i247.phi.trans.insert, align 8, !tbaa !44
  br label %land.rhs26

land.rhs26:                                       ; preds = %land.end.land.rhs26_crit_edge, %land.end.thread264
  %4 = phi i64 [ %3, %land.end.thread264 ], [ %.pre1, %land.end.land.rhs26_crit_edge ]
  %5 = phi i1 [ %cmp.i.i.not, %land.end.thread264 ], [ true, %land.end.land.rhs26_crit_edge ]
  %and.i.i248 = and i64 %4, 2
  %cmp.i.i249.not = icmp eq i64 %and.i.i248, 0
  br i1 %cmp.i.i249.not, label %land.end32, label %lor.rhs28

lor.rhs28:                                        ; preds = %land.rhs26
  %device_interface29 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i32 0, i32 1
  %6 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface29, align 8, !tbaa !42
  %cmp30 = icmp ne %struct.halide_device_interface_t* %6, null
  br label %land.end32

land.end32:                                       ; preds = %lor.rhs28, %land.rhs26, %land.end, %land.rhs
  %cmp23.not263 = phi i1 [ true, %land.end ], [ false, %land.rhs26 ], [ false, %lor.rhs28 ], [ true, %land.rhs ]
  %7 = phi i1 [ true, %land.end ], [ %5, %land.rhs26 ], [ %5, %lor.rhs28 ], [ false, %land.rhs ]
  %8 = phi i1 [ true, %land.end ], [ false, %land.rhs26 ], [ %cmp30, %lor.rhs28 ], [ true, %land.rhs ]
  %host34 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i32 0, i32 2
  %9 = load i8*, i8** %host34, align 4, !tbaa !43
  %cmp35.not = icmp eq i8* %9, null
  %cmp20.not = xor i1 %tobool.not, true
  %10 = and i1 %tobool.not, %cmp35.not
  br i1 %10, label %cleanup143, label %if.end41

if.end41:                                         ; preds = %land.end32
  %brmerge229 = or i1 %tobool.not, %7
  br i1 %brmerge229, label %if.then51, label %if.end49

if.end49:                                         ; preds = %if.end41
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %dst_device_interface, i32 0, i32 15
  %11 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %buffer_copy = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %11, i32 0, i32 10
  %12 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)** %buffer_copy, align 4, !tbaa !90
  %call48 = tail call i32 %12(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* nonnull %dst_device_interface, %struct.halide_buffer_t* nonnull %dst) #14
  %cmp50 = icmp eq i32 %call48, -42
  br i1 %cmp50, label %if.then51, label %if.end117

if.then51:                                        ; preds = %if.end49, %if.end41
  %brmerge231.demorgan = and i1 %cmp23.not263, %cmp35.not
  br i1 %brmerge231.demorgan, label %cleanup143, label %if.end58

if.end58:                                         ; preds = %if.then51
  %brmerge234 = or i1 %8, %cmp20.not
  br i1 %brmerge234, label %if.else, label %if.end117.thread258

if.end117.thread258:                              ; preds = %if.end58
  %13 = bitcast %"struct.Halide::Runtime::Internal::device_copy"* %c to i8*
  call void @llvm.lifetime.start.p0i8(i64 416, i8* nonnull %13) #11
  call void @_ZN6Halide7Runtime8Internal16make_buffer_copyEPK15halide_buffer_tbS4_b(%"struct.Halide::Runtime::Internal::device_copy"* nonnull sret(%"struct.Halide::Runtime::Internal::device_copy") align 8 %c, %struct.halide_buffer_t* nonnull %src, i1 zeroext true, %struct.halide_buffer_t* nonnull %dst, i1 zeroext true) #15
  call void @_ZN6Halide7Runtime8Internal11copy_memoryERKNS1_11device_copyEPv(%"struct.Halide::Runtime::Internal::device_copy"* nonnull align 8 dereferenceable(416) %c, i8* %user_context) #15
  call void @llvm.lifetime.end.p0i8(i64 416, i8* nonnull %13) #11
  br label %land.lhs.true126

if.else:                                          ; preds = %if.end58
  %brmerge237 = or i1 %7, %cmp20.not
  br i1 %brmerge237, label %if.else81, label %if.then66

if.then66:                                        ; preds = %if.else
  %device_interface69 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i32 0, i32 1
  %14 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface69, align 8, !tbaa !42
  %impl70 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %14, i32 0, i32 15
  %15 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl70, align 4, !tbaa !71
  %buffer_copy71 = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %15, i32 0, i32 10
  %16 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)** %buffer_copy71, align 4, !tbaa !90
  %call72 = tail call i32 %16(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* null, %struct.halide_buffer_t* nonnull %dst) #14
  %cmp73 = icmp eq i32 %call72, -42
  br i1 %cmp73, label %if.then74, label %if.end117

if.then74:                                        ; preds = %if.then66
  %call75 = tail call i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP15halide_buffer_t(i8* %user_context, %struct.halide_buffer_t* nonnull %src) #15
  %tobool76.not = icmp eq i32 %call75, 0
  br i1 %tobool76.not, label %if.then77, label %cleanup143

if.then77:                                        ; preds = %if.then74
  %call78 = tail call i32 @halide_buffer_copy_already_locked(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* null, %struct.halide_buffer_t* nonnull %dst) #15
  br label %if.end117

if.else81:                                        ; preds = %if.else
  %brmerge239 = or i1 %7, %cmp35.not
  br i1 %brmerge239, label %if.else98, label %if.then85

if.then85:                                        ; preds = %if.else81
  %device_interface90 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i32 0, i32 1
  %17 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface90, align 8, !tbaa !42
  %impl91 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %17, i32 0, i32 15
  %18 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl91, align 4, !tbaa !71
  %buffer_copy92 = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %18, i32 0, i32 10
  %19 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)** %buffer_copy92, align 4, !tbaa !90
  %call93 = tail call i32 %19(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* null, %struct.halide_buffer_t* nonnull %dst) #14
  %cmp94 = icmp eq i32 %call93, 0
  br i1 %cmp94, label %if.then95, label %cleanup143

if.then95:                                        ; preds = %if.then85
  %flags.i.i245 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i32 0, i32 3
  %20 = load i64, i64* %flags.i.i245, align 8, !tbaa !44
  %or.i.i246 = or i64 %20, 1
  store i64 %or.i.i246, i64* %flags.i.i245, align 8, !tbaa !44
  %call96 = tail call i32 @copy_to_device_already_locked(i8* %user_context, %struct.halide_buffer_t* nonnull %dst, %struct.halide_device_interface_t* %dst_device_interface) #15
  br label %if.end117

if.else98:                                        ; preds = %if.else81
  br i1 %tobool.not, label %cleanup143, label %if.then100

if.then100:                                       ; preds = %if.else98
  %call103 = tail call i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP15halide_buffer_t(i8* %user_context, %struct.halide_buffer_t* nonnull %src) #15
  %cmp104 = icmp eq i32 %call103, 0
  br i1 %cmp104, label %if.then105, label %cleanup143

if.then105:                                       ; preds = %if.then100
  %impl106 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %dst_device_interface, i32 0, i32 15
  %21 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl106, align 4, !tbaa !71
  %buffer_copy107 = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %21, i32 0, i32 10
  %22 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)** %buffer_copy107, align 4, !tbaa !90
  %call108 = tail call i32 %22(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* nonnull %dst_device_interface, %struct.halide_buffer_t* nonnull %dst) #14
  br label %if.end117

if.end117:                                        ; preds = %if.then105, %if.then95, %if.then77, %if.then66, %if.end49
  %err.1 = phi i32 [ %call78, %if.then77 ], [ %call72, %if.then66 ], [ %call96, %if.then95 ], [ %call108, %if.then105 ], [ %call48, %if.end49 ]
  %cond = icmp eq i32 %err.1, 0
  br i1 %cond, label %land.lhs.true126, label %cleanup143

land.lhs.true126:                                 ; preds = %if.end117, %if.end117.thread258
  %cmp127.not.old = icmp eq %struct.halide_buffer_t* %dst, %src
  br i1 %cmp127.not.old, label %cleanup143, label %if.then128

if.then128:                                       ; preds = %land.lhs.true126
  %flags.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i32 0, i32 3
  %23 = load i64, i64* %flags.i.i, align 8, !tbaa !44
  %or.i.i = and i64 %23, -4
  br i1 %tobool.not, label %if.else133, label %if.then130

if.then130:                                       ; preds = %if.then128
  %or.i.i242 = or i64 %or.i.i, 2
  store i64 %or.i.i242, i64* %flags.i.i, align 8, !tbaa !44
  br label %cleanup143

if.else133:                                       ; preds = %if.then128
  %and.i.i251 = or i64 %or.i.i, 1
  store i64 %and.i.i251, i64* %flags.i.i, align 8, !tbaa !44
  br label %cleanup143

cleanup143:                                       ; preds = %if.else133, %if.then130, %land.lhs.true126, %if.end117, %if.then100, %if.else98, %if.then85, %if.then74, %if.then51, %land.end32, %if.then7, %if.then
  %retval.1 = phi i32 [ -42, %if.then ], [ %call, %if.then7 ], [ -34, %land.end32 ], [ 0, %if.then130 ], [ 0, %if.else133 ], [ 0, %land.lhs.true126 ], [ -42, %if.then51 ], [ %err.1, %if.end117 ], [ -42, %if.else98 ], [ %call103, %if.then100 ], [ %call93, %if.then85 ], [ %call75, %if.then74 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind
define weak i32 @halide_buffer_copy(i8* %user_context, %struct.halide_buffer_t* %src, %struct.halide_device_interface_t* %dst_device_interface, %struct.halide_buffer_t* %dst) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #14
  %tobool.not = icmp eq %struct.halide_device_interface_t* %dst_device_interface, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %dst_device_interface, i32 0, i32 15
  %0 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %0, i32 0, i32 0
  %1 = load void ()*, void ()** %use_module, align 4, !tbaa !77
  tail call void %1() #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i32 0, i32 1
  %2 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !42
  %tobool11.not = icmp eq %struct.halide_device_interface_t* %2, null
  br i1 %tobool11.not, label %if.end16, label %if.then12

if.then12:                                        ; preds = %if.end
  %impl14 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %2, i32 0, i32 15
  %3 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl14, align 4, !tbaa !71
  %use_module15 = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %3, i32 0, i32 0
  %4 = load void ()*, void ()** %use_module15, align 4, !tbaa !77
  tail call void %4() #14
  br label %if.end16

if.end16:                                         ; preds = %if.then12, %if.end
  %call = tail call i32 @halide_buffer_copy_already_locked(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* %dst_device_interface, %struct.halide_buffer_t* %dst) #15
  br i1 %tobool.not, label %if.end20, label %if.then18

if.then18:                                        ; preds = %if.end16
  %impl19 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %dst_device_interface, i32 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl19, align 4, !tbaa !71
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i32 0, i32 1
  %6 = load void ()*, void ()** %release_module, align 4, !tbaa !79
  tail call void %6() #14
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %if.end16
  %7 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !42
  %tobool22.not = icmp eq %struct.halide_device_interface_t* %7, null
  br i1 %tobool22.not, label %if.end27, label %if.then23

if.then23:                                        ; preds = %if.end20
  %impl25 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %7, i32 0, i32 15
  %8 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl25, align 4, !tbaa !71
  %release_module26 = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %8, i32 0, i32 1
  %9 = load void ()*, void ()** %release_module26, align 4, !tbaa !79
  tail call void %9() #14
  br label %if.end27

if.end27:                                         ; preds = %if.then23, %if.end20
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #14
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_crop(i8* %user_context, %struct.halide_buffer_t* %src, %struct.halide_buffer_t* %dst) local_unnamed_addr #0 {
entry:
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.58, i32 0, i32 0)) #14
  ret i32 -40
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_slice(i8* %user_context, %struct.halide_buffer_t* %src, i32 %slice_dim, i32 %slice_pos, %struct.halide_buffer_t* %dst) local_unnamed_addr #0 {
entry:
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.59, i32 0, i32 0)) #14
  ret i32 -40
}

; Function Attrs: nounwind
define weak i32 @halide_device_crop(i8* %user_context, %struct.halide_buffer_t* %src, %struct.halide_buffer_t* %dst) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #14
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i32 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !40
  %tobool.not = icmp eq i64 %0, 0
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %device1 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i32 0, i32 0
  %1 = load i64, i64* %device1, align 8, !tbaa !40
  %tobool2.not = icmp eq i64 %1, 0
  br i1 %tobool2.not, label %if.end4, label %if.then3

if.then3:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.60, i32 0, i32 0)) #14
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i32 0, i32 5
  %2 = load i32, i32* %dimensions, align 4, !tbaa !45
  %dimensions5 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i32 0, i32 5
  %3 = load i32, i32* %dimensions5, align 4, !tbaa !45
  %cmp.not = icmp eq i32 %2, %3
  br i1 %cmp.not, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end4
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.61, i32 0, i32 0)) #14
  br label %cleanup

if.end7:                                          ; preds = %if.end4
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i32 0, i32 1
  %4 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !42
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i32 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i32 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 4, !tbaa !77
  tail call void %6() #14
  %7 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !42
  %impl9 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %7, i32 0, i32 15
  %8 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl9, align 4, !tbaa !71
  %device_crop = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %8, i32 0, i32 11
  %9 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_buffer_t*)** %device_crop, align 4, !tbaa !91
  %call = tail call i32 %9(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_buffer_t* nonnull %dst) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %if.then6, %if.then3, %entry
  %retval.0 = phi i32 [ -41, %if.then3 ], [ -41, %if.then6 ], [ %call, %if.end7 ], [ 0, %entry ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind
define weak i32 @halide_device_slice(i8* %user_context, %struct.halide_buffer_t* %src, i32 %slice_dim, i32 %slice_pos, %struct.halide_buffer_t* %dst) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #14
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i32 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !40
  %tobool.not = icmp eq i64 %0, 0
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %device1 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i32 0, i32 0
  %1 = load i64, i64* %device1, align 8, !tbaa !40
  %tobool2.not = icmp eq i64 %1, 0
  br i1 %tobool2.not, label %if.end4, label %if.then3

if.then3:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.60, i32 0, i32 0)) #14
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i32 0, i32 5
  %2 = load i32, i32* %dimensions, align 4, !tbaa !45
  %dimensions5 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i32 0, i32 5
  %3 = load i32, i32* %dimensions5, align 4, !tbaa !45
  %add = add nsw i32 %3, 1
  %cmp.not = icmp eq i32 %2, %add
  br i1 %cmp.not, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end4
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.64, i32 0, i32 0)) #14
  br label %cleanup

if.end7:                                          ; preds = %if.end4
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i32 0, i32 1
  %4 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !42
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i32 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i32 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 4, !tbaa !77
  tail call void %6() #14
  %7 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !42
  %impl9 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %7, i32 0, i32 15
  %8 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl9, align 4, !tbaa !71
  %device_slice = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %8, i32 0, i32 12
  %9 = load i32 (i8*, %struct.halide_buffer_t*, i32, i32, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, i32, i32, %struct.halide_buffer_t*)** %device_slice, align 4, !tbaa !92
  %call = tail call i32 %9(i8* %user_context, %struct.halide_buffer_t* nonnull %src, i32 %slice_dim, i32 %slice_pos, %struct.halide_buffer_t* nonnull %dst) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %if.then6, %if.then3, %entry
  %retval.0 = phi i32 [ -41, %if.then3 ], [ -41, %if.then6 ], [ %call, %if.end7 ], [ 0, %entry ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_release_crop(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !40
  %tobool.not = icmp eq i64 %0, 0
  br i1 %tobool.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.58, i32 0, i32 0)) #14
  br label %return

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i32 [ -40, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind
define weak i32 @halide_device_release_crop(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #4 {
entry:
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !40
  %tobool.not = icmp eq i64 %0, 0
  br i1 %tobool.not, label %return, label %if.then

if.then:                                          ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #14
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i32 0, i32 1
  %1 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !42
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %1, i32 0, i32 15
  %2 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %device_release_crop = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %2, i32 0, i32 13
  %3 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_release_crop, align 4, !tbaa !93
  %call = tail call i32 %3(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #14
  store i64 0, i64* %device, align 8, !tbaa !40
  %4 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 4, !tbaa !71
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %4, i32 0, i32 1
  %5 = load void ()*, void ()** %release_module, align 4, !tbaa !79
  tail call void %5() #14
  store %struct.halide_device_interface_t* null, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !42
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #14
  br label %return

return:                                           ; preds = %if.then, %entry
  %retval.0 = phi i32 [ %call, %if.then ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind willreturn mustprogress
define weak float @halide_float16_bits_to_float(i16 zeroext %bits) local_unnamed_addr #2 {
entry:
  %conv = zext i16 %bits to i32
  %and2 = and i32 %conv, 1023
  %and4 = lshr i32 %conv, 10
  %0 = and i32 %and4, 31
  %cmp = icmp eq i32 %0, 0
  %cmp5 = icmp ne i32 %and2, 0
  %or.cond = and i1 %cmp5, %cmp
  br i1 %or.cond, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = tail call i32 @llvm.ctlz.i32(i32 %and2, i1 true), !range !94
  %sub6 = xor i32 %1, 31
  %shl7 = shl nuw i32 1, %sub6
  %neg = xor i32 %shl7, -1
  %and8 = and i32 %and2, %neg
  %sub9 = sub nsw i32 23, %sub6
  %shl10 = shl i32 %and8, %sub9
  %add11.neg = mul nsw i32 %1, -8388608
  %shl12 = add i32 %add11.neg, 1124073472
  br label %if.end28

if.else:                                          ; preds = %entry
  %shl14 = shl nuw nsw i32 %and2, 13
  br i1 %cmp, label %if.end28, label %if.else18

if.else18:                                        ; preds = %if.else
  %cmp19 = icmp eq i32 %0, 31
  br i1 %cmp19, label %if.end28, label %if.else21

if.else21:                                        ; preds = %if.else18
  %add22 = shl nuw nsw i32 %0, 23
  %phi.bo = add nuw nsw i32 %add22, 939524096
  br label %if.end28

if.end28:                                         ; preds = %if.else21, %if.else18, %if.else, %if.then
  %shl14.sink = phi i32 [ %shl12, %if.then ], [ %shl14, %if.else18 ], [ %shl14, %if.else ], [ %shl14, %if.else21 ]
  %reEncodedExponent15.0.sink = phi i32 [ %shl10, %if.then ], [ 2139095040, %if.else18 ], [ 0, %if.else ], [ %phi.bo, %if.else21 ]
  %bits.signext = sext i16 %bits to i32
  %shl = and i32 %bits.signext, -2147483648
  %or25 = or i32 %shl14.sink, %shl
  %or26 = or i32 %or25, %reEncodedExponent15.0.sink
  %result.sroa.0.0 = bitcast i32 %or26 to float
  ret float %result.sroa.0.0
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #8

; Function Attrs: nounwind willreturn mustprogress
define weak double @halide_float16_bits_to_double(i16 zeroext %bits) local_unnamed_addr #2 {
entry:
  %call = tail call float @halide_float16_bits_to_float(i16 zeroext %bits) #15
  %conv = fpext float %call to double
  ret double %conv
}

; Function Attrs: nounwind
define weak i32 @halide_error_bounds_inference_call_failed(i8* %user_context, i8* %extern_stage_name, i32 %result) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i71 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.36, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i72 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.36, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i71, %entry.split ], [ %call.i72, %if.then6.i ]
  %ref.tmp.sroa.16.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i10 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.16.0, i8* %extern_stage_name) #14
  %call.i13 = tail call i8* @halide_string_to_string(i8* %call.i10, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i32 0, i32 0)) #14
  %conv.i = sext i32 %result to i64
  %call.i16 = tail call i8* @halide_int64_to_string(i8* %call.i13, i8* %ref.tmp.sroa.16.0, i64 %conv.i, i32 1) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i16 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 %result
}

; Function Attrs: nounwind
define weak i32 @halide_error_extern_stage_failed(i8* %user_context, i8* %extern_stage_name, i32 %result) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i71 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.38, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i72 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.38, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i71, %entry.split ], [ %call.i72, %if.then6.i ]
  %ref.tmp.sroa.16.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i10 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.16.0, i8* %extern_stage_name) #14
  %call.i13 = tail call i8* @halide_string_to_string(i8* %call.i10, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i32 0, i32 0)) #14
  %conv.i = sext i32 %result to i64
  %call.i16 = tail call i8* @halide_int64_to_string(i8* %call.i13, i8* %ref.tmp.sroa.16.0, i64 %conv.i, i32 1) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i16 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 %result
}

; Function Attrs: nounwind
define weak i32 @halide_error_explicit_bounds_too_small(i8* %user_context, i8* %func_name, i8* %var_name, i32 %min_bound, i32 %max_bound, i32 %min_required, i32 %max_required) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i151 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.39, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i152 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.39, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i151, %entry.split ], [ %call.i152, %if.then6.i ]
  %ref.tmp.sroa.34.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i18 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.34.0, i8* %var_name) #14
  %call.i21 = tail call i8* @halide_string_to_string(i8* %call.i18, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.40, i32 0, i32 0)) #14
  %call.i24 = tail call i8* @halide_string_to_string(i8* %call.i21, i8* %ref.tmp.sroa.34.0, i8* %func_name) #14
  %call.i27 = tail call i8* @halide_string_to_string(i8* %call.i24, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5.41, i32 0, i32 0)) #14
  %conv.i = sext i32 %min_bound to i64
  %call.i30 = tail call i8* @halide_int64_to_string(i8* %call.i27, i8* %ref.tmp.sroa.34.0, i64 %conv.i, i32 1) #14
  %call.i33 = tail call i8* @halide_string_to_string(i8* %call.i30, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.42, i32 0, i32 0)) #14
  %conv.i36 = sext i32 %max_bound to i64
  %call.i37 = tail call i8* @halide_int64_to_string(i8* %call.i33, i8* %ref.tmp.sroa.34.0, i64 %conv.i36, i32 1) #14
  %call.i40 = tail call i8* @halide_string_to_string(i8* %call.i37, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.43, i32 0, i32 0)) #14
  %conv.i43 = sext i32 %min_required to i64
  %call.i44 = tail call i8* @halide_int64_to_string(i8* %call.i40, i8* %ref.tmp.sroa.34.0, i64 %conv.i43, i32 1) #14
  %call.i47 = tail call i8* @halide_string_to_string(i8* %call.i44, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.42, i32 0, i32 0)) #14
  %conv.i50 = sext i32 %max_required to i64
  %call.i51 = tail call i8* @halide_int64_to_string(i8* %call.i47, i8* %ref.tmp.sroa.34.0, i64 %conv.i50, i32 1) #14
  %call.i54 = tail call i8* @halide_string_to_string(i8* %call.i51, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.44, i32 0, i32 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i54 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -2
}

; Function Attrs: nounwind
define weak i32 @halide_error_bad_type(i8* %user_context, i8* %func_name, i32 %type_given_bits, i32 %correct_type_bits) local_unnamed_addr #4 {
entry:
  %type_given_bits.addr = alloca i32, align 4
  %correct_type_bits.addr = alloca i32, align 4
  %correct_type = alloca %struct.halide_type_t, align 2
  %type_given = alloca %struct.halide_type_t, align 2
  store i32 %type_given_bits, i32* %type_given_bits.addr, align 4, !tbaa !14
  store i32 %correct_type_bits, i32* %correct_type_bits.addr, align 4, !tbaa !14
  %0 = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %correct_type, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #11
  store i8 0, i8* %0, align 2, !tbaa !34
  %bits.i = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %correct_type, i32 0, i32 1
  store i8 0, i8* %bits.i, align 1, !tbaa !38
  %lanes.i = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %correct_type, i32 0, i32 2
  store i16 0, i16* %lanes.i, align 2, !tbaa !39
  %1 = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %type_given, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #11
  store i8 0, i8* %1, align 2, !tbaa !34
  %bits.i8 = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %type_given, i32 0, i32 1
  store i8 0, i8* %bits.i8, align 1, !tbaa !38
  %lanes.i9 = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %type_given, i32 0, i32 2
  store i16 0, i16* %lanes.i9, align 2, !tbaa !39
  %2 = bitcast i32* %correct_type_bits.addr to i8*
  %call = call i8* @memcpy(i8* nonnull %0, i8* nonnull %2, i32 4) #14
  %3 = bitcast i32* %type_given_bits.addr to i8*
  %call1 = call i8* @memcpy(i8* nonnull %1, i8* nonnull %3, i32 4) #14
  %call.i = call i8* @malloc(i32 1024) #14
  %tobool.not.i12 = icmp eq i8* %call.i, null
  br i1 %tobool.not.i12, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i151 = call i8* @halide_string_to_string(i8* null, i8* null, i8* %func_name) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i152 = call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* %func_name) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i151, %entry.split ], [ %call.i152, %if.then6.i ]
  %ref.tmp.sroa.18.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i18 = call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.18.0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9.45, i32 0, i32 0)) #14
  %call.i21 = call i8* @halide_type_to_string(i8* %call.i18, i8* %ref.tmp.sroa.18.0, %struct.halide_type_t* nonnull %correct_type) #14
  %call.i24 = call i8* @halide_string_to_string(i8* %call.i21, i8* %ref.tmp.sroa.18.0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10.46, i32 0, i32 0)) #14
  %call.i27 = call i8* @halide_type_to_string(i8* %call.i24, i8* %ref.tmp.sroa.18.0, %struct.halide_type_t* nonnull %type_given) #14
  br i1 %tobool.not.i12, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i27 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  call void @free(i8* %call.i) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #11
  ret i32 -3
}

; Function Attrs: nounwind
define weak i32 @halide_error_bad_dimensions(i8* %user_context, i8* %func_name, i32 %dimensions_given, i32 %correct_dimensions) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* %func_name) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* %func_name) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.47, i32 0, i32 0)) #14
  %conv.i = sext i32 %correct_dimensions to i64
  %call.i14 = tail call i8* @halide_int64_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i64 %conv.i, i32 1) #14
  %call.i17 = tail call i8* @halide_string_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.12.48, i32 0, i32 0)) #14
  %conv.i20 = sext i32 %dimensions_given to i64
  %call.i21 = tail call i8* @halide_int64_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i64 %conv.i20, i32 1) #14
  %call.i24 = tail call i8* @halide_string_to_string(i8* %call.i21, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13.49, i32 0, i32 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i24 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -43
}

; Function Attrs: nounwind
define weak i32 @halide_error_access_out_of_bounds(i8* %user_context, i8* %func_name, i32 %dimension, i32 %min_touched, i32 %max_touched, i32 %min_valid, i32 %max_valid) local_unnamed_addr #4 {
entry:
  %cmp = icmp slt i32 %min_touched, %min_valid
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.split, label %if.then6.i

if.then.split:                                    ; preds = %if.then
  %call.i271 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* %func_name) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %if.then
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i272 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* %func_name) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then.split, %if.then6.i
  %phi.call = phi i8* [ %call.i271, %if.then.split ], [ %call.i272, %if.then6.i ]
  %ref.tmp.sroa.22.0 = phi i8* [ null, %if.then.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i30 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14.50, i32 0, i32 0)) #14
  %conv.i = sext i32 %min_touched to i64
  %call.i33 = tail call i8* @halide_int64_to_string(i8* %call.i30, i8* %ref.tmp.sroa.22.0, i64 %conv.i, i32 1) #14
  %call.i36 = tail call i8* @halide_string_to_string(i8* %call.i33, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15.51, i32 0, i32 0)) #14
  %conv.i39 = sext i32 %min_valid to i64
  %call.i40 = tail call i8* @halide_int64_to_string(i8* %call.i36, i8* %ref.tmp.sroa.22.0, i64 %conv.i39, i32 1) #14
  %call.i43 = tail call i8* @halide_string_to_string(i8* %call.i40, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16.52, i32 0, i32 0)) #14
  %conv.i46 = sext i32 %dimension to i64
  %call.i47 = tail call i8* @halide_int64_to_string(i8* %call.i43, i8* %ref.tmp.sroa.22.0, i64 %conv.i46, i32 1) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %if.end17.sink.split

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i47 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %if.end17.sink.split

if.else:                                          ; preds = %entry
  %cmp7 = icmp sgt i32 %max_touched, %max_valid
  br i1 %cmp7, label %if.then8, label %if.end17

if.then8:                                         ; preds = %if.else
  %call.i53 = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i56 = icmp eq i8* %call.i53, null
  br i1 %tobool.not.i56, label %if.then8.split, label %if.then6.i59

if.then8.split:                                   ; preds = %if.then8
  %call.i653 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* %func_name) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit62

if.then6.i59:                                     ; preds = %if.then8
  %add.ptr.i57 = getelementptr inbounds i8, i8* %call.i53, i32 1023
  store i8 0, i8* %add.ptr.i57, align 1, !tbaa !22
  %call.i654 = tail call i8* @halide_string_to_string(i8* nonnull %call.i53, i8* nonnull %add.ptr.i57, i8* %func_name) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit62

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit62: ; preds = %if.then8.split, %if.then6.i59
  %phi.call5 = phi i8* [ %call.i653, %if.then8.split ], [ %call.i654, %if.then6.i59 ]
  %ref.tmp9.sroa.22.0 = phi i8* [ null, %if.then8.split ], [ %add.ptr.i57, %if.then6.i59 ]
  %call.i68 = tail call i8* @halide_string_to_string(i8* %phi.call5, i8* %ref.tmp9.sroa.22.0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14.50, i32 0, i32 0)) #14
  %conv.i71 = sext i32 %max_touched to i64
  %call.i72 = tail call i8* @halide_int64_to_string(i8* %call.i68, i8* %ref.tmp9.sroa.22.0, i64 %conv.i71, i32 1) #14
  %call.i75 = tail call i8* @halide_string_to_string(i8* %call.i72, i8* %ref.tmp9.sroa.22.0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17.53, i32 0, i32 0)) #14
  %conv.i78 = sext i32 %max_valid to i64
  %call.i79 = tail call i8* @halide_int64_to_string(i8* %call.i75, i8* %ref.tmp9.sroa.22.0, i64 %conv.i78, i32 1) #14
  %call.i82 = tail call i8* @halide_string_to_string(i8* %call.i79, i8* %ref.tmp9.sroa.22.0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16.52, i32 0, i32 0)) #14
  %conv.i85 = sext i32 %dimension to i64
  %call.i86 = tail call i8* @halide_int64_to_string(i8* %call.i82, i8* %ref.tmp9.sroa.22.0, i64 %conv.i85, i32 1) #14
  br i1 %tobool.not.i56, label %if.then.i90, label %if.else.i101

if.then.i90:                                      ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit62
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %if.end17.sink.split

if.else.i101:                                     ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit62
  %sub.ptr.lhs.cast.i.i95 = ptrtoint i8* %call.i86 to i32
  %sub.ptr.rhs.cast.i.i96 = ptrtoint i8* %call.i53 to i32
  %sub.ptr.sub.i.i97 = sub i32 1, %sub.ptr.rhs.cast.i.i96
  %add.i.i98 = add i32 %sub.ptr.sub.i.i97, %sub.ptr.lhs.cast.i.i95
  %conv.i.i99 = sext i32 %add.i.i98 to i64
  %call.i.i100 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i53, i64 %conv.i.i99) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i53) #14
  br label %if.end17.sink.split

if.end17.sink.split:                              ; preds = %if.else.i101, %if.then.i90, %if.else.i, %if.then.i
  %call.i53.sink = phi i8* [ %call.i, %if.else.i ], [ null, %if.then.i ], [ %call.i53, %if.else.i101 ], [ null, %if.then.i90 ]
  tail call void @free(i8* %call.i53.sink) #14
  br label %if.end17

if.end17:                                         ; preds = %if.end17.sink.split, %if.else
  ret i32 -4
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_allocation_too_large(i8* %user_context, i8* %buffer_name, i64 %allocation_size, i64 %max_size) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18.54, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18.54, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %buffer_name) #14
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.55, i32 0, i32 0)) #14
  %call.i17 = tail call i8* @halide_uint64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %allocation_size, i32 1) #14
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.20.56, i32 0, i32 0)) #14
  %call.i23 = tail call i8* @halide_uint64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %max_size, i32 1) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -5
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_extents_negative(i8* %user_context, i8* %buffer_name, i32 %dimension, i32 %extent) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i91 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21.57, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i92 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21.57, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i91, %entry.split ], [ %call.i92, %if.then6.i ]
  %ref.tmp.sroa.22.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i12 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.22.0, i8* %buffer_name) #14
  %call.i15 = tail call i8* @halide_string_to_string(i8* %call.i12, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22.58, i32 0, i32 0)) #14
  %conv.i = sext i32 %dimension to i64
  %call.i18 = tail call i8* @halide_int64_to_string(i8* %call.i15, i8* %ref.tmp.sroa.22.0, i64 %conv.i, i32 1) #14
  %call.i21 = tail call i8* @halide_string_to_string(i8* %call.i18, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23.59, i32 0, i32 0)) #14
  %conv.i24 = sext i32 %extent to i64
  %call.i25 = tail call i8* @halide_int64_to_string(i8* %call.i21, i8* %ref.tmp.sroa.22.0, i64 %conv.i24, i32 1) #14
  %call.i28 = tail call i8* @halide_string_to_string(i8* %call.i25, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.44, i32 0, i32 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i28 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -28
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_extents_too_large(i8* %user_context, i8* %buffer_name, i64 %actual_size, i64 %max_size) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24.60, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24.60, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %buffer_name) #14
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.55, i32 0, i32 0)) #14
  %call.i17 = tail call i8* @halide_int64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %actual_size, i32 1) #14
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.20.56, i32 0, i32 0)) #14
  %call.i23 = tail call i8* @halide_int64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %max_size, i32 1) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -6
}

; Function Attrs: nounwind
define weak i32 @halide_error_constraints_make_required_region_smaller(i8* %user_context, i8* %buffer_name, i32 %dimension, i32 %constrained_min, i32 %constrained_extent, i32 %required_min, i32 %required_extent) local_unnamed_addr #4 {
entry:
  %add = add i32 %required_min, -1
  %sub = add i32 %add, %required_extent
  %add1 = add i32 %constrained_min, -1
  %sub2 = add i32 %add1, %constrained_extent
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i231 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25.61, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i232 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25.61, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i231, %entry.split ], [ %call.i232, %if.then6.i ]
  %ref.tmp.sroa.38.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i26 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.38.0, i8* %buffer_name) #14
  %call.i29 = tail call i8* @halide_string_to_string(i8* %call.i26, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.26.62, i32 0, i32 0)) #14
  %conv.i = sext i32 %dimension to i64
  %call.i32 = tail call i8* @halide_int64_to_string(i8* %call.i29, i8* %ref.tmp.sroa.38.0, i64 %conv.i, i32 1) #14
  %call.i35 = tail call i8* @halide_string_to_string(i8* %call.i32, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.63, i32 0, i32 0)) #14
  %call.i38 = tail call i8* @halide_string_to_string(i8* %call.i35, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28.64, i32 0, i32 0)) #14
  %conv.i41 = sext i32 %required_min to i64
  %call.i42 = tail call i8* @halide_int64_to_string(i8* %call.i38, i8* %ref.tmp.sroa.38.0, i64 %conv.i41, i32 1) #14
  %call.i45 = tail call i8* @halide_string_to_string(i8* %call.i42, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.42, i32 0, i32 0)) #14
  %conv.i48 = sext i32 %sub to i64
  %call.i49 = tail call i8* @halide_int64_to_string(i8* %call.i45, i8* %ref.tmp.sroa.38.0, i64 %conv.i48, i32 1) #14
  %call.i52 = tail call i8* @halide_string_to_string(i8* %call.i49, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.63, i32 0, i32 0)) #14
  %call.i55 = tail call i8* @halide_string_to_string(i8* %call.i52, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.29.65, i32 0, i32 0)) #14
  %conv.i58 = sext i32 %constrained_min to i64
  %call.i59 = tail call i8* @halide_int64_to_string(i8* %call.i55, i8* %ref.tmp.sroa.38.0, i64 %conv.i58, i32 1) #14
  %call.i62 = tail call i8* @halide_string_to_string(i8* %call.i59, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.42, i32 0, i32 0)) #14
  %conv.i65 = sext i32 %sub2 to i64
  %call.i66 = tail call i8* @halide_int64_to_string(i8* %call.i62, i8* %ref.tmp.sroa.38.0, i64 %conv.i65, i32 1) #14
  %call.i69 = tail call i8* @halide_string_to_string(i8* %call.i66, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.66, i32 0, i32 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i69 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -7
}

; Function Attrs: nounwind
define weak i32 @halide_error_constraint_violated(i8* %user_context, i8* %var, i32 %val, i8* %constrained_var, i32 %constrained_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i111 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31.67, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i112 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31.67, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i111, %entry.split ], [ %call.i112, %if.then6.i ]
  %ref.tmp.sroa.26.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i14 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.26.0, i8* %var) #14
  %call.i17 = tail call i8* @halide_string_to_string(i8* %call.i14, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32.68, i32 0, i32 0)) #14
  %conv.i = sext i32 %val to i64
  %call.i20 = tail call i8* @halide_int64_to_string(i8* %call.i17, i8* %ref.tmp.sroa.26.0, i64 %conv.i, i32 1) #14
  %call.i23 = tail call i8* @halide_string_to_string(i8* %call.i20, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33.69, i32 0, i32 0)) #14
  %call.i26 = tail call i8* @halide_string_to_string(i8* %call.i23, i8* %ref.tmp.sroa.26.0, i8* %constrained_var) #14
  %call.i29 = tail call i8* @halide_string_to_string(i8* %call.i26, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32.68, i32 0, i32 0)) #14
  %conv.i32 = sext i32 %constrained_val to i64
  %call.i33 = tail call i8* @halide_int64_to_string(i8* %call.i29, i8* %ref.tmp.sroa.26.0, i64 %conv.i32, i32 1) #14
  %call.i36 = tail call i8* @halide_string_to_string(i8* %call.i33, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.44, i32 0, i32 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i36 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -8
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_small_i64(i8* %user_context, i8* %param_name, i64 %val, i64 %min_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.70, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.70, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %param_name) #14
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.55, i32 0, i32 0)) #14
  %call.i17 = tail call i8* @halide_int64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %val, i32 1) #14
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35.71, i32 0, i32 0)) #14
  %call.i23 = tail call i8* @halide_int64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %min_val, i32 1) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -9
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_small_u64(i8* %user_context, i8* %param_name, i64 %val, i64 %min_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.70, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.70, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %param_name) #14
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.55, i32 0, i32 0)) #14
  %call.i17 = tail call i8* @halide_uint64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %val, i32 1) #14
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35.71, i32 0, i32 0)) #14
  %call.i23 = tail call i8* @halide_uint64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %min_val, i32 1) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -9
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_small_f64(i8* %user_context, i8* %param_name, double %val, double %min_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.70, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.70, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %param_name) #14
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.55, i32 0, i32 0)) #14
  %call.i17 = tail call i8* @halide_double_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, double %val, i32 1) #14
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35.71, i32 0, i32 0)) #14
  %call.i23 = tail call i8* @halide_double_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, double %min_val, i32 1) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -9
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_large_i64(i8* %user_context, i8* %param_name, i64 %val, i64 %max_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.70, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.70, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %param_name) #14
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.55, i32 0, i32 0)) #14
  %call.i17 = tail call i8* @halide_int64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %val, i32 1) #14
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36.72, i32 0, i32 0)) #14
  %call.i23 = tail call i8* @halide_int64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %max_val, i32 1) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -10
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_large_u64(i8* %user_context, i8* %param_name, i64 %val, i64 %max_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.70, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.70, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %param_name) #14
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.55, i32 0, i32 0)) #14
  %call.i17 = tail call i8* @halide_uint64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %val, i32 1) #14
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36.72, i32 0, i32 0)) #14
  %call.i23 = tail call i8* @halide_uint64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %max_val, i32 1) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -10
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_large_f64(i8* %user_context, i8* %param_name, double %val, double %max_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.70, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.70, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %param_name) #14
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.55, i32 0, i32 0)) #14
  %call.i17 = tail call i8* @halide_double_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, double %val, i32 1) #14
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36.72, i32 0, i32 0)) #14
  %call.i23 = tail call i8* @halide_double_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, double %max_val, i32 1) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -10
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_error_out_of_memory(i8* %user_context) local_unnamed_addr #0 {
entry:
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.37, i32 0, i32 0)) #14
  ret i32 -11
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_argument_is_null(i8* %user_context, i8* %buffer_name) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i51 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i52 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i51, %entry.split ], [ %call.i52, %if.then6.i ]
  %ref.tmp.sroa.14.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i8 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.14.0, i8* %buffer_name) #14
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i8, i8* %ref.tmp.sroa.14.0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i32 0, i32 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i11 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -12
}

; Function Attrs: nounwind
define weak i32 @halide_error_debug_to_file_failed(i8* %user_context, i8* %func, i8* %filename, i32 %error_code) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.40, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.40, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %func) #14
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41.73, i32 0, i32 0)) #14
  %call.i17 = tail call i8* @halide_string_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i8* %filename) #14
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i32 0, i32 0)) #14
  %conv.i = sext i32 %error_code to i64
  %call.i23 = tail call i8* @halide_int64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %conv.i, i32 1) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -13
}

; Function Attrs: nounwind
define weak i32 @halide_error_unaligned_host_ptr(i8* %user_context, i8* %func, i32 %alignment) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i71 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i72 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i71, %entry.split ], [ %call.i72, %if.then6.i ]
  %ref.tmp.sroa.18.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i10 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.18.0, i8* %func) #14
  %call.i13 = tail call i8* @halide_string_to_string(i8* %call.i10, i8* %ref.tmp.sroa.18.0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.44, i32 0, i32 0)) #14
  %conv.i = sext i32 %alignment to i64
  %call.i16 = tail call i8* @halide_int64_to_string(i8* %call.i13, i8* %ref.tmp.sroa.18.0, i64 %conv.i, i32 1) #14
  %call.i19 = tail call i8* @halide_string_to_string(i8* %call.i16, i8* %ref.tmp.sroa.18.0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.45, i32 0, i32 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i19 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -24
}

; Function Attrs: nounwind
define weak i32 @halide_error_device_dirty_with_no_device_support(i8* %user_context, i8* %func) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i61 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i62 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i61, %entry.split ], [ %call.i62, %if.then6.i ]
  %ref.tmp.sroa.16.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i9 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.16.0, i8* %func) #14
  %call.i12 = tail call i8* @halide_string_to_string(i8* %call.i9, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.47, i32 0, i32 0)) #14
  %call.i15 = tail call i8* @halide_string_to_string(i8* %call.i12, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.48, i32 0, i32 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i15 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -44
}

; Function Attrs: nounwind
define weak i32 @halide_error_host_is_null(i8* %user_context, i8* %func) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i51 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i52 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i51, %entry.split ], [ %call.i52, %if.then6.i ]
  %ref.tmp.sroa.14.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i8 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.14.0, i8* %func) #14
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i8, i8* %ref.tmp.sroa.14.0, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.49, i32 0, i32 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i11 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -34
}

; Function Attrs: nounwind
define weak i32 @halide_error_bad_fold(i8* %user_context, i8* %func_name, i8* %var_name, i8* %loop_name) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i91 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.50, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i92 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.50, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i91, %entry.split ], [ %call.i92, %if.then6.i ]
  %ref.tmp.sroa.22.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i12 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.22.0, i8* %var_name) #14
  %call.i15 = tail call i8* @halide_string_to_string(i8* %call.i12, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i32 0, i32 0)) #14
  %call.i18 = tail call i8* @halide_string_to_string(i8* %call.i15, i8* %ref.tmp.sroa.22.0, i8* %func_name) #14
  %call.i21 = tail call i8* @halide_string_to_string(i8* %call.i18, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.52, i32 0, i32 0)) #14
  %call.i24 = tail call i8* @halide_string_to_string(i8* %call.i21, i8* %ref.tmp.sroa.22.0, i8* %loop_name) #14
  %call.i27 = tail call i8* @halide_string_to_string(i8* %call.i24, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.66, i32 0, i32 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i27 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -25
}

; Function Attrs: nounwind
define weak i32 @halide_error_bad_extern_fold(i8* %user_context, i8* %func_name, i32 %dim, i32 %min, i32 %extent, i32 %valid_min, i32 %fold_factor) local_unnamed_addr #4 {
entry:
  %cmp = icmp slt i32 %min, %valid_min
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %add = add nsw i32 %extent, %min
  %add1 = add nsw i32 %fold_factor, %valid_min
  %cmp2 = icmp sgt i32 %add, %add1
  br i1 %cmp2, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.split, label %if.then6.i

if.then.split:                                    ; preds = %if.then
  %call.i521 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %if.then
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i522 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then.split, %if.then6.i
  %phi.call = phi i8* [ %call.i521, %if.then.split ], [ %call.i522, %if.then6.i ]
  %ref.tmp.sroa.36.0 = phi i8* [ null, %if.then.split ], [ %add.ptr.i, %if.then6.i ]
  %conv.i = sext i32 %dim to i64
  %call.i55 = tail call i8* @halide_int64_to_string(i8* %phi.call, i8* %ref.tmp.sroa.36.0, i64 %conv.i, i32 1) #14
  %call.i58 = tail call i8* @halide_string_to_string(i8* %call.i55, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i32 0, i32 0)) #14
  %call.i61 = tail call i8* @halide_string_to_string(i8* %call.i58, i8* %ref.tmp.sroa.36.0, i8* %func_name) #14
  %call.i64 = tail call i8* @halide_string_to_string(i8* %call.i61, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.54, i32 0, i32 0)) #14
  %conv.i67 = sext i32 %min to i64
  %call.i68 = tail call i8* @halide_int64_to_string(i8* %call.i64, i8* %ref.tmp.sroa.36.0, i64 %conv.i67, i32 1) #14
  %call.i71 = tail call i8* @halide_string_to_string(i8* %call.i68, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i32 0, i32 0)) #14
  %add9 = add nsw i32 %extent, %min
  %sub = add nsw i32 %add9, -1
  %conv.i74 = sext i32 %sub to i64
  %call.i75 = tail call i8* @halide_int64_to_string(i8* %call.i71, i8* %ref.tmp.sroa.36.0, i64 %conv.i74, i32 1) #14
  %call.i78 = tail call i8* @halide_string_to_string(i8* %call.i75, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i32 0, i32 0)) #14
  %call.i81 = tail call i8* @halide_string_to_string(i8* %call.i78, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.57, i32 0, i32 0)) #14
  %conv.i84 = sext i32 %valid_min to i64
  %call.i85 = tail call i8* @halide_int64_to_string(i8* %call.i81, i8* %ref.tmp.sroa.36.0, i64 %conv.i84, i32 1) #14
  %call.i88 = tail call i8* @halide_string_to_string(i8* %call.i85, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i32 0, i32 0)) #14
  %add15 = add nsw i32 %fold_factor, %valid_min
  %sub16 = add nsw i32 %add15, -1
  %conv.i91 = sext i32 %sub16 to i64
  %call.i92 = tail call i8* @halide_int64_to_string(i8* %call.i88, i8* %ref.tmp.sroa.36.0, i64 %conv.i91, i32 1) #14
  %call.i95 = tail call i8* @halide_string_to_string(i8* %call.i92, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.58.74, i32 0, i32 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %if.end

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i95 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %if.end

if.else:                                          ; preds = %lor.lhs.false
  %call.i101 = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i104 = icmp eq i8* %call.i101, null
  br i1 %tobool.not.i104, label %if.else.split, label %if.then6.i107

if.else.split:                                    ; preds = %if.else
  %call.i1133 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit110

if.then6.i107:                                    ; preds = %if.else
  %add.ptr.i105 = getelementptr inbounds i8, i8* %call.i101, i32 1023
  store i8 0, i8* %add.ptr.i105, align 1, !tbaa !22
  %call.i1134 = tail call i8* @halide_string_to_string(i8* nonnull %call.i101, i8* nonnull %add.ptr.i105, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit110

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit110: ; preds = %if.else.split, %if.then6.i107
  %phi.call5 = phi i8* [ %call.i1133, %if.else.split ], [ %call.i1134, %if.then6.i107 ]
  %ref.tmp19.sroa.34.0 = phi i8* [ null, %if.else.split ], [ %add.ptr.i105, %if.then6.i107 ]
  %conv.i116 = sext i32 %dim to i64
  %call.i117 = tail call i8* @halide_int64_to_string(i8* %phi.call5, i8* %ref.tmp19.sroa.34.0, i64 %conv.i116, i32 1) #14
  %call.i120 = tail call i8* @halide_string_to_string(i8* %call.i117, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i32 0, i32 0)) #14
  %call.i123 = tail call i8* @halide_string_to_string(i8* %call.i120, i8* %ref.tmp19.sroa.34.0, i8* %func_name) #14
  %call.i126 = tail call i8* @halide_string_to_string(i8* %call.i123, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.54, i32 0, i32 0)) #14
  %conv.i129 = sext i32 %min to i64
  %call.i130 = tail call i8* @halide_int64_to_string(i8* %call.i126, i8* %ref.tmp19.sroa.34.0, i64 %conv.i129, i32 1) #14
  %call.i133 = tail call i8* @halide_string_to_string(i8* %call.i130, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i32 0, i32 0)) #14
  %sub28 = add nsw i32 %add, -1
  %conv.i136 = sext i32 %sub28 to i64
  %call.i137 = tail call i8* @halide_int64_to_string(i8* %call.i133, i8* %ref.tmp19.sroa.34.0, i64 %conv.i136, i32 1) #14
  %call.i140 = tail call i8* @halide_string_to_string(i8* %call.i137, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i32 0, i32 0)) #14
  %call.i143 = tail call i8* @halide_string_to_string(i8* %call.i140, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.59.75, i32 0, i32 0)) #14
  %call.i146 = tail call i8* @halide_string_to_string(i8* %call.i143, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.60.76, i32 0, i32 0)) #14
  %conv.i149 = sext i32 %fold_factor to i64
  %call.i150 = tail call i8* @halide_int64_to_string(i8* %call.i146, i8* %ref.tmp19.sroa.34.0, i64 %conv.i149, i32 1) #14
  %call.i153 = tail call i8* @halide_string_to_string(i8* %call.i150, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.66, i32 0, i32 0)) #14
  br i1 %tobool.not.i104, label %if.then.i157, label %if.else.i168

if.then.i157:                                     ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit110
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %if.end

if.else.i168:                                     ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit110
  %sub.ptr.lhs.cast.i.i162 = ptrtoint i8* %call.i153 to i32
  %sub.ptr.rhs.cast.i.i163 = ptrtoint i8* %call.i101 to i32
  %sub.ptr.sub.i.i164 = sub i32 1, %sub.ptr.rhs.cast.i.i163
  %add.i.i165 = add i32 %sub.ptr.sub.i.i164, %sub.ptr.lhs.cast.i.i162
  %conv.i.i166 = sext i32 %add.i.i165 to i64
  %call.i.i167 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i101, i64 %conv.i.i166) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i101) #14
  br label %if.end

if.end:                                           ; preds = %if.else.i168, %if.then.i157, %if.else.i, %if.then.i
  %call.i101.sink = phi i8* [ %call.i, %if.else.i ], [ null, %if.then.i ], [ %call.i101, %if.else.i168 ], [ null, %if.then.i157 ]
  tail call void @free(i8* %call.i101.sink) #14
  ret i32 -35
}

; Function Attrs: nounwind
define weak i32 @halide_error_fold_factor_too_small(i8* %user_context, i8* %func_name, i8* %var_name, i32 %fold_factor, i8* %loop_name, i32 %required_extent) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i131 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.61.77, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i132 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.61.77, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i131, %entry.split ], [ %call.i132, %if.then6.i ]
  %ref.tmp.sroa.30.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %conv.i = sext i32 %fold_factor to i64
  %call.i16 = tail call i8* @halide_int64_to_string(i8* %phi.call, i8* %ref.tmp.sroa.30.0, i64 %conv.i, i32 1) #14
  %call.i19 = tail call i8* @halide_string_to_string(i8* %call.i16, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62, i32 0, i32 0)) #14
  %call.i22 = tail call i8* @halide_string_to_string(i8* %call.i19, i8* %ref.tmp.sroa.30.0, i8* %var_name) #14
  %call.i25 = tail call i8* @halide_string_to_string(i8* %call.i22, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i32 0, i32 0)) #14
  %call.i28 = tail call i8* @halide_string_to_string(i8* %call.i25, i8* %ref.tmp.sroa.30.0, i8* %func_name) #14
  %call.i31 = tail call i8* @halide_string_to_string(i8* %call.i28, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.63, i32 0, i32 0)) #14
  %call.i34 = tail call i8* @halide_string_to_string(i8* %call.i31, i8* %ref.tmp.sroa.30.0, i8* %loop_name) #14
  %call.i37 = tail call i8* @halide_string_to_string(i8* %call.i34, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32.68, i32 0, i32 0)) #14
  %conv.i40 = sext i32 %required_extent to i64
  %call.i41 = tail call i8* @halide_int64_to_string(i8* %call.i37, i8* %ref.tmp.sroa.30.0, i64 %conv.i40, i32 1) #14
  %call.i44 = tail call i8* @halide_string_to_string(i8* %call.i41, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64.78, i32 0, i32 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i44 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -26
}

; Function Attrs: nounwind
define weak i32 @halide_error_requirement_failed(i8* %user_context, i8* %condition, i8* %message) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i61 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.65, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i62 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.65, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i61, %entry.split ], [ %call.i62, %if.then6.i ]
  %ref.tmp.sroa.16.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i9 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.16.0, i8* %condition) #14
  %call.i12 = tail call i8* @halide_string_to_string(i8* %call.i9, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.66, i32 0, i32 0)) #14
  %call.i15 = tail call i8* @halide_string_to_string(i8* %call.i12, i8* %ref.tmp.sroa.16.0, i8* %message) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i15 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -27
}

; Function Attrs: nounwind
define weak i32 @halide_error_specialize_fail(i8* %user_context, i8* %message) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %call.i41 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i32 0, i32 0)) #14
  %call.i75 = tail call i8* @halide_string_to_string(i8* %call.i41, i8* null, i8* %message) #14
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i42 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i32 0, i32 0)) #14
  %call.i7 = tail call i8* @halide_string_to_string(i8* %call.i42, i8* nonnull %add.ptr.i, i8* %message) #14
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i7 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -31
}

; Function Attrs: nounwind
define weak i32 @halide_error_no_device_interface(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %call.i316 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.68, i32 0, i32 0)) #14
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i3 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.68, i32 0, i32 0)) #14
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i3 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -19
}

; Function Attrs: nounwind
define weak i32 @halide_error_device_interface_no_device(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %call.i316 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.69, i32 0, i32 0)) #14
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i3 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.69, i32 0, i32 0)) #14
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i3 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -36
}

; Function Attrs: nounwind
define weak i32 @halide_error_host_and_device_dirty(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %call.i316 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.70, i32 0, i32 0)) #14
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i3 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.70, i32 0, i32 0)) #14
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i3 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -37
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_is_null(i8* %user_context, i8* %routine) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i51 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.71, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i52 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.71, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i51, %entry.split ], [ %call.i52, %if.then6.i ]
  %ref.tmp.sroa.14.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i8 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.14.0, i8* %routine) #14
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i8, i8* %ref.tmp.sroa.14.0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.72, i32 0, i32 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i11 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -38
}

; Function Attrs: nounwind
define weak i32 @halide_error_storage_bound_too_small(i8* %user_context, i8* %func_name, i8* %var_name, i32 %provided_size, i32 %required_size) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i111 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.73, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i112 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.73, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i111, %entry.split ], [ %call.i112, %if.then6.i ]
  %ref.tmp.sroa.26.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %conv.i = sext i32 %provided_size to i64
  %call.i14 = tail call i8* @halide_int64_to_string(i8* %phi.call, i8* %ref.tmp.sroa.26.0, i64 %conv.i, i32 1) #14
  %call.i17 = tail call i8* @halide_string_to_string(i8* %call.i14, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62, i32 0, i32 0)) #14
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.26.0, i8* %var_name) #14
  %call.i23 = tail call i8* @halide_string_to_string(i8* %call.i20, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i32 0, i32 0)) #14
  %call.i26 = tail call i8* @halide_string_to_string(i8* %call.i23, i8* %ref.tmp.sroa.26.0, i8* %func_name) #14
  %call.i29 = tail call i8* @halide_string_to_string(i8* %call.i26, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.74, i32 0, i32 0)) #14
  %conv.i32 = sext i32 %required_size to i64
  %call.i33 = tail call i8* @halide_int64_to_string(i8* %call.i29, i8* %ref.tmp.sroa.26.0, i64 %conv.i32, i32 1) #14
  %call.i36 = tail call i8* @halide_string_to_string(i8* %call.i33, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64.78, i32 0, i32 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i36 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -45
}

; Function Attrs: nounwind
define weak i32 @halide_error_device_crop_failed(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %call.i316 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.75, i32 0, i32 0)) #14
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i3 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.75, i32 0, i32 0)) #14
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i3 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -41
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* %ptr, i64 %len) local_unnamed_addr #2 {
entry:
  ret i32 0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_msan_check_memory_is_initialized(i8* %user_context, i8* %ptr, i64 %len, i8* %name) local_unnamed_addr #2 {
entry:
  ret i32 0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_msan_check_buffer_is_initialized(i8* %user_context, %struct.halide_buffer_t* %b, i8* %buf_name) local_unnamed_addr #2 {
entry:
  ret i32 0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_msan_annotate_buffer_is_initialized(i8* %user_context, %struct.halide_buffer_t* %b) local_unnamed_addr #2 {
entry:
  ret i32 0
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_msan_annotate_buffer_is_initialized_as_destructor(i8* %user_context, i8* %b) local_unnamed_addr #2 {
entry:
  ret void
}

; Function Attrs: nounwind
define weak i32 @halide_qurt_hvx_lock(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call = tail call i32 @qurt_hvx_lock(i32 1) #14
  %cmp.not = icmp eq i32 %call, 0
  br i1 %cmp.not, label %cleanup, label %if.then

if.then:                                          ; preds = %entry
  %call.i17 = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i19 = icmp eq i8* %call.i17, null
  br i1 %tobool.not.i19, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.then
  %call.i30 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.91, i32 0, i32 0)) #14
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %if.then
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i17, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i = tail call i8* @halide_string_to_string(i8* nonnull %call.i17, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.91, i32 0, i32 0)) #14
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i17 to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i17, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i17) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i17) #14
  br label %cleanup

cleanup:                                          ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit, %entry
  %retval.0 = phi i32 [ -1, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit ], [ 0, %entry ]
  ret i32 %retval.0
}

declare i32 @qurt_hvx_lock(i32) local_unnamed_addr #1

; Function Attrs: nounwind
define weak i32 @halide_qurt_hvx_unlock(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call = tail call i32 @qurt_hvx_unlock() #14
  %cmp.not = icmp eq i32 %call, 0
  br i1 %cmp.not, label %cleanup, label %if.then

if.then:                                          ; preds = %entry
  %call.i13 = tail call i8* @malloc(i32 1024) #14
  %tobool.not.i15 = icmp eq i8* %call.i13, null
  br i1 %tobool.not.i15, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.then
  %call.i26 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.93, i32 0, i32 0)) #14
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.92, i32 0, i32 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %if.then
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i13, i32 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !22
  %call.i = tail call i8* @halide_string_to_string(i8* nonnull %call.i13, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.93, i32 0, i32 0)) #14
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i13 to i32
  %sub.ptr.sub.i.i = sub i32 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i32 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %conv.i.i = sext i32 %add.i.i to i64
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i13, i64 %conv.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i13) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i13) #14
  br label %cleanup

cleanup:                                          ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit, %entry
  %retval.0 = phi i32 [ -1, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit ], [ 0, %entry ]
  ret i32 %retval.0
}

declare i32 @qurt_hvx_unlock() local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak void @halide_qurt_hvx_unlock_as_destructor(i8* %user_context, i8* %0) local_unnamed_addr #0 {
entry:
  %call = tail call i32 @halide_qurt_hvx_unlock(i8* %user_context) #15
  ret void
}

; Function Attrs: nounwind readnone
declare <32 x i32> @llvm.hexagon.V6.lo.128B(<64 x i32>) #9

; Function Attrs: nounwind readnone
declare <32 x i32> @llvm.hexagon.V6.hi.128B(<64 x i32>) #9

; Function Attrs: nounwind readnone
declare <64 x i32> @llvm.hexagon.V6.vdealvdd.128B(<32 x i32>, <32 x i32>, i32) #9

; Function Attrs: nounwind mustprogress
define weak i8* @halide_vtcm_malloc(i8* %user_context, i32 %size) local_unnamed_addr #0 {
entry:
  %call = tail call i8* @HAP_request_VTCM(i32 %size, i32 1) #14
  ret i8* %call
}

declare i8* @HAP_request_VTCM(i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak void @halide_vtcm_free(i8* %user_context, i8* %addr) local_unnamed_addr #0 {
entry:
  %call = tail call i32 @HAP_release_VTCM(i8* %addr) #14
  ret void
}

declare i32 @HAP_release_VTCM(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
define weak i32 @halide_default_can_use_target_features(i32 %count, i64* %features) #4 {
entry:
  %tmp = alloca %"struct.Halide::Runtime::Internal::CpuFeatures", align 8
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal36halide_cpu_features_initialized_lockE) #14
  %0 = load i8, i8* @_ZN6Halide7Runtime8Internal31halide_cpu_features_initializedE, align 1, !tbaa !18, !range !21
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = bitcast %"struct.Halide::Runtime::Internal::CpuFeatures"* %tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #11
  call void @_ZN6Halide7Runtime8Internal23halide_get_cpu_featuresEv(%"struct.Halide::Runtime::Internal::CpuFeatures"* nonnull sret(%"struct.Halide::Runtime::Internal::CpuFeatures") align 8 %tmp) #14
  %call = call i8* @memcpy(i8* bitcast ([4 x i64]* @_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE to i8*), i8* nonnull %1, i32 32) #14
  store i8 1, i8* @_ZN6Halide7Runtime8Internal31halide_cpu_features_initializedE, align 1, !tbaa !18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #11
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal36halide_cpu_features_initialized_lockE) #14
  %cmp.not = icmp eq i32 %count, 2
  br i1 %cmp.not, label %if.end2, label %if.then1

if.then1:                                         ; preds = %if.end
  call void @halide_error(i8* null, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.94, i32 0, i32 0)) #14
  br label %if.end2

if.end2:                                          ; preds = %if.then1, %if.end
  %2 = load i64, i64* %features, align 8, !tbaa !26
  %3 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE, i32 0, i32 0), align 8, !tbaa !26
  %and = and i64 %3, %2
  %cmp5.not = icmp eq i64 %and, 0
  br i1 %cmp5.not, label %for.inc.critedge, label %if.then6

if.then6:                                         ; preds = %if.end2
  %4 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE, i32 0, i32 2), align 8, !tbaa !26
  %and8 = and i64 %4, %and
  %cmp9.not = icmp eq i64 %and8, %and
  br i1 %cmp9.not, label %for.inc.critedge, label %cleanup13

for.inc.critedge:                                 ; preds = %if.then6, %if.end2
  %arrayidx.1 = getelementptr inbounds i64, i64* %features, i32 1
  %5 = load i64, i64* %arrayidx.1, align 8, !tbaa !26
  %6 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE, i32 0, i32 1), align 8, !tbaa !26
  %and.1 = and i64 %6, %5
  %cmp5.not.1 = icmp eq i64 %and.1, 0
  br i1 %cmp5.not.1, label %for.inc.critedge.1, label %if.then6.1

cleanup13:                                        ; preds = %for.inc.critedge.1, %if.then6.1, %if.then6
  %cmp3.lcssa = phi i32 [ 0, %if.then6 ], [ 0, %if.then6.1 ], [ 1, %for.inc.critedge.1 ]
  ret i32 %cmp3.lcssa

if.then6.1:                                       ; preds = %for.inc.critedge
  %7 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE, i32 0, i32 3), align 8, !tbaa !26
  %and8.1 = and i64 %7, %and.1
  %cmp9.not.1 = icmp eq i64 %and8.1, %and.1
  br i1 %cmp9.not.1, label %for.inc.critedge.1, label %cleanup13

for.inc.critedge.1:                               ; preds = %if.then6.1, %for.inc.critedge
  br label %cleanup13
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 (i32, i64*)* @halide_set_custom_can_use_target_features(i32 (i32, i64*)* %fn) local_unnamed_addr #2 {
entry:
  %0 = load i32 (i32, i64*)*, i32 (i32, i64*)** @_ZN6Halide7Runtime8Internal30custom_can_use_target_featuresE, align 4, !tbaa !10
  store i32 (i32, i64*)* %fn, i32 (i32, i64*)** @_ZN6Halide7Runtime8Internal30custom_can_use_target_featuresE, align 4, !tbaa !10
  ret i32 (i32, i64*)* %0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_can_use_target_features(i32 %count, i64* %features) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i32, i64*)*, i32 (i32, i64*)** @_ZN6Halide7Runtime8Internal30custom_can_use_target_featuresE, align 4, !tbaa !10
  %call = tail call i32 %0(i32 %count, i64* %features) #14
  ret i32 %call
}

; Function Attrs: nounwind willreturn
define linkonce void @_ZN6Halide7Runtime8Internal23halide_get_cpu_featuresEv(%"struct.Halide::Runtime::Internal::CpuFeatures"* noalias sret(%"struct.Halide::Runtime::Internal::CpuFeatures") align 8 %agg.result) local_unnamed_addr #7 {
entry:
  %arrayidx.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::CpuFeatures", %"struct.Halide::Runtime::Internal::CpuFeatures"* %agg.result, i32 0, i32 0, i32 0
  store i64 0, i64* %arrayidx.i, align 8, !tbaa !26
  %arrayidx2.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::CpuFeatures", %"struct.Halide::Runtime::Internal::CpuFeatures"* %agg.result, i32 0, i32 1, i32 0
  store i64 0, i64* %arrayidx2.i, align 8, !tbaa !26
  %arrayidx.1.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::CpuFeatures", %"struct.Halide::Runtime::Internal::CpuFeatures"* %agg.result, i32 0, i32 0, i32 1
  store i64 0, i64* %arrayidx.1.i, align 8, !tbaa !26
  %arrayidx2.1.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::CpuFeatures", %"struct.Halide::Runtime::Internal::CpuFeatures"* %agg.result, i32 0, i32 1, i32 1
  store i64 0, i64* %arrayidx2.1.i, align 8, !tbaa !26
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_use_jit_module() local_unnamed_addr #2 {
entry:
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_release_jit_module() local_unnamed_addr #2 {
entry:
  ret void
}

; Function Attrs: nounwind readnone
declare <32 x i32> @llvm.hexagon.V6.vpackeh.128B(<32 x i32>, <32 x i32>) #9

; Function Attrs: nounwind readnone
declare <32 x i32> @llvm.hexagon.V6.vpackoh.128B(<32 x i32>, <32 x i32>) #9

; Function Attrs: nounwind readnone
declare <32 x i32> @llvm.hexagon.V6.vaddhsat.128B(<32 x i32>, <32 x i32>) #9

; Function Attrs: nounwind readnone
declare <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32>, <32 x i32>) #9

; Function Attrs: nounwind readnone
declare <32 x i32> @llvm.hexagon.V6.vmaxh.128B(<32 x i32>, <32 x i32>) #9

; Function Attrs: nounwind readnone
declare <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32>, <32 x i32>) #9

; Function Attrs: nounwind readnone
declare <32 x i32> @llvm.hexagon.V6.vminh.128B(<32 x i32>, <32 x i32>) #9

; Function Attrs: nounwind
define i32 @conv_nn_hvx128(%struct.halide_buffer_t* noalias nocapture readonly %input.buffer, i8 %input_zero, %struct.halide_buffer_t* noalias nocapture readonly %filter.buffer, i8 %filter_zero, %struct.halide_buffer_t* noalias nocapture readonly %bias.buffer, i32 %stride_x, i32 %stride_y, i32 %dilation_x, i32 %dilation_y, i32 %output_multiplier, i32 %output_shift, i8 %output_zero, i8 %output_min, i8 %output_max, %struct.halide_buffer_t* noalias nocapture readonly %output.buffer) local_unnamed_addr #10 {
if.end.i:
  %hvx_lock_result = tail call i32 @halide_qurt_hvx_lock(i8* null) #11
  %host.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %bias.buffer, i32 0, i32 2
  %0 = bitcast i8** %host.i to i32**
  %1 = load i32*, i32** %0, align 4, !tbaa !43
  %2 = bitcast i32* %1 to i8*
  %dim.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %bias.buffer, i32 0, i32 6
  %3 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i, align 8, !tbaa !46
  %extent.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3, i32 0, i32 1
  %4 = load i32, i32* %extent.i, align 4, !tbaa !49
  %host.i751 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %filter.buffer, i32 0, i32 2
  %5 = load i8*, i8** %host.i751, align 4, !tbaa !43
  %dim.i752 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %filter.buffer, i32 0, i32 6
  %6 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i752, align 8, !tbaa !46
  %extent.i767 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %6, i32 2, i32 1
  %7 = load i32, i32* %extent.i767, align 4, !tbaa !49
  %stride.i773 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %6, i32 3, i32 2
  %8 = load i32, i32* %stride.i773, align 4, !tbaa !50
  %extent.i777 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %6, i32 4, i32 1
  %9 = load i32, i32* %extent.i777, align 4, !tbaa !49
  %stride.i779 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %6, i32 4, i32 2
  %10 = load i32, i32* %stride.i779, align 4, !tbaa !50
  %extent.i783 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %6, i32 5, i32 1
  %11 = load i32, i32* %extent.i783, align 4, !tbaa !49
  %stride.i785 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %6, i32 5, i32 2
  %12 = load i32, i32* %stride.i785, align 4, !tbaa !50
  %host.i786 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %input.buffer, i32 0, i32 2
  %13 = load i8*, i8** %host.i786, align 4, !tbaa !43
  %dim.i787 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %input.buffer, i32 0, i32 6
  %14 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i787, align 8, !tbaa !46
  %extent.i790 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %14, i32 0, i32 1
  %15 = load i32, i32* %extent.i790, align 4, !tbaa !49
  %min.i794 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %14, i32 1, i32 0
  %16 = load i32, i32* %min.i794, align 4, !tbaa !47
  %stride.i796 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %14, i32 1, i32 2
  %17 = load i32, i32* %stride.i796, align 4, !tbaa !50
  %min.i798 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %14, i32 2, i32 0
  %18 = load i32, i32* %min.i798, align 4, !tbaa !47
  %stride.i800 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %14, i32 2, i32 2
  %19 = load i32, i32* %stride.i800, align 4, !tbaa !50
  %min.i802 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %14, i32 3, i32 0
  %20 = load i32, i32* %min.i802, align 4, !tbaa !47
  %extent.i804 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %14, i32 3, i32 1
  %21 = load i32, i32* %extent.i804, align 4, !tbaa !49
  %stride.i806 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %14, i32 3, i32 2
  %22 = load i32, i32* %stride.i806, align 4, !tbaa !50
  %host.i807 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %output.buffer, i32 0, i32 2
  %23 = load i8*, i8** %host.i807, align 4, !tbaa !43
  %dim.i808 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %output.buffer, i32 0, i32 6
  %24 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i808, align 8, !tbaa !46
  %min.i815 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %24, i32 1, i32 0
  %25 = load i32, i32* %min.i815, align 4, !tbaa !47
  %extent.i817 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %24, i32 1, i32 1
  %26 = load i32, i32* %extent.i817, align 4, !tbaa !49
  %stride.i819 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %24, i32 1, i32 2
  %27 = load i32, i32* %stride.i819, align 4, !tbaa !50
  %min.i821 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %24, i32 2, i32 0
  %28 = load i32, i32* %min.i821, align 4, !tbaa !47
  %extent.i823 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %24, i32 2, i32 1
  %29 = load i32, i32* %extent.i823, align 4, !tbaa !49
  %stride.i825 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %24, i32 2, i32 2
  %30 = load i32, i32* %stride.i825, align 4, !tbaa !50
  %stride.i831 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %24, i32 3, i32 2
  %31 = load i32, i32* %stride.i831, align 4, !tbaa !50
  %32 = add nsw i32 %4, -1
  %a0 = ashr i32 %32, 5
  %33 = icmp sgt i32 %a0, -1
  %t1217 = select i1 %33, i32 %a0, i32 -1
  %34 = shl i32 %t1217, 7
  %35 = add i32 %34, 268
  %cmp7.i = icmp ugt i32 %35, 16384
  br i1 %cmp7.i, label %pseudostack_alloc.exit, label %then_bb

pseudostack_alloc.exit:                           ; preds = %if.end.i
  %call.i = tail call i8* @halide_malloc(i8* null, i32 %35) #14
  %.not = icmp eq i8* %call.i, null
  br i1 %.not, label %then_bb, label %"pseudostack_alloc.exit.produce bias_im_global_wrapper$0_crit_edge", !prof !95

"pseudostack_alloc.exit.produce bias_im_global_wrapper$0_crit_edge": ; preds = %pseudostack_alloc.exit
  %36 = bitcast i8* %call.i to i32*
  br label %"produce bias_im_global_wrapper$0"

then_bb:                                          ; preds = %if.end.i, %pseudostack_alloc.exit
  %37 = alloca i32, i32 %35, align 128
  %38 = bitcast i32* %37 to i8*
  br label %"produce bias_im_global_wrapper$0"

"produce bias_im_global_wrapper$0":               ; preds = %"pseudostack_alloc.exit.produce bias_im_global_wrapper$0_crit_edge", %then_bb
  %"bias_im_global_wrapper$0.pseudostack_slot.sroa.0.0" = phi i8* [ %call.i, %"pseudostack_alloc.exit.produce bias_im_global_wrapper$0_crit_edge" ], [ %38, %then_bb ]
  %"bias_im_global_wrapper$0" = phi i32* [ %36, %"pseudostack_alloc.exit.produce bias_im_global_wrapper$0_crit_edge" ], [ %37, %then_bb ]
  %39 = icmp sgt i32 %4, 0
  br i1 %39, label %"for bias_im_global_wrapper$0.s0._0.preheader.old", label %"end for bias_im_global_wrapper$0.s0._0", !prof !96

"for bias_im_global_wrapper$0.s0._0.preheader.old": ; preds = %"produce bias_im_global_wrapper$0"
  %40 = shl nuw i32 %4, 2
  %41 = ptrtoint i32* %1 to i32
  %42 = ptrtoint i8* %"bias_im_global_wrapper$0.pseudostack_slot.sroa.0.0" to i32
  %43 = bitcast i32* %1 to i8*
  %44 = icmp ult i8* %"bias_im_global_wrapper$0.pseudostack_slot.sroa.0.0", %43
  %45 = sub i32 %42, %41
  %46 = icmp sle i32 %40, %45
  %47 = or i1 %44, %46
  br i1 %47, label %"for bias_im_global_wrapper$0.s0._0.rtli", label %"for bias_im_global_wrapper$0.s0._0.preheader"

"for bias_im_global_wrapper$0.s0._0.preheader":   ; preds = %"for bias_im_global_wrapper$0.s0._0.preheader.old"
  %48 = add i32 %4, -1
  %xtraiter = and i32 %4, 7
  %49 = icmp ult i32 %48, 7
  br i1 %49, label %"end for bias_im_global_wrapper$0.s0._0.loopexit.unr-lcssa", label %"for bias_im_global_wrapper$0.s0._0.preheader.new"

"for bias_im_global_wrapper$0.s0._0.preheader.new": ; preds = %"for bias_im_global_wrapper$0.s0._0.preheader"
  %unroll_iter = and i32 %4, -8
  br label %"for bias_im_global_wrapper$0.s0._0"

"for bias_im_global_wrapper$0.s0._0.rtli":        ; preds = %"for bias_im_global_wrapper$0.s0._0.preheader.old"
  call void @llvm.memmove.p0i8.p0i8.i32(i8* nonnull align 4 %"bias_im_global_wrapper$0.pseudostack_slot.sroa.0.0", i8* align 4 %2, i32 %40, i1 false)
  br label %"end for bias_im_global_wrapper$0.s0._0"

"for bias_im_global_wrapper$0.s0._0":             ; preds = %"for bias_im_global_wrapper$0.s0._0", %"for bias_im_global_wrapper$0.s0._0.preheader.new"
  %"bias_im_global_wrapper$0.s0._0" = phi i32 [ 0, %"for bias_im_global_wrapper$0.s0._0.preheader.new" ], [ %81, %"for bias_im_global_wrapper$0.s0._0" ]
  %niter = phi i32 [ %unroll_iter, %"for bias_im_global_wrapper$0.s0._0.preheader.new" ], [ %niter.nsub.7, %"for bias_im_global_wrapper$0.s0._0" ]
  %50 = getelementptr inbounds i32, i32* %1, i32 %"bias_im_global_wrapper$0.s0._0"
  %51 = load i32, i32* %50, align 4, !tbaa !97
  %52 = getelementptr inbounds i32, i32* %"bias_im_global_wrapper$0", i32 %"bias_im_global_wrapper$0.s0._0"
  store i32 %51, i32* %52, align 4, !tbaa !100
  %53 = or i32 %"bias_im_global_wrapper$0.s0._0", 1
  %54 = getelementptr inbounds i32, i32* %1, i32 %53
  %55 = load i32, i32* %54, align 4, !tbaa !97
  %56 = getelementptr inbounds i32, i32* %"bias_im_global_wrapper$0", i32 %53
  store i32 %55, i32* %56, align 4, !tbaa !100
  %57 = or i32 %"bias_im_global_wrapper$0.s0._0", 2
  %58 = getelementptr inbounds i32, i32* %1, i32 %57
  %59 = load i32, i32* %58, align 4, !tbaa !97
  %60 = getelementptr inbounds i32, i32* %"bias_im_global_wrapper$0", i32 %57
  store i32 %59, i32* %60, align 4, !tbaa !100
  %61 = or i32 %"bias_im_global_wrapper$0.s0._0", 3
  %62 = getelementptr inbounds i32, i32* %1, i32 %61
  %63 = load i32, i32* %62, align 4, !tbaa !97
  %64 = getelementptr inbounds i32, i32* %"bias_im_global_wrapper$0", i32 %61
  store i32 %63, i32* %64, align 4, !tbaa !100
  %65 = or i32 %"bias_im_global_wrapper$0.s0._0", 4
  %66 = getelementptr inbounds i32, i32* %1, i32 %65
  %67 = load i32, i32* %66, align 4, !tbaa !97
  %68 = getelementptr inbounds i32, i32* %"bias_im_global_wrapper$0", i32 %65
  store i32 %67, i32* %68, align 4, !tbaa !100
  %69 = or i32 %"bias_im_global_wrapper$0.s0._0", 5
  %70 = getelementptr inbounds i32, i32* %1, i32 %69
  %71 = load i32, i32* %70, align 4, !tbaa !97
  %72 = getelementptr inbounds i32, i32* %"bias_im_global_wrapper$0", i32 %69
  store i32 %71, i32* %72, align 4, !tbaa !100
  %73 = or i32 %"bias_im_global_wrapper$0.s0._0", 6
  %74 = getelementptr inbounds i32, i32* %1, i32 %73
  %75 = load i32, i32* %74, align 4, !tbaa !97
  %76 = getelementptr inbounds i32, i32* %"bias_im_global_wrapper$0", i32 %73
  store i32 %75, i32* %76, align 4, !tbaa !100
  %77 = or i32 %"bias_im_global_wrapper$0.s0._0", 7
  %78 = getelementptr inbounds i32, i32* %1, i32 %77
  %79 = load i32, i32* %78, align 4, !tbaa !97
  %80 = getelementptr inbounds i32, i32* %"bias_im_global_wrapper$0", i32 %77
  store i32 %79, i32* %80, align 4, !tbaa !100
  %81 = add nuw nsw i32 %"bias_im_global_wrapper$0.s0._0", 8
  %niter.nsub.7 = add i32 %niter, -8
  %niter.ncmp.7 = icmp eq i32 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %"end for bias_im_global_wrapper$0.s0._0.loopexit.unr-lcssa", label %"for bias_im_global_wrapper$0.s0._0"

"end for bias_im_global_wrapper$0.s0._0.loopexit.unr-lcssa": ; preds = %"for bias_im_global_wrapper$0.s0._0", %"for bias_im_global_wrapper$0.s0._0.preheader"
  %"bias_im_global_wrapper$0.s0._0.unr" = phi i32 [ 0, %"for bias_im_global_wrapper$0.s0._0.preheader" ], [ %81, %"for bias_im_global_wrapper$0.s0._0" ]
  %lcmp.mod.not = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod.not, label %"end for bias_im_global_wrapper$0.s0._0", label %"for bias_im_global_wrapper$0.s0._0.epil"

"for bias_im_global_wrapper$0.s0._0.epil":        ; preds = %"end for bias_im_global_wrapper$0.s0._0.loopexit.unr-lcssa", %"for bias_im_global_wrapper$0.s0._0.epil"
  %"bias_im_global_wrapper$0.s0._0.epil" = phi i32 [ %85, %"for bias_im_global_wrapper$0.s0._0.epil" ], [ %"bias_im_global_wrapper$0.s0._0.unr", %"end for bias_im_global_wrapper$0.s0._0.loopexit.unr-lcssa" ]
  %epil.iter = phi i32 [ %epil.iter.sub, %"for bias_im_global_wrapper$0.s0._0.epil" ], [ %xtraiter, %"end for bias_im_global_wrapper$0.s0._0.loopexit.unr-lcssa" ]
  %82 = getelementptr inbounds i32, i32* %1, i32 %"bias_im_global_wrapper$0.s0._0.epil"
  %83 = load i32, i32* %82, align 4, !tbaa !97
  %84 = getelementptr inbounds i32, i32* %"bias_im_global_wrapper$0", i32 %"bias_im_global_wrapper$0.s0._0.epil"
  store i32 %83, i32* %84, align 4, !tbaa !100
  %85 = add nuw nsw i32 %"bias_im_global_wrapper$0.s0._0.epil", 1
  %epil.iter.sub = add i32 %epil.iter, -1
  %epil.iter.cmp.not = icmp eq i32 %epil.iter.sub, 0
  br i1 %epil.iter.cmp.not, label %"end for bias_im_global_wrapper$0.s0._0", label %"for bias_im_global_wrapper$0.s0._0.epil", !llvm.loop !102

"end for bias_im_global_wrapper$0.s0._0":         ; preds = %"end for bias_im_global_wrapper$0.s0._0.loopexit.unr-lcssa", %"for bias_im_global_wrapper$0.s0._0.epil", %"for bias_im_global_wrapper$0.s0._0.rtli", %"produce bias_im_global_wrapper$0"
  %86 = icmp sgt i32 %26, 5
  %87 = and i32 %4, 127
  %88 = icmp eq i32 %87, 0
  %89 = and i1 %88, %86
  %90 = or i32 %32, 127
  %91 = icmp sgt i32 %26, 7
  %92 = and i32 %4, 63
  %93 = icmp eq i32 %92, 0
  %94 = and i1 %93, %91
  %95 = or i32 %32, 63
  %96 = and i32 %4, 31
  %97 = icmp eq i32 %96, 0
  %98 = and i1 %97, %91
  %99 = or i32 %32, 31
  %100 = icmp sgt i32 %26, 0
  %101 = and i1 %88, %100
  %102 = icmp slt i32 %4, 32
  %103 = select i1 %102, i32 %4, i32 32
  %104 = add nsw i32 %103, -1
  %a3 = ashr i32 %104, 5
  %105 = icmp slt i32 %a0, 3
  %106 = select i1 %105, i32 %a0, i32 3
  %107 = and i32 %a3, -4
  %b5 = add nsw i32 %107, %106
  %108 = icmp slt i32 %a3, %b5
  %109 = select i1 %108, i32 %a3, i32 %b5
  %110 = add nsw i32 %109, %a0
  %111 = shl nsw i32 %110, 5
  %112 = or i32 %111, 31
  %113 = select i1 %101, i32 %90, i32 %112
  %114 = select i1 %98, i32 %99, i32 %113
  %115 = select i1 %94, i32 %95, i32 %114
  %a2 = select i1 %89, i32 %90, i32 %115
  %116 = icmp sgt i32 %a2, %99
  %a9 = select i1 %116, i32 %a2, i32 %99
  %117 = icmp sgt i32 %a9, -1
  %t1218 = select i1 %117, i32 %a9, i32 -1
  %118 = shl i32 %t1218, 2
  %119 = add i32 %118, 144
  %120 = call i8* @halide_malloc(i8* null, i32 %119)
  %offset_c = bitcast i8* %120 to i32*
  %121 = add nsw i32 %4, 31
  %122 = ashr i32 %121, 5
  br i1 %39, label %"for offset_c.s0.c.c.preheader", label %"consume bias_im_global_wrapper$0.thread", !prof !96

"for offset_c.s0.c.c.preheader":                  ; preds = %"end for bias_im_global_wrapper$0.s0._0"
  %123 = shl nuw i32 %122, 7
  call void @llvm.memset.p0i8.i32(i8* align 128 %120, i8 0, i32 %123, i1 false)
  %.not675 = icmp eq i8 %input_zero, 0
  br i1 %.not675, label %"for offset_c.s2.c.c.preheader", label %"for offset_c.s1.c.co.preheader"

"for offset_c.s1.c.co.preheader":                 ; preds = %"for offset_c.s0.c.c.preheader"
  %124 = icmp sgt i32 %11, 0
  %125 = select i1 %124, i32 %11, i32 0
  %126 = icmp sgt i32 %7, 0
  %127 = insertelement <128 x i8> undef, i8 %input_zero, i32 0
  %128 = shufflevector <128 x i8> %127, <128 x i8> undef, <128 x i32> zeroinitializer
  %129 = icmp sgt i32 %9, 0
  %or.cond = and i1 %124, %129
  %130 = and i1 %or.cond, %126
  br i1 %130, label %"for offset_c.s1.c.co.us.us.us", label %"for offset_c.s2.c.c.preheader", !prof !103

"for offset_c.s1.c.co.us.us.us":                  ; preds = %"for offset_c.s1.c.co.preheader", %"end for offset_c.s1.r19$y.loopexit.split.us.split.us.us.us.us"
  %offset_c.s1.c.co.us.us.us = phi i32 [ %148, %"end for offset_c.s1.r19$y.loopexit.split.us.split.us.us.us.us" ], [ 0, %"for offset_c.s1.c.co.preheader" ]
  %131 = mul nsw i32 %offset_c.s1.c.co.us.us.us, %8
  %132 = shl nsw i32 %offset_c.s1.c.co.us.us.us, 5
  %133 = getelementptr inbounds i32, i32* %offset_c, i32 %132
  %134 = bitcast i32* %133 to <32 x i32>*
  %.pre.pre.pre = load <32 x i32>, <32 x i32>* %134, align 128, !tbaa !104
  br label %"for offset_c.s1.r19$y.us.us.us.us.us"

"for offset_c.s1.r19$y.us.us.us.us.us":           ; preds = %"end for offset_c.s1.r19$x.loopexit.split.us.us.us.us.us.us", %"for offset_c.s1.c.co.us.us.us"
  %.pre.pre = phi <32 x i32> [ %144, %"end for offset_c.s1.r19$x.loopexit.split.us.us.us.us.us.us" ], [ %.pre.pre.pre, %"for offset_c.s1.c.co.us.us.us" ]
  %"offset_c.s1.r19$y.us.us.us.us.us" = phi i32 [ %147, %"end for offset_c.s1.r19$x.loopexit.split.us.us.us.us.us.us" ], [ 0, %"for offset_c.s1.c.co.us.us.us" ]
  %135 = mul nsw i32 %"offset_c.s1.r19$y.us.us.us.us.us", %12
  %t838.us.us.us.us.us = add nsw i32 %135, %131
  br label %"for offset_c.s1.r19$x.us.us.us.us.us.us"

"for offset_c.s1.r19$x.us.us.us.us.us.us":        ; preds = %"end for offset_c.s1.r19$z.r124.loopexit.us.us.us.us.us.us", %"for offset_c.s1.r19$y.us.us.us.us.us"
  %.pre = phi <32 x i32> [ %144, %"end for offset_c.s1.r19$z.r124.loopexit.us.us.us.us.us.us" ], [ %.pre.pre, %"for offset_c.s1.r19$y.us.us.us.us.us" ]
  %"offset_c.s1.r19$x.us.us.us.us.us.us" = phi i32 [ %146, %"end for offset_c.s1.r19$z.r124.loopexit.us.us.us.us.us.us" ], [ 0, %"for offset_c.s1.r19$y.us.us.us.us.us" ]
  %136 = mul nsw i32 %"offset_c.s1.r19$x.us.us.us.us.us.us", %10
  %137 = add nsw i32 %t838.us.us.us.us.us, %136
  br label %"for offset_c.s1.r19$z.r124.us.us.us.us.us.us"

"for offset_c.s1.r19$z.r124.us.us.us.us.us.us":   ; preds = %"for offset_c.s1.r19$z.r124.us.us.us.us.us.us", %"for offset_c.s1.r19$x.us.us.us.us.us.us"
  %138 = phi <32 x i32> [ %144, %"for offset_c.s1.r19$z.r124.us.us.us.us.us.us" ], [ %.pre, %"for offset_c.s1.r19$x.us.us.us.us.us.us" ]
  %"offset_c.s1.r19$z.r124.us.us.us.us.us.us" = phi i32 [ %145, %"for offset_c.s1.r19$z.r124.us.us.us.us.us.us" ], [ 0, %"for offset_c.s1.r19$x.us.us.us.us.us.us" ]
  %139 = shl nsw i32 %"offset_c.s1.r19$z.r124.us.us.us.us.us.us", 7
  %140 = add nsw i32 %137, %139
  %141 = getelementptr inbounds i8, i8* %5, i32 %140
  %142 = bitcast i8* %141 to <128 x i8>*
  %143 = load <128 x i8>, <128 x i8>* %142, align 128, !tbaa !106
  %144 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl(<32 x i32> %138, <128 x i8> %128, <128 x i8> %143, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  store <32 x i32> %144, <32 x i32>* %134, align 128, !tbaa !104
  %145 = add nuw nsw i32 %"offset_c.s1.r19$z.r124.us.us.us.us.us.us", 1
  %.not746.us.us.us.us.us.us = icmp eq i32 %145, %7
  br i1 %.not746.us.us.us.us.us.us, label %"end for offset_c.s1.r19$z.r124.loopexit.us.us.us.us.us.us", label %"for offset_c.s1.r19$z.r124.us.us.us.us.us.us"

"end for offset_c.s1.r19$z.r124.loopexit.us.us.us.us.us.us": ; preds = %"for offset_c.s1.r19$z.r124.us.us.us.us.us.us"
  %146 = add nuw nsw i32 %"offset_c.s1.r19$x.us.us.us.us.us.us", 1
  %.not745.us.us.us.us.us.us = icmp eq i32 %146, %9
  br i1 %.not745.us.us.us.us.us.us, label %"end for offset_c.s1.r19$x.loopexit.split.us.us.us.us.us.us", label %"for offset_c.s1.r19$x.us.us.us.us.us.us"

"end for offset_c.s1.r19$x.loopexit.split.us.us.us.us.us.us": ; preds = %"end for offset_c.s1.r19$z.r124.loopexit.us.us.us.us.us.us"
  %147 = add nuw nsw i32 %"offset_c.s1.r19$y.us.us.us.us.us", 1
  %.not744.us.us.us.us.us = icmp eq i32 %147, %125
  br i1 %.not744.us.us.us.us.us, label %"end for offset_c.s1.r19$y.loopexit.split.us.split.us.us.us.us", label %"for offset_c.s1.r19$y.us.us.us.us.us"

"end for offset_c.s1.r19$y.loopexit.split.us.split.us.us.us.us": ; preds = %"end for offset_c.s1.r19$x.loopexit.split.us.us.us.us.us.us"
  %148 = add nuw nsw i32 %offset_c.s1.c.co.us.us.us, 1
  %.not743.us.us.us = icmp eq i32 %148, %122
  br i1 %.not743.us.us.us, label %"for offset_c.s2.c.c.preheader", label %"for offset_c.s1.c.co.us.us.us"

"consume bias_im_global_wrapper$0.thread":        ; preds = %"end for bias_im_global_wrapper$0.s0._0"
  %149 = zext i8 %filter_zero to i32
  br label %"consume offset_c"

"for offset_c.s2.c.c.preheader":                  ; preds = %"end for offset_c.s1.r19$y.loopexit.split.us.split.us.us.us.us", %"for offset_c.s1.c.co.preheader", %"for offset_c.s0.c.c.preheader"
  %150 = zext i8 %filter_zero to i32
  %151 = zext i8 %input_zero to i32
  %152 = shl nuw nsw i32 %151, 2
  %153 = mul nuw nsw i32 %152, %150
  %154 = mul i32 %153, %7
  %t841.s = mul i32 %154, %9
  %155 = mul i32 %t841.s, %11
  %156 = insertelement <1 x i32> poison, i32 %155, i32 0
  br label %"for offset_c.s2.c.c"

"for offset_c.s2.c.c":                            ; preds = %"for offset_c.s2.c.c.preheader", %"for offset_c.s2.c.c"
  %offset_c.s2.c.c = phi i32 [ %167, %"for offset_c.s2.c.c" ], [ 0, %"for offset_c.s2.c.c.preheader" ]
  %157 = shl nsw i32 %offset_c.s2.c.c, 5
  %158 = getelementptr inbounds i32, i32* %"bias_im_global_wrapper$0", i32 %157
  %159 = bitcast i32* %158 to <32 x i32>*
  %160 = load <32 x i32>, <32 x i32>* %159, align 128, !tbaa !100
  %161 = getelementptr inbounds i32, i32* %offset_c, i32 %157
  %162 = bitcast i32* %161 to <32 x i32>*
  %163 = load <32 x i32>, <32 x i32>* %162, align 128, !tbaa !104
  %164 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %156, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %165 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %163, <32 x i32> %160, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %166 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %164, <32 x i32> %165, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  store <32 x i32> %166, <32 x i32>* %162, align 128, !tbaa !104
  %167 = add nuw nsw i32 %offset_c.s2.c.c, 1
  %.not742 = icmp eq i32 %167, %122
  br i1 %.not742, label %"consume offset_c", label %"for offset_c.s2.c.c"

"consume offset_c":                               ; preds = %"for offset_c.s2.c.c", %"consume bias_im_global_wrapper$0.thread"
  %168 = phi i32 [ %149, %"consume bias_im_global_wrapper$0.thread" ], [ %150, %"for offset_c.s2.c.c" ]
  %169 = icmp eq i32 %stride_x, 1
  %170 = icmp eq i32 %7, 1
  %171 = and i1 %169, %170
  %172 = icmp eq i32 %15, 4
  %173 = icmp eq i32 %17, 4
  %174 = and i1 %172, %173
  %t844 = and i1 %171, %174
  %t843.not = icmp eq i8 %filter_zero, 0
  br i1 %89, label %then_bb4, label %next_bb5

after_bb3:                                        ; preds = %"end for output.s0.y.rebased528", %"end for output.s0.y.rebased467.loopexit.us", %"end for output.s0.y.rebased390.loopexit.us", %"end for output.s0.y.rebased97.loopexit.us", %"end for output.s0.y.rebased.loopexit.us", %"for output.s0.b.rebased463.preheader", %"for output.s0.b.rebased386.preheader", %"for output.s0.b.rebased93.preheader", %"for output.s0.b.rebased.preheader", %next_bb462, %then_bb461, %then_bb384, %then_bb91, %then_bb4
  %tobool.not.i.not = icmp eq i8* %120, null
  br i1 %tobool.not.i.not, label %land.lhs.true.i847, label %if.then.i832

if.then.i832:                                     ; preds = %after_bb3
  call void @halide_free(i8* null, i8* nonnull %120) #14
  br label %land.lhs.true.i847

land.lhs.true.i847:                               ; preds = %after_bb3, %if.then.i832
  br i1 %cmp7.i, label %if.then.i848, label %call_destructor.exit843

if.then.i848:                                     ; preds = %land.lhs.true.i847
  call void @halide_free(i8* null, i8* nonnull %"bias_im_global_wrapper$0.pseudostack_slot.sroa.0.0") #14
  br label %call_destructor.exit843

call_destructor.exit843:                          ; preds = %if.then.i848, %land.lhs.true.i847
  call void @halide_qurt_hvx_unlock_as_destructor(i8* null, i8* nonnull inttoptr (i32 1 to i8*)) #14
  ret i32 0

then_bb4:                                         ; preds = %"consume offset_c"
  %175 = mul nsw i32 %19, %18
  %176 = mul nsw i32 %22, %20
  %177 = mul nsw i32 %17, %16
  %178 = add i32 %176, %175
  %t852 = add i32 %178, %177
  %179 = icmp sgt i32 %21, 0
  br i1 %179, label %"for output.s0.b.rebased.preheader", label %after_bb3, !prof !96

"for output.s0.b.rebased.preheader":              ; preds = %then_bb4
  %180 = mul nsw i32 %17, %stride_x
  %181 = mul nsw i32 %180, 5
  %182 = shl nsw i32 %180, 2
  %183 = mul nsw i32 %180, 3
  %184 = shl nsw i32 %180, 1
  %185 = sub nsw i32 %stride_x, %16
  %186 = mul nsw i32 %185, %17
  %187 = icmp sgt i32 %29, 0
  %.neg1157 = mul i32 %30, %28
  %.neg1158 = mul i32 %27, %25
  %.neg1159 = mul i32 %31, %20
  %reass.add1161 = add i32 %.neg1157, %.neg1158
  %reass.add1162 = add i32 %reass.add1161, %.neg1159
  %188 = add nuw nsw i32 %26, 5
  %189 = ashr i32 %188, 31
  %190 = xor i32 %189, %188
  %191 = zext i32 %190 to i64
  %192 = mul nuw i64 %191, 2863311531
  %193 = lshr i64 %192, 34
  %194 = trunc i64 %193 to i32
  %195 = xor i32 %189, %194
  %196 = icmp sgt i32 %195, 0
  %b14 = add nsw i32 %26, -6
  %197 = icmp sgt i32 %11, 0
  %198 = icmp sgt i32 %9, 0
  %199 = icmp sgt i32 %7, 0
  %200 = ashr i32 %4, 7
  %201 = icmp sgt i32 %4, 127
  %202 = icmp sgt i32 %output_shift, 0
  %203 = select i1 %202, <32 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, <32 x i32> zeroinitializer
  %204 = add nsw i32 %output_shift, -1
  %205 = zext i8 %output_zero to i16
  %206 = insertelement <128 x i16> undef, i16 %205, i32 0
  %207 = shufflevector <128 x i16> %206, <128 x i16> undef, <128 x i32> zeroinitializer
  %208 = insertelement <128 x i8> undef, i8 %output_max, i32 0
  %209 = shufflevector <128 x i8> %208, <128 x i8> undef, <128 x i32> zeroinitializer
  %210 = insertelement <128 x i8> undef, i8 %output_min, i32 0
  %211 = shufflevector <128 x i8> %210, <128 x i8> undef, <128 x i32> zeroinitializer
  %212 = insertelement <1 x i32> poison, i32 %output_multiplier, i32 0
  %213 = insertelement <1 x i32> poison, i32 %output_shift, i32 0
  %214 = insertelement <1 x i32> poison, i32 %204, i32 0
  br i1 %187, label %"for output.s0.b.rebased.us.preheader", label %after_bb3, !prof !96

"for output.s0.b.rebased.us.preheader":           ; preds = %"for output.s0.b.rebased.preheader"
  %215 = add i32 %177, %175
  %216 = add i32 %9, -1
  %brmerge1666.demorgan = and i1 %198, %199
  %xtraiter1871 = and i32 %7, 1
  %217 = icmp eq i32 %7, 1
  %unroll_iter1873 = and i32 %7, -2
  %lcmp.mod1872.not = icmp eq i32 %xtraiter1871, 0
  %xtraiter1875 = and i32 %9, 3
  %218 = icmp ult i32 %216, 3
  %unroll_iter1879 = and i32 %9, -4
  %lcmp.mod1877.not = icmp eq i32 %xtraiter1875, 0
  br label %"for output.s0.b.rebased.us"

"for output.s0.b.rebased.us":                     ; preds = %"for output.s0.b.rebased.us.preheader", %"end for output.s0.y.rebased.loopexit.us"
  %sum_input674.sroa.0.0.us = phi <6 x i32> [ %.us-phi1479.us, %"end for output.s0.y.rebased.loopexit.us" ], [ undef, %"for output.s0.b.rebased.us.preheader" ]
  %output.s0.b.rebased.us = phi i32 [ %225, %"end for output.s0.y.rebased.loopexit.us" ], [ 0, %"for output.s0.b.rebased.us.preheader" ]
  %219 = add nsw i32 %output.s0.b.rebased.us, %20
  %220 = mul nsw i32 %219, %31
  %221 = sub i32 %220, %reass.add1162
  %222 = mul nsw i32 %219, %22
  %223 = sub i32 %222, %178
  %224 = sub nsw i32 %222, %t852
  br i1 %196, label %"for output.s0.y.rebased.us.us", label %"end for output.s0.y.rebased.loopexit.us", !prof !96

"end for output.s0.y.rebased.loopexit.us":        ; preds = %"end for output.s0.x.xo.loopexit.us.us", %"for output.s0.b.rebased.us"
  %.us-phi1479.us = phi <6 x i32> [ %sum_input674.sroa.0.0.us, %"for output.s0.b.rebased.us" ], [ %sum_input674.sroa.0.13.us.us, %"end for output.s0.x.xo.loopexit.us.us" ]
  %225 = add nuw nsw i32 %output.s0.b.rebased.us, 1
  %.not730.us = icmp eq i32 %225, %21
  br i1 %.not730.us, label %after_bb3, label %"for output.s0.b.rebased.us"

"for output.s0.y.rebased.us.us":                  ; preds = %"for output.s0.b.rebased.us", %"end for output.s0.x.xo.loopexit.us.us"
  %sum_input674.sroa.0.1.us.us = phi <6 x i32> [ %sum_input674.sroa.0.13.us.us, %"end for output.s0.x.xo.loopexit.us.us" ], [ %sum_input674.sroa.0.0.us, %"for output.s0.b.rebased.us" ]
  %output.s0.y.rebased.us.us = phi i32 [ %1398, %"end for output.s0.x.xo.loopexit.us.us" ], [ 0, %"for output.s0.b.rebased.us" ]
  %226 = add nsw i32 %output.s0.y.rebased.us.us, %28
  %227 = mul nsw i32 %226, %30
  %t877.us.us = add i32 %221, %227
  %228 = mul nsw i32 %226, %stride_y
  br label %"for output.s0.x.xo.us.us"

"for output.s0.x.xo.us.us":                       ; preds = %"end for output.s0.c.co.us.us", %"for output.s0.y.rebased.us.us"
  %sum_input674.sroa.0.3.us.us = phi <6 x i32> [ %sum_input674.sroa.0.13.us.us, %"end for output.s0.c.co.us.us" ], [ %sum_input674.sroa.0.1.us.us, %"for output.s0.y.rebased.us.us" ]
  %output.s0.x.xo.us.us = phi i32 [ %1343, %"end for output.s0.c.co.us.us" ], [ 0, %"for output.s0.y.rebased.us.us" ]
  %a12.us.us = mul nsw i32 %output.s0.x.xo.us.us, 6
  %229 = icmp slt i32 %a12.us.us, %b14
  %output.s0.x.x.base.s.us.us = select i1 %229, i32 %a12.us.us, i32 %b14
  br i1 %t843.not, label %"consume sum_input.us.us", label %then_bb7.us.us

then_bb7.us.us:                                   ; preds = %"for output.s0.x.xo.us.us"
  br i1 %t844, label %then_bb10.us.us, label %next_bb11.us.us

next_bb11.us.us:                                  ; preds = %then_bb7.us.us
  br i1 %197, label %"for sum_input.s1.r19$y12.preheader.us.us", label %"consume sum_input.us.us", !prof !96

then_bb10.us.us:                                  ; preds = %then_bb7.us.us
  br i1 %197, label %"for sum_input.s1.r19$y.preheader.us.us", label %"consume sum_input.us.us", !prof !96

"for sum_input.s1.r19$y.us.us":                   ; preds = %"for sum_input.s1.r19$y.preheader.us.us", %"end for sum_input.s1.r19$x.us.us"
  %sum_input674.sroa.0.5.us.us = phi <6 x i32> [ %sum_input674.sroa.0.7.us.us, %"end for sum_input.s1.r19$x.us.us" ], [ zeroinitializer, %"for sum_input.s1.r19$y.preheader.us.us" ]
  %"sum_input.s1.r19$y.us.us" = phi i32 [ %340, %"end for sum_input.s1.r19$x.us.us" ], [ 0, %"for sum_input.s1.r19$y.preheader.us.us" ]
  br i1 %198, label %"for sum_input.s1.r19$x.preheader.us.us", label %"end for sum_input.s1.r19$x.us.us", !prof !96

"for sum_input.s1.r19$x.us.us":                   ; preds = %"for sum_input.s1.r19$x.preheader.us.us", %"for sum_input.s1.r19$x.us.us"
  %sum_input674.sroa.0.6.us.us = phi <6 x i32> [ %316, %"for sum_input.s1.r19$x.us.us" ], [ %sum_input674.sroa.0.5.us.us, %"for sum_input.s1.r19$x.preheader.us.us" ]
  %"sum_input.s1.r19$x.us.us" = phi i32 [ %317, %"for sum_input.s1.r19$x.us.us" ], [ 0, %"for sum_input.s1.r19$x.preheader.us.us" ]
  %niter1880 = phi i32 [ %niter1880.nsub.3, %"for sum_input.s1.r19$x.us.us" ], [ %unroll_iter1879, %"for sum_input.s1.r19$x.preheader.us.us" ]
  %230 = mul nsw i32 %"sum_input.s1.r19$x.us.us", %dilation_x
  %reass.add1167.us.us = add i32 %1395, %230
  %reass.mul1168.us.us = shl i32 %reass.add1167.us.us, 2
  %231 = add i32 %t880.us.us, %reass.mul1168.us.us
  %232 = getelementptr inbounds i8, i8* %13, i32 %231
  %233 = bitcast i8* %232 to <24 x i8>*
  %234 = load <24 x i8>, <24 x i8>* %233, align 4, !tbaa !108
  %t1220.us.us = zext <24 x i8> %234 to <24 x i16>
  %235 = shufflevector <24 x i16> %t1220.us.us, <24 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %236 = bitcast <64 x i16> %235 to <32 x i32>
  %237 = call <32 x i32> @llvm.hexagon.V6.vpackeh.128B(<32 x i32> undef, <32 x i32> %236)
  %238 = bitcast <32 x i32> %237 to <64 x i16>
  %239 = call <32 x i32> @llvm.hexagon.V6.vpackoh.128B(<32 x i32> undef, <32 x i32> %236)
  %240 = bitcast <32 x i32> %239 to <64 x i16>
  %241 = add <64 x i16> %240, %238
  %242 = shufflevector <64 x i16> %241, <64 x i16> undef, <12 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11>
  %t1219.us.us = zext <12 x i16> %242 to <12 x i32>
  %243 = shufflevector <12 x i32> %t1219.us.us, <12 x i32> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %244 = call <64 x i32> @llvm.hexagon.V6.vdealvdd.128B(<32 x i32> undef, <32 x i32> %243, i32 -4)
  %245 = call <32 x i32> @llvm.hexagon.V6.lo.128B(<64 x i32> %244)
  %246 = shufflevector <32 x i32> %245, <32 x i32> undef, <6 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5>
  %247 = add nsw <6 x i32> %246, %sum_input674.sroa.0.6.us.us
  %248 = call <32 x i32> @llvm.hexagon.V6.hi.128B(<64 x i32> %244)
  %249 = shufflevector <32 x i32> %248, <32 x i32> undef, <6 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5>
  %250 = add nsw <6 x i32> %247, %249
  %251 = or i32 %"sum_input.s1.r19$x.us.us", 1
  %252 = mul nsw i32 %251, %dilation_x
  %reass.add1167.us.us.1 = add i32 %1395, %252
  %reass.mul1168.us.us.1 = shl i32 %reass.add1167.us.us.1, 2
  %253 = add i32 %t880.us.us, %reass.mul1168.us.us.1
  %254 = getelementptr inbounds i8, i8* %13, i32 %253
  %255 = bitcast i8* %254 to <24 x i8>*
  %256 = load <24 x i8>, <24 x i8>* %255, align 4, !tbaa !108
  %t1220.us.us.1 = zext <24 x i8> %256 to <24 x i16>
  %257 = shufflevector <24 x i16> %t1220.us.us.1, <24 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %258 = bitcast <64 x i16> %257 to <32 x i32>
  %259 = call <32 x i32> @llvm.hexagon.V6.vpackeh.128B(<32 x i32> undef, <32 x i32> %258)
  %260 = bitcast <32 x i32> %259 to <64 x i16>
  %261 = call <32 x i32> @llvm.hexagon.V6.vpackoh.128B(<32 x i32> undef, <32 x i32> %258)
  %262 = bitcast <32 x i32> %261 to <64 x i16>
  %263 = add <64 x i16> %262, %260
  %264 = shufflevector <64 x i16> %263, <64 x i16> undef, <12 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11>
  %t1219.us.us.1 = zext <12 x i16> %264 to <12 x i32>
  %265 = shufflevector <12 x i32> %t1219.us.us.1, <12 x i32> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %266 = call <64 x i32> @llvm.hexagon.V6.vdealvdd.128B(<32 x i32> undef, <32 x i32> %265, i32 -4)
  %267 = call <32 x i32> @llvm.hexagon.V6.lo.128B(<64 x i32> %266)
  %268 = shufflevector <32 x i32> %267, <32 x i32> undef, <6 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5>
  %269 = add nsw <6 x i32> %268, %250
  %270 = call <32 x i32> @llvm.hexagon.V6.hi.128B(<64 x i32> %266)
  %271 = shufflevector <32 x i32> %270, <32 x i32> undef, <6 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5>
  %272 = add nsw <6 x i32> %269, %271
  %273 = or i32 %"sum_input.s1.r19$x.us.us", 2
  %274 = mul nsw i32 %273, %dilation_x
  %reass.add1167.us.us.2 = add i32 %1395, %274
  %reass.mul1168.us.us.2 = shl i32 %reass.add1167.us.us.2, 2
  %275 = add i32 %t880.us.us, %reass.mul1168.us.us.2
  %276 = getelementptr inbounds i8, i8* %13, i32 %275
  %277 = bitcast i8* %276 to <24 x i8>*
  %278 = load <24 x i8>, <24 x i8>* %277, align 4, !tbaa !108
  %t1220.us.us.2 = zext <24 x i8> %278 to <24 x i16>
  %279 = shufflevector <24 x i16> %t1220.us.us.2, <24 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %280 = bitcast <64 x i16> %279 to <32 x i32>
  %281 = call <32 x i32> @llvm.hexagon.V6.vpackeh.128B(<32 x i32> undef, <32 x i32> %280)
  %282 = bitcast <32 x i32> %281 to <64 x i16>
  %283 = call <32 x i32> @llvm.hexagon.V6.vpackoh.128B(<32 x i32> undef, <32 x i32> %280)
  %284 = bitcast <32 x i32> %283 to <64 x i16>
  %285 = add <64 x i16> %284, %282
  %286 = shufflevector <64 x i16> %285, <64 x i16> undef, <12 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11>
  %t1219.us.us.2 = zext <12 x i16> %286 to <12 x i32>
  %287 = shufflevector <12 x i32> %t1219.us.us.2, <12 x i32> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %288 = call <64 x i32> @llvm.hexagon.V6.vdealvdd.128B(<32 x i32> undef, <32 x i32> %287, i32 -4)
  %289 = call <32 x i32> @llvm.hexagon.V6.lo.128B(<64 x i32> %288)
  %290 = shufflevector <32 x i32> %289, <32 x i32> undef, <6 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5>
  %291 = add nsw <6 x i32> %290, %272
  %292 = call <32 x i32> @llvm.hexagon.V6.hi.128B(<64 x i32> %288)
  %293 = shufflevector <32 x i32> %292, <32 x i32> undef, <6 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5>
  %294 = add nsw <6 x i32> %291, %293
  %295 = or i32 %"sum_input.s1.r19$x.us.us", 3
  %296 = mul nsw i32 %295, %dilation_x
  %reass.add1167.us.us.3 = add i32 %1395, %296
  %reass.mul1168.us.us.3 = shl i32 %reass.add1167.us.us.3, 2
  %297 = add i32 %t880.us.us, %reass.mul1168.us.us.3
  %298 = getelementptr inbounds i8, i8* %13, i32 %297
  %299 = bitcast i8* %298 to <24 x i8>*
  %300 = load <24 x i8>, <24 x i8>* %299, align 4, !tbaa !108
  %t1220.us.us.3 = zext <24 x i8> %300 to <24 x i16>
  %301 = shufflevector <24 x i16> %t1220.us.us.3, <24 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %302 = bitcast <64 x i16> %301 to <32 x i32>
  %303 = call <32 x i32> @llvm.hexagon.V6.vpackeh.128B(<32 x i32> undef, <32 x i32> %302)
  %304 = bitcast <32 x i32> %303 to <64 x i16>
  %305 = call <32 x i32> @llvm.hexagon.V6.vpackoh.128B(<32 x i32> undef, <32 x i32> %302)
  %306 = bitcast <32 x i32> %305 to <64 x i16>
  %307 = add <64 x i16> %306, %304
  %308 = shufflevector <64 x i16> %307, <64 x i16> undef, <12 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11>
  %t1219.us.us.3 = zext <12 x i16> %308 to <12 x i32>
  %309 = shufflevector <12 x i32> %t1219.us.us.3, <12 x i32> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %310 = call <64 x i32> @llvm.hexagon.V6.vdealvdd.128B(<32 x i32> undef, <32 x i32> %309, i32 -4)
  %311 = call <32 x i32> @llvm.hexagon.V6.lo.128B(<64 x i32> %310)
  %312 = shufflevector <32 x i32> %311, <32 x i32> undef, <6 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5>
  %313 = add nsw <6 x i32> %312, %294
  %314 = call <32 x i32> @llvm.hexagon.V6.hi.128B(<64 x i32> %310)
  %315 = shufflevector <32 x i32> %314, <32 x i32> undef, <6 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5>
  %316 = add nsw <6 x i32> %313, %315
  %317 = add nuw nsw i32 %"sum_input.s1.r19$x.us.us", 4
  %niter1880.nsub.3 = add i32 %niter1880, -4
  %niter1880.ncmp.3 = icmp eq i32 %niter1880.nsub.3, 0
  br i1 %niter1880.ncmp.3, label %"end for sum_input.s1.r19$x.us.us.loopexit.unr-lcssa", label %"for sum_input.s1.r19$x.us.us"

"end for sum_input.s1.r19$x.us.us.loopexit.unr-lcssa": ; preds = %"for sum_input.s1.r19$x.us.us", %"for sum_input.s1.r19$x.preheader.us.us"
  %.lcssa1756.ph = phi <6 x i32> [ undef, %"for sum_input.s1.r19$x.preheader.us.us" ], [ %316, %"for sum_input.s1.r19$x.us.us" ]
  %sum_input674.sroa.0.6.us.us.unr = phi <6 x i32> [ %sum_input674.sroa.0.5.us.us, %"for sum_input.s1.r19$x.preheader.us.us" ], [ %316, %"for sum_input.s1.r19$x.us.us" ]
  %"sum_input.s1.r19$x.us.us.unr" = phi i32 [ 0, %"for sum_input.s1.r19$x.preheader.us.us" ], [ %317, %"for sum_input.s1.r19$x.us.us" ]
  br i1 %lcmp.mod1877.not, label %"end for sum_input.s1.r19$x.us.us", label %"for sum_input.s1.r19$x.us.us.epil"

"for sum_input.s1.r19$x.us.us.epil":              ; preds = %"end for sum_input.s1.r19$x.us.us.loopexit.unr-lcssa", %"for sum_input.s1.r19$x.us.us.epil"
  %sum_input674.sroa.0.6.us.us.epil = phi <6 x i32> [ %338, %"for sum_input.s1.r19$x.us.us.epil" ], [ %sum_input674.sroa.0.6.us.us.unr, %"end for sum_input.s1.r19$x.us.us.loopexit.unr-lcssa" ]
  %"sum_input.s1.r19$x.us.us.epil" = phi i32 [ %339, %"for sum_input.s1.r19$x.us.us.epil" ], [ %"sum_input.s1.r19$x.us.us.unr", %"end for sum_input.s1.r19$x.us.us.loopexit.unr-lcssa" ]
  %epil.iter1876 = phi i32 [ %epil.iter1876.sub, %"for sum_input.s1.r19$x.us.us.epil" ], [ %xtraiter1875, %"end for sum_input.s1.r19$x.us.us.loopexit.unr-lcssa" ]
  %318 = mul nsw i32 %"sum_input.s1.r19$x.us.us.epil", %dilation_x
  %reass.add1167.us.us.epil = add i32 %1395, %318
  %reass.mul1168.us.us.epil = shl i32 %reass.add1167.us.us.epil, 2
  %319 = add i32 %t880.us.us, %reass.mul1168.us.us.epil
  %320 = getelementptr inbounds i8, i8* %13, i32 %319
  %321 = bitcast i8* %320 to <24 x i8>*
  %322 = load <24 x i8>, <24 x i8>* %321, align 4, !tbaa !108
  %t1220.us.us.epil = zext <24 x i8> %322 to <24 x i16>
  %323 = shufflevector <24 x i16> %t1220.us.us.epil, <24 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %324 = bitcast <64 x i16> %323 to <32 x i32>
  %325 = call <32 x i32> @llvm.hexagon.V6.vpackeh.128B(<32 x i32> undef, <32 x i32> %324)
  %326 = bitcast <32 x i32> %325 to <64 x i16>
  %327 = call <32 x i32> @llvm.hexagon.V6.vpackoh.128B(<32 x i32> undef, <32 x i32> %324)
  %328 = bitcast <32 x i32> %327 to <64 x i16>
  %329 = add <64 x i16> %328, %326
  %330 = shufflevector <64 x i16> %329, <64 x i16> undef, <12 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11>
  %t1219.us.us.epil = zext <12 x i16> %330 to <12 x i32>
  %331 = shufflevector <12 x i32> %t1219.us.us.epil, <12 x i32> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %332 = call <64 x i32> @llvm.hexagon.V6.vdealvdd.128B(<32 x i32> undef, <32 x i32> %331, i32 -4)
  %333 = call <32 x i32> @llvm.hexagon.V6.lo.128B(<64 x i32> %332)
  %334 = shufflevector <32 x i32> %333, <32 x i32> undef, <6 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5>
  %335 = add nsw <6 x i32> %334, %sum_input674.sroa.0.6.us.us.epil
  %336 = call <32 x i32> @llvm.hexagon.V6.hi.128B(<64 x i32> %332)
  %337 = shufflevector <32 x i32> %336, <32 x i32> undef, <6 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5>
  %338 = add nsw <6 x i32> %335, %337
  %339 = add nuw nsw i32 %"sum_input.s1.r19$x.us.us.epil", 1
  %epil.iter1876.sub = add i32 %epil.iter1876, -1
  %epil.iter1876.cmp.not = icmp eq i32 %epil.iter1876.sub, 0
  br i1 %epil.iter1876.cmp.not, label %"end for sum_input.s1.r19$x.us.us", label %"for sum_input.s1.r19$x.us.us.epil", !llvm.loop !110

"end for sum_input.s1.r19$x.us.us":               ; preds = %"end for sum_input.s1.r19$x.us.us.loopexit.unr-lcssa", %"for sum_input.s1.r19$x.us.us.epil", %"for sum_input.s1.r19$y.us.us"
  %sum_input674.sroa.0.7.us.us = phi <6 x i32> [ %sum_input674.sroa.0.5.us.us, %"for sum_input.s1.r19$y.us.us" ], [ %.lcssa1756.ph, %"end for sum_input.s1.r19$x.us.us.loopexit.unr-lcssa" ], [ %338, %"for sum_input.s1.r19$x.us.us.epil" ]
  %340 = add nuw nsw i32 %"sum_input.s1.r19$y.us.us", 1
  %.not740.us.us = icmp eq i32 %340, %11
  br i1 %.not740.us.us, label %"consume sum_input.us.us", label %"for sum_input.s1.r19$y.us.us"

"consume sum_input.us.us":                        ; preds = %"end for sum_input.s1.r19$x16.loopexit.split.us.us.us.us.us", %"end for sum_input.s1.r19$x.us.us", %"for sum_input.s1.r19$y12.preheader.us.us", %then_bb10.us.us, %next_bb11.us.us, %"for output.s0.x.xo.us.us"
  %sum_input674.sroa.0.13.us.us = phi <6 x i32> [ %sum_input674.sroa.0.3.us.us, %"for output.s0.x.xo.us.us" ], [ zeroinitializer, %then_bb10.us.us ], [ zeroinitializer, %next_bb11.us.us ], [ zeroinitializer, %"for sum_input.s1.r19$y12.preheader.us.us" ], [ %sum_input674.sroa.0.7.us.us, %"end for sum_input.s1.r19$x.us.us" ], [ %.lcssa, %"end for sum_input.s1.r19$x16.loopexit.split.us.us.us.us.us" ]
  br i1 %201, label %"for output.s0.c.co.preheader.us.us", label %"end for output.s0.c.co.us.us", !prof !96

"for output.s0.c.co.us.us":                       ; preds = %"for output.s0.c.co.preheader.us.us", %"consume convolved.us.us"
  %output.s0.c.co.us.us = phi i32 [ %1342, %"consume convolved.us.us" ], [ 0, %"for output.s0.c.co.preheader.us.us" ]
  %341 = shl nsw i32 %output.s0.c.co.us.us, 7
  %342 = getelementptr inbounds i32, i32* %offset_c, i32 %341
  %343 = bitcast i32* %342 to <32 x i32>*
  %344 = load <32 x i32>, <32 x i32>* %343, align 128, !tbaa !104
  br i1 %t843.not, label %then_bb19.us.us, label %next_bb20.us.us

next_bb20.us.us:                                  ; preds = %"for output.s0.c.co.us.us"
  %345 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1365, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %346 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %344, <32 x i32> %345, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %347 = load <32 x i32>, <32 x i32>* %343, align 128, !tbaa !104
  %348 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1367, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %349 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %347, <32 x i32> %348, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %350 = load <32 x i32>, <32 x i32>* %343, align 128, !tbaa !104
  %351 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1369, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %352 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %350, <32 x i32> %351, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %353 = load <32 x i32>, <32 x i32>* %343, align 128, !tbaa !104
  %354 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1371, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %355 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %353, <32 x i32> %354, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %356 = load <32 x i32>, <32 x i32>* %343, align 128, !tbaa !104
  %357 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1373, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %358 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %356, <32 x i32> %357, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %359 = load <32 x i32>, <32 x i32>* %343, align 128, !tbaa !104
  %360 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1375, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %361 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %359, <32 x i32> %360, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %362 = getelementptr inbounds i32, i32* %342, i32 32
  %363 = bitcast i32* %362 to <32 x i32>*
  %364 = load <32 x i32>, <32 x i32>* %363, align 128, !tbaa !104
  %365 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1365, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %366 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %364, <32 x i32> %365, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %367 = load <32 x i32>, <32 x i32>* %363, align 128, !tbaa !104
  %368 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1367, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %369 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %367, <32 x i32> %368, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %370 = load <32 x i32>, <32 x i32>* %363, align 128, !tbaa !104
  %371 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1369, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %372 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %370, <32 x i32> %371, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %373 = load <32 x i32>, <32 x i32>* %363, align 128, !tbaa !104
  %374 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1371, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %375 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %373, <32 x i32> %374, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %376 = load <32 x i32>, <32 x i32>* %363, align 128, !tbaa !104
  %377 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1373, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %378 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %376, <32 x i32> %377, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %379 = load <32 x i32>, <32 x i32>* %363, align 128, !tbaa !104
  %380 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1375, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %381 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %379, <32 x i32> %380, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %382 = getelementptr inbounds i32, i32* %342, i32 64
  %383 = bitcast i32* %382 to <32 x i32>*
  %384 = load <32 x i32>, <32 x i32>* %383, align 128, !tbaa !104
  %385 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1365, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %386 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %384, <32 x i32> %385, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %387 = load <32 x i32>, <32 x i32>* %383, align 128, !tbaa !104
  %388 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1367, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %389 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %387, <32 x i32> %388, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %390 = load <32 x i32>, <32 x i32>* %383, align 128, !tbaa !104
  %391 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1369, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %392 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %390, <32 x i32> %391, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %393 = load <32 x i32>, <32 x i32>* %383, align 128, !tbaa !104
  %394 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1371, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %395 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %393, <32 x i32> %394, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %396 = load <32 x i32>, <32 x i32>* %383, align 128, !tbaa !104
  %397 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1373, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %398 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %396, <32 x i32> %397, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %399 = load <32 x i32>, <32 x i32>* %383, align 128, !tbaa !104
  %400 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1375, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %401 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %399, <32 x i32> %400, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %402 = getelementptr inbounds i32, i32* %342, i32 96
  %403 = bitcast i32* %402 to <32 x i32>*
  %404 = load <32 x i32>, <32 x i32>* %403, align 128, !tbaa !104
  %405 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1365, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %406 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %404, <32 x i32> %405, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %407 = load <32 x i32>, <32 x i32>* %403, align 128, !tbaa !104
  %408 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1367, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %409 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %407, <32 x i32> %408, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %410 = load <32 x i32>, <32 x i32>* %403, align 128, !tbaa !104
  %411 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1369, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %412 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %410, <32 x i32> %411, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %413 = load <32 x i32>, <32 x i32>* %403, align 128, !tbaa !104
  %414 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1371, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %415 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %413, <32 x i32> %414, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %416 = load <32 x i32>, <32 x i32>* %403, align 128, !tbaa !104
  %417 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1373, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %418 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %416, <32 x i32> %417, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %419 = load <32 x i32>, <32 x i32>* %403, align 128, !tbaa !104
  %420 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1375, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %421 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %419, <32 x i32> %420, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  br label %after_bb18.us.us

then_bb19.us.us:                                  ; preds = %"for output.s0.c.co.us.us"
  %422 = getelementptr inbounds i32, i32* %342, i32 32
  %423 = bitcast i32* %422 to <32 x i32>*
  %424 = load <32 x i32>, <32 x i32>* %423, align 128, !tbaa !104
  %425 = getelementptr inbounds i32, i32* %342, i32 64
  %426 = bitcast i32* %425 to <32 x i32>*
  %427 = load <32 x i32>, <32 x i32>* %426, align 128, !tbaa !104
  %428 = getelementptr inbounds i32, i32* %342, i32 96
  %429 = bitcast i32* %428 to <32 x i32>*
  %430 = load <32 x i32>, <32 x i32>* %429, align 128, !tbaa !104
  br label %after_bb18.us.us

after_bb18.us.us:                                 ; preds = %then_bb19.us.us, %next_bb20.us.us
  %convolved673.sroa.208.0.us.us = phi <32 x i32> [ %430, %then_bb19.us.us ], [ %421, %next_bb20.us.us ]
  %convolved673.sroa.203.0.us.us = phi <32 x i32> [ %427, %then_bb19.us.us ], [ %401, %next_bb20.us.us ]
  %convolved673.sroa.198.0.us.us = phi <32 x i32> [ %424, %then_bb19.us.us ], [ %381, %next_bb20.us.us ]
  %convolved673.sroa.193.0.us.us = phi <32 x i32> [ %344, %then_bb19.us.us ], [ %361, %next_bb20.us.us ]
  %convolved673.sroa.188.0.us.us = phi <32 x i32> [ %430, %then_bb19.us.us ], [ %418, %next_bb20.us.us ]
  %convolved673.sroa.183.0.us.us = phi <32 x i32> [ %427, %then_bb19.us.us ], [ %398, %next_bb20.us.us ]
  %convolved673.sroa.178.0.us.us = phi <32 x i32> [ %424, %then_bb19.us.us ], [ %378, %next_bb20.us.us ]
  %convolved673.sroa.173.0.us.us = phi <32 x i32> [ %344, %then_bb19.us.us ], [ %358, %next_bb20.us.us ]
  %convolved673.sroa.168.0.us.us = phi <32 x i32> [ %430, %then_bb19.us.us ], [ %415, %next_bb20.us.us ]
  %convolved673.sroa.163.0.us.us = phi <32 x i32> [ %427, %then_bb19.us.us ], [ %395, %next_bb20.us.us ]
  %convolved673.sroa.158.0.us.us = phi <32 x i32> [ %424, %then_bb19.us.us ], [ %375, %next_bb20.us.us ]
  %convolved673.sroa.153.0.us.us = phi <32 x i32> [ %344, %then_bb19.us.us ], [ %355, %next_bb20.us.us ]
  %convolved673.sroa.148.0.us.us = phi <32 x i32> [ %430, %then_bb19.us.us ], [ %412, %next_bb20.us.us ]
  %convolved673.sroa.143.0.us.us = phi <32 x i32> [ %427, %then_bb19.us.us ], [ %392, %next_bb20.us.us ]
  %convolved673.sroa.138.0.us.us = phi <32 x i32> [ %424, %then_bb19.us.us ], [ %372, %next_bb20.us.us ]
  %convolved673.sroa.133.0.us.us = phi <32 x i32> [ %344, %then_bb19.us.us ], [ %352, %next_bb20.us.us ]
  %convolved673.sroa.123.0.us.us = phi <32 x i32> [ %430, %then_bb19.us.us ], [ %409, %next_bb20.us.us ]
  %convolved673.sroa.113.0.us.us = phi <32 x i32> [ %427, %then_bb19.us.us ], [ %389, %next_bb20.us.us ]
  %convolved673.sroa.103.0.us.us = phi <32 x i32> [ %424, %then_bb19.us.us ], [ %369, %next_bb20.us.us ]
  %convolved673.sroa.93.0.us.us = phi <32 x i32> [ %344, %then_bb19.us.us ], [ %349, %next_bb20.us.us ]
  %convolved673.sroa.78.0.us.us = phi <32 x i32> [ %430, %then_bb19.us.us ], [ %406, %next_bb20.us.us ]
  %convolved673.sroa.63.0.us.us = phi <32 x i32> [ %427, %then_bb19.us.us ], [ %386, %next_bb20.us.us ]
  %convolved673.sroa.48.0.us.us = phi <32 x i32> [ %424, %then_bb19.us.us ], [ %366, %next_bb20.us.us ]
  %convolved673.sroa.0.0.us.us = phi <32 x i32> [ %344, %then_bb19.us.us ], [ %346, %next_bb20.us.us ]
  br i1 %197, label %"for convolved.s1.r19$y.preheader.us.us", label %"consume convolved.us.us", !prof !96

"for convolved.s1.r19$y.us.us":                   ; preds = %"for convolved.s1.r19$y.preheader.us.us", %"end for convolved.s1.r19$x.us.us"
  %convolved673.sroa.208.1.us.us = phi <32 x i32> [ %convolved673.sroa.208.3.us.us, %"end for convolved.s1.r19$x.us.us" ], [ %convolved673.sroa.208.0.us.us, %"for convolved.s1.r19$y.preheader.us.us" ]
  %convolved673.sroa.203.1.us.us = phi <32 x i32> [ %convolved673.sroa.203.3.us.us, %"end for convolved.s1.r19$x.us.us" ], [ %convolved673.sroa.203.0.us.us, %"for convolved.s1.r19$y.preheader.us.us" ]
  %convolved673.sroa.198.1.us.us = phi <32 x i32> [ %convolved673.sroa.198.3.us.us, %"end for convolved.s1.r19$x.us.us" ], [ %convolved673.sroa.198.0.us.us, %"for convolved.s1.r19$y.preheader.us.us" ]
  %convolved673.sroa.193.1.us.us = phi <32 x i32> [ %convolved673.sroa.193.3.us.us, %"end for convolved.s1.r19$x.us.us" ], [ %convolved673.sroa.193.0.us.us, %"for convolved.s1.r19$y.preheader.us.us" ]
  %convolved673.sroa.188.1.us.us = phi <32 x i32> [ %convolved673.sroa.188.3.us.us, %"end for convolved.s1.r19$x.us.us" ], [ %convolved673.sroa.188.0.us.us, %"for convolved.s1.r19$y.preheader.us.us" ]
  %convolved673.sroa.183.1.us.us = phi <32 x i32> [ %convolved673.sroa.183.3.us.us, %"end for convolved.s1.r19$x.us.us" ], [ %convolved673.sroa.183.0.us.us, %"for convolved.s1.r19$y.preheader.us.us" ]
  %convolved673.sroa.178.1.us.us = phi <32 x i32> [ %convolved673.sroa.178.3.us.us, %"end for convolved.s1.r19$x.us.us" ], [ %convolved673.sroa.178.0.us.us, %"for convolved.s1.r19$y.preheader.us.us" ]
  %convolved673.sroa.173.1.us.us = phi <32 x i32> [ %convolved673.sroa.173.3.us.us, %"end for convolved.s1.r19$x.us.us" ], [ %convolved673.sroa.173.0.us.us, %"for convolved.s1.r19$y.preheader.us.us" ]
  %convolved673.sroa.168.1.us.us = phi <32 x i32> [ %convolved673.sroa.168.3.us.us, %"end for convolved.s1.r19$x.us.us" ], [ %convolved673.sroa.168.0.us.us, %"for convolved.s1.r19$y.preheader.us.us" ]
  %convolved673.sroa.163.1.us.us = phi <32 x i32> [ %convolved673.sroa.163.3.us.us, %"end for convolved.s1.r19$x.us.us" ], [ %convolved673.sroa.163.0.us.us, %"for convolved.s1.r19$y.preheader.us.us" ]
  %convolved673.sroa.158.1.us.us = phi <32 x i32> [ %convolved673.sroa.158.3.us.us, %"end for convolved.s1.r19$x.us.us" ], [ %convolved673.sroa.158.0.us.us, %"for convolved.s1.r19$y.preheader.us.us" ]
  %convolved673.sroa.153.1.us.us = phi <32 x i32> [ %convolved673.sroa.153.3.us.us, %"end for convolved.s1.r19$x.us.us" ], [ %convolved673.sroa.153.0.us.us, %"for convolved.s1.r19$y.preheader.us.us" ]
  %convolved673.sroa.148.1.us.us = phi <32 x i32> [ %convolved673.sroa.148.3.us.us, %"end for convolved.s1.r19$x.us.us" ], [ %convolved673.sroa.148.0.us.us, %"for convolved.s1.r19$y.preheader.us.us" ]
  %convolved673.sroa.143.1.us.us = phi <32 x i32> [ %convolved673.sroa.143.3.us.us, %"end for convolved.s1.r19$x.us.us" ], [ %convolved673.sroa.143.0.us.us, %"for convolved.s1.r19$y.preheader.us.us" ]
  %convolved673.sroa.138.1.us.us = phi <32 x i32> [ %convolved673.sroa.138.3.us.us, %"end for convolved.s1.r19$x.us.us" ], [ %convolved673.sroa.138.0.us.us, %"for convolved.s1.r19$y.preheader.us.us" ]
  %convolved673.sroa.133.1.us.us = phi <32 x i32> [ %convolved673.sroa.133.3.us.us, %"end for convolved.s1.r19$x.us.us" ], [ %convolved673.sroa.133.0.us.us, %"for convolved.s1.r19$y.preheader.us.us" ]
  %convolved673.sroa.123.1.us.us = phi <32 x i32> [ %convolved673.sroa.123.3.us.us, %"end for convolved.s1.r19$x.us.us" ], [ %convolved673.sroa.123.0.us.us, %"for convolved.s1.r19$y.preheader.us.us" ]
  %convolved673.sroa.113.1.us.us = phi <32 x i32> [ %convolved673.sroa.113.3.us.us, %"end for convolved.s1.r19$x.us.us" ], [ %convolved673.sroa.113.0.us.us, %"for convolved.s1.r19$y.preheader.us.us" ]
  %convolved673.sroa.103.1.us.us = phi <32 x i32> [ %convolved673.sroa.103.3.us.us, %"end for convolved.s1.r19$x.us.us" ], [ %convolved673.sroa.103.0.us.us, %"for convolved.s1.r19$y.preheader.us.us" ]
  %convolved673.sroa.93.1.us.us = phi <32 x i32> [ %convolved673.sroa.93.3.us.us, %"end for convolved.s1.r19$x.us.us" ], [ %convolved673.sroa.93.0.us.us, %"for convolved.s1.r19$y.preheader.us.us" ]
  %convolved673.sroa.78.1.us.us = phi <32 x i32> [ %convolved673.sroa.78.3.us.us, %"end for convolved.s1.r19$x.us.us" ], [ %convolved673.sroa.78.0.us.us, %"for convolved.s1.r19$y.preheader.us.us" ]
  %convolved673.sroa.63.1.us.us = phi <32 x i32> [ %convolved673.sroa.63.3.us.us, %"end for convolved.s1.r19$x.us.us" ], [ %convolved673.sroa.63.0.us.us, %"for convolved.s1.r19$y.preheader.us.us" ]
  %convolved673.sroa.48.1.us.us = phi <32 x i32> [ %convolved673.sroa.48.3.us.us, %"end for convolved.s1.r19$x.us.us" ], [ %convolved673.sroa.48.0.us.us, %"for convolved.s1.r19$y.preheader.us.us" ]
  %convolved673.sroa.0.1.us.us = phi <32 x i32> [ %convolved673.sroa.0.3.us.us, %"end for convolved.s1.r19$x.us.us" ], [ %convolved673.sroa.0.0.us.us, %"for convolved.s1.r19$y.preheader.us.us" ]
  %"convolved.s1.r19$y.us.us" = phi i32 [ %571, %"end for convolved.s1.r19$x.us.us" ], [ 0, %"for convolved.s1.r19$y.preheader.us.us" ]
  %431 = mul nsw i32 %"convolved.s1.r19$y.us.us", %dilation_y
  %432 = add nsw i32 %431, %228
  %433 = mul nsw i32 %432, %19
  %t913.us.us = add nsw i32 %433, %224
  %434 = mul nsw i32 %"convolved.s1.r19$y.us.us", %12
  br i1 %198, label %"for convolved.s1.r19$x.us.us", label %"end for convolved.s1.r19$x.us.us", !prof !96

"for convolved.s1.r19$x.us.us":                   ; preds = %"for convolved.s1.r19$y.us.us", %"end for convolved.s1.r19$z.r124.us.us"
  %convolved673.sroa.208.2.us.us = phi <32 x i32> [ %convolved673.sroa.208.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.208.1.us.us, %"for convolved.s1.r19$y.us.us" ]
  %convolved673.sroa.203.2.us.us = phi <32 x i32> [ %convolved673.sroa.203.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.203.1.us.us, %"for convolved.s1.r19$y.us.us" ]
  %convolved673.sroa.198.2.us.us = phi <32 x i32> [ %convolved673.sroa.198.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.198.1.us.us, %"for convolved.s1.r19$y.us.us" ]
  %convolved673.sroa.193.2.us.us = phi <32 x i32> [ %convolved673.sroa.193.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.193.1.us.us, %"for convolved.s1.r19$y.us.us" ]
  %convolved673.sroa.188.2.us.us = phi <32 x i32> [ %convolved673.sroa.188.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.188.1.us.us, %"for convolved.s1.r19$y.us.us" ]
  %convolved673.sroa.183.2.us.us = phi <32 x i32> [ %convolved673.sroa.183.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.183.1.us.us, %"for convolved.s1.r19$y.us.us" ]
  %convolved673.sroa.178.2.us.us = phi <32 x i32> [ %convolved673.sroa.178.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.178.1.us.us, %"for convolved.s1.r19$y.us.us" ]
  %convolved673.sroa.173.2.us.us = phi <32 x i32> [ %convolved673.sroa.173.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.173.1.us.us, %"for convolved.s1.r19$y.us.us" ]
  %convolved673.sroa.168.2.us.us = phi <32 x i32> [ %convolved673.sroa.168.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.168.1.us.us, %"for convolved.s1.r19$y.us.us" ]
  %convolved673.sroa.163.2.us.us = phi <32 x i32> [ %convolved673.sroa.163.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.163.1.us.us, %"for convolved.s1.r19$y.us.us" ]
  %convolved673.sroa.158.2.us.us = phi <32 x i32> [ %convolved673.sroa.158.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.158.1.us.us, %"for convolved.s1.r19$y.us.us" ]
  %convolved673.sroa.153.2.us.us = phi <32 x i32> [ %convolved673.sroa.153.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.153.1.us.us, %"for convolved.s1.r19$y.us.us" ]
  %convolved673.sroa.148.2.us.us = phi <32 x i32> [ %convolved673.sroa.148.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.148.1.us.us, %"for convolved.s1.r19$y.us.us" ]
  %convolved673.sroa.143.2.us.us = phi <32 x i32> [ %convolved673.sroa.143.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.143.1.us.us, %"for convolved.s1.r19$y.us.us" ]
  %convolved673.sroa.138.2.us.us = phi <32 x i32> [ %convolved673.sroa.138.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.138.1.us.us, %"for convolved.s1.r19$y.us.us" ]
  %convolved673.sroa.133.2.us.us = phi <32 x i32> [ %convolved673.sroa.133.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.133.1.us.us, %"for convolved.s1.r19$y.us.us" ]
  %convolved673.sroa.123.2.us.us = phi <32 x i32> [ %convolved673.sroa.123.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.123.1.us.us, %"for convolved.s1.r19$y.us.us" ]
  %convolved673.sroa.113.2.us.us = phi <32 x i32> [ %convolved673.sroa.113.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.113.1.us.us, %"for convolved.s1.r19$y.us.us" ]
  %convolved673.sroa.103.2.us.us = phi <32 x i32> [ %convolved673.sroa.103.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.103.1.us.us, %"for convolved.s1.r19$y.us.us" ]
  %convolved673.sroa.93.2.us.us = phi <32 x i32> [ %convolved673.sroa.93.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.93.1.us.us, %"for convolved.s1.r19$y.us.us" ]
  %convolved673.sroa.78.2.us.us = phi <32 x i32> [ %convolved673.sroa.78.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.78.1.us.us, %"for convolved.s1.r19$y.us.us" ]
  %convolved673.sroa.63.2.us.us = phi <32 x i32> [ %convolved673.sroa.63.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.63.1.us.us, %"for convolved.s1.r19$y.us.us" ]
  %convolved673.sroa.48.2.us.us = phi <32 x i32> [ %convolved673.sroa.48.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.48.1.us.us, %"for convolved.s1.r19$y.us.us" ]
  %convolved673.sroa.0.2.us.us = phi <32 x i32> [ %convolved673.sroa.0.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.0.1.us.us, %"for convolved.s1.r19$y.us.us" ]
  %"convolved.s1.r19$x.us.us" = phi i32 [ %570, %"end for convolved.s1.r19$z.r124.us.us" ], [ 0, %"for convolved.s1.r19$y.us.us" ]
  %435 = mul nsw i32 %"convolved.s1.r19$x.us.us", %dilation_x
  %436 = mul nsw i32 %"convolved.s1.r19$x.us.us", %10
  %t920.us.us = add i32 %436, %434
  br i1 %199, label %"for convolved.s1.r19$z.r124.preheader.us.us", label %"end for convolved.s1.r19$z.r124.us.us", !prof !96

"for convolved.s1.r19$z.r124.us.us":              ; preds = %"for convolved.s1.r19$z.r124.preheader.us.us", %"for convolved.s1.r19$z.r124.us.us"
  %convolved673.sroa.208.4.us.us = phi <32 x i32> [ %568, %"for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.208.2.us.us, %"for convolved.s1.r19$z.r124.preheader.us.us" ]
  %convolved673.sroa.203.4.us.us = phi <32 x i32> [ %564, %"for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.203.2.us.us, %"for convolved.s1.r19$z.r124.preheader.us.us" ]
  %convolved673.sroa.198.4.us.us = phi <32 x i32> [ %560, %"for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.198.2.us.us, %"for convolved.s1.r19$z.r124.preheader.us.us" ]
  %convolved673.sroa.193.4.us.us = phi <32 x i32> [ %556, %"for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.193.2.us.us, %"for convolved.s1.r19$z.r124.preheader.us.us" ]
  %convolved673.sroa.188.4.us.us = phi <32 x i32> [ %549, %"for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.188.2.us.us, %"for convolved.s1.r19$z.r124.preheader.us.us" ]
  %convolved673.sroa.183.4.us.us = phi <32 x i32> [ %545, %"for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.183.2.us.us, %"for convolved.s1.r19$z.r124.preheader.us.us" ]
  %convolved673.sroa.178.4.us.us = phi <32 x i32> [ %541, %"for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.178.2.us.us, %"for convolved.s1.r19$z.r124.preheader.us.us" ]
  %convolved673.sroa.173.4.us.us = phi <32 x i32> [ %537, %"for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.173.2.us.us, %"for convolved.s1.r19$z.r124.preheader.us.us" ]
  %convolved673.sroa.168.4.us.us = phi <32 x i32> [ %530, %"for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.168.2.us.us, %"for convolved.s1.r19$z.r124.preheader.us.us" ]
  %convolved673.sroa.163.4.us.us = phi <32 x i32> [ %526, %"for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.163.2.us.us, %"for convolved.s1.r19$z.r124.preheader.us.us" ]
  %convolved673.sroa.158.4.us.us = phi <32 x i32> [ %522, %"for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.158.2.us.us, %"for convolved.s1.r19$z.r124.preheader.us.us" ]
  %convolved673.sroa.153.4.us.us = phi <32 x i32> [ %518, %"for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.153.2.us.us, %"for convolved.s1.r19$z.r124.preheader.us.us" ]
  %convolved673.sroa.148.4.us.us = phi <32 x i32> [ %511, %"for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.148.2.us.us, %"for convolved.s1.r19$z.r124.preheader.us.us" ]
  %convolved673.sroa.143.4.us.us = phi <32 x i32> [ %507, %"for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.143.2.us.us, %"for convolved.s1.r19$z.r124.preheader.us.us" ]
  %convolved673.sroa.138.4.us.us = phi <32 x i32> [ %503, %"for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.138.2.us.us, %"for convolved.s1.r19$z.r124.preheader.us.us" ]
  %convolved673.sroa.133.4.us.us = phi <32 x i32> [ %499, %"for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.133.2.us.us, %"for convolved.s1.r19$z.r124.preheader.us.us" ]
  %convolved673.sroa.123.4.us.us = phi <32 x i32> [ %492, %"for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.123.2.us.us, %"for convolved.s1.r19$z.r124.preheader.us.us" ]
  %convolved673.sroa.113.4.us.us = phi <32 x i32> [ %488, %"for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.113.2.us.us, %"for convolved.s1.r19$z.r124.preheader.us.us" ]
  %convolved673.sroa.103.4.us.us = phi <32 x i32> [ %484, %"for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.103.2.us.us, %"for convolved.s1.r19$z.r124.preheader.us.us" ]
  %convolved673.sroa.93.4.us.us = phi <32 x i32> [ %480, %"for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.93.2.us.us, %"for convolved.s1.r19$z.r124.preheader.us.us" ]
  %convolved673.sroa.78.4.us.us = phi <32 x i32> [ %473, %"for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.78.2.us.us, %"for convolved.s1.r19$z.r124.preheader.us.us" ]
  %convolved673.sroa.63.4.us.us = phi <32 x i32> [ %466, %"for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.63.2.us.us, %"for convolved.s1.r19$z.r124.preheader.us.us" ]
  %convolved673.sroa.48.4.us.us = phi <32 x i32> [ %459, %"for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.48.2.us.us, %"for convolved.s1.r19$z.r124.preheader.us.us" ]
  %convolved673.sroa.0.4.us.us = phi <32 x i32> [ %451, %"for convolved.s1.r19$z.r124.us.us" ], [ %convolved673.sroa.0.2.us.us, %"for convolved.s1.r19$z.r124.preheader.us.us" ]
  %"convolved.s1.r19$z.r124.us.us" = phi i32 [ %569, %"for convolved.s1.r19$z.r124.us.us" ], [ 0, %"for convolved.s1.r19$z.r124.preheader.us.us" ]
  %437 = shl nsw i32 %"convolved.s1.r19$z.r124.us.us", 2
  %438 = add i32 %437, %t913.us.us
  %439 = add i32 %438, %1344
  %440 = getelementptr inbounds i8, i8* %13, i32 %439
  %441 = bitcast i8* %440 to <4 x i8>*
  %442 = load <4 x i8>, <4 x i8>* %441, align 4, !tbaa !108
  %443 = shl nsw i32 %"convolved.s1.r19$z.r124.us.us", 5
  %444 = add nsw i32 %443, %1360
  %445 = shl nsw i32 %444, 2
  %446 = add nsw i32 %t920.us.us, %445
  %447 = getelementptr inbounds i8, i8* %5, i32 %446
  %448 = bitcast i8* %447 to <128 x i8>*
  %449 = load <128 x i8>, <128 x i8>* %448, align 128, !tbaa !106
  %450 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %442, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %451 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.0.4.us.us, <128 x i8> %449, <32 x i32> %450, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %452 = load <4 x i8>, <4 x i8>* %441, align 4, !tbaa !108
  %453 = shl nsw i32 %"convolved.s1.r19$z.r124.us.us", 7
  %454 = add i32 %1345, %453
  %455 = getelementptr inbounds i8, i8* %5, i32 %454
  %456 = bitcast i8* %455 to <128 x i8>*
  %457 = load <128 x i8>, <128 x i8>* %456, align 128, !tbaa !106
  %458 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %452, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %459 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.48.4.us.us, <128 x i8> %457, <32 x i32> %458, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %460 = load <4 x i8>, <4 x i8>* %441, align 4, !tbaa !108
  %461 = add i32 %1346, %453
  %462 = getelementptr inbounds i8, i8* %5, i32 %461
  %463 = bitcast i8* %462 to <128 x i8>*
  %464 = load <128 x i8>, <128 x i8>* %463, align 128, !tbaa !106
  %465 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %460, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %466 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.63.4.us.us, <128 x i8> %464, <32 x i32> %465, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %467 = load <4 x i8>, <4 x i8>* %441, align 4, !tbaa !108
  %468 = add i32 %1347, %453
  %469 = getelementptr inbounds i8, i8* %5, i32 %468
  %470 = bitcast i8* %469 to <128 x i8>*
  %471 = load <128 x i8>, <128 x i8>* %470, align 128, !tbaa !106
  %472 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %467, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %473 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.78.4.us.us, <128 x i8> %471, <32 x i32> %472, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %474 = add i32 %438, %1348
  %475 = getelementptr inbounds i8, i8* %13, i32 %474
  %476 = bitcast i8* %475 to <4 x i8>*
  %477 = load <4 x i8>, <4 x i8>* %476, align 4, !tbaa !108
  %478 = load <128 x i8>, <128 x i8>* %448, align 128, !tbaa !106
  %479 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %477, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %480 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.93.4.us.us, <128 x i8> %478, <32 x i32> %479, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %481 = load <4 x i8>, <4 x i8>* %476, align 4, !tbaa !108
  %482 = load <128 x i8>, <128 x i8>* %456, align 128, !tbaa !106
  %483 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %481, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %484 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.103.4.us.us, <128 x i8> %482, <32 x i32> %483, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %485 = load <4 x i8>, <4 x i8>* %476, align 4, !tbaa !108
  %486 = load <128 x i8>, <128 x i8>* %463, align 128, !tbaa !106
  %487 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %485, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %488 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.113.4.us.us, <128 x i8> %486, <32 x i32> %487, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %489 = load <4 x i8>, <4 x i8>* %476, align 4, !tbaa !108
  %490 = load <128 x i8>, <128 x i8>* %470, align 128, !tbaa !106
  %491 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %489, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %492 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.123.4.us.us, <128 x i8> %490, <32 x i32> %491, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %493 = add i32 %438, %1349
  %494 = getelementptr inbounds i8, i8* %13, i32 %493
  %495 = bitcast i8* %494 to <4 x i8>*
  %496 = load <4 x i8>, <4 x i8>* %495, align 4, !tbaa !108
  %497 = load <128 x i8>, <128 x i8>* %448, align 128, !tbaa !106
  %498 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %496, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %499 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.133.4.us.us, <128 x i8> %497, <32 x i32> %498, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %500 = load <4 x i8>, <4 x i8>* %495, align 4, !tbaa !108
  %501 = load <128 x i8>, <128 x i8>* %456, align 128, !tbaa !106
  %502 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %500, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %503 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.138.4.us.us, <128 x i8> %501, <32 x i32> %502, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %504 = load <4 x i8>, <4 x i8>* %495, align 4, !tbaa !108
  %505 = load <128 x i8>, <128 x i8>* %463, align 128, !tbaa !106
  %506 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %504, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %507 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.143.4.us.us, <128 x i8> %505, <32 x i32> %506, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %508 = load <4 x i8>, <4 x i8>* %495, align 4, !tbaa !108
  %509 = load <128 x i8>, <128 x i8>* %470, align 128, !tbaa !106
  %510 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %508, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %511 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.148.4.us.us, <128 x i8> %509, <32 x i32> %510, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %512 = add i32 %438, %1350
  %513 = getelementptr inbounds i8, i8* %13, i32 %512
  %514 = bitcast i8* %513 to <4 x i8>*
  %515 = load <4 x i8>, <4 x i8>* %514, align 4, !tbaa !108
  %516 = load <128 x i8>, <128 x i8>* %448, align 128, !tbaa !106
  %517 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %515, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %518 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.153.4.us.us, <128 x i8> %516, <32 x i32> %517, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %519 = load <4 x i8>, <4 x i8>* %514, align 4, !tbaa !108
  %520 = load <128 x i8>, <128 x i8>* %456, align 128, !tbaa !106
  %521 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %519, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %522 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.158.4.us.us, <128 x i8> %520, <32 x i32> %521, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %523 = load <4 x i8>, <4 x i8>* %514, align 4, !tbaa !108
  %524 = load <128 x i8>, <128 x i8>* %463, align 128, !tbaa !106
  %525 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %523, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %526 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.163.4.us.us, <128 x i8> %524, <32 x i32> %525, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %527 = load <4 x i8>, <4 x i8>* %514, align 4, !tbaa !108
  %528 = load <128 x i8>, <128 x i8>* %470, align 128, !tbaa !106
  %529 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %527, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %530 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.168.4.us.us, <128 x i8> %528, <32 x i32> %529, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %531 = add i32 %438, %1351
  %532 = getelementptr inbounds i8, i8* %13, i32 %531
  %533 = bitcast i8* %532 to <4 x i8>*
  %534 = load <4 x i8>, <4 x i8>* %533, align 4, !tbaa !108
  %535 = load <128 x i8>, <128 x i8>* %448, align 128, !tbaa !106
  %536 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %534, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %537 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.173.4.us.us, <128 x i8> %535, <32 x i32> %536, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %538 = load <4 x i8>, <4 x i8>* %533, align 4, !tbaa !108
  %539 = load <128 x i8>, <128 x i8>* %456, align 128, !tbaa !106
  %540 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %538, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %541 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.178.4.us.us, <128 x i8> %539, <32 x i32> %540, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %542 = load <4 x i8>, <4 x i8>* %533, align 4, !tbaa !108
  %543 = load <128 x i8>, <128 x i8>* %463, align 128, !tbaa !106
  %544 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %542, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %545 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.183.4.us.us, <128 x i8> %543, <32 x i32> %544, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %546 = load <4 x i8>, <4 x i8>* %533, align 4, !tbaa !108
  %547 = load <128 x i8>, <128 x i8>* %470, align 128, !tbaa !106
  %548 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %546, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %549 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.188.4.us.us, <128 x i8> %547, <32 x i32> %548, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %550 = add i32 %438, %1352
  %551 = getelementptr inbounds i8, i8* %13, i32 %550
  %552 = bitcast i8* %551 to <4 x i8>*
  %553 = load <4 x i8>, <4 x i8>* %552, align 4, !tbaa !108
  %554 = load <128 x i8>, <128 x i8>* %448, align 128, !tbaa !106
  %555 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %553, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %556 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.193.4.us.us, <128 x i8> %554, <32 x i32> %555, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %557 = load <4 x i8>, <4 x i8>* %552, align 4, !tbaa !108
  %558 = load <128 x i8>, <128 x i8>* %456, align 128, !tbaa !106
  %559 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %557, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %560 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.198.4.us.us, <128 x i8> %558, <32 x i32> %559, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %561 = load <4 x i8>, <4 x i8>* %552, align 4, !tbaa !108
  %562 = load <128 x i8>, <128 x i8>* %463, align 128, !tbaa !106
  %563 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %561, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %564 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.203.4.us.us, <128 x i8> %562, <32 x i32> %563, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %565 = load <4 x i8>, <4 x i8>* %552, align 4, !tbaa !108
  %566 = load <128 x i8>, <128 x i8>* %470, align 128, !tbaa !106
  %567 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %565, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %568 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.208.4.us.us, <128 x i8> %566, <32 x i32> %567, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %569 = add nuw nsw i32 %"convolved.s1.r19$z.r124.us.us", 1
  %.not736.us.us = icmp eq i32 %569, %7
  br i1 %.not736.us.us, label %"end for convolved.s1.r19$z.r124.us.us", label %"for convolved.s1.r19$z.r124.us.us"

"end for convolved.s1.r19$z.r124.us.us":          ; preds = %"for convolved.s1.r19$z.r124.us.us", %"for convolved.s1.r19$x.us.us"
  %convolved673.sroa.208.5.us.us = phi <32 x i32> [ %convolved673.sroa.208.2.us.us, %"for convolved.s1.r19$x.us.us" ], [ %568, %"for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.203.5.us.us = phi <32 x i32> [ %convolved673.sroa.203.2.us.us, %"for convolved.s1.r19$x.us.us" ], [ %564, %"for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.198.5.us.us = phi <32 x i32> [ %convolved673.sroa.198.2.us.us, %"for convolved.s1.r19$x.us.us" ], [ %560, %"for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.193.5.us.us = phi <32 x i32> [ %convolved673.sroa.193.2.us.us, %"for convolved.s1.r19$x.us.us" ], [ %556, %"for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.188.5.us.us = phi <32 x i32> [ %convolved673.sroa.188.2.us.us, %"for convolved.s1.r19$x.us.us" ], [ %549, %"for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.183.5.us.us = phi <32 x i32> [ %convolved673.sroa.183.2.us.us, %"for convolved.s1.r19$x.us.us" ], [ %545, %"for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.178.5.us.us = phi <32 x i32> [ %convolved673.sroa.178.2.us.us, %"for convolved.s1.r19$x.us.us" ], [ %541, %"for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.173.5.us.us = phi <32 x i32> [ %convolved673.sroa.173.2.us.us, %"for convolved.s1.r19$x.us.us" ], [ %537, %"for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.168.5.us.us = phi <32 x i32> [ %convolved673.sroa.168.2.us.us, %"for convolved.s1.r19$x.us.us" ], [ %530, %"for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.163.5.us.us = phi <32 x i32> [ %convolved673.sroa.163.2.us.us, %"for convolved.s1.r19$x.us.us" ], [ %526, %"for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.158.5.us.us = phi <32 x i32> [ %convolved673.sroa.158.2.us.us, %"for convolved.s1.r19$x.us.us" ], [ %522, %"for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.153.5.us.us = phi <32 x i32> [ %convolved673.sroa.153.2.us.us, %"for convolved.s1.r19$x.us.us" ], [ %518, %"for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.148.5.us.us = phi <32 x i32> [ %convolved673.sroa.148.2.us.us, %"for convolved.s1.r19$x.us.us" ], [ %511, %"for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.143.5.us.us = phi <32 x i32> [ %convolved673.sroa.143.2.us.us, %"for convolved.s1.r19$x.us.us" ], [ %507, %"for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.138.5.us.us = phi <32 x i32> [ %convolved673.sroa.138.2.us.us, %"for convolved.s1.r19$x.us.us" ], [ %503, %"for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.133.5.us.us = phi <32 x i32> [ %convolved673.sroa.133.2.us.us, %"for convolved.s1.r19$x.us.us" ], [ %499, %"for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.123.5.us.us = phi <32 x i32> [ %convolved673.sroa.123.2.us.us, %"for convolved.s1.r19$x.us.us" ], [ %492, %"for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.113.5.us.us = phi <32 x i32> [ %convolved673.sroa.113.2.us.us, %"for convolved.s1.r19$x.us.us" ], [ %488, %"for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.103.5.us.us = phi <32 x i32> [ %convolved673.sroa.103.2.us.us, %"for convolved.s1.r19$x.us.us" ], [ %484, %"for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.93.5.us.us = phi <32 x i32> [ %convolved673.sroa.93.2.us.us, %"for convolved.s1.r19$x.us.us" ], [ %480, %"for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.78.5.us.us = phi <32 x i32> [ %convolved673.sroa.78.2.us.us, %"for convolved.s1.r19$x.us.us" ], [ %473, %"for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.63.5.us.us = phi <32 x i32> [ %convolved673.sroa.63.2.us.us, %"for convolved.s1.r19$x.us.us" ], [ %466, %"for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.48.5.us.us = phi <32 x i32> [ %convolved673.sroa.48.2.us.us, %"for convolved.s1.r19$x.us.us" ], [ %459, %"for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.0.5.us.us = phi <32 x i32> [ %convolved673.sroa.0.2.us.us, %"for convolved.s1.r19$x.us.us" ], [ %451, %"for convolved.s1.r19$z.r124.us.us" ]
  %570 = add nuw nsw i32 %"convolved.s1.r19$x.us.us", 1
  %.not735.us.us = icmp eq i32 %570, %9
  br i1 %.not735.us.us, label %"end for convolved.s1.r19$x.us.us", label %"for convolved.s1.r19$x.us.us"

"end for convolved.s1.r19$x.us.us":               ; preds = %"end for convolved.s1.r19$z.r124.us.us", %"for convolved.s1.r19$y.us.us"
  %convolved673.sroa.208.3.us.us = phi <32 x i32> [ %convolved673.sroa.208.1.us.us, %"for convolved.s1.r19$y.us.us" ], [ %convolved673.sroa.208.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.203.3.us.us = phi <32 x i32> [ %convolved673.sroa.203.1.us.us, %"for convolved.s1.r19$y.us.us" ], [ %convolved673.sroa.203.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.198.3.us.us = phi <32 x i32> [ %convolved673.sroa.198.1.us.us, %"for convolved.s1.r19$y.us.us" ], [ %convolved673.sroa.198.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.193.3.us.us = phi <32 x i32> [ %convolved673.sroa.193.1.us.us, %"for convolved.s1.r19$y.us.us" ], [ %convolved673.sroa.193.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.188.3.us.us = phi <32 x i32> [ %convolved673.sroa.188.1.us.us, %"for convolved.s1.r19$y.us.us" ], [ %convolved673.sroa.188.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.183.3.us.us = phi <32 x i32> [ %convolved673.sroa.183.1.us.us, %"for convolved.s1.r19$y.us.us" ], [ %convolved673.sroa.183.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.178.3.us.us = phi <32 x i32> [ %convolved673.sroa.178.1.us.us, %"for convolved.s1.r19$y.us.us" ], [ %convolved673.sroa.178.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.173.3.us.us = phi <32 x i32> [ %convolved673.sroa.173.1.us.us, %"for convolved.s1.r19$y.us.us" ], [ %convolved673.sroa.173.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.168.3.us.us = phi <32 x i32> [ %convolved673.sroa.168.1.us.us, %"for convolved.s1.r19$y.us.us" ], [ %convolved673.sroa.168.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.163.3.us.us = phi <32 x i32> [ %convolved673.sroa.163.1.us.us, %"for convolved.s1.r19$y.us.us" ], [ %convolved673.sroa.163.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.158.3.us.us = phi <32 x i32> [ %convolved673.sroa.158.1.us.us, %"for convolved.s1.r19$y.us.us" ], [ %convolved673.sroa.158.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.153.3.us.us = phi <32 x i32> [ %convolved673.sroa.153.1.us.us, %"for convolved.s1.r19$y.us.us" ], [ %convolved673.sroa.153.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.148.3.us.us = phi <32 x i32> [ %convolved673.sroa.148.1.us.us, %"for convolved.s1.r19$y.us.us" ], [ %convolved673.sroa.148.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.143.3.us.us = phi <32 x i32> [ %convolved673.sroa.143.1.us.us, %"for convolved.s1.r19$y.us.us" ], [ %convolved673.sroa.143.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.138.3.us.us = phi <32 x i32> [ %convolved673.sroa.138.1.us.us, %"for convolved.s1.r19$y.us.us" ], [ %convolved673.sroa.138.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.133.3.us.us = phi <32 x i32> [ %convolved673.sroa.133.1.us.us, %"for convolved.s1.r19$y.us.us" ], [ %convolved673.sroa.133.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.123.3.us.us = phi <32 x i32> [ %convolved673.sroa.123.1.us.us, %"for convolved.s1.r19$y.us.us" ], [ %convolved673.sroa.123.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.113.3.us.us = phi <32 x i32> [ %convolved673.sroa.113.1.us.us, %"for convolved.s1.r19$y.us.us" ], [ %convolved673.sroa.113.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.103.3.us.us = phi <32 x i32> [ %convolved673.sroa.103.1.us.us, %"for convolved.s1.r19$y.us.us" ], [ %convolved673.sroa.103.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.93.3.us.us = phi <32 x i32> [ %convolved673.sroa.93.1.us.us, %"for convolved.s1.r19$y.us.us" ], [ %convolved673.sroa.93.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.78.3.us.us = phi <32 x i32> [ %convolved673.sroa.78.1.us.us, %"for convolved.s1.r19$y.us.us" ], [ %convolved673.sroa.78.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.63.3.us.us = phi <32 x i32> [ %convolved673.sroa.63.1.us.us, %"for convolved.s1.r19$y.us.us" ], [ %convolved673.sroa.63.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.48.3.us.us = phi <32 x i32> [ %convolved673.sroa.48.1.us.us, %"for convolved.s1.r19$y.us.us" ], [ %convolved673.sroa.48.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ]
  %convolved673.sroa.0.3.us.us = phi <32 x i32> [ %convolved673.sroa.0.1.us.us, %"for convolved.s1.r19$y.us.us" ], [ %convolved673.sroa.0.5.us.us, %"end for convolved.s1.r19$z.r124.us.us" ]
  %571 = add nuw nsw i32 %"convolved.s1.r19$y.us.us", 1
  %.not734.us.us = icmp eq i32 %571, %11
  br i1 %.not734.us.us, label %"consume convolved.us.us", label %"for convolved.s1.r19$y.us.us"

"consume convolved.us.us":                        ; preds = %"end for convolved.s1.r19$x.us.us", %after_bb18.us.us
  %convolved673.sroa.208.6.us.us = phi <32 x i32> [ %convolved673.sroa.208.0.us.us, %after_bb18.us.us ], [ %convolved673.sroa.208.3.us.us, %"end for convolved.s1.r19$x.us.us" ]
  %convolved673.sroa.203.6.us.us = phi <32 x i32> [ %convolved673.sroa.203.0.us.us, %after_bb18.us.us ], [ %convolved673.sroa.203.3.us.us, %"end for convolved.s1.r19$x.us.us" ]
  %convolved673.sroa.198.6.us.us = phi <32 x i32> [ %convolved673.sroa.198.0.us.us, %after_bb18.us.us ], [ %convolved673.sroa.198.3.us.us, %"end for convolved.s1.r19$x.us.us" ]
  %convolved673.sroa.193.6.us.us = phi <32 x i32> [ %convolved673.sroa.193.0.us.us, %after_bb18.us.us ], [ %convolved673.sroa.193.3.us.us, %"end for convolved.s1.r19$x.us.us" ]
  %convolved673.sroa.188.6.us.us = phi <32 x i32> [ %convolved673.sroa.188.0.us.us, %after_bb18.us.us ], [ %convolved673.sroa.188.3.us.us, %"end for convolved.s1.r19$x.us.us" ]
  %convolved673.sroa.183.6.us.us = phi <32 x i32> [ %convolved673.sroa.183.0.us.us, %after_bb18.us.us ], [ %convolved673.sroa.183.3.us.us, %"end for convolved.s1.r19$x.us.us" ]
  %convolved673.sroa.178.6.us.us = phi <32 x i32> [ %convolved673.sroa.178.0.us.us, %after_bb18.us.us ], [ %convolved673.sroa.178.3.us.us, %"end for convolved.s1.r19$x.us.us" ]
  %convolved673.sroa.173.6.us.us = phi <32 x i32> [ %convolved673.sroa.173.0.us.us, %after_bb18.us.us ], [ %convolved673.sroa.173.3.us.us, %"end for convolved.s1.r19$x.us.us" ]
  %convolved673.sroa.168.6.us.us = phi <32 x i32> [ %convolved673.sroa.168.0.us.us, %after_bb18.us.us ], [ %convolved673.sroa.168.3.us.us, %"end for convolved.s1.r19$x.us.us" ]
  %convolved673.sroa.163.6.us.us = phi <32 x i32> [ %convolved673.sroa.163.0.us.us, %after_bb18.us.us ], [ %convolved673.sroa.163.3.us.us, %"end for convolved.s1.r19$x.us.us" ]
  %convolved673.sroa.158.6.us.us = phi <32 x i32> [ %convolved673.sroa.158.0.us.us, %after_bb18.us.us ], [ %convolved673.sroa.158.3.us.us, %"end for convolved.s1.r19$x.us.us" ]
  %convolved673.sroa.153.6.us.us = phi <32 x i32> [ %convolved673.sroa.153.0.us.us, %after_bb18.us.us ], [ %convolved673.sroa.153.3.us.us, %"end for convolved.s1.r19$x.us.us" ]
  %convolved673.sroa.148.6.us.us = phi <32 x i32> [ %convolved673.sroa.148.0.us.us, %after_bb18.us.us ], [ %convolved673.sroa.148.3.us.us, %"end for convolved.s1.r19$x.us.us" ]
  %convolved673.sroa.143.6.us.us = phi <32 x i32> [ %convolved673.sroa.143.0.us.us, %after_bb18.us.us ], [ %convolved673.sroa.143.3.us.us, %"end for convolved.s1.r19$x.us.us" ]
  %convolved673.sroa.138.6.us.us = phi <32 x i32> [ %convolved673.sroa.138.0.us.us, %after_bb18.us.us ], [ %convolved673.sroa.138.3.us.us, %"end for convolved.s1.r19$x.us.us" ]
  %convolved673.sroa.133.6.us.us = phi <32 x i32> [ %convolved673.sroa.133.0.us.us, %after_bb18.us.us ], [ %convolved673.sroa.133.3.us.us, %"end for convolved.s1.r19$x.us.us" ]
  %convolved673.sroa.123.6.us.us = phi <32 x i32> [ %convolved673.sroa.123.0.us.us, %after_bb18.us.us ], [ %convolved673.sroa.123.3.us.us, %"end for convolved.s1.r19$x.us.us" ]
  %convolved673.sroa.113.6.us.us = phi <32 x i32> [ %convolved673.sroa.113.0.us.us, %after_bb18.us.us ], [ %convolved673.sroa.113.3.us.us, %"end for convolved.s1.r19$x.us.us" ]
  %convolved673.sroa.103.6.us.us = phi <32 x i32> [ %convolved673.sroa.103.0.us.us, %after_bb18.us.us ], [ %convolved673.sroa.103.3.us.us, %"end for convolved.s1.r19$x.us.us" ]
  %convolved673.sroa.93.6.us.us = phi <32 x i32> [ %convolved673.sroa.93.0.us.us, %after_bb18.us.us ], [ %convolved673.sroa.93.3.us.us, %"end for convolved.s1.r19$x.us.us" ]
  %convolved673.sroa.78.6.us.us = phi <32 x i32> [ %convolved673.sroa.78.0.us.us, %after_bb18.us.us ], [ %convolved673.sroa.78.3.us.us, %"end for convolved.s1.r19$x.us.us" ]
  %convolved673.sroa.63.6.us.us = phi <32 x i32> [ %convolved673.sroa.63.0.us.us, %after_bb18.us.us ], [ %convolved673.sroa.63.3.us.us, %"end for convolved.s1.r19$x.us.us" ]
  %convolved673.sroa.48.6.us.us = phi <32 x i32> [ %convolved673.sroa.48.0.us.us, %after_bb18.us.us ], [ %convolved673.sroa.48.3.us.us, %"end for convolved.s1.r19$x.us.us" ]
  %convolved673.sroa.0.6.us.us = phi <32 x i32> [ %convolved673.sroa.0.0.us.us, %after_bb18.us.us ], [ %convolved673.sroa.0.3.us.us, %"end for convolved.s1.r19$x.us.us" ]
  %572 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %573 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %574 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.48.6.us.us, <32 x i32> %573, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %575 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %576 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %574, <32 x i32> %convolved673.sroa.48.6.us.us, <32 x i32> %575, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %577 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %572, <1 x i32> zeroinitializer, <32 x i32> %576, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %578 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %577, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %579 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %580 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %581 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.48.6.us.us, <32 x i32> %580, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %582 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %583 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %581, <32 x i32> %convolved673.sroa.48.6.us.us, <32 x i32> %582, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %584 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %579, <1 x i32> zeroinitializer, <32 x i32> %583, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %585 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %578, <32 x i32> %584, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %586 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %587 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %588 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.0.6.us.us, <32 x i32> %587, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %589 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %590 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %588, <32 x i32> %convolved673.sroa.0.6.us.us, <32 x i32> %589, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %591 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %586, <1 x i32> zeroinitializer, <32 x i32> %590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %592 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %591, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %593 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %594 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %595 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.0.6.us.us, <32 x i32> %594, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %596 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %597 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %595, <32 x i32> %convolved673.sroa.0.6.us.us, <32 x i32> %596, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %598 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %593, <1 x i32> zeroinitializer, <32 x i32> %597, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %599 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %592, <32 x i32> %598, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %600 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %585, <32 x i32> %599, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %601 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %602 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %603 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.78.6.us.us, <32 x i32> %602, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %604 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %605 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %603, <32 x i32> %convolved673.sroa.78.6.us.us, <32 x i32> %604, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %606 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %601, <1 x i32> zeroinitializer, <32 x i32> %605, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %607 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %606, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %608 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %609 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %610 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.78.6.us.us, <32 x i32> %609, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %611 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %612 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %610, <32 x i32> %convolved673.sroa.78.6.us.us, <32 x i32> %611, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %613 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %608, <1 x i32> zeroinitializer, <32 x i32> %612, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %614 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %607, <32 x i32> %613, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %615 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %616 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %617 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.63.6.us.us, <32 x i32> %616, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %618 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %619 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %617, <32 x i32> %convolved673.sroa.63.6.us.us, <32 x i32> %618, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %620 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %615, <1 x i32> zeroinitializer, <32 x i32> %619, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %621 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %620, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %622 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %623 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %624 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.63.6.us.us, <32 x i32> %623, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %625 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %626 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %624, <32 x i32> %convolved673.sroa.63.6.us.us, <32 x i32> %625, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %627 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %622, <1 x i32> zeroinitializer, <32 x i32> %626, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %628 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %621, <32 x i32> %627, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %629 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %614, <32 x i32> %628, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %630 = call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %600, <64 x i16> %629, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0) #11
  %631 = call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %630, <128 x i16> %207, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0) #11
  %632 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %631, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0) #11
  %633 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %634 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %635 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.48.6.us.us, <32 x i32> %634, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %636 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %637 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %635, <32 x i32> %convolved673.sroa.48.6.us.us, <32 x i32> %636, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %638 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %633, <1 x i32> zeroinitializer, <32 x i32> %637, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %639 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %638, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %640 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %641 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %642 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.48.6.us.us, <32 x i32> %641, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %643 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %644 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %642, <32 x i32> %convolved673.sroa.48.6.us.us, <32 x i32> %643, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %645 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %640, <1 x i32> zeroinitializer, <32 x i32> %644, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %646 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %639, <32 x i32> %645, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %647 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %648 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %649 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.0.6.us.us, <32 x i32> %648, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %650 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %651 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %649, <32 x i32> %convolved673.sroa.0.6.us.us, <32 x i32> %650, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %652 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %647, <1 x i32> zeroinitializer, <32 x i32> %651, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %653 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %652, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %654 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %655 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %656 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.0.6.us.us, <32 x i32> %655, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %657 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %658 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %656, <32 x i32> %convolved673.sroa.0.6.us.us, <32 x i32> %657, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %659 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %654, <1 x i32> zeroinitializer, <32 x i32> %658, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %660 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %653, <32 x i32> %659, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %661 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %646, <32 x i32> %660, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %662 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %663 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %664 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.78.6.us.us, <32 x i32> %663, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %665 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %666 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %664, <32 x i32> %convolved673.sroa.78.6.us.us, <32 x i32> %665, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %667 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %662, <1 x i32> zeroinitializer, <32 x i32> %666, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %668 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %667, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %669 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %670 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %671 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.78.6.us.us, <32 x i32> %670, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %672 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %673 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %671, <32 x i32> %convolved673.sroa.78.6.us.us, <32 x i32> %672, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %674 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %669, <1 x i32> zeroinitializer, <32 x i32> %673, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %675 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %668, <32 x i32> %674, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %676 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %677 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %678 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.63.6.us.us, <32 x i32> %677, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %679 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %680 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %678, <32 x i32> %convolved673.sroa.63.6.us.us, <32 x i32> %679, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %681 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %676, <1 x i32> zeroinitializer, <32 x i32> %680, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %682 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %681, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %683 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %684 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %685 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.63.6.us.us, <32 x i32> %684, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %686 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %687 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %685, <32 x i32> %convolved673.sroa.63.6.us.us, <32 x i32> %686, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %688 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %683, <1 x i32> zeroinitializer, <32 x i32> %687, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %689 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %682, <32 x i32> %688, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %690 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %675, <32 x i32> %689, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %691 = call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %661, <64 x i16> %690, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0) #11
  %692 = call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %691, <128 x i16> %207, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0) #11
  %693 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl(<128 x i16> %692, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0) #11
  %694 = call <128 x i8> @llvm.hydride.hexagon_V6_vpackwuh_sat_128B_dsl(<64 x i16> %632, <64 x i16> %693, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 0, i32 16, i32 1, i32 64, i32 0, i32 16, i32 1, i32 8, i32 0) #11
  %695 = call <128 x i8> @llvm.hydride.hexagon_V6_vminuh_128B_dsl(<128 x i8> %209, <128 x i8> %694, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0) #11
  %696 = call <128 x i8> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl(<128 x i8> %211, <128 x i8> %695, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0) #11
  %697 = shl nsw i32 %output.s0.c.co.us.us, 7
  %698 = add i32 %697, %t877.us.us
  %699 = add i32 %698, %1388
  %700 = getelementptr inbounds i8, i8* %23, i32 %699
  %701 = bitcast i8* %700 to <128 x i8>*
  store <128 x i8> %696, <128 x i8>* %701, align 1, !tbaa !111
  %702 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %703 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %704 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.103.6.us.us, <32 x i32> %703, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %705 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %706 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %704, <32 x i32> %convolved673.sroa.103.6.us.us, <32 x i32> %705, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %707 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %702, <1 x i32> zeroinitializer, <32 x i32> %706, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %708 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %707, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %709 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %710 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %711 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.103.6.us.us, <32 x i32> %710, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %712 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %713 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %711, <32 x i32> %convolved673.sroa.103.6.us.us, <32 x i32> %712, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %714 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %709, <1 x i32> zeroinitializer, <32 x i32> %713, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %715 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %708, <32 x i32> %714, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %716 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %717 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %718 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.93.6.us.us, <32 x i32> %717, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %719 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %720 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %718, <32 x i32> %convolved673.sroa.93.6.us.us, <32 x i32> %719, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %721 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %716, <1 x i32> zeroinitializer, <32 x i32> %720, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %722 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %721, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %723 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %724 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %725 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.93.6.us.us, <32 x i32> %724, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %726 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %727 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %725, <32 x i32> %convolved673.sroa.93.6.us.us, <32 x i32> %726, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %728 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %723, <1 x i32> zeroinitializer, <32 x i32> %727, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %729 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %722, <32 x i32> %728, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %730 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %715, <32 x i32> %729, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %731 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %732 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %733 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.123.6.us.us, <32 x i32> %732, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %734 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %735 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %733, <32 x i32> %convolved673.sroa.123.6.us.us, <32 x i32> %734, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %736 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %731, <1 x i32> zeroinitializer, <32 x i32> %735, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %737 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %736, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %738 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %739 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %740 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.123.6.us.us, <32 x i32> %739, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %741 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %742 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %740, <32 x i32> %convolved673.sroa.123.6.us.us, <32 x i32> %741, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %743 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %738, <1 x i32> zeroinitializer, <32 x i32> %742, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %744 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %737, <32 x i32> %743, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %745 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %746 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %747 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.113.6.us.us, <32 x i32> %746, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %748 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %749 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %747, <32 x i32> %convolved673.sroa.113.6.us.us, <32 x i32> %748, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %750 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %745, <1 x i32> zeroinitializer, <32 x i32> %749, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %751 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %750, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %752 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %753 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %754 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.113.6.us.us, <32 x i32> %753, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %755 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %756 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %754, <32 x i32> %convolved673.sroa.113.6.us.us, <32 x i32> %755, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %757 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %752, <1 x i32> zeroinitializer, <32 x i32> %756, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %758 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %751, <32 x i32> %757, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %759 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %744, <32 x i32> %758, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %760 = call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %730, <64 x i16> %759, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0) #11
  %761 = call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %760, <128 x i16> %207, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0) #11
  %762 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %761, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0) #11
  %763 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %764 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %765 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.103.6.us.us, <32 x i32> %764, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %766 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %767 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %765, <32 x i32> %convolved673.sroa.103.6.us.us, <32 x i32> %766, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %768 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %763, <1 x i32> zeroinitializer, <32 x i32> %767, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %769 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %768, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %770 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %771 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %772 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.103.6.us.us, <32 x i32> %771, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %773 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %774 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %772, <32 x i32> %convolved673.sroa.103.6.us.us, <32 x i32> %773, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %775 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %770, <1 x i32> zeroinitializer, <32 x i32> %774, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %776 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %769, <32 x i32> %775, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %777 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %778 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %779 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.93.6.us.us, <32 x i32> %778, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %780 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %781 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %779, <32 x i32> %convolved673.sroa.93.6.us.us, <32 x i32> %780, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %782 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %777, <1 x i32> zeroinitializer, <32 x i32> %781, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %783 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %782, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %784 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %785 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %786 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.93.6.us.us, <32 x i32> %785, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %787 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %788 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %786, <32 x i32> %convolved673.sroa.93.6.us.us, <32 x i32> %787, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %789 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %784, <1 x i32> zeroinitializer, <32 x i32> %788, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %790 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %783, <32 x i32> %789, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %791 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %776, <32 x i32> %790, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %792 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %793 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %794 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.123.6.us.us, <32 x i32> %793, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %795 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %796 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %794, <32 x i32> %convolved673.sroa.123.6.us.us, <32 x i32> %795, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %797 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %792, <1 x i32> zeroinitializer, <32 x i32> %796, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %798 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %797, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %799 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %800 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %801 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.123.6.us.us, <32 x i32> %800, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %802 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %803 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %801, <32 x i32> %convolved673.sroa.123.6.us.us, <32 x i32> %802, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %804 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %799, <1 x i32> zeroinitializer, <32 x i32> %803, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %805 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %798, <32 x i32> %804, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %806 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %807 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %808 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.113.6.us.us, <32 x i32> %807, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %809 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %810 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %808, <32 x i32> %convolved673.sroa.113.6.us.us, <32 x i32> %809, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %811 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %806, <1 x i32> zeroinitializer, <32 x i32> %810, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %812 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %811, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %813 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %814 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %815 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.113.6.us.us, <32 x i32> %814, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %816 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %817 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %815, <32 x i32> %convolved673.sroa.113.6.us.us, <32 x i32> %816, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %818 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %813, <1 x i32> zeroinitializer, <32 x i32> %817, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %819 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %812, <32 x i32> %818, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %820 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %805, <32 x i32> %819, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %821 = call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %791, <64 x i16> %820, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0) #11
  %822 = call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %821, <128 x i16> %207, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0) #11
  %823 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl(<128 x i16> %822, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0) #11
  %824 = call <128 x i8> @llvm.hydride.hexagon_V6_vpackwuh_sat_128B_dsl(<64 x i16> %762, <64 x i16> %823, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 0, i32 16, i32 1, i32 64, i32 0, i32 16, i32 1, i32 8, i32 0) #11
  %825 = call <128 x i8> @llvm.hydride.hexagon_V6_vminuh_128B_dsl(<128 x i8> %209, <128 x i8> %824, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0) #11
  %826 = call <128 x i8> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl(<128 x i8> %211, <128 x i8> %825, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0) #11
  %827 = add i32 %698, %1389
  %828 = getelementptr inbounds i8, i8* %23, i32 %827
  %829 = bitcast i8* %828 to <128 x i8>*
  store <128 x i8> %826, <128 x i8>* %829, align 1, !tbaa !111
  %830 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %831 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %832 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.138.6.us.us, <32 x i32> %831, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %833 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %834 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %832, <32 x i32> %convolved673.sroa.138.6.us.us, <32 x i32> %833, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %835 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %830, <1 x i32> zeroinitializer, <32 x i32> %834, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %836 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %835, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %837 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %838 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %839 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.138.6.us.us, <32 x i32> %838, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %840 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %841 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %839, <32 x i32> %convolved673.sroa.138.6.us.us, <32 x i32> %840, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %842 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %837, <1 x i32> zeroinitializer, <32 x i32> %841, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %843 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %836, <32 x i32> %842, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %844 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %845 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %846 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.133.6.us.us, <32 x i32> %845, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %847 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %848 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %846, <32 x i32> %convolved673.sroa.133.6.us.us, <32 x i32> %847, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %849 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %844, <1 x i32> zeroinitializer, <32 x i32> %848, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %850 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %849, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %851 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %852 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %853 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.133.6.us.us, <32 x i32> %852, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %854 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %855 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %853, <32 x i32> %convolved673.sroa.133.6.us.us, <32 x i32> %854, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %856 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %851, <1 x i32> zeroinitializer, <32 x i32> %855, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %857 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %850, <32 x i32> %856, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %858 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %843, <32 x i32> %857, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %859 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %860 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %861 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.148.6.us.us, <32 x i32> %860, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %862 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %863 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %861, <32 x i32> %convolved673.sroa.148.6.us.us, <32 x i32> %862, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %864 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %859, <1 x i32> zeroinitializer, <32 x i32> %863, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %865 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %864, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %866 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %867 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %868 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.148.6.us.us, <32 x i32> %867, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %869 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %870 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %868, <32 x i32> %convolved673.sroa.148.6.us.us, <32 x i32> %869, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %871 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %866, <1 x i32> zeroinitializer, <32 x i32> %870, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %872 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %865, <32 x i32> %871, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %873 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %874 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %875 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.143.6.us.us, <32 x i32> %874, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %876 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %877 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %875, <32 x i32> %convolved673.sroa.143.6.us.us, <32 x i32> %876, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %878 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %873, <1 x i32> zeroinitializer, <32 x i32> %877, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %879 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %878, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %880 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %881 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %882 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.143.6.us.us, <32 x i32> %881, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %883 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %884 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %882, <32 x i32> %convolved673.sroa.143.6.us.us, <32 x i32> %883, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %885 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %880, <1 x i32> zeroinitializer, <32 x i32> %884, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %886 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %879, <32 x i32> %885, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %887 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %872, <32 x i32> %886, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %888 = call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %858, <64 x i16> %887, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0) #11
  %889 = call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %888, <128 x i16> %207, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0) #11
  %890 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %889, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0) #11
  %891 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %892 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %893 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.138.6.us.us, <32 x i32> %892, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %894 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %895 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %893, <32 x i32> %convolved673.sroa.138.6.us.us, <32 x i32> %894, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %896 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %891, <1 x i32> zeroinitializer, <32 x i32> %895, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %897 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %896, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %898 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %899 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %900 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.138.6.us.us, <32 x i32> %899, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %901 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %902 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %900, <32 x i32> %convolved673.sroa.138.6.us.us, <32 x i32> %901, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %903 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %898, <1 x i32> zeroinitializer, <32 x i32> %902, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %904 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %897, <32 x i32> %903, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %905 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %906 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %907 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.133.6.us.us, <32 x i32> %906, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %908 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %909 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %907, <32 x i32> %convolved673.sroa.133.6.us.us, <32 x i32> %908, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %910 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %905, <1 x i32> zeroinitializer, <32 x i32> %909, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %911 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %910, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %912 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %913 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %914 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.133.6.us.us, <32 x i32> %913, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %915 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %916 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %914, <32 x i32> %convolved673.sroa.133.6.us.us, <32 x i32> %915, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %917 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %912, <1 x i32> zeroinitializer, <32 x i32> %916, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %918 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %911, <32 x i32> %917, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %919 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %904, <32 x i32> %918, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %920 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %921 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %922 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.148.6.us.us, <32 x i32> %921, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %923 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %924 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %922, <32 x i32> %convolved673.sroa.148.6.us.us, <32 x i32> %923, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %925 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %920, <1 x i32> zeroinitializer, <32 x i32> %924, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %926 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %925, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %927 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %928 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %929 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.148.6.us.us, <32 x i32> %928, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %930 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %931 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %929, <32 x i32> %convolved673.sroa.148.6.us.us, <32 x i32> %930, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %932 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %927, <1 x i32> zeroinitializer, <32 x i32> %931, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %933 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %926, <32 x i32> %932, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %934 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %935 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %936 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.143.6.us.us, <32 x i32> %935, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %937 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %938 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %936, <32 x i32> %convolved673.sroa.143.6.us.us, <32 x i32> %937, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %939 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %934, <1 x i32> zeroinitializer, <32 x i32> %938, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %940 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %939, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %941 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %942 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %943 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.143.6.us.us, <32 x i32> %942, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %944 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %945 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %943, <32 x i32> %convolved673.sroa.143.6.us.us, <32 x i32> %944, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %946 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %941, <1 x i32> zeroinitializer, <32 x i32> %945, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %947 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %940, <32 x i32> %946, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %948 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %933, <32 x i32> %947, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %949 = call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %919, <64 x i16> %948, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0) #11
  %950 = call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %949, <128 x i16> %207, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0) #11
  %951 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl(<128 x i16> %950, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0) #11
  %952 = call <128 x i8> @llvm.hydride.hexagon_V6_vpackwuh_sat_128B_dsl(<64 x i16> %890, <64 x i16> %951, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 0, i32 16, i32 1, i32 64, i32 0, i32 16, i32 1, i32 8, i32 0) #11
  %953 = call <128 x i8> @llvm.hydride.hexagon_V6_vminuh_128B_dsl(<128 x i8> %209, <128 x i8> %952, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0) #11
  %954 = call <128 x i8> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl(<128 x i8> %211, <128 x i8> %953, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0) #11
  %955 = add i32 %698, %1390
  %956 = getelementptr inbounds i8, i8* %23, i32 %955
  %957 = bitcast i8* %956 to <128 x i8>*
  store <128 x i8> %954, <128 x i8>* %957, align 1, !tbaa !111
  %958 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %959 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %960 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.158.6.us.us, <32 x i32> %959, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %961 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %962 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %960, <32 x i32> %convolved673.sroa.158.6.us.us, <32 x i32> %961, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %963 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %958, <1 x i32> zeroinitializer, <32 x i32> %962, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %964 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %963, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %965 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %966 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %967 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.158.6.us.us, <32 x i32> %966, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %968 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %969 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %967, <32 x i32> %convolved673.sroa.158.6.us.us, <32 x i32> %968, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %970 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %965, <1 x i32> zeroinitializer, <32 x i32> %969, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %971 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %964, <32 x i32> %970, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %972 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %973 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %974 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.153.6.us.us, <32 x i32> %973, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %975 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %976 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %974, <32 x i32> %convolved673.sroa.153.6.us.us, <32 x i32> %975, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %977 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %972, <1 x i32> zeroinitializer, <32 x i32> %976, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %978 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %977, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %979 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %980 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %981 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.153.6.us.us, <32 x i32> %980, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %982 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %983 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %981, <32 x i32> %convolved673.sroa.153.6.us.us, <32 x i32> %982, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %984 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %979, <1 x i32> zeroinitializer, <32 x i32> %983, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %985 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %978, <32 x i32> %984, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %986 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %971, <32 x i32> %985, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %987 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %988 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %989 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.168.6.us.us, <32 x i32> %988, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %990 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %991 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %989, <32 x i32> %convolved673.sroa.168.6.us.us, <32 x i32> %990, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %992 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %987, <1 x i32> zeroinitializer, <32 x i32> %991, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %993 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %992, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %994 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %995 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %996 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.168.6.us.us, <32 x i32> %995, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %997 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %998 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %996, <32 x i32> %convolved673.sroa.168.6.us.us, <32 x i32> %997, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %999 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %994, <1 x i32> zeroinitializer, <32 x i32> %998, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1000 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %993, <32 x i32> %999, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1001 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1002 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1003 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.163.6.us.us, <32 x i32> %1002, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1004 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1005 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1003, <32 x i32> %convolved673.sroa.163.6.us.us, <32 x i32> %1004, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1006 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1001, <1 x i32> zeroinitializer, <32 x i32> %1005, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1007 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1006, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1008 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1009 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1010 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.163.6.us.us, <32 x i32> %1009, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1011 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1012 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1010, <32 x i32> %convolved673.sroa.163.6.us.us, <32 x i32> %1011, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1013 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1008, <1 x i32> zeroinitializer, <32 x i32> %1012, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1014 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1007, <32 x i32> %1013, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1015 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %1000, <32 x i32> %1014, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %1016 = call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %986, <64 x i16> %1015, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0) #11
  %1017 = call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %1016, <128 x i16> %207, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0) #11
  %1018 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %1017, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0) #11
  %1019 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1020 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1021 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.158.6.us.us, <32 x i32> %1020, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1022 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1023 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1021, <32 x i32> %convolved673.sroa.158.6.us.us, <32 x i32> %1022, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1024 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1019, <1 x i32> zeroinitializer, <32 x i32> %1023, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1025 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1024, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1026 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1027 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1028 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.158.6.us.us, <32 x i32> %1027, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1029 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1030 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1028, <32 x i32> %convolved673.sroa.158.6.us.us, <32 x i32> %1029, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1031 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1026, <1 x i32> zeroinitializer, <32 x i32> %1030, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1032 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1025, <32 x i32> %1031, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1033 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1034 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1035 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.153.6.us.us, <32 x i32> %1034, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1036 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1037 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1035, <32 x i32> %convolved673.sroa.153.6.us.us, <32 x i32> %1036, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1038 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1033, <1 x i32> zeroinitializer, <32 x i32> %1037, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1039 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1038, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1040 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1041 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1042 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.153.6.us.us, <32 x i32> %1041, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1043 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1044 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1042, <32 x i32> %convolved673.sroa.153.6.us.us, <32 x i32> %1043, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1045 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1040, <1 x i32> zeroinitializer, <32 x i32> %1044, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1046 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1039, <32 x i32> %1045, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1047 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %1032, <32 x i32> %1046, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %1048 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1049 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1050 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.168.6.us.us, <32 x i32> %1049, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1051 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1052 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1050, <32 x i32> %convolved673.sroa.168.6.us.us, <32 x i32> %1051, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1053 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1048, <1 x i32> zeroinitializer, <32 x i32> %1052, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1054 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1053, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1055 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1056 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1057 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.168.6.us.us, <32 x i32> %1056, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1058 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1059 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1057, <32 x i32> %convolved673.sroa.168.6.us.us, <32 x i32> %1058, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1060 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1055, <1 x i32> zeroinitializer, <32 x i32> %1059, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1061 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1054, <32 x i32> %1060, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1062 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1063 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1064 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.163.6.us.us, <32 x i32> %1063, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1065 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1066 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1064, <32 x i32> %convolved673.sroa.163.6.us.us, <32 x i32> %1065, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1067 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1062, <1 x i32> zeroinitializer, <32 x i32> %1066, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1068 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1067, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1069 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1070 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1071 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.163.6.us.us, <32 x i32> %1070, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1072 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1073 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1071, <32 x i32> %convolved673.sroa.163.6.us.us, <32 x i32> %1072, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1074 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1069, <1 x i32> zeroinitializer, <32 x i32> %1073, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1075 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1068, <32 x i32> %1074, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1076 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %1061, <32 x i32> %1075, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %1077 = call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %1047, <64 x i16> %1076, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0) #11
  %1078 = call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %1077, <128 x i16> %207, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0) #11
  %1079 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl(<128 x i16> %1078, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0) #11
  %1080 = call <128 x i8> @llvm.hydride.hexagon_V6_vpackwuh_sat_128B_dsl(<64 x i16> %1018, <64 x i16> %1079, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 0, i32 16, i32 1, i32 64, i32 0, i32 16, i32 1, i32 8, i32 0) #11
  %1081 = call <128 x i8> @llvm.hydride.hexagon_V6_vminuh_128B_dsl(<128 x i8> %209, <128 x i8> %1080, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0) #11
  %1082 = call <128 x i8> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl(<128 x i8> %211, <128 x i8> %1081, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0) #11
  %1083 = add i32 %698, %1391
  %1084 = getelementptr inbounds i8, i8* %23, i32 %1083
  %1085 = bitcast i8* %1084 to <128 x i8>*
  store <128 x i8> %1082, <128 x i8>* %1085, align 1, !tbaa !111
  %1086 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1087 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1088 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.178.6.us.us, <32 x i32> %1087, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1089 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1090 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1088, <32 x i32> %convolved673.sroa.178.6.us.us, <32 x i32> %1089, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1091 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1086, <1 x i32> zeroinitializer, <32 x i32> %1090, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1092 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1091, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1093 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1094 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1095 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.178.6.us.us, <32 x i32> %1094, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1096 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1097 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1095, <32 x i32> %convolved673.sroa.178.6.us.us, <32 x i32> %1096, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1098 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1093, <1 x i32> zeroinitializer, <32 x i32> %1097, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1099 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1092, <32 x i32> %1098, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1100 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1101 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1102 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.173.6.us.us, <32 x i32> %1101, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1103 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1104 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1102, <32 x i32> %convolved673.sroa.173.6.us.us, <32 x i32> %1103, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1105 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1100, <1 x i32> zeroinitializer, <32 x i32> %1104, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1106 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1105, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1107 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1108 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1109 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.173.6.us.us, <32 x i32> %1108, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1110 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1111 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1109, <32 x i32> %convolved673.sroa.173.6.us.us, <32 x i32> %1110, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1112 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1107, <1 x i32> zeroinitializer, <32 x i32> %1111, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1113 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1106, <32 x i32> %1112, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1114 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %1099, <32 x i32> %1113, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %1115 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1116 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1117 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.188.6.us.us, <32 x i32> %1116, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1118 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1119 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1117, <32 x i32> %convolved673.sroa.188.6.us.us, <32 x i32> %1118, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1120 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1115, <1 x i32> zeroinitializer, <32 x i32> %1119, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1121 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1120, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1122 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1123 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1124 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.188.6.us.us, <32 x i32> %1123, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1125 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1126 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1124, <32 x i32> %convolved673.sroa.188.6.us.us, <32 x i32> %1125, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1127 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1122, <1 x i32> zeroinitializer, <32 x i32> %1126, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1128 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1121, <32 x i32> %1127, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1129 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1130 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1131 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.183.6.us.us, <32 x i32> %1130, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1132 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1133 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1131, <32 x i32> %convolved673.sroa.183.6.us.us, <32 x i32> %1132, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1134 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1129, <1 x i32> zeroinitializer, <32 x i32> %1133, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1135 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1134, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1136 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1137 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1138 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.183.6.us.us, <32 x i32> %1137, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1139 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1140 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1138, <32 x i32> %convolved673.sroa.183.6.us.us, <32 x i32> %1139, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1141 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1136, <1 x i32> zeroinitializer, <32 x i32> %1140, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1142 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1135, <32 x i32> %1141, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1143 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %1128, <32 x i32> %1142, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %1144 = call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %1114, <64 x i16> %1143, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0) #11
  %1145 = call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %1144, <128 x i16> %207, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0) #11
  %1146 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %1145, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0) #11
  %1147 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1148 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1149 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.178.6.us.us, <32 x i32> %1148, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1150 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1151 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1149, <32 x i32> %convolved673.sroa.178.6.us.us, <32 x i32> %1150, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1152 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1147, <1 x i32> zeroinitializer, <32 x i32> %1151, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1153 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1152, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1154 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1155 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1156 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.178.6.us.us, <32 x i32> %1155, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1157 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1158 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1156, <32 x i32> %convolved673.sroa.178.6.us.us, <32 x i32> %1157, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1159 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1154, <1 x i32> zeroinitializer, <32 x i32> %1158, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1160 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1153, <32 x i32> %1159, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1161 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1162 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1163 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.173.6.us.us, <32 x i32> %1162, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1164 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1165 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1163, <32 x i32> %convolved673.sroa.173.6.us.us, <32 x i32> %1164, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1166 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1161, <1 x i32> zeroinitializer, <32 x i32> %1165, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1167 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1166, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1168 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1169 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1170 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.173.6.us.us, <32 x i32> %1169, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1171 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1172 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1170, <32 x i32> %convolved673.sroa.173.6.us.us, <32 x i32> %1171, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1173 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1168, <1 x i32> zeroinitializer, <32 x i32> %1172, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1174 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1167, <32 x i32> %1173, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1175 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %1160, <32 x i32> %1174, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %1176 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1177 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1178 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.188.6.us.us, <32 x i32> %1177, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1179 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1180 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1178, <32 x i32> %convolved673.sroa.188.6.us.us, <32 x i32> %1179, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1181 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1176, <1 x i32> zeroinitializer, <32 x i32> %1180, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1182 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1181, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1183 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1184 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1185 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.188.6.us.us, <32 x i32> %1184, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1186 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1187 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1185, <32 x i32> %convolved673.sroa.188.6.us.us, <32 x i32> %1186, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1188 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1183, <1 x i32> zeroinitializer, <32 x i32> %1187, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1189 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1182, <32 x i32> %1188, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1190 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1191 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1192 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.183.6.us.us, <32 x i32> %1191, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1193 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1194 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1192, <32 x i32> %convolved673.sroa.183.6.us.us, <32 x i32> %1193, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1195 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1190, <1 x i32> zeroinitializer, <32 x i32> %1194, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1196 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1195, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1197 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1198 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1199 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.183.6.us.us, <32 x i32> %1198, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1200 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1201 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1199, <32 x i32> %convolved673.sroa.183.6.us.us, <32 x i32> %1200, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1202 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1197, <1 x i32> zeroinitializer, <32 x i32> %1201, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1203 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1196, <32 x i32> %1202, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1204 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %1189, <32 x i32> %1203, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %1205 = call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %1175, <64 x i16> %1204, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0) #11
  %1206 = call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %1205, <128 x i16> %207, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0) #11
  %1207 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl(<128 x i16> %1206, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0) #11
  %1208 = call <128 x i8> @llvm.hydride.hexagon_V6_vpackwuh_sat_128B_dsl(<64 x i16> %1146, <64 x i16> %1207, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 0, i32 16, i32 1, i32 64, i32 0, i32 16, i32 1, i32 8, i32 0) #11
  %1209 = call <128 x i8> @llvm.hydride.hexagon_V6_vminuh_128B_dsl(<128 x i8> %209, <128 x i8> %1208, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0) #11
  %1210 = call <128 x i8> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl(<128 x i8> %211, <128 x i8> %1209, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0) #11
  %1211 = add i32 %698, %1392
  %1212 = getelementptr inbounds i8, i8* %23, i32 %1211
  %1213 = bitcast i8* %1212 to <128 x i8>*
  store <128 x i8> %1210, <128 x i8>* %1213, align 1, !tbaa !111
  %1214 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1215 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1216 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.198.6.us.us, <32 x i32> %1215, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1217 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1218 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1216, <32 x i32> %convolved673.sroa.198.6.us.us, <32 x i32> %1217, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1219 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1214, <1 x i32> zeroinitializer, <32 x i32> %1218, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1220 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1219, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1221 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1222 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1223 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.198.6.us.us, <32 x i32> %1222, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1224 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1225 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1223, <32 x i32> %convolved673.sroa.198.6.us.us, <32 x i32> %1224, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1226 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1221, <1 x i32> zeroinitializer, <32 x i32> %1225, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1227 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1220, <32 x i32> %1226, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1228 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1229 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1230 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.193.6.us.us, <32 x i32> %1229, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1231 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1232 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1230, <32 x i32> %convolved673.sroa.193.6.us.us, <32 x i32> %1231, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1233 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1228, <1 x i32> zeroinitializer, <32 x i32> %1232, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1234 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1233, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1235 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1236 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1237 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.193.6.us.us, <32 x i32> %1236, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1238 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1239 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1237, <32 x i32> %convolved673.sroa.193.6.us.us, <32 x i32> %1238, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1240 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1235, <1 x i32> zeroinitializer, <32 x i32> %1239, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1241 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1234, <32 x i32> %1240, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1242 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %1227, <32 x i32> %1241, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %1243 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1244 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1245 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.208.6.us.us, <32 x i32> %1244, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1246 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1247 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1245, <32 x i32> %convolved673.sroa.208.6.us.us, <32 x i32> %1246, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1248 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1243, <1 x i32> zeroinitializer, <32 x i32> %1247, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1249 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1248, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1250 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1251 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1252 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.208.6.us.us, <32 x i32> %1251, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1253 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1254 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1252, <32 x i32> %convolved673.sroa.208.6.us.us, <32 x i32> %1253, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1255 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1250, <1 x i32> zeroinitializer, <32 x i32> %1254, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1256 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1249, <32 x i32> %1255, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1257 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1258 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1259 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.203.6.us.us, <32 x i32> %1258, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1260 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1261 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1259, <32 x i32> %convolved673.sroa.203.6.us.us, <32 x i32> %1260, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1262 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1257, <1 x i32> zeroinitializer, <32 x i32> %1261, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1263 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1262, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1264 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1265 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1266 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.203.6.us.us, <32 x i32> %1265, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1267 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1268 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1266, <32 x i32> %convolved673.sroa.203.6.us.us, <32 x i32> %1267, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1269 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1264, <1 x i32> zeroinitializer, <32 x i32> %1268, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1270 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1263, <32 x i32> %1269, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1271 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %1256, <32 x i32> %1270, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %1272 = call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %1242, <64 x i16> %1271, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0) #11
  %1273 = call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %1272, <128 x i16> %207, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0) #11
  %1274 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %1273, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0) #11
  %1275 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1276 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1277 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.198.6.us.us, <32 x i32> %1276, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1278 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1279 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1277, <32 x i32> %convolved673.sroa.198.6.us.us, <32 x i32> %1278, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1280 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1275, <1 x i32> zeroinitializer, <32 x i32> %1279, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1281 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1280, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1282 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1283 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1284 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.198.6.us.us, <32 x i32> %1283, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1285 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1286 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1284, <32 x i32> %convolved673.sroa.198.6.us.us, <32 x i32> %1285, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1287 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1282, <1 x i32> zeroinitializer, <32 x i32> %1286, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1288 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1281, <32 x i32> %1287, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1289 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1290 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1291 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.193.6.us.us, <32 x i32> %1290, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1292 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1293 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1291, <32 x i32> %convolved673.sroa.193.6.us.us, <32 x i32> %1292, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1294 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1289, <1 x i32> zeroinitializer, <32 x i32> %1293, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1295 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1294, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1296 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1297 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1298 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.193.6.us.us, <32 x i32> %1297, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1299 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1300 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1298, <32 x i32> %convolved673.sroa.193.6.us.us, <32 x i32> %1299, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1301 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1296, <1 x i32> zeroinitializer, <32 x i32> %1300, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1302 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1295, <32 x i32> %1301, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1303 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %1288, <32 x i32> %1302, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %1304 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1305 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1306 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.208.6.us.us, <32 x i32> %1305, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1307 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1308 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1306, <32 x i32> %convolved673.sroa.208.6.us.us, <32 x i32> %1307, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1309 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1304, <1 x i32> zeroinitializer, <32 x i32> %1308, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1310 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1309, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1311 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1312 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1313 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.208.6.us.us, <32 x i32> %1312, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1314 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1315 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1313, <32 x i32> %convolved673.sroa.208.6.us.us, <32 x i32> %1314, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1316 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1311, <1 x i32> zeroinitializer, <32 x i32> %1315, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1317 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1310, <32 x i32> %1316, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1318 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %214, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1319 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1320 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.203.6.us.us, <32 x i32> %1319, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1321 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1322 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1320, <32 x i32> %convolved673.sroa.203.6.us.us, <32 x i32> %1321, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1323 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1318, <1 x i32> zeroinitializer, <32 x i32> %1322, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1324 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1323, <32 x i32> %203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1325 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %213, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1326 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1327 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.203.6.us.us, <32 x i32> %1326, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1328 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %212, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1329 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1327, <32 x i32> %convolved673.sroa.203.6.us.us, <32 x i32> %1328, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1330 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1325, <1 x i32> zeroinitializer, <32 x i32> %1329, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1331 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1324, <32 x i32> %1330, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1332 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %1317, <32 x i32> %1331, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %1333 = call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %1303, <64 x i16> %1332, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0) #11
  %1334 = call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %1333, <128 x i16> %207, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0) #11
  %1335 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl(<128 x i16> %1334, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0) #11
  %1336 = call <128 x i8> @llvm.hydride.hexagon_V6_vpackwuh_sat_128B_dsl(<64 x i16> %1274, <64 x i16> %1335, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 0, i32 16, i32 1, i32 64, i32 0, i32 16, i32 1, i32 8, i32 0) #11
  %1337 = call <128 x i8> @llvm.hydride.hexagon_V6_vminuh_128B_dsl(<128 x i8> %209, <128 x i8> %1336, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0) #11
  %1338 = call <128 x i8> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl(<128 x i8> %211, <128 x i8> %1337, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0) #11
  %1339 = add i32 %698, %1393
  %1340 = getelementptr inbounds i8, i8* %23, i32 %1339
  %1341 = bitcast i8* %1340 to <128 x i8>*
  store <128 x i8> %1338, <128 x i8>* %1341, align 1, !tbaa !111
  %1342 = add nuw nsw i32 %output.s0.c.co.us.us, 1
  %.not733.us.us = icmp eq i32 %1342, %200
  br i1 %.not733.us.us, label %"end for output.s0.c.co.us.us", label %"for output.s0.c.co.us.us"

"end for output.s0.c.co.us.us":                   ; preds = %"consume convolved.us.us", %"consume sum_input.us.us"
  %1343 = add nuw nsw i32 %output.s0.x.xo.us.us, 1
  %.not732.us.us = icmp eq i32 %1343, %195
  br i1 %.not732.us.us, label %"end for output.s0.x.xo.loopexit.us.us", label %"for output.s0.x.xo.us.us"

"for convolved.s1.r19$z.r124.preheader.us.us":    ; preds = %"for convolved.s1.r19$x.us.us"
  %t919.s.us.us = add nsw i32 %435, %1387
  %t924.s.us.us = add nsw i32 %435, %1386
  %t925.s.us.us = add nsw i32 %435, %1384
  %t926.s.us.us = add nsw i32 %435, %1382
  %t927.s.us.us = add nsw i32 %435, %1380
  %t928.s.us.us = add nsw i32 %435, %1378
  %1344 = mul nsw i32 %t919.s.us.us, %17
  %1345 = add i32 %t920.us.us, %1359
  %1346 = add i32 %t920.us.us, %1357
  %1347 = add i32 %t920.us.us, %1355
  %1348 = mul nsw i32 %t924.s.us.us, %17
  %1349 = mul nsw i32 %t925.s.us.us, %17
  %1350 = mul nsw i32 %t926.s.us.us, %17
  %1351 = mul nsw i32 %t927.s.us.us, %17
  %1352 = mul nsw i32 %t928.s.us.us, %17
  br label %"for convolved.s1.r19$z.r124.us.us"

"for convolved.s1.r19$y.preheader.us.us":         ; preds = %after_bb18.us.us
  %1353 = shl nsw i32 %output.s0.c.co.us.us, 2
  %1354 = or i32 %1353, 3
  %1355 = mul nsw i32 %1354, %8
  %1356 = or i32 %1353, 2
  %1357 = mul nsw i32 %1356, %8
  %1358 = or i32 %1353, 1
  %1359 = mul nsw i32 %1358, %8
  %1360 = mul nsw i32 %output.s0.c.co.us.us, %8
  br label %"for convolved.s1.r19$y.us.us"

"for sum_input.s1.r19$x.preheader.us.us":         ; preds = %"for sum_input.s1.r19$y.us.us"
  %1361 = mul nsw i32 %"sum_input.s1.r19$y.us.us", %dilation_y
  %1362 = add nsw i32 %1361, %228
  %1363 = mul nsw i32 %1362, %19
  %t880.us.us = add i32 %223, %1363
  br i1 %218, label %"end for sum_input.s1.r19$x.us.us.loopexit.unr-lcssa", label %"for sum_input.s1.r19$x.us.us"

"for output.s0.c.co.preheader.us.us":             ; preds = %"consume sum_input.us.us"
  %sum_input674.sroa.0.0.vec.extract878.us.us = extractelement <6 x i32> %sum_input674.sroa.0.13.us.us, i32 0
  %1364 = mul nsw i32 %sum_input674.sroa.0.0.vec.extract878.us.us, %168
  %1365 = insertelement <1 x i32> poison, i32 %1364, i32 0
  %sum_input674.sroa.0.4.vec.extract884.us.us = extractelement <6 x i32> %sum_input674.sroa.0.13.us.us, i32 1
  %1366 = mul nsw i32 %sum_input674.sroa.0.4.vec.extract884.us.us, %168
  %1367 = insertelement <1 x i32> poison, i32 %1366, i32 0
  %sum_input674.sroa.0.8.vec.extract890.us.us = extractelement <6 x i32> %sum_input674.sroa.0.13.us.us, i32 2
  %1368 = mul nsw i32 %sum_input674.sroa.0.8.vec.extract890.us.us, %168
  %1369 = insertelement <1 x i32> poison, i32 %1368, i32 0
  %sum_input674.sroa.0.12.vec.extract896.us.us = extractelement <6 x i32> %sum_input674.sroa.0.13.us.us, i32 3
  %1370 = mul nsw i32 %sum_input674.sroa.0.12.vec.extract896.us.us, %168
  %1371 = insertelement <1 x i32> poison, i32 %1370, i32 0
  %sum_input674.sroa.0.16.vec.extract902.us.us = extractelement <6 x i32> %sum_input674.sroa.0.13.us.us, i32 4
  %1372 = mul nsw i32 %sum_input674.sroa.0.16.vec.extract902.us.us, %168
  %1373 = insertelement <1 x i32> poison, i32 %1372, i32 0
  %sum_input674.sroa.0.20.vec.extract908.us.us = extractelement <6 x i32> %sum_input674.sroa.0.13.us.us, i32 5
  %1374 = mul nsw i32 %sum_input674.sroa.0.20.vec.extract908.us.us, %168
  %1375 = insertelement <1 x i32> poison, i32 %1374, i32 0
  %1376 = add nsw i32 %output.s0.x.x.base.s.us.us, %25
  %1377 = add nsw i32 %1376, 5
  %1378 = mul nsw i32 %1377, %stride_x
  %1379 = add nsw i32 %1376, 4
  %1380 = mul nsw i32 %1379, %stride_x
  %1381 = add nsw i32 %1376, 3
  %1382 = mul nsw i32 %1381, %stride_x
  %1383 = add nsw i32 %1376, 2
  %1384 = mul nsw i32 %1383, %stride_x
  %1385 = add nsw i32 %1376, 1
  %1386 = mul nsw i32 %1385, %stride_x
  %1387 = mul nsw i32 %1376, %stride_x
  %1388 = mul nsw i32 %1376, %27
  %1389 = mul nsw i32 %1385, %27
  %1390 = mul nsw i32 %1383, %27
  %1391 = mul nsw i32 %1381, %27
  %1392 = mul nsw i32 %1379, %27
  %1393 = mul nsw i32 %1377, %27
  br label %"for output.s0.c.co.us.us"

"for sum_input.s1.r19$y.preheader.us.us":         ; preds = %then_bb10.us.us
  %1394 = add nsw i32 %output.s0.x.x.base.s.us.us, %25
  %1395 = sub i32 %1394, %16
  br label %"for sum_input.s1.r19$y.us.us"

"for sum_input.s1.r19$y12.preheader.us.us":       ; preds = %next_bb11.us.us
  %1396 = add nsw i32 %output.s0.x.x.base.s.us.us, %25
  %1397 = mul nsw i32 %1396, %stride_x
  br i1 %brmerge1666.demorgan, label %"for sum_input.s1.r19$y12.us.us.us.us", label %"consume sum_input.us.us", !prof !103

"end for output.s0.x.xo.loopexit.us.us":          ; preds = %"end for output.s0.c.co.us.us"
  %1398 = add nuw nsw i32 %output.s0.y.rebased.us.us, 1
  %.not731.us.us = icmp eq i32 %1398, %29
  br i1 %.not731.us.us, label %"end for output.s0.y.rebased.loopexit.us", label %"for output.s0.y.rebased.us.us"

"for sum_input.s1.r19$y12.us.us.us.us":           ; preds = %"for sum_input.s1.r19$y12.preheader.us.us", %"end for sum_input.s1.r19$x16.loopexit.split.us.us.us.us.us"
  %sum_input674.sroa.0.8.us.us.us.us = phi <6 x i32> [ %.lcssa, %"end for sum_input.s1.r19$x16.loopexit.split.us.us.us.us.us" ], [ zeroinitializer, %"for sum_input.s1.r19$y12.preheader.us.us" ]
  %"sum_input.s1.r19$y14.us.us.us.us" = phi i32 [ %1559, %"end for sum_input.s1.r19$x16.loopexit.split.us.us.us.us.us" ], [ 0, %"for sum_input.s1.r19$y12.preheader.us.us" ]
  %1399 = mul nsw i32 %"sum_input.s1.r19$y14.us.us.us.us", %dilation_y
  %t882.s.us.us.us.us = add nsw i32 %1399, %228
  %1400 = mul nsw i32 %t882.s.us.us.us.us, %19
  br label %"for sum_input.s1.r19$x15.us.us.us.us.us"

"for sum_input.s1.r19$x15.us.us.us.us.us":        ; preds = %"end for sum_input.s1.r19$z.r124.loopexit.us.us.us.us.us", %"for sum_input.s1.r19$y12.us.us.us.us"
  %sum_input674.sroa.0.9.us.us.us.us.us = phi <6 x i32> [ %.lcssa, %"end for sum_input.s1.r19$z.r124.loopexit.us.us.us.us.us" ], [ %sum_input674.sroa.0.8.us.us.us.us, %"for sum_input.s1.r19$y12.us.us.us.us" ]
  %"sum_input.s1.r19$x17.us.us.us.us.us" = phi i32 [ %1558, %"end for sum_input.s1.r19$z.r124.loopexit.us.us.us.us.us" ], [ 0, %"for sum_input.s1.r19$y12.us.us.us.us" ]
  %1401 = mul nsw i32 %"sum_input.s1.r19$x17.us.us.us.us.us", %dilation_x
  %t883.s.us.us.us.us.us = add nsw i32 %1401, %1397
  %t1221.us.us.us.us.us = mul nsw i32 %t883.s.us.us.us.us.us, %17
  %1402 = add i32 %t1221.us.us.us.us.us, %1400
  %t884.us.us.us.us.us = sub i32 %1402, %t852
  %1403 = add i32 %t884.us.us.us.us.us, %222
  %t860.us.us.us.us.us = add i32 %1402, %186
  %1404 = sub i32 %t860.us.us.us.us.us, %175
  %t885.us.us.us.us.us = sub i32 %1404, %176
  %1405 = add i32 %t885.us.us.us.us.us, %222
  %1406 = add i32 %1402, %184
  %1407 = sub i32 %1406, %215
  %t886.us.us.us.us.us = sub i32 %1407, %176
  %1408 = add i32 %t886.us.us.us.us.us, %222
  %1409 = add i32 %1402, %183
  %1410 = sub i32 %1409, %215
  %t887.us.us.us.us.us = sub i32 %1410, %176
  %1411 = add i32 %t887.us.us.us.us.us, %222
  %1412 = add i32 %1402, %182
  %1413 = sub i32 %1412, %215
  %t888.us.us.us.us.us = sub i32 %1413, %176
  %1414 = add i32 %t888.us.us.us.us.us, %222
  %1415 = add i32 %1402, %181
  %1416 = sub i32 %1415, %215
  %t889.us.us.us.us.us = sub i32 %1416, %176
  %1417 = add i32 %t889.us.us.us.us.us, %222
  br i1 %217, label %"end for sum_input.s1.r19$z.r124.loopexit.us.us.us.us.us.unr-lcssa", label %"for sum_input.s1.r19$z.r124.us.us.us.us.us"

"for sum_input.s1.r19$z.r124.us.us.us.us.us":     ; preds = %"for sum_input.s1.r19$x15.us.us.us.us.us", %"for sum_input.s1.r19$z.r124.us.us.us.us.us"
  %sum_input674.sroa.0.11.us.us.us.us.us = phi <6 x i32> [ %1510, %"for sum_input.s1.r19$z.r124.us.us.us.us.us" ], [ %sum_input674.sroa.0.9.us.us.us.us.us, %"for sum_input.s1.r19$x15.us.us.us.us.us" ]
  %"sum_input.s1.r19$z.r124.us.us.us.us.us" = phi i32 [ %1511, %"for sum_input.s1.r19$z.r124.us.us.us.us.us" ], [ 0, %"for sum_input.s1.r19$x15.us.us.us.us.us" ]
  %niter1874 = phi i32 [ %niter1874.nsub.1, %"for sum_input.s1.r19$z.r124.us.us.us.us.us" ], [ %unroll_iter1873, %"for sum_input.s1.r19$x15.us.us.us.us.us" ]
  %1418 = shl nsw i32 %"sum_input.s1.r19$z.r124.us.us.us.us.us", 2
  %1419 = add i32 %1403, %1418
  %1420 = getelementptr inbounds i8, i8* %13, i32 %1419
  %1421 = bitcast i8* %1420 to <4 x i8>*
  %1422 = load <4 x i8>, <4 x i8>* %1421, align 4, !tbaa !108
  %1423 = add i32 %1405, %1418
  %1424 = getelementptr inbounds i8, i8* %13, i32 %1423
  %1425 = bitcast i8* %1424 to <4 x i8>*
  %1426 = load <4 x i8>, <4 x i8>* %1425, align 4, !tbaa !108
  %1427 = add i32 %1408, %1418
  %1428 = getelementptr inbounds i8, i8* %13, i32 %1427
  %1429 = bitcast i8* %1428 to <4 x i8>*
  %1430 = load <4 x i8>, <4 x i8>* %1429, align 4, !tbaa !108
  %1431 = add i32 %1411, %1418
  %1432 = getelementptr inbounds i8, i8* %13, i32 %1431
  %1433 = bitcast i8* %1432 to <4 x i8>*
  %1434 = load <4 x i8>, <4 x i8>* %1433, align 4, !tbaa !108
  %1435 = add i32 %1414, %1418
  %1436 = getelementptr inbounds i8, i8* %13, i32 %1435
  %1437 = bitcast i8* %1436 to <4 x i8>*
  %1438 = load <4 x i8>, <4 x i8>* %1437, align 4, !tbaa !108
  %1439 = add i32 %1417, %1418
  %1440 = getelementptr inbounds i8, i8* %13, i32 %1439
  %1441 = bitcast i8* %1440 to <4 x i8>*
  %1442 = load <4 x i8>, <4 x i8>* %1441, align 4, !tbaa !108
  %1443 = shufflevector <4 x i8> %1422, <4 x i8> %1426, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1444 = shufflevector <4 x i8> %1430, <4 x i8> %1434, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1445 = shufflevector <8 x i8> %1443, <8 x i8> %1444, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1446 = shufflevector <4 x i8> %1438, <4 x i8> %1442, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1447 = shufflevector <16 x i8> %1445, <16 x i8> %1446, <24 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %t1223.us.us.us.us.us = zext <24 x i8> %1447 to <24 x i16>
  %1448 = shufflevector <24 x i16> %t1223.us.us.us.us.us, <24 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1449 = bitcast <64 x i16> %1448 to <32 x i32>
  %1450 = call <32 x i32> @llvm.hexagon.V6.vpackeh.128B(<32 x i32> undef, <32 x i32> %1449)
  %1451 = bitcast <32 x i32> %1450 to <64 x i16>
  %1452 = call <32 x i32> @llvm.hexagon.V6.vpackoh.128B(<32 x i32> undef, <32 x i32> %1449)
  %1453 = bitcast <32 x i32> %1452 to <64 x i16>
  %1454 = add <64 x i16> %1453, %1451
  %1455 = shufflevector <64 x i16> %1454, <64 x i16> undef, <12 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11>
  %t1222.us.us.us.us.us = zext <12 x i16> %1455 to <12 x i32>
  %1456 = shufflevector <12 x i32> %t1222.us.us.us.us.us, <12 x i32> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1457 = call <64 x i32> @llvm.hexagon.V6.vdealvdd.128B(<32 x i32> undef, <32 x i32> %1456, i32 -4)
  %1458 = call <32 x i32> @llvm.hexagon.V6.lo.128B(<64 x i32> %1457)
  %1459 = shufflevector <32 x i32> %1458, <32 x i32> undef, <6 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5>
  %1460 = add nsw <6 x i32> %1459, %sum_input674.sroa.0.11.us.us.us.us.us
  %1461 = call <32 x i32> @llvm.hexagon.V6.hi.128B(<64 x i32> %1457)
  %1462 = shufflevector <32 x i32> %1461, <32 x i32> undef, <6 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5>
  %1463 = add nsw <6 x i32> %1460, %1462
  %1464 = shl i32 %"sum_input.s1.r19$z.r124.us.us.us.us.us", 2
  %1465 = or i32 %1464, 4
  %1466 = add i32 %1403, %1465
  %1467 = getelementptr inbounds i8, i8* %13, i32 %1466
  %1468 = bitcast i8* %1467 to <4 x i8>*
  %1469 = load <4 x i8>, <4 x i8>* %1468, align 4, !tbaa !108
  %1470 = add i32 %1405, %1465
  %1471 = getelementptr inbounds i8, i8* %13, i32 %1470
  %1472 = bitcast i8* %1471 to <4 x i8>*
  %1473 = load <4 x i8>, <4 x i8>* %1472, align 4, !tbaa !108
  %1474 = add i32 %1408, %1465
  %1475 = getelementptr inbounds i8, i8* %13, i32 %1474
  %1476 = bitcast i8* %1475 to <4 x i8>*
  %1477 = load <4 x i8>, <4 x i8>* %1476, align 4, !tbaa !108
  %1478 = add i32 %1411, %1465
  %1479 = getelementptr inbounds i8, i8* %13, i32 %1478
  %1480 = bitcast i8* %1479 to <4 x i8>*
  %1481 = load <4 x i8>, <4 x i8>* %1480, align 4, !tbaa !108
  %1482 = add i32 %1414, %1465
  %1483 = getelementptr inbounds i8, i8* %13, i32 %1482
  %1484 = bitcast i8* %1483 to <4 x i8>*
  %1485 = load <4 x i8>, <4 x i8>* %1484, align 4, !tbaa !108
  %1486 = add i32 %1417, %1465
  %1487 = getelementptr inbounds i8, i8* %13, i32 %1486
  %1488 = bitcast i8* %1487 to <4 x i8>*
  %1489 = load <4 x i8>, <4 x i8>* %1488, align 4, !tbaa !108
  %1490 = shufflevector <4 x i8> %1469, <4 x i8> %1473, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1491 = shufflevector <4 x i8> %1477, <4 x i8> %1481, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1492 = shufflevector <8 x i8> %1490, <8 x i8> %1491, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1493 = shufflevector <4 x i8> %1485, <4 x i8> %1489, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1494 = shufflevector <16 x i8> %1492, <16 x i8> %1493, <24 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %t1223.us.us.us.us.us.1 = zext <24 x i8> %1494 to <24 x i16>
  %1495 = shufflevector <24 x i16> %t1223.us.us.us.us.us.1, <24 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1496 = bitcast <64 x i16> %1495 to <32 x i32>
  %1497 = call <32 x i32> @llvm.hexagon.V6.vpackeh.128B(<32 x i32> undef, <32 x i32> %1496)
  %1498 = bitcast <32 x i32> %1497 to <64 x i16>
  %1499 = call <32 x i32> @llvm.hexagon.V6.vpackoh.128B(<32 x i32> undef, <32 x i32> %1496)
  %1500 = bitcast <32 x i32> %1499 to <64 x i16>
  %1501 = add <64 x i16> %1500, %1498
  %1502 = shufflevector <64 x i16> %1501, <64 x i16> undef, <12 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11>
  %t1222.us.us.us.us.us.1 = zext <12 x i16> %1502 to <12 x i32>
  %1503 = shufflevector <12 x i32> %t1222.us.us.us.us.us.1, <12 x i32> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1504 = call <64 x i32> @llvm.hexagon.V6.vdealvdd.128B(<32 x i32> undef, <32 x i32> %1503, i32 -4)
  %1505 = call <32 x i32> @llvm.hexagon.V6.lo.128B(<64 x i32> %1504)
  %1506 = shufflevector <32 x i32> %1505, <32 x i32> undef, <6 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5>
  %1507 = add nsw <6 x i32> %1506, %1463
  %1508 = call <32 x i32> @llvm.hexagon.V6.hi.128B(<64 x i32> %1504)
  %1509 = shufflevector <32 x i32> %1508, <32 x i32> undef, <6 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5>
  %1510 = add nsw <6 x i32> %1507, %1509
  %1511 = add nuw nsw i32 %"sum_input.s1.r19$z.r124.us.us.us.us.us", 2
  %niter1874.nsub.1 = add i32 %niter1874, -2
  %niter1874.ncmp.1 = icmp eq i32 %niter1874.nsub.1, 0
  br i1 %niter1874.ncmp.1, label %"end for sum_input.s1.r19$z.r124.loopexit.us.us.us.us.us.unr-lcssa", label %"for sum_input.s1.r19$z.r124.us.us.us.us.us"

"end for sum_input.s1.r19$z.r124.loopexit.us.us.us.us.us.unr-lcssa": ; preds = %"for sum_input.s1.r19$z.r124.us.us.us.us.us", %"for sum_input.s1.r19$x15.us.us.us.us.us"
  %.lcssa.ph = phi <6 x i32> [ undef, %"for sum_input.s1.r19$x15.us.us.us.us.us" ], [ %1510, %"for sum_input.s1.r19$z.r124.us.us.us.us.us" ]
  %sum_input674.sroa.0.11.us.us.us.us.us.unr = phi <6 x i32> [ %sum_input674.sroa.0.9.us.us.us.us.us, %"for sum_input.s1.r19$x15.us.us.us.us.us" ], [ %1510, %"for sum_input.s1.r19$z.r124.us.us.us.us.us" ]
  %"sum_input.s1.r19$z.r124.us.us.us.us.us.unr" = phi i32 [ 0, %"for sum_input.s1.r19$x15.us.us.us.us.us" ], [ %1511, %"for sum_input.s1.r19$z.r124.us.us.us.us.us" ]
  br i1 %lcmp.mod1872.not, label %"end for sum_input.s1.r19$z.r124.loopexit.us.us.us.us.us", label %"for sum_input.s1.r19$z.r124.us.us.us.us.us.epil"

"for sum_input.s1.r19$z.r124.us.us.us.us.us.epil": ; preds = %"end for sum_input.s1.r19$z.r124.loopexit.us.us.us.us.us.unr-lcssa"
  %1512 = shl nsw i32 %"sum_input.s1.r19$z.r124.us.us.us.us.us.unr", 2
  %1513 = add i32 %1403, %1512
  %1514 = getelementptr inbounds i8, i8* %13, i32 %1513
  %1515 = bitcast i8* %1514 to <4 x i8>*
  %1516 = load <4 x i8>, <4 x i8>* %1515, align 4, !tbaa !108
  %1517 = add i32 %1405, %1512
  %1518 = getelementptr inbounds i8, i8* %13, i32 %1517
  %1519 = bitcast i8* %1518 to <4 x i8>*
  %1520 = load <4 x i8>, <4 x i8>* %1519, align 4, !tbaa !108
  %1521 = add i32 %1408, %1512
  %1522 = getelementptr inbounds i8, i8* %13, i32 %1521
  %1523 = bitcast i8* %1522 to <4 x i8>*
  %1524 = load <4 x i8>, <4 x i8>* %1523, align 4, !tbaa !108
  %1525 = add i32 %1411, %1512
  %1526 = getelementptr inbounds i8, i8* %13, i32 %1525
  %1527 = bitcast i8* %1526 to <4 x i8>*
  %1528 = load <4 x i8>, <4 x i8>* %1527, align 4, !tbaa !108
  %1529 = add i32 %1414, %1512
  %1530 = getelementptr inbounds i8, i8* %13, i32 %1529
  %1531 = bitcast i8* %1530 to <4 x i8>*
  %1532 = load <4 x i8>, <4 x i8>* %1531, align 4, !tbaa !108
  %1533 = add i32 %1417, %1512
  %1534 = getelementptr inbounds i8, i8* %13, i32 %1533
  %1535 = bitcast i8* %1534 to <4 x i8>*
  %1536 = load <4 x i8>, <4 x i8>* %1535, align 4, !tbaa !108
  %1537 = shufflevector <4 x i8> %1516, <4 x i8> %1520, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1538 = shufflevector <4 x i8> %1524, <4 x i8> %1528, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1539 = shufflevector <8 x i8> %1537, <8 x i8> %1538, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1540 = shufflevector <4 x i8> %1532, <4 x i8> %1536, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1541 = shufflevector <16 x i8> %1539, <16 x i8> %1540, <24 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %t1223.us.us.us.us.us.epil = zext <24 x i8> %1541 to <24 x i16>
  %1542 = shufflevector <24 x i16> %t1223.us.us.us.us.us.epil, <24 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1543 = bitcast <64 x i16> %1542 to <32 x i32>
  %1544 = call <32 x i32> @llvm.hexagon.V6.vpackeh.128B(<32 x i32> undef, <32 x i32> %1543)
  %1545 = bitcast <32 x i32> %1544 to <64 x i16>
  %1546 = call <32 x i32> @llvm.hexagon.V6.vpackoh.128B(<32 x i32> undef, <32 x i32> %1543)
  %1547 = bitcast <32 x i32> %1546 to <64 x i16>
  %1548 = add <64 x i16> %1547, %1545
  %1549 = shufflevector <64 x i16> %1548, <64 x i16> undef, <12 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11>
  %t1222.us.us.us.us.us.epil = zext <12 x i16> %1549 to <12 x i32>
  %1550 = shufflevector <12 x i32> %t1222.us.us.us.us.us.epil, <12 x i32> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1551 = call <64 x i32> @llvm.hexagon.V6.vdealvdd.128B(<32 x i32> undef, <32 x i32> %1550, i32 -4)
  %1552 = call <32 x i32> @llvm.hexagon.V6.lo.128B(<64 x i32> %1551)
  %1553 = shufflevector <32 x i32> %1552, <32 x i32> undef, <6 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5>
  %1554 = add nsw <6 x i32> %1553, %sum_input674.sroa.0.11.us.us.us.us.us.unr
  %1555 = call <32 x i32> @llvm.hexagon.V6.hi.128B(<64 x i32> %1551)
  %1556 = shufflevector <32 x i32> %1555, <32 x i32> undef, <6 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5>
  %1557 = add nsw <6 x i32> %1554, %1556
  br label %"end for sum_input.s1.r19$z.r124.loopexit.us.us.us.us.us"

"end for sum_input.s1.r19$z.r124.loopexit.us.us.us.us.us": ; preds = %"end for sum_input.s1.r19$z.r124.loopexit.us.us.us.us.us.unr-lcssa", %"for sum_input.s1.r19$z.r124.us.us.us.us.us.epil"
  %.lcssa = phi <6 x i32> [ %.lcssa.ph, %"end for sum_input.s1.r19$z.r124.loopexit.us.us.us.us.us.unr-lcssa" ], [ %1557, %"for sum_input.s1.r19$z.r124.us.us.us.us.us.epil" ]
  %1558 = add nuw nsw i32 %"sum_input.s1.r19$x17.us.us.us.us.us", 1
  %.not738.us.us.us.us.us = icmp eq i32 %1558, %9
  br i1 %.not738.us.us.us.us.us, label %"end for sum_input.s1.r19$x16.loopexit.split.us.us.us.us.us", label %"for sum_input.s1.r19$x15.us.us.us.us.us"

"end for sum_input.s1.r19$x16.loopexit.split.us.us.us.us.us": ; preds = %"end for sum_input.s1.r19$z.r124.loopexit.us.us.us.us.us"
  %1559 = add nuw nsw i32 %"sum_input.s1.r19$y14.us.us.us.us", 1
  %.not737.us.us.us.us = icmp eq i32 %1559, %11
  br i1 %.not737.us.us.us.us, label %"consume sum_input.us.us", label %"for sum_input.s1.r19$y12.us.us.us.us"

next_bb5:                                         ; preds = %"consume offset_c"
  br i1 %94, label %then_bb91, label %next_bb92

then_bb91:                                        ; preds = %next_bb5
  %1560 = mul nsw i32 %19, %18
  %1561 = mul nsw i32 %22, %20
  %1562 = mul nsw i32 %17, %16
  %1563 = add i32 %1561, %1560
  %t941 = add i32 %1563, %1562
  %1564 = icmp sgt i32 %21, 0
  br i1 %1564, label %"for output.s0.b.rebased93.preheader", label %after_bb3, !prof !96

"for output.s0.b.rebased93.preheader":            ; preds = %then_bb91
  %1565 = mul nsw i32 %17, %stride_x
  %1566 = mul nsw i32 %1565, 7
  %1567 = mul nsw i32 %1565, 6
  %1568 = mul nsw i32 %1565, 5
  %1569 = shl nsw i32 %1565, 2
  %1570 = mul nsw i32 %1565, 3
  %1571 = shl nsw i32 %1565, 1
  %1572 = sub nsw i32 %stride_x, %16
  %1573 = mul nsw i32 %1572, %17
  %1574 = icmp sgt i32 %29, 0
  %.neg1142 = mul i32 %30, %28
  %.neg1143 = mul i32 %27, %25
  %.neg1144 = mul i32 %31, %20
  %reass.add1146 = add i32 %.neg1142, %.neg1143
  %reass.add1147 = add i32 %reass.add1146, %.neg1144
  %1575 = add nuw nsw i32 %26, 7
  %1576 = ashr i32 %1575, 3
  %b15 = add nsw i32 %26, -8
  %1577 = icmp sgt i32 %11, 0
  %1578 = icmp sgt i32 %9, 0
  %1579 = icmp sgt i32 %7, 0
  %1580 = ashr i32 %4, 6
  %1581 = icmp sgt i32 %4, 63
  %1582 = icmp sgt i32 %output_shift, 0
  %1583 = select i1 %1582, <32 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, <32 x i32> zeroinitializer
  %1584 = add nsw i32 %output_shift, -1
  %1585 = zext i8 %output_zero to i16
  %1586 = insertelement <64 x i16> undef, i16 %1585, i32 0
  %1587 = shufflevector <64 x i16> %1586, <64 x i16> undef, <64 x i32> zeroinitializer
  %1588 = insertelement <1 x i32> poison, i32 %output_multiplier, i32 0
  %1589 = insertelement <1 x i32> poison, i32 %output_shift, i32 0
  %1590 = insertelement <1 x i32> poison, i32 %1584, i32 0
  %1591 = insertelement <32 x i8> undef, i8 %output_max, i32 0
  %1592 = shufflevector <32 x i8> %1591, <32 x i8> undef, <128 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1593 = bitcast <128 x i8> %1592 to <32 x i32>
  %1594 = insertelement <32 x i8> undef, i8 %output_min, i32 0
  %1595 = shufflevector <32 x i8> %1594, <32 x i8> undef, <128 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1596 = bitcast <128 x i8> %1595 to <32 x i32>
  br i1 %1574, label %"for output.s0.b.rebased93.us.preheader", label %after_bb3, !prof !96

"for output.s0.b.rebased93.us.preheader":         ; preds = %"for output.s0.b.rebased93.preheader"
  %1597 = add i32 %1562, %1560
  %1598 = add i32 %9, -1
  %brmerge1669.demorgan = and i1 %1578, %1579
  %xtraiter1861 = and i32 %7, 1
  %1599 = icmp eq i32 %7, 1
  %unroll_iter1863 = and i32 %7, -2
  %lcmp.mod1862.not = icmp eq i32 %xtraiter1861, 0
  %xtraiter1865 = and i32 %9, 3
  %1600 = icmp ult i32 %1598, 3
  %unroll_iter1869 = and i32 %9, -4
  %lcmp.mod1867.not = icmp eq i32 %xtraiter1865, 0
  br label %"for output.s0.b.rebased93.us"

"for output.s0.b.rebased93.us":                   ; preds = %"for output.s0.b.rebased93.us.preheader", %"end for output.s0.y.rebased97.loopexit.us"
  %convolved673.sroa.0.7.us = phi <32 x i32> [ %.us-phi1455.us, %"end for output.s0.y.rebased97.loopexit.us" ], [ undef, %"for output.s0.b.rebased93.us.preheader" ]
  %output.s0.b.rebased95.us = phi i32 [ %1607, %"end for output.s0.y.rebased97.loopexit.us" ], [ 0, %"for output.s0.b.rebased93.us.preheader" ]
  %1601 = add nsw i32 %output.s0.b.rebased95.us, %20
  %1602 = mul nsw i32 %1601, %31
  %1603 = sub i32 %1602, %reass.add1147
  %1604 = mul nsw i32 %1601, %22
  %1605 = sub i32 %1604, %1563
  %1606 = sub nsw i32 %1604, %t941
  br i1 %100, label %"for output.s0.y.rebased96.us.us", label %"end for output.s0.y.rebased97.loopexit.us", !prof !96

"end for output.s0.y.rebased97.loopexit.us":      ; preds = %"end for output.s0.x.xo100.loopexit.us.us", %"for output.s0.b.rebased93.us"
  %.us-phi1455.us = phi <32 x i32> [ %convolved673.sroa.0.7.us, %"for output.s0.b.rebased93.us" ], [ %convolved673.sroa.0.20.us.us, %"end for output.s0.x.xo100.loopexit.us.us" ]
  %1607 = add nuw nsw i32 %output.s0.b.rebased95.us, 1
  %.not718.us = icmp eq i32 %1607, %21
  br i1 %.not718.us, label %after_bb3, label %"for output.s0.b.rebased93.us"

"for output.s0.y.rebased96.us.us":                ; preds = %"for output.s0.b.rebased93.us", %"end for output.s0.x.xo100.loopexit.us.us"
  %convolved673.sroa.0.8.us.us = phi <32 x i32> [ %convolved673.sroa.0.20.us.us, %"end for output.s0.x.xo100.loopexit.us.us" ], [ %convolved673.sroa.0.7.us, %"for output.s0.b.rebased93.us" ]
  %output.s0.y.rebased98.us.us = phi i32 [ %3304, %"end for output.s0.x.xo100.loopexit.us.us" ], [ 0, %"for output.s0.b.rebased93.us" ]
  %1608 = add nsw i32 %output.s0.y.rebased98.us.us, %28
  %1609 = mul nsw i32 %1608, %30
  %t970.us.us = add i32 %1603, %1609
  %1610 = mul nsw i32 %1608, %stride_y
  br label %"for output.s0.x.xo99.us.us"

"for output.s0.x.xo99.us.us":                     ; preds = %"end for output.s0.c.co128.us.us", %"for output.s0.y.rebased96.us.us"
  %convolved673.sroa.0.10.us.us = phi <32 x i32> [ %convolved673.sroa.0.20.us.us, %"end for output.s0.c.co128.us.us" ], [ %convolved673.sroa.0.8.us.us, %"for output.s0.y.rebased96.us.us" ]
  %output.s0.x.xo101.us.us = phi i32 [ %3252, %"end for output.s0.c.co128.us.us" ], [ 0, %"for output.s0.y.rebased96.us.us" ]
  %a13.us.us = shl nsw i32 %output.s0.x.xo101.us.us, 3
  %1611 = icmp slt i32 %a13.us.us, %b15
  %output.s0.x.x.base.s102.us.us = select i1 %1611, i32 %a13.us.us, i32 %b15
  br i1 %t843.not, label %"consume sum_input126.us.us", label %then_bb106.us.us

then_bb106.us.us:                                 ; preds = %"for output.s0.x.xo99.us.us"
  %convolved673.sroa.0.0.vecblend.us.us = shufflevector <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, <32 x i32> %convolved673.sroa.0.10.us.us, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  br i1 %t844, label %then_bb109.us.us, label %next_bb110.us.us

next_bb110.us.us:                                 ; preds = %then_bb106.us.us
  br i1 %1577, label %"for sum_input.s1.r19$y117.preheader.us.us", label %"consume sum_input126.us.us", !prof !96

then_bb109.us.us:                                 ; preds = %then_bb106.us.us
  br i1 %1577, label %"for sum_input.s1.r19$y111.preheader.us.us", label %"consume sum_input126.us.us", !prof !96

"for sum_input.s1.r19$y111.us.us":                ; preds = %"for sum_input.s1.r19$y111.preheader.us.us", %"end for sum_input.s1.r19$x115.us.us"
  %convolved673.sroa.0.12.us.us = phi <32 x i32> [ %convolved673.sroa.0.14.us.us, %"end for sum_input.s1.r19$x115.us.us" ], [ %convolved673.sroa.0.0.vecblend.us.us, %"for sum_input.s1.r19$y111.preheader.us.us" ]
  %"sum_input.s1.r19$y113.us.us" = phi i32 [ %1712, %"end for sum_input.s1.r19$x115.us.us" ], [ 0, %"for sum_input.s1.r19$y111.preheader.us.us" ]
  br i1 %1578, label %"for sum_input.s1.r19$x114.preheader.us.us", label %"end for sum_input.s1.r19$x115.us.us", !prof !96

"for sum_input.s1.r19$x114.us.us":                ; preds = %"for sum_input.s1.r19$x114.preheader.us.us", %"for sum_input.s1.r19$x114.us.us"
  %convolved673.sroa.0.13.us.us = phi <32 x i32> [ %convolved673.sroa.0.0.vecblend923.us.us.3, %"for sum_input.s1.r19$x114.us.us" ], [ %convolved673.sroa.0.12.us.us, %"for sum_input.s1.r19$x114.preheader.us.us" ]
  %"sum_input.s1.r19$x116.us.us" = phi i32 [ %1691, %"for sum_input.s1.r19$x114.us.us" ], [ 0, %"for sum_input.s1.r19$x114.preheader.us.us" ]
  %niter1870 = phi i32 [ %niter1870.nsub.3, %"for sum_input.s1.r19$x114.us.us" ], [ %unroll_iter1869, %"for sum_input.s1.r19$x114.preheader.us.us" ]
  %1612 = mul nsw i32 %"sum_input.s1.r19$x116.us.us", %dilation_x
  %reass.add1152.us.us = add i32 %3301, %1612
  %reass.mul1153.us.us = shl i32 %reass.add1152.us.us, 2
  %1613 = add i32 %t973.us.us, %reass.mul1153.us.us
  %1614 = getelementptr inbounds i8, i8* %13, i32 %1613
  %1615 = bitcast i8* %1614 to <32 x i8>*
  %1616 = load <32 x i8>, <32 x i8>* %1615, align 4, !tbaa !108
  %t1225.us.us = zext <32 x i8> %1616 to <32 x i16>
  %1617 = shufflevector <32 x i16> %t1225.us.us, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1618 = bitcast <64 x i16> %1617 to <32 x i32>
  %1619 = call <32 x i32> @llvm.hexagon.V6.vpackeh.128B(<32 x i32> undef, <32 x i32> %1618)
  %1620 = bitcast <32 x i32> %1619 to <64 x i16>
  %1621 = call <32 x i32> @llvm.hexagon.V6.vpackoh.128B(<32 x i32> undef, <32 x i32> %1618)
  %1622 = bitcast <32 x i32> %1621 to <64 x i16>
  %1623 = add <64 x i16> %1622, %1620
  %1624 = shufflevector <64 x i16> %1623, <64 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %t1224.us.us = zext <16 x i16> %1624 to <16 x i32>
  %1625 = shufflevector <16 x i32> %t1224.us.us, <16 x i32> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1626 = call <64 x i32> @llvm.hexagon.V6.vdealvdd.128B(<32 x i32> undef, <32 x i32> %1625, i32 -4)
  %1627 = call <32 x i32> @llvm.hexagon.V6.lo.128B(<64 x i32> %1626)
  %1628 = add nsw <32 x i32> %1627, %convolved673.sroa.0.13.us.us
  %1629 = call <32 x i32> @llvm.hexagon.V6.hi.128B(<64 x i32> %1626)
  %1630 = add nsw <32 x i32> %1628, %1629
  %convolved673.sroa.0.0.vecblend923.us.us = shufflevector <32 x i32> %1630, <32 x i32> %convolved673.sroa.0.13.us.us, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %1631 = or i32 %"sum_input.s1.r19$x116.us.us", 1
  %1632 = mul nsw i32 %1631, %dilation_x
  %reass.add1152.us.us.1 = add i32 %3301, %1632
  %reass.mul1153.us.us.1 = shl i32 %reass.add1152.us.us.1, 2
  %1633 = add i32 %t973.us.us, %reass.mul1153.us.us.1
  %1634 = getelementptr inbounds i8, i8* %13, i32 %1633
  %1635 = bitcast i8* %1634 to <32 x i8>*
  %1636 = load <32 x i8>, <32 x i8>* %1635, align 4, !tbaa !108
  %t1225.us.us.1 = zext <32 x i8> %1636 to <32 x i16>
  %1637 = shufflevector <32 x i16> %t1225.us.us.1, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1638 = bitcast <64 x i16> %1637 to <32 x i32>
  %1639 = call <32 x i32> @llvm.hexagon.V6.vpackeh.128B(<32 x i32> undef, <32 x i32> %1638)
  %1640 = bitcast <32 x i32> %1639 to <64 x i16>
  %1641 = call <32 x i32> @llvm.hexagon.V6.vpackoh.128B(<32 x i32> undef, <32 x i32> %1638)
  %1642 = bitcast <32 x i32> %1641 to <64 x i16>
  %1643 = add <64 x i16> %1642, %1640
  %1644 = shufflevector <64 x i16> %1643, <64 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %t1224.us.us.1 = zext <16 x i16> %1644 to <16 x i32>
  %1645 = shufflevector <16 x i32> %t1224.us.us.1, <16 x i32> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1646 = call <64 x i32> @llvm.hexagon.V6.vdealvdd.128B(<32 x i32> undef, <32 x i32> %1645, i32 -4)
  %1647 = call <32 x i32> @llvm.hexagon.V6.lo.128B(<64 x i32> %1646)
  %1648 = add nsw <32 x i32> %1647, %convolved673.sroa.0.0.vecblend923.us.us
  %1649 = call <32 x i32> @llvm.hexagon.V6.hi.128B(<64 x i32> %1646)
  %1650 = add nsw <32 x i32> %1648, %1649
  %convolved673.sroa.0.0.vecblend923.us.us.1 = shufflevector <32 x i32> %1650, <32 x i32> %convolved673.sroa.0.0.vecblend923.us.us, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %1651 = or i32 %"sum_input.s1.r19$x116.us.us", 2
  %1652 = mul nsw i32 %1651, %dilation_x
  %reass.add1152.us.us.2 = add i32 %3301, %1652
  %reass.mul1153.us.us.2 = shl i32 %reass.add1152.us.us.2, 2
  %1653 = add i32 %t973.us.us, %reass.mul1153.us.us.2
  %1654 = getelementptr inbounds i8, i8* %13, i32 %1653
  %1655 = bitcast i8* %1654 to <32 x i8>*
  %1656 = load <32 x i8>, <32 x i8>* %1655, align 4, !tbaa !108
  %t1225.us.us.2 = zext <32 x i8> %1656 to <32 x i16>
  %1657 = shufflevector <32 x i16> %t1225.us.us.2, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1658 = bitcast <64 x i16> %1657 to <32 x i32>
  %1659 = call <32 x i32> @llvm.hexagon.V6.vpackeh.128B(<32 x i32> undef, <32 x i32> %1658)
  %1660 = bitcast <32 x i32> %1659 to <64 x i16>
  %1661 = call <32 x i32> @llvm.hexagon.V6.vpackoh.128B(<32 x i32> undef, <32 x i32> %1658)
  %1662 = bitcast <32 x i32> %1661 to <64 x i16>
  %1663 = add <64 x i16> %1662, %1660
  %1664 = shufflevector <64 x i16> %1663, <64 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %t1224.us.us.2 = zext <16 x i16> %1664 to <16 x i32>
  %1665 = shufflevector <16 x i32> %t1224.us.us.2, <16 x i32> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1666 = call <64 x i32> @llvm.hexagon.V6.vdealvdd.128B(<32 x i32> undef, <32 x i32> %1665, i32 -4)
  %1667 = call <32 x i32> @llvm.hexagon.V6.lo.128B(<64 x i32> %1666)
  %1668 = add nsw <32 x i32> %1667, %convolved673.sroa.0.0.vecblend923.us.us.1
  %1669 = call <32 x i32> @llvm.hexagon.V6.hi.128B(<64 x i32> %1666)
  %1670 = add nsw <32 x i32> %1668, %1669
  %convolved673.sroa.0.0.vecblend923.us.us.2 = shufflevector <32 x i32> %1670, <32 x i32> %convolved673.sroa.0.0.vecblend923.us.us.1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %1671 = or i32 %"sum_input.s1.r19$x116.us.us", 3
  %1672 = mul nsw i32 %1671, %dilation_x
  %reass.add1152.us.us.3 = add i32 %3301, %1672
  %reass.mul1153.us.us.3 = shl i32 %reass.add1152.us.us.3, 2
  %1673 = add i32 %t973.us.us, %reass.mul1153.us.us.3
  %1674 = getelementptr inbounds i8, i8* %13, i32 %1673
  %1675 = bitcast i8* %1674 to <32 x i8>*
  %1676 = load <32 x i8>, <32 x i8>* %1675, align 4, !tbaa !108
  %t1225.us.us.3 = zext <32 x i8> %1676 to <32 x i16>
  %1677 = shufflevector <32 x i16> %t1225.us.us.3, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1678 = bitcast <64 x i16> %1677 to <32 x i32>
  %1679 = call <32 x i32> @llvm.hexagon.V6.vpackeh.128B(<32 x i32> undef, <32 x i32> %1678)
  %1680 = bitcast <32 x i32> %1679 to <64 x i16>
  %1681 = call <32 x i32> @llvm.hexagon.V6.vpackoh.128B(<32 x i32> undef, <32 x i32> %1678)
  %1682 = bitcast <32 x i32> %1681 to <64 x i16>
  %1683 = add <64 x i16> %1682, %1680
  %1684 = shufflevector <64 x i16> %1683, <64 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %t1224.us.us.3 = zext <16 x i16> %1684 to <16 x i32>
  %1685 = shufflevector <16 x i32> %t1224.us.us.3, <16 x i32> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1686 = call <64 x i32> @llvm.hexagon.V6.vdealvdd.128B(<32 x i32> undef, <32 x i32> %1685, i32 -4)
  %1687 = call <32 x i32> @llvm.hexagon.V6.lo.128B(<64 x i32> %1686)
  %1688 = add nsw <32 x i32> %1687, %convolved673.sroa.0.0.vecblend923.us.us.2
  %1689 = call <32 x i32> @llvm.hexagon.V6.hi.128B(<64 x i32> %1686)
  %1690 = add nsw <32 x i32> %1688, %1689
  %convolved673.sroa.0.0.vecblend923.us.us.3 = shufflevector <32 x i32> %1690, <32 x i32> %convolved673.sroa.0.0.vecblend923.us.us.2, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %1691 = add nuw nsw i32 %"sum_input.s1.r19$x116.us.us", 4
  %niter1870.nsub.3 = add i32 %niter1870, -4
  %niter1870.ncmp.3 = icmp eq i32 %niter1870.nsub.3, 0
  br i1 %niter1870.ncmp.3, label %"end for sum_input.s1.r19$x115.us.us.loopexit.unr-lcssa", label %"for sum_input.s1.r19$x114.us.us"

"end for sum_input.s1.r19$x115.us.us.loopexit.unr-lcssa": ; preds = %"for sum_input.s1.r19$x114.us.us", %"for sum_input.s1.r19$x114.preheader.us.us"
  %convolved673.sroa.0.0.vecblend923.us.us.lcssa.ph = phi <32 x i32> [ undef, %"for sum_input.s1.r19$x114.preheader.us.us" ], [ %convolved673.sroa.0.0.vecblend923.us.us.3, %"for sum_input.s1.r19$x114.us.us" ]
  %convolved673.sroa.0.13.us.us.unr = phi <32 x i32> [ %convolved673.sroa.0.12.us.us, %"for sum_input.s1.r19$x114.preheader.us.us" ], [ %convolved673.sroa.0.0.vecblend923.us.us.3, %"for sum_input.s1.r19$x114.us.us" ]
  %"sum_input.s1.r19$x116.us.us.unr" = phi i32 [ 0, %"for sum_input.s1.r19$x114.preheader.us.us" ], [ %1691, %"for sum_input.s1.r19$x114.us.us" ]
  br i1 %lcmp.mod1867.not, label %"end for sum_input.s1.r19$x115.us.us", label %"for sum_input.s1.r19$x114.us.us.epil"

"for sum_input.s1.r19$x114.us.us.epil":           ; preds = %"end for sum_input.s1.r19$x115.us.us.loopexit.unr-lcssa", %"for sum_input.s1.r19$x114.us.us.epil"
  %convolved673.sroa.0.13.us.us.epil = phi <32 x i32> [ %convolved673.sroa.0.0.vecblend923.us.us.epil, %"for sum_input.s1.r19$x114.us.us.epil" ], [ %convolved673.sroa.0.13.us.us.unr, %"end for sum_input.s1.r19$x115.us.us.loopexit.unr-lcssa" ]
  %"sum_input.s1.r19$x116.us.us.epil" = phi i32 [ %1711, %"for sum_input.s1.r19$x114.us.us.epil" ], [ %"sum_input.s1.r19$x116.us.us.unr", %"end for sum_input.s1.r19$x115.us.us.loopexit.unr-lcssa" ]
  %epil.iter1866 = phi i32 [ %epil.iter1866.sub, %"for sum_input.s1.r19$x114.us.us.epil" ], [ %xtraiter1865, %"end for sum_input.s1.r19$x115.us.us.loopexit.unr-lcssa" ]
  %1692 = mul nsw i32 %"sum_input.s1.r19$x116.us.us.epil", %dilation_x
  %reass.add1152.us.us.epil = add i32 %3301, %1692
  %reass.mul1153.us.us.epil = shl i32 %reass.add1152.us.us.epil, 2
  %1693 = add i32 %t973.us.us, %reass.mul1153.us.us.epil
  %1694 = getelementptr inbounds i8, i8* %13, i32 %1693
  %1695 = bitcast i8* %1694 to <32 x i8>*
  %1696 = load <32 x i8>, <32 x i8>* %1695, align 4, !tbaa !108
  %t1225.us.us.epil = zext <32 x i8> %1696 to <32 x i16>
  %1697 = shufflevector <32 x i16> %t1225.us.us.epil, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1698 = bitcast <64 x i16> %1697 to <32 x i32>
  %1699 = call <32 x i32> @llvm.hexagon.V6.vpackeh.128B(<32 x i32> undef, <32 x i32> %1698)
  %1700 = bitcast <32 x i32> %1699 to <64 x i16>
  %1701 = call <32 x i32> @llvm.hexagon.V6.vpackoh.128B(<32 x i32> undef, <32 x i32> %1698)
  %1702 = bitcast <32 x i32> %1701 to <64 x i16>
  %1703 = add <64 x i16> %1702, %1700
  %1704 = shufflevector <64 x i16> %1703, <64 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %t1224.us.us.epil = zext <16 x i16> %1704 to <16 x i32>
  %1705 = shufflevector <16 x i32> %t1224.us.us.epil, <16 x i32> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1706 = call <64 x i32> @llvm.hexagon.V6.vdealvdd.128B(<32 x i32> undef, <32 x i32> %1705, i32 -4)
  %1707 = call <32 x i32> @llvm.hexagon.V6.lo.128B(<64 x i32> %1706)
  %1708 = add nsw <32 x i32> %1707, %convolved673.sroa.0.13.us.us.epil
  %1709 = call <32 x i32> @llvm.hexagon.V6.hi.128B(<64 x i32> %1706)
  %1710 = add nsw <32 x i32> %1708, %1709
  %convolved673.sroa.0.0.vecblend923.us.us.epil = shufflevector <32 x i32> %1710, <32 x i32> %convolved673.sroa.0.13.us.us.epil, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %1711 = add nuw nsw i32 %"sum_input.s1.r19$x116.us.us.epil", 1
  %epil.iter1866.sub = add i32 %epil.iter1866, -1
  %epil.iter1866.cmp.not = icmp eq i32 %epil.iter1866.sub, 0
  br i1 %epil.iter1866.cmp.not, label %"end for sum_input.s1.r19$x115.us.us", label %"for sum_input.s1.r19$x114.us.us.epil", !llvm.loop !113

"end for sum_input.s1.r19$x115.us.us":            ; preds = %"end for sum_input.s1.r19$x115.us.us.loopexit.unr-lcssa", %"for sum_input.s1.r19$x114.us.us.epil", %"for sum_input.s1.r19$y111.us.us"
  %convolved673.sroa.0.14.us.us = phi <32 x i32> [ %convolved673.sroa.0.12.us.us, %"for sum_input.s1.r19$y111.us.us" ], [ %convolved673.sroa.0.0.vecblend923.us.us.lcssa.ph, %"end for sum_input.s1.r19$x115.us.us.loopexit.unr-lcssa" ], [ %convolved673.sroa.0.0.vecblend923.us.us.epil, %"for sum_input.s1.r19$x114.us.us.epil" ]
  %1712 = add nuw nsw i32 %"sum_input.s1.r19$y113.us.us", 1
  %.not728.us.us = icmp eq i32 %1712, %11
  br i1 %.not728.us.us, label %"consume sum_input126.us.us", label %"for sum_input.s1.r19$y111.us.us"

"consume sum_input126.us.us":                     ; preds = %"end for sum_input.s1.r19$x121.loopexit.split.us.us.us.us.us", %"end for sum_input.s1.r19$x115.us.us", %"for sum_input.s1.r19$y117.preheader.us.us", %then_bb109.us.us, %next_bb110.us.us, %"for output.s0.x.xo99.us.us"
  %convolved673.sroa.0.20.us.us = phi <32 x i32> [ %convolved673.sroa.0.10.us.us, %"for output.s0.x.xo99.us.us" ], [ %convolved673.sroa.0.0.vecblend.us.us, %then_bb109.us.us ], [ %convolved673.sroa.0.0.vecblend.us.us, %next_bb110.us.us ], [ %convolved673.sroa.0.0.vecblend.us.us, %"for sum_input.s1.r19$y117.preheader.us.us" ], [ %convolved673.sroa.0.14.us.us, %"end for sum_input.s1.r19$x115.us.us" ], [ %convolved673.sroa.0.0.vecblend928.us.us.us.us.us.lcssa, %"end for sum_input.s1.r19$x121.loopexit.split.us.us.us.us.us" ]
  br i1 %1581, label %"for output.s0.c.co127.preheader.us.us", label %"end for output.s0.c.co128.us.us", !prof !96

"for output.s0.c.co127.us.us":                    ; preds = %"for output.s0.c.co127.preheader.us.us", %"consume convolved143.us.us"
  %output.s0.c.co129.us.us = phi i32 [ %3251, %"consume convolved143.us.us" ], [ 0, %"for output.s0.c.co127.preheader.us.us" ]
  %1713 = shl nsw i32 %output.s0.c.co129.us.us, 6
  %1714 = getelementptr inbounds i32, i32* %offset_c, i32 %1713
  %1715 = bitcast i32* %1714 to <32 x i32>*
  %1716 = load <32 x i32>, <32 x i32>* %1715, align 128, !tbaa !104
  br i1 %t843.not, label %then_bb132.us.us, label %next_bb133.us.us

next_bb133.us.us:                                 ; preds = %"for output.s0.c.co127.us.us"
  %1717 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3261, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1718 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %1716, <32 x i32> %1717, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1719 = load <32 x i32>, <32 x i32>* %1715, align 128, !tbaa !104
  %1720 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3263, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1721 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %1719, <32 x i32> %1720, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1722 = load <32 x i32>, <32 x i32>* %1715, align 128, !tbaa !104
  %1723 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3265, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1724 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %1722, <32 x i32> %1723, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1725 = load <32 x i32>, <32 x i32>* %1715, align 128, !tbaa !104
  %1726 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3267, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1727 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %1725, <32 x i32> %1726, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1728 = load <32 x i32>, <32 x i32>* %1715, align 128, !tbaa !104
  %1729 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3269, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1730 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %1728, <32 x i32> %1729, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1731 = load <32 x i32>, <32 x i32>* %1715, align 128, !tbaa !104
  %1732 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3271, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1733 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %1731, <32 x i32> %1732, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1734 = load <32 x i32>, <32 x i32>* %1715, align 128, !tbaa !104
  %1735 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3273, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1736 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %1734, <32 x i32> %1735, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1737 = load <32 x i32>, <32 x i32>* %1715, align 128, !tbaa !104
  %1738 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3275, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1739 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %1737, <32 x i32> %1738, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1740 = getelementptr inbounds i32, i32* %1714, i32 32
  %1741 = bitcast i32* %1740 to <32 x i32>*
  %1742 = load <32 x i32>, <32 x i32>* %1741, align 128, !tbaa !104
  %1743 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3261, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1744 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %1742, <32 x i32> %1743, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1745 = load <32 x i32>, <32 x i32>* %1741, align 128, !tbaa !104
  %1746 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3263, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1747 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %1745, <32 x i32> %1746, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1748 = load <32 x i32>, <32 x i32>* %1741, align 128, !tbaa !104
  %1749 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3265, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1750 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %1748, <32 x i32> %1749, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1751 = load <32 x i32>, <32 x i32>* %1741, align 128, !tbaa !104
  %1752 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3267, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1753 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %1751, <32 x i32> %1752, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1754 = load <32 x i32>, <32 x i32>* %1741, align 128, !tbaa !104
  %1755 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3269, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1756 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %1754, <32 x i32> %1755, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1757 = load <32 x i32>, <32 x i32>* %1741, align 128, !tbaa !104
  %1758 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3271, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1759 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %1757, <32 x i32> %1758, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1760 = load <32 x i32>, <32 x i32>* %1741, align 128, !tbaa !104
  %1761 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3273, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1762 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %1760, <32 x i32> %1761, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1763 = load <32 x i32>, <32 x i32>* %1741, align 128, !tbaa !104
  %1764 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3275, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1765 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %1763, <32 x i32> %1764, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  br label %after_bb131.us.us

then_bb132.us.us:                                 ; preds = %"for output.s0.c.co127.us.us"
  %1766 = getelementptr inbounds i32, i32* %1714, i32 32
  %1767 = bitcast i32* %1766 to <32 x i32>*
  %1768 = load <32 x i32>, <32 x i32>* %1767, align 128, !tbaa !104
  br label %after_bb131.us.us

after_bb131.us.us:                                ; preds = %then_bb132.us.us, %next_bb133.us.us
  %sum_input533672.sroa.155.0.us.us = phi <32 x i32> [ %1768, %then_bb132.us.us ], [ %1765, %next_bb133.us.us ]
  %sum_input533672.sroa.146.0.us.us = phi <32 x i32> [ %1716, %then_bb132.us.us ], [ %1739, %next_bb133.us.us ]
  %sum_input533672.sroa.137.0.us.us = phi <32 x i32> [ %1768, %then_bb132.us.us ], [ %1762, %next_bb133.us.us ]
  %sum_input533672.sroa.128.0.us.us = phi <32 x i32> [ %1716, %then_bb132.us.us ], [ %1736, %next_bb133.us.us ]
  %sum_input533672.sroa.119.0.us.us = phi <32 x i32> [ %1768, %then_bb132.us.us ], [ %1759, %next_bb133.us.us ]
  %sum_input533672.sroa.110.0.us.us = phi <32 x i32> [ %1716, %then_bb132.us.us ], [ %1733, %next_bb133.us.us ]
  %sum_input533672.sroa.101.0.us.us = phi <32 x i32> [ %1768, %then_bb132.us.us ], [ %1756, %next_bb133.us.us ]
  %sum_input533672.sroa.92.0.us.us = phi <32 x i32> [ %1716, %then_bb132.us.us ], [ %1730, %next_bb133.us.us ]
  %sum_input533672.sroa.83.0.us.us = phi <32 x i32> [ %1768, %then_bb132.us.us ], [ %1753, %next_bb133.us.us ]
  %sum_input533672.sroa.74.0.us.us = phi <32 x i32> [ %1716, %then_bb132.us.us ], [ %1727, %next_bb133.us.us ]
  %sum_input533672.sroa.65.0.us.us = phi <32 x i32> [ %1768, %then_bb132.us.us ], [ %1750, %next_bb133.us.us ]
  %sum_input533672.sroa.56.0.us.us = phi <32 x i32> [ %1716, %then_bb132.us.us ], [ %1724, %next_bb133.us.us ]
  %sum_input533672.sroa.47.0.us.us = phi <32 x i32> [ %1768, %then_bb132.us.us ], [ %1747, %next_bb133.us.us ]
  %sum_input533672.sroa.38.0.us.us = phi <32 x i32> [ %1716, %then_bb132.us.us ], [ %1721, %next_bb133.us.us ]
  %sum_input533672.sroa.29.0.us.us = phi <32 x i32> [ %1768, %then_bb132.us.us ], [ %1744, %next_bb133.us.us ]
  %sum_input533672.sroa.0.0.us.us = phi <32 x i32> [ %1716, %then_bb132.us.us ], [ %1718, %next_bb133.us.us ]
  br i1 %1577, label %"for convolved.s1.r19$y134.preheader.us.us", label %"consume convolved143.us.us", !prof !96

"consume convolved143.us.us":                     ; preds = %"end for convolved.s1.r19$x138.loopexit.us.us.us", %"for convolved.s1.r19$y134.preheader.us.us", %after_bb131.us.us
  %sum_input533672.sroa.155.6.us.us = phi <32 x i32> [ %sum_input533672.sroa.155.0.us.us, %after_bb131.us.us ], [ %sum_input533672.sroa.155.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ], [ %.us-phi1402.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ]
  %sum_input533672.sroa.146.6.us.us = phi <32 x i32> [ %sum_input533672.sroa.146.0.us.us, %after_bb131.us.us ], [ %sum_input533672.sroa.146.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ], [ %.us-phi1403.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ]
  %sum_input533672.sroa.137.6.us.us = phi <32 x i32> [ %sum_input533672.sroa.137.0.us.us, %after_bb131.us.us ], [ %sum_input533672.sroa.137.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ], [ %.us-phi1404.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ]
  %sum_input533672.sroa.128.6.us.us = phi <32 x i32> [ %sum_input533672.sroa.128.0.us.us, %after_bb131.us.us ], [ %sum_input533672.sroa.128.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ], [ %.us-phi1405.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ]
  %sum_input533672.sroa.119.6.us.us = phi <32 x i32> [ %sum_input533672.sroa.119.0.us.us, %after_bb131.us.us ], [ %sum_input533672.sroa.119.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ], [ %.us-phi1406.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ]
  %sum_input533672.sroa.110.6.us.us = phi <32 x i32> [ %sum_input533672.sroa.110.0.us.us, %after_bb131.us.us ], [ %sum_input533672.sroa.110.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ], [ %.us-phi1407.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ]
  %sum_input533672.sroa.101.6.us.us = phi <32 x i32> [ %sum_input533672.sroa.101.0.us.us, %after_bb131.us.us ], [ %sum_input533672.sroa.101.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ], [ %.us-phi1408.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ]
  %sum_input533672.sroa.92.6.us.us = phi <32 x i32> [ %sum_input533672.sroa.92.0.us.us, %after_bb131.us.us ], [ %sum_input533672.sroa.92.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ], [ %.us-phi1409.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ]
  %sum_input533672.sroa.83.6.us.us = phi <32 x i32> [ %sum_input533672.sroa.83.0.us.us, %after_bb131.us.us ], [ %sum_input533672.sroa.83.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ], [ %.us-phi1410.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ]
  %sum_input533672.sroa.74.6.us.us = phi <32 x i32> [ %sum_input533672.sroa.74.0.us.us, %after_bb131.us.us ], [ %sum_input533672.sroa.74.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ], [ %.us-phi1411.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ]
  %sum_input533672.sroa.65.6.us.us = phi <32 x i32> [ %sum_input533672.sroa.65.0.us.us, %after_bb131.us.us ], [ %sum_input533672.sroa.65.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ], [ %.us-phi1412.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ]
  %sum_input533672.sroa.56.6.us.us = phi <32 x i32> [ %sum_input533672.sroa.56.0.us.us, %after_bb131.us.us ], [ %sum_input533672.sroa.56.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ], [ %.us-phi1413.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ]
  %sum_input533672.sroa.47.6.us.us = phi <32 x i32> [ %sum_input533672.sroa.47.0.us.us, %after_bb131.us.us ], [ %sum_input533672.sroa.47.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ], [ %.us-phi1414.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ]
  %sum_input533672.sroa.38.6.us.us = phi <32 x i32> [ %sum_input533672.sroa.38.0.us.us, %after_bb131.us.us ], [ %sum_input533672.sroa.38.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ], [ %.us-phi1415.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ]
  %sum_input533672.sroa.29.6.us.us = phi <32 x i32> [ %sum_input533672.sroa.29.0.us.us, %after_bb131.us.us ], [ %sum_input533672.sroa.29.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ], [ %.us-phi1416.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ]
  %sum_input533672.sroa.0.6.us.us = phi <32 x i32> [ %sum_input533672.sroa.0.0.us.us, %after_bb131.us.us ], [ %sum_input533672.sroa.0.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ], [ %.us-phi1417.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ]
  %1769 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1770 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1771 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.0.6.us.us, <32 x i32> %1770, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1772 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1773 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1771, <32 x i32> %sum_input533672.sroa.0.6.us.us, <32 x i32> %1772, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1774 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1769, <1 x i32> zeroinitializer, <32 x i32> %1773, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1775 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1776 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1777 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.0.6.us.us, <32 x i32> %1776, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1778 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1779 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1777, <32 x i32> %sum_input533672.sroa.0.6.us.us, <32 x i32> %1778, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1780 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1775, <1 x i32> zeroinitializer, <32 x i32> %1779, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1781 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1780, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1782 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %1774, <64 x i16> %1781, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1783 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1784 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1785 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.29.6.us.us, <32 x i32> %1784, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1786 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1787 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1785, <32 x i32> %sum_input533672.sroa.29.6.us.us, <32 x i32> %1786, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1788 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1783, <1 x i32> zeroinitializer, <32 x i32> %1787, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1789 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1788, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1790 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1791 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1792 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.29.6.us.us, <32 x i32> %1791, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1793 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1794 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1792, <32 x i32> %sum_input533672.sroa.29.6.us.us, <32 x i32> %1793, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1795 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1790, <1 x i32> zeroinitializer, <32 x i32> %1794, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1796 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1789, <32 x i32> %1795, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1797 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %1782, <32 x i32> %1796, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %1798 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %1797, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %1799 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %1798, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %1800 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %1799, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %1801 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1802 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1803 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.0.6.us.us, <32 x i32> %1802, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1804 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1805 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1803, <32 x i32> %sum_input533672.sroa.0.6.us.us, <32 x i32> %1804, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1806 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1801, <1 x i32> zeroinitializer, <32 x i32> %1805, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1807 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1808 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1809 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.0.6.us.us, <32 x i32> %1808, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1810 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1811 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1809, <32 x i32> %sum_input533672.sroa.0.6.us.us, <32 x i32> %1810, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1812 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1807, <1 x i32> zeroinitializer, <32 x i32> %1811, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1813 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1812, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1814 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %1806, <64 x i16> %1813, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1815 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1816 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1817 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.29.6.us.us, <32 x i32> %1816, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1818 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1819 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1817, <32 x i32> %sum_input533672.sroa.29.6.us.us, <32 x i32> %1818, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1820 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1815, <1 x i32> zeroinitializer, <32 x i32> %1819, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1821 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1820, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1822 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1823 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1824 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.29.6.us.us, <32 x i32> %1823, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1825 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1826 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1824, <32 x i32> %sum_input533672.sroa.29.6.us.us, <32 x i32> %1825, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1827 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1822, <1 x i32> zeroinitializer, <32 x i32> %1826, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1828 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1821, <32 x i32> %1827, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1829 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %1814, <32 x i32> %1828, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %1830 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %1829, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %1831 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %1830, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %1832 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %1831, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %1833 = trunc <64 x i16> %1832 to <64 x i8>
  %1834 = bitcast <64 x i8> %1833 to <8 x i64>
  %1835 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1836 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1837 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.0.6.us.us, <32 x i32> %1836, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1838 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1839 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1837, <32 x i32> %sum_input533672.sroa.0.6.us.us, <32 x i32> %1838, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1840 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1835, <1 x i32> zeroinitializer, <32 x i32> %1839, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1841 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1842 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1843 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.0.6.us.us, <32 x i32> %1842, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1844 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1845 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1843, <32 x i32> %sum_input533672.sroa.0.6.us.us, <32 x i32> %1844, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1846 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1841, <1 x i32> zeroinitializer, <32 x i32> %1845, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1847 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1846, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1848 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %1840, <64 x i16> %1847, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1849 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1850 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1851 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.29.6.us.us, <32 x i32> %1850, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1852 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1853 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1851, <32 x i32> %sum_input533672.sroa.29.6.us.us, <32 x i32> %1852, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1854 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1849, <1 x i32> zeroinitializer, <32 x i32> %1853, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1855 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1854, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1856 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1857 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1858 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.29.6.us.us, <32 x i32> %1857, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1859 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1860 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1858, <32 x i32> %sum_input533672.sroa.29.6.us.us, <32 x i32> %1859, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1861 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1856, <1 x i32> zeroinitializer, <32 x i32> %1860, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1862 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1855, <32 x i32> %1861, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1863 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %1848, <32 x i32> %1862, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %1864 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %1863, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %1865 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %1864, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %1866 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %1865, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %1867 = shufflevector <8 x i64> %1834, <8 x i64> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1868 = bitcast <4 x i64> %1867 to <32 x i8>
  %1869 = shufflevector <32 x i8> %1868, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1870 = bitcast <128 x i8> %1869 to <32 x i32>
  %1871 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %1870, <32 x i32> %1593) #11
  %1872 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %1871, <32 x i32> %1596) #11
  %1873 = bitcast <32 x i32> %1872 to <128 x i8>
  %1874 = shufflevector <128 x i8> %1873, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1875 = shl nsw i32 %output.s0.c.co129.us.us, 6
  %1876 = add i32 %1875, %t970.us.us
  %1877 = add i32 %1876, %3292
  %1878 = getelementptr inbounds i8, i8* %23, i32 %1877
  %1879 = bitcast i8* %1878 to <32 x i8>*
  store <32 x i8> %1874, <32 x i8>* %1879, align 1, !tbaa !111
  %1880 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1881 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1882 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.0.6.us.us, <32 x i32> %1881, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1883 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1884 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1882, <32 x i32> %sum_input533672.sroa.0.6.us.us, <32 x i32> %1883, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1885 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1880, <1 x i32> zeroinitializer, <32 x i32> %1884, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1886 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1887 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1888 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.0.6.us.us, <32 x i32> %1887, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1889 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1890 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1888, <32 x i32> %sum_input533672.sroa.0.6.us.us, <32 x i32> %1889, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1891 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1886, <1 x i32> zeroinitializer, <32 x i32> %1890, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1892 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1891, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1893 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %1885, <64 x i16> %1892, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1894 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1895 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1896 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.29.6.us.us, <32 x i32> %1895, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1897 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1898 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1896, <32 x i32> %sum_input533672.sroa.29.6.us.us, <32 x i32> %1897, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1899 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1894, <1 x i32> zeroinitializer, <32 x i32> %1898, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1900 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1899, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1901 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1902 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1903 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.29.6.us.us, <32 x i32> %1902, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1904 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1905 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1903, <32 x i32> %sum_input533672.sroa.29.6.us.us, <32 x i32> %1904, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1906 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1901, <1 x i32> zeroinitializer, <32 x i32> %1905, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1907 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1900, <32 x i32> %1906, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1908 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %1893, <32 x i32> %1907, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %1909 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %1908, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %1910 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %1909, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %1911 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %1910, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %1912 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1913 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1914 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.0.6.us.us, <32 x i32> %1913, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1915 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1916 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1914, <32 x i32> %sum_input533672.sroa.0.6.us.us, <32 x i32> %1915, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1917 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1912, <1 x i32> zeroinitializer, <32 x i32> %1916, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1918 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1919 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1920 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.0.6.us.us, <32 x i32> %1919, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1921 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1922 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1920, <32 x i32> %sum_input533672.sroa.0.6.us.us, <32 x i32> %1921, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1923 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1918, <1 x i32> zeroinitializer, <32 x i32> %1922, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1924 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1923, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1925 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %1917, <64 x i16> %1924, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1926 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1927 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1928 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.29.6.us.us, <32 x i32> %1927, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1929 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1930 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1928, <32 x i32> %sum_input533672.sroa.29.6.us.us, <32 x i32> %1929, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1931 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1926, <1 x i32> zeroinitializer, <32 x i32> %1930, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1932 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1931, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1933 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1934 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1935 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.29.6.us.us, <32 x i32> %1934, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1936 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1937 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1935, <32 x i32> %sum_input533672.sroa.29.6.us.us, <32 x i32> %1936, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1938 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1933, <1 x i32> zeroinitializer, <32 x i32> %1937, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1939 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1932, <32 x i32> %1938, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1940 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %1925, <32 x i32> %1939, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %1941 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %1940, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %1942 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %1941, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %1943 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %1942, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %1944 = trunc <64 x i16> %1943 to <64 x i8>
  %1945 = bitcast <64 x i8> %1944 to <8 x i64>
  %1946 = shufflevector <8 x i64> %1945, <8 x i64> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1947 = bitcast <4 x i64> %1946 to <32 x i8>
  %1948 = shufflevector <32 x i8> %1947, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1949 = bitcast <128 x i8> %1948 to <32 x i32>
  %1950 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %1949, <32 x i32> %1593) #11
  %1951 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %1950, <32 x i32> %1596) #11
  %1952 = bitcast <32 x i32> %1951 to <128 x i8>
  %1953 = shufflevector <128 x i8> %1952, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1954 = getelementptr inbounds i8, i8* %1878, i32 32
  %1955 = bitcast i8* %1954 to <32 x i8>*
  store <32 x i8> %1953, <32 x i8>* %1955, align 1, !tbaa !111
  %1956 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1957 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1958 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.38.6.us.us, <32 x i32> %1957, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1959 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1960 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1958, <32 x i32> %sum_input533672.sroa.38.6.us.us, <32 x i32> %1959, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1961 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1956, <1 x i32> zeroinitializer, <32 x i32> %1960, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1962 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1963 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1964 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.38.6.us.us, <32 x i32> %1963, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1965 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1966 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1964, <32 x i32> %sum_input533672.sroa.38.6.us.us, <32 x i32> %1965, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1967 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1962, <1 x i32> zeroinitializer, <32 x i32> %1966, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1968 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1967, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1969 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %1961, <64 x i16> %1968, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1970 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1971 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1972 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.47.6.us.us, <32 x i32> %1971, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1973 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1974 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1972, <32 x i32> %sum_input533672.sroa.47.6.us.us, <32 x i32> %1973, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1975 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1970, <1 x i32> zeroinitializer, <32 x i32> %1974, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1976 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1975, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %1977 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1978 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1979 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.47.6.us.us, <32 x i32> %1978, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1980 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1981 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1979, <32 x i32> %sum_input533672.sroa.47.6.us.us, <32 x i32> %1980, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1982 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1977, <1 x i32> zeroinitializer, <32 x i32> %1981, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1983 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %1976, <32 x i32> %1982, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %1984 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %1969, <32 x i32> %1983, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %1985 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %1984, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %1986 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %1985, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %1987 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %1986, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %1988 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1989 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1990 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.38.6.us.us, <32 x i32> %1989, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1991 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1992 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1990, <32 x i32> %sum_input533672.sroa.38.6.us.us, <32 x i32> %1991, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1993 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1988, <1 x i32> zeroinitializer, <32 x i32> %1992, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %1994 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1995 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1996 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.38.6.us.us, <32 x i32> %1995, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %1997 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %1998 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %1996, <32 x i32> %sum_input533672.sroa.38.6.us.us, <32 x i32> %1997, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %1999 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %1994, <1 x i32> zeroinitializer, <32 x i32> %1998, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2000 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %1999, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2001 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %1993, <64 x i16> %2000, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2002 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2003 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2004 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.47.6.us.us, <32 x i32> %2003, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2005 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2006 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2004, <32 x i32> %sum_input533672.sroa.47.6.us.us, <32 x i32> %2005, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2007 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2002, <1 x i32> zeroinitializer, <32 x i32> %2006, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2008 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2007, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2009 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2010 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2011 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.47.6.us.us, <32 x i32> %2010, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2012 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2013 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2011, <32 x i32> %sum_input533672.sroa.47.6.us.us, <32 x i32> %2012, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2014 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2009, <1 x i32> zeroinitializer, <32 x i32> %2013, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2015 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2008, <32 x i32> %2014, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2016 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2001, <32 x i32> %2015, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2017 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2016, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2018 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2017, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2019 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2018, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2020 = trunc <64 x i16> %2019 to <64 x i8>
  %2021 = bitcast <64 x i8> %2020 to <8 x i64>
  %2022 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2023 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2024 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.38.6.us.us, <32 x i32> %2023, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2025 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2026 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2024, <32 x i32> %sum_input533672.sroa.38.6.us.us, <32 x i32> %2025, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2027 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2022, <1 x i32> zeroinitializer, <32 x i32> %2026, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2028 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2029 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2030 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.38.6.us.us, <32 x i32> %2029, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2031 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2032 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2030, <32 x i32> %sum_input533672.sroa.38.6.us.us, <32 x i32> %2031, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2033 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2028, <1 x i32> zeroinitializer, <32 x i32> %2032, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2034 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2033, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2035 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2027, <64 x i16> %2034, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2036 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2037 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2038 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.47.6.us.us, <32 x i32> %2037, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2039 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2040 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2038, <32 x i32> %sum_input533672.sroa.47.6.us.us, <32 x i32> %2039, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2041 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2036, <1 x i32> zeroinitializer, <32 x i32> %2040, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2042 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2041, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2043 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2044 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2045 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.47.6.us.us, <32 x i32> %2044, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2046 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2047 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2045, <32 x i32> %sum_input533672.sroa.47.6.us.us, <32 x i32> %2046, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2048 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2043, <1 x i32> zeroinitializer, <32 x i32> %2047, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2049 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2042, <32 x i32> %2048, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2050 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2035, <32 x i32> %2049, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2051 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2050, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2052 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2051, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2053 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2052, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2054 = shufflevector <8 x i64> %2021, <8 x i64> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2055 = bitcast <4 x i64> %2054 to <32 x i8>
  %2056 = shufflevector <32 x i8> %2055, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %2057 = bitcast <128 x i8> %2056 to <32 x i32>
  %2058 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %2057, <32 x i32> %1593) #11
  %2059 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %2058, <32 x i32> %1596) #11
  %2060 = bitcast <32 x i32> %2059 to <128 x i8>
  %2061 = shufflevector <128 x i8> %2060, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2062 = add i32 %1876, %3293
  %2063 = getelementptr inbounds i8, i8* %23, i32 %2062
  %2064 = bitcast i8* %2063 to <32 x i8>*
  store <32 x i8> %2061, <32 x i8>* %2064, align 1, !tbaa !111
  %2065 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2066 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2067 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.38.6.us.us, <32 x i32> %2066, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2068 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2069 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2067, <32 x i32> %sum_input533672.sroa.38.6.us.us, <32 x i32> %2068, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2070 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2065, <1 x i32> zeroinitializer, <32 x i32> %2069, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2071 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2072 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2073 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.38.6.us.us, <32 x i32> %2072, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2074 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2075 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2073, <32 x i32> %sum_input533672.sroa.38.6.us.us, <32 x i32> %2074, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2076 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2071, <1 x i32> zeroinitializer, <32 x i32> %2075, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2077 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2076, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2078 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2070, <64 x i16> %2077, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2079 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2080 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2081 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.47.6.us.us, <32 x i32> %2080, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2082 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2083 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2081, <32 x i32> %sum_input533672.sroa.47.6.us.us, <32 x i32> %2082, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2084 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2079, <1 x i32> zeroinitializer, <32 x i32> %2083, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2085 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2084, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2086 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2087 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2088 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.47.6.us.us, <32 x i32> %2087, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2089 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2090 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2088, <32 x i32> %sum_input533672.sroa.47.6.us.us, <32 x i32> %2089, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2091 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2086, <1 x i32> zeroinitializer, <32 x i32> %2090, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2092 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2085, <32 x i32> %2091, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2093 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2078, <32 x i32> %2092, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2094 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2093, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2095 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2094, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2096 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2095, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2097 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2098 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2099 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.38.6.us.us, <32 x i32> %2098, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2100 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2101 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2099, <32 x i32> %sum_input533672.sroa.38.6.us.us, <32 x i32> %2100, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2102 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2097, <1 x i32> zeroinitializer, <32 x i32> %2101, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2103 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2104 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2105 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.38.6.us.us, <32 x i32> %2104, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2106 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2107 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2105, <32 x i32> %sum_input533672.sroa.38.6.us.us, <32 x i32> %2106, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2108 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2103, <1 x i32> zeroinitializer, <32 x i32> %2107, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2109 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2108, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2110 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2102, <64 x i16> %2109, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2111 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2112 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2113 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.47.6.us.us, <32 x i32> %2112, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2114 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2115 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2113, <32 x i32> %sum_input533672.sroa.47.6.us.us, <32 x i32> %2114, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2116 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2111, <1 x i32> zeroinitializer, <32 x i32> %2115, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2117 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2116, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2118 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2119 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2120 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.47.6.us.us, <32 x i32> %2119, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2121 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2122 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2120, <32 x i32> %sum_input533672.sroa.47.6.us.us, <32 x i32> %2121, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2123 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2118, <1 x i32> zeroinitializer, <32 x i32> %2122, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2124 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2117, <32 x i32> %2123, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2125 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2110, <32 x i32> %2124, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2126 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2125, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2127 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2126, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2128 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2127, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2129 = trunc <64 x i16> %2128 to <64 x i8>
  %2130 = bitcast <64 x i8> %2129 to <8 x i64>
  %2131 = shufflevector <8 x i64> %2130, <8 x i64> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %2132 = bitcast <4 x i64> %2131 to <32 x i8>
  %2133 = shufflevector <32 x i8> %2132, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %2134 = bitcast <128 x i8> %2133 to <32 x i32>
  %2135 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %2134, <32 x i32> %1593) #11
  %2136 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %2135, <32 x i32> %1596) #11
  %2137 = bitcast <32 x i32> %2136 to <128 x i8>
  %2138 = shufflevector <128 x i8> %2137, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2139 = getelementptr inbounds i8, i8* %2063, i32 32
  %2140 = bitcast i8* %2139 to <32 x i8>*
  store <32 x i8> %2138, <32 x i8>* %2140, align 1, !tbaa !111
  %2141 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2142 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2143 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.56.6.us.us, <32 x i32> %2142, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2144 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2145 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2143, <32 x i32> %sum_input533672.sroa.56.6.us.us, <32 x i32> %2144, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2146 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2141, <1 x i32> zeroinitializer, <32 x i32> %2145, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2147 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2148 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2149 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.56.6.us.us, <32 x i32> %2148, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2150 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2151 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2149, <32 x i32> %sum_input533672.sroa.56.6.us.us, <32 x i32> %2150, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2152 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2147, <1 x i32> zeroinitializer, <32 x i32> %2151, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2153 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2152, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2154 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2146, <64 x i16> %2153, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2155 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2156 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2157 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.65.6.us.us, <32 x i32> %2156, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2158 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2159 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2157, <32 x i32> %sum_input533672.sroa.65.6.us.us, <32 x i32> %2158, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2160 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2155, <1 x i32> zeroinitializer, <32 x i32> %2159, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2161 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2160, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2162 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2163 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2164 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.65.6.us.us, <32 x i32> %2163, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2165 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2166 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2164, <32 x i32> %sum_input533672.sroa.65.6.us.us, <32 x i32> %2165, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2167 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2162, <1 x i32> zeroinitializer, <32 x i32> %2166, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2168 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2161, <32 x i32> %2167, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2169 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2154, <32 x i32> %2168, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2170 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2169, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2171 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2170, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2172 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2171, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2173 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2174 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2175 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.56.6.us.us, <32 x i32> %2174, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2176 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2177 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2175, <32 x i32> %sum_input533672.sroa.56.6.us.us, <32 x i32> %2176, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2178 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2173, <1 x i32> zeroinitializer, <32 x i32> %2177, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2179 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2180 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2181 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.56.6.us.us, <32 x i32> %2180, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2182 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2183 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2181, <32 x i32> %sum_input533672.sroa.56.6.us.us, <32 x i32> %2182, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2184 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2179, <1 x i32> zeroinitializer, <32 x i32> %2183, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2185 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2184, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2186 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2178, <64 x i16> %2185, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2187 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2188 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2189 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.65.6.us.us, <32 x i32> %2188, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2190 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2191 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2189, <32 x i32> %sum_input533672.sroa.65.6.us.us, <32 x i32> %2190, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2192 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2187, <1 x i32> zeroinitializer, <32 x i32> %2191, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2193 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2192, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2194 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2195 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2196 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.65.6.us.us, <32 x i32> %2195, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2197 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2198 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2196, <32 x i32> %sum_input533672.sroa.65.6.us.us, <32 x i32> %2197, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2199 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2194, <1 x i32> zeroinitializer, <32 x i32> %2198, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2200 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2193, <32 x i32> %2199, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2201 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2186, <32 x i32> %2200, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2202 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2201, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2203 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2202, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2204 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2203, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2205 = trunc <64 x i16> %2204 to <64 x i8>
  %2206 = bitcast <64 x i8> %2205 to <8 x i64>
  %2207 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2208 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2209 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.56.6.us.us, <32 x i32> %2208, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2210 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2211 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2209, <32 x i32> %sum_input533672.sroa.56.6.us.us, <32 x i32> %2210, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2212 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2207, <1 x i32> zeroinitializer, <32 x i32> %2211, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2213 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2214 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2215 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.56.6.us.us, <32 x i32> %2214, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2216 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2217 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2215, <32 x i32> %sum_input533672.sroa.56.6.us.us, <32 x i32> %2216, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2218 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2213, <1 x i32> zeroinitializer, <32 x i32> %2217, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2219 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2218, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2220 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2212, <64 x i16> %2219, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2221 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2222 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2223 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.65.6.us.us, <32 x i32> %2222, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2224 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2225 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2223, <32 x i32> %sum_input533672.sroa.65.6.us.us, <32 x i32> %2224, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2226 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2221, <1 x i32> zeroinitializer, <32 x i32> %2225, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2227 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2226, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2228 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2229 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2230 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.65.6.us.us, <32 x i32> %2229, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2231 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2232 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2230, <32 x i32> %sum_input533672.sroa.65.6.us.us, <32 x i32> %2231, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2233 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2228, <1 x i32> zeroinitializer, <32 x i32> %2232, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2234 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2227, <32 x i32> %2233, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2235 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2220, <32 x i32> %2234, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2236 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2235, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2237 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2236, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2238 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2237, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2239 = shufflevector <8 x i64> %2206, <8 x i64> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2240 = bitcast <4 x i64> %2239 to <32 x i8>
  %2241 = shufflevector <32 x i8> %2240, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %2242 = bitcast <128 x i8> %2241 to <32 x i32>
  %2243 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %2242, <32 x i32> %1593) #11
  %2244 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %2243, <32 x i32> %1596) #11
  %2245 = bitcast <32 x i32> %2244 to <128 x i8>
  %2246 = shufflevector <128 x i8> %2245, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2247 = add i32 %1876, %3294
  %2248 = getelementptr inbounds i8, i8* %23, i32 %2247
  %2249 = bitcast i8* %2248 to <32 x i8>*
  store <32 x i8> %2246, <32 x i8>* %2249, align 1, !tbaa !111
  %2250 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2251 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2252 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.56.6.us.us, <32 x i32> %2251, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2253 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2254 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2252, <32 x i32> %sum_input533672.sroa.56.6.us.us, <32 x i32> %2253, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2255 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2250, <1 x i32> zeroinitializer, <32 x i32> %2254, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2256 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2257 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2258 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.56.6.us.us, <32 x i32> %2257, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2259 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2260 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2258, <32 x i32> %sum_input533672.sroa.56.6.us.us, <32 x i32> %2259, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2261 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2256, <1 x i32> zeroinitializer, <32 x i32> %2260, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2262 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2261, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2263 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2255, <64 x i16> %2262, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2264 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2265 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2266 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.65.6.us.us, <32 x i32> %2265, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2267 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2268 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2266, <32 x i32> %sum_input533672.sroa.65.6.us.us, <32 x i32> %2267, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2269 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2264, <1 x i32> zeroinitializer, <32 x i32> %2268, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2270 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2269, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2271 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2272 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2273 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.65.6.us.us, <32 x i32> %2272, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2274 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2275 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2273, <32 x i32> %sum_input533672.sroa.65.6.us.us, <32 x i32> %2274, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2276 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2271, <1 x i32> zeroinitializer, <32 x i32> %2275, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2277 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2270, <32 x i32> %2276, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2278 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2263, <32 x i32> %2277, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2279 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2278, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2280 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2279, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2281 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2280, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2282 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2283 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2284 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.56.6.us.us, <32 x i32> %2283, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2285 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2286 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2284, <32 x i32> %sum_input533672.sroa.56.6.us.us, <32 x i32> %2285, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2287 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2282, <1 x i32> zeroinitializer, <32 x i32> %2286, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2288 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2289 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2290 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.56.6.us.us, <32 x i32> %2289, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2291 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2292 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2290, <32 x i32> %sum_input533672.sroa.56.6.us.us, <32 x i32> %2291, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2293 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2288, <1 x i32> zeroinitializer, <32 x i32> %2292, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2294 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2293, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2295 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2287, <64 x i16> %2294, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2296 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2297 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2298 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.65.6.us.us, <32 x i32> %2297, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2299 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2300 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2298, <32 x i32> %sum_input533672.sroa.65.6.us.us, <32 x i32> %2299, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2301 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2296, <1 x i32> zeroinitializer, <32 x i32> %2300, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2302 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2301, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2303 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2304 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2305 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.65.6.us.us, <32 x i32> %2304, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2306 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2307 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2305, <32 x i32> %sum_input533672.sroa.65.6.us.us, <32 x i32> %2306, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2308 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2303, <1 x i32> zeroinitializer, <32 x i32> %2307, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2309 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2302, <32 x i32> %2308, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2310 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2295, <32 x i32> %2309, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2311 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2310, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2312 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2311, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2313 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2312, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2314 = trunc <64 x i16> %2313 to <64 x i8>
  %2315 = bitcast <64 x i8> %2314 to <8 x i64>
  %2316 = shufflevector <8 x i64> %2315, <8 x i64> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %2317 = bitcast <4 x i64> %2316 to <32 x i8>
  %2318 = shufflevector <32 x i8> %2317, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %2319 = bitcast <128 x i8> %2318 to <32 x i32>
  %2320 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %2319, <32 x i32> %1593) #11
  %2321 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %2320, <32 x i32> %1596) #11
  %2322 = bitcast <32 x i32> %2321 to <128 x i8>
  %2323 = shufflevector <128 x i8> %2322, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2324 = getelementptr inbounds i8, i8* %2248, i32 32
  %2325 = bitcast i8* %2324 to <32 x i8>*
  store <32 x i8> %2323, <32 x i8>* %2325, align 1, !tbaa !111
  %2326 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2327 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2328 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.74.6.us.us, <32 x i32> %2327, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2329 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2330 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2328, <32 x i32> %sum_input533672.sroa.74.6.us.us, <32 x i32> %2329, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2331 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2326, <1 x i32> zeroinitializer, <32 x i32> %2330, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2332 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2333 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2334 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.74.6.us.us, <32 x i32> %2333, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2335 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2336 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2334, <32 x i32> %sum_input533672.sroa.74.6.us.us, <32 x i32> %2335, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2337 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2332, <1 x i32> zeroinitializer, <32 x i32> %2336, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2338 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2337, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2339 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2331, <64 x i16> %2338, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2340 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2341 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2342 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.83.6.us.us, <32 x i32> %2341, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2343 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2344 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2342, <32 x i32> %sum_input533672.sroa.83.6.us.us, <32 x i32> %2343, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2345 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2340, <1 x i32> zeroinitializer, <32 x i32> %2344, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2346 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2345, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2347 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2348 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2349 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.83.6.us.us, <32 x i32> %2348, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2350 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2351 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2349, <32 x i32> %sum_input533672.sroa.83.6.us.us, <32 x i32> %2350, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2352 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2347, <1 x i32> zeroinitializer, <32 x i32> %2351, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2353 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2346, <32 x i32> %2352, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2354 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2339, <32 x i32> %2353, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2355 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2354, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2356 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2355, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2357 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2356, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2358 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2359 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2360 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.74.6.us.us, <32 x i32> %2359, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2361 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2362 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2360, <32 x i32> %sum_input533672.sroa.74.6.us.us, <32 x i32> %2361, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2363 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2358, <1 x i32> zeroinitializer, <32 x i32> %2362, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2364 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2365 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2366 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.74.6.us.us, <32 x i32> %2365, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2367 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2368 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2366, <32 x i32> %sum_input533672.sroa.74.6.us.us, <32 x i32> %2367, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2369 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2364, <1 x i32> zeroinitializer, <32 x i32> %2368, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2370 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2369, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2371 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2363, <64 x i16> %2370, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2372 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2373 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2374 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.83.6.us.us, <32 x i32> %2373, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2375 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2376 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2374, <32 x i32> %sum_input533672.sroa.83.6.us.us, <32 x i32> %2375, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2377 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2372, <1 x i32> zeroinitializer, <32 x i32> %2376, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2378 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2377, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2379 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2380 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2381 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.83.6.us.us, <32 x i32> %2380, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2382 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2383 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2381, <32 x i32> %sum_input533672.sroa.83.6.us.us, <32 x i32> %2382, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2384 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2379, <1 x i32> zeroinitializer, <32 x i32> %2383, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2385 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2378, <32 x i32> %2384, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2386 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2371, <32 x i32> %2385, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2387 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2386, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2388 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2387, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2389 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2388, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2390 = trunc <64 x i16> %2389 to <64 x i8>
  %2391 = bitcast <64 x i8> %2390 to <8 x i64>
  %2392 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2393 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2394 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.74.6.us.us, <32 x i32> %2393, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2395 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2396 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2394, <32 x i32> %sum_input533672.sroa.74.6.us.us, <32 x i32> %2395, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2397 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2392, <1 x i32> zeroinitializer, <32 x i32> %2396, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2398 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2399 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2400 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.74.6.us.us, <32 x i32> %2399, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2401 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2402 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2400, <32 x i32> %sum_input533672.sroa.74.6.us.us, <32 x i32> %2401, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2403 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2398, <1 x i32> zeroinitializer, <32 x i32> %2402, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2404 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2403, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2405 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2397, <64 x i16> %2404, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2406 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2407 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2408 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.83.6.us.us, <32 x i32> %2407, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2409 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2410 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2408, <32 x i32> %sum_input533672.sroa.83.6.us.us, <32 x i32> %2409, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2411 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2406, <1 x i32> zeroinitializer, <32 x i32> %2410, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2412 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2411, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2413 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2414 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2415 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.83.6.us.us, <32 x i32> %2414, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2416 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2417 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2415, <32 x i32> %sum_input533672.sroa.83.6.us.us, <32 x i32> %2416, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2418 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2413, <1 x i32> zeroinitializer, <32 x i32> %2417, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2419 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2412, <32 x i32> %2418, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2420 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2405, <32 x i32> %2419, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2421 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2420, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2422 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2421, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2423 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2422, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2424 = shufflevector <8 x i64> %2391, <8 x i64> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2425 = bitcast <4 x i64> %2424 to <32 x i8>
  %2426 = shufflevector <32 x i8> %2425, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %2427 = bitcast <128 x i8> %2426 to <32 x i32>
  %2428 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %2427, <32 x i32> %1593) #11
  %2429 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %2428, <32 x i32> %1596) #11
  %2430 = bitcast <32 x i32> %2429 to <128 x i8>
  %2431 = shufflevector <128 x i8> %2430, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2432 = add i32 %1876, %3295
  %2433 = getelementptr inbounds i8, i8* %23, i32 %2432
  %2434 = bitcast i8* %2433 to <32 x i8>*
  store <32 x i8> %2431, <32 x i8>* %2434, align 1, !tbaa !111
  %2435 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2436 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2437 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.74.6.us.us, <32 x i32> %2436, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2438 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2439 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2437, <32 x i32> %sum_input533672.sroa.74.6.us.us, <32 x i32> %2438, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2440 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2435, <1 x i32> zeroinitializer, <32 x i32> %2439, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2441 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2442 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2443 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.74.6.us.us, <32 x i32> %2442, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2444 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2445 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2443, <32 x i32> %sum_input533672.sroa.74.6.us.us, <32 x i32> %2444, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2446 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2441, <1 x i32> zeroinitializer, <32 x i32> %2445, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2447 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2446, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2448 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2440, <64 x i16> %2447, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2449 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2450 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2451 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.83.6.us.us, <32 x i32> %2450, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2452 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2453 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2451, <32 x i32> %sum_input533672.sroa.83.6.us.us, <32 x i32> %2452, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2454 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2449, <1 x i32> zeroinitializer, <32 x i32> %2453, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2455 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2454, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2456 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2457 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2458 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.83.6.us.us, <32 x i32> %2457, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2459 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2460 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2458, <32 x i32> %sum_input533672.sroa.83.6.us.us, <32 x i32> %2459, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2461 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2456, <1 x i32> zeroinitializer, <32 x i32> %2460, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2462 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2455, <32 x i32> %2461, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2463 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2448, <32 x i32> %2462, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2464 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2463, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2465 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2464, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2466 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2465, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2467 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2468 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2469 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.74.6.us.us, <32 x i32> %2468, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2470 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2471 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2469, <32 x i32> %sum_input533672.sroa.74.6.us.us, <32 x i32> %2470, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2472 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2467, <1 x i32> zeroinitializer, <32 x i32> %2471, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2473 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2474 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2475 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.74.6.us.us, <32 x i32> %2474, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2476 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2477 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2475, <32 x i32> %sum_input533672.sroa.74.6.us.us, <32 x i32> %2476, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2478 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2473, <1 x i32> zeroinitializer, <32 x i32> %2477, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2479 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2478, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2480 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2472, <64 x i16> %2479, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2481 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2482 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2483 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.83.6.us.us, <32 x i32> %2482, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2484 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2485 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2483, <32 x i32> %sum_input533672.sroa.83.6.us.us, <32 x i32> %2484, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2486 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2481, <1 x i32> zeroinitializer, <32 x i32> %2485, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2487 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2486, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2488 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2489 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2490 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.83.6.us.us, <32 x i32> %2489, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2491 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2492 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2490, <32 x i32> %sum_input533672.sroa.83.6.us.us, <32 x i32> %2491, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2493 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2488, <1 x i32> zeroinitializer, <32 x i32> %2492, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2494 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2487, <32 x i32> %2493, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2495 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2480, <32 x i32> %2494, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2496 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2495, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2497 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2496, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2498 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2497, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2499 = trunc <64 x i16> %2498 to <64 x i8>
  %2500 = bitcast <64 x i8> %2499 to <8 x i64>
  %2501 = shufflevector <8 x i64> %2500, <8 x i64> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %2502 = bitcast <4 x i64> %2501 to <32 x i8>
  %2503 = shufflevector <32 x i8> %2502, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %2504 = bitcast <128 x i8> %2503 to <32 x i32>
  %2505 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %2504, <32 x i32> %1593) #11
  %2506 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %2505, <32 x i32> %1596) #11
  %2507 = bitcast <32 x i32> %2506 to <128 x i8>
  %2508 = shufflevector <128 x i8> %2507, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2509 = getelementptr inbounds i8, i8* %2433, i32 32
  %2510 = bitcast i8* %2509 to <32 x i8>*
  store <32 x i8> %2508, <32 x i8>* %2510, align 1, !tbaa !111
  %2511 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2512 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2513 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.92.6.us.us, <32 x i32> %2512, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2514 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2515 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2513, <32 x i32> %sum_input533672.sroa.92.6.us.us, <32 x i32> %2514, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2516 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2511, <1 x i32> zeroinitializer, <32 x i32> %2515, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2517 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2518 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2519 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.92.6.us.us, <32 x i32> %2518, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2520 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2521 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2519, <32 x i32> %sum_input533672.sroa.92.6.us.us, <32 x i32> %2520, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2522 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2517, <1 x i32> zeroinitializer, <32 x i32> %2521, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2523 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2522, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2524 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2516, <64 x i16> %2523, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2525 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2526 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2527 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.101.6.us.us, <32 x i32> %2526, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2528 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2529 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2527, <32 x i32> %sum_input533672.sroa.101.6.us.us, <32 x i32> %2528, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2530 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2525, <1 x i32> zeroinitializer, <32 x i32> %2529, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2531 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2530, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2532 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2533 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2534 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.101.6.us.us, <32 x i32> %2533, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2535 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2536 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2534, <32 x i32> %sum_input533672.sroa.101.6.us.us, <32 x i32> %2535, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2537 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2532, <1 x i32> zeroinitializer, <32 x i32> %2536, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2538 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2531, <32 x i32> %2537, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2539 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2524, <32 x i32> %2538, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2540 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2539, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2541 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2540, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2542 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2541, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2543 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2544 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2545 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.92.6.us.us, <32 x i32> %2544, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2546 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2547 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2545, <32 x i32> %sum_input533672.sroa.92.6.us.us, <32 x i32> %2546, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2548 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2543, <1 x i32> zeroinitializer, <32 x i32> %2547, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2549 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2550 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2551 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.92.6.us.us, <32 x i32> %2550, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2552 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2553 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2551, <32 x i32> %sum_input533672.sroa.92.6.us.us, <32 x i32> %2552, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2554 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2549, <1 x i32> zeroinitializer, <32 x i32> %2553, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2555 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2554, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2556 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2548, <64 x i16> %2555, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2557 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2558 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2559 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.101.6.us.us, <32 x i32> %2558, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2560 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2561 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2559, <32 x i32> %sum_input533672.sroa.101.6.us.us, <32 x i32> %2560, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2562 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2557, <1 x i32> zeroinitializer, <32 x i32> %2561, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2563 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2562, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2564 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2565 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2566 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.101.6.us.us, <32 x i32> %2565, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2567 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2568 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2566, <32 x i32> %sum_input533672.sroa.101.6.us.us, <32 x i32> %2567, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2569 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2564, <1 x i32> zeroinitializer, <32 x i32> %2568, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2570 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2563, <32 x i32> %2569, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2571 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2556, <32 x i32> %2570, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2572 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2571, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2573 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2572, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2574 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2573, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2575 = trunc <64 x i16> %2574 to <64 x i8>
  %2576 = bitcast <64 x i8> %2575 to <8 x i64>
  %2577 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2578 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2579 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.92.6.us.us, <32 x i32> %2578, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2580 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2581 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2579, <32 x i32> %sum_input533672.sroa.92.6.us.us, <32 x i32> %2580, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2582 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2577, <1 x i32> zeroinitializer, <32 x i32> %2581, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2583 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2584 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2585 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.92.6.us.us, <32 x i32> %2584, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2586 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2587 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2585, <32 x i32> %sum_input533672.sroa.92.6.us.us, <32 x i32> %2586, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2588 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2583, <1 x i32> zeroinitializer, <32 x i32> %2587, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2589 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2588, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2590 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2582, <64 x i16> %2589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2591 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2592 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2593 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.101.6.us.us, <32 x i32> %2592, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2594 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2595 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2593, <32 x i32> %sum_input533672.sroa.101.6.us.us, <32 x i32> %2594, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2596 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2591, <1 x i32> zeroinitializer, <32 x i32> %2595, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2597 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2596, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2598 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2599 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2600 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.101.6.us.us, <32 x i32> %2599, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2601 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2602 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2600, <32 x i32> %sum_input533672.sroa.101.6.us.us, <32 x i32> %2601, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2603 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2598, <1 x i32> zeroinitializer, <32 x i32> %2602, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2604 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2597, <32 x i32> %2603, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2605 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2590, <32 x i32> %2604, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2606 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2605, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2607 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2606, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2608 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2607, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2609 = shufflevector <8 x i64> %2576, <8 x i64> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2610 = bitcast <4 x i64> %2609 to <32 x i8>
  %2611 = shufflevector <32 x i8> %2610, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %2612 = bitcast <128 x i8> %2611 to <32 x i32>
  %2613 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %2612, <32 x i32> %1593) #11
  %2614 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %2613, <32 x i32> %1596) #11
  %2615 = bitcast <32 x i32> %2614 to <128 x i8>
  %2616 = shufflevector <128 x i8> %2615, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2617 = add i32 %1876, %3296
  %2618 = getelementptr inbounds i8, i8* %23, i32 %2617
  %2619 = bitcast i8* %2618 to <32 x i8>*
  store <32 x i8> %2616, <32 x i8>* %2619, align 1, !tbaa !111
  %2620 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2621 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2622 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.92.6.us.us, <32 x i32> %2621, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2623 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2624 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2622, <32 x i32> %sum_input533672.sroa.92.6.us.us, <32 x i32> %2623, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2625 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2620, <1 x i32> zeroinitializer, <32 x i32> %2624, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2626 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2627 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2628 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.92.6.us.us, <32 x i32> %2627, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2629 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2630 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2628, <32 x i32> %sum_input533672.sroa.92.6.us.us, <32 x i32> %2629, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2631 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2626, <1 x i32> zeroinitializer, <32 x i32> %2630, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2632 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2631, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2633 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2625, <64 x i16> %2632, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2634 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2635 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2636 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.101.6.us.us, <32 x i32> %2635, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2637 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2638 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2636, <32 x i32> %sum_input533672.sroa.101.6.us.us, <32 x i32> %2637, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2639 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2634, <1 x i32> zeroinitializer, <32 x i32> %2638, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2640 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2639, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2641 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2642 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2643 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.101.6.us.us, <32 x i32> %2642, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2644 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2645 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2643, <32 x i32> %sum_input533672.sroa.101.6.us.us, <32 x i32> %2644, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2646 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2641, <1 x i32> zeroinitializer, <32 x i32> %2645, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2647 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2640, <32 x i32> %2646, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2648 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2633, <32 x i32> %2647, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2649 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2648, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2650 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2649, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2651 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2650, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2652 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2653 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2654 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.92.6.us.us, <32 x i32> %2653, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2655 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2656 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2654, <32 x i32> %sum_input533672.sroa.92.6.us.us, <32 x i32> %2655, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2657 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2652, <1 x i32> zeroinitializer, <32 x i32> %2656, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2658 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2659 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2660 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.92.6.us.us, <32 x i32> %2659, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2661 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2662 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2660, <32 x i32> %sum_input533672.sroa.92.6.us.us, <32 x i32> %2661, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2663 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2658, <1 x i32> zeroinitializer, <32 x i32> %2662, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2664 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2663, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2665 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2657, <64 x i16> %2664, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2666 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2667 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2668 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.101.6.us.us, <32 x i32> %2667, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2669 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2670 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2668, <32 x i32> %sum_input533672.sroa.101.6.us.us, <32 x i32> %2669, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2671 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2666, <1 x i32> zeroinitializer, <32 x i32> %2670, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2672 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2671, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2673 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2674 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2675 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.101.6.us.us, <32 x i32> %2674, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2676 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2677 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2675, <32 x i32> %sum_input533672.sroa.101.6.us.us, <32 x i32> %2676, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2678 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2673, <1 x i32> zeroinitializer, <32 x i32> %2677, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2679 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2672, <32 x i32> %2678, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2680 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2665, <32 x i32> %2679, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2681 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2680, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2682 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2681, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2683 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2682, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2684 = trunc <64 x i16> %2683 to <64 x i8>
  %2685 = bitcast <64 x i8> %2684 to <8 x i64>
  %2686 = shufflevector <8 x i64> %2685, <8 x i64> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %2687 = bitcast <4 x i64> %2686 to <32 x i8>
  %2688 = shufflevector <32 x i8> %2687, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %2689 = bitcast <128 x i8> %2688 to <32 x i32>
  %2690 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %2689, <32 x i32> %1593) #11
  %2691 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %2690, <32 x i32> %1596) #11
  %2692 = bitcast <32 x i32> %2691 to <128 x i8>
  %2693 = shufflevector <128 x i8> %2692, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2694 = getelementptr inbounds i8, i8* %2618, i32 32
  %2695 = bitcast i8* %2694 to <32 x i8>*
  store <32 x i8> %2693, <32 x i8>* %2695, align 1, !tbaa !111
  %2696 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2697 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2698 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.110.6.us.us, <32 x i32> %2697, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2699 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2700 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2698, <32 x i32> %sum_input533672.sroa.110.6.us.us, <32 x i32> %2699, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2701 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2696, <1 x i32> zeroinitializer, <32 x i32> %2700, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2702 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2703 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2704 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.110.6.us.us, <32 x i32> %2703, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2705 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2706 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2704, <32 x i32> %sum_input533672.sroa.110.6.us.us, <32 x i32> %2705, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2707 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2702, <1 x i32> zeroinitializer, <32 x i32> %2706, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2708 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2707, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2709 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2701, <64 x i16> %2708, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2710 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2711 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2712 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.119.6.us.us, <32 x i32> %2711, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2713 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2714 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2712, <32 x i32> %sum_input533672.sroa.119.6.us.us, <32 x i32> %2713, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2715 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2710, <1 x i32> zeroinitializer, <32 x i32> %2714, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2716 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2715, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2717 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2718 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2719 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.119.6.us.us, <32 x i32> %2718, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2720 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2721 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2719, <32 x i32> %sum_input533672.sroa.119.6.us.us, <32 x i32> %2720, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2722 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2717, <1 x i32> zeroinitializer, <32 x i32> %2721, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2723 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2716, <32 x i32> %2722, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2724 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2709, <32 x i32> %2723, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2725 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2724, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2726 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2725, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2727 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2726, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2728 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2729 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2730 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.110.6.us.us, <32 x i32> %2729, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2731 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2732 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2730, <32 x i32> %sum_input533672.sroa.110.6.us.us, <32 x i32> %2731, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2733 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2728, <1 x i32> zeroinitializer, <32 x i32> %2732, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2734 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2735 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2736 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.110.6.us.us, <32 x i32> %2735, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2737 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2738 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2736, <32 x i32> %sum_input533672.sroa.110.6.us.us, <32 x i32> %2737, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2739 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2734, <1 x i32> zeroinitializer, <32 x i32> %2738, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2740 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2739, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2741 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2733, <64 x i16> %2740, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2742 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2743 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2744 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.119.6.us.us, <32 x i32> %2743, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2745 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2746 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2744, <32 x i32> %sum_input533672.sroa.119.6.us.us, <32 x i32> %2745, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2747 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2742, <1 x i32> zeroinitializer, <32 x i32> %2746, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2748 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2747, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2749 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2750 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2751 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.119.6.us.us, <32 x i32> %2750, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2752 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2753 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2751, <32 x i32> %sum_input533672.sroa.119.6.us.us, <32 x i32> %2752, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2754 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2749, <1 x i32> zeroinitializer, <32 x i32> %2753, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2755 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2748, <32 x i32> %2754, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2756 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2741, <32 x i32> %2755, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2757 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2756, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2758 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2757, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2759 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2758, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2760 = trunc <64 x i16> %2759 to <64 x i8>
  %2761 = bitcast <64 x i8> %2760 to <8 x i64>
  %2762 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2763 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2764 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.110.6.us.us, <32 x i32> %2763, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2765 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2766 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2764, <32 x i32> %sum_input533672.sroa.110.6.us.us, <32 x i32> %2765, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2767 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2762, <1 x i32> zeroinitializer, <32 x i32> %2766, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2768 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2769 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2770 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.110.6.us.us, <32 x i32> %2769, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2771 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2772 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2770, <32 x i32> %sum_input533672.sroa.110.6.us.us, <32 x i32> %2771, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2773 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2768, <1 x i32> zeroinitializer, <32 x i32> %2772, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2774 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2773, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2775 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2767, <64 x i16> %2774, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2776 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2777 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2778 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.119.6.us.us, <32 x i32> %2777, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2779 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2780 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2778, <32 x i32> %sum_input533672.sroa.119.6.us.us, <32 x i32> %2779, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2781 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2776, <1 x i32> zeroinitializer, <32 x i32> %2780, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2782 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2781, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2783 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2784 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2785 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.119.6.us.us, <32 x i32> %2784, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2786 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2787 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2785, <32 x i32> %sum_input533672.sroa.119.6.us.us, <32 x i32> %2786, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2788 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2783, <1 x i32> zeroinitializer, <32 x i32> %2787, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2789 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2782, <32 x i32> %2788, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2790 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2775, <32 x i32> %2789, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2791 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2790, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2792 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2791, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2793 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2792, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2794 = shufflevector <8 x i64> %2761, <8 x i64> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2795 = bitcast <4 x i64> %2794 to <32 x i8>
  %2796 = shufflevector <32 x i8> %2795, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %2797 = bitcast <128 x i8> %2796 to <32 x i32>
  %2798 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %2797, <32 x i32> %1593) #11
  %2799 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %2798, <32 x i32> %1596) #11
  %2800 = bitcast <32 x i32> %2799 to <128 x i8>
  %2801 = shufflevector <128 x i8> %2800, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2802 = add i32 %1876, %3297
  %2803 = getelementptr inbounds i8, i8* %23, i32 %2802
  %2804 = bitcast i8* %2803 to <32 x i8>*
  store <32 x i8> %2801, <32 x i8>* %2804, align 1, !tbaa !111
  %2805 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2806 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2807 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.110.6.us.us, <32 x i32> %2806, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2808 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2809 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2807, <32 x i32> %sum_input533672.sroa.110.6.us.us, <32 x i32> %2808, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2810 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2805, <1 x i32> zeroinitializer, <32 x i32> %2809, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2811 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2812 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2813 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.110.6.us.us, <32 x i32> %2812, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2814 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2815 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2813, <32 x i32> %sum_input533672.sroa.110.6.us.us, <32 x i32> %2814, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2816 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2811, <1 x i32> zeroinitializer, <32 x i32> %2815, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2817 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2816, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2818 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2810, <64 x i16> %2817, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2819 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2820 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2821 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.119.6.us.us, <32 x i32> %2820, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2822 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2823 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2821, <32 x i32> %sum_input533672.sroa.119.6.us.us, <32 x i32> %2822, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2824 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2819, <1 x i32> zeroinitializer, <32 x i32> %2823, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2825 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2824, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2826 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2827 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2828 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.119.6.us.us, <32 x i32> %2827, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2829 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2830 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2828, <32 x i32> %sum_input533672.sroa.119.6.us.us, <32 x i32> %2829, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2831 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2826, <1 x i32> zeroinitializer, <32 x i32> %2830, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2832 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2825, <32 x i32> %2831, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2833 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2818, <32 x i32> %2832, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2834 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2833, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2835 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2834, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2836 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2835, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2837 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2838 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2839 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.110.6.us.us, <32 x i32> %2838, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2840 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2841 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2839, <32 x i32> %sum_input533672.sroa.110.6.us.us, <32 x i32> %2840, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2842 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2837, <1 x i32> zeroinitializer, <32 x i32> %2841, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2843 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2844 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2845 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.110.6.us.us, <32 x i32> %2844, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2846 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2847 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2845, <32 x i32> %sum_input533672.sroa.110.6.us.us, <32 x i32> %2846, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2848 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2843, <1 x i32> zeroinitializer, <32 x i32> %2847, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2849 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2848, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2850 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2842, <64 x i16> %2849, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2851 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2852 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2853 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.119.6.us.us, <32 x i32> %2852, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2854 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2855 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2853, <32 x i32> %sum_input533672.sroa.119.6.us.us, <32 x i32> %2854, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2856 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2851, <1 x i32> zeroinitializer, <32 x i32> %2855, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2857 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2856, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2858 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2859 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2860 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.119.6.us.us, <32 x i32> %2859, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2861 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2862 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2860, <32 x i32> %sum_input533672.sroa.119.6.us.us, <32 x i32> %2861, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2863 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2858, <1 x i32> zeroinitializer, <32 x i32> %2862, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2864 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2857, <32 x i32> %2863, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2865 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2850, <32 x i32> %2864, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2866 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2865, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2867 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2866, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2868 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2867, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2869 = trunc <64 x i16> %2868 to <64 x i8>
  %2870 = bitcast <64 x i8> %2869 to <8 x i64>
  %2871 = shufflevector <8 x i64> %2870, <8 x i64> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %2872 = bitcast <4 x i64> %2871 to <32 x i8>
  %2873 = shufflevector <32 x i8> %2872, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %2874 = bitcast <128 x i8> %2873 to <32 x i32>
  %2875 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %2874, <32 x i32> %1593) #11
  %2876 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %2875, <32 x i32> %1596) #11
  %2877 = bitcast <32 x i32> %2876 to <128 x i8>
  %2878 = shufflevector <128 x i8> %2877, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2879 = getelementptr inbounds i8, i8* %2803, i32 32
  %2880 = bitcast i8* %2879 to <32 x i8>*
  store <32 x i8> %2878, <32 x i8>* %2880, align 1, !tbaa !111
  %2881 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2882 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2883 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.128.6.us.us, <32 x i32> %2882, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2884 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2885 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2883, <32 x i32> %sum_input533672.sroa.128.6.us.us, <32 x i32> %2884, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2886 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2881, <1 x i32> zeroinitializer, <32 x i32> %2885, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2887 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2888 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2889 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.128.6.us.us, <32 x i32> %2888, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2890 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2891 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2889, <32 x i32> %sum_input533672.sroa.128.6.us.us, <32 x i32> %2890, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2892 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2887, <1 x i32> zeroinitializer, <32 x i32> %2891, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2893 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2892, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2894 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2886, <64 x i16> %2893, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2895 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2896 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2897 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.137.6.us.us, <32 x i32> %2896, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2898 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2899 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2897, <32 x i32> %sum_input533672.sroa.137.6.us.us, <32 x i32> %2898, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2900 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2895, <1 x i32> zeroinitializer, <32 x i32> %2899, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2901 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2900, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2902 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2903 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2904 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.137.6.us.us, <32 x i32> %2903, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2905 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2906 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2904, <32 x i32> %sum_input533672.sroa.137.6.us.us, <32 x i32> %2905, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2907 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2902, <1 x i32> zeroinitializer, <32 x i32> %2906, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2908 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2901, <32 x i32> %2907, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2909 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2894, <32 x i32> %2908, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2910 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2909, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2911 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2910, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2912 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2911, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2913 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2914 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2915 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.128.6.us.us, <32 x i32> %2914, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2916 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2917 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2915, <32 x i32> %sum_input533672.sroa.128.6.us.us, <32 x i32> %2916, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2918 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2913, <1 x i32> zeroinitializer, <32 x i32> %2917, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2919 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2920 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2921 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.128.6.us.us, <32 x i32> %2920, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2922 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2923 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2921, <32 x i32> %sum_input533672.sroa.128.6.us.us, <32 x i32> %2922, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2924 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2919, <1 x i32> zeroinitializer, <32 x i32> %2923, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2925 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2924, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2926 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2918, <64 x i16> %2925, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2927 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2928 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2929 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.137.6.us.us, <32 x i32> %2928, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2930 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2931 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2929, <32 x i32> %sum_input533672.sroa.137.6.us.us, <32 x i32> %2930, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2932 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2927, <1 x i32> zeroinitializer, <32 x i32> %2931, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2933 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2932, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2934 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2935 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2936 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.137.6.us.us, <32 x i32> %2935, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2937 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2938 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2936, <32 x i32> %sum_input533672.sroa.137.6.us.us, <32 x i32> %2937, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2939 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2934, <1 x i32> zeroinitializer, <32 x i32> %2938, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2940 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2933, <32 x i32> %2939, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2941 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2926, <32 x i32> %2940, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2942 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2941, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2943 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2942, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2944 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2943, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2945 = trunc <64 x i16> %2944 to <64 x i8>
  %2946 = bitcast <64 x i8> %2945 to <8 x i64>
  %2947 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2948 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2949 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.128.6.us.us, <32 x i32> %2948, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2950 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2951 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2949, <32 x i32> %sum_input533672.sroa.128.6.us.us, <32 x i32> %2950, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2952 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2947, <1 x i32> zeroinitializer, <32 x i32> %2951, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2953 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2954 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2955 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.128.6.us.us, <32 x i32> %2954, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2956 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2957 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2955, <32 x i32> %sum_input533672.sroa.128.6.us.us, <32 x i32> %2956, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2958 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2953, <1 x i32> zeroinitializer, <32 x i32> %2957, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2959 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2958, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2960 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2952, <64 x i16> %2959, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2961 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2962 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2963 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.137.6.us.us, <32 x i32> %2962, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2964 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2965 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2963, <32 x i32> %sum_input533672.sroa.137.6.us.us, <32 x i32> %2964, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2966 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2961, <1 x i32> zeroinitializer, <32 x i32> %2965, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2967 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %2966, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %2968 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2969 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2970 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.137.6.us.us, <32 x i32> %2969, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2971 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2972 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2970, <32 x i32> %sum_input533672.sroa.137.6.us.us, <32 x i32> %2971, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2973 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2968, <1 x i32> zeroinitializer, <32 x i32> %2972, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2974 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %2967, <32 x i32> %2973, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %2975 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %2960, <32 x i32> %2974, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %2976 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %2975, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2977 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %2976, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2978 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %2977, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %2979 = shufflevector <8 x i64> %2946, <8 x i64> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2980 = bitcast <4 x i64> %2979 to <32 x i8>
  %2981 = shufflevector <32 x i8> %2980, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %2982 = bitcast <128 x i8> %2981 to <32 x i32>
  %2983 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %2982, <32 x i32> %1593) #11
  %2984 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %2983, <32 x i32> %1596) #11
  %2985 = bitcast <32 x i32> %2984 to <128 x i8>
  %2986 = shufflevector <128 x i8> %2985, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2987 = add i32 %1876, %3298
  %2988 = getelementptr inbounds i8, i8* %23, i32 %2987
  %2989 = bitcast i8* %2988 to <32 x i8>*
  store <32 x i8> %2986, <32 x i8>* %2989, align 1, !tbaa !111
  %2990 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2991 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2992 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.128.6.us.us, <32 x i32> %2991, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2993 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2994 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2992, <32 x i32> %sum_input533672.sroa.128.6.us.us, <32 x i32> %2993, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %2995 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2990, <1 x i32> zeroinitializer, <32 x i32> %2994, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %2996 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2997 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %2998 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.128.6.us.us, <32 x i32> %2997, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %2999 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3000 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2998, <32 x i32> %sum_input533672.sroa.128.6.us.us, <32 x i32> %2999, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3001 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %2996, <1 x i32> zeroinitializer, <32 x i32> %3000, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3002 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %3001, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %3003 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %2995, <64 x i16> %3002, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3004 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3005 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3006 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.137.6.us.us, <32 x i32> %3005, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3007 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3008 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3006, <32 x i32> %sum_input533672.sroa.137.6.us.us, <32 x i32> %3007, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3009 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3004, <1 x i32> zeroinitializer, <32 x i32> %3008, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3010 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %3009, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %3011 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3012 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3013 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.137.6.us.us, <32 x i32> %3012, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3014 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3015 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3013, <32 x i32> %sum_input533672.sroa.137.6.us.us, <32 x i32> %3014, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3016 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3011, <1 x i32> zeroinitializer, <32 x i32> %3015, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3017 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %3010, <32 x i32> %3016, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3018 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %3003, <32 x i32> %3017, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %3019 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %3018, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %3020 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %3019, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %3021 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %3020, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %3022 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3023 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3024 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.128.6.us.us, <32 x i32> %3023, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3025 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3026 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3024, <32 x i32> %sum_input533672.sroa.128.6.us.us, <32 x i32> %3025, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3027 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3022, <1 x i32> zeroinitializer, <32 x i32> %3026, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3028 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3029 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3030 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.128.6.us.us, <32 x i32> %3029, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3031 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3032 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3030, <32 x i32> %sum_input533672.sroa.128.6.us.us, <32 x i32> %3031, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3033 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3028, <1 x i32> zeroinitializer, <32 x i32> %3032, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3034 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %3033, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %3035 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %3027, <64 x i16> %3034, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3036 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3037 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3038 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.137.6.us.us, <32 x i32> %3037, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3039 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3040 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3038, <32 x i32> %sum_input533672.sroa.137.6.us.us, <32 x i32> %3039, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3041 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3036, <1 x i32> zeroinitializer, <32 x i32> %3040, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3042 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %3041, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %3043 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3044 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3045 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.137.6.us.us, <32 x i32> %3044, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3046 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3047 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3045, <32 x i32> %sum_input533672.sroa.137.6.us.us, <32 x i32> %3046, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3048 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3043, <1 x i32> zeroinitializer, <32 x i32> %3047, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3049 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %3042, <32 x i32> %3048, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3050 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %3035, <32 x i32> %3049, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %3051 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %3050, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %3052 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %3051, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %3053 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %3052, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %3054 = trunc <64 x i16> %3053 to <64 x i8>
  %3055 = bitcast <64 x i8> %3054 to <8 x i64>
  %3056 = shufflevector <8 x i64> %3055, <8 x i64> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3057 = bitcast <4 x i64> %3056 to <32 x i8>
  %3058 = shufflevector <32 x i8> %3057, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3059 = bitcast <128 x i8> %3058 to <32 x i32>
  %3060 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %3059, <32 x i32> %1593) #11
  %3061 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %3060, <32 x i32> %1596) #11
  %3062 = bitcast <32 x i32> %3061 to <128 x i8>
  %3063 = shufflevector <128 x i8> %3062, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3064 = getelementptr inbounds i8, i8* %2988, i32 32
  %3065 = bitcast i8* %3064 to <32 x i8>*
  store <32 x i8> %3063, <32 x i8>* %3065, align 1, !tbaa !111
  %3066 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3067 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3068 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.146.6.us.us, <32 x i32> %3067, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3069 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3070 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3068, <32 x i32> %sum_input533672.sroa.146.6.us.us, <32 x i32> %3069, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3071 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3066, <1 x i32> zeroinitializer, <32 x i32> %3070, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3072 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3073 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3074 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.146.6.us.us, <32 x i32> %3073, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3075 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3076 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3074, <32 x i32> %sum_input533672.sroa.146.6.us.us, <32 x i32> %3075, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3077 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3072, <1 x i32> zeroinitializer, <32 x i32> %3076, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3078 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %3077, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %3079 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %3071, <64 x i16> %3078, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3080 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3081 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3082 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.155.6.us.us, <32 x i32> %3081, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3083 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3084 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3082, <32 x i32> %sum_input533672.sroa.155.6.us.us, <32 x i32> %3083, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3085 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3080, <1 x i32> zeroinitializer, <32 x i32> %3084, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3086 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %3085, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %3087 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3088 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3089 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.155.6.us.us, <32 x i32> %3088, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3090 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3091 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3089, <32 x i32> %sum_input533672.sroa.155.6.us.us, <32 x i32> %3090, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3092 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3087, <1 x i32> zeroinitializer, <32 x i32> %3091, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3093 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %3086, <32 x i32> %3092, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3094 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %3079, <32 x i32> %3093, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %3095 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %3094, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %3096 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %3095, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %3097 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %3096, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %3098 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3099 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3100 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.146.6.us.us, <32 x i32> %3099, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3101 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3102 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3100, <32 x i32> %sum_input533672.sroa.146.6.us.us, <32 x i32> %3101, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3103 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3098, <1 x i32> zeroinitializer, <32 x i32> %3102, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3104 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3105 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3106 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.146.6.us.us, <32 x i32> %3105, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3107 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3108 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3106, <32 x i32> %sum_input533672.sroa.146.6.us.us, <32 x i32> %3107, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3109 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3104, <1 x i32> zeroinitializer, <32 x i32> %3108, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3110 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %3109, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %3111 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %3103, <64 x i16> %3110, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3112 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3113 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3114 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.155.6.us.us, <32 x i32> %3113, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3115 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3116 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3114, <32 x i32> %sum_input533672.sroa.155.6.us.us, <32 x i32> %3115, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3117 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3112, <1 x i32> zeroinitializer, <32 x i32> %3116, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3118 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %3117, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %3119 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3120 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3121 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.155.6.us.us, <32 x i32> %3120, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3122 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3123 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3121, <32 x i32> %sum_input533672.sroa.155.6.us.us, <32 x i32> %3122, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3124 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3119, <1 x i32> zeroinitializer, <32 x i32> %3123, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3125 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %3118, <32 x i32> %3124, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3126 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %3111, <32 x i32> %3125, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %3127 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %3126, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %3128 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %3127, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %3129 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %3128, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %3130 = trunc <64 x i16> %3129 to <64 x i8>
  %3131 = bitcast <64 x i8> %3130 to <8 x i64>
  %3132 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3133 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3134 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.146.6.us.us, <32 x i32> %3133, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3135 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3136 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3134, <32 x i32> %sum_input533672.sroa.146.6.us.us, <32 x i32> %3135, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3137 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3132, <1 x i32> zeroinitializer, <32 x i32> %3136, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3138 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3139 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3140 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.146.6.us.us, <32 x i32> %3139, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3141 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3142 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3140, <32 x i32> %sum_input533672.sroa.146.6.us.us, <32 x i32> %3141, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3143 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3138, <1 x i32> zeroinitializer, <32 x i32> %3142, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3144 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %3143, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %3145 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %3137, <64 x i16> %3144, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3146 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3147 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3148 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.155.6.us.us, <32 x i32> %3147, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3149 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3150 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3148, <32 x i32> %sum_input533672.sroa.155.6.us.us, <32 x i32> %3149, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3151 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3146, <1 x i32> zeroinitializer, <32 x i32> %3150, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3152 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %3151, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %3153 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3154 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3155 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.155.6.us.us, <32 x i32> %3154, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3156 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3157 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3155, <32 x i32> %sum_input533672.sroa.155.6.us.us, <32 x i32> %3156, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3158 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3153, <1 x i32> zeroinitializer, <32 x i32> %3157, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3159 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %3152, <32 x i32> %3158, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3160 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %3145, <32 x i32> %3159, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %3161 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %3160, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %3162 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %3161, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %3163 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %3162, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %3164 = shufflevector <8 x i64> %3131, <8 x i64> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3165 = bitcast <4 x i64> %3164 to <32 x i8>
  %3166 = shufflevector <32 x i8> %3165, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3167 = bitcast <128 x i8> %3166 to <32 x i32>
  %3168 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %3167, <32 x i32> %1593) #11
  %3169 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %3168, <32 x i32> %1596) #11
  %3170 = bitcast <32 x i32> %3169 to <128 x i8>
  %3171 = shufflevector <128 x i8> %3170, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3172 = add i32 %1876, %3299
  %3173 = getelementptr inbounds i8, i8* %23, i32 %3172
  %3174 = bitcast i8* %3173 to <32 x i8>*
  store <32 x i8> %3171, <32 x i8>* %3174, align 1, !tbaa !111
  %3175 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3176 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3177 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.146.6.us.us, <32 x i32> %3176, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3178 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3179 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3177, <32 x i32> %sum_input533672.sroa.146.6.us.us, <32 x i32> %3178, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3180 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3175, <1 x i32> zeroinitializer, <32 x i32> %3179, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3181 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3182 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3183 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.146.6.us.us, <32 x i32> %3182, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3184 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3185 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3183, <32 x i32> %sum_input533672.sroa.146.6.us.us, <32 x i32> %3184, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3186 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3181, <1 x i32> zeroinitializer, <32 x i32> %3185, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3187 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %3186, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %3188 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %3180, <64 x i16> %3187, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3189 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3190 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3191 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.155.6.us.us, <32 x i32> %3190, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3192 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3193 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3191, <32 x i32> %sum_input533672.sroa.155.6.us.us, <32 x i32> %3192, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3194 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3189, <1 x i32> zeroinitializer, <32 x i32> %3193, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3195 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %3194, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %3196 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3197 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3198 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.155.6.us.us, <32 x i32> %3197, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3199 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3200 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3198, <32 x i32> %sum_input533672.sroa.155.6.us.us, <32 x i32> %3199, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3201 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3196, <1 x i32> zeroinitializer, <32 x i32> %3200, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3202 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %3195, <32 x i32> %3201, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3203 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %3188, <32 x i32> %3202, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %3204 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %3203, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %3205 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %3204, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %3206 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %3205, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %3207 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3208 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3209 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.146.6.us.us, <32 x i32> %3208, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3210 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3211 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3209, <32 x i32> %sum_input533672.sroa.146.6.us.us, <32 x i32> %3210, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3212 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3207, <1 x i32> zeroinitializer, <32 x i32> %3211, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3213 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3214 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3215 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.146.6.us.us, <32 x i32> %3214, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3216 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3217 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3215, <32 x i32> %sum_input533672.sroa.146.6.us.us, <32 x i32> %3216, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3218 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3213, <1 x i32> zeroinitializer, <32 x i32> %3217, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3219 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %3218, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %3220 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %3212, <64 x i16> %3219, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3221 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3222 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3223 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.155.6.us.us, <32 x i32> %3222, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3224 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3225 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3223, <32 x i32> %sum_input533672.sroa.155.6.us.us, <32 x i32> %3224, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3226 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3221, <1 x i32> zeroinitializer, <32 x i32> %3225, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3227 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %3226, <32 x i32> %1583, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %3228 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1589, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3229 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3230 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %sum_input533672.sroa.155.6.us.us, <32 x i32> %3229, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3231 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %1588, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3232 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3230, <32 x i32> %sum_input533672.sroa.155.6.us.us, <32 x i32> %3231, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3233 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3228, <1 x i32> zeroinitializer, <32 x i32> %3232, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3234 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %3227, <32 x i32> %3233, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3235 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %3220, <32 x i32> %3234, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %3236 = call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %3235, <64 x i16> %1587, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %3237 = call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %3236, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %3238 = call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %3237, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0) #11
  %3239 = trunc <64 x i16> %3238 to <64 x i8>
  %3240 = bitcast <64 x i8> %3239 to <8 x i64>
  %3241 = shufflevector <8 x i64> %3240, <8 x i64> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3242 = bitcast <4 x i64> %3241 to <32 x i8>
  %3243 = shufflevector <32 x i8> %3242, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3244 = bitcast <128 x i8> %3243 to <32 x i32>
  %3245 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %3244, <32 x i32> %1593) #11
  %3246 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %3245, <32 x i32> %1596) #11
  %3247 = bitcast <32 x i32> %3246 to <128 x i8>
  %3248 = shufflevector <128 x i8> %3247, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3249 = getelementptr inbounds i8, i8* %3173, i32 32
  %3250 = bitcast i8* %3249 to <32 x i8>*
  store <32 x i8> %3248, <32 x i8>* %3250, align 1, !tbaa !111
  %3251 = add nuw nsw i32 %output.s0.c.co129.us.us, 1
  %.not721.us.us = icmp eq i32 %3251, %1580
  br i1 %.not721.us.us, label %"end for output.s0.c.co128.us.us", label %"for output.s0.c.co127.us.us"

"end for output.s0.c.co128.us.us":                ; preds = %"consume convolved143.us.us", %"consume sum_input126.us.us"
  %3252 = add nuw nsw i32 %output.s0.x.xo101.us.us, 1
  %.not720.us.us = icmp eq i32 %3252, %1576
  br i1 %.not720.us.us, label %"end for output.s0.x.xo100.loopexit.us.us", label %"for output.s0.x.xo99.us.us"

"for convolved.s1.r19$y134.preheader.us.us":      ; preds = %after_bb131.us.us
  %3253 = shl nuw nsw i32 %output.s0.c.co129.us.us, 1
  %3254 = or i32 %3253, 1
  %3255 = mul nsw i32 %3254, %8
  %3256 = mul nsw i32 %output.s0.c.co129.us.us, %8
  br i1 %1578, label %"for convolved.s1.r19$y134.us.us.us", label %"consume convolved143.us.us", !prof !96

"for sum_input.s1.r19$x114.preheader.us.us":      ; preds = %"for sum_input.s1.r19$y111.us.us"
  %3257 = mul nsw i32 %"sum_input.s1.r19$y113.us.us", %dilation_y
  %3258 = add nsw i32 %3257, %1610
  %3259 = mul nsw i32 %3258, %19
  %t973.us.us = add i32 %1605, %3259
  br i1 %1600, label %"end for sum_input.s1.r19$x115.us.us.loopexit.unr-lcssa", label %"for sum_input.s1.r19$x114.us.us"

"for output.s0.c.co127.preheader.us.us":          ; preds = %"consume sum_input126.us.us"
  %convolved673.sroa.0.0.vec.extract932.us.us = extractelement <32 x i32> %convolved673.sroa.0.20.us.us, i32 0
  %3260 = mul nsw i32 %convolved673.sroa.0.0.vec.extract932.us.us, %168
  %3261 = insertelement <1 x i32> poison, i32 %3260, i32 0
  %convolved673.sroa.0.4.vec.extract934.us.us = extractelement <32 x i32> %convolved673.sroa.0.20.us.us, i32 1
  %3262 = mul nsw i32 %convolved673.sroa.0.4.vec.extract934.us.us, %168
  %3263 = insertelement <1 x i32> poison, i32 %3262, i32 0
  %convolved673.sroa.0.8.vec.extract936.us.us = extractelement <32 x i32> %convolved673.sroa.0.20.us.us, i32 2
  %3264 = mul nsw i32 %convolved673.sroa.0.8.vec.extract936.us.us, %168
  %3265 = insertelement <1 x i32> poison, i32 %3264, i32 0
  %convolved673.sroa.0.12.vec.extract938.us.us = extractelement <32 x i32> %convolved673.sroa.0.20.us.us, i32 3
  %3266 = mul nsw i32 %convolved673.sroa.0.12.vec.extract938.us.us, %168
  %3267 = insertelement <1 x i32> poison, i32 %3266, i32 0
  %convolved673.sroa.0.16.vec.extract940.us.us = extractelement <32 x i32> %convolved673.sroa.0.20.us.us, i32 4
  %3268 = mul nsw i32 %convolved673.sroa.0.16.vec.extract940.us.us, %168
  %3269 = insertelement <1 x i32> poison, i32 %3268, i32 0
  %convolved673.sroa.0.20.vec.extract942.us.us = extractelement <32 x i32> %convolved673.sroa.0.20.us.us, i32 5
  %3270 = mul nsw i32 %convolved673.sroa.0.20.vec.extract942.us.us, %168
  %3271 = insertelement <1 x i32> poison, i32 %3270, i32 0
  %convolved673.sroa.0.24.vec.extract944.us.us = extractelement <32 x i32> %convolved673.sroa.0.20.us.us, i32 6
  %3272 = mul nsw i32 %convolved673.sroa.0.24.vec.extract944.us.us, %168
  %3273 = insertelement <1 x i32> poison, i32 %3272, i32 0
  %convolved673.sroa.0.28.vec.extract946.us.us = extractelement <32 x i32> %convolved673.sroa.0.20.us.us, i32 7
  %3274 = mul nsw i32 %convolved673.sroa.0.28.vec.extract946.us.us, %168
  %3275 = insertelement <1 x i32> poison, i32 %3274, i32 0
  %3276 = add nsw i32 %output.s0.x.x.base.s102.us.us, %25
  %3277 = add nsw i32 %3276, 7
  %3278 = mul nsw i32 %3277, %stride_x
  %3279 = add nsw i32 %3276, 6
  %3280 = mul nsw i32 %3279, %stride_x
  %3281 = add nsw i32 %3276, 5
  %3282 = mul nsw i32 %3281, %stride_x
  %3283 = add nsw i32 %3276, 4
  %3284 = mul nsw i32 %3283, %stride_x
  %3285 = add nsw i32 %3276, 3
  %3286 = mul nsw i32 %3285, %stride_x
  %3287 = add nsw i32 %3276, 2
  %3288 = mul nsw i32 %3287, %stride_x
  %3289 = add nsw i32 %3276, 1
  %3290 = mul nsw i32 %3289, %stride_x
  %3291 = mul nsw i32 %3276, %stride_x
  %3292 = mul nsw i32 %3276, %27
  %3293 = mul nsw i32 %3289, %27
  %3294 = mul nsw i32 %3287, %27
  %3295 = mul nsw i32 %3285, %27
  %3296 = mul nsw i32 %3283, %27
  %3297 = mul nsw i32 %3281, %27
  %3298 = mul nsw i32 %3279, %27
  %3299 = mul nsw i32 %3277, %27
  br label %"for output.s0.c.co127.us.us"

"for sum_input.s1.r19$y111.preheader.us.us":      ; preds = %then_bb109.us.us
  %3300 = add nsw i32 %output.s0.x.x.base.s102.us.us, %25
  %3301 = sub i32 %3300, %16
  br label %"for sum_input.s1.r19$y111.us.us"

"for sum_input.s1.r19$y117.preheader.us.us":      ; preds = %next_bb110.us.us
  %3302 = add nsw i32 %output.s0.x.x.base.s102.us.us, %25
  %3303 = mul nsw i32 %3302, %stride_x
  br i1 %brmerge1669.demorgan, label %"for sum_input.s1.r19$y117.us.us.us.us", label %"consume sum_input126.us.us", !prof !103

"end for output.s0.x.xo100.loopexit.us.us":       ; preds = %"end for output.s0.c.co128.us.us"
  %3304 = add nuw nsw i32 %output.s0.y.rebased98.us.us, 1
  %.not719.us.us = icmp eq i32 %3304, %29
  br i1 %.not719.us.us, label %"end for output.s0.y.rebased97.loopexit.us", label %"for output.s0.y.rebased96.us.us"

"for sum_input.s1.r19$y117.us.us.us.us":          ; preds = %"for sum_input.s1.r19$y117.preheader.us.us", %"end for sum_input.s1.r19$x121.loopexit.split.us.us.us.us.us"
  %convolved673.sroa.0.15.us.us.us.us = phi <32 x i32> [ %convolved673.sroa.0.0.vecblend928.us.us.us.us.us.lcssa, %"end for sum_input.s1.r19$x121.loopexit.split.us.us.us.us.us" ], [ %convolved673.sroa.0.0.vecblend.us.us, %"for sum_input.s1.r19$y117.preheader.us.us" ]
  %"sum_input.s1.r19$y119.us.us.us.us" = phi i32 [ %3495, %"end for sum_input.s1.r19$x121.loopexit.split.us.us.us.us.us" ], [ 0, %"for sum_input.s1.r19$y117.preheader.us.us" ]
  %3305 = mul nsw i32 %"sum_input.s1.r19$y119.us.us.us.us", %dilation_y
  %t975.s.us.us.us.us = add nsw i32 %3305, %1610
  %3306 = mul nsw i32 %t975.s.us.us.us.us, %19
  br label %"for sum_input.s1.r19$x120.us.us.us.us.us"

"for sum_input.s1.r19$x120.us.us.us.us.us":       ; preds = %"end for sum_input.s1.r19$z.r124124.loopexit.us.us.us.us.us", %"for sum_input.s1.r19$y117.us.us.us.us"
  %convolved673.sroa.0.16.us.us.us.us.us = phi <32 x i32> [ %convolved673.sroa.0.0.vecblend928.us.us.us.us.us.lcssa, %"end for sum_input.s1.r19$z.r124124.loopexit.us.us.us.us.us" ], [ %convolved673.sroa.0.15.us.us.us.us, %"for sum_input.s1.r19$y117.us.us.us.us" ]
  %"sum_input.s1.r19$x122.us.us.us.us.us" = phi i32 [ %3494, %"end for sum_input.s1.r19$z.r124124.loopexit.us.us.us.us.us" ], [ 0, %"for sum_input.s1.r19$y117.us.us.us.us" ]
  %3307 = mul nsw i32 %"sum_input.s1.r19$x122.us.us.us.us.us", %dilation_x
  %t976.s.us.us.us.us.us = add nsw i32 %3307, %3303
  %t1226.us.us.us.us.us = mul nsw i32 %t976.s.us.us.us.us.us, %17
  %3308 = add i32 %t1226.us.us.us.us.us, %3306
  %t977.us.us.us.us.us = sub i32 %3308, %t941
  %3309 = add i32 %t977.us.us.us.us.us, %1604
  %t949.us.us.us.us.us = add i32 %3308, %1573
  %3310 = sub i32 %t949.us.us.us.us.us, %1560
  %t978.us.us.us.us.us = sub i32 %3310, %1561
  %3311 = add i32 %t978.us.us.us.us.us, %1604
  %3312 = add i32 %3308, %1571
  %3313 = sub i32 %3312, %1597
  %t979.us.us.us.us.us = sub i32 %3313, %1561
  %3314 = add i32 %t979.us.us.us.us.us, %1604
  %3315 = add i32 %3308, %1570
  %3316 = sub i32 %3315, %1597
  %t980.us.us.us.us.us = sub i32 %3316, %1561
  %3317 = add i32 %t980.us.us.us.us.us, %1604
  %3318 = add i32 %3308, %1569
  %3319 = sub i32 %3318, %1597
  %t981.us.us.us.us.us = sub i32 %3319, %1561
  %3320 = add i32 %t981.us.us.us.us.us, %1604
  %3321 = add i32 %3308, %1568
  %3322 = sub i32 %3321, %1597
  %t982.us.us.us.us.us = sub i32 %3322, %1561
  %3323 = add i32 %t982.us.us.us.us.us, %1604
  %3324 = add i32 %3308, %1567
  %3325 = sub i32 %3324, %1597
  %t983.us.us.us.us.us = sub i32 %3325, %1561
  %3326 = add i32 %t983.us.us.us.us.us, %1604
  %3327 = add i32 %3308, %1566
  %3328 = sub i32 %3327, %1597
  %t984.us.us.us.us.us = sub i32 %3328, %1561
  %3329 = add i32 %t984.us.us.us.us.us, %1604
  br i1 %1599, label %"end for sum_input.s1.r19$z.r124124.loopexit.us.us.us.us.us.unr-lcssa", label %"for sum_input.s1.r19$z.r124123.us.us.us.us.us"

"for sum_input.s1.r19$z.r124123.us.us.us.us.us":  ; preds = %"for sum_input.s1.r19$x120.us.us.us.us.us", %"for sum_input.s1.r19$z.r124123.us.us.us.us.us"
  %convolved673.sroa.0.18.us.us.us.us.us = phi <32 x i32> [ %convolved673.sroa.0.0.vecblend928.us.us.us.us.us.1, %"for sum_input.s1.r19$z.r124123.us.us.us.us.us" ], [ %convolved673.sroa.0.16.us.us.us.us.us, %"for sum_input.s1.r19$x120.us.us.us.us.us" ]
  %"sum_input.s1.r19$z.r124125.us.us.us.us.us" = phi i32 [ %3439, %"for sum_input.s1.r19$z.r124123.us.us.us.us.us" ], [ 0, %"for sum_input.s1.r19$x120.us.us.us.us.us" ]
  %niter1864 = phi i32 [ %niter1864.nsub.1, %"for sum_input.s1.r19$z.r124123.us.us.us.us.us" ], [ %unroll_iter1863, %"for sum_input.s1.r19$x120.us.us.us.us.us" ]
  %3330 = shl nsw i32 %"sum_input.s1.r19$z.r124125.us.us.us.us.us", 2
  %3331 = add i32 %3309, %3330
  %3332 = getelementptr inbounds i8, i8* %13, i32 %3331
  %3333 = bitcast i8* %3332 to <4 x i8>*
  %3334 = load <4 x i8>, <4 x i8>* %3333, align 4, !tbaa !108
  %3335 = add i32 %3311, %3330
  %3336 = getelementptr inbounds i8, i8* %13, i32 %3335
  %3337 = bitcast i8* %3336 to <4 x i8>*
  %3338 = load <4 x i8>, <4 x i8>* %3337, align 4, !tbaa !108
  %3339 = add i32 %3314, %3330
  %3340 = getelementptr inbounds i8, i8* %13, i32 %3339
  %3341 = bitcast i8* %3340 to <4 x i8>*
  %3342 = load <4 x i8>, <4 x i8>* %3341, align 4, !tbaa !108
  %3343 = add i32 %3317, %3330
  %3344 = getelementptr inbounds i8, i8* %13, i32 %3343
  %3345 = bitcast i8* %3344 to <4 x i8>*
  %3346 = load <4 x i8>, <4 x i8>* %3345, align 4, !tbaa !108
  %3347 = add i32 %3320, %3330
  %3348 = getelementptr inbounds i8, i8* %13, i32 %3347
  %3349 = bitcast i8* %3348 to <4 x i8>*
  %3350 = load <4 x i8>, <4 x i8>* %3349, align 4, !tbaa !108
  %3351 = add i32 %3323, %3330
  %3352 = getelementptr inbounds i8, i8* %13, i32 %3351
  %3353 = bitcast i8* %3352 to <4 x i8>*
  %3354 = load <4 x i8>, <4 x i8>* %3353, align 4, !tbaa !108
  %3355 = add i32 %3326, %3330
  %3356 = getelementptr inbounds i8, i8* %13, i32 %3355
  %3357 = bitcast i8* %3356 to <4 x i8>*
  %3358 = load <4 x i8>, <4 x i8>* %3357, align 4, !tbaa !108
  %3359 = add i32 %3329, %3330
  %3360 = getelementptr inbounds i8, i8* %13, i32 %3359
  %3361 = bitcast i8* %3360 to <4 x i8>*
  %3362 = load <4 x i8>, <4 x i8>* %3361, align 4, !tbaa !108
  %3363 = shufflevector <4 x i8> %3334, <4 x i8> %3338, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3364 = shufflevector <4 x i8> %3342, <4 x i8> %3346, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3365 = shufflevector <4 x i8> %3350, <4 x i8> %3354, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3366 = shufflevector <4 x i8> %3358, <4 x i8> %3362, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3367 = shufflevector <8 x i8> %3363, <8 x i8> %3364, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3368 = shufflevector <8 x i8> %3365, <8 x i8> %3366, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3369 = shufflevector <16 x i8> %3367, <16 x i8> %3368, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %t1228.us.us.us.us.us = zext <32 x i8> %3369 to <32 x i16>
  %3370 = shufflevector <32 x i16> %t1228.us.us.us.us.us, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3371 = bitcast <64 x i16> %3370 to <32 x i32>
  %3372 = call <32 x i32> @llvm.hexagon.V6.vpackeh.128B(<32 x i32> undef, <32 x i32> %3371)
  %3373 = bitcast <32 x i32> %3372 to <64 x i16>
  %3374 = call <32 x i32> @llvm.hexagon.V6.vpackoh.128B(<32 x i32> undef, <32 x i32> %3371)
  %3375 = bitcast <32 x i32> %3374 to <64 x i16>
  %3376 = add <64 x i16> %3375, %3373
  %3377 = shufflevector <64 x i16> %3376, <64 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %t1227.us.us.us.us.us = zext <16 x i16> %3377 to <16 x i32>
  %3378 = shufflevector <16 x i32> %t1227.us.us.us.us.us, <16 x i32> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3379 = call <64 x i32> @llvm.hexagon.V6.vdealvdd.128B(<32 x i32> undef, <32 x i32> %3378, i32 -4)
  %3380 = call <32 x i32> @llvm.hexagon.V6.lo.128B(<64 x i32> %3379)
  %3381 = add nsw <32 x i32> %3380, %convolved673.sroa.0.18.us.us.us.us.us
  %3382 = call <32 x i32> @llvm.hexagon.V6.hi.128B(<64 x i32> %3379)
  %3383 = add nsw <32 x i32> %3381, %3382
  %convolved673.sroa.0.0.vecblend928.us.us.us.us.us = shufflevector <32 x i32> %3383, <32 x i32> %convolved673.sroa.0.18.us.us.us.us.us, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %3384 = shl i32 %"sum_input.s1.r19$z.r124125.us.us.us.us.us", 2
  %3385 = or i32 %3384, 4
  %3386 = add i32 %3309, %3385
  %3387 = getelementptr inbounds i8, i8* %13, i32 %3386
  %3388 = bitcast i8* %3387 to <4 x i8>*
  %3389 = load <4 x i8>, <4 x i8>* %3388, align 4, !tbaa !108
  %3390 = add i32 %3311, %3385
  %3391 = getelementptr inbounds i8, i8* %13, i32 %3390
  %3392 = bitcast i8* %3391 to <4 x i8>*
  %3393 = load <4 x i8>, <4 x i8>* %3392, align 4, !tbaa !108
  %3394 = add i32 %3314, %3385
  %3395 = getelementptr inbounds i8, i8* %13, i32 %3394
  %3396 = bitcast i8* %3395 to <4 x i8>*
  %3397 = load <4 x i8>, <4 x i8>* %3396, align 4, !tbaa !108
  %3398 = add i32 %3317, %3385
  %3399 = getelementptr inbounds i8, i8* %13, i32 %3398
  %3400 = bitcast i8* %3399 to <4 x i8>*
  %3401 = load <4 x i8>, <4 x i8>* %3400, align 4, !tbaa !108
  %3402 = add i32 %3320, %3385
  %3403 = getelementptr inbounds i8, i8* %13, i32 %3402
  %3404 = bitcast i8* %3403 to <4 x i8>*
  %3405 = load <4 x i8>, <4 x i8>* %3404, align 4, !tbaa !108
  %3406 = add i32 %3323, %3385
  %3407 = getelementptr inbounds i8, i8* %13, i32 %3406
  %3408 = bitcast i8* %3407 to <4 x i8>*
  %3409 = load <4 x i8>, <4 x i8>* %3408, align 4, !tbaa !108
  %3410 = add i32 %3326, %3385
  %3411 = getelementptr inbounds i8, i8* %13, i32 %3410
  %3412 = bitcast i8* %3411 to <4 x i8>*
  %3413 = load <4 x i8>, <4 x i8>* %3412, align 4, !tbaa !108
  %3414 = add i32 %3329, %3385
  %3415 = getelementptr inbounds i8, i8* %13, i32 %3414
  %3416 = bitcast i8* %3415 to <4 x i8>*
  %3417 = load <4 x i8>, <4 x i8>* %3416, align 4, !tbaa !108
  %3418 = shufflevector <4 x i8> %3389, <4 x i8> %3393, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3419 = shufflevector <4 x i8> %3397, <4 x i8> %3401, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3420 = shufflevector <4 x i8> %3405, <4 x i8> %3409, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3421 = shufflevector <4 x i8> %3413, <4 x i8> %3417, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3422 = shufflevector <8 x i8> %3418, <8 x i8> %3419, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3423 = shufflevector <8 x i8> %3420, <8 x i8> %3421, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3424 = shufflevector <16 x i8> %3422, <16 x i8> %3423, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %t1228.us.us.us.us.us.1 = zext <32 x i8> %3424 to <32 x i16>
  %3425 = shufflevector <32 x i16> %t1228.us.us.us.us.us.1, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3426 = bitcast <64 x i16> %3425 to <32 x i32>
  %3427 = call <32 x i32> @llvm.hexagon.V6.vpackeh.128B(<32 x i32> undef, <32 x i32> %3426)
  %3428 = bitcast <32 x i32> %3427 to <64 x i16>
  %3429 = call <32 x i32> @llvm.hexagon.V6.vpackoh.128B(<32 x i32> undef, <32 x i32> %3426)
  %3430 = bitcast <32 x i32> %3429 to <64 x i16>
  %3431 = add <64 x i16> %3430, %3428
  %3432 = shufflevector <64 x i16> %3431, <64 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %t1227.us.us.us.us.us.1 = zext <16 x i16> %3432 to <16 x i32>
  %3433 = shufflevector <16 x i32> %t1227.us.us.us.us.us.1, <16 x i32> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3434 = call <64 x i32> @llvm.hexagon.V6.vdealvdd.128B(<32 x i32> undef, <32 x i32> %3433, i32 -4)
  %3435 = call <32 x i32> @llvm.hexagon.V6.lo.128B(<64 x i32> %3434)
  %3436 = add nsw <32 x i32> %3435, %convolved673.sroa.0.0.vecblend928.us.us.us.us.us
  %3437 = call <32 x i32> @llvm.hexagon.V6.hi.128B(<64 x i32> %3434)
  %3438 = add nsw <32 x i32> %3436, %3437
  %convolved673.sroa.0.0.vecblend928.us.us.us.us.us.1 = shufflevector <32 x i32> %3438, <32 x i32> %convolved673.sroa.0.0.vecblend928.us.us.us.us.us, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %3439 = add nuw nsw i32 %"sum_input.s1.r19$z.r124125.us.us.us.us.us", 2
  %niter1864.nsub.1 = add i32 %niter1864, -2
  %niter1864.ncmp.1 = icmp eq i32 %niter1864.nsub.1, 0
  br i1 %niter1864.ncmp.1, label %"end for sum_input.s1.r19$z.r124124.loopexit.us.us.us.us.us.unr-lcssa", label %"for sum_input.s1.r19$z.r124123.us.us.us.us.us"

"end for sum_input.s1.r19$z.r124124.loopexit.us.us.us.us.us.unr-lcssa": ; preds = %"for sum_input.s1.r19$z.r124123.us.us.us.us.us", %"for sum_input.s1.r19$x120.us.us.us.us.us"
  %convolved673.sroa.0.0.vecblend928.us.us.us.us.us.lcssa.ph = phi <32 x i32> [ undef, %"for sum_input.s1.r19$x120.us.us.us.us.us" ], [ %convolved673.sroa.0.0.vecblend928.us.us.us.us.us.1, %"for sum_input.s1.r19$z.r124123.us.us.us.us.us" ]
  %convolved673.sroa.0.18.us.us.us.us.us.unr = phi <32 x i32> [ %convolved673.sroa.0.16.us.us.us.us.us, %"for sum_input.s1.r19$x120.us.us.us.us.us" ], [ %convolved673.sroa.0.0.vecblend928.us.us.us.us.us.1, %"for sum_input.s1.r19$z.r124123.us.us.us.us.us" ]
  %"sum_input.s1.r19$z.r124125.us.us.us.us.us.unr" = phi i32 [ 0, %"for sum_input.s1.r19$x120.us.us.us.us.us" ], [ %3439, %"for sum_input.s1.r19$z.r124123.us.us.us.us.us" ]
  br i1 %lcmp.mod1862.not, label %"end for sum_input.s1.r19$z.r124124.loopexit.us.us.us.us.us", label %"for sum_input.s1.r19$z.r124123.us.us.us.us.us.epil"

"for sum_input.s1.r19$z.r124123.us.us.us.us.us.epil": ; preds = %"end for sum_input.s1.r19$z.r124124.loopexit.us.us.us.us.us.unr-lcssa"
  %3440 = shl nsw i32 %"sum_input.s1.r19$z.r124125.us.us.us.us.us.unr", 2
  %3441 = add i32 %3309, %3440
  %3442 = getelementptr inbounds i8, i8* %13, i32 %3441
  %3443 = bitcast i8* %3442 to <4 x i8>*
  %3444 = load <4 x i8>, <4 x i8>* %3443, align 4, !tbaa !108
  %3445 = add i32 %3311, %3440
  %3446 = getelementptr inbounds i8, i8* %13, i32 %3445
  %3447 = bitcast i8* %3446 to <4 x i8>*
  %3448 = load <4 x i8>, <4 x i8>* %3447, align 4, !tbaa !108
  %3449 = add i32 %3314, %3440
  %3450 = getelementptr inbounds i8, i8* %13, i32 %3449
  %3451 = bitcast i8* %3450 to <4 x i8>*
  %3452 = load <4 x i8>, <4 x i8>* %3451, align 4, !tbaa !108
  %3453 = add i32 %3317, %3440
  %3454 = getelementptr inbounds i8, i8* %13, i32 %3453
  %3455 = bitcast i8* %3454 to <4 x i8>*
  %3456 = load <4 x i8>, <4 x i8>* %3455, align 4, !tbaa !108
  %3457 = add i32 %3320, %3440
  %3458 = getelementptr inbounds i8, i8* %13, i32 %3457
  %3459 = bitcast i8* %3458 to <4 x i8>*
  %3460 = load <4 x i8>, <4 x i8>* %3459, align 4, !tbaa !108
  %3461 = add i32 %3323, %3440
  %3462 = getelementptr inbounds i8, i8* %13, i32 %3461
  %3463 = bitcast i8* %3462 to <4 x i8>*
  %3464 = load <4 x i8>, <4 x i8>* %3463, align 4, !tbaa !108
  %3465 = add i32 %3326, %3440
  %3466 = getelementptr inbounds i8, i8* %13, i32 %3465
  %3467 = bitcast i8* %3466 to <4 x i8>*
  %3468 = load <4 x i8>, <4 x i8>* %3467, align 4, !tbaa !108
  %3469 = add i32 %3329, %3440
  %3470 = getelementptr inbounds i8, i8* %13, i32 %3469
  %3471 = bitcast i8* %3470 to <4 x i8>*
  %3472 = load <4 x i8>, <4 x i8>* %3471, align 4, !tbaa !108
  %3473 = shufflevector <4 x i8> %3444, <4 x i8> %3448, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3474 = shufflevector <4 x i8> %3452, <4 x i8> %3456, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3475 = shufflevector <4 x i8> %3460, <4 x i8> %3464, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3476 = shufflevector <4 x i8> %3468, <4 x i8> %3472, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3477 = shufflevector <8 x i8> %3473, <8 x i8> %3474, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3478 = shufflevector <8 x i8> %3475, <8 x i8> %3476, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3479 = shufflevector <16 x i8> %3477, <16 x i8> %3478, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %t1228.us.us.us.us.us.epil = zext <32 x i8> %3479 to <32 x i16>
  %3480 = shufflevector <32 x i16> %t1228.us.us.us.us.us.epil, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3481 = bitcast <64 x i16> %3480 to <32 x i32>
  %3482 = call <32 x i32> @llvm.hexagon.V6.vpackeh.128B(<32 x i32> undef, <32 x i32> %3481)
  %3483 = bitcast <32 x i32> %3482 to <64 x i16>
  %3484 = call <32 x i32> @llvm.hexagon.V6.vpackoh.128B(<32 x i32> undef, <32 x i32> %3481)
  %3485 = bitcast <32 x i32> %3484 to <64 x i16>
  %3486 = add <64 x i16> %3485, %3483
  %3487 = shufflevector <64 x i16> %3486, <64 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %t1227.us.us.us.us.us.epil = zext <16 x i16> %3487 to <16 x i32>
  %3488 = shufflevector <16 x i32> %t1227.us.us.us.us.us.epil, <16 x i32> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3489 = call <64 x i32> @llvm.hexagon.V6.vdealvdd.128B(<32 x i32> undef, <32 x i32> %3488, i32 -4)
  %3490 = call <32 x i32> @llvm.hexagon.V6.lo.128B(<64 x i32> %3489)
  %3491 = add nsw <32 x i32> %3490, %convolved673.sroa.0.18.us.us.us.us.us.unr
  %3492 = call <32 x i32> @llvm.hexagon.V6.hi.128B(<64 x i32> %3489)
  %3493 = add nsw <32 x i32> %3491, %3492
  %convolved673.sroa.0.0.vecblend928.us.us.us.us.us.epil = shufflevector <32 x i32> %3493, <32 x i32> %convolved673.sroa.0.18.us.us.us.us.us.unr, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  br label %"end for sum_input.s1.r19$z.r124124.loopexit.us.us.us.us.us"

"end for sum_input.s1.r19$z.r124124.loopexit.us.us.us.us.us": ; preds = %"end for sum_input.s1.r19$z.r124124.loopexit.us.us.us.us.us.unr-lcssa", %"for sum_input.s1.r19$z.r124123.us.us.us.us.us.epil"
  %convolved673.sroa.0.0.vecblend928.us.us.us.us.us.lcssa = phi <32 x i32> [ %convolved673.sroa.0.0.vecblend928.us.us.us.us.us.lcssa.ph, %"end for sum_input.s1.r19$z.r124124.loopexit.us.us.us.us.us.unr-lcssa" ], [ %convolved673.sroa.0.0.vecblend928.us.us.us.us.us.epil, %"for sum_input.s1.r19$z.r124123.us.us.us.us.us.epil" ]
  %3494 = add nuw nsw i32 %"sum_input.s1.r19$x122.us.us.us.us.us", 1
  %.not726.us.us.us.us.us = icmp eq i32 %3494, %9
  br i1 %.not726.us.us.us.us.us, label %"end for sum_input.s1.r19$x121.loopexit.split.us.us.us.us.us", label %"for sum_input.s1.r19$x120.us.us.us.us.us"

"end for sum_input.s1.r19$x121.loopexit.split.us.us.us.us.us": ; preds = %"end for sum_input.s1.r19$z.r124124.loopexit.us.us.us.us.us"
  %3495 = add nuw nsw i32 %"sum_input.s1.r19$y119.us.us.us.us", 1
  %.not725.us.us.us.us = icmp eq i32 %3495, %11
  br i1 %.not725.us.us.us.us, label %"consume sum_input126.us.us", label %"for sum_input.s1.r19$y117.us.us.us.us"

"for convolved.s1.r19$y134.us.us.us":             ; preds = %"for convolved.s1.r19$y134.preheader.us.us", %"end for convolved.s1.r19$x138.loopexit.us.us.us"
  %sum_input533672.sroa.155.1.us.us.us = phi <32 x i32> [ %.us-phi1402.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ], [ %sum_input533672.sroa.155.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ]
  %sum_input533672.sroa.146.1.us.us.us = phi <32 x i32> [ %.us-phi1403.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ], [ %sum_input533672.sroa.146.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ]
  %sum_input533672.sroa.137.1.us.us.us = phi <32 x i32> [ %.us-phi1404.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ], [ %sum_input533672.sroa.137.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ]
  %sum_input533672.sroa.128.1.us.us.us = phi <32 x i32> [ %.us-phi1405.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ], [ %sum_input533672.sroa.128.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ]
  %sum_input533672.sroa.119.1.us.us.us = phi <32 x i32> [ %.us-phi1406.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ], [ %sum_input533672.sroa.119.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ]
  %sum_input533672.sroa.110.1.us.us.us = phi <32 x i32> [ %.us-phi1407.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ], [ %sum_input533672.sroa.110.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ]
  %sum_input533672.sroa.101.1.us.us.us = phi <32 x i32> [ %.us-phi1408.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ], [ %sum_input533672.sroa.101.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ]
  %sum_input533672.sroa.92.1.us.us.us = phi <32 x i32> [ %.us-phi1409.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ], [ %sum_input533672.sroa.92.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ]
  %sum_input533672.sroa.83.1.us.us.us = phi <32 x i32> [ %.us-phi1410.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ], [ %sum_input533672.sroa.83.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ]
  %sum_input533672.sroa.74.1.us.us.us = phi <32 x i32> [ %.us-phi1411.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ], [ %sum_input533672.sroa.74.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ]
  %sum_input533672.sroa.65.1.us.us.us = phi <32 x i32> [ %.us-phi1412.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ], [ %sum_input533672.sroa.65.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ]
  %sum_input533672.sroa.56.1.us.us.us = phi <32 x i32> [ %.us-phi1413.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ], [ %sum_input533672.sroa.56.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ]
  %sum_input533672.sroa.47.1.us.us.us = phi <32 x i32> [ %.us-phi1414.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ], [ %sum_input533672.sroa.47.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ]
  %sum_input533672.sroa.38.1.us.us.us = phi <32 x i32> [ %.us-phi1415.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ], [ %sum_input533672.sroa.38.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ]
  %sum_input533672.sroa.29.1.us.us.us = phi <32 x i32> [ %.us-phi1416.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ], [ %sum_input533672.sroa.29.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ]
  %sum_input533672.sroa.0.1.us.us.us = phi <32 x i32> [ %.us-phi1417.us.us.us, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ], [ %sum_input533672.sroa.0.0.us.us, %"for convolved.s1.r19$y134.preheader.us.us" ]
  %"convolved.s1.r19$y136.us.us.us" = phi i32 [ %3500, %"end for convolved.s1.r19$x138.loopexit.us.us.us" ], [ 0, %"for convolved.s1.r19$y134.preheader.us.us" ]
  %3496 = mul nsw i32 %"convolved.s1.r19$y136.us.us.us", %dilation_y
  %3497 = add nsw i32 %3496, %1610
  %3498 = mul nsw i32 %3497, %19
  %t1011.us.us.us = add nsw i32 %3498, %1606
  %3499 = mul nsw i32 %"convolved.s1.r19$y136.us.us.us", %12
  br i1 %1579, label %"for convolved.s1.r19$x137.us.us.us.us", label %"end for convolved.s1.r19$x138.loopexit.us.us.us", !prof !96

"end for convolved.s1.r19$x138.loopexit.us.us.us": ; preds = %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us", %"for convolved.s1.r19$y134.us.us.us"
  %.us-phi1402.us.us.us = phi <32 x i32> [ %sum_input533672.sroa.155.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ], [ %3611, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ]
  %.us-phi1403.us.us.us = phi <32 x i32> [ %sum_input533672.sroa.146.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ], [ %3607, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ]
  %.us-phi1404.us.us.us = phi <32 x i32> [ %sum_input533672.sroa.137.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ], [ %3600, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ]
  %.us-phi1405.us.us.us = phi <32 x i32> [ %sum_input533672.sroa.128.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ], [ %3596, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ]
  %.us-phi1406.us.us.us = phi <32 x i32> [ %sum_input533672.sroa.119.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ], [ %3589, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ]
  %.us-phi1407.us.us.us = phi <32 x i32> [ %sum_input533672.sroa.110.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ], [ %3585, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ]
  %.us-phi1408.us.us.us = phi <32 x i32> [ %sum_input533672.sroa.101.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ], [ %3578, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ]
  %.us-phi1409.us.us.us = phi <32 x i32> [ %sum_input533672.sroa.92.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ], [ %3574, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ]
  %.us-phi1410.us.us.us = phi <32 x i32> [ %sum_input533672.sroa.83.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ], [ %3567, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ]
  %.us-phi1411.us.us.us = phi <32 x i32> [ %sum_input533672.sroa.74.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ], [ %3563, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ]
  %.us-phi1412.us.us.us = phi <32 x i32> [ %sum_input533672.sroa.65.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ], [ %3556, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ]
  %.us-phi1413.us.us.us = phi <32 x i32> [ %sum_input533672.sroa.56.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ], [ %3552, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ]
  %.us-phi1414.us.us.us = phi <32 x i32> [ %sum_input533672.sroa.47.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ], [ %3545, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ]
  %.us-phi1415.us.us.us = phi <32 x i32> [ %sum_input533672.sroa.38.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ], [ %3541, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ]
  %.us-phi1416.us.us.us = phi <32 x i32> [ %sum_input533672.sroa.29.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ], [ %3534, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ]
  %.us-phi1417.us.us.us = phi <32 x i32> [ %sum_input533672.sroa.0.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ], [ %3526, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ]
  %3500 = add nuw nsw i32 %"convolved.s1.r19$y136.us.us.us", 1
  %.not722.us.us.us = icmp eq i32 %3500, %11
  br i1 %.not722.us.us.us, label %"consume convolved143.us.us", label %"for convolved.s1.r19$y134.us.us.us"

"for convolved.s1.r19$x137.us.us.us.us":          ; preds = %"for convolved.s1.r19$y134.us.us.us", %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us"
  %sum_input533672.sroa.155.2.us.us.us.us = phi <32 x i32> [ %3611, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ], [ %sum_input533672.sroa.155.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ]
  %sum_input533672.sroa.146.2.us.us.us.us = phi <32 x i32> [ %3607, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ], [ %sum_input533672.sroa.146.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ]
  %sum_input533672.sroa.137.2.us.us.us.us = phi <32 x i32> [ %3600, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ], [ %sum_input533672.sroa.137.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ]
  %sum_input533672.sroa.128.2.us.us.us.us = phi <32 x i32> [ %3596, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ], [ %sum_input533672.sroa.128.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ]
  %sum_input533672.sroa.119.2.us.us.us.us = phi <32 x i32> [ %3589, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ], [ %sum_input533672.sroa.119.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ]
  %sum_input533672.sroa.110.2.us.us.us.us = phi <32 x i32> [ %3585, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ], [ %sum_input533672.sroa.110.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ]
  %sum_input533672.sroa.101.2.us.us.us.us = phi <32 x i32> [ %3578, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ], [ %sum_input533672.sroa.101.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ]
  %sum_input533672.sroa.92.2.us.us.us.us = phi <32 x i32> [ %3574, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ], [ %sum_input533672.sroa.92.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ]
  %sum_input533672.sroa.83.2.us.us.us.us = phi <32 x i32> [ %3567, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ], [ %sum_input533672.sroa.83.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ]
  %sum_input533672.sroa.74.2.us.us.us.us = phi <32 x i32> [ %3563, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ], [ %sum_input533672.sroa.74.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ]
  %sum_input533672.sroa.65.2.us.us.us.us = phi <32 x i32> [ %3556, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ], [ %sum_input533672.sroa.65.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ]
  %sum_input533672.sroa.56.2.us.us.us.us = phi <32 x i32> [ %3552, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ], [ %sum_input533672.sroa.56.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ]
  %sum_input533672.sroa.47.2.us.us.us.us = phi <32 x i32> [ %3545, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ], [ %sum_input533672.sroa.47.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ]
  %sum_input533672.sroa.38.2.us.us.us.us = phi <32 x i32> [ %3541, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ], [ %sum_input533672.sroa.38.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ]
  %sum_input533672.sroa.29.2.us.us.us.us = phi <32 x i32> [ %3534, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ], [ %sum_input533672.sroa.29.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ]
  %sum_input533672.sroa.0.2.us.us.us.us = phi <32 x i32> [ %3526, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ], [ %sum_input533672.sroa.0.1.us.us.us, %"for convolved.s1.r19$y134.us.us.us" ]
  %"convolved.s1.r19$x139.us.us.us.us" = phi i32 [ %3613, %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us" ], [ 0, %"for convolved.s1.r19$y134.us.us.us" ]
  %3501 = mul nsw i32 %"convolved.s1.r19$x139.us.us.us.us", %dilation_x
  %t1024.s.us.us.us.us = add nsw i32 %3501, %3278
  %t1023.s.us.us.us.us = add nsw i32 %3501, %3280
  %t1022.s.us.us.us.us = add nsw i32 %3501, %3282
  %t1021.s.us.us.us.us = add nsw i32 %3501, %3284
  %t1020.s.us.us.us.us = add nsw i32 %3501, %3286
  %t1019.s.us.us.us.us = add nsw i32 %3501, %3288
  %t1018.s.us.us.us.us = add nsw i32 %3501, %3290
  %t1015.s.us.us.us.us = add nsw i32 %3501, %3291
  %3502 = mul nsw i32 %"convolved.s1.r19$x139.us.us.us.us", %10
  %t1016.us.us.us.us = add nsw i32 %3502, %3499
  %3503 = mul nsw i32 %t1015.s.us.us.us.us, %17
  %3504 = add i32 %t1016.us.us.us.us, %3255
  %3505 = mul nsw i32 %t1018.s.us.us.us.us, %17
  %3506 = mul nsw i32 %t1019.s.us.us.us.us, %17
  %3507 = mul nsw i32 %t1020.s.us.us.us.us, %17
  %3508 = mul nsw i32 %t1021.s.us.us.us.us, %17
  %3509 = mul nsw i32 %t1022.s.us.us.us.us, %17
  %3510 = mul nsw i32 %t1023.s.us.us.us.us, %17
  %3511 = mul nsw i32 %t1024.s.us.us.us.us, %17
  br label %"for convolved.s1.r19$z.r124140.us.us.us.us"

"for convolved.s1.r19$z.r124140.us.us.us.us":     ; preds = %"for convolved.s1.r19$z.r124140.us.us.us.us", %"for convolved.s1.r19$x137.us.us.us.us"
  %sum_input533672.sroa.155.4.us.us.us.us = phi <32 x i32> [ %3611, %"for convolved.s1.r19$z.r124140.us.us.us.us" ], [ %sum_input533672.sroa.155.2.us.us.us.us, %"for convolved.s1.r19$x137.us.us.us.us" ]
  %sum_input533672.sroa.146.4.us.us.us.us = phi <32 x i32> [ %3607, %"for convolved.s1.r19$z.r124140.us.us.us.us" ], [ %sum_input533672.sroa.146.2.us.us.us.us, %"for convolved.s1.r19$x137.us.us.us.us" ]
  %sum_input533672.sroa.137.4.us.us.us.us = phi <32 x i32> [ %3600, %"for convolved.s1.r19$z.r124140.us.us.us.us" ], [ %sum_input533672.sroa.137.2.us.us.us.us, %"for convolved.s1.r19$x137.us.us.us.us" ]
  %sum_input533672.sroa.128.4.us.us.us.us = phi <32 x i32> [ %3596, %"for convolved.s1.r19$z.r124140.us.us.us.us" ], [ %sum_input533672.sroa.128.2.us.us.us.us, %"for convolved.s1.r19$x137.us.us.us.us" ]
  %sum_input533672.sroa.119.4.us.us.us.us = phi <32 x i32> [ %3589, %"for convolved.s1.r19$z.r124140.us.us.us.us" ], [ %sum_input533672.sroa.119.2.us.us.us.us, %"for convolved.s1.r19$x137.us.us.us.us" ]
  %sum_input533672.sroa.110.4.us.us.us.us = phi <32 x i32> [ %3585, %"for convolved.s1.r19$z.r124140.us.us.us.us" ], [ %sum_input533672.sroa.110.2.us.us.us.us, %"for convolved.s1.r19$x137.us.us.us.us" ]
  %sum_input533672.sroa.101.4.us.us.us.us = phi <32 x i32> [ %3578, %"for convolved.s1.r19$z.r124140.us.us.us.us" ], [ %sum_input533672.sroa.101.2.us.us.us.us, %"for convolved.s1.r19$x137.us.us.us.us" ]
  %sum_input533672.sroa.92.4.us.us.us.us = phi <32 x i32> [ %3574, %"for convolved.s1.r19$z.r124140.us.us.us.us" ], [ %sum_input533672.sroa.92.2.us.us.us.us, %"for convolved.s1.r19$x137.us.us.us.us" ]
  %sum_input533672.sroa.83.4.us.us.us.us = phi <32 x i32> [ %3567, %"for convolved.s1.r19$z.r124140.us.us.us.us" ], [ %sum_input533672.sroa.83.2.us.us.us.us, %"for convolved.s1.r19$x137.us.us.us.us" ]
  %sum_input533672.sroa.74.4.us.us.us.us = phi <32 x i32> [ %3563, %"for convolved.s1.r19$z.r124140.us.us.us.us" ], [ %sum_input533672.sroa.74.2.us.us.us.us, %"for convolved.s1.r19$x137.us.us.us.us" ]
  %sum_input533672.sroa.65.4.us.us.us.us = phi <32 x i32> [ %3556, %"for convolved.s1.r19$z.r124140.us.us.us.us" ], [ %sum_input533672.sroa.65.2.us.us.us.us, %"for convolved.s1.r19$x137.us.us.us.us" ]
  %sum_input533672.sroa.56.4.us.us.us.us = phi <32 x i32> [ %3552, %"for convolved.s1.r19$z.r124140.us.us.us.us" ], [ %sum_input533672.sroa.56.2.us.us.us.us, %"for convolved.s1.r19$x137.us.us.us.us" ]
  %sum_input533672.sroa.47.4.us.us.us.us = phi <32 x i32> [ %3545, %"for convolved.s1.r19$z.r124140.us.us.us.us" ], [ %sum_input533672.sroa.47.2.us.us.us.us, %"for convolved.s1.r19$x137.us.us.us.us" ]
  %sum_input533672.sroa.38.4.us.us.us.us = phi <32 x i32> [ %3541, %"for convolved.s1.r19$z.r124140.us.us.us.us" ], [ %sum_input533672.sroa.38.2.us.us.us.us, %"for convolved.s1.r19$x137.us.us.us.us" ]
  %sum_input533672.sroa.29.4.us.us.us.us = phi <32 x i32> [ %3534, %"for convolved.s1.r19$z.r124140.us.us.us.us" ], [ %sum_input533672.sroa.29.2.us.us.us.us, %"for convolved.s1.r19$x137.us.us.us.us" ]
  %sum_input533672.sroa.0.4.us.us.us.us = phi <32 x i32> [ %3526, %"for convolved.s1.r19$z.r124140.us.us.us.us" ], [ %sum_input533672.sroa.0.2.us.us.us.us, %"for convolved.s1.r19$x137.us.us.us.us" ]
  %"convolved.s1.r19$z.r124142.us.us.us.us" = phi i32 [ %3612, %"for convolved.s1.r19$z.r124140.us.us.us.us" ], [ 0, %"for convolved.s1.r19$x137.us.us.us.us" ]
  %3512 = shl nsw i32 %"convolved.s1.r19$z.r124142.us.us.us.us", 2
  %3513 = add i32 %3512, %t1011.us.us.us
  %3514 = add i32 %3513, %3503
  %3515 = getelementptr inbounds i8, i8* %13, i32 %3514
  %3516 = bitcast i8* %3515 to <4 x i8>*
  %3517 = load <4 x i8>, <4 x i8>* %3516, align 4, !tbaa !108
  %3518 = shl nsw i32 %"convolved.s1.r19$z.r124142.us.us.us.us", 6
  %3519 = add nsw i32 %3518, %3256
  %3520 = shl nsw i32 %3519, 1
  %3521 = add nsw i32 %t1016.us.us.us.us, %3520
  %3522 = getelementptr inbounds i8, i8* %5, i32 %3521
  %3523 = bitcast i8* %3522 to <128 x i8>*
  %3524 = load <128 x i8>, <128 x i8>* %3523, align 128, !tbaa !106
  %3525 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %3517, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3526 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %sum_input533672.sroa.0.4.us.us.us.us, <128 x i8> %3524, <32 x i32> %3525, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %3527 = load <4 x i8>, <4 x i8>* %3516, align 4, !tbaa !108
  %3528 = shl nsw i32 %"convolved.s1.r19$z.r124142.us.us.us.us", 7
  %3529 = add i32 %3504, %3528
  %3530 = getelementptr inbounds i8, i8* %5, i32 %3529
  %3531 = bitcast i8* %3530 to <128 x i8>*
  %3532 = load <128 x i8>, <128 x i8>* %3531, align 128, !tbaa !106
  %3533 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %3527, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3534 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %sum_input533672.sroa.29.4.us.us.us.us, <128 x i8> %3532, <32 x i32> %3533, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %3535 = add i32 %3513, %3505
  %3536 = getelementptr inbounds i8, i8* %13, i32 %3535
  %3537 = bitcast i8* %3536 to <4 x i8>*
  %3538 = load <4 x i8>, <4 x i8>* %3537, align 4, !tbaa !108
  %3539 = load <128 x i8>, <128 x i8>* %3523, align 128, !tbaa !106
  %3540 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %3538, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3541 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %sum_input533672.sroa.38.4.us.us.us.us, <128 x i8> %3539, <32 x i32> %3540, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %3542 = load <4 x i8>, <4 x i8>* %3537, align 4, !tbaa !108
  %3543 = load <128 x i8>, <128 x i8>* %3531, align 128, !tbaa !106
  %3544 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %3542, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3545 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %sum_input533672.sroa.47.4.us.us.us.us, <128 x i8> %3543, <32 x i32> %3544, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %3546 = add i32 %3513, %3506
  %3547 = getelementptr inbounds i8, i8* %13, i32 %3546
  %3548 = bitcast i8* %3547 to <4 x i8>*
  %3549 = load <4 x i8>, <4 x i8>* %3548, align 4, !tbaa !108
  %3550 = load <128 x i8>, <128 x i8>* %3523, align 128, !tbaa !106
  %3551 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %3549, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3552 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %sum_input533672.sroa.56.4.us.us.us.us, <128 x i8> %3550, <32 x i32> %3551, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %3553 = load <4 x i8>, <4 x i8>* %3548, align 4, !tbaa !108
  %3554 = load <128 x i8>, <128 x i8>* %3531, align 128, !tbaa !106
  %3555 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %3553, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3556 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %sum_input533672.sroa.65.4.us.us.us.us, <128 x i8> %3554, <32 x i32> %3555, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %3557 = add i32 %3513, %3507
  %3558 = getelementptr inbounds i8, i8* %13, i32 %3557
  %3559 = bitcast i8* %3558 to <4 x i8>*
  %3560 = load <4 x i8>, <4 x i8>* %3559, align 4, !tbaa !108
  %3561 = load <128 x i8>, <128 x i8>* %3523, align 128, !tbaa !106
  %3562 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %3560, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3563 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %sum_input533672.sroa.74.4.us.us.us.us, <128 x i8> %3561, <32 x i32> %3562, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %3564 = load <4 x i8>, <4 x i8>* %3559, align 4, !tbaa !108
  %3565 = load <128 x i8>, <128 x i8>* %3531, align 128, !tbaa !106
  %3566 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %3564, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3567 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %sum_input533672.sroa.83.4.us.us.us.us, <128 x i8> %3565, <32 x i32> %3566, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %3568 = add i32 %3513, %3508
  %3569 = getelementptr inbounds i8, i8* %13, i32 %3568
  %3570 = bitcast i8* %3569 to <4 x i8>*
  %3571 = load <4 x i8>, <4 x i8>* %3570, align 4, !tbaa !108
  %3572 = load <128 x i8>, <128 x i8>* %3523, align 128, !tbaa !106
  %3573 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %3571, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3574 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %sum_input533672.sroa.92.4.us.us.us.us, <128 x i8> %3572, <32 x i32> %3573, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %3575 = load <4 x i8>, <4 x i8>* %3570, align 4, !tbaa !108
  %3576 = load <128 x i8>, <128 x i8>* %3531, align 128, !tbaa !106
  %3577 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %3575, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3578 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %sum_input533672.sroa.101.4.us.us.us.us, <128 x i8> %3576, <32 x i32> %3577, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %3579 = add i32 %3513, %3509
  %3580 = getelementptr inbounds i8, i8* %13, i32 %3579
  %3581 = bitcast i8* %3580 to <4 x i8>*
  %3582 = load <4 x i8>, <4 x i8>* %3581, align 4, !tbaa !108
  %3583 = load <128 x i8>, <128 x i8>* %3523, align 128, !tbaa !106
  %3584 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %3582, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3585 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %sum_input533672.sroa.110.4.us.us.us.us, <128 x i8> %3583, <32 x i32> %3584, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %3586 = load <4 x i8>, <4 x i8>* %3581, align 4, !tbaa !108
  %3587 = load <128 x i8>, <128 x i8>* %3531, align 128, !tbaa !106
  %3588 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %3586, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3589 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %sum_input533672.sroa.119.4.us.us.us.us, <128 x i8> %3587, <32 x i32> %3588, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %3590 = add i32 %3513, %3510
  %3591 = getelementptr inbounds i8, i8* %13, i32 %3590
  %3592 = bitcast i8* %3591 to <4 x i8>*
  %3593 = load <4 x i8>, <4 x i8>* %3592, align 4, !tbaa !108
  %3594 = load <128 x i8>, <128 x i8>* %3523, align 128, !tbaa !106
  %3595 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %3593, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3596 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %sum_input533672.sroa.128.4.us.us.us.us, <128 x i8> %3594, <32 x i32> %3595, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %3597 = load <4 x i8>, <4 x i8>* %3592, align 4, !tbaa !108
  %3598 = load <128 x i8>, <128 x i8>* %3531, align 128, !tbaa !106
  %3599 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %3597, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3600 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %sum_input533672.sroa.137.4.us.us.us.us, <128 x i8> %3598, <32 x i32> %3599, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %3601 = add i32 %3513, %3511
  %3602 = getelementptr inbounds i8, i8* %13, i32 %3601
  %3603 = bitcast i8* %3602 to <4 x i8>*
  %3604 = load <4 x i8>, <4 x i8>* %3603, align 4, !tbaa !108
  %3605 = load <128 x i8>, <128 x i8>* %3523, align 128, !tbaa !106
  %3606 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %3604, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3607 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %sum_input533672.sroa.146.4.us.us.us.us, <128 x i8> %3605, <32 x i32> %3606, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %3608 = load <4 x i8>, <4 x i8>* %3603, align 4, !tbaa !108
  %3609 = load <128 x i8>, <128 x i8>* %3531, align 128, !tbaa !106
  %3610 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %3608, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3611 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %sum_input533672.sroa.155.4.us.us.us.us, <128 x i8> %3609, <32 x i32> %3610, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %3612 = add nuw nsw i32 %"convolved.s1.r19$z.r124142.us.us.us.us", 1
  %.not724.us.us.us.us = icmp eq i32 %3612, %7
  br i1 %.not724.us.us.us.us, label %"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us", label %"for convolved.s1.r19$z.r124140.us.us.us.us"

"end for convolved.s1.r19$z.r124141.loopexit.us.us.us.us": ; preds = %"for convolved.s1.r19$z.r124140.us.us.us.us"
  %3613 = add nuw nsw i32 %"convolved.s1.r19$x139.us.us.us.us", 1
  %.not723.us.us.us.us = icmp eq i32 %3613, %9
  br i1 %.not723.us.us.us.us, label %"end for convolved.s1.r19$x138.loopexit.us.us.us", label %"for convolved.s1.r19$x137.us.us.us.us"

next_bb92:                                        ; preds = %next_bb5
  br i1 %98, label %then_bb384, label %next_bb385

then_bb384:                                       ; preds = %next_bb92
  %3614 = mul nsw i32 %19, %18
  %3615 = mul nsw i32 %22, %20
  %3616 = mul nsw i32 %17, %16
  %3617 = add i32 %3615, %3614
  %t1037 = add i32 %3617, %3616
  %3618 = icmp sgt i32 %21, 0
  br i1 %3618, label %"for output.s0.b.rebased386.preheader", label %after_bb3, !prof !96

"for output.s0.b.rebased386.preheader":           ; preds = %then_bb384
  %3619 = mul nsw i32 %17, %stride_x
  %3620 = mul nsw i32 %3619, 7
  %3621 = mul nsw i32 %3619, 6
  %3622 = mul nsw i32 %3619, 5
  %3623 = shl nsw i32 %3619, 2
  %3624 = mul nsw i32 %3619, 3
  %3625 = shl nsw i32 %3619, 1
  %3626 = sub nsw i32 %stride_x, %16
  %3627 = mul nsw i32 %3626, %17
  %3628 = icmp sgt i32 %29, 0
  %.neg1127 = mul i32 %30, %28
  %.neg1128 = mul i32 %27, %25
  %.neg1129 = mul i32 %31, %20
  %reass.add1131 = add i32 %.neg1127, %.neg1128
  %reass.add1132 = add i32 %reass.add1131, %.neg1129
  %3629 = add nuw nsw i32 %26, 7
  %3630 = ashr i32 %3629, 3
  %b16 = add nsw i32 %26, -8
  %3631 = icmp sgt i32 %11, 0
  %3632 = icmp sgt i32 %9, 0
  %3633 = icmp sgt i32 %7, 0
  %3634 = ashr i32 %4, 5
  %3635 = icmp sgt i32 %4, 31
  %3636 = icmp sgt i32 %output_shift, 0
  %3637 = select i1 %3636, <32 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, <32 x i32> zeroinitializer
  %3638 = add nsw i32 %output_shift, -1
  %3639 = insertelement <1 x i32> poison, i32 %output_multiplier, i32 0
  %3640 = insertelement <1 x i32> poison, i32 %output_shift, i32 0
  %3641 = insertelement <1 x i32> poison, i32 %3638, i32 0
  %3642 = zext i8 %output_zero to i16
  %3643 = insertelement <32 x i16> undef, i16 %3642, i32 0
  %3644 = shufflevector <32 x i16> %3643, <32 x i16> undef, <64 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3645 = bitcast <64 x i16> %3644 to <32 x i32>
  %3646 = insertelement <32 x i8> undef, i8 %output_max, i32 0
  %3647 = shufflevector <32 x i8> %3646, <32 x i8> undef, <128 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3648 = bitcast <128 x i8> %3647 to <32 x i32>
  %3649 = insertelement <32 x i8> undef, i8 %output_min, i32 0
  %3650 = shufflevector <32 x i8> %3649, <32 x i8> undef, <128 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3651 = bitcast <128 x i8> %3650 to <32 x i32>
  br i1 %3628, label %"for output.s0.b.rebased386.us.preheader", label %after_bb3, !prof !96

"for output.s0.b.rebased386.us.preheader":        ; preds = %"for output.s0.b.rebased386.preheader"
  %3652 = add i32 %3616, %3614
  %3653 = add i32 %9, -1
  %brmerge1672.demorgan = and i1 %3632, %3633
  %xtraiter1851 = and i32 %7, 1
  %3654 = icmp eq i32 %7, 1
  %unroll_iter1853 = and i32 %7, -2
  %lcmp.mod1852.not = icmp eq i32 %xtraiter1851, 0
  %xtraiter1855 = and i32 %9, 3
  %3655 = icmp ult i32 %3653, 3
  %unroll_iter1859 = and i32 %9, -4
  %lcmp.mod1857.not = icmp eq i32 %xtraiter1855, 0
  br label %"for output.s0.b.rebased386.us"

"for output.s0.b.rebased386.us":                  ; preds = %"for output.s0.b.rebased386.us.preheader", %"end for output.s0.y.rebased390.loopexit.us"
  %sum_input533672.sroa.0.7.us = phi <32 x i32> [ %.us-phi1389.us, %"end for output.s0.y.rebased390.loopexit.us" ], [ undef, %"for output.s0.b.rebased386.us.preheader" ]
  %output.s0.b.rebased388.us = phi i32 [ %3662, %"end for output.s0.y.rebased390.loopexit.us" ], [ 0, %"for output.s0.b.rebased386.us.preheader" ]
  %3656 = add nsw i32 %output.s0.b.rebased388.us, %20
  %3657 = mul nsw i32 %3656, %31
  %3658 = sub i32 %3657, %reass.add1132
  %3659 = mul nsw i32 %3656, %22
  %3660 = sub i32 %3659, %3617
  %3661 = sub nsw i32 %3659, %t1037
  br i1 %100, label %"for output.s0.y.rebased389.us.us", label %"end for output.s0.y.rebased390.loopexit.us", !prof !96

"end for output.s0.y.rebased390.loopexit.us":     ; preds = %"end for output.s0.x.xo393.loopexit.us.us", %"for output.s0.b.rebased386.us"
  %.us-phi1389.us = phi <32 x i32> [ %sum_input533672.sroa.0.7.us, %"for output.s0.b.rebased386.us" ], [ %sum_input533672.sroa.0.20.us.us, %"end for output.s0.x.xo393.loopexit.us.us" ]
  %3662 = add nuw nsw i32 %output.s0.b.rebased388.us, 1
  %.not706.us = icmp eq i32 %3662, %21
  br i1 %.not706.us, label %after_bb3, label %"for output.s0.b.rebased386.us"

"for output.s0.y.rebased389.us.us":               ; preds = %"for output.s0.b.rebased386.us", %"end for output.s0.x.xo393.loopexit.us.us"
  %sum_input533672.sroa.0.8.us.us = phi <32 x i32> [ %sum_input533672.sroa.0.20.us.us, %"end for output.s0.x.xo393.loopexit.us.us" ], [ %sum_input533672.sroa.0.7.us, %"for output.s0.b.rebased386.us" ]
  %output.s0.y.rebased391.us.us = phi i32 [ %4119, %"end for output.s0.x.xo393.loopexit.us.us" ], [ 0, %"for output.s0.b.rebased386.us" ]
  %3663 = add nsw i32 %output.s0.y.rebased391.us.us, %28
  %3664 = mul nsw i32 %3663, %30
  %t1066.us.us = add i32 %3658, %3664
  %3665 = mul nsw i32 %3663, %stride_y
  br label %"for output.s0.x.xo392.us.us"

"for output.s0.x.xo392.us.us":                    ; preds = %"end for output.s0.c.co421.us.us", %"for output.s0.y.rebased389.us.us"
  %sum_input533672.sroa.0.10.us.us = phi <32 x i32> [ %sum_input533672.sroa.0.20.us.us, %"end for output.s0.c.co421.us.us" ], [ %sum_input533672.sroa.0.8.us.us, %"for output.s0.y.rebased389.us.us" ]
  %output.s0.x.xo394.us.us = phi i32 [ %4070, %"end for output.s0.c.co421.us.us" ], [ 0, %"for output.s0.y.rebased389.us.us" ]
  %a14.us.us = shl nsw i32 %output.s0.x.xo394.us.us, 3
  %3666 = icmp slt i32 %a14.us.us, %b16
  %output.s0.x.x.base.s395.us.us = select i1 %3666, i32 %a14.us.us, i32 %b16
  br i1 %t843.not, label %"consume sum_input419.us.us", label %then_bb399.us.us

then_bb399.us.us:                                 ; preds = %"for output.s0.x.xo392.us.us"
  %sum_input533672.sroa.0.0.vecblend.us.us = shufflevector <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, <32 x i32> %sum_input533672.sroa.0.10.us.us, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  br i1 %t844, label %then_bb402.us.us, label %next_bb403.us.us

next_bb403.us.us:                                 ; preds = %then_bb399.us.us
  br i1 %3631, label %"for sum_input.s1.r19$y410.preheader.us.us", label %"consume sum_input419.us.us", !prof !96

then_bb402.us.us:                                 ; preds = %then_bb399.us.us
  br i1 %3631, label %"for sum_input.s1.r19$y404.preheader.us.us", label %"consume sum_input419.us.us", !prof !96

"for sum_input.s1.r19$y404.us.us":                ; preds = %"for sum_input.s1.r19$y404.preheader.us.us", %"end for sum_input.s1.r19$x408.us.us"
  %sum_input533672.sroa.0.12.us.us = phi <32 x i32> [ %sum_input533672.sroa.0.14.us.us, %"end for sum_input.s1.r19$x408.us.us" ], [ %sum_input533672.sroa.0.0.vecblend.us.us, %"for sum_input.s1.r19$y404.preheader.us.us" ]
  %"sum_input.s1.r19$y406.us.us" = phi i32 [ %3767, %"end for sum_input.s1.r19$x408.us.us" ], [ 0, %"for sum_input.s1.r19$y404.preheader.us.us" ]
  br i1 %3632, label %"for sum_input.s1.r19$x407.preheader.us.us", label %"end for sum_input.s1.r19$x408.us.us", !prof !96

"for sum_input.s1.r19$x407.us.us":                ; preds = %"for sum_input.s1.r19$x407.preheader.us.us", %"for sum_input.s1.r19$x407.us.us"
  %sum_input533672.sroa.0.13.us.us = phi <32 x i32> [ %sum_input533672.sroa.0.0.vecblend998.us.us.3, %"for sum_input.s1.r19$x407.us.us" ], [ %sum_input533672.sroa.0.12.us.us, %"for sum_input.s1.r19$x407.preheader.us.us" ]
  %"sum_input.s1.r19$x409.us.us" = phi i32 [ %3746, %"for sum_input.s1.r19$x407.us.us" ], [ 0, %"for sum_input.s1.r19$x407.preheader.us.us" ]
  %niter1860 = phi i32 [ %niter1860.nsub.3, %"for sum_input.s1.r19$x407.us.us" ], [ %unroll_iter1859, %"for sum_input.s1.r19$x407.preheader.us.us" ]
  %3667 = mul nsw i32 %"sum_input.s1.r19$x409.us.us", %dilation_x
  %reass.add1137.us.us = add i32 %4116, %3667
  %reass.mul1138.us.us = shl i32 %reass.add1137.us.us, 2
  %3668 = add i32 %t1069.us.us, %reass.mul1138.us.us
  %3669 = getelementptr inbounds i8, i8* %13, i32 %3668
  %3670 = bitcast i8* %3669 to <32 x i8>*
  %3671 = load <32 x i8>, <32 x i8>* %3670, align 4, !tbaa !108
  %t1230.us.us = zext <32 x i8> %3671 to <32 x i16>
  %3672 = shufflevector <32 x i16> %t1230.us.us, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3673 = bitcast <64 x i16> %3672 to <32 x i32>
  %3674 = call <32 x i32> @llvm.hexagon.V6.vpackeh.128B(<32 x i32> undef, <32 x i32> %3673)
  %3675 = bitcast <32 x i32> %3674 to <64 x i16>
  %3676 = call <32 x i32> @llvm.hexagon.V6.vpackoh.128B(<32 x i32> undef, <32 x i32> %3673)
  %3677 = bitcast <32 x i32> %3676 to <64 x i16>
  %3678 = add <64 x i16> %3677, %3675
  %3679 = shufflevector <64 x i16> %3678, <64 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %t1229.us.us = zext <16 x i16> %3679 to <16 x i32>
  %3680 = shufflevector <16 x i32> %t1229.us.us, <16 x i32> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3681 = call <64 x i32> @llvm.hexagon.V6.vdealvdd.128B(<32 x i32> undef, <32 x i32> %3680, i32 -4)
  %3682 = call <32 x i32> @llvm.hexagon.V6.lo.128B(<64 x i32> %3681)
  %3683 = add nsw <32 x i32> %3682, %sum_input533672.sroa.0.13.us.us
  %3684 = call <32 x i32> @llvm.hexagon.V6.hi.128B(<64 x i32> %3681)
  %3685 = add nsw <32 x i32> %3683, %3684
  %sum_input533672.sroa.0.0.vecblend998.us.us = shufflevector <32 x i32> %3685, <32 x i32> %sum_input533672.sroa.0.13.us.us, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %3686 = or i32 %"sum_input.s1.r19$x409.us.us", 1
  %3687 = mul nsw i32 %3686, %dilation_x
  %reass.add1137.us.us.1 = add i32 %4116, %3687
  %reass.mul1138.us.us.1 = shl i32 %reass.add1137.us.us.1, 2
  %3688 = add i32 %t1069.us.us, %reass.mul1138.us.us.1
  %3689 = getelementptr inbounds i8, i8* %13, i32 %3688
  %3690 = bitcast i8* %3689 to <32 x i8>*
  %3691 = load <32 x i8>, <32 x i8>* %3690, align 4, !tbaa !108
  %t1230.us.us.1 = zext <32 x i8> %3691 to <32 x i16>
  %3692 = shufflevector <32 x i16> %t1230.us.us.1, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3693 = bitcast <64 x i16> %3692 to <32 x i32>
  %3694 = call <32 x i32> @llvm.hexagon.V6.vpackeh.128B(<32 x i32> undef, <32 x i32> %3693)
  %3695 = bitcast <32 x i32> %3694 to <64 x i16>
  %3696 = call <32 x i32> @llvm.hexagon.V6.vpackoh.128B(<32 x i32> undef, <32 x i32> %3693)
  %3697 = bitcast <32 x i32> %3696 to <64 x i16>
  %3698 = add <64 x i16> %3697, %3695
  %3699 = shufflevector <64 x i16> %3698, <64 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %t1229.us.us.1 = zext <16 x i16> %3699 to <16 x i32>
  %3700 = shufflevector <16 x i32> %t1229.us.us.1, <16 x i32> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3701 = call <64 x i32> @llvm.hexagon.V6.vdealvdd.128B(<32 x i32> undef, <32 x i32> %3700, i32 -4)
  %3702 = call <32 x i32> @llvm.hexagon.V6.lo.128B(<64 x i32> %3701)
  %3703 = add nsw <32 x i32> %3702, %sum_input533672.sroa.0.0.vecblend998.us.us
  %3704 = call <32 x i32> @llvm.hexagon.V6.hi.128B(<64 x i32> %3701)
  %3705 = add nsw <32 x i32> %3703, %3704
  %sum_input533672.sroa.0.0.vecblend998.us.us.1 = shufflevector <32 x i32> %3705, <32 x i32> %sum_input533672.sroa.0.0.vecblend998.us.us, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %3706 = or i32 %"sum_input.s1.r19$x409.us.us", 2
  %3707 = mul nsw i32 %3706, %dilation_x
  %reass.add1137.us.us.2 = add i32 %4116, %3707
  %reass.mul1138.us.us.2 = shl i32 %reass.add1137.us.us.2, 2
  %3708 = add i32 %t1069.us.us, %reass.mul1138.us.us.2
  %3709 = getelementptr inbounds i8, i8* %13, i32 %3708
  %3710 = bitcast i8* %3709 to <32 x i8>*
  %3711 = load <32 x i8>, <32 x i8>* %3710, align 4, !tbaa !108
  %t1230.us.us.2 = zext <32 x i8> %3711 to <32 x i16>
  %3712 = shufflevector <32 x i16> %t1230.us.us.2, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3713 = bitcast <64 x i16> %3712 to <32 x i32>
  %3714 = call <32 x i32> @llvm.hexagon.V6.vpackeh.128B(<32 x i32> undef, <32 x i32> %3713)
  %3715 = bitcast <32 x i32> %3714 to <64 x i16>
  %3716 = call <32 x i32> @llvm.hexagon.V6.vpackoh.128B(<32 x i32> undef, <32 x i32> %3713)
  %3717 = bitcast <32 x i32> %3716 to <64 x i16>
  %3718 = add <64 x i16> %3717, %3715
  %3719 = shufflevector <64 x i16> %3718, <64 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %t1229.us.us.2 = zext <16 x i16> %3719 to <16 x i32>
  %3720 = shufflevector <16 x i32> %t1229.us.us.2, <16 x i32> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3721 = call <64 x i32> @llvm.hexagon.V6.vdealvdd.128B(<32 x i32> undef, <32 x i32> %3720, i32 -4)
  %3722 = call <32 x i32> @llvm.hexagon.V6.lo.128B(<64 x i32> %3721)
  %3723 = add nsw <32 x i32> %3722, %sum_input533672.sroa.0.0.vecblend998.us.us.1
  %3724 = call <32 x i32> @llvm.hexagon.V6.hi.128B(<64 x i32> %3721)
  %3725 = add nsw <32 x i32> %3723, %3724
  %sum_input533672.sroa.0.0.vecblend998.us.us.2 = shufflevector <32 x i32> %3725, <32 x i32> %sum_input533672.sroa.0.0.vecblend998.us.us.1, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %3726 = or i32 %"sum_input.s1.r19$x409.us.us", 3
  %3727 = mul nsw i32 %3726, %dilation_x
  %reass.add1137.us.us.3 = add i32 %4116, %3727
  %reass.mul1138.us.us.3 = shl i32 %reass.add1137.us.us.3, 2
  %3728 = add i32 %t1069.us.us, %reass.mul1138.us.us.3
  %3729 = getelementptr inbounds i8, i8* %13, i32 %3728
  %3730 = bitcast i8* %3729 to <32 x i8>*
  %3731 = load <32 x i8>, <32 x i8>* %3730, align 4, !tbaa !108
  %t1230.us.us.3 = zext <32 x i8> %3731 to <32 x i16>
  %3732 = shufflevector <32 x i16> %t1230.us.us.3, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3733 = bitcast <64 x i16> %3732 to <32 x i32>
  %3734 = call <32 x i32> @llvm.hexagon.V6.vpackeh.128B(<32 x i32> undef, <32 x i32> %3733)
  %3735 = bitcast <32 x i32> %3734 to <64 x i16>
  %3736 = call <32 x i32> @llvm.hexagon.V6.vpackoh.128B(<32 x i32> undef, <32 x i32> %3733)
  %3737 = bitcast <32 x i32> %3736 to <64 x i16>
  %3738 = add <64 x i16> %3737, %3735
  %3739 = shufflevector <64 x i16> %3738, <64 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %t1229.us.us.3 = zext <16 x i16> %3739 to <16 x i32>
  %3740 = shufflevector <16 x i32> %t1229.us.us.3, <16 x i32> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3741 = call <64 x i32> @llvm.hexagon.V6.vdealvdd.128B(<32 x i32> undef, <32 x i32> %3740, i32 -4)
  %3742 = call <32 x i32> @llvm.hexagon.V6.lo.128B(<64 x i32> %3741)
  %3743 = add nsw <32 x i32> %3742, %sum_input533672.sroa.0.0.vecblend998.us.us.2
  %3744 = call <32 x i32> @llvm.hexagon.V6.hi.128B(<64 x i32> %3741)
  %3745 = add nsw <32 x i32> %3743, %3744
  %sum_input533672.sroa.0.0.vecblend998.us.us.3 = shufflevector <32 x i32> %3745, <32 x i32> %sum_input533672.sroa.0.0.vecblend998.us.us.2, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %3746 = add nuw nsw i32 %"sum_input.s1.r19$x409.us.us", 4
  %niter1860.nsub.3 = add i32 %niter1860, -4
  %niter1860.ncmp.3 = icmp eq i32 %niter1860.nsub.3, 0
  br i1 %niter1860.ncmp.3, label %"end for sum_input.s1.r19$x408.us.us.loopexit.unr-lcssa", label %"for sum_input.s1.r19$x407.us.us"

"end for sum_input.s1.r19$x408.us.us.loopexit.unr-lcssa": ; preds = %"for sum_input.s1.r19$x407.us.us", %"for sum_input.s1.r19$x407.preheader.us.us"
  %sum_input533672.sroa.0.0.vecblend998.us.us.lcssa.ph = phi <32 x i32> [ undef, %"for sum_input.s1.r19$x407.preheader.us.us" ], [ %sum_input533672.sroa.0.0.vecblend998.us.us.3, %"for sum_input.s1.r19$x407.us.us" ]
  %sum_input533672.sroa.0.13.us.us.unr = phi <32 x i32> [ %sum_input533672.sroa.0.12.us.us, %"for sum_input.s1.r19$x407.preheader.us.us" ], [ %sum_input533672.sroa.0.0.vecblend998.us.us.3, %"for sum_input.s1.r19$x407.us.us" ]
  %"sum_input.s1.r19$x409.us.us.unr" = phi i32 [ 0, %"for sum_input.s1.r19$x407.preheader.us.us" ], [ %3746, %"for sum_input.s1.r19$x407.us.us" ]
  br i1 %lcmp.mod1857.not, label %"end for sum_input.s1.r19$x408.us.us", label %"for sum_input.s1.r19$x407.us.us.epil"

"for sum_input.s1.r19$x407.us.us.epil":           ; preds = %"end for sum_input.s1.r19$x408.us.us.loopexit.unr-lcssa", %"for sum_input.s1.r19$x407.us.us.epil"
  %sum_input533672.sroa.0.13.us.us.epil = phi <32 x i32> [ %sum_input533672.sroa.0.0.vecblend998.us.us.epil, %"for sum_input.s1.r19$x407.us.us.epil" ], [ %sum_input533672.sroa.0.13.us.us.unr, %"end for sum_input.s1.r19$x408.us.us.loopexit.unr-lcssa" ]
  %"sum_input.s1.r19$x409.us.us.epil" = phi i32 [ %3766, %"for sum_input.s1.r19$x407.us.us.epil" ], [ %"sum_input.s1.r19$x409.us.us.unr", %"end for sum_input.s1.r19$x408.us.us.loopexit.unr-lcssa" ]
  %epil.iter1856 = phi i32 [ %epil.iter1856.sub, %"for sum_input.s1.r19$x407.us.us.epil" ], [ %xtraiter1855, %"end for sum_input.s1.r19$x408.us.us.loopexit.unr-lcssa" ]
  %3747 = mul nsw i32 %"sum_input.s1.r19$x409.us.us.epil", %dilation_x
  %reass.add1137.us.us.epil = add i32 %4116, %3747
  %reass.mul1138.us.us.epil = shl i32 %reass.add1137.us.us.epil, 2
  %3748 = add i32 %t1069.us.us, %reass.mul1138.us.us.epil
  %3749 = getelementptr inbounds i8, i8* %13, i32 %3748
  %3750 = bitcast i8* %3749 to <32 x i8>*
  %3751 = load <32 x i8>, <32 x i8>* %3750, align 4, !tbaa !108
  %t1230.us.us.epil = zext <32 x i8> %3751 to <32 x i16>
  %3752 = shufflevector <32 x i16> %t1230.us.us.epil, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3753 = bitcast <64 x i16> %3752 to <32 x i32>
  %3754 = call <32 x i32> @llvm.hexagon.V6.vpackeh.128B(<32 x i32> undef, <32 x i32> %3753)
  %3755 = bitcast <32 x i32> %3754 to <64 x i16>
  %3756 = call <32 x i32> @llvm.hexagon.V6.vpackoh.128B(<32 x i32> undef, <32 x i32> %3753)
  %3757 = bitcast <32 x i32> %3756 to <64 x i16>
  %3758 = add <64 x i16> %3757, %3755
  %3759 = shufflevector <64 x i16> %3758, <64 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %t1229.us.us.epil = zext <16 x i16> %3759 to <16 x i32>
  %3760 = shufflevector <16 x i32> %t1229.us.us.epil, <16 x i32> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3761 = call <64 x i32> @llvm.hexagon.V6.vdealvdd.128B(<32 x i32> undef, <32 x i32> %3760, i32 -4)
  %3762 = call <32 x i32> @llvm.hexagon.V6.lo.128B(<64 x i32> %3761)
  %3763 = add nsw <32 x i32> %3762, %sum_input533672.sroa.0.13.us.us.epil
  %3764 = call <32 x i32> @llvm.hexagon.V6.hi.128B(<64 x i32> %3761)
  %3765 = add nsw <32 x i32> %3763, %3764
  %sum_input533672.sroa.0.0.vecblend998.us.us.epil = shufflevector <32 x i32> %3765, <32 x i32> %sum_input533672.sroa.0.13.us.us.epil, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %3766 = add nuw nsw i32 %"sum_input.s1.r19$x409.us.us.epil", 1
  %epil.iter1856.sub = add i32 %epil.iter1856, -1
  %epil.iter1856.cmp.not = icmp eq i32 %epil.iter1856.sub, 0
  br i1 %epil.iter1856.cmp.not, label %"end for sum_input.s1.r19$x408.us.us", label %"for sum_input.s1.r19$x407.us.us.epil", !llvm.loop !114

"end for sum_input.s1.r19$x408.us.us":            ; preds = %"end for sum_input.s1.r19$x408.us.us.loopexit.unr-lcssa", %"for sum_input.s1.r19$x407.us.us.epil", %"for sum_input.s1.r19$y404.us.us"
  %sum_input533672.sroa.0.14.us.us = phi <32 x i32> [ %sum_input533672.sroa.0.12.us.us, %"for sum_input.s1.r19$y404.us.us" ], [ %sum_input533672.sroa.0.0.vecblend998.us.us.lcssa.ph, %"end for sum_input.s1.r19$x408.us.us.loopexit.unr-lcssa" ], [ %sum_input533672.sroa.0.0.vecblend998.us.us.epil, %"for sum_input.s1.r19$x407.us.us.epil" ]
  %3767 = add nuw nsw i32 %"sum_input.s1.r19$y406.us.us", 1
  %.not716.us.us = icmp eq i32 %3767, %11
  br i1 %.not716.us.us, label %"consume sum_input419.us.us", label %"for sum_input.s1.r19$y404.us.us"

"consume sum_input419.us.us":                     ; preds = %"end for sum_input.s1.r19$x414.loopexit.split.us.us.us.us.us", %"end for sum_input.s1.r19$x408.us.us", %"for sum_input.s1.r19$y410.preheader.us.us", %then_bb402.us.us, %next_bb403.us.us, %"for output.s0.x.xo392.us.us"
  %sum_input533672.sroa.0.20.us.us = phi <32 x i32> [ %sum_input533672.sroa.0.10.us.us, %"for output.s0.x.xo392.us.us" ], [ %sum_input533672.sroa.0.0.vecblend.us.us, %then_bb402.us.us ], [ %sum_input533672.sroa.0.0.vecblend.us.us, %next_bb403.us.us ], [ %sum_input533672.sroa.0.0.vecblend.us.us, %"for sum_input.s1.r19$y410.preheader.us.us" ], [ %sum_input533672.sroa.0.14.us.us, %"end for sum_input.s1.r19$x408.us.us" ], [ %sum_input533672.sroa.0.0.vecblend1003.us.us.us.us.us.lcssa, %"end for sum_input.s1.r19$x414.loopexit.split.us.us.us.us.us" ]
  br i1 %3635, label %"for output.s0.c.co420.preheader.us.us", label %"end for output.s0.c.co421.us.us", !prof !96

"for output.s0.c.co420.us.us":                    ; preds = %"for output.s0.c.co420.preheader.us.us", %"consume convolved436.us.us"
  %output.s0.c.co422.us.us = phi i32 [ %4069, %"consume convolved436.us.us" ], [ 0, %"for output.s0.c.co420.preheader.us.us" ]
  %3768 = shl nsw i32 %output.s0.c.co422.us.us, 5
  %3769 = getelementptr inbounds i32, i32* %offset_c, i32 %3768
  %3770 = bitcast i32* %3769 to <32 x i32>*
  %3771 = load <32 x i32>, <32 x i32>* %3770, align 128, !tbaa !104
  br i1 %t843.not, label %after_bb424.us.us, label %next_bb426.us.us

next_bb426.us.us:                                 ; preds = %"for output.s0.c.co420.us.us"
  %3772 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4076, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3773 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %3771, <32 x i32> %3772, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3774 = load <32 x i32>, <32 x i32>* %3770, align 128, !tbaa !104
  %3775 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4078, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3776 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %3774, <32 x i32> %3775, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3777 = load <32 x i32>, <32 x i32>* %3770, align 128, !tbaa !104
  %3778 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4080, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3779 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %3777, <32 x i32> %3778, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3780 = load <32 x i32>, <32 x i32>* %3770, align 128, !tbaa !104
  %3781 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4082, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3782 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %3780, <32 x i32> %3781, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3783 = load <32 x i32>, <32 x i32>* %3770, align 128, !tbaa !104
  %3784 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4084, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3785 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %3783, <32 x i32> %3784, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3786 = load <32 x i32>, <32 x i32>* %3770, align 128, !tbaa !104
  %3787 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4086, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3788 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %3786, <32 x i32> %3787, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3789 = load <32 x i32>, <32 x i32>* %3770, align 128, !tbaa !104
  %3790 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4088, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3791 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %3789, <32 x i32> %3790, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3792 = load <32 x i32>, <32 x i32>* %3770, align 128, !tbaa !104
  %3793 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4090, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3794 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %3792, <32 x i32> %3793, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  br label %after_bb424.us.us

after_bb424.us.us:                                ; preds = %"for output.s0.c.co420.us.us", %next_bb426.us.us
  %convolved673.sroa.123.7.us.us = phi <32 x i32> [ %3794, %next_bb426.us.us ], [ %3771, %"for output.s0.c.co420.us.us" ]
  %convolved673.sroa.113.7.us.us = phi <32 x i32> [ %3791, %next_bb426.us.us ], [ %3771, %"for output.s0.c.co420.us.us" ]
  %convolved673.sroa.103.7.us.us = phi <32 x i32> [ %3788, %next_bb426.us.us ], [ %3771, %"for output.s0.c.co420.us.us" ]
  %convolved673.sroa.93.7.us.us = phi <32 x i32> [ %3785, %next_bb426.us.us ], [ %3771, %"for output.s0.c.co420.us.us" ]
  %convolved673.sroa.78.7.us.us = phi <32 x i32> [ %3782, %next_bb426.us.us ], [ %3771, %"for output.s0.c.co420.us.us" ]
  %convolved673.sroa.63.7.us.us = phi <32 x i32> [ %3779, %next_bb426.us.us ], [ %3771, %"for output.s0.c.co420.us.us" ]
  %convolved673.sroa.48.7.us.us = phi <32 x i32> [ %3776, %next_bb426.us.us ], [ %3771, %"for output.s0.c.co420.us.us" ]
  %convolved673.sroa.0.21.us.us = phi <32 x i32> [ %3773, %next_bb426.us.us ], [ %3771, %"for output.s0.c.co420.us.us" ]
  br i1 %3631, label %"for convolved.s1.r19$y427.preheader.us.us", label %"consume convolved436.us.us", !prof !96

"consume convolved436.us.us":                     ; preds = %"end for convolved.s1.r19$x431.loopexit.us.us.us", %"for convolved.s1.r19$y427.preheader.us.us", %after_bb424.us.us
  %convolved673.sroa.123.13.us.us = phi <32 x i32> [ %convolved673.sroa.123.7.us.us, %after_bb424.us.us ], [ %convolved673.sroa.123.7.us.us, %"for convolved.s1.r19$y427.preheader.us.us" ], [ %.us-phi1352.us.us.us, %"end for convolved.s1.r19$x431.loopexit.us.us.us" ]
  %convolved673.sroa.113.13.us.us = phi <32 x i32> [ %convolved673.sroa.113.7.us.us, %after_bb424.us.us ], [ %convolved673.sroa.113.7.us.us, %"for convolved.s1.r19$y427.preheader.us.us" ], [ %.us-phi1353.us.us.us, %"end for convolved.s1.r19$x431.loopexit.us.us.us" ]
  %convolved673.sroa.103.13.us.us = phi <32 x i32> [ %convolved673.sroa.103.7.us.us, %after_bb424.us.us ], [ %convolved673.sroa.103.7.us.us, %"for convolved.s1.r19$y427.preheader.us.us" ], [ %.us-phi1354.us.us.us, %"end for convolved.s1.r19$x431.loopexit.us.us.us" ]
  %convolved673.sroa.93.13.us.us = phi <32 x i32> [ %convolved673.sroa.93.7.us.us, %after_bb424.us.us ], [ %convolved673.sroa.93.7.us.us, %"for convolved.s1.r19$y427.preheader.us.us" ], [ %.us-phi1355.us.us.us, %"end for convolved.s1.r19$x431.loopexit.us.us.us" ]
  %convolved673.sroa.78.13.us.us = phi <32 x i32> [ %convolved673.sroa.78.7.us.us, %after_bb424.us.us ], [ %convolved673.sroa.78.7.us.us, %"for convolved.s1.r19$y427.preheader.us.us" ], [ %.us-phi1356.us.us.us, %"end for convolved.s1.r19$x431.loopexit.us.us.us" ]
  %convolved673.sroa.63.13.us.us = phi <32 x i32> [ %convolved673.sroa.63.7.us.us, %after_bb424.us.us ], [ %convolved673.sroa.63.7.us.us, %"for convolved.s1.r19$y427.preheader.us.us" ], [ %.us-phi1357.us.us.us, %"end for convolved.s1.r19$x431.loopexit.us.us.us" ]
  %convolved673.sroa.48.13.us.us = phi <32 x i32> [ %convolved673.sroa.48.7.us.us, %after_bb424.us.us ], [ %convolved673.sroa.48.7.us.us, %"for convolved.s1.r19$y427.preheader.us.us" ], [ %.us-phi1358.us.us.us, %"end for convolved.s1.r19$x431.loopexit.us.us.us" ]
  %convolved673.sroa.0.27.us.us = phi <32 x i32> [ %convolved673.sroa.0.21.us.us, %after_bb424.us.us ], [ %convolved673.sroa.0.21.us.us, %"for convolved.s1.r19$y427.preheader.us.us" ], [ %.us-phi1359.us.us.us, %"end for convolved.s1.r19$x431.loopexit.us.us.us" ]
  %3795 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3640, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3796 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3797 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.0.27.us.us, <32 x i32> %3796, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3798 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3799 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3797, <32 x i32> %convolved673.sroa.0.27.us.us, <32 x i32> %3798, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3800 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3795, <1 x i32> zeroinitializer, <32 x i32> %3799, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3801 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3641, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3802 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3803 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.0.27.us.us, <32 x i32> %3802, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3804 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3805 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3803, <32 x i32> %convolved673.sroa.0.27.us.us, <32 x i32> %3804, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3806 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3801, <1 x i32> zeroinitializer, <32 x i32> %3805, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3807 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %3806, <32 x i32> %3637, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %3808 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %3800, <64 x i16> %3807, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3809 = call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.2(<32 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>, <32 x i32> %3808, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3810 = call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.2(<32 x i32> %3809, <32 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3811 = trunc <32 x i32> %3810 to <32 x i16>
  %3812 = shufflevector <32 x i16> %3811, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3813 = bitcast <64 x i16> %3812 to <32 x i32>
  %3814 = call <32 x i32> @llvm.hexagon.V6.vaddhsat.128B(<32 x i32> %3813, <32 x i32> %3645) #11
  %3815 = call <32 x i32> @llvm.hexagon.V6.vminh.128B(<32 x i32> %3814, <32 x i32> <i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>) #11
  %3816 = call <32 x i32> @llvm.hexagon.V6.vmaxh.128B(<32 x i32> %3815, <32 x i32> zeroinitializer) #11
  %3817 = bitcast <32 x i32> %3816 to <64 x i16>
  %3818 = shufflevector <64 x i16> %3817, <64 x i16> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3819 = trunc <32 x i16> %3818 to <32 x i8>
  %3820 = shufflevector <32 x i8> %3819, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3821 = bitcast <128 x i8> %3820 to <32 x i32>
  %3822 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %3821, <32 x i32> %3648) #11
  %3823 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %3822, <32 x i32> %3651) #11
  %3824 = bitcast <32 x i32> %3823 to <128 x i8>
  %3825 = shufflevector <128 x i8> %3824, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3826 = shl nsw i32 %output.s0.c.co422.us.us, 5
  %3827 = add i32 %3826, %t1066.us.us
  %3828 = add i32 %3827, %4107
  %3829 = getelementptr inbounds i8, i8* %23, i32 %3828
  %3830 = bitcast i8* %3829 to <32 x i8>*
  store <32 x i8> %3825, <32 x i8>* %3830, align 1, !tbaa !111
  %3831 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3640, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3832 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3833 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.48.13.us.us, <32 x i32> %3832, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3834 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3835 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3833, <32 x i32> %convolved673.sroa.48.13.us.us, <32 x i32> %3834, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3836 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3831, <1 x i32> zeroinitializer, <32 x i32> %3835, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3837 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3641, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3838 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3839 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.48.13.us.us, <32 x i32> %3838, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3840 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3841 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3839, <32 x i32> %convolved673.sroa.48.13.us.us, <32 x i32> %3840, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3842 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3837, <1 x i32> zeroinitializer, <32 x i32> %3841, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3843 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %3842, <32 x i32> %3637, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %3844 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %3836, <64 x i16> %3843, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3845 = call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.2(<32 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>, <32 x i32> %3844, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3846 = call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.2(<32 x i32> %3845, <32 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3847 = trunc <32 x i32> %3846 to <32 x i16>
  %3848 = shufflevector <32 x i16> %3847, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3849 = bitcast <64 x i16> %3848 to <32 x i32>
  %3850 = call <32 x i32> @llvm.hexagon.V6.vaddhsat.128B(<32 x i32> %3849, <32 x i32> %3645) #11
  %3851 = call <32 x i32> @llvm.hexagon.V6.vminh.128B(<32 x i32> %3850, <32 x i32> <i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>) #11
  %3852 = call <32 x i32> @llvm.hexagon.V6.vmaxh.128B(<32 x i32> %3851, <32 x i32> zeroinitializer) #11
  %3853 = bitcast <32 x i32> %3852 to <64 x i16>
  %3854 = shufflevector <64 x i16> %3853, <64 x i16> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3855 = trunc <32 x i16> %3854 to <32 x i8>
  %3856 = shufflevector <32 x i8> %3855, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3857 = bitcast <128 x i8> %3856 to <32 x i32>
  %3858 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %3857, <32 x i32> %3648) #11
  %3859 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %3858, <32 x i32> %3651) #11
  %3860 = bitcast <32 x i32> %3859 to <128 x i8>
  %3861 = shufflevector <128 x i8> %3860, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3862 = add i32 %3827, %4108
  %3863 = getelementptr inbounds i8, i8* %23, i32 %3862
  %3864 = bitcast i8* %3863 to <32 x i8>*
  store <32 x i8> %3861, <32 x i8>* %3864, align 1, !tbaa !111
  %3865 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3640, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3866 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3867 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.63.13.us.us, <32 x i32> %3866, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3868 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3869 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3867, <32 x i32> %convolved673.sroa.63.13.us.us, <32 x i32> %3868, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3870 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3865, <1 x i32> zeroinitializer, <32 x i32> %3869, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3871 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3641, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3872 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3873 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.63.13.us.us, <32 x i32> %3872, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3874 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3875 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3873, <32 x i32> %convolved673.sroa.63.13.us.us, <32 x i32> %3874, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3876 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3871, <1 x i32> zeroinitializer, <32 x i32> %3875, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3877 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %3876, <32 x i32> %3637, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %3878 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %3870, <64 x i16> %3877, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3879 = call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.2(<32 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>, <32 x i32> %3878, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3880 = call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.2(<32 x i32> %3879, <32 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3881 = trunc <32 x i32> %3880 to <32 x i16>
  %3882 = shufflevector <32 x i16> %3881, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3883 = bitcast <64 x i16> %3882 to <32 x i32>
  %3884 = call <32 x i32> @llvm.hexagon.V6.vaddhsat.128B(<32 x i32> %3883, <32 x i32> %3645) #11
  %3885 = call <32 x i32> @llvm.hexagon.V6.vminh.128B(<32 x i32> %3884, <32 x i32> <i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>) #11
  %3886 = call <32 x i32> @llvm.hexagon.V6.vmaxh.128B(<32 x i32> %3885, <32 x i32> zeroinitializer) #11
  %3887 = bitcast <32 x i32> %3886 to <64 x i16>
  %3888 = shufflevector <64 x i16> %3887, <64 x i16> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3889 = trunc <32 x i16> %3888 to <32 x i8>
  %3890 = shufflevector <32 x i8> %3889, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3891 = bitcast <128 x i8> %3890 to <32 x i32>
  %3892 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %3891, <32 x i32> %3648) #11
  %3893 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %3892, <32 x i32> %3651) #11
  %3894 = bitcast <32 x i32> %3893 to <128 x i8>
  %3895 = shufflevector <128 x i8> %3894, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3896 = add i32 %3827, %4109
  %3897 = getelementptr inbounds i8, i8* %23, i32 %3896
  %3898 = bitcast i8* %3897 to <32 x i8>*
  store <32 x i8> %3895, <32 x i8>* %3898, align 1, !tbaa !111
  %3899 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3640, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3900 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3901 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.78.13.us.us, <32 x i32> %3900, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3902 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3903 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3901, <32 x i32> %convolved673.sroa.78.13.us.us, <32 x i32> %3902, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3904 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3899, <1 x i32> zeroinitializer, <32 x i32> %3903, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3905 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3641, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3906 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3907 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.78.13.us.us, <32 x i32> %3906, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3908 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3909 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3907, <32 x i32> %convolved673.sroa.78.13.us.us, <32 x i32> %3908, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3910 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3905, <1 x i32> zeroinitializer, <32 x i32> %3909, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3911 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %3910, <32 x i32> %3637, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %3912 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %3904, <64 x i16> %3911, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3913 = call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.2(<32 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>, <32 x i32> %3912, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3914 = call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.2(<32 x i32> %3913, <32 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3915 = trunc <32 x i32> %3914 to <32 x i16>
  %3916 = shufflevector <32 x i16> %3915, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3917 = bitcast <64 x i16> %3916 to <32 x i32>
  %3918 = call <32 x i32> @llvm.hexagon.V6.vaddhsat.128B(<32 x i32> %3917, <32 x i32> %3645) #11
  %3919 = call <32 x i32> @llvm.hexagon.V6.vminh.128B(<32 x i32> %3918, <32 x i32> <i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>) #11
  %3920 = call <32 x i32> @llvm.hexagon.V6.vmaxh.128B(<32 x i32> %3919, <32 x i32> zeroinitializer) #11
  %3921 = bitcast <32 x i32> %3920 to <64 x i16>
  %3922 = shufflevector <64 x i16> %3921, <64 x i16> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3923 = trunc <32 x i16> %3922 to <32 x i8>
  %3924 = shufflevector <32 x i8> %3923, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3925 = bitcast <128 x i8> %3924 to <32 x i32>
  %3926 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %3925, <32 x i32> %3648) #11
  %3927 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %3926, <32 x i32> %3651) #11
  %3928 = bitcast <32 x i32> %3927 to <128 x i8>
  %3929 = shufflevector <128 x i8> %3928, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3930 = add i32 %3827, %4110
  %3931 = getelementptr inbounds i8, i8* %23, i32 %3930
  %3932 = bitcast i8* %3931 to <32 x i8>*
  store <32 x i8> %3929, <32 x i8>* %3932, align 1, !tbaa !111
  %3933 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3640, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3934 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3935 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.93.13.us.us, <32 x i32> %3934, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3936 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3937 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3935, <32 x i32> %convolved673.sroa.93.13.us.us, <32 x i32> %3936, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3938 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3933, <1 x i32> zeroinitializer, <32 x i32> %3937, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3939 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3641, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3940 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3941 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.93.13.us.us, <32 x i32> %3940, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3942 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3943 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3941, <32 x i32> %convolved673.sroa.93.13.us.us, <32 x i32> %3942, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3944 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3939, <1 x i32> zeroinitializer, <32 x i32> %3943, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3945 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %3944, <32 x i32> %3637, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %3946 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %3938, <64 x i16> %3945, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3947 = call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.2(<32 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>, <32 x i32> %3946, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3948 = call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.2(<32 x i32> %3947, <32 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3949 = trunc <32 x i32> %3948 to <32 x i16>
  %3950 = shufflevector <32 x i16> %3949, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3951 = bitcast <64 x i16> %3950 to <32 x i32>
  %3952 = call <32 x i32> @llvm.hexagon.V6.vaddhsat.128B(<32 x i32> %3951, <32 x i32> %3645) #11
  %3953 = call <32 x i32> @llvm.hexagon.V6.vminh.128B(<32 x i32> %3952, <32 x i32> <i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>) #11
  %3954 = call <32 x i32> @llvm.hexagon.V6.vmaxh.128B(<32 x i32> %3953, <32 x i32> zeroinitializer) #11
  %3955 = bitcast <32 x i32> %3954 to <64 x i16>
  %3956 = shufflevector <64 x i16> %3955, <64 x i16> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3957 = trunc <32 x i16> %3956 to <32 x i8>
  %3958 = shufflevector <32 x i8> %3957, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3959 = bitcast <128 x i8> %3958 to <32 x i32>
  %3960 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %3959, <32 x i32> %3648) #11
  %3961 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %3960, <32 x i32> %3651) #11
  %3962 = bitcast <32 x i32> %3961 to <128 x i8>
  %3963 = shufflevector <128 x i8> %3962, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3964 = add i32 %3827, %4111
  %3965 = getelementptr inbounds i8, i8* %23, i32 %3964
  %3966 = bitcast i8* %3965 to <32 x i8>*
  store <32 x i8> %3963, <32 x i8>* %3966, align 1, !tbaa !111
  %3967 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3640, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3968 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3969 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.103.13.us.us, <32 x i32> %3968, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3970 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3971 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3969, <32 x i32> %convolved673.sroa.103.13.us.us, <32 x i32> %3970, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3972 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3967, <1 x i32> zeroinitializer, <32 x i32> %3971, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3973 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3641, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3974 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3975 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.103.13.us.us, <32 x i32> %3974, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %3976 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %3977 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %3975, <32 x i32> %convolved673.sroa.103.13.us.us, <32 x i32> %3976, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %3978 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %3973, <1 x i32> zeroinitializer, <32 x i32> %3977, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3979 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %3978, <32 x i32> %3637, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %3980 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %3972, <64 x i16> %3979, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %3981 = call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.2(<32 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>, <32 x i32> %3980, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3982 = call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.2(<32 x i32> %3981, <32 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %3983 = trunc <32 x i32> %3982 to <32 x i16>
  %3984 = shufflevector <32 x i16> %3983, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3985 = bitcast <64 x i16> %3984 to <32 x i32>
  %3986 = call <32 x i32> @llvm.hexagon.V6.vaddhsat.128B(<32 x i32> %3985, <32 x i32> %3645) #11
  %3987 = call <32 x i32> @llvm.hexagon.V6.vminh.128B(<32 x i32> %3986, <32 x i32> <i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>) #11
  %3988 = call <32 x i32> @llvm.hexagon.V6.vmaxh.128B(<32 x i32> %3987, <32 x i32> zeroinitializer) #11
  %3989 = bitcast <32 x i32> %3988 to <64 x i16>
  %3990 = shufflevector <64 x i16> %3989, <64 x i16> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3991 = trunc <32 x i16> %3990 to <32 x i8>
  %3992 = shufflevector <32 x i8> %3991, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3993 = bitcast <128 x i8> %3992 to <32 x i32>
  %3994 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %3993, <32 x i32> %3648) #11
  %3995 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %3994, <32 x i32> %3651) #11
  %3996 = bitcast <32 x i32> %3995 to <128 x i8>
  %3997 = shufflevector <128 x i8> %3996, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3998 = add i32 %3827, %4112
  %3999 = getelementptr inbounds i8, i8* %23, i32 %3998
  %4000 = bitcast i8* %3999 to <32 x i8>*
  store <32 x i8> %3997, <32 x i8>* %4000, align 1, !tbaa !111
  %4001 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3640, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4002 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4003 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.113.13.us.us, <32 x i32> %4002, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4004 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4005 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4003, <32 x i32> %convolved673.sroa.113.13.us.us, <32 x i32> %4004, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4006 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4001, <1 x i32> zeroinitializer, <32 x i32> %4005, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4007 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3641, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4008 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4009 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.113.13.us.us, <32 x i32> %4008, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4010 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4011 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4009, <32 x i32> %convolved673.sroa.113.13.us.us, <32 x i32> %4010, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4012 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4007, <1 x i32> zeroinitializer, <32 x i32> %4011, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4013 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %4012, <32 x i32> %3637, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %4014 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %4006, <64 x i16> %4013, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %4015 = call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.2(<32 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>, <32 x i32> %4014, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4016 = call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.2(<32 x i32> %4015, <32 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4017 = trunc <32 x i32> %4016 to <32 x i16>
  %4018 = shufflevector <32 x i16> %4017, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %4019 = bitcast <64 x i16> %4018 to <32 x i32>
  %4020 = call <32 x i32> @llvm.hexagon.V6.vaddhsat.128B(<32 x i32> %4019, <32 x i32> %3645) #11
  %4021 = call <32 x i32> @llvm.hexagon.V6.vminh.128B(<32 x i32> %4020, <32 x i32> <i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>) #11
  %4022 = call <32 x i32> @llvm.hexagon.V6.vmaxh.128B(<32 x i32> %4021, <32 x i32> zeroinitializer) #11
  %4023 = bitcast <32 x i32> %4022 to <64 x i16>
  %4024 = shufflevector <64 x i16> %4023, <64 x i16> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4025 = trunc <32 x i16> %4024 to <32 x i8>
  %4026 = shufflevector <32 x i8> %4025, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %4027 = bitcast <128 x i8> %4026 to <32 x i32>
  %4028 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %4027, <32 x i32> %3648) #11
  %4029 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %4028, <32 x i32> %3651) #11
  %4030 = bitcast <32 x i32> %4029 to <128 x i8>
  %4031 = shufflevector <128 x i8> %4030, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4032 = add i32 %3827, %4113
  %4033 = getelementptr inbounds i8, i8* %23, i32 %4032
  %4034 = bitcast i8* %4033 to <32 x i8>*
  store <32 x i8> %4031, <32 x i8>* %4034, align 1, !tbaa !111
  %4035 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3640, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4036 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4037 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.123.13.us.us, <32 x i32> %4036, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4038 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4039 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4037, <32 x i32> %convolved673.sroa.123.13.us.us, <32 x i32> %4038, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4040 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4035, <1 x i32> zeroinitializer, <32 x i32> %4039, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4041 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3641, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4042 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4043 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.123.13.us.us, <32 x i32> %4042, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4044 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %3639, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4045 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4043, <32 x i32> %convolved673.sroa.123.13.us.us, <32 x i32> %4044, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4046 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4041, <1 x i32> zeroinitializer, <32 x i32> %4045, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4047 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %4046, <32 x i32> %3637, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %4048 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %4040, <64 x i16> %4047, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %4049 = call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.2(<32 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>, <32 x i32> %4048, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4050 = call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.2(<32 x i32> %4049, <32 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4051 = trunc <32 x i32> %4050 to <32 x i16>
  %4052 = shufflevector <32 x i16> %4051, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %4053 = bitcast <64 x i16> %4052 to <32 x i32>
  %4054 = call <32 x i32> @llvm.hexagon.V6.vaddhsat.128B(<32 x i32> %4053, <32 x i32> %3645) #11
  %4055 = call <32 x i32> @llvm.hexagon.V6.vminh.128B(<32 x i32> %4054, <32 x i32> <i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>) #11
  %4056 = call <32 x i32> @llvm.hexagon.V6.vmaxh.128B(<32 x i32> %4055, <32 x i32> zeroinitializer) #11
  %4057 = bitcast <32 x i32> %4056 to <64 x i16>
  %4058 = shufflevector <64 x i16> %4057, <64 x i16> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4059 = trunc <32 x i16> %4058 to <32 x i8>
  %4060 = shufflevector <32 x i8> %4059, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %4061 = bitcast <128 x i8> %4060 to <32 x i32>
  %4062 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %4061, <32 x i32> %3648) #11
  %4063 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %4062, <32 x i32> %3651) #11
  %4064 = bitcast <32 x i32> %4063 to <128 x i8>
  %4065 = shufflevector <128 x i8> %4064, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4066 = add i32 %3827, %4114
  %4067 = getelementptr inbounds i8, i8* %23, i32 %4066
  %4068 = bitcast i8* %4067 to <32 x i8>*
  store <32 x i8> %4065, <32 x i8>* %4068, align 1, !tbaa !111
  %4069 = add nuw nsw i32 %output.s0.c.co422.us.us, 1
  %.not709.us.us = icmp eq i32 %4069, %3634
  br i1 %.not709.us.us, label %"end for output.s0.c.co421.us.us", label %"for output.s0.c.co420.us.us"

"end for output.s0.c.co421.us.us":                ; preds = %"consume convolved436.us.us", %"consume sum_input419.us.us"
  %4070 = add nuw nsw i32 %output.s0.x.xo394.us.us, 1
  %.not708.us.us = icmp eq i32 %4070, %3630
  br i1 %.not708.us.us, label %"end for output.s0.x.xo393.loopexit.us.us", label %"for output.s0.x.xo392.us.us"

"for convolved.s1.r19$y427.preheader.us.us":      ; preds = %after_bb424.us.us
  %4071 = mul nsw i32 %output.s0.c.co422.us.us, %8
  br i1 %3632, label %"for convolved.s1.r19$y427.us.us.us", label %"consume convolved436.us.us", !prof !96

"for sum_input.s1.r19$x407.preheader.us.us":      ; preds = %"for sum_input.s1.r19$y404.us.us"
  %4072 = mul nsw i32 %"sum_input.s1.r19$y406.us.us", %dilation_y
  %4073 = add nsw i32 %4072, %3665
  %4074 = mul nsw i32 %4073, %19
  %t1069.us.us = add i32 %3660, %4074
  br i1 %3655, label %"end for sum_input.s1.r19$x408.us.us.loopexit.unr-lcssa", label %"for sum_input.s1.r19$x407.us.us"

"for output.s0.c.co420.preheader.us.us":          ; preds = %"consume sum_input419.us.us"
  %sum_input533672.sroa.0.0.vec.extract1018.us.us = extractelement <32 x i32> %sum_input533672.sroa.0.20.us.us, i32 0
  %4075 = mul nsw i32 %sum_input533672.sroa.0.0.vec.extract1018.us.us, %168
  %4076 = insertelement <1 x i32> poison, i32 %4075, i32 0
  %sum_input533672.sroa.0.4.vec.extract.us.us = extractelement <32 x i32> %sum_input533672.sroa.0.20.us.us, i32 1
  %4077 = mul nsw i32 %sum_input533672.sroa.0.4.vec.extract.us.us, %168
  %4078 = insertelement <1 x i32> poison, i32 %4077, i32 0
  %sum_input533672.sroa.0.8.vec.extract.us.us = extractelement <32 x i32> %sum_input533672.sroa.0.20.us.us, i32 2
  %4079 = mul nsw i32 %sum_input533672.sroa.0.8.vec.extract.us.us, %168
  %4080 = insertelement <1 x i32> poison, i32 %4079, i32 0
  %sum_input533672.sroa.0.12.vec.extract.us.us = extractelement <32 x i32> %sum_input533672.sroa.0.20.us.us, i32 3
  %4081 = mul nsw i32 %sum_input533672.sroa.0.12.vec.extract.us.us, %168
  %4082 = insertelement <1 x i32> poison, i32 %4081, i32 0
  %sum_input533672.sroa.0.16.vec.extract.us.us = extractelement <32 x i32> %sum_input533672.sroa.0.20.us.us, i32 4
  %4083 = mul nsw i32 %sum_input533672.sroa.0.16.vec.extract.us.us, %168
  %4084 = insertelement <1 x i32> poison, i32 %4083, i32 0
  %sum_input533672.sroa.0.20.vec.extract.us.us = extractelement <32 x i32> %sum_input533672.sroa.0.20.us.us, i32 5
  %4085 = mul nsw i32 %sum_input533672.sroa.0.20.vec.extract.us.us, %168
  %4086 = insertelement <1 x i32> poison, i32 %4085, i32 0
  %sum_input533672.sroa.0.24.vec.extract.us.us = extractelement <32 x i32> %sum_input533672.sroa.0.20.us.us, i32 6
  %4087 = mul nsw i32 %sum_input533672.sroa.0.24.vec.extract.us.us, %168
  %4088 = insertelement <1 x i32> poison, i32 %4087, i32 0
  %sum_input533672.sroa.0.28.vec.extract.us.us = extractelement <32 x i32> %sum_input533672.sroa.0.20.us.us, i32 7
  %4089 = mul nsw i32 %sum_input533672.sroa.0.28.vec.extract.us.us, %168
  %4090 = insertelement <1 x i32> poison, i32 %4089, i32 0
  %4091 = add nsw i32 %output.s0.x.x.base.s395.us.us, %25
  %4092 = add nsw i32 %4091, 7
  %4093 = mul nsw i32 %4092, %stride_x
  %4094 = add nsw i32 %4091, 6
  %4095 = mul nsw i32 %4094, %stride_x
  %4096 = add nsw i32 %4091, 5
  %4097 = mul nsw i32 %4096, %stride_x
  %4098 = add nsw i32 %4091, 4
  %4099 = mul nsw i32 %4098, %stride_x
  %4100 = add nsw i32 %4091, 3
  %4101 = mul nsw i32 %4100, %stride_x
  %4102 = add nsw i32 %4091, 2
  %4103 = mul nsw i32 %4102, %stride_x
  %4104 = add nsw i32 %4091, 1
  %4105 = mul nsw i32 %4104, %stride_x
  %4106 = mul nsw i32 %4091, %stride_x
  %4107 = mul nsw i32 %4091, %27
  %4108 = mul nsw i32 %4104, %27
  %4109 = mul nsw i32 %4102, %27
  %4110 = mul nsw i32 %4100, %27
  %4111 = mul nsw i32 %4098, %27
  %4112 = mul nsw i32 %4096, %27
  %4113 = mul nsw i32 %4094, %27
  %4114 = mul nsw i32 %4092, %27
  br label %"for output.s0.c.co420.us.us"

"for sum_input.s1.r19$y404.preheader.us.us":      ; preds = %then_bb402.us.us
  %4115 = add nsw i32 %output.s0.x.x.base.s395.us.us, %25
  %4116 = sub i32 %4115, %16
  br label %"for sum_input.s1.r19$y404.us.us"

"for sum_input.s1.r19$y410.preheader.us.us":      ; preds = %next_bb403.us.us
  %4117 = add nsw i32 %output.s0.x.x.base.s395.us.us, %25
  %4118 = mul nsw i32 %4117, %stride_x
  br i1 %brmerge1672.demorgan, label %"for sum_input.s1.r19$y410.us.us.us.us", label %"consume sum_input419.us.us", !prof !103

"end for output.s0.x.xo393.loopexit.us.us":       ; preds = %"end for output.s0.c.co421.us.us"
  %4119 = add nuw nsw i32 %output.s0.y.rebased391.us.us, 1
  %.not707.us.us = icmp eq i32 %4119, %29
  br i1 %.not707.us.us, label %"end for output.s0.y.rebased390.loopexit.us", label %"for output.s0.y.rebased389.us.us"

"for sum_input.s1.r19$y410.us.us.us.us":          ; preds = %"for sum_input.s1.r19$y410.preheader.us.us", %"end for sum_input.s1.r19$x414.loopexit.split.us.us.us.us.us"
  %sum_input533672.sroa.0.15.us.us.us.us = phi <32 x i32> [ %sum_input533672.sroa.0.0.vecblend1003.us.us.us.us.us.lcssa, %"end for sum_input.s1.r19$x414.loopexit.split.us.us.us.us.us" ], [ %sum_input533672.sroa.0.0.vecblend.us.us, %"for sum_input.s1.r19$y410.preheader.us.us" ]
  %"sum_input.s1.r19$y412.us.us.us.us" = phi i32 [ %4310, %"end for sum_input.s1.r19$x414.loopexit.split.us.us.us.us.us" ], [ 0, %"for sum_input.s1.r19$y410.preheader.us.us" ]
  %4120 = mul nsw i32 %"sum_input.s1.r19$y412.us.us.us.us", %dilation_y
  %t1071.s.us.us.us.us = add nsw i32 %4120, %3665
  %4121 = mul nsw i32 %t1071.s.us.us.us.us, %19
  br label %"for sum_input.s1.r19$x413.us.us.us.us.us"

"for sum_input.s1.r19$x413.us.us.us.us.us":       ; preds = %"end for sum_input.s1.r19$z.r124417.loopexit.us.us.us.us.us", %"for sum_input.s1.r19$y410.us.us.us.us"
  %sum_input533672.sroa.0.16.us.us.us.us.us = phi <32 x i32> [ %sum_input533672.sroa.0.0.vecblend1003.us.us.us.us.us.lcssa, %"end for sum_input.s1.r19$z.r124417.loopexit.us.us.us.us.us" ], [ %sum_input533672.sroa.0.15.us.us.us.us, %"for sum_input.s1.r19$y410.us.us.us.us" ]
  %"sum_input.s1.r19$x415.us.us.us.us.us" = phi i32 [ %4309, %"end for sum_input.s1.r19$z.r124417.loopexit.us.us.us.us.us" ], [ 0, %"for sum_input.s1.r19$y410.us.us.us.us" ]
  %4122 = mul nsw i32 %"sum_input.s1.r19$x415.us.us.us.us.us", %dilation_x
  %t1072.s.us.us.us.us.us = add nsw i32 %4122, %4118
  %t1231.us.us.us.us.us = mul nsw i32 %t1072.s.us.us.us.us.us, %17
  %4123 = add i32 %t1231.us.us.us.us.us, %4121
  %t1073.us.us.us.us.us = sub i32 %4123, %t1037
  %4124 = add i32 %t1073.us.us.us.us.us, %3659
  %t1045.us.us.us.us.us = add i32 %4123, %3627
  %4125 = sub i32 %t1045.us.us.us.us.us, %3614
  %t1074.us.us.us.us.us = sub i32 %4125, %3615
  %4126 = add i32 %t1074.us.us.us.us.us, %3659
  %4127 = add i32 %4123, %3625
  %4128 = sub i32 %4127, %3652
  %t1075.us.us.us.us.us = sub i32 %4128, %3615
  %4129 = add i32 %t1075.us.us.us.us.us, %3659
  %4130 = add i32 %4123, %3624
  %4131 = sub i32 %4130, %3652
  %t1076.us.us.us.us.us = sub i32 %4131, %3615
  %4132 = add i32 %t1076.us.us.us.us.us, %3659
  %4133 = add i32 %4123, %3623
  %4134 = sub i32 %4133, %3652
  %t1077.us.us.us.us.us = sub i32 %4134, %3615
  %4135 = add i32 %t1077.us.us.us.us.us, %3659
  %4136 = add i32 %4123, %3622
  %4137 = sub i32 %4136, %3652
  %t1078.us.us.us.us.us = sub i32 %4137, %3615
  %4138 = add i32 %t1078.us.us.us.us.us, %3659
  %4139 = add i32 %4123, %3621
  %4140 = sub i32 %4139, %3652
  %t1079.us.us.us.us.us = sub i32 %4140, %3615
  %4141 = add i32 %t1079.us.us.us.us.us, %3659
  %4142 = add i32 %4123, %3620
  %4143 = sub i32 %4142, %3652
  %t1080.us.us.us.us.us = sub i32 %4143, %3615
  %4144 = add i32 %t1080.us.us.us.us.us, %3659
  br i1 %3654, label %"end for sum_input.s1.r19$z.r124417.loopexit.us.us.us.us.us.unr-lcssa", label %"for sum_input.s1.r19$z.r124416.us.us.us.us.us"

"for sum_input.s1.r19$z.r124416.us.us.us.us.us":  ; preds = %"for sum_input.s1.r19$x413.us.us.us.us.us", %"for sum_input.s1.r19$z.r124416.us.us.us.us.us"
  %sum_input533672.sroa.0.18.us.us.us.us.us = phi <32 x i32> [ %sum_input533672.sroa.0.0.vecblend1003.us.us.us.us.us.1, %"for sum_input.s1.r19$z.r124416.us.us.us.us.us" ], [ %sum_input533672.sroa.0.16.us.us.us.us.us, %"for sum_input.s1.r19$x413.us.us.us.us.us" ]
  %"sum_input.s1.r19$z.r124418.us.us.us.us.us" = phi i32 [ %4254, %"for sum_input.s1.r19$z.r124416.us.us.us.us.us" ], [ 0, %"for sum_input.s1.r19$x413.us.us.us.us.us" ]
  %niter1854 = phi i32 [ %niter1854.nsub.1, %"for sum_input.s1.r19$z.r124416.us.us.us.us.us" ], [ %unroll_iter1853, %"for sum_input.s1.r19$x413.us.us.us.us.us" ]
  %4145 = shl nsw i32 %"sum_input.s1.r19$z.r124418.us.us.us.us.us", 2
  %4146 = add i32 %4124, %4145
  %4147 = getelementptr inbounds i8, i8* %13, i32 %4146
  %4148 = bitcast i8* %4147 to <4 x i8>*
  %4149 = load <4 x i8>, <4 x i8>* %4148, align 4, !tbaa !108
  %4150 = add i32 %4126, %4145
  %4151 = getelementptr inbounds i8, i8* %13, i32 %4150
  %4152 = bitcast i8* %4151 to <4 x i8>*
  %4153 = load <4 x i8>, <4 x i8>* %4152, align 4, !tbaa !108
  %4154 = add i32 %4129, %4145
  %4155 = getelementptr inbounds i8, i8* %13, i32 %4154
  %4156 = bitcast i8* %4155 to <4 x i8>*
  %4157 = load <4 x i8>, <4 x i8>* %4156, align 4, !tbaa !108
  %4158 = add i32 %4132, %4145
  %4159 = getelementptr inbounds i8, i8* %13, i32 %4158
  %4160 = bitcast i8* %4159 to <4 x i8>*
  %4161 = load <4 x i8>, <4 x i8>* %4160, align 4, !tbaa !108
  %4162 = add i32 %4135, %4145
  %4163 = getelementptr inbounds i8, i8* %13, i32 %4162
  %4164 = bitcast i8* %4163 to <4 x i8>*
  %4165 = load <4 x i8>, <4 x i8>* %4164, align 4, !tbaa !108
  %4166 = add i32 %4138, %4145
  %4167 = getelementptr inbounds i8, i8* %13, i32 %4166
  %4168 = bitcast i8* %4167 to <4 x i8>*
  %4169 = load <4 x i8>, <4 x i8>* %4168, align 4, !tbaa !108
  %4170 = add i32 %4141, %4145
  %4171 = getelementptr inbounds i8, i8* %13, i32 %4170
  %4172 = bitcast i8* %4171 to <4 x i8>*
  %4173 = load <4 x i8>, <4 x i8>* %4172, align 4, !tbaa !108
  %4174 = add i32 %4144, %4145
  %4175 = getelementptr inbounds i8, i8* %13, i32 %4174
  %4176 = bitcast i8* %4175 to <4 x i8>*
  %4177 = load <4 x i8>, <4 x i8>* %4176, align 4, !tbaa !108
  %4178 = shufflevector <4 x i8> %4149, <4 x i8> %4153, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %4179 = shufflevector <4 x i8> %4157, <4 x i8> %4161, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %4180 = shufflevector <4 x i8> %4165, <4 x i8> %4169, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %4181 = shufflevector <4 x i8> %4173, <4 x i8> %4177, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %4182 = shufflevector <8 x i8> %4178, <8 x i8> %4179, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4183 = shufflevector <8 x i8> %4180, <8 x i8> %4181, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4184 = shufflevector <16 x i8> %4182, <16 x i8> %4183, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %t1233.us.us.us.us.us = zext <32 x i8> %4184 to <32 x i16>
  %4185 = shufflevector <32 x i16> %t1233.us.us.us.us.us, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %4186 = bitcast <64 x i16> %4185 to <32 x i32>
  %4187 = call <32 x i32> @llvm.hexagon.V6.vpackeh.128B(<32 x i32> undef, <32 x i32> %4186)
  %4188 = bitcast <32 x i32> %4187 to <64 x i16>
  %4189 = call <32 x i32> @llvm.hexagon.V6.vpackoh.128B(<32 x i32> undef, <32 x i32> %4186)
  %4190 = bitcast <32 x i32> %4189 to <64 x i16>
  %4191 = add <64 x i16> %4190, %4188
  %4192 = shufflevector <64 x i16> %4191, <64 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %t1232.us.us.us.us.us = zext <16 x i16> %4192 to <16 x i32>
  %4193 = shufflevector <16 x i32> %t1232.us.us.us.us.us, <16 x i32> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %4194 = call <64 x i32> @llvm.hexagon.V6.vdealvdd.128B(<32 x i32> undef, <32 x i32> %4193, i32 -4)
  %4195 = call <32 x i32> @llvm.hexagon.V6.lo.128B(<64 x i32> %4194)
  %4196 = add nsw <32 x i32> %4195, %sum_input533672.sroa.0.18.us.us.us.us.us
  %4197 = call <32 x i32> @llvm.hexagon.V6.hi.128B(<64 x i32> %4194)
  %4198 = add nsw <32 x i32> %4196, %4197
  %sum_input533672.sroa.0.0.vecblend1003.us.us.us.us.us = shufflevector <32 x i32> %4198, <32 x i32> %sum_input533672.sroa.0.18.us.us.us.us.us, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %4199 = shl i32 %"sum_input.s1.r19$z.r124418.us.us.us.us.us", 2
  %4200 = or i32 %4199, 4
  %4201 = add i32 %4124, %4200
  %4202 = getelementptr inbounds i8, i8* %13, i32 %4201
  %4203 = bitcast i8* %4202 to <4 x i8>*
  %4204 = load <4 x i8>, <4 x i8>* %4203, align 4, !tbaa !108
  %4205 = add i32 %4126, %4200
  %4206 = getelementptr inbounds i8, i8* %13, i32 %4205
  %4207 = bitcast i8* %4206 to <4 x i8>*
  %4208 = load <4 x i8>, <4 x i8>* %4207, align 4, !tbaa !108
  %4209 = add i32 %4129, %4200
  %4210 = getelementptr inbounds i8, i8* %13, i32 %4209
  %4211 = bitcast i8* %4210 to <4 x i8>*
  %4212 = load <4 x i8>, <4 x i8>* %4211, align 4, !tbaa !108
  %4213 = add i32 %4132, %4200
  %4214 = getelementptr inbounds i8, i8* %13, i32 %4213
  %4215 = bitcast i8* %4214 to <4 x i8>*
  %4216 = load <4 x i8>, <4 x i8>* %4215, align 4, !tbaa !108
  %4217 = add i32 %4135, %4200
  %4218 = getelementptr inbounds i8, i8* %13, i32 %4217
  %4219 = bitcast i8* %4218 to <4 x i8>*
  %4220 = load <4 x i8>, <4 x i8>* %4219, align 4, !tbaa !108
  %4221 = add i32 %4138, %4200
  %4222 = getelementptr inbounds i8, i8* %13, i32 %4221
  %4223 = bitcast i8* %4222 to <4 x i8>*
  %4224 = load <4 x i8>, <4 x i8>* %4223, align 4, !tbaa !108
  %4225 = add i32 %4141, %4200
  %4226 = getelementptr inbounds i8, i8* %13, i32 %4225
  %4227 = bitcast i8* %4226 to <4 x i8>*
  %4228 = load <4 x i8>, <4 x i8>* %4227, align 4, !tbaa !108
  %4229 = add i32 %4144, %4200
  %4230 = getelementptr inbounds i8, i8* %13, i32 %4229
  %4231 = bitcast i8* %4230 to <4 x i8>*
  %4232 = load <4 x i8>, <4 x i8>* %4231, align 4, !tbaa !108
  %4233 = shufflevector <4 x i8> %4204, <4 x i8> %4208, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %4234 = shufflevector <4 x i8> %4212, <4 x i8> %4216, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %4235 = shufflevector <4 x i8> %4220, <4 x i8> %4224, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %4236 = shufflevector <4 x i8> %4228, <4 x i8> %4232, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %4237 = shufflevector <8 x i8> %4233, <8 x i8> %4234, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4238 = shufflevector <8 x i8> %4235, <8 x i8> %4236, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4239 = shufflevector <16 x i8> %4237, <16 x i8> %4238, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %t1233.us.us.us.us.us.1 = zext <32 x i8> %4239 to <32 x i16>
  %4240 = shufflevector <32 x i16> %t1233.us.us.us.us.us.1, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %4241 = bitcast <64 x i16> %4240 to <32 x i32>
  %4242 = call <32 x i32> @llvm.hexagon.V6.vpackeh.128B(<32 x i32> undef, <32 x i32> %4241)
  %4243 = bitcast <32 x i32> %4242 to <64 x i16>
  %4244 = call <32 x i32> @llvm.hexagon.V6.vpackoh.128B(<32 x i32> undef, <32 x i32> %4241)
  %4245 = bitcast <32 x i32> %4244 to <64 x i16>
  %4246 = add <64 x i16> %4245, %4243
  %4247 = shufflevector <64 x i16> %4246, <64 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %t1232.us.us.us.us.us.1 = zext <16 x i16> %4247 to <16 x i32>
  %4248 = shufflevector <16 x i32> %t1232.us.us.us.us.us.1, <16 x i32> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %4249 = call <64 x i32> @llvm.hexagon.V6.vdealvdd.128B(<32 x i32> undef, <32 x i32> %4248, i32 -4)
  %4250 = call <32 x i32> @llvm.hexagon.V6.lo.128B(<64 x i32> %4249)
  %4251 = add nsw <32 x i32> %4250, %sum_input533672.sroa.0.0.vecblend1003.us.us.us.us.us
  %4252 = call <32 x i32> @llvm.hexagon.V6.hi.128B(<64 x i32> %4249)
  %4253 = add nsw <32 x i32> %4251, %4252
  %sum_input533672.sroa.0.0.vecblend1003.us.us.us.us.us.1 = shufflevector <32 x i32> %4253, <32 x i32> %sum_input533672.sroa.0.0.vecblend1003.us.us.us.us.us, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %4254 = add nuw nsw i32 %"sum_input.s1.r19$z.r124418.us.us.us.us.us", 2
  %niter1854.nsub.1 = add i32 %niter1854, -2
  %niter1854.ncmp.1 = icmp eq i32 %niter1854.nsub.1, 0
  br i1 %niter1854.ncmp.1, label %"end for sum_input.s1.r19$z.r124417.loopexit.us.us.us.us.us.unr-lcssa", label %"for sum_input.s1.r19$z.r124416.us.us.us.us.us"

"end for sum_input.s1.r19$z.r124417.loopexit.us.us.us.us.us.unr-lcssa": ; preds = %"for sum_input.s1.r19$z.r124416.us.us.us.us.us", %"for sum_input.s1.r19$x413.us.us.us.us.us"
  %sum_input533672.sroa.0.0.vecblend1003.us.us.us.us.us.lcssa.ph = phi <32 x i32> [ undef, %"for sum_input.s1.r19$x413.us.us.us.us.us" ], [ %sum_input533672.sroa.0.0.vecblend1003.us.us.us.us.us.1, %"for sum_input.s1.r19$z.r124416.us.us.us.us.us" ]
  %sum_input533672.sroa.0.18.us.us.us.us.us.unr = phi <32 x i32> [ %sum_input533672.sroa.0.16.us.us.us.us.us, %"for sum_input.s1.r19$x413.us.us.us.us.us" ], [ %sum_input533672.sroa.0.0.vecblend1003.us.us.us.us.us.1, %"for sum_input.s1.r19$z.r124416.us.us.us.us.us" ]
  %"sum_input.s1.r19$z.r124418.us.us.us.us.us.unr" = phi i32 [ 0, %"for sum_input.s1.r19$x413.us.us.us.us.us" ], [ %4254, %"for sum_input.s1.r19$z.r124416.us.us.us.us.us" ]
  br i1 %lcmp.mod1852.not, label %"end for sum_input.s1.r19$z.r124417.loopexit.us.us.us.us.us", label %"for sum_input.s1.r19$z.r124416.us.us.us.us.us.epil"

"for sum_input.s1.r19$z.r124416.us.us.us.us.us.epil": ; preds = %"end for sum_input.s1.r19$z.r124417.loopexit.us.us.us.us.us.unr-lcssa"
  %4255 = shl nsw i32 %"sum_input.s1.r19$z.r124418.us.us.us.us.us.unr", 2
  %4256 = add i32 %4124, %4255
  %4257 = getelementptr inbounds i8, i8* %13, i32 %4256
  %4258 = bitcast i8* %4257 to <4 x i8>*
  %4259 = load <4 x i8>, <4 x i8>* %4258, align 4, !tbaa !108
  %4260 = add i32 %4126, %4255
  %4261 = getelementptr inbounds i8, i8* %13, i32 %4260
  %4262 = bitcast i8* %4261 to <4 x i8>*
  %4263 = load <4 x i8>, <4 x i8>* %4262, align 4, !tbaa !108
  %4264 = add i32 %4129, %4255
  %4265 = getelementptr inbounds i8, i8* %13, i32 %4264
  %4266 = bitcast i8* %4265 to <4 x i8>*
  %4267 = load <4 x i8>, <4 x i8>* %4266, align 4, !tbaa !108
  %4268 = add i32 %4132, %4255
  %4269 = getelementptr inbounds i8, i8* %13, i32 %4268
  %4270 = bitcast i8* %4269 to <4 x i8>*
  %4271 = load <4 x i8>, <4 x i8>* %4270, align 4, !tbaa !108
  %4272 = add i32 %4135, %4255
  %4273 = getelementptr inbounds i8, i8* %13, i32 %4272
  %4274 = bitcast i8* %4273 to <4 x i8>*
  %4275 = load <4 x i8>, <4 x i8>* %4274, align 4, !tbaa !108
  %4276 = add i32 %4138, %4255
  %4277 = getelementptr inbounds i8, i8* %13, i32 %4276
  %4278 = bitcast i8* %4277 to <4 x i8>*
  %4279 = load <4 x i8>, <4 x i8>* %4278, align 4, !tbaa !108
  %4280 = add i32 %4141, %4255
  %4281 = getelementptr inbounds i8, i8* %13, i32 %4280
  %4282 = bitcast i8* %4281 to <4 x i8>*
  %4283 = load <4 x i8>, <4 x i8>* %4282, align 4, !tbaa !108
  %4284 = add i32 %4144, %4255
  %4285 = getelementptr inbounds i8, i8* %13, i32 %4284
  %4286 = bitcast i8* %4285 to <4 x i8>*
  %4287 = load <4 x i8>, <4 x i8>* %4286, align 4, !tbaa !108
  %4288 = shufflevector <4 x i8> %4259, <4 x i8> %4263, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %4289 = shufflevector <4 x i8> %4267, <4 x i8> %4271, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %4290 = shufflevector <4 x i8> %4275, <4 x i8> %4279, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %4291 = shufflevector <4 x i8> %4283, <4 x i8> %4287, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %4292 = shufflevector <8 x i8> %4288, <8 x i8> %4289, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4293 = shufflevector <8 x i8> %4290, <8 x i8> %4291, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4294 = shufflevector <16 x i8> %4292, <16 x i8> %4293, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %t1233.us.us.us.us.us.epil = zext <32 x i8> %4294 to <32 x i16>
  %4295 = shufflevector <32 x i16> %t1233.us.us.us.us.us.epil, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %4296 = bitcast <64 x i16> %4295 to <32 x i32>
  %4297 = call <32 x i32> @llvm.hexagon.V6.vpackeh.128B(<32 x i32> undef, <32 x i32> %4296)
  %4298 = bitcast <32 x i32> %4297 to <64 x i16>
  %4299 = call <32 x i32> @llvm.hexagon.V6.vpackoh.128B(<32 x i32> undef, <32 x i32> %4296)
  %4300 = bitcast <32 x i32> %4299 to <64 x i16>
  %4301 = add <64 x i16> %4300, %4298
  %4302 = shufflevector <64 x i16> %4301, <64 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %t1232.us.us.us.us.us.epil = zext <16 x i16> %4302 to <16 x i32>
  %4303 = shufflevector <16 x i32> %t1232.us.us.us.us.us.epil, <16 x i32> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %4304 = call <64 x i32> @llvm.hexagon.V6.vdealvdd.128B(<32 x i32> undef, <32 x i32> %4303, i32 -4)
  %4305 = call <32 x i32> @llvm.hexagon.V6.lo.128B(<64 x i32> %4304)
  %4306 = add nsw <32 x i32> %4305, %sum_input533672.sroa.0.18.us.us.us.us.us.unr
  %4307 = call <32 x i32> @llvm.hexagon.V6.hi.128B(<64 x i32> %4304)
  %4308 = add nsw <32 x i32> %4306, %4307
  %sum_input533672.sroa.0.0.vecblend1003.us.us.us.us.us.epil = shufflevector <32 x i32> %4308, <32 x i32> %sum_input533672.sroa.0.18.us.us.us.us.us.unr, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  br label %"end for sum_input.s1.r19$z.r124417.loopexit.us.us.us.us.us"

"end for sum_input.s1.r19$z.r124417.loopexit.us.us.us.us.us": ; preds = %"end for sum_input.s1.r19$z.r124417.loopexit.us.us.us.us.us.unr-lcssa", %"for sum_input.s1.r19$z.r124416.us.us.us.us.us.epil"
  %sum_input533672.sroa.0.0.vecblend1003.us.us.us.us.us.lcssa = phi <32 x i32> [ %sum_input533672.sroa.0.0.vecblend1003.us.us.us.us.us.lcssa.ph, %"end for sum_input.s1.r19$z.r124417.loopexit.us.us.us.us.us.unr-lcssa" ], [ %sum_input533672.sroa.0.0.vecblend1003.us.us.us.us.us.epil, %"for sum_input.s1.r19$z.r124416.us.us.us.us.us.epil" ]
  %4309 = add nuw nsw i32 %"sum_input.s1.r19$x415.us.us.us.us.us", 1
  %.not714.us.us.us.us.us = icmp eq i32 %4309, %9
  br i1 %.not714.us.us.us.us.us, label %"end for sum_input.s1.r19$x414.loopexit.split.us.us.us.us.us", label %"for sum_input.s1.r19$x413.us.us.us.us.us"

"end for sum_input.s1.r19$x414.loopexit.split.us.us.us.us.us": ; preds = %"end for sum_input.s1.r19$z.r124417.loopexit.us.us.us.us.us"
  %4310 = add nuw nsw i32 %"sum_input.s1.r19$y412.us.us.us.us", 1
  %.not713.us.us.us.us = icmp eq i32 %4310, %11
  br i1 %.not713.us.us.us.us, label %"consume sum_input419.us.us", label %"for sum_input.s1.r19$y410.us.us.us.us"

"for convolved.s1.r19$y427.us.us.us":             ; preds = %"for convolved.s1.r19$y427.preheader.us.us", %"end for convolved.s1.r19$x431.loopexit.us.us.us"
  %convolved673.sroa.123.8.us.us.us = phi <32 x i32> [ %.us-phi1352.us.us.us, %"end for convolved.s1.r19$x431.loopexit.us.us.us" ], [ %convolved673.sroa.123.7.us.us, %"for convolved.s1.r19$y427.preheader.us.us" ]
  %convolved673.sroa.113.8.us.us.us = phi <32 x i32> [ %.us-phi1353.us.us.us, %"end for convolved.s1.r19$x431.loopexit.us.us.us" ], [ %convolved673.sroa.113.7.us.us, %"for convolved.s1.r19$y427.preheader.us.us" ]
  %convolved673.sroa.103.8.us.us.us = phi <32 x i32> [ %.us-phi1354.us.us.us, %"end for convolved.s1.r19$x431.loopexit.us.us.us" ], [ %convolved673.sroa.103.7.us.us, %"for convolved.s1.r19$y427.preheader.us.us" ]
  %convolved673.sroa.93.8.us.us.us = phi <32 x i32> [ %.us-phi1355.us.us.us, %"end for convolved.s1.r19$x431.loopexit.us.us.us" ], [ %convolved673.sroa.93.7.us.us, %"for convolved.s1.r19$y427.preheader.us.us" ]
  %convolved673.sroa.78.8.us.us.us = phi <32 x i32> [ %.us-phi1356.us.us.us, %"end for convolved.s1.r19$x431.loopexit.us.us.us" ], [ %convolved673.sroa.78.7.us.us, %"for convolved.s1.r19$y427.preheader.us.us" ]
  %convolved673.sroa.63.8.us.us.us = phi <32 x i32> [ %.us-phi1357.us.us.us, %"end for convolved.s1.r19$x431.loopexit.us.us.us" ], [ %convolved673.sroa.63.7.us.us, %"for convolved.s1.r19$y427.preheader.us.us" ]
  %convolved673.sroa.48.8.us.us.us = phi <32 x i32> [ %.us-phi1358.us.us.us, %"end for convolved.s1.r19$x431.loopexit.us.us.us" ], [ %convolved673.sroa.48.7.us.us, %"for convolved.s1.r19$y427.preheader.us.us" ]
  %convolved673.sroa.0.22.us.us.us = phi <32 x i32> [ %.us-phi1359.us.us.us, %"end for convolved.s1.r19$x431.loopexit.us.us.us" ], [ %convolved673.sroa.0.21.us.us, %"for convolved.s1.r19$y427.preheader.us.us" ]
  %"convolved.s1.r19$y429.us.us.us" = phi i32 [ %4315, %"end for convolved.s1.r19$x431.loopexit.us.us.us" ], [ 0, %"for convolved.s1.r19$y427.preheader.us.us" ]
  %4311 = mul nsw i32 %"convolved.s1.r19$y429.us.us.us", %dilation_y
  %4312 = add nsw i32 %4311, %3665
  %4313 = mul nsw i32 %4312, %19
  %t1106.us.us.us = add nsw i32 %4313, %3661
  %4314 = mul nsw i32 %"convolved.s1.r19$y429.us.us.us", %12
  %t1107.us.us.us = add nsw i32 %4314, %4071
  br i1 %3633, label %"for convolved.s1.r19$x430.us.us.us.us", label %"end for convolved.s1.r19$x431.loopexit.us.us.us", !prof !96

"end for convolved.s1.r19$x431.loopexit.us.us.us": ; preds = %"end for convolved.s1.r19$z.r124434.loopexit.us.us.us.us", %"for convolved.s1.r19$y427.us.us.us"
  %.us-phi1352.us.us.us = phi <32 x i32> [ %convolved673.sroa.123.8.us.us.us, %"for convolved.s1.r19$y427.us.us.us" ], [ %4388, %"end for convolved.s1.r19$z.r124434.loopexit.us.us.us.us" ]
  %.us-phi1353.us.us.us = phi <32 x i32> [ %convolved673.sroa.113.8.us.us.us, %"for convolved.s1.r19$y427.us.us.us" ], [ %4381, %"end for convolved.s1.r19$z.r124434.loopexit.us.us.us.us" ]
  %.us-phi1354.us.us.us = phi <32 x i32> [ %convolved673.sroa.103.8.us.us.us, %"for convolved.s1.r19$y427.us.us.us" ], [ %4374, %"end for convolved.s1.r19$z.r124434.loopexit.us.us.us.us" ]
  %.us-phi1355.us.us.us = phi <32 x i32> [ %convolved673.sroa.93.8.us.us.us, %"for convolved.s1.r19$y427.us.us.us" ], [ %4367, %"end for convolved.s1.r19$z.r124434.loopexit.us.us.us.us" ]
  %.us-phi1356.us.us.us = phi <32 x i32> [ %convolved673.sroa.78.8.us.us.us, %"for convolved.s1.r19$y427.us.us.us" ], [ %4360, %"end for convolved.s1.r19$z.r124434.loopexit.us.us.us.us" ]
  %.us-phi1357.us.us.us = phi <32 x i32> [ %convolved673.sroa.63.8.us.us.us, %"for convolved.s1.r19$y427.us.us.us" ], [ %4353, %"end for convolved.s1.r19$z.r124434.loopexit.us.us.us.us" ]
  %.us-phi1358.us.us.us = phi <32 x i32> [ %convolved673.sroa.48.8.us.us.us, %"for convolved.s1.r19$y427.us.us.us" ], [ %4346, %"end for convolved.s1.r19$z.r124434.loopexit.us.us.us.us" ]
  %.us-phi1359.us.us.us = phi <32 x i32> [ %convolved673.sroa.0.22.us.us.us, %"for convolved.s1.r19$y427.us.us.us" ], [ %4339, %"end for convolved.s1.r19$z.r124434.loopexit.us.us.us.us" ]
  %4315 = add nuw nsw i32 %"convolved.s1.r19$y429.us.us.us", 1
  %.not710.us.us.us = icmp eq i32 %4315, %11
  br i1 %.not710.us.us.us, label %"consume convolved436.us.us", label %"for convolved.s1.r19$y427.us.us.us"

"for convolved.s1.r19$x430.us.us.us.us":          ; preds = %"for convolved.s1.r19$y427.us.us.us", %"end for convolved.s1.r19$z.r124434.loopexit.us.us.us.us"
  %convolved673.sroa.123.9.us.us.us.us = phi <32 x i32> [ %4388, %"end for convolved.s1.r19$z.r124434.loopexit.us.us.us.us" ], [ %convolved673.sroa.123.8.us.us.us, %"for convolved.s1.r19$y427.us.us.us" ]
  %convolved673.sroa.113.9.us.us.us.us = phi <32 x i32> [ %4381, %"end for convolved.s1.r19$z.r124434.loopexit.us.us.us.us" ], [ %convolved673.sroa.113.8.us.us.us, %"for convolved.s1.r19$y427.us.us.us" ]
  %convolved673.sroa.103.9.us.us.us.us = phi <32 x i32> [ %4374, %"end for convolved.s1.r19$z.r124434.loopexit.us.us.us.us" ], [ %convolved673.sroa.103.8.us.us.us, %"for convolved.s1.r19$y427.us.us.us" ]
  %convolved673.sroa.93.9.us.us.us.us = phi <32 x i32> [ %4367, %"end for convolved.s1.r19$z.r124434.loopexit.us.us.us.us" ], [ %convolved673.sroa.93.8.us.us.us, %"for convolved.s1.r19$y427.us.us.us" ]
  %convolved673.sroa.78.9.us.us.us.us = phi <32 x i32> [ %4360, %"end for convolved.s1.r19$z.r124434.loopexit.us.us.us.us" ], [ %convolved673.sroa.78.8.us.us.us, %"for convolved.s1.r19$y427.us.us.us" ]
  %convolved673.sroa.63.9.us.us.us.us = phi <32 x i32> [ %4353, %"end for convolved.s1.r19$z.r124434.loopexit.us.us.us.us" ], [ %convolved673.sroa.63.8.us.us.us, %"for convolved.s1.r19$y427.us.us.us" ]
  %convolved673.sroa.48.9.us.us.us.us = phi <32 x i32> [ %4346, %"end for convolved.s1.r19$z.r124434.loopexit.us.us.us.us" ], [ %convolved673.sroa.48.8.us.us.us, %"for convolved.s1.r19$y427.us.us.us" ]
  %convolved673.sroa.0.23.us.us.us.us = phi <32 x i32> [ %4339, %"end for convolved.s1.r19$z.r124434.loopexit.us.us.us.us" ], [ %convolved673.sroa.0.22.us.us.us, %"for convolved.s1.r19$y427.us.us.us" ]
  %"convolved.s1.r19$x432.us.us.us.us" = phi i32 [ %4390, %"end for convolved.s1.r19$z.r124434.loopexit.us.us.us.us" ], [ 0, %"for convolved.s1.r19$y427.us.us.us" ]
  %4316 = mul nsw i32 %"convolved.s1.r19$x432.us.us.us.us", %dilation_x
  %t1116.s.us.us.us.us = add nsw i32 %4316, %4093
  %t1115.s.us.us.us.us = add nsw i32 %4316, %4095
  %t1114.s.us.us.us.us = add nsw i32 %4316, %4097
  %t1113.s.us.us.us.us = add nsw i32 %4316, %4099
  %t1112.s.us.us.us.us = add nsw i32 %4316, %4101
  %t1111.s.us.us.us.us = add nsw i32 %4316, %4103
  %t1110.s.us.us.us.us = add nsw i32 %4316, %4105
  %t1108.s.us.us.us.us = add nsw i32 %4316, %4106
  %4317 = mul nsw i32 %t1108.s.us.us.us.us, %17
  %4318 = mul nsw i32 %"convolved.s1.r19$x432.us.us.us.us", %10
  %4319 = add nsw i32 %t1107.us.us.us, %4318
  %4320 = mul nsw i32 %t1110.s.us.us.us.us, %17
  %4321 = mul nsw i32 %t1111.s.us.us.us.us, %17
  %4322 = mul nsw i32 %t1112.s.us.us.us.us, %17
  %4323 = mul nsw i32 %t1113.s.us.us.us.us, %17
  %4324 = mul nsw i32 %t1114.s.us.us.us.us, %17
  %4325 = mul nsw i32 %t1115.s.us.us.us.us, %17
  %4326 = mul nsw i32 %t1116.s.us.us.us.us, %17
  br label %"for convolved.s1.r19$z.r124433.us.us.us.us"

"for convolved.s1.r19$z.r124433.us.us.us.us":     ; preds = %"for convolved.s1.r19$z.r124433.us.us.us.us", %"for convolved.s1.r19$x430.us.us.us.us"
  %convolved673.sroa.123.11.us.us.us.us = phi <32 x i32> [ %4388, %"for convolved.s1.r19$z.r124433.us.us.us.us" ], [ %convolved673.sroa.123.9.us.us.us.us, %"for convolved.s1.r19$x430.us.us.us.us" ]
  %convolved673.sroa.113.11.us.us.us.us = phi <32 x i32> [ %4381, %"for convolved.s1.r19$z.r124433.us.us.us.us" ], [ %convolved673.sroa.113.9.us.us.us.us, %"for convolved.s1.r19$x430.us.us.us.us" ]
  %convolved673.sroa.103.11.us.us.us.us = phi <32 x i32> [ %4374, %"for convolved.s1.r19$z.r124433.us.us.us.us" ], [ %convolved673.sroa.103.9.us.us.us.us, %"for convolved.s1.r19$x430.us.us.us.us" ]
  %convolved673.sroa.93.11.us.us.us.us = phi <32 x i32> [ %4367, %"for convolved.s1.r19$z.r124433.us.us.us.us" ], [ %convolved673.sroa.93.9.us.us.us.us, %"for convolved.s1.r19$x430.us.us.us.us" ]
  %convolved673.sroa.78.11.us.us.us.us = phi <32 x i32> [ %4360, %"for convolved.s1.r19$z.r124433.us.us.us.us" ], [ %convolved673.sroa.78.9.us.us.us.us, %"for convolved.s1.r19$x430.us.us.us.us" ]
  %convolved673.sroa.63.11.us.us.us.us = phi <32 x i32> [ %4353, %"for convolved.s1.r19$z.r124433.us.us.us.us" ], [ %convolved673.sroa.63.9.us.us.us.us, %"for convolved.s1.r19$x430.us.us.us.us" ]
  %convolved673.sroa.48.11.us.us.us.us = phi <32 x i32> [ %4346, %"for convolved.s1.r19$z.r124433.us.us.us.us" ], [ %convolved673.sroa.48.9.us.us.us.us, %"for convolved.s1.r19$x430.us.us.us.us" ]
  %convolved673.sroa.0.25.us.us.us.us = phi <32 x i32> [ %4339, %"for convolved.s1.r19$z.r124433.us.us.us.us" ], [ %convolved673.sroa.0.23.us.us.us.us, %"for convolved.s1.r19$x430.us.us.us.us" ]
  %"convolved.s1.r19$z.r124435.us.us.us.us" = phi i32 [ %4389, %"for convolved.s1.r19$z.r124433.us.us.us.us" ], [ 0, %"for convolved.s1.r19$x430.us.us.us.us" ]
  %4327 = shl nsw i32 %"convolved.s1.r19$z.r124435.us.us.us.us", 2
  %4328 = add i32 %4327, %t1106.us.us.us
  %4329 = add i32 %4328, %4317
  %4330 = getelementptr inbounds i8, i8* %13, i32 %4329
  %4331 = bitcast i8* %4330 to <4 x i8>*
  %4332 = load <4 x i8>, <4 x i8>* %4331, align 4, !tbaa !108
  %4333 = shl nsw i32 %"convolved.s1.r19$z.r124435.us.us.us.us", 7
  %4334 = add nsw i32 %4319, %4333
  %4335 = getelementptr inbounds i8, i8* %5, i32 %4334
  %4336 = bitcast i8* %4335 to <128 x i8>*
  %4337 = load <128 x i8>, <128 x i8>* %4336, align 128, !tbaa !106
  %4338 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %4332, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4339 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.0.25.us.us.us.us, <128 x i8> %4337, <32 x i32> %4338, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %4340 = add i32 %4328, %4320
  %4341 = getelementptr inbounds i8, i8* %13, i32 %4340
  %4342 = bitcast i8* %4341 to <4 x i8>*
  %4343 = load <4 x i8>, <4 x i8>* %4342, align 4, !tbaa !108
  %4344 = load <128 x i8>, <128 x i8>* %4336, align 128, !tbaa !106
  %4345 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %4343, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4346 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.48.11.us.us.us.us, <128 x i8> %4344, <32 x i32> %4345, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %4347 = add i32 %4328, %4321
  %4348 = getelementptr inbounds i8, i8* %13, i32 %4347
  %4349 = bitcast i8* %4348 to <4 x i8>*
  %4350 = load <4 x i8>, <4 x i8>* %4349, align 4, !tbaa !108
  %4351 = load <128 x i8>, <128 x i8>* %4336, align 128, !tbaa !106
  %4352 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %4350, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4353 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.63.11.us.us.us.us, <128 x i8> %4351, <32 x i32> %4352, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %4354 = add i32 %4328, %4322
  %4355 = getelementptr inbounds i8, i8* %13, i32 %4354
  %4356 = bitcast i8* %4355 to <4 x i8>*
  %4357 = load <4 x i8>, <4 x i8>* %4356, align 4, !tbaa !108
  %4358 = load <128 x i8>, <128 x i8>* %4336, align 128, !tbaa !106
  %4359 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %4357, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4360 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.78.11.us.us.us.us, <128 x i8> %4358, <32 x i32> %4359, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %4361 = add i32 %4328, %4323
  %4362 = getelementptr inbounds i8, i8* %13, i32 %4361
  %4363 = bitcast i8* %4362 to <4 x i8>*
  %4364 = load <4 x i8>, <4 x i8>* %4363, align 4, !tbaa !108
  %4365 = load <128 x i8>, <128 x i8>* %4336, align 128, !tbaa !106
  %4366 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %4364, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4367 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.93.11.us.us.us.us, <128 x i8> %4365, <32 x i32> %4366, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %4368 = add i32 %4328, %4324
  %4369 = getelementptr inbounds i8, i8* %13, i32 %4368
  %4370 = bitcast i8* %4369 to <4 x i8>*
  %4371 = load <4 x i8>, <4 x i8>* %4370, align 4, !tbaa !108
  %4372 = load <128 x i8>, <128 x i8>* %4336, align 128, !tbaa !106
  %4373 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %4371, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4374 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.103.11.us.us.us.us, <128 x i8> %4372, <32 x i32> %4373, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %4375 = add i32 %4328, %4325
  %4376 = getelementptr inbounds i8, i8* %13, i32 %4375
  %4377 = bitcast i8* %4376 to <4 x i8>*
  %4378 = load <4 x i8>, <4 x i8>* %4377, align 4, !tbaa !108
  %4379 = load <128 x i8>, <128 x i8>* %4336, align 128, !tbaa !106
  %4380 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %4378, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4381 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.113.11.us.us.us.us, <128 x i8> %4379, <32 x i32> %4380, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %4382 = add i32 %4328, %4326
  %4383 = getelementptr inbounds i8, i8* %13, i32 %4382
  %4384 = bitcast i8* %4383 to <4 x i8>*
  %4385 = load <4 x i8>, <4 x i8>* %4384, align 4, !tbaa !108
  %4386 = load <128 x i8>, <128 x i8>* %4336, align 128, !tbaa !106
  %4387 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %4385, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4388 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.123.11.us.us.us.us, <128 x i8> %4386, <32 x i32> %4387, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %4389 = add nuw nsw i32 %"convolved.s1.r19$z.r124435.us.us.us.us", 1
  %.not712.us.us.us.us = icmp eq i32 %4389, %7
  br i1 %.not712.us.us.us.us, label %"end for convolved.s1.r19$z.r124434.loopexit.us.us.us.us", label %"for convolved.s1.r19$z.r124433.us.us.us.us"

"end for convolved.s1.r19$z.r124434.loopexit.us.us.us.us": ; preds = %"for convolved.s1.r19$z.r124433.us.us.us.us"
  %4390 = add nuw nsw i32 %"convolved.s1.r19$x432.us.us.us.us", 1
  %.not711.us.us.us.us = icmp eq i32 %4390, %9
  br i1 %.not711.us.us.us.us, label %"end for convolved.s1.r19$x431.loopexit.us.us.us", label %"for convolved.s1.r19$x430.us.us.us.us"

next_bb385:                                       ; preds = %next_bb92
  br i1 %101, label %then_bb461, label %next_bb462

then_bb461:                                       ; preds = %next_bb385
  %4391 = mul nsw i32 %19, %18
  %4392 = mul nsw i32 %17, %16
  %4393 = mul nsw i32 %22, %20
  %4394 = add i32 %4393, %4391
  %t1121 = add i32 %4394, %4392
  %4395 = icmp sgt i32 %21, 0
  br i1 %4395, label %"for output.s0.b.rebased463.preheader", label %after_bb3, !prof !96

"for output.s0.b.rebased463.preheader":           ; preds = %then_bb461
  %4396 = icmp sgt i32 %29, 0
  %.neg1110 = mul i32 %30, %28
  %.neg1111 = mul i32 %27, %25
  %.neg1112 = mul i32 %31, %20
  %4397 = icmp sgt i32 %11, 0
  %4398 = icmp sgt i32 %9, 0
  %4399 = icmp sgt i32 %7, 0
  %4400 = ashr i32 %4, 7
  %4401 = icmp sgt i32 %4, 127
  %4402 = icmp sgt i32 %output_shift, 0
  %4403 = select i1 %4402, <32 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, <32 x i32> zeroinitializer
  %4404 = add nsw i32 %output_shift, -1
  %4405 = zext i8 %output_zero to i16
  %4406 = insertelement <128 x i16> undef, i16 %4405, i32 0
  %4407 = shufflevector <128 x i16> %4406, <128 x i16> undef, <128 x i32> zeroinitializer
  %4408 = insertelement <128 x i8> undef, i8 %output_max, i32 0
  %4409 = shufflevector <128 x i8> %4408, <128 x i8> undef, <128 x i32> zeroinitializer
  %4410 = insertelement <128 x i8> undef, i8 %output_min, i32 0
  %4411 = shufflevector <128 x i8> %4410, <128 x i8> undef, <128 x i32> zeroinitializer
  %4412 = insertelement <1 x i32> poison, i32 %output_multiplier, i32 0
  %4413 = insertelement <1 x i32> poison, i32 %output_shift, i32 0
  %4414 = insertelement <1 x i32> poison, i32 %4404, i32 0
  %reass.add1121 = add i32 %.neg1110, %.neg1111
  %reass.add1122 = add i32 %reass.add1121, %.neg1112
  br i1 %4396, label %"for output.s0.b.rebased463.us.preheader", label %after_bb3, !prof !96

"for output.s0.b.rebased463.us.preheader":        ; preds = %"for output.s0.b.rebased463.preheader"
  %4415 = add i32 %7, -1
  %4416 = add i32 %9, -1
  %brmerge1675.demorgan = and i1 %4398, %4399
  %xtraiter1837 = and i32 %7, 7
  %4417 = icmp ult i32 %4415, 7
  %unroll_iter1842 = and i32 %7, -8
  %lcmp.mod1839.not = icmp eq i32 %xtraiter1837, 0
  %xtraiter1844 = and i32 %9, 3
  %4418 = icmp ult i32 %4416, 3
  %unroll_iter1849 = and i32 %9, -4
  %lcmp.mod1846.not = icmp eq i32 %xtraiter1844, 0
  br label %"for output.s0.b.rebased463.us"

"for output.s0.b.rebased463.us":                  ; preds = %"for output.s0.b.rebased463.us.preheader", %"end for output.s0.y.rebased467.loopexit.us"
  %sum_input674.sroa.0.14.us = phi <6 x i32> [ %sum_input674.sroa.0.26.us, %"end for output.s0.y.rebased467.loopexit.us" ], [ undef, %"for output.s0.b.rebased463.us.preheader" ]
  %output.s0.b.rebased465.us = phi i32 [ %4657, %"end for output.s0.y.rebased467.loopexit.us" ], [ 0, %"for output.s0.b.rebased463.us.preheader" ]
  %4419 = add nsw i32 %output.s0.b.rebased465.us, %20
  %4420 = mul nsw i32 %4419, %31
  %4421 = mul nsw i32 %4419, %22
  %4422 = sub i32 %4421, %t1121
  %4423 = sub i32 %4421, %4394
  %4424 = sub i32 %4420, %reass.add1122
  br label %"for output.s0.y.rebased466.us"

"for output.s0.y.rebased466.us":                  ; preds = %"for output.s0.b.rebased463.us", %"end for output.s0.x.xo470.us"
  %sum_input674.sroa.0.15.us = phi <6 x i32> [ %sum_input674.sroa.0.26.us, %"end for output.s0.x.xo470.us" ], [ %sum_input674.sroa.0.14.us, %"for output.s0.b.rebased463.us" ]
  %output.s0.y.rebased468.us = phi i32 [ %4635, %"end for output.s0.x.xo470.us" ], [ 0, %"for output.s0.b.rebased463.us" ]
  %4425 = add nsw i32 %output.s0.y.rebased468.us, %28
  %4426 = mul nsw i32 %4425, %30
  %4427 = mul nsw i32 %4425, %stride_y
  %t1133.us = add i32 %4424, %4426
  br label %"for output.s0.x.xo469.us"

"for output.s0.x.xo469.us":                       ; preds = %"end for output.s0.c.co496.us", %"for output.s0.y.rebased466.us"
  %sum_input674.sroa.0.17.us = phi <6 x i32> [ %sum_input674.sroa.0.15.us, %"for output.s0.y.rebased466.us" ], [ %sum_input674.sroa.0.26.us, %"end for output.s0.c.co496.us" ]
  %output.s0.x.xo471.us = phi i32 [ 0, %"for output.s0.y.rebased466.us" ], [ %4634, %"end for output.s0.c.co496.us" ]
  br i1 %t843.not, label %"consume sum_input494.us", label %then_bb474.us

then_bb474.us:                                    ; preds = %"for output.s0.x.xo469.us"
  %sum_input674.sroa.0.0.vec.insert870.us = insertelement <6 x i32> %sum_input674.sroa.0.17.us, i32 0, i32 0
  br i1 %t844, label %then_bb477.us, label %next_bb478.us

next_bb478.us:                                    ; preds = %then_bb474.us
  br i1 %4397, label %"for sum_input.s1.r19$y485.preheader.us", label %"consume sum_input494.us", !prof !96

then_bb477.us:                                    ; preds = %then_bb474.us
  br i1 %4397, label %"for sum_input.s1.r19$y479.preheader.us", label %"consume sum_input494.us", !prof !96

"for sum_input.s1.r19$y479.us":                   ; preds = %"for sum_input.s1.r19$y479.preheader.us", %"end for sum_input.s1.r19$x483.us"
  %sum_input674.sroa.0.18.us = phi <6 x i32> [ %sum_input674.sroa.0.20.us, %"end for sum_input.s1.r19$x483.us" ], [ %sum_input674.sroa.0.0.vec.insert870.us, %"for sum_input.s1.r19$y479.preheader.us" ]
  %"sum_input.s1.r19$y481.us" = phi i32 [ %4473, %"end for sum_input.s1.r19$x483.us" ], [ 0, %"for sum_input.s1.r19$y479.preheader.us" ]
  br i1 %4398, label %"for sum_input.s1.r19$x482.preheader.us", label %"end for sum_input.s1.r19$x483.us", !prof !96

"for sum_input.s1.r19$x482.us":                   ; preds = %"for sum_input.s1.r19$x482.preheader.us", %"for sum_input.s1.r19$x482.us"
  %sum_input674.sroa.0.19.us = phi <6 x i32> [ %sum_input674.sroa.0.0.vec.insert866.us.3, %"for sum_input.s1.r19$x482.us" ], [ %sum_input674.sroa.0.18.us, %"for sum_input.s1.r19$x482.preheader.us" ]
  %"sum_input.s1.r19$x484.us" = phi i32 [ %4463, %"for sum_input.s1.r19$x482.us" ], [ 0, %"for sum_input.s1.r19$x482.preheader.us" ]
  %niter1850 = phi i32 [ %niter1850.nsub.3, %"for sum_input.s1.r19$x482.us" ], [ %unroll_iter1849, %"for sum_input.s1.r19$x482.preheader.us" ]
  %sum_input674.sroa.0.0.vec.extract868.us = extractelement <6 x i32> %sum_input674.sroa.0.19.us, i32 0
  %4428 = mul nsw i32 %"sum_input.s1.r19$x484.us", %dilation_x
  %reass.add1119.us = add i32 %4654, %4428
  %reass.mul1120.us = shl i32 %reass.add1119.us, 2
  %4429 = add i32 %t1136.us, %reass.mul1120.us
  %4430 = getelementptr inbounds i8, i8* %13, i32 %4429
  %4431 = bitcast i8* %4430 to <4 x i8>*
  %4432 = load <4 x i8>, <4 x i8>* %4431, align 4, !tbaa !108
  %4433 = zext <4 x i8> %4432 to <4 x i32>
  %4434 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %4433) #9
  %4435 = add nsw i32 %4434, %sum_input674.sroa.0.0.vec.extract868.us
  %4436 = or i32 %"sum_input.s1.r19$x484.us", 1
  %4437 = mul nsw i32 %4436, %dilation_x
  %reass.add1119.us.1 = add i32 %4654, %4437
  %reass.mul1120.us.1 = shl i32 %reass.add1119.us.1, 2
  %4438 = add i32 %t1136.us, %reass.mul1120.us.1
  %4439 = getelementptr inbounds i8, i8* %13, i32 %4438
  %4440 = bitcast i8* %4439 to <4 x i8>*
  %4441 = load <4 x i8>, <4 x i8>* %4440, align 4, !tbaa !108
  %4442 = zext <4 x i8> %4441 to <4 x i32>
  %4443 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %4442) #9
  %4444 = add nsw i32 %4443, %4435
  %4445 = or i32 %"sum_input.s1.r19$x484.us", 2
  %4446 = mul nsw i32 %4445, %dilation_x
  %reass.add1119.us.2 = add i32 %4654, %4446
  %reass.mul1120.us.2 = shl i32 %reass.add1119.us.2, 2
  %4447 = add i32 %t1136.us, %reass.mul1120.us.2
  %4448 = getelementptr inbounds i8, i8* %13, i32 %4447
  %4449 = bitcast i8* %4448 to <4 x i8>*
  %4450 = load <4 x i8>, <4 x i8>* %4449, align 4, !tbaa !108
  %4451 = zext <4 x i8> %4450 to <4 x i32>
  %4452 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %4451) #9
  %4453 = add nsw i32 %4452, %4444
  %sum_input674.sroa.0.0.vec.insert866.us.2 = insertelement <6 x i32> %sum_input674.sroa.0.19.us, i32 %4453, i32 0
  %4454 = or i32 %"sum_input.s1.r19$x484.us", 3
  %4455 = mul nsw i32 %4454, %dilation_x
  %reass.add1119.us.3 = add i32 %4654, %4455
  %reass.mul1120.us.3 = shl i32 %reass.add1119.us.3, 2
  %4456 = add i32 %t1136.us, %reass.mul1120.us.3
  %4457 = getelementptr inbounds i8, i8* %13, i32 %4456
  %4458 = bitcast i8* %4457 to <4 x i8>*
  %4459 = load <4 x i8>, <4 x i8>* %4458, align 4, !tbaa !108
  %4460 = zext <4 x i8> %4459 to <4 x i32>
  %4461 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %4460) #9
  %4462 = add nsw i32 %4461, %4453
  %sum_input674.sroa.0.0.vec.insert866.us.3 = insertelement <6 x i32> %sum_input674.sroa.0.0.vec.insert866.us.2, i32 %4462, i32 0
  %4463 = add nuw nsw i32 %"sum_input.s1.r19$x484.us", 4
  %niter1850.nsub.3 = add i32 %niter1850, -4
  %niter1850.ncmp.3 = icmp eq i32 %niter1850.nsub.3, 0
  br i1 %niter1850.ncmp.3, label %"end for sum_input.s1.r19$x483.us.loopexit.unr-lcssa.loopexit", label %"for sum_input.s1.r19$x482.us"

"end for sum_input.s1.r19$x483.us.loopexit.unr-lcssa.loopexit": ; preds = %"for sum_input.s1.r19$x482.us"
  %sum_input674.sroa.0.0.vec.insert866.us.2.le = insertelement <6 x i32> %sum_input674.sroa.0.19.us, i32 %4453, i32 0
  %sum_input674.sroa.0.0.vec.insert866.us.3.le = insertelement <6 x i32> %sum_input674.sroa.0.0.vec.insert866.us.2.le, i32 %4462, i32 0
  br label %"end for sum_input.s1.r19$x483.us.loopexit.unr-lcssa"

"end for sum_input.s1.r19$x483.us.loopexit.unr-lcssa": ; preds = %"end for sum_input.s1.r19$x483.us.loopexit.unr-lcssa.loopexit", %"for sum_input.s1.r19$x482.preheader.us"
  %sum_input674.sroa.0.19.us.lcssa.ph = phi <6 x i32> [ undef, %"for sum_input.s1.r19$x482.preheader.us" ], [ %sum_input674.sroa.0.0.vec.insert866.us.2.le, %"end for sum_input.s1.r19$x483.us.loopexit.unr-lcssa.loopexit" ]
  %.lcssa1811.ph = phi i32 [ undef, %"for sum_input.s1.r19$x482.preheader.us" ], [ %4462, %"end for sum_input.s1.r19$x483.us.loopexit.unr-lcssa.loopexit" ]
  %sum_input674.sroa.0.19.us.unr = phi <6 x i32> [ %sum_input674.sroa.0.18.us, %"for sum_input.s1.r19$x482.preheader.us" ], [ %sum_input674.sroa.0.0.vec.insert866.us.3.le, %"end for sum_input.s1.r19$x483.us.loopexit.unr-lcssa.loopexit" ]
  %"sum_input.s1.r19$x484.us.unr" = phi i32 [ 0, %"for sum_input.s1.r19$x482.preheader.us" ], [ %4463, %"end for sum_input.s1.r19$x483.us.loopexit.unr-lcssa.loopexit" ]
  br i1 %lcmp.mod1846.not, label %"end for sum_input.s1.r19$x483.us.loopexit", label %"for sum_input.s1.r19$x482.us.epil"

"for sum_input.s1.r19$x482.us.epil":              ; preds = %"end for sum_input.s1.r19$x483.us.loopexit.unr-lcssa", %"for sum_input.s1.r19$x482.us.epil"
  %sum_input674.sroa.0.19.us.epil = phi <6 x i32> [ %sum_input674.sroa.0.0.vec.insert866.us.epil, %"for sum_input.s1.r19$x482.us.epil" ], [ %sum_input674.sroa.0.19.us.unr, %"end for sum_input.s1.r19$x483.us.loopexit.unr-lcssa" ]
  %"sum_input.s1.r19$x484.us.epil" = phi i32 [ %4472, %"for sum_input.s1.r19$x482.us.epil" ], [ %"sum_input.s1.r19$x484.us.unr", %"end for sum_input.s1.r19$x483.us.loopexit.unr-lcssa" ]
  %epil.iter1845 = phi i32 [ %epil.iter1845.sub, %"for sum_input.s1.r19$x482.us.epil" ], [ %xtraiter1844, %"end for sum_input.s1.r19$x483.us.loopexit.unr-lcssa" ]
  %sum_input674.sroa.0.0.vec.extract868.us.epil = extractelement <6 x i32> %sum_input674.sroa.0.19.us.epil, i32 0
  %4464 = mul nsw i32 %"sum_input.s1.r19$x484.us.epil", %dilation_x
  %reass.add1119.us.epil = add i32 %4654, %4464
  %reass.mul1120.us.epil = shl i32 %reass.add1119.us.epil, 2
  %4465 = add i32 %t1136.us, %reass.mul1120.us.epil
  %4466 = getelementptr inbounds i8, i8* %13, i32 %4465
  %4467 = bitcast i8* %4466 to <4 x i8>*
  %4468 = load <4 x i8>, <4 x i8>* %4467, align 4, !tbaa !108
  %4469 = zext <4 x i8> %4468 to <4 x i32>
  %4470 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %4469) #9
  %4471 = add nsw i32 %4470, %sum_input674.sroa.0.0.vec.extract868.us.epil
  %sum_input674.sroa.0.0.vec.insert866.us.epil = insertelement <6 x i32> %sum_input674.sroa.0.19.us.epil, i32 %4471, i32 0
  %4472 = add nuw nsw i32 %"sum_input.s1.r19$x484.us.epil", 1
  %epil.iter1845.sub = add i32 %epil.iter1845, -1
  %epil.iter1845.cmp.not = icmp eq i32 %epil.iter1845.sub, 0
  br i1 %epil.iter1845.cmp.not, label %"end for sum_input.s1.r19$x483.us.loopexit", label %"for sum_input.s1.r19$x482.us.epil", !llvm.loop !115

"end for sum_input.s1.r19$x483.us.loopexit":      ; preds = %"for sum_input.s1.r19$x482.us.epil", %"end for sum_input.s1.r19$x483.us.loopexit.unr-lcssa"
  %sum_input674.sroa.0.19.us.lcssa = phi <6 x i32> [ %sum_input674.sroa.0.19.us.lcssa.ph, %"end for sum_input.s1.r19$x483.us.loopexit.unr-lcssa" ], [ %sum_input674.sroa.0.19.us.epil, %"for sum_input.s1.r19$x482.us.epil" ]
  %.lcssa1811 = phi i32 [ %.lcssa1811.ph, %"end for sum_input.s1.r19$x483.us.loopexit.unr-lcssa" ], [ %4471, %"for sum_input.s1.r19$x482.us.epil" ]
  %sum_input674.sroa.0.0.vec.insert866.us.le = insertelement <6 x i32> %sum_input674.sroa.0.19.us.lcssa, i32 %.lcssa1811, i32 0
  br label %"end for sum_input.s1.r19$x483.us"

"end for sum_input.s1.r19$x483.us":               ; preds = %"end for sum_input.s1.r19$x483.us.loopexit", %"for sum_input.s1.r19$y479.us"
  %sum_input674.sroa.0.20.us = phi <6 x i32> [ %sum_input674.sroa.0.18.us, %"for sum_input.s1.r19$y479.us" ], [ %sum_input674.sroa.0.0.vec.insert866.us.le, %"end for sum_input.s1.r19$x483.us.loopexit" ]
  %4473 = add nuw nsw i32 %"sum_input.s1.r19$y481.us", 1
  %.not704.us = icmp eq i32 %4473, %11
  br i1 %.not704.us, label %"consume sum_input494.us", label %"for sum_input.s1.r19$y479.us"

"consume sum_input494.us.loopexit1599":           ; preds = %"end for sum_input.s1.r19$x489.loopexit.split.us.us.us.us"
  %sum_input674.sroa.0.0.vec.insert.us.us.us.us.le.le.le = insertelement <6 x i32> %sum_input674.sroa.0.24.us.us.us.us.lcssa, i32 %.lcssa1810, i32 0
  br label %"consume sum_input494.us"

"consume sum_input494.us":                        ; preds = %"end for sum_input.s1.r19$x483.us", %"for sum_input.s1.r19$y485.preheader.us", %"consume sum_input494.us.loopexit1599", %then_bb477.us, %next_bb478.us, %"for output.s0.x.xo469.us"
  %sum_input674.sroa.0.26.us = phi <6 x i32> [ %sum_input674.sroa.0.17.us, %"for output.s0.x.xo469.us" ], [ %sum_input674.sroa.0.0.vec.insert870.us, %then_bb477.us ], [ %sum_input674.sroa.0.0.vec.insert870.us, %next_bb478.us ], [ %sum_input674.sroa.0.0.vec.insert870.us, %"for sum_input.s1.r19$y485.preheader.us" ], [ %sum_input674.sroa.0.0.vec.insert.us.us.us.us.le.le.le, %"consume sum_input494.us.loopexit1599" ], [ %sum_input674.sroa.0.20.us, %"end for sum_input.s1.r19$x483.us" ]
  br i1 %4401, label %"for output.s0.c.co495.preheader.us", label %"end for output.s0.c.co496.us", !prof !96

"for output.s0.c.co495.us":                       ; preds = %"for output.s0.c.co495.preheader.us", %"consume convolved511.us"
  %output.s0.c.co497.us = phi i32 [ %4633, %"consume convolved511.us" ], [ 0, %"for output.s0.c.co495.preheader.us" ]
  %4474 = shl nsw i32 %output.s0.c.co497.us, 7
  %4475 = getelementptr inbounds i32, i32* %offset_c, i32 %4474
  %4476 = bitcast i32* %4475 to <32 x i32>*
  %4477 = load <32 x i32>, <32 x i32>* %4476, align 128, !tbaa !104
  br i1 %t843.not, label %then_bb500.us, label %next_bb501.us

next_bb501.us:                                    ; preds = %"for output.s0.c.co495.us"
  %4478 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4648, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4479 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %4477, <32 x i32> %4478, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %4480 = getelementptr inbounds i32, i32* %4475, i32 32
  %4481 = bitcast i32* %4480 to <32 x i32>*
  %4482 = load <32 x i32>, <32 x i32>* %4481, align 128, !tbaa !104
  %4483 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4648, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4484 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %4482, <32 x i32> %4483, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %4485 = getelementptr inbounds i32, i32* %4475, i32 64
  %4486 = bitcast i32* %4485 to <32 x i32>*
  %4487 = load <32 x i32>, <32 x i32>* %4486, align 128, !tbaa !104
  %4488 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4648, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4489 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %4487, <32 x i32> %4488, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %4490 = getelementptr inbounds i32, i32* %4475, i32 96
  %4491 = bitcast i32* %4490 to <32 x i32>*
  %4492 = load <32 x i32>, <32 x i32>* %4491, align 128, !tbaa !104
  %4493 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4648, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4494 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %4492, <32 x i32> %4493, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  br label %after_bb499.us

then_bb500.us:                                    ; preds = %"for output.s0.c.co495.us"
  %4495 = getelementptr inbounds i32, i32* %4475, i32 32
  %4496 = bitcast i32* %4495 to <32 x i32>*
  %4497 = load <32 x i32>, <32 x i32>* %4496, align 128, !tbaa !104
  %4498 = getelementptr inbounds i32, i32* %4475, i32 64
  %4499 = bitcast i32* %4498 to <32 x i32>*
  %4500 = load <32 x i32>, <32 x i32>* %4499, align 128, !tbaa !104
  %4501 = getelementptr inbounds i32, i32* %4475, i32 96
  %4502 = bitcast i32* %4501 to <32 x i32>*
  %4503 = load <32 x i32>, <32 x i32>* %4502, align 128, !tbaa !104
  br label %after_bb499.us

after_bb499.us:                                   ; preds = %then_bb500.us, %next_bb501.us
  %convolved673.sroa.78.14.us = phi <32 x i32> [ %4503, %then_bb500.us ], [ %4494, %next_bb501.us ]
  %convolved673.sroa.63.14.us = phi <32 x i32> [ %4500, %then_bb500.us ], [ %4489, %next_bb501.us ]
  %convolved673.sroa.48.14.us = phi <32 x i32> [ %4497, %then_bb500.us ], [ %4484, %next_bb501.us ]
  %convolved673.sroa.0.28.us = phi <32 x i32> [ %4477, %then_bb500.us ], [ %4479, %next_bb501.us ]
  br i1 %4397, label %"for convolved.s1.r19$y502.preheader.us", label %"consume convolved511.us", !prof !96

"consume convolved511.us":                        ; preds = %"end for convolved.s1.r19$x506.loopexit.split.us.us.us.us", %"for convolved.s1.r19$y502.preheader.split.us.us", %"for convolved.s1.r19$y502.preheader.us", %after_bb499.us
  %convolved673.sroa.78.20.us = phi <32 x i32> [ %convolved673.sroa.78.14.us, %after_bb499.us ], [ %convolved673.sroa.78.14.us, %"for convolved.s1.r19$y502.preheader.us" ], [ %convolved673.sroa.78.14.us, %"for convolved.s1.r19$y502.preheader.split.us.us" ], [ %4793, %"end for convolved.s1.r19$x506.loopexit.split.us.us.us.us" ]
  %convolved673.sroa.63.20.us = phi <32 x i32> [ %convolved673.sroa.63.14.us, %after_bb499.us ], [ %convolved673.sroa.63.14.us, %"for convolved.s1.r19$y502.preheader.us" ], [ %convolved673.sroa.63.14.us, %"for convolved.s1.r19$y502.preheader.split.us.us" ], [ %4786, %"end for convolved.s1.r19$x506.loopexit.split.us.us.us.us" ]
  %convolved673.sroa.48.20.us = phi <32 x i32> [ %convolved673.sroa.48.14.us, %after_bb499.us ], [ %convolved673.sroa.48.14.us, %"for convolved.s1.r19$y502.preheader.us" ], [ %convolved673.sroa.48.14.us, %"for convolved.s1.r19$y502.preheader.split.us.us" ], [ %4779, %"end for convolved.s1.r19$x506.loopexit.split.us.us.us.us" ]
  %convolved673.sroa.0.34.us = phi <32 x i32> [ %convolved673.sroa.0.28.us, %after_bb499.us ], [ %convolved673.sroa.0.28.us, %"for convolved.s1.r19$y502.preheader.us" ], [ %convolved673.sroa.0.28.us, %"for convolved.s1.r19$y502.preheader.split.us.us" ], [ %4771, %"end for convolved.s1.r19$x506.loopexit.split.us.us.us.us" ]
  %4504 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4414, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4505 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4506 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.48.20.us, <32 x i32> %4505, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4507 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4508 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4506, <32 x i32> %convolved673.sroa.48.20.us, <32 x i32> %4507, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4509 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4504, <1 x i32> zeroinitializer, <32 x i32> %4508, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4510 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %4509, <32 x i32> %4403, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %4511 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4413, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4512 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4513 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.48.20.us, <32 x i32> %4512, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4514 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4515 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4513, <32 x i32> %convolved673.sroa.48.20.us, <32 x i32> %4514, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4516 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4511, <1 x i32> zeroinitializer, <32 x i32> %4515, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4517 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %4510, <32 x i32> %4516, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %4518 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4414, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4519 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4520 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.0.34.us, <32 x i32> %4519, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4521 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4522 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4520, <32 x i32> %convolved673.sroa.0.34.us, <32 x i32> %4521, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4523 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4518, <1 x i32> zeroinitializer, <32 x i32> %4522, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4524 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %4523, <32 x i32> %4403, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %4525 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4413, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4526 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4527 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.0.34.us, <32 x i32> %4526, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4528 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4529 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4527, <32 x i32> %convolved673.sroa.0.34.us, <32 x i32> %4528, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4530 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4525, <1 x i32> zeroinitializer, <32 x i32> %4529, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4531 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %4524, <32 x i32> %4530, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %4532 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %4517, <32 x i32> %4531, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %4533 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4414, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4534 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4535 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.78.20.us, <32 x i32> %4534, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4536 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4537 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4535, <32 x i32> %convolved673.sroa.78.20.us, <32 x i32> %4536, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4538 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4533, <1 x i32> zeroinitializer, <32 x i32> %4537, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4539 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %4538, <32 x i32> %4403, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %4540 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4413, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4541 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4542 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.78.20.us, <32 x i32> %4541, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4543 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4544 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4542, <32 x i32> %convolved673.sroa.78.20.us, <32 x i32> %4543, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4545 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4540, <1 x i32> zeroinitializer, <32 x i32> %4544, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4546 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %4539, <32 x i32> %4545, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %4547 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4414, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4548 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4549 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.63.20.us, <32 x i32> %4548, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4550 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4551 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4549, <32 x i32> %convolved673.sroa.63.20.us, <32 x i32> %4550, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4552 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4547, <1 x i32> zeroinitializer, <32 x i32> %4551, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4553 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %4552, <32 x i32> %4403, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %4554 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4413, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4555 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4556 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.63.20.us, <32 x i32> %4555, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4557 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4558 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4556, <32 x i32> %convolved673.sroa.63.20.us, <32 x i32> %4557, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4559 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4554, <1 x i32> zeroinitializer, <32 x i32> %4558, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4560 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %4553, <32 x i32> %4559, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %4561 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %4546, <32 x i32> %4560, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %4562 = call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %4532, <64 x i16> %4561, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0) #11
  %4563 = call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %4562, <128 x i16> %4407, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0) #11
  %4564 = call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %4563, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0) #11
  %4565 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4414, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4566 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4567 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.48.20.us, <32 x i32> %4566, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4568 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4569 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4567, <32 x i32> %convolved673.sroa.48.20.us, <32 x i32> %4568, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4570 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4565, <1 x i32> zeroinitializer, <32 x i32> %4569, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4571 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %4570, <32 x i32> %4403, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %4572 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4413, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4573 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4574 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.48.20.us, <32 x i32> %4573, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4575 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4576 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4574, <32 x i32> %convolved673.sroa.48.20.us, <32 x i32> %4575, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4577 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4572, <1 x i32> zeroinitializer, <32 x i32> %4576, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4578 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %4571, <32 x i32> %4577, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %4579 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4414, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4580 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4581 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.0.34.us, <32 x i32> %4580, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4582 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4583 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4581, <32 x i32> %convolved673.sroa.0.34.us, <32 x i32> %4582, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4584 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4579, <1 x i32> zeroinitializer, <32 x i32> %4583, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4585 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %4584, <32 x i32> %4403, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %4586 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4413, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4587 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4588 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.0.34.us, <32 x i32> %4587, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4589 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4590 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4588, <32 x i32> %convolved673.sroa.0.34.us, <32 x i32> %4589, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4591 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4586, <1 x i32> zeroinitializer, <32 x i32> %4590, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4592 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %4585, <32 x i32> %4591, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %4593 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %4578, <32 x i32> %4592, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %4594 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4414, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4595 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4596 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.78.20.us, <32 x i32> %4595, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4597 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4598 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4596, <32 x i32> %convolved673.sroa.78.20.us, <32 x i32> %4597, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4599 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4594, <1 x i32> zeroinitializer, <32 x i32> %4598, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4600 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %4599, <32 x i32> %4403, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %4601 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4413, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4602 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4603 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.78.20.us, <32 x i32> %4602, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4604 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4605 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4603, <32 x i32> %convolved673.sroa.78.20.us, <32 x i32> %4604, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4606 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4601, <1 x i32> zeroinitializer, <32 x i32> %4605, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4607 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %4600, <32 x i32> %4606, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %4608 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4414, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4609 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4610 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.63.20.us, <32 x i32> %4609, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4611 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4612 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4610, <32 x i32> %convolved673.sroa.63.20.us, <32 x i32> %4611, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4613 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4608, <1 x i32> zeroinitializer, <32 x i32> %4612, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4614 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %4613, <32 x i32> %4403, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %4615 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4413, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4616 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4617 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.63.20.us, <32 x i32> %4616, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4618 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4412, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4619 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4617, <32 x i32> %convolved673.sroa.63.20.us, <32 x i32> %4618, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4620 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4615, <1 x i32> zeroinitializer, <32 x i32> %4619, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4621 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %4614, <32 x i32> %4620, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %4622 = call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %4607, <32 x i32> %4621, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0) #11
  %4623 = call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %4593, <64 x i16> %4622, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0) #11
  %4624 = call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %4623, <128 x i16> %4407, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0) #11
  %4625 = call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl(<128 x i16> %4624, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0) #11
  %4626 = call <128 x i8> @llvm.hydride.hexagon_V6_vpackwuh_sat_128B_dsl(<64 x i16> %4564, <64 x i16> %4625, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 0, i32 16, i32 1, i32 64, i32 0, i32 16, i32 1, i32 8, i32 0) #11
  %4627 = call <128 x i8> @llvm.hydride.hexagon_V6_vminuh_128B_dsl(<128 x i8> %4409, <128 x i8> %4626, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0) #11
  %4628 = call <128 x i8> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl(<128 x i8> %4411, <128 x i8> %4627, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0) #11
  %4629 = shl nsw i32 %output.s0.c.co497.us, 7
  %4630 = add i32 %4652, %4629
  %4631 = getelementptr inbounds i8, i8* %23, i32 %4630
  %4632 = bitcast i8* %4631 to <128 x i8>*
  store <128 x i8> %4628, <128 x i8>* %4632, align 1, !tbaa !111
  %4633 = add nuw nsw i32 %output.s0.c.co497.us, 1
  %.not697.us = icmp eq i32 %4633, %4400
  br i1 %.not697.us, label %"end for output.s0.c.co496.us", label %"for output.s0.c.co495.us"

"end for output.s0.c.co496.us":                   ; preds = %"consume convolved511.us", %"consume sum_input494.us"
  %4634 = add nuw nsw i32 %output.s0.x.xo471.us, 1
  %.not695.us = icmp eq i32 %4634, %26
  br i1 %.not695.us, label %"end for output.s0.x.xo470.us", label %"for output.s0.x.xo469.us"

"end for output.s0.x.xo470.us":                   ; preds = %"end for output.s0.c.co496.us"
  %4635 = add nuw nsw i32 %output.s0.y.rebased468.us, 1
  %.not696.us = icmp eq i32 %4635, %29
  br i1 %.not696.us, label %"end for output.s0.y.rebased467.loopexit.us", label %"for output.s0.y.rebased466.us"

"for convolved.s1.r19$y502.preheader.us":         ; preds = %after_bb499.us
  %4636 = shl nsw i32 %output.s0.c.co497.us, 2
  %4637 = or i32 %4636, 3
  %4638 = mul nsw i32 %4637, %8
  %4639 = or i32 %4636, 2
  %4640 = mul nsw i32 %4639, %8
  %4641 = or i32 %4636, 1
  %4642 = mul nsw i32 %4641, %8
  %4643 = mul nsw i32 %output.s0.c.co497.us, %8
  br i1 %4398, label %"for convolved.s1.r19$y502.preheader.split.us.us", label %"consume convolved511.us", !prof !96

"for sum_input.s1.r19$x482.preheader.us":         ; preds = %"for sum_input.s1.r19$y479.us"
  %4644 = mul nsw i32 %"sum_input.s1.r19$y481.us", %dilation_y
  %4645 = add nsw i32 %4644, %4427
  %4646 = mul nsw i32 %4645, %19
  %t1136.us = add i32 %4423, %4646
  br i1 %4418, label %"end for sum_input.s1.r19$x483.us.loopexit.unr-lcssa", label %"for sum_input.s1.r19$x482.us"

"for output.s0.c.co495.preheader.us":             ; preds = %"consume sum_input494.us"
  %sum_input674.sroa.0.0.vec.extract861.us = extractelement <6 x i32> %sum_input674.sroa.0.26.us, i32 0
  %4647 = mul nsw i32 %sum_input674.sroa.0.0.vec.extract861.us, %168
  %4648 = insertelement <1 x i32> poison, i32 %4647, i32 0
  %4649 = add nsw i32 %output.s0.x.xo471.us, %25
  %4650 = mul nsw i32 %4649, %stride_x
  %4651 = mul nsw i32 %4649, %27
  %4652 = add i32 %t1133.us, %4651
  br label %"for output.s0.c.co495.us"

"for sum_input.s1.r19$y479.preheader.us":         ; preds = %then_bb477.us
  %4653 = add nsw i32 %output.s0.x.xo471.us, %25
  %4654 = sub i32 %4653, %16
  br label %"for sum_input.s1.r19$y479.us"

"for sum_input.s1.r19$y485.preheader.us":         ; preds = %next_bb478.us
  %4655 = add nsw i32 %output.s0.x.xo471.us, %25
  %4656 = mul nsw i32 %4655, %stride_x
  br i1 %brmerge1675.demorgan, label %"for sum_input.s1.r19$y485.us.us.us", label %"consume sum_input494.us", !prof !103

"end for output.s0.y.rebased467.loopexit.us":     ; preds = %"end for output.s0.x.xo470.us"
  %4657 = add nuw nsw i32 %output.s0.b.rebased465.us, 1
  %.not694.us = icmp eq i32 %4657, %21
  br i1 %.not694.us, label %after_bb3, label %"for output.s0.b.rebased463.us"

"for sum_input.s1.r19$y485.us.us.us":             ; preds = %"for sum_input.s1.r19$y485.preheader.us", %"end for sum_input.s1.r19$x489.loopexit.split.us.us.us.us"
  %sum_input674.sroa.0.21.us.us.us = phi <6 x i32> [ %sum_input674.sroa.0.0.vec.insert.us.us.us.us.le.le, %"end for sum_input.s1.r19$x489.loopexit.split.us.us.us.us" ], [ %sum_input674.sroa.0.0.vec.insert870.us, %"for sum_input.s1.r19$y485.preheader.us" ]
  %"sum_input.s1.r19$y487.us.us.us" = phi i32 [ %4746, %"end for sum_input.s1.r19$x489.loopexit.split.us.us.us.us" ], [ 0, %"for sum_input.s1.r19$y485.preheader.us" ]
  %4658 = mul nsw i32 %"sum_input.s1.r19$y487.us.us.us", %dilation_y
  %4659 = add nsw i32 %4658, %4427
  %4660 = mul nsw i32 %4659, %19
  %t1138.us.us.us = add nsw i32 %4422, %4660
  br label %"for sum_input.s1.r19$x488.us.us.us.us"

"for sum_input.s1.r19$x488.us.us.us.us":          ; preds = %"end for sum_input.s1.r19$z.r124492.loopexit.us.us.us.us", %"for sum_input.s1.r19$y485.us.us.us"
  %sum_input674.sroa.0.22.us.us.us.us = phi <6 x i32> [ %sum_input674.sroa.0.0.vec.insert.us.us.us.us.le, %"end for sum_input.s1.r19$z.r124492.loopexit.us.us.us.us" ], [ %sum_input674.sroa.0.21.us.us.us, %"for sum_input.s1.r19$y485.us.us.us" ]
  %"sum_input.s1.r19$x490.us.us.us.us" = phi i32 [ %4745, %"end for sum_input.s1.r19$z.r124492.loopexit.us.us.us.us" ], [ 0, %"for sum_input.s1.r19$y485.us.us.us" ]
  %4661 = mul nsw i32 %"sum_input.s1.r19$x490.us.us.us.us", %dilation_x
  %t1139.s.us.us.us.us = add nsw i32 %4661, %4656
  %4662 = mul nsw i32 %t1139.s.us.us.us.us, %17
  %4663 = add nsw i32 %t1138.us.us.us, %4662
  br i1 %4417, label %"end for sum_input.s1.r19$z.r124492.loopexit.us.us.us.us.unr-lcssa", label %"for sum_input.s1.r19$z.r124491.us.us.us.us"

"for sum_input.s1.r19$z.r124491.us.us.us.us":     ; preds = %"for sum_input.s1.r19$x488.us.us.us.us", %"for sum_input.s1.r19$z.r124491.us.us.us.us"
  %sum_input674.sroa.0.24.us.us.us.us = phi <6 x i32> [ %sum_input674.sroa.0.0.vec.insert.us.us.us.us.7, %"for sum_input.s1.r19$z.r124491.us.us.us.us" ], [ %sum_input674.sroa.0.22.us.us.us.us, %"for sum_input.s1.r19$x488.us.us.us.us" ]
  %"sum_input.s1.r19$z.r124493.us.us.us.us" = phi i32 [ %4735, %"for sum_input.s1.r19$z.r124491.us.us.us.us" ], [ 0, %"for sum_input.s1.r19$x488.us.us.us.us" ]
  %niter1843 = phi i32 [ %niter1843.nsub.7, %"for sum_input.s1.r19$z.r124491.us.us.us.us" ], [ %unroll_iter1842, %"for sum_input.s1.r19$x488.us.us.us.us" ]
  %sum_input674.sroa.0.0.vec.extract864.us.us.us.us = extractelement <6 x i32> %sum_input674.sroa.0.24.us.us.us.us, i32 0
  %4664 = shl nsw i32 %"sum_input.s1.r19$z.r124493.us.us.us.us", 2
  %4665 = add nsw i32 %4663, %4664
  %4666 = getelementptr inbounds i8, i8* %13, i32 %4665
  %4667 = bitcast i8* %4666 to <4 x i8>*
  %4668 = load <4 x i8>, <4 x i8>* %4667, align 4, !tbaa !108
  %4669 = zext <4 x i8> %4668 to <4 x i32>
  %4670 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %4669) #9
  %4671 = add nsw i32 %4670, %sum_input674.sroa.0.0.vec.extract864.us.us.us.us
  %4672 = shl i32 %"sum_input.s1.r19$z.r124493.us.us.us.us", 2
  %4673 = or i32 %4672, 4
  %4674 = add nsw i32 %4663, %4673
  %4675 = getelementptr inbounds i8, i8* %13, i32 %4674
  %4676 = bitcast i8* %4675 to <4 x i8>*
  %4677 = load <4 x i8>, <4 x i8>* %4676, align 4, !tbaa !108
  %4678 = zext <4 x i8> %4677 to <4 x i32>
  %4679 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %4678) #9
  %4680 = add nsw i32 %4679, %4671
  %4681 = shl i32 %"sum_input.s1.r19$z.r124493.us.us.us.us", 2
  %4682 = or i32 %4681, 8
  %4683 = add nsw i32 %4663, %4682
  %4684 = getelementptr inbounds i8, i8* %13, i32 %4683
  %4685 = bitcast i8* %4684 to <4 x i8>*
  %4686 = load <4 x i8>, <4 x i8>* %4685, align 4, !tbaa !108
  %4687 = zext <4 x i8> %4686 to <4 x i32>
  %4688 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %4687) #9
  %4689 = add nsw i32 %4688, %4680
  %4690 = shl i32 %"sum_input.s1.r19$z.r124493.us.us.us.us", 2
  %4691 = or i32 %4690, 12
  %4692 = add nsw i32 %4663, %4691
  %4693 = getelementptr inbounds i8, i8* %13, i32 %4692
  %4694 = bitcast i8* %4693 to <4 x i8>*
  %4695 = load <4 x i8>, <4 x i8>* %4694, align 4, !tbaa !108
  %4696 = zext <4 x i8> %4695 to <4 x i32>
  %4697 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %4696) #9
  %4698 = add nsw i32 %4697, %4689
  %4699 = shl i32 %"sum_input.s1.r19$z.r124493.us.us.us.us", 2
  %4700 = or i32 %4699, 16
  %4701 = add nsw i32 %4663, %4700
  %4702 = getelementptr inbounds i8, i8* %13, i32 %4701
  %4703 = bitcast i8* %4702 to <4 x i8>*
  %4704 = load <4 x i8>, <4 x i8>* %4703, align 4, !tbaa !108
  %4705 = zext <4 x i8> %4704 to <4 x i32>
  %4706 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %4705) #9
  %4707 = add nsw i32 %4706, %4698
  %4708 = shl i32 %"sum_input.s1.r19$z.r124493.us.us.us.us", 2
  %4709 = or i32 %4708, 20
  %4710 = add nsw i32 %4663, %4709
  %4711 = getelementptr inbounds i8, i8* %13, i32 %4710
  %4712 = bitcast i8* %4711 to <4 x i8>*
  %4713 = load <4 x i8>, <4 x i8>* %4712, align 4, !tbaa !108
  %4714 = zext <4 x i8> %4713 to <4 x i32>
  %4715 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %4714) #9
  %4716 = add nsw i32 %4715, %4707
  %4717 = shl i32 %"sum_input.s1.r19$z.r124493.us.us.us.us", 2
  %4718 = or i32 %4717, 24
  %4719 = add nsw i32 %4663, %4718
  %4720 = getelementptr inbounds i8, i8* %13, i32 %4719
  %4721 = bitcast i8* %4720 to <4 x i8>*
  %4722 = load <4 x i8>, <4 x i8>* %4721, align 4, !tbaa !108
  %4723 = zext <4 x i8> %4722 to <4 x i32>
  %4724 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %4723) #9
  %4725 = add nsw i32 %4724, %4716
  %sum_input674.sroa.0.0.vec.insert.us.us.us.us.6 = insertelement <6 x i32> %sum_input674.sroa.0.24.us.us.us.us, i32 %4725, i32 0
  %4726 = shl i32 %"sum_input.s1.r19$z.r124493.us.us.us.us", 2
  %4727 = or i32 %4726, 28
  %4728 = add nsw i32 %4663, %4727
  %4729 = getelementptr inbounds i8, i8* %13, i32 %4728
  %4730 = bitcast i8* %4729 to <4 x i8>*
  %4731 = load <4 x i8>, <4 x i8>* %4730, align 4, !tbaa !108
  %4732 = zext <4 x i8> %4731 to <4 x i32>
  %4733 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %4732) #9
  %4734 = add nsw i32 %4733, %4725
  %sum_input674.sroa.0.0.vec.insert.us.us.us.us.7 = insertelement <6 x i32> %sum_input674.sroa.0.0.vec.insert.us.us.us.us.6, i32 %4734, i32 0
  %4735 = add nuw nsw i32 %"sum_input.s1.r19$z.r124493.us.us.us.us", 8
  %niter1843.nsub.7 = add i32 %niter1843, -8
  %niter1843.ncmp.7 = icmp eq i32 %niter1843.nsub.7, 0
  br i1 %niter1843.ncmp.7, label %"end for sum_input.s1.r19$z.r124492.loopexit.us.us.us.us.unr-lcssa.loopexit", label %"for sum_input.s1.r19$z.r124491.us.us.us.us"

"end for sum_input.s1.r19$z.r124492.loopexit.us.us.us.us.unr-lcssa.loopexit": ; preds = %"for sum_input.s1.r19$z.r124491.us.us.us.us"
  %sum_input674.sroa.0.0.vec.insert.us.us.us.us.6.le = insertelement <6 x i32> %sum_input674.sroa.0.24.us.us.us.us, i32 %4725, i32 0
  %sum_input674.sroa.0.0.vec.insert.us.us.us.us.7.le = insertelement <6 x i32> %sum_input674.sroa.0.0.vec.insert.us.us.us.us.6.le, i32 %4734, i32 0
  br label %"end for sum_input.s1.r19$z.r124492.loopexit.us.us.us.us.unr-lcssa"

"end for sum_input.s1.r19$z.r124492.loopexit.us.us.us.us.unr-lcssa": ; preds = %"end for sum_input.s1.r19$z.r124492.loopexit.us.us.us.us.unr-lcssa.loopexit", %"for sum_input.s1.r19$x488.us.us.us.us"
  %sum_input674.sroa.0.24.us.us.us.us.lcssa.ph = phi <6 x i32> [ undef, %"for sum_input.s1.r19$x488.us.us.us.us" ], [ %sum_input674.sroa.0.0.vec.insert.us.us.us.us.6.le, %"end for sum_input.s1.r19$z.r124492.loopexit.us.us.us.us.unr-lcssa.loopexit" ]
  %.lcssa1810.ph = phi i32 [ undef, %"for sum_input.s1.r19$x488.us.us.us.us" ], [ %4734, %"end for sum_input.s1.r19$z.r124492.loopexit.us.us.us.us.unr-lcssa.loopexit" ]
  %sum_input674.sroa.0.24.us.us.us.us.unr = phi <6 x i32> [ %sum_input674.sroa.0.22.us.us.us.us, %"for sum_input.s1.r19$x488.us.us.us.us" ], [ %sum_input674.sroa.0.0.vec.insert.us.us.us.us.7.le, %"end for sum_input.s1.r19$z.r124492.loopexit.us.us.us.us.unr-lcssa.loopexit" ]
  %"sum_input.s1.r19$z.r124493.us.us.us.us.unr" = phi i32 [ 0, %"for sum_input.s1.r19$x488.us.us.us.us" ], [ %4735, %"end for sum_input.s1.r19$z.r124492.loopexit.us.us.us.us.unr-lcssa.loopexit" ]
  br i1 %lcmp.mod1839.not, label %"end for sum_input.s1.r19$z.r124492.loopexit.us.us.us.us", label %"for sum_input.s1.r19$z.r124491.us.us.us.us.epil"

"for sum_input.s1.r19$z.r124491.us.us.us.us.epil": ; preds = %"end for sum_input.s1.r19$z.r124492.loopexit.us.us.us.us.unr-lcssa", %"for sum_input.s1.r19$z.r124491.us.us.us.us.epil"
  %sum_input674.sroa.0.24.us.us.us.us.epil = phi <6 x i32> [ %sum_input674.sroa.0.0.vec.insert.us.us.us.us.epil, %"for sum_input.s1.r19$z.r124491.us.us.us.us.epil" ], [ %sum_input674.sroa.0.24.us.us.us.us.unr, %"end for sum_input.s1.r19$z.r124492.loopexit.us.us.us.us.unr-lcssa" ]
  %"sum_input.s1.r19$z.r124493.us.us.us.us.epil" = phi i32 [ %4744, %"for sum_input.s1.r19$z.r124491.us.us.us.us.epil" ], [ %"sum_input.s1.r19$z.r124493.us.us.us.us.unr", %"end for sum_input.s1.r19$z.r124492.loopexit.us.us.us.us.unr-lcssa" ]
  %epil.iter1838 = phi i32 [ %epil.iter1838.sub, %"for sum_input.s1.r19$z.r124491.us.us.us.us.epil" ], [ %xtraiter1837, %"end for sum_input.s1.r19$z.r124492.loopexit.us.us.us.us.unr-lcssa" ]
  %sum_input674.sroa.0.0.vec.extract864.us.us.us.us.epil = extractelement <6 x i32> %sum_input674.sroa.0.24.us.us.us.us.epil, i32 0
  %4736 = shl nsw i32 %"sum_input.s1.r19$z.r124493.us.us.us.us.epil", 2
  %4737 = add nsw i32 %4663, %4736
  %4738 = getelementptr inbounds i8, i8* %13, i32 %4737
  %4739 = bitcast i8* %4738 to <4 x i8>*
  %4740 = load <4 x i8>, <4 x i8>* %4739, align 4, !tbaa !108
  %4741 = zext <4 x i8> %4740 to <4 x i32>
  %4742 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %4741) #9
  %4743 = add nsw i32 %4742, %sum_input674.sroa.0.0.vec.extract864.us.us.us.us.epil
  %sum_input674.sroa.0.0.vec.insert.us.us.us.us.epil = insertelement <6 x i32> %sum_input674.sroa.0.24.us.us.us.us.epil, i32 %4743, i32 0
  %4744 = add nuw nsw i32 %"sum_input.s1.r19$z.r124493.us.us.us.us.epil", 1
  %epil.iter1838.sub = add i32 %epil.iter1838, -1
  %epil.iter1838.cmp.not = icmp eq i32 %epil.iter1838.sub, 0
  br i1 %epil.iter1838.cmp.not, label %"end for sum_input.s1.r19$z.r124492.loopexit.us.us.us.us", label %"for sum_input.s1.r19$z.r124491.us.us.us.us.epil", !llvm.loop !116

"end for sum_input.s1.r19$z.r124492.loopexit.us.us.us.us": ; preds = %"for sum_input.s1.r19$z.r124491.us.us.us.us.epil", %"end for sum_input.s1.r19$z.r124492.loopexit.us.us.us.us.unr-lcssa"
  %sum_input674.sroa.0.24.us.us.us.us.lcssa = phi <6 x i32> [ %sum_input674.sroa.0.24.us.us.us.us.lcssa.ph, %"end for sum_input.s1.r19$z.r124492.loopexit.us.us.us.us.unr-lcssa" ], [ %sum_input674.sroa.0.24.us.us.us.us.epil, %"for sum_input.s1.r19$z.r124491.us.us.us.us.epil" ]
  %.lcssa1810 = phi i32 [ %.lcssa1810.ph, %"end for sum_input.s1.r19$z.r124492.loopexit.us.us.us.us.unr-lcssa" ], [ %4743, %"for sum_input.s1.r19$z.r124491.us.us.us.us.epil" ]
  %sum_input674.sroa.0.0.vec.insert.us.us.us.us.le = insertelement <6 x i32> %sum_input674.sroa.0.24.us.us.us.us.lcssa, i32 %.lcssa1810, i32 0
  %4745 = add nuw nsw i32 %"sum_input.s1.r19$x490.us.us.us.us", 1
  %.not702.us.us.us.us = icmp eq i32 %4745, %9
  br i1 %.not702.us.us.us.us, label %"end for sum_input.s1.r19$x489.loopexit.split.us.us.us.us", label %"for sum_input.s1.r19$x488.us.us.us.us"

"end for sum_input.s1.r19$x489.loopexit.split.us.us.us.us": ; preds = %"end for sum_input.s1.r19$z.r124492.loopexit.us.us.us.us"
  %sum_input674.sroa.0.0.vec.insert.us.us.us.us.le.le = insertelement <6 x i32> %sum_input674.sroa.0.24.us.us.us.us.lcssa, i32 %.lcssa1810, i32 0
  %4746 = add nuw nsw i32 %"sum_input.s1.r19$y487.us.us.us", 1
  %.not701.us.us.us = icmp eq i32 %4746, %11
  br i1 %.not701.us.us.us, label %"consume sum_input494.us.loopexit1599", label %"for sum_input.s1.r19$y485.us.us.us"

"for convolved.s1.r19$y502.preheader.split.us.us": ; preds = %"for convolved.s1.r19$y502.preheader.us"
  br i1 %4399, label %"for convolved.s1.r19$y502.us.us.us", label %"consume convolved511.us", !prof !96

"for convolved.s1.r19$y502.us.us.us":             ; preds = %"for convolved.s1.r19$y502.preheader.split.us.us", %"end for convolved.s1.r19$x506.loopexit.split.us.us.us.us"
  %convolved673.sroa.78.15.us.us.us = phi <32 x i32> [ %4793, %"end for convolved.s1.r19$x506.loopexit.split.us.us.us.us" ], [ %convolved673.sroa.78.14.us, %"for convolved.s1.r19$y502.preheader.split.us.us" ]
  %convolved673.sroa.63.15.us.us.us = phi <32 x i32> [ %4786, %"end for convolved.s1.r19$x506.loopexit.split.us.us.us.us" ], [ %convolved673.sroa.63.14.us, %"for convolved.s1.r19$y502.preheader.split.us.us" ]
  %convolved673.sroa.48.15.us.us.us = phi <32 x i32> [ %4779, %"end for convolved.s1.r19$x506.loopexit.split.us.us.us.us" ], [ %convolved673.sroa.48.14.us, %"for convolved.s1.r19$y502.preheader.split.us.us" ]
  %convolved673.sroa.0.29.us.us.us = phi <32 x i32> [ %4771, %"end for convolved.s1.r19$x506.loopexit.split.us.us.us.us" ], [ %convolved673.sroa.0.28.us, %"for convolved.s1.r19$y502.preheader.split.us.us" ]
  %"convolved.s1.r19$y504.us.us.us" = phi i32 [ %4796, %"end for convolved.s1.r19$x506.loopexit.split.us.us.us.us" ], [ 0, %"for convolved.s1.r19$y502.preheader.split.us.us" ]
  %4747 = mul nsw i32 %"convolved.s1.r19$y504.us.us.us", %dilation_y
  %4748 = add nsw i32 %4747, %4427
  %4749 = mul nsw i32 %4748, %19
  %t1148.us.us.us = add nsw i32 %4422, %4749
  %4750 = mul nsw i32 %"convolved.s1.r19$y504.us.us.us", %12
  br label %"for convolved.s1.r19$x505.us.us.us.us"

"for convolved.s1.r19$x505.us.us.us.us":          ; preds = %"end for convolved.s1.r19$z.r124509.loopexit.us.us.us.us", %"for convolved.s1.r19$y502.us.us.us"
  %convolved673.sroa.78.16.us.us.us.us = phi <32 x i32> [ %4793, %"end for convolved.s1.r19$z.r124509.loopexit.us.us.us.us" ], [ %convolved673.sroa.78.15.us.us.us, %"for convolved.s1.r19$y502.us.us.us" ]
  %convolved673.sroa.63.16.us.us.us.us = phi <32 x i32> [ %4786, %"end for convolved.s1.r19$z.r124509.loopexit.us.us.us.us" ], [ %convolved673.sroa.63.15.us.us.us, %"for convolved.s1.r19$y502.us.us.us" ]
  %convolved673.sroa.48.16.us.us.us.us = phi <32 x i32> [ %4779, %"end for convolved.s1.r19$z.r124509.loopexit.us.us.us.us" ], [ %convolved673.sroa.48.15.us.us.us, %"for convolved.s1.r19$y502.us.us.us" ]
  %convolved673.sroa.0.30.us.us.us.us = phi <32 x i32> [ %4771, %"end for convolved.s1.r19$z.r124509.loopexit.us.us.us.us" ], [ %convolved673.sroa.0.29.us.us.us, %"for convolved.s1.r19$y502.us.us.us" ]
  %"convolved.s1.r19$x507.us.us.us.us" = phi i32 [ %4795, %"end for convolved.s1.r19$z.r124509.loopexit.us.us.us.us" ], [ 0, %"for convolved.s1.r19$y502.us.us.us" ]
  %4751 = mul nsw i32 %"convolved.s1.r19$x507.us.us.us.us", %dilation_x
  %t1154.s.us.us.us.us = add nsw i32 %4751, %4650
  %4752 = mul nsw i32 %"convolved.s1.r19$x507.us.us.us.us", %10
  %t1155.us.us.us.us = add nsw i32 %4752, %4750
  %4753 = mul nsw i32 %t1154.s.us.us.us.us, %17
  %4754 = add nsw i32 %t1148.us.us.us, %4753
  %4755 = add i32 %t1155.us.us.us.us, %4642
  %4756 = add i32 %t1155.us.us.us.us, %4640
  %4757 = add i32 %t1155.us.us.us.us, %4638
  br label %"for convolved.s1.r19$z.r124508.us.us.us.us"

"for convolved.s1.r19$z.r124508.us.us.us.us":     ; preds = %"for convolved.s1.r19$z.r124508.us.us.us.us", %"for convolved.s1.r19$x505.us.us.us.us"
  %convolved673.sroa.78.18.us.us.us.us = phi <32 x i32> [ %4793, %"for convolved.s1.r19$z.r124508.us.us.us.us" ], [ %convolved673.sroa.78.16.us.us.us.us, %"for convolved.s1.r19$x505.us.us.us.us" ]
  %convolved673.sroa.63.18.us.us.us.us = phi <32 x i32> [ %4786, %"for convolved.s1.r19$z.r124508.us.us.us.us" ], [ %convolved673.sroa.63.16.us.us.us.us, %"for convolved.s1.r19$x505.us.us.us.us" ]
  %convolved673.sroa.48.18.us.us.us.us = phi <32 x i32> [ %4779, %"for convolved.s1.r19$z.r124508.us.us.us.us" ], [ %convolved673.sroa.48.16.us.us.us.us, %"for convolved.s1.r19$x505.us.us.us.us" ]
  %convolved673.sroa.0.32.us.us.us.us = phi <32 x i32> [ %4771, %"for convolved.s1.r19$z.r124508.us.us.us.us" ], [ %convolved673.sroa.0.30.us.us.us.us, %"for convolved.s1.r19$x505.us.us.us.us" ]
  %"convolved.s1.r19$z.r124510.us.us.us.us" = phi i32 [ %4794, %"for convolved.s1.r19$z.r124508.us.us.us.us" ], [ 0, %"for convolved.s1.r19$x505.us.us.us.us" ]
  %4758 = shl nsw i32 %"convolved.s1.r19$z.r124510.us.us.us.us", 2
  %4759 = add nsw i32 %4754, %4758
  %4760 = getelementptr inbounds i8, i8* %13, i32 %4759
  %4761 = bitcast i8* %4760 to <4 x i8>*
  %4762 = load <4 x i8>, <4 x i8>* %4761, align 4, !tbaa !108
  %4763 = shl nsw i32 %"convolved.s1.r19$z.r124510.us.us.us.us", 5
  %4764 = add nsw i32 %4763, %4643
  %4765 = shl nsw i32 %4764, 2
  %4766 = add nsw i32 %t1155.us.us.us.us, %4765
  %4767 = getelementptr inbounds i8, i8* %5, i32 %4766
  %4768 = bitcast i8* %4767 to <128 x i8>*
  %4769 = load <128 x i8>, <128 x i8>* %4768, align 128, !tbaa !106
  %4770 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %4762, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4771 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.0.32.us.us.us.us, <128 x i8> %4769, <32 x i32> %4770, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %4772 = load <4 x i8>, <4 x i8>* %4761, align 4, !tbaa !108
  %4773 = shl nsw i32 %"convolved.s1.r19$z.r124510.us.us.us.us", 7
  %4774 = add i32 %4755, %4773
  %4775 = getelementptr inbounds i8, i8* %5, i32 %4774
  %4776 = bitcast i8* %4775 to <128 x i8>*
  %4777 = load <128 x i8>, <128 x i8>* %4776, align 128, !tbaa !106
  %4778 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %4772, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4779 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.48.18.us.us.us.us, <128 x i8> %4777, <32 x i32> %4778, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %4780 = load <4 x i8>, <4 x i8>* %4761, align 4, !tbaa !108
  %4781 = add i32 %4756, %4773
  %4782 = getelementptr inbounds i8, i8* %5, i32 %4781
  %4783 = bitcast i8* %4782 to <128 x i8>*
  %4784 = load <128 x i8>, <128 x i8>* %4783, align 128, !tbaa !106
  %4785 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %4780, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4786 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.63.18.us.us.us.us, <128 x i8> %4784, <32 x i32> %4785, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %4787 = load <4 x i8>, <4 x i8>* %4761, align 4, !tbaa !108
  %4788 = add i32 %4757, %4773
  %4789 = getelementptr inbounds i8, i8* %5, i32 %4788
  %4790 = bitcast i8* %4789 to <128 x i8>*
  %4791 = load <128 x i8>, <128 x i8>* %4790, align 128, !tbaa !106
  %4792 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %4787, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4793 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.78.18.us.us.us.us, <128 x i8> %4791, <32 x i32> %4792, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %4794 = add nuw nsw i32 %"convolved.s1.r19$z.r124510.us.us.us.us", 1
  %.not700.us.us.us.us = icmp eq i32 %4794, %7
  br i1 %.not700.us.us.us.us, label %"end for convolved.s1.r19$z.r124509.loopexit.us.us.us.us", label %"for convolved.s1.r19$z.r124508.us.us.us.us"

"end for convolved.s1.r19$z.r124509.loopexit.us.us.us.us": ; preds = %"for convolved.s1.r19$z.r124508.us.us.us.us"
  %4795 = add nuw nsw i32 %"convolved.s1.r19$x507.us.us.us.us", 1
  %.not699.us.us.us.us = icmp eq i32 %4795, %9
  br i1 %.not699.us.us.us.us, label %"end for convolved.s1.r19$x506.loopexit.split.us.us.us.us", label %"for convolved.s1.r19$x505.us.us.us.us"

"end for convolved.s1.r19$x506.loopexit.split.us.us.us.us": ; preds = %"end for convolved.s1.r19$z.r124509.loopexit.us.us.us.us"
  %4796 = add nuw nsw i32 %"convolved.s1.r19$y504.us.us.us", 1
  %.not698.us.us.us = icmp eq i32 %4796, %11
  br i1 %.not698.us.us.us, label %"consume convolved511.us", label %"for convolved.s1.r19$y502.us.us.us"

next_bb462:                                       ; preds = %next_bb385
  %a15 = ashr i32 %4, 5
  %4797 = icmp sgt i32 %4, 31
  %4798 = select i1 %4797, i32 %a15, i32 0
  %t1167 = sub nsw i32 %122, %4798
  %4799 = mul nsw i32 %19, %18
  %4800 = mul nsw i32 %17, %16
  %4801 = mul nsw i32 %22, %20
  %4802 = add i32 %4801, %4799
  %t1163 = add i32 %4802, %4800
  %4803 = icmp sgt i32 %21, 0
  br i1 %4803, label %"for output.s0.b.rebased524.preheader", label %after_bb3, !prof !96

"for output.s0.b.rebased524.preheader":           ; preds = %next_bb462
  %4804 = icmp sgt i32 %29, 0
  %.neg = mul i32 %30, %28
  %.neg1100 = mul i32 %27, %25
  %.neg1101 = mul i32 %31, %20
  %reass.add = add i32 %.neg, %.neg1100
  %reass.add1103 = add i32 %reass.add, %.neg1101
  %4805 = icmp sgt i32 %11, 0
  %4806 = icmp sgt i32 %9, 0
  %4807 = icmp sgt i32 %7, 0
  %4808 = icmp sgt i32 %output_shift, 0
  %4809 = select i1 %4808, <32 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, <32 x i32> zeroinitializer
  %4810 = add nsw i32 %output_shift, -1
  %4811 = insertelement <1 x i32> poison, i32 %output_multiplier, i32 0
  %4812 = insertelement <1 x i32> poison, i32 %output_shift, i32 0
  %4813 = insertelement <1 x i32> poison, i32 %4810, i32 0
  %4814 = zext i8 %output_zero to i16
  %4815 = insertelement <32 x i16> undef, i16 %4814, i32 0
  %4816 = shufflevector <32 x i16> %4815, <32 x i16> undef, <64 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %4817 = bitcast <64 x i16> %4816 to <32 x i32>
  %4818 = insertelement <32 x i8> undef, i8 %output_max, i32 0
  %4819 = shufflevector <32 x i8> %4818, <32 x i8> undef, <128 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %4820 = bitcast <128 x i8> %4819 to <32 x i32>
  %4821 = insertelement <32 x i8> undef, i8 %output_min, i32 0
  %4822 = shufflevector <32 x i8> %4821, <32 x i8> undef, <128 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %4823 = bitcast <128 x i8> %4822 to <32 x i32>
  %4824 = icmp sgt i32 %t1167, 0
  %4825 = insertelement <32 x i32> undef, i32 %4, i32 0
  %4826 = shufflevector <32 x i32> %4825, <32 x i32> undef, <32 x i32> zeroinitializer
  %4827 = add i32 %7, -1
  %4828 = add i32 %9, -1
  %xtraiter1823 = and i32 %7, 7
  %4829 = icmp ult i32 %4827, 7
  %unroll_iter1828 = and i32 %7, -8
  %lcmp.mod1825.not = icmp eq i32 %xtraiter1823, 0
  %xtraiter1830 = and i32 %9, 3
  %4830 = icmp ult i32 %4828, 3
  %unroll_iter1835 = and i32 %9, -4
  %lcmp.mod1832.not = icmp eq i32 %xtraiter1830, 0
  %brmerge1680.demorgan = and i1 %4806, %4807
  %or.cond1754 = and i1 %4805, %brmerge1680.demorgan
  %brmerge1683.demorgan = and i1 %4806, %4807
  %or.cond1753 = and i1 %4805, %brmerge1683.demorgan
  br label %"for output.s0.b.rebased524"

"for output.s0.b.rebased524":                     ; preds = %"for output.s0.b.rebased524.preheader", %"end for output.s0.y.rebased528"
  %sum_input533672.sroa.0.21 = phi <32 x i32> [ %sum_input533672.sroa.0.23, %"end for output.s0.y.rebased528" ], [ undef, %"for output.s0.b.rebased524.preheader" ]
  %convolved673.sroa.0.35 = phi <32 x i32> [ %convolved673.sroa.0.37, %"end for output.s0.y.rebased528" ], [ undef, %"for output.s0.b.rebased524.preheader" ]
  %output.s0.b.rebased526 = phi i32 [ %5177, %"end for output.s0.y.rebased528" ], [ 0, %"for output.s0.b.rebased524.preheader" ]
  br i1 %4804, label %"for output.s0.y.rebased527.preheader", label %"end for output.s0.y.rebased528", !prof !96

"for output.s0.y.rebased527.preheader":           ; preds = %"for output.s0.b.rebased524"
  %4831 = add nsw i32 %output.s0.b.rebased526, %20
  %4832 = mul nsw i32 %4831, %31
  %4833 = sub i32 %4832, %reass.add1103
  %4834 = mul nsw i32 %4831, %22
  %4835 = sub i32 %4834, %t1163
  %4836 = sub i32 %4834, %4802
  br i1 %100, label %"for output.s0.y.rebased527.us", label %"end for output.s0.y.rebased528", !prof !96

"for output.s0.y.rebased527.us":                  ; preds = %"for output.s0.y.rebased527.preheader", %"end for output.s0.x.xo531.loopexit.us"
  %sum_input533672.sroa.0.22.us = phi <32 x i32> [ %sum_input533672.sroa.0.34.us, %"end for output.s0.x.xo531.loopexit.us" ], [ %sum_input533672.sroa.0.21, %"for output.s0.y.rebased527.preheader" ]
  %convolved673.sroa.0.36.us = phi <32 x i32> [ %convolved673.sroa.0.50.us, %"end for output.s0.x.xo531.loopexit.us" ], [ %convolved673.sroa.0.35, %"for output.s0.y.rebased527.preheader" ]
  %output.s0.y.rebased529.us = phi i32 [ %5039, %"end for output.s0.x.xo531.loopexit.us" ], [ 0, %"for output.s0.y.rebased527.preheader" ]
  %4837 = add nsw i32 %output.s0.y.rebased529.us, %28
  %4838 = mul nsw i32 %4837, %30
  %t1180.us = add i32 %4833, %4838
  %4839 = mul nsw i32 %4837, %stride_y
  br label %"for output.s0.x.xo530.us"

"for output.s0.x.xo530.us":                       ; preds = %"for output.s0.y.rebased527.us", %"end for output.s0.c.co.rebased.us"
  %sum_input533672.sroa.0.24.us = phi <32 x i32> [ %sum_input533672.sroa.0.34.us, %"end for output.s0.c.co.rebased.us" ], [ %sum_input533672.sroa.0.22.us, %"for output.s0.y.rebased527.us" ]
  %convolved673.sroa.0.38.us = phi <32 x i32> [ %convolved673.sroa.0.50.us, %"end for output.s0.c.co.rebased.us" ], [ %convolved673.sroa.0.36.us, %"for output.s0.y.rebased527.us" ]
  %output.s0.x.xo532.us = phi i32 [ %5019, %"end for output.s0.c.co.rebased.us" ], [ 0, %"for output.s0.y.rebased527.us" ]
  br i1 %t843.not, label %"consume sum_input556.us", label %then_bb536.us

then_bb536.us:                                    ; preds = %"for output.s0.x.xo530.us"
  %sum_input533672.sroa.0.0.vec.insert1016.us = insertelement <32 x i32> %sum_input533672.sroa.0.24.us, i32 0, i32 0
  br i1 %t844, label %then_bb539.us, label %next_bb540.us

next_bb540.us:                                    ; preds = %then_bb536.us
  br i1 %4805, label %"for sum_input.s1.r19$y547.preheader.us", label %"consume sum_input556.us", !prof !96

then_bb539.us:                                    ; preds = %then_bb536.us
  br i1 %4805, label %"for sum_input.s1.r19$y541.preheader.us", label %"consume sum_input556.us", !prof !96

"for sum_input.s1.r19$y541.us":                   ; preds = %"for sum_input.s1.r19$y541.preheader.us", %"end for sum_input.s1.r19$x545.us"
  %sum_input533672.sroa.0.26.us = phi <32 x i32> [ %sum_input533672.sroa.0.28.us, %"end for sum_input.s1.r19$x545.us" ], [ %sum_input533672.sroa.0.0.vec.insert1016.us, %"for sum_input.s1.r19$y541.preheader.us" ]
  %"sum_input.s1.r19$y543.us" = phi i32 [ %4885, %"end for sum_input.s1.r19$x545.us" ], [ 0, %"for sum_input.s1.r19$y541.preheader.us" ]
  br i1 %4806, label %"for sum_input.s1.r19$x544.preheader.us", label %"end for sum_input.s1.r19$x545.us", !prof !96

"for sum_input.s1.r19$x544.us":                   ; preds = %"for sum_input.s1.r19$x544.preheader.us", %"for sum_input.s1.r19$x544.us"
  %sum_input533672.sroa.0.27.us = phi <32 x i32> [ %sum_input533672.sroa.0.0.vec.insert1012.us.3, %"for sum_input.s1.r19$x544.us" ], [ %sum_input533672.sroa.0.26.us, %"for sum_input.s1.r19$x544.preheader.us" ]
  %"sum_input.s1.r19$x546.us" = phi i32 [ %4875, %"for sum_input.s1.r19$x544.us" ], [ 0, %"for sum_input.s1.r19$x544.preheader.us" ]
  %niter1836 = phi i32 [ %niter1836.nsub.3, %"for sum_input.s1.r19$x544.us" ], [ %unroll_iter1835, %"for sum_input.s1.r19$x544.preheader.us" ]
  %sum_input533672.sroa.0.0.vec.extract1014.us = extractelement <32 x i32> %sum_input533672.sroa.0.27.us, i32 0
  %4840 = mul nsw i32 %"sum_input.s1.r19$x546.us", %dilation_x
  %reass.add1108.us = add i32 %5036, %4840
  %reass.mul1109.us = shl i32 %reass.add1108.us, 2
  %4841 = add i32 %t1183.us, %reass.mul1109.us
  %4842 = getelementptr inbounds i8, i8* %13, i32 %4841
  %4843 = bitcast i8* %4842 to <4 x i8>*
  %4844 = load <4 x i8>, <4 x i8>* %4843, align 4, !tbaa !108
  %4845 = zext <4 x i8> %4844 to <4 x i32>
  %4846 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %4845) #9
  %4847 = add nsw i32 %4846, %sum_input533672.sroa.0.0.vec.extract1014.us
  %4848 = or i32 %"sum_input.s1.r19$x546.us", 1
  %4849 = mul nsw i32 %4848, %dilation_x
  %reass.add1108.us.1 = add i32 %5036, %4849
  %reass.mul1109.us.1 = shl i32 %reass.add1108.us.1, 2
  %4850 = add i32 %t1183.us, %reass.mul1109.us.1
  %4851 = getelementptr inbounds i8, i8* %13, i32 %4850
  %4852 = bitcast i8* %4851 to <4 x i8>*
  %4853 = load <4 x i8>, <4 x i8>* %4852, align 4, !tbaa !108
  %4854 = zext <4 x i8> %4853 to <4 x i32>
  %4855 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %4854) #9
  %4856 = add nsw i32 %4855, %4847
  %4857 = or i32 %"sum_input.s1.r19$x546.us", 2
  %4858 = mul nsw i32 %4857, %dilation_x
  %reass.add1108.us.2 = add i32 %5036, %4858
  %reass.mul1109.us.2 = shl i32 %reass.add1108.us.2, 2
  %4859 = add i32 %t1183.us, %reass.mul1109.us.2
  %4860 = getelementptr inbounds i8, i8* %13, i32 %4859
  %4861 = bitcast i8* %4860 to <4 x i8>*
  %4862 = load <4 x i8>, <4 x i8>* %4861, align 4, !tbaa !108
  %4863 = zext <4 x i8> %4862 to <4 x i32>
  %4864 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %4863) #9
  %4865 = add nsw i32 %4864, %4856
  %sum_input533672.sroa.0.0.vec.insert1012.us.2 = insertelement <32 x i32> %sum_input533672.sroa.0.27.us, i32 %4865, i32 0
  %4866 = or i32 %"sum_input.s1.r19$x546.us", 3
  %4867 = mul nsw i32 %4866, %dilation_x
  %reass.add1108.us.3 = add i32 %5036, %4867
  %reass.mul1109.us.3 = shl i32 %reass.add1108.us.3, 2
  %4868 = add i32 %t1183.us, %reass.mul1109.us.3
  %4869 = getelementptr inbounds i8, i8* %13, i32 %4868
  %4870 = bitcast i8* %4869 to <4 x i8>*
  %4871 = load <4 x i8>, <4 x i8>* %4870, align 4, !tbaa !108
  %4872 = zext <4 x i8> %4871 to <4 x i32>
  %4873 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %4872) #9
  %4874 = add nsw i32 %4873, %4865
  %sum_input533672.sroa.0.0.vec.insert1012.us.3 = insertelement <32 x i32> %sum_input533672.sroa.0.0.vec.insert1012.us.2, i32 %4874, i32 0
  %4875 = add nuw nsw i32 %"sum_input.s1.r19$x546.us", 4
  %niter1836.nsub.3 = add i32 %niter1836, -4
  %niter1836.ncmp.3 = icmp eq i32 %niter1836.nsub.3, 0
  br i1 %niter1836.ncmp.3, label %"end for sum_input.s1.r19$x545.us.loopexit.unr-lcssa.loopexit", label %"for sum_input.s1.r19$x544.us"

"end for sum_input.s1.r19$x545.us.loopexit.unr-lcssa.loopexit": ; preds = %"for sum_input.s1.r19$x544.us"
  %sum_input533672.sroa.0.0.vec.insert1012.us.2.le = insertelement <32 x i32> %sum_input533672.sroa.0.27.us, i32 %4865, i32 0
  %sum_input533672.sroa.0.0.vec.insert1012.us.3.le = insertelement <32 x i32> %sum_input533672.sroa.0.0.vec.insert1012.us.2.le, i32 %4874, i32 0
  br label %"end for sum_input.s1.r19$x545.us.loopexit.unr-lcssa"

"end for sum_input.s1.r19$x545.us.loopexit.unr-lcssa": ; preds = %"end for sum_input.s1.r19$x545.us.loopexit.unr-lcssa.loopexit", %"for sum_input.s1.r19$x544.preheader.us"
  %sum_input533672.sroa.0.27.us.lcssa.ph = phi <32 x i32> [ undef, %"for sum_input.s1.r19$x544.preheader.us" ], [ %sum_input533672.sroa.0.0.vec.insert1012.us.2.le, %"end for sum_input.s1.r19$x545.us.loopexit.unr-lcssa.loopexit" ]
  %.lcssa1819.ph = phi i32 [ undef, %"for sum_input.s1.r19$x544.preheader.us" ], [ %4874, %"end for sum_input.s1.r19$x545.us.loopexit.unr-lcssa.loopexit" ]
  %sum_input533672.sroa.0.27.us.unr = phi <32 x i32> [ %sum_input533672.sroa.0.26.us, %"for sum_input.s1.r19$x544.preheader.us" ], [ %sum_input533672.sroa.0.0.vec.insert1012.us.3.le, %"end for sum_input.s1.r19$x545.us.loopexit.unr-lcssa.loopexit" ]
  %"sum_input.s1.r19$x546.us.unr" = phi i32 [ 0, %"for sum_input.s1.r19$x544.preheader.us" ], [ %4875, %"end for sum_input.s1.r19$x545.us.loopexit.unr-lcssa.loopexit" ]
  br i1 %lcmp.mod1832.not, label %"end for sum_input.s1.r19$x545.us.loopexit", label %"for sum_input.s1.r19$x544.us.epil"

"for sum_input.s1.r19$x544.us.epil":              ; preds = %"end for sum_input.s1.r19$x545.us.loopexit.unr-lcssa", %"for sum_input.s1.r19$x544.us.epil"
  %sum_input533672.sroa.0.27.us.epil = phi <32 x i32> [ %sum_input533672.sroa.0.0.vec.insert1012.us.epil, %"for sum_input.s1.r19$x544.us.epil" ], [ %sum_input533672.sroa.0.27.us.unr, %"end for sum_input.s1.r19$x545.us.loopexit.unr-lcssa" ]
  %"sum_input.s1.r19$x546.us.epil" = phi i32 [ %4884, %"for sum_input.s1.r19$x544.us.epil" ], [ %"sum_input.s1.r19$x546.us.unr", %"end for sum_input.s1.r19$x545.us.loopexit.unr-lcssa" ]
  %epil.iter1831 = phi i32 [ %epil.iter1831.sub, %"for sum_input.s1.r19$x544.us.epil" ], [ %xtraiter1830, %"end for sum_input.s1.r19$x545.us.loopexit.unr-lcssa" ]
  %sum_input533672.sroa.0.0.vec.extract1014.us.epil = extractelement <32 x i32> %sum_input533672.sroa.0.27.us.epil, i32 0
  %4876 = mul nsw i32 %"sum_input.s1.r19$x546.us.epil", %dilation_x
  %reass.add1108.us.epil = add i32 %5036, %4876
  %reass.mul1109.us.epil = shl i32 %reass.add1108.us.epil, 2
  %4877 = add i32 %t1183.us, %reass.mul1109.us.epil
  %4878 = getelementptr inbounds i8, i8* %13, i32 %4877
  %4879 = bitcast i8* %4878 to <4 x i8>*
  %4880 = load <4 x i8>, <4 x i8>* %4879, align 4, !tbaa !108
  %4881 = zext <4 x i8> %4880 to <4 x i32>
  %4882 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %4881) #9
  %4883 = add nsw i32 %4882, %sum_input533672.sroa.0.0.vec.extract1014.us.epil
  %sum_input533672.sroa.0.0.vec.insert1012.us.epil = insertelement <32 x i32> %sum_input533672.sroa.0.27.us.epil, i32 %4883, i32 0
  %4884 = add nuw nsw i32 %"sum_input.s1.r19$x546.us.epil", 1
  %epil.iter1831.sub = add i32 %epil.iter1831, -1
  %epil.iter1831.cmp.not = icmp eq i32 %epil.iter1831.sub, 0
  br i1 %epil.iter1831.cmp.not, label %"end for sum_input.s1.r19$x545.us.loopexit", label %"for sum_input.s1.r19$x544.us.epil", !llvm.loop !117

"end for sum_input.s1.r19$x545.us.loopexit":      ; preds = %"for sum_input.s1.r19$x544.us.epil", %"end for sum_input.s1.r19$x545.us.loopexit.unr-lcssa"
  %sum_input533672.sroa.0.27.us.lcssa = phi <32 x i32> [ %sum_input533672.sroa.0.27.us.lcssa.ph, %"end for sum_input.s1.r19$x545.us.loopexit.unr-lcssa" ], [ %sum_input533672.sroa.0.27.us.epil, %"for sum_input.s1.r19$x544.us.epil" ]
  %.lcssa1819 = phi i32 [ %.lcssa1819.ph, %"end for sum_input.s1.r19$x545.us.loopexit.unr-lcssa" ], [ %4883, %"for sum_input.s1.r19$x544.us.epil" ]
  %sum_input533672.sroa.0.0.vec.insert1012.us.le = insertelement <32 x i32> %sum_input533672.sroa.0.27.us.lcssa, i32 %.lcssa1819, i32 0
  br label %"end for sum_input.s1.r19$x545.us"

"end for sum_input.s1.r19$x545.us":               ; preds = %"end for sum_input.s1.r19$x545.us.loopexit", %"for sum_input.s1.r19$y541.us"
  %sum_input533672.sroa.0.28.us = phi <32 x i32> [ %sum_input533672.sroa.0.26.us, %"for sum_input.s1.r19$y541.us" ], [ %sum_input533672.sroa.0.0.vec.insert1012.us.le, %"end for sum_input.s1.r19$x545.us.loopexit" ]
  %4885 = add nuw nsw i32 %"sum_input.s1.r19$y543.us", 1
  %.not692.us = icmp eq i32 %4885, %11
  br i1 %.not692.us, label %"consume sum_input556.us", label %"for sum_input.s1.r19$y541.us"

"consume sum_input556.us":                        ; preds = %"end for sum_input.s1.r19$x551.loopexit.us.us", %"end for sum_input.s1.r19$x545.us", %"for sum_input.s1.r19$y547.preheader.us", %then_bb539.us, %next_bb540.us, %"for output.s0.x.xo530.us"
  %sum_input533672.sroa.0.34.us = phi <32 x i32> [ %sum_input533672.sroa.0.24.us, %"for output.s0.x.xo530.us" ], [ %sum_input533672.sroa.0.0.vec.insert1016.us, %then_bb539.us ], [ %sum_input533672.sroa.0.0.vec.insert1016.us, %next_bb540.us ], [ %sum_input533672.sroa.0.0.vec.insert1016.us, %"for sum_input.s1.r19$y547.preheader.us" ], [ %sum_input533672.sroa.0.28.us, %"end for sum_input.s1.r19$x545.us" ], [ %.us-phi.us.us, %"end for sum_input.s1.r19$x551.loopexit.us.us" ]
  br i1 %4797, label %"for output.s0.c.co557.preheader.us", label %"end for output.s0.c.co558.us", !prof !96

"for output.s0.c.co557.us":                       ; preds = %"for output.s0.c.co557.preheader.us", %"consume convolved576.us"
  %convolved673.sroa.0.40.us = phi <32 x i32> [ %convolved673.sroa.0.48.us, %"consume convolved576.us" ], [ %convolved673.sroa.0.38.us, %"for output.s0.c.co557.preheader.us" ]
  %output.s0.c.co559.us = phi i32 [ %4928, %"consume convolved576.us" ], [ 0, %"for output.s0.c.co557.preheader.us" ]
  %4886 = shl nsw i32 %output.s0.c.co559.us, 5
  %4887 = icmp slt i32 %4886, %4
  br i1 %4887, label %then_bb562.us, label %"consume convolved576.us"

then_bb562.us:                                    ; preds = %"for output.s0.c.co557.us"
  %4888 = getelementptr inbounds i32, i32* %offset_c, i32 %4886
  %4889 = bitcast i32* %4888 to <32 x i32>*
  %4890 = load <32 x i32>, <32 x i32>* %4889, align 128, !tbaa !104
  br i1 %t843.not, label %after_bb564.us, label %next_bb566.us

next_bb566.us:                                    ; preds = %then_bb562.us
  %4891 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %5030, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4892 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %4890, <32 x i32> %4891, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  br label %after_bb564.us

after_bb564.us:                                   ; preds = %then_bb562.us, %next_bb566.us
  %convolved673.sroa.0.42.us = phi <32 x i32> [ %4892, %next_bb566.us ], [ %4890, %then_bb562.us ]
  %4893 = mul nsw i32 %output.s0.c.co559.us, %8
  br i1 %or.cond1754, label %"for convolved.s1.r19$y567.us.us.us", label %"consume convolved576.us", !prof !103

"consume convolved576.us":                        ; preds = %"end for convolved.s1.r19$x571.loopexit.split.us.us.us.us", %after_bb564.us, %"for output.s0.c.co557.us"
  %convolved673.sroa.0.48.us = phi <32 x i32> [ %convolved673.sroa.0.42.us, %after_bb564.us ], [ %convolved673.sroa.0.40.us, %"for output.s0.c.co557.us" ], [ %5149, %"end for convolved.s1.r19$x571.loopexit.split.us.us.us.us" ]
  %4894 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4812, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4895 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4811, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4896 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.0.48.us, <32 x i32> %4895, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4897 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4811, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4898 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4896, <32 x i32> %convolved673.sroa.0.48.us, <32 x i32> %4897, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4899 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4894, <1 x i32> zeroinitializer, <32 x i32> %4898, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4900 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4813, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4901 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4811, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4902 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.0.48.us, <32 x i32> %4901, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4903 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4811, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4904 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4902, <32 x i32> %convolved673.sroa.0.48.us, <32 x i32> %4903, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4905 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4900, <1 x i32> zeroinitializer, <32 x i32> %4904, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4906 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %4905, <32 x i32> %4809, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %4907 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %4899, <64 x i16> %4906, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %4908 = call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.2(<32 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>, <32 x i32> %4907, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4909 = call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.2(<32 x i32> %4908, <32 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4910 = trunc <32 x i32> %4909 to <32 x i16>
  %4911 = shufflevector <32 x i16> %4910, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %4912 = bitcast <64 x i16> %4911 to <32 x i32>
  %4913 = call <32 x i32> @llvm.hexagon.V6.vaddhsat.128B(<32 x i32> %4912, <32 x i32> %4817) #11
  %4914 = call <32 x i32> @llvm.hexagon.V6.vminh.128B(<32 x i32> %4913, <32 x i32> <i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>) #11
  %4915 = call <32 x i32> @llvm.hexagon.V6.vmaxh.128B(<32 x i32> %4914, <32 x i32> zeroinitializer) #11
  %4916 = bitcast <32 x i32> %4915 to <64 x i16>
  %4917 = shufflevector <64 x i16> %4916, <64 x i16> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4918 = trunc <32 x i16> %4917 to <32 x i8>
  %4919 = shufflevector <32 x i8> %4918, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %4920 = bitcast <128 x i8> %4919 to <32 x i32>
  %4921 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %4920, <32 x i32> %4820) #11
  %4922 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %4921, <32 x i32> %4823) #11
  %4923 = bitcast <32 x i32> %4922 to <128 x i8>
  %4924 = shufflevector <128 x i8> %4923, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4925 = add nsw i32 %5034, %4886
  %4926 = getelementptr inbounds i8, i8* %23, i32 %4925
  %4927 = bitcast i8* %4926 to <32 x i8>*
  store <32 x i8> %4924, <32 x i8>* %4927, align 1, !tbaa !111
  %4928 = add nuw nsw i32 %output.s0.c.co559.us, 1
  %.not685.us = icmp eq i32 %4928, %4798
  br i1 %.not685.us, label %"end for output.s0.c.co558.us", label %"for output.s0.c.co557.us"

"end for output.s0.c.co558.us":                   ; preds = %"consume convolved576.us", %"consume sum_input556.us"
  %convolved673.sroa.0.41.us = phi <32 x i32> [ %convolved673.sroa.0.38.us, %"consume sum_input556.us" ], [ %convolved673.sroa.0.48.us, %"consume convolved576.us" ]
  br i1 %4824, label %"for output.s0.c.co.rebased.preheader.us", label %"end for output.s0.c.co.rebased.us", !prof !96

"for output.s0.c.co.rebased.us":                  ; preds = %"for output.s0.c.co.rebased.preheader.us", %after_bb603.us
  %convolved673.sroa.0.49.us = phi <32 x i32> [ %convolved673.sroa.0.57.us, %after_bb603.us ], [ %convolved673.sroa.0.41.us, %"for output.s0.c.co.rebased.preheader.us" ]
  %output.s0.c.co.rebased.us = phi i32 [ %5018, %after_bb603.us ], [ 0, %"for output.s0.c.co.rebased.preheader.us" ]
  %4929 = add nsw i32 %output.s0.c.co.rebased.us, %4798
  %4930 = icmp sgt i32 %4929, %a0
  %4931 = shl nsw i32 %4929, 5
  %4932 = icmp sge i32 %4931, %4
  %.not1676 = or i1 %4930, %4932
  %4933 = add nsw i32 %output.s0.c.co.rebased.us, %a15
  %.not1593 = icmp sgt i32 %4933, %a0
  %or.cond1677 = or i1 %.not1676, %.not1593
  br i1 %or.cond1677, label %"consume convolved602.us", label %then_bb585.us

then_bb585.us:                                    ; preds = %"for output.s0.c.co.rebased.us"
  %4934 = shl nsw i32 %4933, 5
  %4935 = getelementptr inbounds i32, i32* %offset_c, i32 %4934
  %4936 = bitcast i32* %4935 to <32 x i32>*
  %4937 = load <32 x i32>, <32 x i32>* %4936, align 128, !tbaa !104
  br i1 %t843.not, label %after_bb584.us, label %next_bb589.us

next_bb589.us:                                    ; preds = %then_bb585.us
  %4938 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %5024, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4939 = call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %4937, <32 x i32> %4938, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  br label %after_bb584.us

after_bb584.us:                                   ; preds = %then_bb585.us, %next_bb589.us
  %convolved673.sroa.0.51.us = phi <32 x i32> [ %4939, %next_bb589.us ], [ %4937, %then_bb585.us ]
  %4940 = mul nsw i32 %4933, %8
  br i1 %or.cond1753, label %"for convolved.s1.r19$y593.us.us.us", label %"consume convolved602.us", !prof !118

"consume convolved602.us":                        ; preds = %"end for convolved.s1.r19$x597.loopexit.split.us.us.us.us", %after_bb584.us, %"for output.s0.c.co.rebased.us"
  %convolved673.sroa.0.57.us = phi <32 x i32> [ %convolved673.sroa.0.51.us, %after_bb584.us ], [ %convolved673.sroa.0.49.us, %"for output.s0.c.co.rebased.us" ], [ %5173, %"end for convolved.s1.r19$x597.loopexit.split.us.us.us.us" ]
  %4941 = add nsw i32 %4931, 32
  %.not679.us = icmp sgt i32 %4941, %4
  br i1 %.not679.us, label %next_bb605.us, label %then_bb604.us

then_bb604.us:                                    ; preds = %"consume convolved602.us"
  %4942 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4812, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4943 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4811, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4944 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.0.57.us, <32 x i32> %4943, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4945 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4811, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4946 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4944, <32 x i32> %convolved673.sroa.0.57.us, <32 x i32> %4945, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4947 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4942, <1 x i32> zeroinitializer, <32 x i32> %4946, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4948 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4813, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4949 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4811, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4950 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %convolved673.sroa.0.57.us, <32 x i32> %4949, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4951 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4811, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4952 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4950, <32 x i32> %convolved673.sroa.0.57.us, <32 x i32> %4951, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4953 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4948, <1 x i32> zeroinitializer, <32 x i32> %4952, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4954 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %4953, <32 x i32> %4809, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %4955 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %4947, <64 x i16> %4954, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %4956 = call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.2(<32 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>, <32 x i32> %4955, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4957 = call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.2(<32 x i32> %4956, <32 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4958 = trunc <32 x i32> %4957 to <32 x i16>
  %4959 = shufflevector <32 x i16> %4958, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %4960 = bitcast <64 x i16> %4959 to <32 x i32>
  %4961 = call <32 x i32> @llvm.hexagon.V6.vaddhsat.128B(<32 x i32> %4960, <32 x i32> %4817) #11
  %4962 = call <32 x i32> @llvm.hexagon.V6.vminh.128B(<32 x i32> %4961, <32 x i32> <i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>) #11
  %4963 = call <32 x i32> @llvm.hexagon.V6.vmaxh.128B(<32 x i32> %4962, <32 x i32> zeroinitializer) #11
  %4964 = bitcast <32 x i32> %4963 to <64 x i16>
  %4965 = shufflevector <64 x i16> %4964, <64 x i16> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4966 = trunc <32 x i16> %4965 to <32 x i8>
  %4967 = shufflevector <32 x i8> %4966, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %4968 = bitcast <128 x i8> %4967 to <32 x i32>
  %4969 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %4968, <32 x i32> %4820) #11
  %4970 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %4969, <32 x i32> %4823) #11
  %4971 = bitcast <32 x i32> %4970 to <128 x i8>
  %4972 = shufflevector <128 x i8> %4971, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4973 = add nsw i32 %output.s0.c.co.rebased.us, %a15
  %4974 = shl nsw i32 %4973, 5
  %4975 = add nsw i32 %5028, %4974
  %4976 = getelementptr inbounds i8, i8* %23, i32 %4975
  %4977 = bitcast i8* %4976 to <32 x i8>*
  store <32 x i8> %4972, <32 x i8>* %4977, align 1, !tbaa !111
  br label %after_bb603.us

next_bb605.us:                                    ; preds = %"consume convolved602.us"
  %4978 = or i32 %4931, 1
  %4979 = insertelement <32 x i32> undef, i32 %4978, i32 0
  %4980 = shufflevector <32 x i32> %4979, <32 x i32> undef, <32 x i32> zeroinitializer
  %4981 = add nsw <32 x i32> %4980, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4982 = icmp sle <32 x i32> %4981, %4826
  %.not680.us = icmp sgt i32 %4978, %4
  %4983 = select i1 %.not680.us, <32 x i32> zeroinitializer, <32 x i32> %convolved673.sroa.0.57.us
  %4984 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4812, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4985 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4811, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4986 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %4983, <32 x i32> %4985, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4987 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4811, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4988 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4986, <32 x i32> %4983, <32 x i32> %4987, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4989 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4984, <1 x i32> zeroinitializer, <32 x i32> %4988, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4990 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4813, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4991 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4811, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4992 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %4983, <32 x i32> %4991, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0) #11
  %4993 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %4811, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %4994 = call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %4992, <32 x i32> %4983, <32 x i32> %4993, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0) #11
  %4995 = call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %4990, <1 x i32> zeroinitializer, <32 x i32> %4994, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4996 = call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %4995, <32 x i32> %4809, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0) #11
  %4997 = call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %4989, <64 x i16> %4996, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0) #11
  %4998 = call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.2(<32 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>, <32 x i32> %4997, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %4999 = call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.2(<32 x i32> %4998, <32 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0) #11
  %5000 = trunc <32 x i32> %4999 to <32 x i16>
  %5001 = shufflevector <32 x i16> %5000, <32 x i16> undef, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %5002 = bitcast <64 x i16> %5001 to <32 x i32>
  %5003 = call <32 x i32> @llvm.hexagon.V6.vaddhsat.128B(<32 x i32> %5002, <32 x i32> %4817) #11
  %5004 = call <32 x i32> @llvm.hexagon.V6.vminh.128B(<32 x i32> %5003, <32 x i32> <i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 16711935, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>) #11
  %5005 = call <32 x i32> @llvm.hexagon.V6.vmaxh.128B(<32 x i32> %5004, <32 x i32> zeroinitializer) #11
  %5006 = bitcast <32 x i32> %5005 to <64 x i16>
  %5007 = shufflevector <64 x i16> %5006, <64 x i16> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5008 = trunc <32 x i16> %5007 to <32 x i8>
  %5009 = shufflevector <32 x i8> %5008, <32 x i8> undef, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %5010 = bitcast <128 x i8> %5009 to <32 x i32>
  %5011 = call <32 x i32> @llvm.hexagon.V6.vminub.128B(<32 x i32> %5010, <32 x i32> %4820) #11
  %5012 = call <32 x i32> @llvm.hexagon.V6.vmaxub.128B(<32 x i32> %5011, <32 x i32> %4823) #11
  %5013 = bitcast <32 x i32> %5012 to <128 x i8>
  %5014 = shufflevector <128 x i8> %5013, <128 x i8> undef, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5015 = add nsw i32 %5028, %4931
  %5016 = getelementptr inbounds i8, i8* %23, i32 %5015
  %5017 = bitcast i8* %5016 to <32 x i8>*
  call void @llvm.masked.store.v32i8.p0v32i8(<32 x i8> %5014, <32 x i8>* %5017, i32 1, <32 x i1> %4982), !tbaa !111
  br label %after_bb603.us

after_bb603.us:                                   ; preds = %next_bb605.us, %then_bb604.us
  %5018 = add nuw nsw i32 %output.s0.c.co.rebased.us, 1
  %.not681.us = icmp eq i32 %5018, %t1167
  br i1 %.not681.us, label %"end for output.s0.c.co.rebased.us", label %"for output.s0.c.co.rebased.us"

"end for output.s0.c.co.rebased.us":              ; preds = %after_bb603.us, %"end for output.s0.c.co558.us"
  %convolved673.sroa.0.50.us = phi <32 x i32> [ %convolved673.sroa.0.41.us, %"end for output.s0.c.co558.us" ], [ %convolved673.sroa.0.57.us, %after_bb603.us ]
  %5019 = add nuw nsw i32 %output.s0.x.xo532.us, 1
  %.not678.us = icmp eq i32 %5019, %26
  br i1 %.not678.us, label %"end for output.s0.x.xo531.loopexit.us", label %"for output.s0.x.xo530.us"

"for sum_input.s1.r19$x544.preheader.us":         ; preds = %"for sum_input.s1.r19$y541.us"
  %5020 = mul nsw i32 %"sum_input.s1.r19$y543.us", %dilation_y
  %5021 = add nsw i32 %5020, %4839
  %5022 = mul nsw i32 %5021, %19
  %t1183.us = add i32 %4836, %5022
  br i1 %4830, label %"end for sum_input.s1.r19$x545.us.loopexit.unr-lcssa", label %"for sum_input.s1.r19$x544.us"

"for output.s0.c.co.rebased.preheader.us":        ; preds = %"end for output.s0.c.co558.us"
  %sum_input533672.sroa.0.0.vec.extract1005.us = extractelement <32 x i32> %sum_input533672.sroa.0.34.us, i32 0
  %5023 = mul nsw i32 %sum_input533672.sroa.0.0.vec.extract1005.us, %168
  %5024 = insertelement <1 x i32> poison, i32 %5023, i32 0
  %5025 = add nsw i32 %output.s0.x.xo532.us, %25
  %5026 = mul nsw i32 %5025, %stride_x
  %5027 = mul nsw i32 %5025, %27
  %5028 = add nsw i32 %5027, %t1180.us
  br label %"for output.s0.c.co.rebased.us"

"for output.s0.c.co557.preheader.us":             ; preds = %"consume sum_input556.us"
  %sum_input533672.sroa.0.0.vec.extract1007.us = extractelement <32 x i32> %sum_input533672.sroa.0.34.us, i32 0
  %5029 = mul nsw i32 %sum_input533672.sroa.0.0.vec.extract1007.us, %168
  %5030 = insertelement <1 x i32> poison, i32 %5029, i32 0
  %5031 = add nsw i32 %output.s0.x.xo532.us, %25
  %5032 = mul nsw i32 %5031, %stride_x
  %5033 = mul nsw i32 %5031, %27
  %5034 = add nsw i32 %5033, %t1180.us
  br label %"for output.s0.c.co557.us"

"for sum_input.s1.r19$y541.preheader.us":         ; preds = %then_bb539.us
  %5035 = add nsw i32 %output.s0.x.xo532.us, %25
  %5036 = sub i32 %5035, %16
  br label %"for sum_input.s1.r19$y541.us"

"for sum_input.s1.r19$y547.preheader.us":         ; preds = %next_bb540.us
  %5037 = add nsw i32 %output.s0.x.xo532.us, %25
  %5038 = mul nsw i32 %5037, %stride_x
  br i1 %4806, label %"for sum_input.s1.r19$y547.us.us", label %"consume sum_input556.us", !prof !96

"end for output.s0.x.xo531.loopexit.us":          ; preds = %"end for output.s0.c.co.rebased.us"
  %5039 = add nuw nsw i32 %output.s0.y.rebased529.us, 1
  %.not677.us = icmp eq i32 %5039, %29
  br i1 %.not677.us, label %"end for output.s0.y.rebased528", label %"for output.s0.y.rebased527.us"

"for sum_input.s1.r19$y547.us.us":                ; preds = %"for sum_input.s1.r19$y547.preheader.us", %"end for sum_input.s1.r19$x551.loopexit.us.us"
  %sum_input533672.sroa.0.29.us.us = phi <32 x i32> [ %.us-phi.us.us, %"end for sum_input.s1.r19$x551.loopexit.us.us" ], [ %sum_input533672.sroa.0.0.vec.insert1016.us, %"for sum_input.s1.r19$y547.preheader.us" ]
  %"sum_input.s1.r19$y549.us.us" = phi i32 [ %5043, %"end for sum_input.s1.r19$x551.loopexit.us.us" ], [ 0, %"for sum_input.s1.r19$y547.preheader.us" ]
  %5040 = mul nsw i32 %"sum_input.s1.r19$y549.us.us", %dilation_y
  %5041 = add nsw i32 %5040, %4839
  %5042 = mul nsw i32 %5041, %19
  %t1185.us.us = add nsw i32 %4835, %5042
  br i1 %4807, label %"for sum_input.s1.r19$x550.us.us.us", label %"end for sum_input.s1.r19$x551.loopexit.us.us", !prof !96

"end for sum_input.s1.r19$x551.loopexit.us.us.loopexit": ; preds = %"end for sum_input.s1.r19$z.r124554.loopexit.us.us.us"
  %sum_input533672.sroa.0.0.vec.insert.us.us.us.le.le = insertelement <32 x i32> %sum_input533672.sroa.0.32.us.us.us.lcssa, i32 %.lcssa1818, i32 0
  br label %"end for sum_input.s1.r19$x551.loopexit.us.us"

"end for sum_input.s1.r19$x551.loopexit.us.us":   ; preds = %"end for sum_input.s1.r19$x551.loopexit.us.us.loopexit", %"for sum_input.s1.r19$y547.us.us"
  %.us-phi.us.us = phi <32 x i32> [ %sum_input533672.sroa.0.29.us.us, %"for sum_input.s1.r19$y547.us.us" ], [ %sum_input533672.sroa.0.0.vec.insert.us.us.us.le.le, %"end for sum_input.s1.r19$x551.loopexit.us.us.loopexit" ]
  %5043 = add nuw nsw i32 %"sum_input.s1.r19$y549.us.us", 1
  %.not689.us.us = icmp eq i32 %5043, %11
  br i1 %.not689.us.us, label %"consume sum_input556.us", label %"for sum_input.s1.r19$y547.us.us"

"for sum_input.s1.r19$x550.us.us.us":             ; preds = %"for sum_input.s1.r19$y547.us.us", %"end for sum_input.s1.r19$z.r124554.loopexit.us.us.us"
  %sum_input533672.sroa.0.30.us.us.us = phi <32 x i32> [ %sum_input533672.sroa.0.0.vec.insert.us.us.us.le, %"end for sum_input.s1.r19$z.r124554.loopexit.us.us.us" ], [ %sum_input533672.sroa.0.29.us.us, %"for sum_input.s1.r19$y547.us.us" ]
  %"sum_input.s1.r19$x552.us.us.us" = phi i32 [ %5128, %"end for sum_input.s1.r19$z.r124554.loopexit.us.us.us" ], [ 0, %"for sum_input.s1.r19$y547.us.us" ]
  %5044 = mul nsw i32 %"sum_input.s1.r19$x552.us.us.us", %dilation_x
  %t1186.s.us.us.us = add nsw i32 %5044, %5038
  %5045 = mul nsw i32 %t1186.s.us.us.us, %17
  %5046 = add nsw i32 %t1185.us.us, %5045
  br i1 %4829, label %"end for sum_input.s1.r19$z.r124554.loopexit.us.us.us.unr-lcssa", label %"for sum_input.s1.r19$z.r124553.us.us.us"

"for sum_input.s1.r19$z.r124553.us.us.us":        ; preds = %"for sum_input.s1.r19$x550.us.us.us", %"for sum_input.s1.r19$z.r124553.us.us.us"
  %sum_input533672.sroa.0.32.us.us.us = phi <32 x i32> [ %sum_input533672.sroa.0.0.vec.insert.us.us.us.7, %"for sum_input.s1.r19$z.r124553.us.us.us" ], [ %sum_input533672.sroa.0.30.us.us.us, %"for sum_input.s1.r19$x550.us.us.us" ]
  %"sum_input.s1.r19$z.r124555.us.us.us" = phi i32 [ %5118, %"for sum_input.s1.r19$z.r124553.us.us.us" ], [ 0, %"for sum_input.s1.r19$x550.us.us.us" ]
  %niter1829 = phi i32 [ %niter1829.nsub.7, %"for sum_input.s1.r19$z.r124553.us.us.us" ], [ %unroll_iter1828, %"for sum_input.s1.r19$x550.us.us.us" ]
  %sum_input533672.sroa.0.0.vec.extract1010.us.us.us = extractelement <32 x i32> %sum_input533672.sroa.0.32.us.us.us, i32 0
  %5047 = shl nsw i32 %"sum_input.s1.r19$z.r124555.us.us.us", 2
  %5048 = add nsw i32 %5046, %5047
  %5049 = getelementptr inbounds i8, i8* %13, i32 %5048
  %5050 = bitcast i8* %5049 to <4 x i8>*
  %5051 = load <4 x i8>, <4 x i8>* %5050, align 4, !tbaa !108
  %5052 = zext <4 x i8> %5051 to <4 x i32>
  %5053 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %5052) #9
  %5054 = add nsw i32 %5053, %sum_input533672.sroa.0.0.vec.extract1010.us.us.us
  %5055 = shl i32 %"sum_input.s1.r19$z.r124555.us.us.us", 2
  %5056 = or i32 %5055, 4
  %5057 = add nsw i32 %5046, %5056
  %5058 = getelementptr inbounds i8, i8* %13, i32 %5057
  %5059 = bitcast i8* %5058 to <4 x i8>*
  %5060 = load <4 x i8>, <4 x i8>* %5059, align 4, !tbaa !108
  %5061 = zext <4 x i8> %5060 to <4 x i32>
  %5062 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %5061) #9
  %5063 = add nsw i32 %5062, %5054
  %5064 = shl i32 %"sum_input.s1.r19$z.r124555.us.us.us", 2
  %5065 = or i32 %5064, 8
  %5066 = add nsw i32 %5046, %5065
  %5067 = getelementptr inbounds i8, i8* %13, i32 %5066
  %5068 = bitcast i8* %5067 to <4 x i8>*
  %5069 = load <4 x i8>, <4 x i8>* %5068, align 4, !tbaa !108
  %5070 = zext <4 x i8> %5069 to <4 x i32>
  %5071 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %5070) #9
  %5072 = add nsw i32 %5071, %5063
  %5073 = shl i32 %"sum_input.s1.r19$z.r124555.us.us.us", 2
  %5074 = or i32 %5073, 12
  %5075 = add nsw i32 %5046, %5074
  %5076 = getelementptr inbounds i8, i8* %13, i32 %5075
  %5077 = bitcast i8* %5076 to <4 x i8>*
  %5078 = load <4 x i8>, <4 x i8>* %5077, align 4, !tbaa !108
  %5079 = zext <4 x i8> %5078 to <4 x i32>
  %5080 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %5079) #9
  %5081 = add nsw i32 %5080, %5072
  %5082 = shl i32 %"sum_input.s1.r19$z.r124555.us.us.us", 2
  %5083 = or i32 %5082, 16
  %5084 = add nsw i32 %5046, %5083
  %5085 = getelementptr inbounds i8, i8* %13, i32 %5084
  %5086 = bitcast i8* %5085 to <4 x i8>*
  %5087 = load <4 x i8>, <4 x i8>* %5086, align 4, !tbaa !108
  %5088 = zext <4 x i8> %5087 to <4 x i32>
  %5089 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %5088) #9
  %5090 = add nsw i32 %5089, %5081
  %5091 = shl i32 %"sum_input.s1.r19$z.r124555.us.us.us", 2
  %5092 = or i32 %5091, 20
  %5093 = add nsw i32 %5046, %5092
  %5094 = getelementptr inbounds i8, i8* %13, i32 %5093
  %5095 = bitcast i8* %5094 to <4 x i8>*
  %5096 = load <4 x i8>, <4 x i8>* %5095, align 4, !tbaa !108
  %5097 = zext <4 x i8> %5096 to <4 x i32>
  %5098 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %5097) #9
  %5099 = add nsw i32 %5098, %5090
  %5100 = shl i32 %"sum_input.s1.r19$z.r124555.us.us.us", 2
  %5101 = or i32 %5100, 24
  %5102 = add nsw i32 %5046, %5101
  %5103 = getelementptr inbounds i8, i8* %13, i32 %5102
  %5104 = bitcast i8* %5103 to <4 x i8>*
  %5105 = load <4 x i8>, <4 x i8>* %5104, align 4, !tbaa !108
  %5106 = zext <4 x i8> %5105 to <4 x i32>
  %5107 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %5106) #9
  %5108 = add nsw i32 %5107, %5099
  %sum_input533672.sroa.0.0.vec.insert.us.us.us.6 = insertelement <32 x i32> %sum_input533672.sroa.0.32.us.us.us, i32 %5108, i32 0
  %5109 = shl i32 %"sum_input.s1.r19$z.r124555.us.us.us", 2
  %5110 = or i32 %5109, 28
  %5111 = add nsw i32 %5046, %5110
  %5112 = getelementptr inbounds i8, i8* %13, i32 %5111
  %5113 = bitcast i8* %5112 to <4 x i8>*
  %5114 = load <4 x i8>, <4 x i8>* %5113, align 4, !tbaa !108
  %5115 = zext <4 x i8> %5114 to <4 x i32>
  %5116 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %5115) #9
  %5117 = add nsw i32 %5116, %5108
  %sum_input533672.sroa.0.0.vec.insert.us.us.us.7 = insertelement <32 x i32> %sum_input533672.sroa.0.0.vec.insert.us.us.us.6, i32 %5117, i32 0
  %5118 = add nuw nsw i32 %"sum_input.s1.r19$z.r124555.us.us.us", 8
  %niter1829.nsub.7 = add i32 %niter1829, -8
  %niter1829.ncmp.7 = icmp eq i32 %niter1829.nsub.7, 0
  br i1 %niter1829.ncmp.7, label %"end for sum_input.s1.r19$z.r124554.loopexit.us.us.us.unr-lcssa.loopexit", label %"for sum_input.s1.r19$z.r124553.us.us.us"

"end for sum_input.s1.r19$z.r124554.loopexit.us.us.us.unr-lcssa.loopexit": ; preds = %"for sum_input.s1.r19$z.r124553.us.us.us"
  %sum_input533672.sroa.0.0.vec.insert.us.us.us.6.le = insertelement <32 x i32> %sum_input533672.sroa.0.32.us.us.us, i32 %5108, i32 0
  %sum_input533672.sroa.0.0.vec.insert.us.us.us.7.le = insertelement <32 x i32> %sum_input533672.sroa.0.0.vec.insert.us.us.us.6.le, i32 %5117, i32 0
  br label %"end for sum_input.s1.r19$z.r124554.loopexit.us.us.us.unr-lcssa"

"end for sum_input.s1.r19$z.r124554.loopexit.us.us.us.unr-lcssa": ; preds = %"end for sum_input.s1.r19$z.r124554.loopexit.us.us.us.unr-lcssa.loopexit", %"for sum_input.s1.r19$x550.us.us.us"
  %sum_input533672.sroa.0.32.us.us.us.lcssa.ph = phi <32 x i32> [ undef, %"for sum_input.s1.r19$x550.us.us.us" ], [ %sum_input533672.sroa.0.0.vec.insert.us.us.us.6.le, %"end for sum_input.s1.r19$z.r124554.loopexit.us.us.us.unr-lcssa.loopexit" ]
  %.lcssa1818.ph = phi i32 [ undef, %"for sum_input.s1.r19$x550.us.us.us" ], [ %5117, %"end for sum_input.s1.r19$z.r124554.loopexit.us.us.us.unr-lcssa.loopexit" ]
  %sum_input533672.sroa.0.32.us.us.us.unr = phi <32 x i32> [ %sum_input533672.sroa.0.30.us.us.us, %"for sum_input.s1.r19$x550.us.us.us" ], [ %sum_input533672.sroa.0.0.vec.insert.us.us.us.7.le, %"end for sum_input.s1.r19$z.r124554.loopexit.us.us.us.unr-lcssa.loopexit" ]
  %"sum_input.s1.r19$z.r124555.us.us.us.unr" = phi i32 [ 0, %"for sum_input.s1.r19$x550.us.us.us" ], [ %5118, %"end for sum_input.s1.r19$z.r124554.loopexit.us.us.us.unr-lcssa.loopexit" ]
  br i1 %lcmp.mod1825.not, label %"end for sum_input.s1.r19$z.r124554.loopexit.us.us.us", label %"for sum_input.s1.r19$z.r124553.us.us.us.epil"

"for sum_input.s1.r19$z.r124553.us.us.us.epil":   ; preds = %"end for sum_input.s1.r19$z.r124554.loopexit.us.us.us.unr-lcssa", %"for sum_input.s1.r19$z.r124553.us.us.us.epil"
  %sum_input533672.sroa.0.32.us.us.us.epil = phi <32 x i32> [ %sum_input533672.sroa.0.0.vec.insert.us.us.us.epil, %"for sum_input.s1.r19$z.r124553.us.us.us.epil" ], [ %sum_input533672.sroa.0.32.us.us.us.unr, %"end for sum_input.s1.r19$z.r124554.loopexit.us.us.us.unr-lcssa" ]
  %"sum_input.s1.r19$z.r124555.us.us.us.epil" = phi i32 [ %5127, %"for sum_input.s1.r19$z.r124553.us.us.us.epil" ], [ %"sum_input.s1.r19$z.r124555.us.us.us.unr", %"end for sum_input.s1.r19$z.r124554.loopexit.us.us.us.unr-lcssa" ]
  %epil.iter1824 = phi i32 [ %epil.iter1824.sub, %"for sum_input.s1.r19$z.r124553.us.us.us.epil" ], [ %xtraiter1823, %"end for sum_input.s1.r19$z.r124554.loopexit.us.us.us.unr-lcssa" ]
  %sum_input533672.sroa.0.0.vec.extract1010.us.us.us.epil = extractelement <32 x i32> %sum_input533672.sroa.0.32.us.us.us.epil, i32 0
  %5119 = shl nsw i32 %"sum_input.s1.r19$z.r124555.us.us.us.epil", 2
  %5120 = add nsw i32 %5046, %5119
  %5121 = getelementptr inbounds i8, i8* %13, i32 %5120
  %5122 = bitcast i8* %5121 to <4 x i8>*
  %5123 = load <4 x i8>, <4 x i8>* %5122, align 4, !tbaa !108
  %5124 = zext <4 x i8> %5123 to <4 x i32>
  %5125 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %5124) #9
  %5126 = add nsw i32 %5125, %sum_input533672.sroa.0.0.vec.extract1010.us.us.us.epil
  %sum_input533672.sroa.0.0.vec.insert.us.us.us.epil = insertelement <32 x i32> %sum_input533672.sroa.0.32.us.us.us.epil, i32 %5126, i32 0
  %5127 = add nuw nsw i32 %"sum_input.s1.r19$z.r124555.us.us.us.epil", 1
  %epil.iter1824.sub = add i32 %epil.iter1824, -1
  %epil.iter1824.cmp.not = icmp eq i32 %epil.iter1824.sub, 0
  br i1 %epil.iter1824.cmp.not, label %"end for sum_input.s1.r19$z.r124554.loopexit.us.us.us", label %"for sum_input.s1.r19$z.r124553.us.us.us.epil", !llvm.loop !119

"end for sum_input.s1.r19$z.r124554.loopexit.us.us.us": ; preds = %"for sum_input.s1.r19$z.r124553.us.us.us.epil", %"end for sum_input.s1.r19$z.r124554.loopexit.us.us.us.unr-lcssa"
  %sum_input533672.sroa.0.32.us.us.us.lcssa = phi <32 x i32> [ %sum_input533672.sroa.0.32.us.us.us.lcssa.ph, %"end for sum_input.s1.r19$z.r124554.loopexit.us.us.us.unr-lcssa" ], [ %sum_input533672.sroa.0.32.us.us.us.epil, %"for sum_input.s1.r19$z.r124553.us.us.us.epil" ]
  %.lcssa1818 = phi i32 [ %.lcssa1818.ph, %"end for sum_input.s1.r19$z.r124554.loopexit.us.us.us.unr-lcssa" ], [ %5126, %"for sum_input.s1.r19$z.r124553.us.us.us.epil" ]
  %sum_input533672.sroa.0.0.vec.insert.us.us.us.le = insertelement <32 x i32> %sum_input533672.sroa.0.32.us.us.us.lcssa, i32 %.lcssa1818, i32 0
  %5128 = add nuw nsw i32 %"sum_input.s1.r19$x552.us.us.us", 1
  %.not690.us.us.us = icmp eq i32 %5128, %9
  br i1 %.not690.us.us.us, label %"end for sum_input.s1.r19$x551.loopexit.us.us.loopexit", label %"for sum_input.s1.r19$x550.us.us.us"

"for convolved.s1.r19$y567.us.us.us":             ; preds = %after_bb564.us, %"end for convolved.s1.r19$x571.loopexit.split.us.us.us.us"
  %convolved673.sroa.0.43.us.us.us = phi <32 x i32> [ %5149, %"end for convolved.s1.r19$x571.loopexit.split.us.us.us.us" ], [ %convolved673.sroa.0.42.us, %after_bb564.us ]
  %"convolved.s1.r19$y569.us.us.us" = phi i32 [ %5152, %"end for convolved.s1.r19$x571.loopexit.split.us.us.us.us" ], [ 0, %after_bb564.us ]
  %5129 = mul nsw i32 %"convolved.s1.r19$y569.us.us.us", %dilation_y
  %5130 = add nsw i32 %5129, %4839
  %5131 = mul nsw i32 %5130, %19
  %t1191.us.us.us = add nsw i32 %4835, %5131
  %5132 = mul nsw i32 %"convolved.s1.r19$y569.us.us.us", %12
  %t1192.us.us.us = add nsw i32 %5132, %4893
  br label %"for convolved.s1.r19$x570.us.us.us.us"

"for convolved.s1.r19$x570.us.us.us.us":          ; preds = %"end for convolved.s1.r19$z.r124574.loopexit.us.us.us.us", %"for convolved.s1.r19$y567.us.us.us"
  %convolved673.sroa.0.44.us.us.us.us = phi <32 x i32> [ %5149, %"end for convolved.s1.r19$z.r124574.loopexit.us.us.us.us" ], [ %convolved673.sroa.0.43.us.us.us, %"for convolved.s1.r19$y567.us.us.us" ]
  %"convolved.s1.r19$x572.us.us.us.us" = phi i32 [ %5151, %"end for convolved.s1.r19$z.r124574.loopexit.us.us.us.us" ], [ 0, %"for convolved.s1.r19$y567.us.us.us" ]
  %5133 = mul nsw i32 %"convolved.s1.r19$x572.us.us.us.us", %dilation_x
  %t1193.s.us.us.us.us = add nsw i32 %5133, %5032
  %5134 = mul nsw i32 %t1193.s.us.us.us.us, %17
  %5135 = add nsw i32 %t1191.us.us.us, %5134
  %5136 = mul nsw i32 %"convolved.s1.r19$x572.us.us.us.us", %10
  %5137 = add nsw i32 %t1192.us.us.us, %5136
  br label %"for convolved.s1.r19$z.r124573.us.us.us.us"

"for convolved.s1.r19$z.r124573.us.us.us.us":     ; preds = %"for convolved.s1.r19$z.r124573.us.us.us.us", %"for convolved.s1.r19$x570.us.us.us.us"
  %convolved673.sroa.0.46.us.us.us.us = phi <32 x i32> [ %5149, %"for convolved.s1.r19$z.r124573.us.us.us.us" ], [ %convolved673.sroa.0.44.us.us.us.us, %"for convolved.s1.r19$x570.us.us.us.us" ]
  %"convolved.s1.r19$z.r124575.us.us.us.us" = phi i32 [ %5150, %"for convolved.s1.r19$z.r124573.us.us.us.us" ], [ 0, %"for convolved.s1.r19$x570.us.us.us.us" ]
  %5138 = shl nsw i32 %"convolved.s1.r19$z.r124575.us.us.us.us", 2
  %5139 = add nsw i32 %5135, %5138
  %5140 = getelementptr inbounds i8, i8* %13, i32 %5139
  %5141 = bitcast i8* %5140 to <4 x i8>*
  %5142 = load <4 x i8>, <4 x i8>* %5141, align 4, !tbaa !108
  %5143 = shl nsw i32 %"convolved.s1.r19$z.r124575.us.us.us.us", 7
  %5144 = add nsw i32 %5137, %5143
  %5145 = getelementptr inbounds i8, i8* %5, i32 %5144
  %5146 = bitcast i8* %5145 to <128 x i8>*
  %5147 = load <128 x i8>, <128 x i8>* %5146, align 128, !tbaa !106
  %5148 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %5142, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %5149 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.0.46.us.us.us.us, <128 x i8> %5147, <32 x i32> %5148, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %5150 = add nuw nsw i32 %"convolved.s1.r19$z.r124575.us.us.us.us", 1
  %.not688.us.us.us.us = icmp eq i32 %5150, %7
  br i1 %.not688.us.us.us.us, label %"end for convolved.s1.r19$z.r124574.loopexit.us.us.us.us", label %"for convolved.s1.r19$z.r124573.us.us.us.us"

"end for convolved.s1.r19$z.r124574.loopexit.us.us.us.us": ; preds = %"for convolved.s1.r19$z.r124573.us.us.us.us"
  %5151 = add nuw nsw i32 %"convolved.s1.r19$x572.us.us.us.us", 1
  %.not687.us.us.us.us = icmp eq i32 %5151, %9
  br i1 %.not687.us.us.us.us, label %"end for convolved.s1.r19$x571.loopexit.split.us.us.us.us", label %"for convolved.s1.r19$x570.us.us.us.us"

"end for convolved.s1.r19$x571.loopexit.split.us.us.us.us": ; preds = %"end for convolved.s1.r19$z.r124574.loopexit.us.us.us.us"
  %5152 = add nuw nsw i32 %"convolved.s1.r19$y569.us.us.us", 1
  %.not686.us.us.us = icmp eq i32 %5152, %11
  br i1 %.not686.us.us.us, label %"consume convolved576.us", label %"for convolved.s1.r19$y567.us.us.us"

"for convolved.s1.r19$y593.us.us.us":             ; preds = %after_bb584.us, %"end for convolved.s1.r19$x597.loopexit.split.us.us.us.us"
  %convolved673.sroa.0.52.us.us.us = phi <32 x i32> [ %5173, %"end for convolved.s1.r19$x597.loopexit.split.us.us.us.us" ], [ %convolved673.sroa.0.51.us, %after_bb584.us ]
  %"convolved.s1.r19$y595.us.us.us" = phi i32 [ %5176, %"end for convolved.s1.r19$x597.loopexit.split.us.us.us.us" ], [ 0, %after_bb584.us ]
  %5153 = mul nsw i32 %"convolved.s1.r19$y595.us.us.us", %dilation_y
  %5154 = add nsw i32 %5153, %4839
  %5155 = mul nsw i32 %5154, %19
  %t1201.us.us.us = add nsw i32 %4835, %5155
  %5156 = mul nsw i32 %"convolved.s1.r19$y595.us.us.us", %12
  %t1202.us.us.us = add nsw i32 %5156, %4940
  br label %"for convolved.s1.r19$x596.us.us.us.us"

"for convolved.s1.r19$x596.us.us.us.us":          ; preds = %"end for convolved.s1.r19$z.r124600.loopexit.us.us.us.us", %"for convolved.s1.r19$y593.us.us.us"
  %convolved673.sroa.0.53.us.us.us.us = phi <32 x i32> [ %5173, %"end for convolved.s1.r19$z.r124600.loopexit.us.us.us.us" ], [ %convolved673.sroa.0.52.us.us.us, %"for convolved.s1.r19$y593.us.us.us" ]
  %"convolved.s1.r19$x598.us.us.us.us" = phi i32 [ %5175, %"end for convolved.s1.r19$z.r124600.loopexit.us.us.us.us" ], [ 0, %"for convolved.s1.r19$y593.us.us.us" ]
  %5157 = mul nsw i32 %"convolved.s1.r19$x598.us.us.us.us", %dilation_x
  %t1203.s.us.us.us.us = add nsw i32 %5157, %5026
  %5158 = mul nsw i32 %t1203.s.us.us.us.us, %17
  %5159 = add nsw i32 %t1201.us.us.us, %5158
  %5160 = mul nsw i32 %"convolved.s1.r19$x598.us.us.us.us", %10
  %5161 = add nsw i32 %t1202.us.us.us, %5160
  br label %"for convolved.s1.r19$z.r124599.us.us.us.us"

"for convolved.s1.r19$z.r124599.us.us.us.us":     ; preds = %"for convolved.s1.r19$z.r124599.us.us.us.us", %"for convolved.s1.r19$x596.us.us.us.us"
  %convolved673.sroa.0.55.us.us.us.us = phi <32 x i32> [ %5173, %"for convolved.s1.r19$z.r124599.us.us.us.us" ], [ %convolved673.sroa.0.53.us.us.us.us, %"for convolved.s1.r19$x596.us.us.us.us" ]
  %"convolved.s1.r19$z.r124601.us.us.us.us" = phi i32 [ %5174, %"for convolved.s1.r19$z.r124599.us.us.us.us" ], [ 0, %"for convolved.s1.r19$x596.us.us.us.us" ]
  %5162 = shl nsw i32 %"convolved.s1.r19$z.r124601.us.us.us.us", 2
  %5163 = add nsw i32 %5159, %5162
  %5164 = getelementptr inbounds i8, i8* %13, i32 %5163
  %5165 = bitcast i8* %5164 to <4 x i8>*
  %5166 = load <4 x i8>, <4 x i8>* %5165, align 4, !tbaa !108
  %5167 = shl nsw i32 %"convolved.s1.r19$z.r124601.us.us.us.us", 7
  %5168 = add nsw i32 %5161, %5167
  %5169 = getelementptr inbounds i8, i8* %5, i32 %5168
  %5170 = bitcast i8* %5169 to <128 x i8>*
  %5171 = load <128 x i8>, <128 x i8>* %5170, align 128, !tbaa !106
  %5172 = call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %5166, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0) #11
  %5173 = call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %convolved673.sroa.0.55.us.us.us.us, <128 x i8> %5171, <32 x i32> %5172, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0) #11
  %5174 = add nuw nsw i32 %"convolved.s1.r19$z.r124601.us.us.us.us", 1
  %.not684.us.us.us.us = icmp eq i32 %5174, %7
  br i1 %.not684.us.us.us.us, label %"end for convolved.s1.r19$z.r124600.loopexit.us.us.us.us", label %"for convolved.s1.r19$z.r124599.us.us.us.us"

"end for convolved.s1.r19$z.r124600.loopexit.us.us.us.us": ; preds = %"for convolved.s1.r19$z.r124599.us.us.us.us"
  %5175 = add nuw nsw i32 %"convolved.s1.r19$x598.us.us.us.us", 1
  %.not683.us.us.us.us = icmp eq i32 %5175, %9
  br i1 %.not683.us.us.us.us, label %"end for convolved.s1.r19$x597.loopexit.split.us.us.us.us", label %"for convolved.s1.r19$x596.us.us.us.us"

"end for convolved.s1.r19$x597.loopexit.split.us.us.us.us": ; preds = %"end for convolved.s1.r19$z.r124600.loopexit.us.us.us.us"
  %5176 = add nuw nsw i32 %"convolved.s1.r19$y595.us.us.us", 1
  %.not682.us.us.us = icmp eq i32 %5176, %11
  br i1 %.not682.us.us.us, label %"consume convolved602.us", label %"for convolved.s1.r19$y593.us.us.us"

"end for output.s0.y.rebased528":                 ; preds = %"end for output.s0.x.xo531.loopexit.us", %"for output.s0.y.rebased527.preheader", %"for output.s0.b.rebased524"
  %sum_input533672.sroa.0.23 = phi <32 x i32> [ %sum_input533672.sroa.0.21, %"for output.s0.b.rebased524" ], [ %sum_input533672.sroa.0.21, %"for output.s0.y.rebased527.preheader" ], [ %sum_input533672.sroa.0.34.us, %"end for output.s0.x.xo531.loopexit.us" ]
  %convolved673.sroa.0.37 = phi <32 x i32> [ %convolved673.sroa.0.35, %"for output.s0.b.rebased524" ], [ %convolved673.sroa.0.35, %"for output.s0.y.rebased527.preheader" ], [ %convolved673.sroa.0.50.us, %"end for output.s0.x.xo531.loopexit.us" ]
  %5177 = add nuw nsw i32 %output.s0.b.rebased526, 1
  %.not676 = icmp eq i32 %5177, %21
  br i1 %.not676, label %after_bb3, label %"for output.s0.b.rebased524"
}

; Function Attrs: nounwind
define i32 @conv_nn_hvx128_argv(i8** nocapture readonly %0) local_unnamed_addr #11 {
entry:
  %1 = bitcast i8** %0 to %struct.halide_buffer_t**
  %2 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %1, align 4
  %3 = getelementptr i8*, i8** %0, i32 1
  %4 = load i8*, i8** %3, align 4
  %5 = load i8, i8* %4, align 1
  %6 = getelementptr i8*, i8** %0, i32 2
  %7 = bitcast i8** %6 to %struct.halide_buffer_t**
  %8 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %7, align 4
  %9 = getelementptr i8*, i8** %0, i32 3
  %10 = load i8*, i8** %9, align 4
  %11 = load i8, i8* %10, align 1
  %12 = getelementptr i8*, i8** %0, i32 4
  %13 = bitcast i8** %12 to %struct.halide_buffer_t**
  %14 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %13, align 4
  %15 = getelementptr i8*, i8** %0, i32 5
  %16 = bitcast i8** %15 to i32**
  %17 = load i32*, i32** %16, align 4
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr i8*, i8** %0, i32 6
  %20 = bitcast i8** %19 to i32**
  %21 = load i32*, i32** %20, align 4
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr i8*, i8** %0, i32 7
  %24 = bitcast i8** %23 to i32**
  %25 = load i32*, i32** %24, align 4
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr i8*, i8** %0, i32 8
  %28 = bitcast i8** %27 to i32**
  %29 = load i32*, i32** %28, align 4
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr i8*, i8** %0, i32 9
  %32 = bitcast i8** %31 to i32**
  %33 = load i32*, i32** %32, align 4
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr i8*, i8** %0, i32 10
  %36 = bitcast i8** %35 to i32**
  %37 = load i32*, i32** %36, align 4
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr i8*, i8** %0, i32 11
  %40 = load i8*, i8** %39, align 4
  %41 = load i8, i8* %40, align 1
  %42 = getelementptr i8*, i8** %0, i32 12
  %43 = load i8*, i8** %42, align 4
  %44 = load i8, i8* %43, align 1
  %45 = getelementptr i8*, i8** %0, i32 13
  %46 = load i8*, i8** %45, align 4
  %47 = load i8, i8* %46, align 1
  %48 = getelementptr i8*, i8** %0, i32 14
  %49 = bitcast i8** %48 to %struct.halide_buffer_t**
  %50 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %49, align 4
  %51 = tail call i32 @conv_nn_hvx128(%struct.halide_buffer_t* %2, i8 %5, %struct.halide_buffer_t* %8, i8 %11, %struct.halide_buffer_t* %14, i32 %18, i32 %22, i32 %26, i32 %30, i32 %34, i32 %38, i8 %41, i8 %44, i8 %47, %struct.halide_buffer_t* %50) #16
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone willreturn
define nonnull %struct.halide_filter_metadata_t* @conv_nn_hvx128_metadata() local_unnamed_addr #12 {
entry:
  ret %struct.halide_filter_metadata_t* @conv_nn_hvx128_metadata_storage
}

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #13

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.masked.store.v32i8.p0v32i8(<32 x i8>, <32 x i8>*, i32 immarg, <32 x i1>) #5

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.0(<128 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl(<32 x i32> %arg.2, <128 x i8> %arg.1, <128 x i8> %arg, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %0
}

declare <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl(<32 x i32>, <128 x i8>, <128 x i8>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.1(<32 x i32> %arg, <1 x i32> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg.2, <32 x i32> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %0, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %2
}

declare <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32>, i32, i32, i32, i32, i32, i32)

declare <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32>, <32 x i32>, i32, i32, i32, i32, i32, i32, i32)

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.2(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.3(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.4(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.5(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.6(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.7(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.8(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.9(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.10(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.11(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.12(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.13(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.14(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.15(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.16(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.17(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.18(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.19(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.20(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.21(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.22(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.23(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.24(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.25(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.26(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

declare <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8>, i32, i32, i32, i32, i32, i32)

declare <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32>, <128 x i8>, <32 x i32>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.27(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.28(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.29(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.30(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.31(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.32(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.33(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.34(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.35(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.36(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.37(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.38(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.39(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.40(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.41(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.42(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.43(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.44(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.45(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.46(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.47(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.48(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.49(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <128 x i8> @hydride.node.conv_nn_hvx_depth4.50(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4, <32 x i32> %arg.5, <32 x i32> %arg.6, <1 x i32> %arg.7, <32 x i32> %arg.8, <32 x i32> %arg.9, <1 x i32> %arg.10, <32 x i32> %arg.11, <32 x i32> %arg.12, <1 x i32> %arg.13, <128 x i16> %arg.14, <128 x i8> %arg.15, <128 x i8> %arg.16) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg.5, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %5, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %8, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %9, <32 x i32> %arg.5, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %12 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %7, <1 x i32> zeroinitializer, <32 x i32> %11, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %6, <32 x i32> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %16 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %15, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %17 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %18 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %16, <32 x i32> %arg, <32 x i32> %17, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %19 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %14, <1 x i32> zeroinitializer, <32 x i32> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %20 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %19, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %21 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %22 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %23 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %22, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %24 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %25 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %23, <32 x i32> %arg, <32 x i32> %24, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %26 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %21, <1 x i32> zeroinitializer, <32 x i32> %25, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %27 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %20, <32 x i32> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %28 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %13, <32 x i32> %27, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %29 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.13, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %30 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %31 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %30, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %32 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %33 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %31, <32 x i32> %arg.11, <32 x i32> %32, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %34 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %29, <1 x i32> zeroinitializer, <32 x i32> %33, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %35 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %34, <32 x i32> %arg.12, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %36 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %37 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %38 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %37, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %39 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %40 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %38, <32 x i32> %arg.11, <32 x i32> %39, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %41 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %36, <1 x i32> zeroinitializer, <32 x i32> %40, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %42 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %35, <32 x i32> %41, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %43 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %44 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %45 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %44, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %46 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %47 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %45, <32 x i32> %arg.8, <32 x i32> %46, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %48 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %43, <1 x i32> zeroinitializer, <32 x i32> %47, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %49 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %48, <32 x i32> %arg.9, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %50 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %51 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %52 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %51, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %53 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %54 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %52, <32 x i32> %arg.8, <32 x i32> %53, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %55 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %50, <1 x i32> zeroinitializer, <32 x i32> %54, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %56 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %49, <32 x i32> %55, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %57 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %42, <32 x i32> %56, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %58 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %28, <64 x i16> %57, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %59 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %58, <128 x i16> %arg.14, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0)
  %60 = tail call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %59, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %61 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %62 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %63 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %62, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %64 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %65 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %63, <32 x i32> %arg.5, <32 x i32> %64, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %66 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %61, <1 x i32> zeroinitializer, <32 x i32> %65, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %67 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %66, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %68 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %69 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %70 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %69, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %71 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %72 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %70, <32 x i32> %arg.5, <32 x i32> %71, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %73 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %68, <1 x i32> zeroinitializer, <32 x i32> %72, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %74 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %67, <32 x i32> %73, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %75 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %76 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %77 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %76, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %78 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %79 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %77, <32 x i32> %arg, <32 x i32> %78, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %80 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %75, <1 x i32> zeroinitializer, <32 x i32> %79, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %81 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %80, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %82 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %83 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %84 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %83, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %85 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %86 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %84, <32 x i32> %arg, <32 x i32> %85, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %87 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %82, <1 x i32> zeroinitializer, <32 x i32> %86, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %88 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %81, <32 x i32> %87, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %89 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %74, <32 x i32> %88, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %90 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.13, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %91 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %92 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %91, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %93 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %94 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %92, <32 x i32> %arg.11, <32 x i32> %93, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %95 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %90, <1 x i32> zeroinitializer, <32 x i32> %94, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %96 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %95, <32 x i32> %arg.12, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %97 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %98 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %99 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %98, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %100 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %101 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %99, <32 x i32> %arg.11, <32 x i32> %100, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %102 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %97, <1 x i32> zeroinitializer, <32 x i32> %101, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %103 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %96, <32 x i32> %102, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %104 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %105 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %106 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %105, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %107 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %108 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %106, <32 x i32> %arg.8, <32 x i32> %107, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %109 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %104, <1 x i32> zeroinitializer, <32 x i32> %108, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %110 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %109, <32 x i32> %arg.9, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %111 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %112 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %113 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %112, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %114 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %115 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %113, <32 x i32> %arg.8, <32 x i32> %114, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %116 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %111, <1 x i32> zeroinitializer, <32 x i32> %115, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %117 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %110, <32 x i32> %116, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %118 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %103, <32 x i32> %117, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %119 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %89, <64 x i16> %118, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %120 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %119, <128 x i16> %arg.14, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0)
  %121 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl(<128 x i16> %120, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %122 = tail call <128 x i8> @llvm.hydride.hexagon_V6_vpackwuh_sat_128B_dsl(<64 x i16> %60, <64 x i16> %121, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 0, i32 16, i32 1, i32 64, i32 0, i32 16, i32 1, i32 8, i32 0)
  %123 = tail call <128 x i8> @llvm.hydride.hexagon_V6_vminuh_128B_dsl(<128 x i8> %arg.15, <128 x i8> %122, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0)
  %124 = tail call <128 x i8> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl(<128 x i8> %arg.16, <128 x i8> %123, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0)
  ret <128 x i8> %124
}

declare <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64>, <32 x i32>, <32 x i32>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)

declare <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64>, <1 x i64>, <1 x i64>, <32 x i32>, <32 x i32>, <32 x i32>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)

declare <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32>, <1 x i32>, <32 x i32>, i32, i32, i32, i32, i32, i32, i32)

declare <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32>, <32 x i32>, i32, i32, i32, i32, i32, i32)

declare <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16>, <32 x i32>, i32, i32, i32, i32, i32, i32, i32)

declare <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32>, <32 x i32>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)

declare <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16>, <64 x i16>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)

declare <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16>, <128 x i16>, i32, i32, i32, i32, i32, i32, i32)

declare <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16>, i32, i32, i32, i32, i32, i32, i32)

declare <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl(<128 x i16>, i32, i32, i32, i32, i32, i32)

declare <128 x i8> @llvm.hydride.hexagon_V6_vpackwuh_sat_128B_dsl(<64 x i16>, <64 x i16>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)

declare <128 x i8> @llvm.hydride.hexagon_V6_vminuh_128B_dsl(<128 x i8>, <128 x i8>, i32, i32, i32, i32, i32, i32, i32)

declare <128 x i8> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl(<128 x i8>, <128 x i8>, i32, i32, i32, i32, i32, i32, i32)

define <128 x i8> @hydride.node.conv_nn_hvx_depth4.51(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4, <32 x i32> %arg.5, <32 x i32> %arg.6, <1 x i32> %arg.7, <32 x i32> %arg.8, <32 x i32> %arg.9, <1 x i32> %arg.10, <32 x i32> %arg.11, <32 x i32> %arg.12, <1 x i32> %arg.13, <128 x i16> %arg.14, <128 x i8> %arg.15, <128 x i8> %arg.16) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg.5, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %5, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %8, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %9, <32 x i32> %arg.5, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %12 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %7, <1 x i32> zeroinitializer, <32 x i32> %11, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %6, <32 x i32> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %16 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %15, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %17 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %18 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %16, <32 x i32> %arg, <32 x i32> %17, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %19 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %14, <1 x i32> zeroinitializer, <32 x i32> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %20 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %19, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %21 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %22 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %23 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %22, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %24 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %25 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %23, <32 x i32> %arg, <32 x i32> %24, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %26 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %21, <1 x i32> zeroinitializer, <32 x i32> %25, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %27 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %20, <32 x i32> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %28 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %13, <32 x i32> %27, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %29 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.13, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %30 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %31 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %30, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %32 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %33 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %31, <32 x i32> %arg.11, <32 x i32> %32, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %34 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %29, <1 x i32> zeroinitializer, <32 x i32> %33, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %35 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %34, <32 x i32> %arg.12, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %36 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %37 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %38 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %37, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %39 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %40 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %38, <32 x i32> %arg.11, <32 x i32> %39, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %41 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %36, <1 x i32> zeroinitializer, <32 x i32> %40, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %42 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %35, <32 x i32> %41, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %43 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %44 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %45 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %44, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %46 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %47 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %45, <32 x i32> %arg.8, <32 x i32> %46, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %48 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %43, <1 x i32> zeroinitializer, <32 x i32> %47, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %49 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %48, <32 x i32> %arg.9, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %50 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %51 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %52 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %51, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %53 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %54 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %52, <32 x i32> %arg.8, <32 x i32> %53, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %55 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %50, <1 x i32> zeroinitializer, <32 x i32> %54, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %56 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %49, <32 x i32> %55, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %57 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %42, <32 x i32> %56, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %58 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %28, <64 x i16> %57, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %59 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %58, <128 x i16> %arg.14, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0)
  %60 = tail call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %59, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %61 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %62 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %63 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %62, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %64 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %65 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %63, <32 x i32> %arg.5, <32 x i32> %64, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %66 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %61, <1 x i32> zeroinitializer, <32 x i32> %65, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %67 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %66, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %68 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %69 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %70 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %69, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %71 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %72 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %70, <32 x i32> %arg.5, <32 x i32> %71, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %73 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %68, <1 x i32> zeroinitializer, <32 x i32> %72, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %74 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %67, <32 x i32> %73, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %75 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %76 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %77 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %76, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %78 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %79 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %77, <32 x i32> %arg, <32 x i32> %78, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %80 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %75, <1 x i32> zeroinitializer, <32 x i32> %79, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %81 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %80, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %82 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %83 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %84 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %83, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %85 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %86 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %84, <32 x i32> %arg, <32 x i32> %85, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %87 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %82, <1 x i32> zeroinitializer, <32 x i32> %86, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %88 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %81, <32 x i32> %87, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %89 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %74, <32 x i32> %88, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %90 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.13, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %91 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %92 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %91, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %93 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %94 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %92, <32 x i32> %arg.11, <32 x i32> %93, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %95 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %90, <1 x i32> zeroinitializer, <32 x i32> %94, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %96 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %95, <32 x i32> %arg.12, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %97 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %98 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %99 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %98, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %100 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %101 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %99, <32 x i32> %arg.11, <32 x i32> %100, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %102 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %97, <1 x i32> zeroinitializer, <32 x i32> %101, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %103 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %96, <32 x i32> %102, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %104 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %105 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %106 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %105, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %107 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %108 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %106, <32 x i32> %arg.8, <32 x i32> %107, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %109 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %104, <1 x i32> zeroinitializer, <32 x i32> %108, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %110 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %109, <32 x i32> %arg.9, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %111 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %112 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %113 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %112, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %114 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %115 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %113, <32 x i32> %arg.8, <32 x i32> %114, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %116 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %111, <1 x i32> zeroinitializer, <32 x i32> %115, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %117 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %110, <32 x i32> %116, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %118 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %103, <32 x i32> %117, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %119 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %89, <64 x i16> %118, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %120 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %119, <128 x i16> %arg.14, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0)
  %121 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl(<128 x i16> %120, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %122 = tail call <128 x i8> @llvm.hydride.hexagon_V6_vpackwuh_sat_128B_dsl(<64 x i16> %60, <64 x i16> %121, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 0, i32 16, i32 1, i32 64, i32 0, i32 16, i32 1, i32 8, i32 0)
  %123 = tail call <128 x i8> @llvm.hydride.hexagon_V6_vminuh_128B_dsl(<128 x i8> %arg.15, <128 x i8> %122, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0)
  %124 = tail call <128 x i8> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl(<128 x i8> %arg.16, <128 x i8> %123, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0)
  ret <128 x i8> %124
}

define <128 x i8> @hydride.node.conv_nn_hvx_depth4.52(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4, <32 x i32> %arg.5, <32 x i32> %arg.6, <1 x i32> %arg.7, <32 x i32> %arg.8, <32 x i32> %arg.9, <1 x i32> %arg.10, <32 x i32> %arg.11, <32 x i32> %arg.12, <1 x i32> %arg.13, <128 x i16> %arg.14, <128 x i8> %arg.15, <128 x i8> %arg.16) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg.5, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %5, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %8, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %9, <32 x i32> %arg.5, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %12 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %7, <1 x i32> zeroinitializer, <32 x i32> %11, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %6, <32 x i32> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %16 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %15, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %17 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %18 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %16, <32 x i32> %arg, <32 x i32> %17, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %19 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %14, <1 x i32> zeroinitializer, <32 x i32> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %20 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %19, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %21 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %22 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %23 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %22, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %24 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %25 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %23, <32 x i32> %arg, <32 x i32> %24, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %26 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %21, <1 x i32> zeroinitializer, <32 x i32> %25, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %27 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %20, <32 x i32> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %28 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %13, <32 x i32> %27, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %29 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.13, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %30 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %31 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %30, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %32 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %33 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %31, <32 x i32> %arg.11, <32 x i32> %32, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %34 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %29, <1 x i32> zeroinitializer, <32 x i32> %33, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %35 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %34, <32 x i32> %arg.12, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %36 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %37 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %38 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %37, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %39 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %40 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %38, <32 x i32> %arg.11, <32 x i32> %39, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %41 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %36, <1 x i32> zeroinitializer, <32 x i32> %40, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %42 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %35, <32 x i32> %41, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %43 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %44 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %45 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %44, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %46 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %47 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %45, <32 x i32> %arg.8, <32 x i32> %46, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %48 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %43, <1 x i32> zeroinitializer, <32 x i32> %47, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %49 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %48, <32 x i32> %arg.9, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %50 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %51 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %52 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %51, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %53 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %54 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %52, <32 x i32> %arg.8, <32 x i32> %53, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %55 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %50, <1 x i32> zeroinitializer, <32 x i32> %54, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %56 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %49, <32 x i32> %55, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %57 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %42, <32 x i32> %56, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %58 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %28, <64 x i16> %57, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %59 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %58, <128 x i16> %arg.14, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0)
  %60 = tail call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %59, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %61 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %62 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %63 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %62, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %64 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %65 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %63, <32 x i32> %arg.5, <32 x i32> %64, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %66 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %61, <1 x i32> zeroinitializer, <32 x i32> %65, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %67 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %66, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %68 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %69 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %70 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %69, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %71 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %72 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %70, <32 x i32> %arg.5, <32 x i32> %71, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %73 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %68, <1 x i32> zeroinitializer, <32 x i32> %72, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %74 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %67, <32 x i32> %73, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %75 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %76 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %77 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %76, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %78 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %79 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %77, <32 x i32> %arg, <32 x i32> %78, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %80 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %75, <1 x i32> zeroinitializer, <32 x i32> %79, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %81 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %80, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %82 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %83 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %84 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %83, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %85 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %86 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %84, <32 x i32> %arg, <32 x i32> %85, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %87 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %82, <1 x i32> zeroinitializer, <32 x i32> %86, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %88 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %81, <32 x i32> %87, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %89 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %74, <32 x i32> %88, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %90 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.13, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %91 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %92 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %91, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %93 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %94 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %92, <32 x i32> %arg.11, <32 x i32> %93, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %95 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %90, <1 x i32> zeroinitializer, <32 x i32> %94, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %96 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %95, <32 x i32> %arg.12, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %97 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %98 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %99 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %98, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %100 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %101 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %99, <32 x i32> %arg.11, <32 x i32> %100, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %102 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %97, <1 x i32> zeroinitializer, <32 x i32> %101, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %103 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %96, <32 x i32> %102, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %104 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %105 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %106 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %105, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %107 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %108 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %106, <32 x i32> %arg.8, <32 x i32> %107, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %109 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %104, <1 x i32> zeroinitializer, <32 x i32> %108, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %110 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %109, <32 x i32> %arg.9, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %111 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %112 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %113 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %112, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %114 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %115 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %113, <32 x i32> %arg.8, <32 x i32> %114, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %116 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %111, <1 x i32> zeroinitializer, <32 x i32> %115, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %117 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %110, <32 x i32> %116, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %118 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %103, <32 x i32> %117, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %119 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %89, <64 x i16> %118, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %120 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %119, <128 x i16> %arg.14, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0)
  %121 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl(<128 x i16> %120, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %122 = tail call <128 x i8> @llvm.hydride.hexagon_V6_vpackwuh_sat_128B_dsl(<64 x i16> %60, <64 x i16> %121, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 0, i32 16, i32 1, i32 64, i32 0, i32 16, i32 1, i32 8, i32 0)
  %123 = tail call <128 x i8> @llvm.hydride.hexagon_V6_vminuh_128B_dsl(<128 x i8> %arg.15, <128 x i8> %122, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0)
  %124 = tail call <128 x i8> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl(<128 x i8> %arg.16, <128 x i8> %123, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0)
  ret <128 x i8> %124
}

define <128 x i8> @hydride.node.conv_nn_hvx_depth4.53(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4, <32 x i32> %arg.5, <32 x i32> %arg.6, <1 x i32> %arg.7, <32 x i32> %arg.8, <32 x i32> %arg.9, <1 x i32> %arg.10, <32 x i32> %arg.11, <32 x i32> %arg.12, <1 x i32> %arg.13, <128 x i16> %arg.14, <128 x i8> %arg.15, <128 x i8> %arg.16) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg.5, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %5, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %8, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %9, <32 x i32> %arg.5, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %12 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %7, <1 x i32> zeroinitializer, <32 x i32> %11, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %6, <32 x i32> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %16 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %15, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %17 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %18 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %16, <32 x i32> %arg, <32 x i32> %17, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %19 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %14, <1 x i32> zeroinitializer, <32 x i32> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %20 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %19, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %21 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %22 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %23 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %22, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %24 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %25 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %23, <32 x i32> %arg, <32 x i32> %24, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %26 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %21, <1 x i32> zeroinitializer, <32 x i32> %25, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %27 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %20, <32 x i32> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %28 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %13, <32 x i32> %27, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %29 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.13, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %30 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %31 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %30, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %32 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %33 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %31, <32 x i32> %arg.11, <32 x i32> %32, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %34 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %29, <1 x i32> zeroinitializer, <32 x i32> %33, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %35 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %34, <32 x i32> %arg.12, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %36 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %37 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %38 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %37, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %39 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %40 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %38, <32 x i32> %arg.11, <32 x i32> %39, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %41 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %36, <1 x i32> zeroinitializer, <32 x i32> %40, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %42 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %35, <32 x i32> %41, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %43 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %44 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %45 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %44, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %46 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %47 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %45, <32 x i32> %arg.8, <32 x i32> %46, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %48 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %43, <1 x i32> zeroinitializer, <32 x i32> %47, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %49 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %48, <32 x i32> %arg.9, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %50 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %51 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %52 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %51, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %53 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %54 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %52, <32 x i32> %arg.8, <32 x i32> %53, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %55 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %50, <1 x i32> zeroinitializer, <32 x i32> %54, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %56 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %49, <32 x i32> %55, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %57 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %42, <32 x i32> %56, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %58 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %28, <64 x i16> %57, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %59 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %58, <128 x i16> %arg.14, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0)
  %60 = tail call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %59, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %61 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %62 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %63 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %62, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %64 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %65 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %63, <32 x i32> %arg.5, <32 x i32> %64, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %66 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %61, <1 x i32> zeroinitializer, <32 x i32> %65, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %67 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %66, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %68 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %69 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %70 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %69, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %71 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %72 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %70, <32 x i32> %arg.5, <32 x i32> %71, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %73 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %68, <1 x i32> zeroinitializer, <32 x i32> %72, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %74 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %67, <32 x i32> %73, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %75 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %76 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %77 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %76, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %78 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %79 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %77, <32 x i32> %arg, <32 x i32> %78, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %80 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %75, <1 x i32> zeroinitializer, <32 x i32> %79, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %81 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %80, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %82 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %83 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %84 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %83, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %85 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %86 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %84, <32 x i32> %arg, <32 x i32> %85, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %87 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %82, <1 x i32> zeroinitializer, <32 x i32> %86, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %88 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %81, <32 x i32> %87, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %89 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %74, <32 x i32> %88, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %90 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.13, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %91 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %92 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %91, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %93 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %94 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %92, <32 x i32> %arg.11, <32 x i32> %93, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %95 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %90, <1 x i32> zeroinitializer, <32 x i32> %94, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %96 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %95, <32 x i32> %arg.12, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %97 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %98 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %99 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %98, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %100 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %101 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %99, <32 x i32> %arg.11, <32 x i32> %100, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %102 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %97, <1 x i32> zeroinitializer, <32 x i32> %101, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %103 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %96, <32 x i32> %102, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %104 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %105 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %106 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %105, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %107 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %108 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %106, <32 x i32> %arg.8, <32 x i32> %107, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %109 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %104, <1 x i32> zeroinitializer, <32 x i32> %108, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %110 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %109, <32 x i32> %arg.9, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %111 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %112 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %113 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %112, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %114 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %115 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %113, <32 x i32> %arg.8, <32 x i32> %114, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %116 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %111, <1 x i32> zeroinitializer, <32 x i32> %115, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %117 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %110, <32 x i32> %116, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %118 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %103, <32 x i32> %117, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %119 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %89, <64 x i16> %118, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %120 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %119, <128 x i16> %arg.14, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0)
  %121 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl(<128 x i16> %120, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %122 = tail call <128 x i8> @llvm.hydride.hexagon_V6_vpackwuh_sat_128B_dsl(<64 x i16> %60, <64 x i16> %121, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 0, i32 16, i32 1, i32 64, i32 0, i32 16, i32 1, i32 8, i32 0)
  %123 = tail call <128 x i8> @llvm.hydride.hexagon_V6_vminuh_128B_dsl(<128 x i8> %arg.15, <128 x i8> %122, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0)
  %124 = tail call <128 x i8> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl(<128 x i8> %arg.16, <128 x i8> %123, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0)
  ret <128 x i8> %124
}

define <128 x i8> @hydride.node.conv_nn_hvx_depth4.54(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4, <32 x i32> %arg.5, <32 x i32> %arg.6, <1 x i32> %arg.7, <32 x i32> %arg.8, <32 x i32> %arg.9, <1 x i32> %arg.10, <32 x i32> %arg.11, <32 x i32> %arg.12, <1 x i32> %arg.13, <128 x i16> %arg.14, <128 x i8> %arg.15, <128 x i8> %arg.16) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg.5, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %5, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %8, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %9, <32 x i32> %arg.5, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %12 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %7, <1 x i32> zeroinitializer, <32 x i32> %11, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %6, <32 x i32> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %16 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %15, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %17 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %18 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %16, <32 x i32> %arg, <32 x i32> %17, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %19 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %14, <1 x i32> zeroinitializer, <32 x i32> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %20 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %19, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %21 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %22 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %23 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %22, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %24 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %25 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %23, <32 x i32> %arg, <32 x i32> %24, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %26 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %21, <1 x i32> zeroinitializer, <32 x i32> %25, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %27 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %20, <32 x i32> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %28 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %13, <32 x i32> %27, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %29 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.13, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %30 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %31 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %30, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %32 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %33 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %31, <32 x i32> %arg.11, <32 x i32> %32, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %34 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %29, <1 x i32> zeroinitializer, <32 x i32> %33, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %35 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %34, <32 x i32> %arg.12, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %36 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %37 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %38 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %37, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %39 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %40 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %38, <32 x i32> %arg.11, <32 x i32> %39, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %41 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %36, <1 x i32> zeroinitializer, <32 x i32> %40, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %42 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %35, <32 x i32> %41, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %43 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %44 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %45 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %44, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %46 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %47 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %45, <32 x i32> %arg.8, <32 x i32> %46, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %48 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %43, <1 x i32> zeroinitializer, <32 x i32> %47, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %49 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %48, <32 x i32> %arg.9, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %50 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %51 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %52 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %51, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %53 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %54 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %52, <32 x i32> %arg.8, <32 x i32> %53, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %55 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %50, <1 x i32> zeroinitializer, <32 x i32> %54, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %56 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %49, <32 x i32> %55, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %57 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %42, <32 x i32> %56, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %58 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %28, <64 x i16> %57, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %59 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %58, <128 x i16> %arg.14, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0)
  %60 = tail call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %59, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %61 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %62 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %63 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %62, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %64 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %65 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %63, <32 x i32> %arg.5, <32 x i32> %64, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %66 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %61, <1 x i32> zeroinitializer, <32 x i32> %65, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %67 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %66, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %68 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %69 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %70 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %69, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %71 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %72 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %70, <32 x i32> %arg.5, <32 x i32> %71, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %73 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %68, <1 x i32> zeroinitializer, <32 x i32> %72, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %74 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %67, <32 x i32> %73, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %75 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %76 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %77 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %76, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %78 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %79 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %77, <32 x i32> %arg, <32 x i32> %78, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %80 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %75, <1 x i32> zeroinitializer, <32 x i32> %79, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %81 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %80, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %82 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %83 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %84 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %83, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %85 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %86 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %84, <32 x i32> %arg, <32 x i32> %85, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %87 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %82, <1 x i32> zeroinitializer, <32 x i32> %86, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %88 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %81, <32 x i32> %87, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %89 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %74, <32 x i32> %88, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %90 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.13, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %91 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %92 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %91, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %93 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %94 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %92, <32 x i32> %arg.11, <32 x i32> %93, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %95 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %90, <1 x i32> zeroinitializer, <32 x i32> %94, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %96 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %95, <32 x i32> %arg.12, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %97 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %98 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %99 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %98, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %100 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %101 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %99, <32 x i32> %arg.11, <32 x i32> %100, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %102 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %97, <1 x i32> zeroinitializer, <32 x i32> %101, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %103 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %96, <32 x i32> %102, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %104 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %105 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %106 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %105, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %107 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %108 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %106, <32 x i32> %arg.8, <32 x i32> %107, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %109 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %104, <1 x i32> zeroinitializer, <32 x i32> %108, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %110 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %109, <32 x i32> %arg.9, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %111 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %112 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %113 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %112, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %114 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %115 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %113, <32 x i32> %arg.8, <32 x i32> %114, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %116 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %111, <1 x i32> zeroinitializer, <32 x i32> %115, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %117 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %110, <32 x i32> %116, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %118 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %103, <32 x i32> %117, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %119 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %89, <64 x i16> %118, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %120 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %119, <128 x i16> %arg.14, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0)
  %121 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl(<128 x i16> %120, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %122 = tail call <128 x i8> @llvm.hydride.hexagon_V6_vpackwuh_sat_128B_dsl(<64 x i16> %60, <64 x i16> %121, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 0, i32 16, i32 1, i32 64, i32 0, i32 16, i32 1, i32 8, i32 0)
  %123 = tail call <128 x i8> @llvm.hydride.hexagon_V6_vminuh_128B_dsl(<128 x i8> %arg.15, <128 x i8> %122, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0)
  %124 = tail call <128 x i8> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl(<128 x i8> %arg.16, <128 x i8> %123, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0)
  ret <128 x i8> %124
}

define <128 x i8> @hydride.node.conv_nn_hvx_depth4.55(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4, <32 x i32> %arg.5, <32 x i32> %arg.6, <1 x i32> %arg.7, <32 x i32> %arg.8, <32 x i32> %arg.9, <1 x i32> %arg.10, <32 x i32> %arg.11, <32 x i32> %arg.12, <1 x i32> %arg.13, <128 x i16> %arg.14, <128 x i8> %arg.15, <128 x i8> %arg.16) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg.5, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %5, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %8, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %9, <32 x i32> %arg.5, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %12 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %7, <1 x i32> zeroinitializer, <32 x i32> %11, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %6, <32 x i32> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %16 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %15, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %17 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %18 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %16, <32 x i32> %arg, <32 x i32> %17, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %19 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %14, <1 x i32> zeroinitializer, <32 x i32> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %20 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %19, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %21 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %22 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %23 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %22, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %24 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %25 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %23, <32 x i32> %arg, <32 x i32> %24, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %26 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %21, <1 x i32> zeroinitializer, <32 x i32> %25, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %27 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %20, <32 x i32> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %28 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %13, <32 x i32> %27, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %29 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.13, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %30 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %31 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %30, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %32 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %33 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %31, <32 x i32> %arg.11, <32 x i32> %32, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %34 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %29, <1 x i32> zeroinitializer, <32 x i32> %33, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %35 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %34, <32 x i32> %arg.12, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %36 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %37 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %38 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %37, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %39 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %40 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %38, <32 x i32> %arg.11, <32 x i32> %39, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %41 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %36, <1 x i32> zeroinitializer, <32 x i32> %40, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %42 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %35, <32 x i32> %41, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %43 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %44 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %45 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %44, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %46 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %47 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %45, <32 x i32> %arg.8, <32 x i32> %46, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %48 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %43, <1 x i32> zeroinitializer, <32 x i32> %47, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %49 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %48, <32 x i32> %arg.9, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %50 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %51 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %52 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %51, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %53 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %54 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %52, <32 x i32> %arg.8, <32 x i32> %53, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %55 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %50, <1 x i32> zeroinitializer, <32 x i32> %54, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %56 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %49, <32 x i32> %55, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %57 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %42, <32 x i32> %56, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %58 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %28, <64 x i16> %57, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %59 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %58, <128 x i16> %arg.14, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0)
  %60 = tail call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %59, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %61 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %62 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %63 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %62, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %64 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %65 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %63, <32 x i32> %arg.5, <32 x i32> %64, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %66 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %61, <1 x i32> zeroinitializer, <32 x i32> %65, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %67 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %66, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %68 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %69 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %70 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %69, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %71 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %72 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %70, <32 x i32> %arg.5, <32 x i32> %71, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %73 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %68, <1 x i32> zeroinitializer, <32 x i32> %72, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %74 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %67, <32 x i32> %73, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %75 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %76 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %77 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %76, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %78 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %79 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %77, <32 x i32> %arg, <32 x i32> %78, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %80 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %75, <1 x i32> zeroinitializer, <32 x i32> %79, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %81 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %80, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %82 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %83 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %84 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %83, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %85 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %86 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %84, <32 x i32> %arg, <32 x i32> %85, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %87 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %82, <1 x i32> zeroinitializer, <32 x i32> %86, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %88 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %81, <32 x i32> %87, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %89 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %74, <32 x i32> %88, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %90 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.13, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %91 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %92 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %91, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %93 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %94 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %92, <32 x i32> %arg.11, <32 x i32> %93, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %95 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %90, <1 x i32> zeroinitializer, <32 x i32> %94, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %96 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %95, <32 x i32> %arg.12, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %97 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %98 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %99 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %98, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %100 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %101 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %99, <32 x i32> %arg.11, <32 x i32> %100, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %102 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %97, <1 x i32> zeroinitializer, <32 x i32> %101, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %103 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %96, <32 x i32> %102, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %104 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %105 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %106 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %105, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %107 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %108 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %106, <32 x i32> %arg.8, <32 x i32> %107, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %109 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %104, <1 x i32> zeroinitializer, <32 x i32> %108, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %110 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %109, <32 x i32> %arg.9, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %111 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %112 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %113 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %112, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %114 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %115 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %113, <32 x i32> %arg.8, <32 x i32> %114, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %116 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %111, <1 x i32> zeroinitializer, <32 x i32> %115, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %117 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %110, <32 x i32> %116, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %118 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %103, <32 x i32> %117, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %119 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %89, <64 x i16> %118, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %120 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %119, <128 x i16> %arg.14, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0)
  %121 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl(<128 x i16> %120, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %122 = tail call <128 x i8> @llvm.hydride.hexagon_V6_vpackwuh_sat_128B_dsl(<64 x i16> %60, <64 x i16> %121, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 0, i32 16, i32 1, i32 64, i32 0, i32 16, i32 1, i32 8, i32 0)
  %123 = tail call <128 x i8> @llvm.hydride.hexagon_V6_vminuh_128B_dsl(<128 x i8> %arg.15, <128 x i8> %122, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0)
  %124 = tail call <128 x i8> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl(<128 x i8> %arg.16, <128 x i8> %123, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0)
  ret <128 x i8> %124
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.56(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.57(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.58(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.59(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.60(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.61(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.62(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.63(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.64(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.65(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.66(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.67(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.68(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.69(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.70(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.71(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.72(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.73(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.74(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.75(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.76(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.77(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.78(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.79(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.80(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.81(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.82(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.83(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.84(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.85(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.86(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.87(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <64 x i16> @hydride.node.conv_nn_hvx_depth4.88(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4, <32 x i32> %arg.5, <32 x i32> %arg.6, <1 x i32> %arg.7, <64 x i16> %arg.8) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %16 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %15, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %17 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %18 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %16, <32 x i32> %arg.5, <32 x i32> %17, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %19 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %14, <1 x i32> zeroinitializer, <32 x i32> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %20 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %19, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %21 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %22 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %23 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %22, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %24 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %25 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %23, <32 x i32> %arg.5, <32 x i32> %24, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %26 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %21, <1 x i32> zeroinitializer, <32 x i32> %25, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %27 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %20, <32 x i32> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %28 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %13, <32 x i32> %27, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %29 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %28, <64 x i16> %arg.8, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %30 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %29, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %31 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %30, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  ret <64 x i16> %31
}

declare <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32>, <64 x i16>, i32, i32, i32, i32, i32, i32, i32)

declare <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16>, <64 x i16>, i32, i32, i32, i32, i32, i32, i32)

declare <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16>, <64 x i16>, i32, i32, i32, i32, i32, i32, i32)

declare <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16>, <64 x i16>, i32, i32, i32, i32, i32, i32, i32)

define <64 x i16> @hydride.node.conv_nn_hvx_depth4.89(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4, <32 x i32> %arg.5, <32 x i32> %arg.6, <1 x i32> %arg.7, <64 x i16> %arg.8) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %16 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %15, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %17 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %18 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %16, <32 x i32> %arg.5, <32 x i32> %17, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %19 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %14, <1 x i32> zeroinitializer, <32 x i32> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %20 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %19, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %21 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %22 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %23 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %22, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %24 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %25 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %23, <32 x i32> %arg.5, <32 x i32> %24, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %26 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %21, <1 x i32> zeroinitializer, <32 x i32> %25, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %27 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %20, <32 x i32> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %28 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %13, <32 x i32> %27, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %29 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %28, <64 x i16> %arg.8, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %30 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %29, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %31 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %30, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  ret <64 x i16> %31
}

define <64 x i16> @hydride.node.conv_nn_hvx_depth4.90(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4, <32 x i32> %arg.5, <32 x i32> %arg.6, <1 x i32> %arg.7, <64 x i16> %arg.8) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %16 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %15, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %17 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %18 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %16, <32 x i32> %arg.5, <32 x i32> %17, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %19 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %14, <1 x i32> zeroinitializer, <32 x i32> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %20 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %19, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %21 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %22 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %23 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %22, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %24 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %25 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %23, <32 x i32> %arg.5, <32 x i32> %24, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %26 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %21, <1 x i32> zeroinitializer, <32 x i32> %25, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %27 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %20, <32 x i32> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %28 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %13, <32 x i32> %27, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %29 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %28, <64 x i16> %arg.8, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %30 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %29, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %31 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %30, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  ret <64 x i16> %31
}

define <64 x i16> @hydride.node.conv_nn_hvx_depth4.91(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4, <32 x i32> %arg.5, <32 x i32> %arg.6, <1 x i32> %arg.7, <64 x i16> %arg.8) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %16 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %15, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %17 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %18 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %16, <32 x i32> %arg.5, <32 x i32> %17, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %19 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %14, <1 x i32> zeroinitializer, <32 x i32> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %20 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %19, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %21 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %22 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %23 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %22, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %24 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %25 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %23, <32 x i32> %arg.5, <32 x i32> %24, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %26 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %21, <1 x i32> zeroinitializer, <32 x i32> %25, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %27 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %20, <32 x i32> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %28 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %13, <32 x i32> %27, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %29 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %28, <64 x i16> %arg.8, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %30 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %29, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %31 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %30, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  ret <64 x i16> %31
}

define <64 x i16> @hydride.node.conv_nn_hvx_depth4.92(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4, <32 x i32> %arg.5, <32 x i32> %arg.6, <1 x i32> %arg.7, <64 x i16> %arg.8) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %16 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %15, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %17 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %18 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %16, <32 x i32> %arg.5, <32 x i32> %17, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %19 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %14, <1 x i32> zeroinitializer, <32 x i32> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %20 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %19, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %21 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %22 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %23 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %22, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %24 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %25 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %23, <32 x i32> %arg.5, <32 x i32> %24, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %26 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %21, <1 x i32> zeroinitializer, <32 x i32> %25, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %27 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %20, <32 x i32> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %28 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %13, <32 x i32> %27, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %29 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %28, <64 x i16> %arg.8, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %30 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %29, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %31 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %30, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  ret <64 x i16> %31
}

define <64 x i16> @hydride.node.conv_nn_hvx_depth4.93(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4, <32 x i32> %arg.5, <32 x i32> %arg.6, <1 x i32> %arg.7, <64 x i16> %arg.8) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %16 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %15, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %17 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %18 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %16, <32 x i32> %arg.5, <32 x i32> %17, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %19 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %14, <1 x i32> zeroinitializer, <32 x i32> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %20 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %19, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %21 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %22 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %23 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %22, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %24 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %25 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %23, <32 x i32> %arg.5, <32 x i32> %24, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %26 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %21, <1 x i32> zeroinitializer, <32 x i32> %25, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %27 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %20, <32 x i32> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %28 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %13, <32 x i32> %27, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %29 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %28, <64 x i16> %arg.8, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %30 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %29, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %31 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %30, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  ret <64 x i16> %31
}

define <64 x i16> @hydride.node.conv_nn_hvx_depth4.94(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4, <32 x i32> %arg.5, <32 x i32> %arg.6, <1 x i32> %arg.7, <64 x i16> %arg.8) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %16 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %15, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %17 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %18 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %16, <32 x i32> %arg.5, <32 x i32> %17, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %19 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %14, <1 x i32> zeroinitializer, <32 x i32> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %20 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %19, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %21 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %22 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %23 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %22, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %24 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %25 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %23, <32 x i32> %arg.5, <32 x i32> %24, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %26 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %21, <1 x i32> zeroinitializer, <32 x i32> %25, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %27 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %20, <32 x i32> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %28 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %13, <32 x i32> %27, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %29 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %28, <64 x i16> %arg.8, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %30 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %29, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %31 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %30, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  ret <64 x i16> %31
}

define <64 x i16> @hydride.node.conv_nn_hvx_depth4.95(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4, <32 x i32> %arg.5, <32 x i32> %arg.6, <1 x i32> %arg.7, <64 x i16> %arg.8) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %16 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %15, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %17 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %18 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %16, <32 x i32> %arg.5, <32 x i32> %17, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %19 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %14, <1 x i32> zeroinitializer, <32 x i32> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %20 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %19, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %21 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %22 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %23 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %22, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %24 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %25 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %23, <32 x i32> %arg.5, <32 x i32> %24, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %26 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %21, <1 x i32> zeroinitializer, <32 x i32> %25, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %27 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %20, <32 x i32> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %28 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %13, <32 x i32> %27, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %29 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %28, <64 x i16> %arg.8, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %30 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %29, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %31 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %30, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  ret <64 x i16> %31
}

define <64 x i16> @hydride.node.conv_nn_hvx_depth4.96(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4, <32 x i32> %arg.5, <32 x i32> %arg.6, <1 x i32> %arg.7, <64 x i16> %arg.8) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %16 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %15, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %17 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %18 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %16, <32 x i32> %arg.5, <32 x i32> %17, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %19 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %14, <1 x i32> zeroinitializer, <32 x i32> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %20 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %19, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %21 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %22 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %23 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %22, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %24 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %25 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %23, <32 x i32> %arg.5, <32 x i32> %24, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %26 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %21, <1 x i32> zeroinitializer, <32 x i32> %25, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %27 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %20, <32 x i32> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %28 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %13, <32 x i32> %27, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %29 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %28, <64 x i16> %arg.8, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %30 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %29, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %31 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %30, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  ret <64 x i16> %31
}

define <64 x i16> @hydride.node.conv_nn_hvx_depth4.97(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4, <32 x i32> %arg.5, <32 x i32> %arg.6, <1 x i32> %arg.7, <64 x i16> %arg.8) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %16 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %15, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %17 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %18 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %16, <32 x i32> %arg.5, <32 x i32> %17, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %19 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %14, <1 x i32> zeroinitializer, <32 x i32> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %20 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %19, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %21 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %22 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %23 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %22, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %24 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %25 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %23, <32 x i32> %arg.5, <32 x i32> %24, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %26 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %21, <1 x i32> zeroinitializer, <32 x i32> %25, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %27 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %20, <32 x i32> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %28 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %13, <32 x i32> %27, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %29 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %28, <64 x i16> %arg.8, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %30 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %29, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %31 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %30, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  ret <64 x i16> %31
}

define <64 x i16> @hydride.node.conv_nn_hvx_depth4.98(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4, <32 x i32> %arg.5, <32 x i32> %arg.6, <1 x i32> %arg.7, <64 x i16> %arg.8) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %16 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %15, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %17 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %18 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %16, <32 x i32> %arg.5, <32 x i32> %17, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %19 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %14, <1 x i32> zeroinitializer, <32 x i32> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %20 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %19, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %21 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %22 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %23 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %22, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %24 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %25 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %23, <32 x i32> %arg.5, <32 x i32> %24, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %26 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %21, <1 x i32> zeroinitializer, <32 x i32> %25, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %27 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %20, <32 x i32> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %28 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %13, <32 x i32> %27, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %29 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %28, <64 x i16> %arg.8, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %30 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %29, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %31 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %30, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  ret <64 x i16> %31
}

define <64 x i16> @hydride.node.conv_nn_hvx_depth4.99(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4, <32 x i32> %arg.5, <32 x i32> %arg.6, <1 x i32> %arg.7, <64 x i16> %arg.8) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %16 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %15, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %17 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %18 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %16, <32 x i32> %arg.5, <32 x i32> %17, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %19 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %14, <1 x i32> zeroinitializer, <32 x i32> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %20 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %19, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %21 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %22 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %23 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %22, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %24 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %25 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %23, <32 x i32> %arg.5, <32 x i32> %24, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %26 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %21, <1 x i32> zeroinitializer, <32 x i32> %25, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %27 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %20, <32 x i32> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %28 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %13, <32 x i32> %27, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %29 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %28, <64 x i16> %arg.8, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %30 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %29, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %31 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %30, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  ret <64 x i16> %31
}

define <64 x i16> @hydride.node.conv_nn_hvx_depth4.100(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4, <32 x i32> %arg.5, <32 x i32> %arg.6, <1 x i32> %arg.7, <64 x i16> %arg.8) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %16 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %15, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %17 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %18 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %16, <32 x i32> %arg.5, <32 x i32> %17, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %19 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %14, <1 x i32> zeroinitializer, <32 x i32> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %20 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %19, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %21 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %22 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %23 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %22, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %24 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %25 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %23, <32 x i32> %arg.5, <32 x i32> %24, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %26 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %21, <1 x i32> zeroinitializer, <32 x i32> %25, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %27 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %20, <32 x i32> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %28 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %13, <32 x i32> %27, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %29 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %28, <64 x i16> %arg.8, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %30 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %29, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %31 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %30, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  ret <64 x i16> %31
}

define <64 x i16> @hydride.node.conv_nn_hvx_depth4.101(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4, <32 x i32> %arg.5, <32 x i32> %arg.6, <1 x i32> %arg.7, <64 x i16> %arg.8) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %16 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %15, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %17 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %18 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %16, <32 x i32> %arg.5, <32 x i32> %17, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %19 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %14, <1 x i32> zeroinitializer, <32 x i32> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %20 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %19, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %21 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %22 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %23 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %22, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %24 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %25 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %23, <32 x i32> %arg.5, <32 x i32> %24, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %26 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %21, <1 x i32> zeroinitializer, <32 x i32> %25, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %27 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %20, <32 x i32> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %28 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %13, <32 x i32> %27, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %29 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %28, <64 x i16> %arg.8, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %30 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %29, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %31 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %30, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  ret <64 x i16> %31
}

define <64 x i16> @hydride.node.conv_nn_hvx_depth4.102(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4, <32 x i32> %arg.5, <32 x i32> %arg.6, <1 x i32> %arg.7, <64 x i16> %arg.8) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %16 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %15, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %17 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %18 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %16, <32 x i32> %arg.5, <32 x i32> %17, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %19 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %14, <1 x i32> zeroinitializer, <32 x i32> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %20 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %19, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %21 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %22 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %23 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %22, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %24 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %25 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %23, <32 x i32> %arg.5, <32 x i32> %24, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %26 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %21, <1 x i32> zeroinitializer, <32 x i32> %25, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %27 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %20, <32 x i32> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %28 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %13, <32 x i32> %27, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %29 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %28, <64 x i16> %arg.8, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %30 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %29, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %31 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %30, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  ret <64 x i16> %31
}

define <64 x i16> @hydride.node.conv_nn_hvx_depth4.103(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4, <32 x i32> %arg.5, <32 x i32> %arg.6, <1 x i32> %arg.7, <64 x i16> %arg.8) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %16 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %15, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %17 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %18 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %16, <32 x i32> %arg.5, <32 x i32> %17, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %19 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %14, <1 x i32> zeroinitializer, <32 x i32> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %20 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %19, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %21 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %22 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %23 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %22, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %24 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %25 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %23, <32 x i32> %arg.5, <32 x i32> %24, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %26 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %21, <1 x i32> zeroinitializer, <32 x i32> %25, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %27 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %20, <32 x i32> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %28 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %13, <32 x i32> %27, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %29 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.3(<64 x i16> %28, <64 x i16> %arg.8, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %30 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.1(<64 x i16> zeroinitializer, <64 x i16> %29, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  %31 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.1(<64 x i16> <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>, <64 x i16> %30, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 1, i32 0)
  ret <64 x i16> %31
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.104(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.105(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.106(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.107(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.108(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.109(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.110(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.111(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.112(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.113(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.114(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.115(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.116(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.117(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.118(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.119(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.120(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.2(<32 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>, <32 x i32> %13, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.2(<32 x i32> %14, <32 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  ret <32 x i32> %15
}

declare <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.2(<32 x i32>, <32 x i32>, i32, i32, i32, i32, i32, i32, i32)

declare <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.2(<32 x i32>, <32 x i32>, i32, i32, i32, i32, i32, i32, i32)

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.121(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.2(<32 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>, <32 x i32> %13, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.2(<32 x i32> %14, <32 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  ret <32 x i32> %15
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.122(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.2(<32 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>, <32 x i32> %13, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.2(<32 x i32> %14, <32 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  ret <32 x i32> %15
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.123(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.2(<32 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>, <32 x i32> %13, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.2(<32 x i32> %14, <32 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  ret <32 x i32> %15
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.124(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.2(<32 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>, <32 x i32> %13, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.2(<32 x i32> %14, <32 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  ret <32 x i32> %15
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.125(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.2(<32 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>, <32 x i32> %13, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.2(<32 x i32> %14, <32 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  ret <32 x i32> %15
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.126(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.2(<32 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>, <32 x i32> %13, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.2(<32 x i32> %14, <32 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  ret <32 x i32> %15
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.127(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.2(<32 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>, <32 x i32> %13, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.2(<32 x i32> %14, <32 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  ret <32 x i32> %15
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.128(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.129(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.130(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.131(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.132(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.133(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.134(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.135(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <128 x i8> @hydride.node.conv_nn_hvx_depth4.136(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4, <32 x i32> %arg.5, <32 x i32> %arg.6, <1 x i32> %arg.7, <32 x i32> %arg.8, <32 x i32> %arg.9, <1 x i32> %arg.10, <32 x i32> %arg.11, <32 x i32> %arg.12, <1 x i32> %arg.13, <128 x i16> %arg.14, <128 x i8> %arg.15, <128 x i8> %arg.16) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg.5, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %5, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %8, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %9, <32 x i32> %arg.5, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %12 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %7, <1 x i32> zeroinitializer, <32 x i32> %11, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %6, <32 x i32> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %16 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %15, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %17 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %18 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %16, <32 x i32> %arg, <32 x i32> %17, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %19 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %14, <1 x i32> zeroinitializer, <32 x i32> %18, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %20 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %19, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %21 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %22 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %23 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %22, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %24 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %25 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %23, <32 x i32> %arg, <32 x i32> %24, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %26 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %21, <1 x i32> zeroinitializer, <32 x i32> %25, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %27 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %20, <32 x i32> %26, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %28 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %13, <32 x i32> %27, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %29 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.13, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %30 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %31 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %30, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %32 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %33 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %31, <32 x i32> %arg.11, <32 x i32> %32, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %34 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %29, <1 x i32> zeroinitializer, <32 x i32> %33, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %35 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %34, <32 x i32> %arg.12, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %36 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %37 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %38 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %37, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %39 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %40 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %38, <32 x i32> %arg.11, <32 x i32> %39, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %41 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %36, <1 x i32> zeroinitializer, <32 x i32> %40, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %42 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %35, <32 x i32> %41, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %43 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %44 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %45 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %44, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %46 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %47 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %45, <32 x i32> %arg.8, <32 x i32> %46, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %48 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %43, <1 x i32> zeroinitializer, <32 x i32> %47, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %49 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %48, <32 x i32> %arg.9, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %50 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %51 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %52 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %51, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %53 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %54 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %52, <32 x i32> %arg.8, <32 x i32> %53, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %55 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %50, <1 x i32> zeroinitializer, <32 x i32> %54, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %56 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %49, <32 x i32> %55, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %57 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %42, <32 x i32> %56, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %58 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %28, <64 x i16> %57, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %59 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %58, <128 x i16> %arg.14, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0)
  %60 = tail call <64 x i16> @llvm.hydride.hexagon_V6_lo_128B_dsl(<128 x i16> %59, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %61 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.7, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %62 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %63 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %62, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %64 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %65 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %63, <32 x i32> %arg.5, <32 x i32> %64, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %66 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %61, <1 x i32> zeroinitializer, <32 x i32> %65, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %67 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %66, <32 x i32> %arg.6, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %68 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %69 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %70 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.5, <32 x i32> %69, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %71 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %72 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %70, <32 x i32> %arg.5, <32 x i32> %71, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %73 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %68, <1 x i32> zeroinitializer, <32 x i32> %72, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %74 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %67, <32 x i32> %73, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %75 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %76 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %77 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %76, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %78 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %79 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %77, <32 x i32> %arg, <32 x i32> %78, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %80 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %75, <1 x i32> zeroinitializer, <32 x i32> %79, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %81 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %80, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %82 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %83 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %84 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %83, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %85 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %86 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %84, <32 x i32> %arg, <32 x i32> %85, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %87 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %82, <1 x i32> zeroinitializer, <32 x i32> %86, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %88 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %81, <32 x i32> %87, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %89 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %74, <32 x i32> %88, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %90 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.13, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %91 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %92 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %91, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %93 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %94 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %92, <32 x i32> %arg.11, <32 x i32> %93, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %95 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %90, <1 x i32> zeroinitializer, <32 x i32> %94, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %96 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %95, <32 x i32> %arg.12, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %97 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %98 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %99 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.11, <32 x i32> %98, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %100 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %101 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %99, <32 x i32> %arg.11, <32 x i32> %100, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %102 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %97, <1 x i32> zeroinitializer, <32 x i32> %101, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %103 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %96, <32 x i32> %102, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %104 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %105 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %106 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %105, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %107 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %108 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %106, <32 x i32> %arg.8, <32 x i32> %107, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %109 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %104, <1 x i32> zeroinitializer, <32 x i32> %108, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %110 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %109, <32 x i32> %arg.9, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %111 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %112 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %113 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.8, <32 x i32> %112, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %114 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %115 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %113, <32 x i32> %arg.8, <32 x i32> %114, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %116 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %111, <1 x i32> zeroinitializer, <32 x i32> %115, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %117 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl(<64 x i16> %110, <32 x i32> %116, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %118 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vsathub_128B_dsl(<32 x i32> %103, <32 x i32> %117, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 16, i32 1, i32 32, i32 1, i32 1, i32 0)
  %119 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vcombine_128B_dsl(<64 x i16> %89, <64 x i16> %118, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 1024, i32 8, i32 1024, i32 0)
  %120 = tail call <128 x i16> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.1(<128 x i16> %119, <128 x i16> %arg.14, i32 2048, i32 2048, i32 0, i32 2048, i32 16, i32 1, i32 0)
  %121 = tail call <64 x i16> @llvm.hydride.hexagon_V6_vassign_128B_dsl(<128 x i16> %120, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0)
  %122 = tail call <128 x i8> @llvm.hydride.hexagon_V6_vpackwuh_sat_128B_dsl(<64 x i16> %60, <64 x i16> %121, i32 1024, i32 1024, i32 0, i32 512, i32 8, i32 0, i32 512, i32 8, i32 0, i32 16, i32 1, i32 64, i32 0, i32 16, i32 1, i32 8, i32 0)
  %123 = tail call <128 x i8> @llvm.hydride.hexagon_V6_vminuh_128B_dsl(<128 x i8> %arg.15, <128 x i8> %122, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0)
  %124 = tail call <128 x i8> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl(<128 x i8> %arg.16, <128 x i8> %123, i32 1024, i32 1024, i32 0, i32 1024, i32 8, i32 0, i32 0)
  ret <128 x i8> %124
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.137(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.138(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.139(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.2(<32 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>, <32 x i32> %13, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.2(<32 x i32> %14, <32 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  ret <32 x i32> %15
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.140(<32 x i32> %arg, <1 x i32> %arg.1) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vsubh_128B_dsl(<32 x i32> %arg, <32 x i32> %0, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.141(<4 x i8> %arg, <128 x i8> %arg.1, <32 x i32> %arg.2) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl.1(<4 x i8> %arg, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vrmpybv_128B_dsl.1(<32 x i32> %arg.2, <128 x i8> %arg.1, <32 x i32> %0, i32 1024, i32 32, i32 0, i32 32, i32 8, i32 -1, i32 0, i32 0, i32 16, i32 0, i32 0)
  ret <32 x i32> %1
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.142(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <1 x i32> %arg.4) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.2(<32 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>, <32 x i32> %13, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.2(<32 x i32> %14, <32 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  ret <32 x i32> %15
}

define <32 x i32> @hydride.node.conv_nn_hvx_depth4.143(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <32 x i32> %arg.3, <32 x i32> %arg.4, <1 x i32> %arg.5) local_unnamed_addr {
entry:
  %0 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.2, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %1 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %2 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg, <32 x i32> %1, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %3 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %4 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %2, <32 x i32> %arg, <32 x i32> %3, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %5 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %0, <1 x i32> zeroinitializer, <32 x i32> %4, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %6 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.5, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %7 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %8 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyewuh_128B_dsl(<1 x i64> <i64 16>, <32 x i32> %arg.4, <32 x i32> %7, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 0, i32 64, i32 1, i32 0)
  %9 = tail call <32 x i32> @llvm.hydride.hexagon_V6_lvsplatw_128B_dsl(<1 x i32> %arg.1, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 0)
  %10 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmpyowh_rnd_sacc_128B_dsl(<1 x i64> <i64 14>, <1 x i64> <i64 1>, <1 x i64> <i64 1>, <32 x i32> %8, <32 x i32> %arg.4, <32 x i32> %9, i32 1024, i32 1024, i32 0, i32 512, i32 16, i32 32, i32 1, i32 1, i32 -1, i32 -1, i32 1, i32 64, i32 1, i32 64, i32 1, i32 16, i32 0)
  %11 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vasrhv_128B_dsl(<32 x i32> %6, <1 x i32> zeroinitializer, <32 x i32> %10, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %12 = tail call <64 x i16> @llvm.hydride.hexagon_V6_pred_and_128B_dsl(<32 x i32> %11, <32 x i32> %arg.3, i32 1024, i32 1024, i32 0, i32 1024, i32 16, i32 0)
  %13 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vaddhsat_128B_dsl.2(<32 x i32> %5, <64 x i16> %12, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 -1, i32 0)
  %14 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vminuh_128B_dsl.2(<32 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>, <32 x i32> %13, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  %15 = tail call <32 x i32> @llvm.hydride.hexagon_V6_vmaxw_128B_dsl.2(<32 x i32> %14, <32 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>, i32 1024, i32 1024, i32 0, i32 1024, i32 32, i32 1, i32 0)
  ret <32 x i32> %15
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i32(i8* nocapture writeonly, i8* nocapture readonly, i32, i1 immarg) #3

attributes #0 = { nounwind mustprogress "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-builtins" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind willreturn mustprogress "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nosync nounwind willreturn writeonly }
attributes #6 = { alwaysinline nounwind willreturn mustprogress "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind willreturn "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #9 = { nounwind readnone }
attributes #10 = { nounwind "reciprocal-estimates"="none" }
attributes #11 = { nounwind }
attributes #12 = { norecurse nounwind readnone willreturn }
attributes #13 = { nofree nosync nounwind readnone willreturn }
attributes #14 = { nobuiltin nounwind "no-builtins" }
attributes #15 = { nobuiltin "no-builtins" }
attributes #16 = { noinline }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6, !7, !8}
!llvm.ident = !{!9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 2, !"halide_use_soft_float_abi", i32 0}
!3 = !{i32 2, !"halide_mcpu", !"hexagonv66"}
!4 = !{i32 2, !"halide_mattrs", !"+hvx-length128b,+long-calls,+hvxv66"}
!5 = !{i32 2, !"halide_mabi", !""}
!6 = !{i32 2, !"halide_use_pic", i32 1}
!7 = !{i32 2, !"halide_use_large_code_model", i32 0}
!8 = !{i32 2, !"halide_per_instruction_fast_math_flags", i32 0}
!9 = !{!"clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)"}
!10 = !{!11, !11, i64 0}
!11 = !{!"any pointer", !12, i64 0}
!12 = !{!"omnipotent char", !13, i64 0}
!13 = !{!"Simple C++ TBAA"}
!14 = !{!15, !15, i64 0}
!15 = !{!"int", !12, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.mustprogress"}
!18 = !{!19, !19, i64 0}
!19 = !{!"bool", !12, i64 0}
!20 = distinct !{!20, !17}
!21 = !{i8 0, i8 2}
!22 = !{!12, !12, i64 0}
!23 = distinct !{!23, !17}
!24 = !{!25, !25, i64 0}
!25 = !{!"double", !12, i64 0}
!26 = !{!27, !27, i64 0}
!27 = !{!"long long", !12, i64 0}
!28 = distinct !{!28, !17}
!29 = distinct !{!29, !17}
!30 = distinct !{!30, !17}
!31 = distinct !{!31, !32}
!32 = !{!"llvm.loop.unroll.disable"}
!33 = distinct !{!33, !17}
!34 = !{!35, !36, i64 0}
!35 = !{!"_ZTS13halide_type_t", !36, i64 0, !12, i64 1, !37, i64 2}
!36 = !{!"_ZTS18halide_type_code_t", !12, i64 0}
!37 = !{!"short", !12, i64 0}
!38 = !{!35, !12, i64 1}
!39 = !{!35, !37, i64 2}
!40 = !{!41, !27, i64 0}
!41 = !{!"_ZTS15halide_buffer_t", !27, i64 0, !11, i64 8, !11, i64 12, !27, i64 16, !35, i64 24, !15, i64 28, !11, i64 32, !11, i64 36}
!42 = !{!41, !11, i64 8}
!43 = !{!41, !11, i64 12}
!44 = !{!41, !27, i64 16}
!45 = !{!41, !15, i64 28}
!46 = !{!41, !11, i64 32}
!47 = !{!48, !15, i64 0}
!48 = !{!"_ZTS18halide_dimension_t", !15, i64 0, !15, i64 4, !15, i64 8, !15, i64 12}
!49 = !{!48, !15, i64 4}
!50 = !{!48, !15, i64 8}
!51 = distinct !{!51, !17}
!52 = !{!53, !11, i64 0}
!53 = !{!"_ZTS29halide_device_allocation_pool", !11, i64 0, !11, i64 4}
!54 = distinct !{!54, !17}
!55 = !{!53, !11, i64 4}
!56 = distinct !{!56, !17}
!57 = !{!58, !27, i64 0}
!58 = !{!"_ZTSN6Halide7Runtime8Internal11device_copyE", !27, i64 0, !27, i64 8, !27, i64 16, !12, i64 24, !12, i64 152, !12, i64 280, !27, i64 408}
!59 = !{!58, !27, i64 8}
!60 = !{!58, !27, i64 408}
!61 = distinct !{!61, !17}
!62 = !{!58, !27, i64 16}
!63 = distinct !{!63, !32}
!64 = distinct !{!64, !17}
!65 = distinct !{!65, !17}
!66 = distinct !{!66, !32}
!67 = distinct !{!67, !17}
!68 = distinct !{!68, !17}
!69 = distinct !{!69, !17}
!70 = !{i64 0, i64 8, !26, i64 8, i64 8, !26, i64 16, i64 8, !26, i64 24, i64 128, !22, i64 152, i64 128, !22, i64 280, i64 128, !22, i64 408, i64 8, !26}
!71 = !{!72, !11, i64 60}
!72 = !{!"_ZTS25halide_device_interface_t", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !11, i64 48, !11, i64 52, !11, i64 56, !11, i64 60}
!73 = !{!74, !11, i64 24}
!74 = !{!"_ZTS30halide_device_interface_impl_t", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !11, i64 48, !11, i64 52, !11, i64 56, !11, i64 60}
!75 = !{!74, !11, i64 20}
!76 = !{!74, !11, i64 28}
!77 = !{!74, !11, i64 0}
!78 = !{!74, !11, i64 8}
!79 = !{!74, !11, i64 4}
!80 = !{!74, !11, i64 16}
!81 = !{!74, !11, i64 12}
!82 = !{!74, !11, i64 32}
!83 = !{!74, !11, i64 36}
!84 = distinct !{!84, !32}
!85 = distinct !{!85, !32}
!86 = distinct !{!86, !17}
!87 = distinct !{!87, !17}
!88 = !{!74, !11, i64 56}
!89 = !{!74, !11, i64 60}
!90 = !{!74, !11, i64 40}
!91 = !{!74, !11, i64 44}
!92 = !{!74, !11, i64 48}
!93 = !{!74, !11, i64 52}
!94 = !{i32 22, i32 33}
!95 = !{!"branch_weights", i32 0, i32 1073741824}
!96 = !{!"branch_weights", i32 1073741824, i32 0}
!97 = !{!98, !98, i64 0}
!98 = !{!"bias", !99, i64 0}
!99 = !{!"Halide buffer"}
!100 = !{!101, !101, i64 0}
!101 = !{!"bias_im_global_wrapper$0", !99, i64 0}
!102 = distinct !{!102, !32}
!103 = !{!"branch_weights", i32 -2147483648, i32 0}
!104 = !{!105, !105, i64 0}
!105 = !{!"offset_c", !99, i64 0}
!106 = !{!107, !107, i64 0}
!107 = !{!"filter", !99, i64 0}
!108 = !{!109, !109, i64 0}
!109 = !{!"input", !99, i64 0}
!110 = distinct !{!110, !32}
!111 = !{!112, !112, i64 0}
!112 = !{!"output", !99, i64 0}
!113 = distinct !{!113, !32}
!114 = distinct !{!114, !32}
!115 = distinct !{!115, !32}
!116 = distinct !{!116, !32}
!117 = distinct !{!117, !32}
!118 = !{!"branch_weights", i32 -2147483648, i32 -2147483648}
!119 = distinct !{!119, !32}
